{"pr_number": 13214, "pr_title": "LRA participant feature and fat tests", "pr_createdAt": "2020-07-28T15:30:51Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13214", "timeline": [{"oid": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "url": "https://github.com/OpenLiberty/open-liberty/commit/2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "message": "LRA participant feature and fat tests", "committedDate": "2020-07-28T15:15:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4MjMzMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461682330", "bodyText": "Since when does N come after R in the alphabet?", "author": "tevans78", "createdAt": "2020-07-28T15:42:33Z", "path": "dev/cnf/oss_dependencies.maven", "diffHunk": "@@ -481,6 +482,11 @@ org.jboss.resteasy:resteasy-core-spi:4.5.2.Final\n org.jboss.resteasy:resteasy-jaxb-provider:4.5.2.Final\n org.jboss.resteasy:resteasy-servlet-initializer:4.5.2.Final\n org.jboss.resteasy:resteasy-tracing-api:1.0.0.Final\n+org.jboss.narayana.rts:lra-client:5.10.5.Final", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4NDQ4Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461684487", "bodyText": "I think the maven version should be just 1.0-M1\nhttps://repo1.maven.org/maven2/org/eclipse/microprofile/lra/microprofile-lra-api/1.0-M1/microprofile-lra-api-1.0-M1.jar\n... but you could change that in a follow up PR", "author": "tevans78", "createdAt": "2020-07-28T15:45:43Z", "path": "dev/com.ibm.websphere.appserver.features/visibility/private/io.openliberty.org.eclipse.microprofile.lra-1.0.feature", "diffHunk": "@@ -0,0 +1,8 @@\n+-include= ~${workspace}/cnf/resources/bnd/feature.props\n+symbolicName=io.openliberty.org.eclipse.microprofile.lra-1.0\n+singleton=true\n+-bundles=io.openliberty.org.eclipse.microprofile.lra.1.0; location:=\"dev/api/stable/,lib/\"; mavenCoordinates=\"org.eclipse.microprofile.lra:microprofile-lra-api:1.0.0.M1\"", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIwOTMxOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462209319", "bodyText": "In the bnd file, this has to have a dot, as it doesn't seem to be able to handle the dash. I think I also copied this from another .feature file which did similar.\nI'm also not sure what the purpose of that attribute is.", "author": "idlewis", "createdAt": "2020-07-29T10:48:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4NDQ4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzMDk5Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462230993", "bodyText": "Yes, I know about the bnd issue ... but this is a feature file. I think that property is used to generate a pom file for the API jar.", "author": "tevans78", "createdAt": "2020-07-29T11:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4NDQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY4NTQyNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461685425", "bodyText": "This file is named incorrectly and the copyright date should probably be 2020?", "author": "tevans78", "createdAt": "2020-07-28T15:47:02Z", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/mpLRA-1.0/resources/l10n/com.ibm.websphere.appserver.lra-1.0.properties", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MjAzMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461692032", "bodyText": "I'm not sure that this error message is required since FFDC will automatically added. If it is needed then it should be NLS enabled.", "author": "tevans78", "createdAt": "2020-07-28T15:56:03Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/src/io/openliberty/microprofile/lra/internal/LraFilterComponent.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.microprofile.lra.internal;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.jaxrs20.providers.api.JaxRsProviderRegister;\n+\n+import io.narayana.lra.client.NarayanaLRAClient;\n+import io.narayana.lra.filter.ClientLRARequestFilter;\n+import io.narayana.lra.filter.ClientLRAResponseFilter;\n+import io.narayana.lra.filter.ServerLRAFilter;\n+\n+/**\n+ * A declarative services component can be completely POJO based\n+ * (no awareness/use of OSGi services).\n+ *\n+ * OSGi methods (activate/deactivate) should be protected.\n+ */\n+@Component(service = { JaxRsProviderRegister.class })\n+public class LraFilterComponent implements JaxRsProviderRegister {\n+\n+    private static final TraceComponent tc = Tr.register(LraFilterComponent.class);\n+\n+    @Reference\n+    private LraConfig config;\n+\n+    /**\n+     * DS method to activate this component.\n+     * Best practice: this should be a protected method, not public or private\n+     *\n+     * @param properties : Map containing service & config properties\n+     *            populated/provided by config admin\n+     */\n+    @Activate\n+    protected void activate(Map<String, Object> properties) throws LraException {\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+            Tr.event(tc, \"LraFilterComponent activated\", properties);\n+        }\n+        String coordString = \"http://\" + config.getHost() + \":\" + config.getPort() + \"/\" + config.getPath();\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isInfoEnabled()) {\n+            Tr.info(tc, \"Attempting to contact coordinator at \" + coordString);\n+        }\n+        try {\n+            URI coord = new URI(coordString);\n+            NarayanaLRAClient.setDefaultCoordinatorEndpoint(coord);\n+        } catch (URISyntaxException e) {\n+            Tr.error(tc, \"Invalid LRA coordinator URI: '\" + coordString + \"'\");\n+            throw new LraException(Tr.formatMessage(tc, \"LRA_INVALID_COORDINATOR_URI.CWMRX5000E\"), e);\n+        }\n+\n+    }\n+\n+    /**\n+     * DS method to deactivate this component.\n+     * Best practice: this should be a protected method, not public or private\n+     *\n+     * @param reason int representation of reason the component is stopping\n+     */\n+    protected void deactivate(int reason) {\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+            Tr.event(tc, \"SampleComponent deactivated, reason=\" + reason);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public void installProvider(boolean clientSide, List<Object> providers, Set<String> features) {\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+            Tr.event(tc, \"Registering LRA filters\");\n+        }\n+\n+        if (clientSide) {\n+            if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+                Tr.event(tc, \"Registering client side filters\");\n+            }\n+            ClientLRARequestFilter requestFilter = new ClientLRARequestFilter();\n+            providers.add(requestFilter);\n+            ClientLRAResponseFilter responseFilter = new ClientLRAResponseFilter();\n+            providers.add(responseFilter);\n+        } else {\n+            if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+                Tr.event(tc, \"Registering serverside side filters\");\n+            }\n+            try {\n+                // Rather unhelpfully, the ServerLRAFilter constructor throws 'Exception'. There isn't much we can do with\n+                // that. Re-throwing should prevent the servlet being initialized, which is probably better than swallowing\n+                // the exception\n+                providers.add(new ServerLRAFilter());\n+            } catch (Exception e) {\n+                Tr.error(tc, \"Exception during registration of LRA filters\", e);", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3MTM2MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462271360", "bodyText": "Again, I don't think I'm adding anything useful, so I'll remove it", "author": "idlewis", "createdAt": "2020-07-29T12:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MjAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NDM0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461694343", "bodyText": "is MP Config 1.3 correct? Shouldn't it be at least 1.4?", "author": "tevans78", "createdAt": "2020-07-28T15:59:27Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal_fat_tck/publish/servers/LRATCKServer/server.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+    Copyright (c) 2020 IBM Corporation and others.\n+    All rights reserved. This program and the accompanying materials\n+    are made available under the terms of the Eclipse Public License v1.0\n+    which accompanies this distribution, and is available at\n+    http://www.eclipse.org/legal/epl-v10.html\n+   \n+    Contributors:\n+        IBM Corporation - initial API and implementation\n+ -->\n+<server>\n+   <featureManager>\n+        <feature>mpLRA-1.0</feature>\n+        <feature>cdi-2.0</feature>\n+        <feature>jaxrs-2.1</feature>\n+        <feature>mpConfig-1.3</feature>", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NzI1OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461697258", "bodyText": "Actually? Is MP Config needed at all?", "author": "tevans78", "createdAt": "2020-07-28T16:03:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NDM0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzNzc5Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462337793", "bodyText": "yes mpconfig is needed, and the pom for the tck artifacts on maven specifies 1.3, so it is probably correct to use it here", "author": "idlewis", "createdAt": "2020-07-29T14:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NDM0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NDU5NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461694595", "bodyText": "Similarly, wouldn't this be 2.3?", "author": "tevans78", "createdAt": "2020-07-28T15:59:50Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal_fat_tck/publish/servers/LRATCKServer/server.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+    Copyright (c) 2020 IBM Corporation and others.\n+    All rights reserved. This program and the accompanying materials\n+    are made available under the terms of the Eclipse Public License v1.0\n+    which accompanies this distribution, and is available at\n+    http://www.eclipse.org/legal/epl-v10.html\n+   \n+    Contributors:\n+        IBM Corporation - initial API and implementation\n+ -->\n+<server>\n+   <featureManager>\n+        <feature>mpLRA-1.0</feature>\n+        <feature>cdi-2.0</feature>\n+        <feature>jaxrs-2.1</feature>\n+        <feature>mpConfig-1.3</feature>\n+        <feature>mpMetrics-2.2</feature>", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NjAzMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461696030", "bodyText": "Wouldn't this be version 5.10.5?", "author": "tevans78", "createdAt": "2020-07-28T16:01:47Z", "path": "dev/io.openliberty.org.jboss.narayana.rts/bnd.bnd", "diffHunk": "@@ -0,0 +1,37 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#    IBM Corporation \n+# This wraps the external JAR.\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/rejar.props\n+\n+bVersion=1.0\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+Bundle-SymbolicName: io.openliberty.org.jboss.narayana.rts; singleton:=true\n+                     \n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.8))\"\n+\n+# We will whittle this down once it is working\n+Export-Package: \\\n+  io.narayana.lra.*; version=1.0, \\", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5NDA1MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462294051", "bodyText": "Updated.", "author": "idlewis", "createdAt": "2020-07-29T13:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NjAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5OTIyMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461699220", "bodyText": "L comes before M", "author": "tevans78", "createdAt": "2020-07-28T16:06:40Z", "path": "dev/cnf/oss_dependencies.maven", "diffHunk": "@@ -404,6 +404,7 @@ org.eclipse.microprofile.metrics:microprofile-metrics-api:1.1.1\n org.eclipse.microprofile.metrics:microprofile-metrics-api:2.0.0\n org.eclipse.microprofile.metrics:microprofile-metrics-api:2.2\n org.eclipse.microprofile.metrics:microprofile-metrics-api:2.3\n+org.eclipse.microprofile.lra:microprofile-lra-api:1.0-M1", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxODczOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461818738", "bodyText": "Update\n\nThe LRA coordinator URI is invalid\n\nTo\n\nThe LRA coordinator URI is not valid.", "author": "Charlotte-Holt", "createdAt": "2020-07-28T19:25:41Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is invalid", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxOTkxMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461819911", "bodyText": "Add a period after \"LRA participants must be able to contact the coordinator\"", "author": "Charlotte-Holt", "createdAt": "2020-07-28T19:27:45Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is invalid\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.explanation=LRA participants must be able to contact the coordinator", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDE4MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461820181", "bodyText": "Update\n\nCorrect the LRA coordinator configuration in server.xml\n\nTo\n\nCorrect the LRA coordinator configuration in the server.xml file.", "author": "Charlotte-Holt", "createdAt": "2020-07-28T19:28:16Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is invalid\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.explanation=LRA participants must be able to contact the coordinator\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.useraction=Correct the LRA coordinator configuration in server.xml", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDQ1Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461820453", "bodyText": "Add a period after \"The error is {0}\"", "author": "Charlotte-Holt", "createdAt": "2020-07-28T19:28:48Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is invalid\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.explanation=LRA participants must be able to contact the coordinator\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.useraction=Correct the LRA coordinator configuration in server.xml\n+\n+\n+LRA_CANT_REGISTER_FILTERS.CWMRX5001E=CWMRX5001E: An error occurred during initialization of the mpLRA-1.0 feature. The error is {0}", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMDk0MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461820940", "bodyText": "Change\n\nAn LRA error has occured that prevents normal operation.\n\nTo\n\nAn LRA error occurred, which prevents normal operation.", "author": "Charlotte-Holt", "createdAt": "2020-07-28T19:29:42Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is invalid\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.explanation=LRA participants must be able to contact the coordinator\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.useraction=Correct the LRA coordinator configuration in server.xml\n+\n+\n+LRA_CANT_REGISTER_FILTERS.CWMRX5001E=CWMRX5001E: An error occurred during initialization of the mpLRA-1.0 feature. The error is {0}\n+LRA_CANT_REGISTER_FILTERS.CWMRX5001E.explanation=An LRA error has occured that prevents normal operation.", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMzI5Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461823293", "bodyText": "Add a period after \"The Eclipse MicroProfile LRA specification provides support for Long Running Actions\"", "author": "Charlotte-Holt", "createdAt": "2020-07-28T19:34:01Z", "path": "dev/com.ibm.websphere.appserver.features/visibility/public/mpLRA-1.0/resources/l10n/com.ibm.websphere.appserver.lra-1.0.properties", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+# -------------------------------------------------------------------------------------------------\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+\n+description=The Eclipse MicroProfile LRA specification provides support for Long Running Actions", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MTE4NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461891184", "bodyText": "Update\n\nThe host name where the LRA coordinator is running\n\nTo\n\nThe hostname where the LRA coordinator is running", "author": "Charlotte-Holt", "createdAt": "2020-07-28T21:29:54Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -0,0 +1,26 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+lra=MicroProfile Long Running Actions Participant\n+lra.desc=Defines the behavior of the LRA Participant feature\n+\n+lra.coordinator.host.name=The host name where the LRA coordinator is running", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MTQ2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461891467", "bodyText": "Update\n\nThe participant feature will attempt to contact a coordinator running on the specified host\n\nTo\n\nThe participant feature attempts to contact a coordinator that is running on the specified host", "author": "Charlotte-Holt", "createdAt": "2020-07-28T21:30:27Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -0,0 +1,26 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+lra=MicroProfile Long Running Actions Participant\n+lra.desc=Defines the behavior of the LRA Participant feature\n+\n+lra.coordinator.host.name=The host name where the LRA coordinator is running\n+lra.coordinator.host.desc=The participant feature will attempt to contact a coordinator running on the specified host", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MTc5Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461891797", "bodyText": "Update\n\nThe participant feature will attempt to contact a coordinator running on the specified port\n\nTo\n\nThe participant feature attempts to contact a coordinator that is running on the specified port", "author": "Charlotte-Holt", "createdAt": "2020-07-28T21:31:09Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -0,0 +1,26 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+lra=MicroProfile Long Running Actions Participant\n+lra.desc=Defines the behavior of the LRA Participant feature\n+\n+lra.coordinator.host.name=The host name where the LRA coordinator is running\n+lra.coordinator.host.desc=The participant feature will attempt to contact a coordinator running on the specified host\n+\n+lra.coordinator.port.name=The number of the port where the LRA coordinator is running\n+lra.coordinator.port.desc=The participant feature will attempt to contact a coordinator running on the specified port", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MjExMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r461892110", "bodyText": "Update\n\nThe participant feature will attempt to contact a coordinator running on the specified path\n\nTo\n\nThe participant feature attempts to contact a coordinator that is running on the specified path", "author": "Charlotte-Holt", "createdAt": "2020-07-28T21:31:51Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -0,0 +1,26 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+#\n+#ISMESSAGEFILE FALSE\n+#NLS_ENCODING=UNICODE\n+#NLS_MESSAGEFORMAT_NONE\n+#\n+lra=MicroProfile Long Running Actions Participant\n+lra.desc=Defines the behavior of the LRA Participant feature\n+\n+lra.coordinator.host.name=The host name where the LRA coordinator is running\n+lra.coordinator.host.desc=The participant feature will attempt to contact a coordinator running on the specified host\n+\n+lra.coordinator.port.name=The number of the port where the LRA coordinator is running\n+lra.coordinator.port.desc=The participant feature will attempt to contact a coordinator running on the specified port\n+\n+lra.coordinator.path.name=The path where the LRA coordinator is running\n+lra.coordinator.path.desc=The participant feature will attempt to contact a coordinator running on the specified path", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMDYzOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462130638", "bodyText": "Should this depend on jaxrs.2.1?", "author": "Emily-Jiang", "createdAt": "2020-07-29T08:31:06Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/bnd.bnd", "diffHunk": "@@ -0,0 +1,53 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+Bundle-Name: Long Running Actions\n+Bundle-SymbolicName: io.openliberty.microprofile.lra.1.0.internal\n+Bundle-Description: Long Running Actions Impl; version=${bVersion}\n+\n+Export-Package: io.openliberty.microprofile.lra.internal;provide:=true\n+\n+Private-Package: io.openliberty.microprofile.lra.internal.resources\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+#Private-Package: com.ibm.ws.example.internal\n+\n+# This is how a component is declared in bnd (i.e. not through annotations)\n+#Service-Component: \\\n+#  com.ibm.ws.lra;\\\n+#    implementation:=com.ibm.ws.lra.SampleComponent;\\\n+#    configuration-policy:=ignore;\\\n+#    properties:=\"service.vendor=IBM\"\n+    \n+-dsannotations: \\\n+    io.openliberty.microprofile.lra.internal.LraFilterComponent, \\\n+    io.openliberty.microprofile.lra.internal.LraConfig\n+\n+Include-Resource: \\\n+  OSGI-INF=resources/OSGI-INF\n+    \n+-buildpath: \\\n+\tio.openliberty.org.jboss.narayana.rts;version=latest,\\\n+\tcom.ibm.ws.logging.core;version=latest,\\\n+\tcom.ibm.websphere.org.osgi.core;version=latest,\\\n+\tcom.ibm.websphere.org.osgi.service.cm;version=latest,\\\n+\tcom.ibm.websphere.org.osgi.service.component;version=latest,\\\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+\tcom.ibm.wsspi.org.osgi.service.component.annotations;version=latest, \\\n+\tcom.ibm.websphere.javaee.jaxrs.2.0;version=latest, \\", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzNzg1Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462137852", "bodyText": "I thought you need to depend on cdi as well.", "author": "Emily-Jiang", "createdAt": "2020-07-29T08:43:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMjgwMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462412800", "bodyText": "There is no dependency on cdi from this project.", "author": "idlewis", "createdAt": "2020-07-29T16:02:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMDYzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMDc4OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462130788", "bodyText": "Should this depend on jaxrs.2.1?", "author": "Emily-Jiang", "createdAt": "2020-07-29T08:31:22Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/bnd.bnd", "diffHunk": "@@ -0,0 +1,53 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+Bundle-Name: Long Running Actions\n+Bundle-SymbolicName: io.openliberty.microprofile.lra.1.0.internal\n+Bundle-Description: Long Running Actions Impl; version=${bVersion}\n+\n+Export-Package: io.openliberty.microprofile.lra.internal;provide:=true\n+\n+Private-Package: io.openliberty.microprofile.lra.internal.resources\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+#Private-Package: com.ibm.ws.example.internal\n+\n+# This is how a component is declared in bnd (i.e. not through annotations)\n+#Service-Component: \\\n+#  com.ibm.ws.lra;\\\n+#    implementation:=com.ibm.ws.lra.SampleComponent;\\\n+#    configuration-policy:=ignore;\\\n+#    properties:=\"service.vendor=IBM\"\n+    \n+-dsannotations: \\\n+    io.openliberty.microprofile.lra.internal.LraFilterComponent, \\\n+    io.openliberty.microprofile.lra.internal.LraConfig\n+\n+Include-Resource: \\\n+  OSGI-INF=resources/OSGI-INF\n+    \n+-buildpath: \\\n+\tio.openliberty.org.jboss.narayana.rts;version=latest,\\\n+\tcom.ibm.ws.logging.core;version=latest,\\\n+\tcom.ibm.websphere.org.osgi.core;version=latest,\\\n+\tcom.ibm.websphere.org.osgi.service.cm;version=latest,\\\n+\tcom.ibm.websphere.org.osgi.service.component;version=latest,\\\n+\tcom.ibm.ws.org.osgi.annotation.versioning;version=latest, \\\n+\tcom.ibm.wsspi.org.osgi.service.component.annotations;version=latest, \\\n+\tcom.ibm.websphere.javaee.jaxrs.2.0;version=latest, \\\n+\tcom.ibm.ws.jaxrs.2.0.common;version=latest", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzk4Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462363983", "bodyText": "These should indeed both be 2.1", "author": "idlewis", "createdAt": "2020-07-29T14:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMDc4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMzI0Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462133242", "bodyText": "Is this a http or https?", "author": "Emily-Jiang", "createdAt": "2020-07-29T08:35:13Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/src/io/openliberty/microprofile/lra/internal/LraFilterComponent.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.microprofile.lra.internal;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.jaxrs20.providers.api.JaxRsProviderRegister;\n+\n+import io.narayana.lra.client.NarayanaLRAClient;\n+import io.narayana.lra.filter.ClientLRARequestFilter;\n+import io.narayana.lra.filter.ClientLRAResponseFilter;\n+import io.narayana.lra.filter.ServerLRAFilter;\n+\n+/**\n+ * A declarative services component can be completely POJO based\n+ * (no awareness/use of OSGi services).\n+ *\n+ * OSGi methods (activate/deactivate) should be protected.\n+ */\n+@Component(service = { JaxRsProviderRegister.class })\n+public class LraFilterComponent implements JaxRsProviderRegister {\n+\n+    private static final TraceComponent tc = Tr.register(LraFilterComponent.class);\n+\n+    @Reference\n+    private LraConfig config;\n+\n+    /**\n+     * DS method to activate this component.\n+     * Best practice: this should be a protected method, not public or private\n+     *\n+     * @param properties : Map containing service & config properties\n+     *            populated/provided by config admin\n+     */\n+    @Activate\n+    protected void activate(Map<String, Object> properties) throws LraException {\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+            Tr.event(tc, \"LraFilterComponent activated\", properties);\n+        }\n+        String coordString = \"http://\" + config.getHost() + \":\" + config.getPort() + \"/\" + config.getPath();", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIxNDg4OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462214889", "bodyText": "http\nhttps is unfortunately not yet supported in the implementation", "author": "idlewis", "createdAt": "2020-07-29T10:59:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMzI0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzMTMxMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462231310", "bodyText": "Should be configurable then?", "author": "tevans78", "createdAt": "2020-07-29T11:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMzI0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2ODE2OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462268168", "bodyText": "It will almost certainly need to be configurable once narayana supports https. However, as I don't know what their implementation will look like yet, I didn't think it was correct to add in liberty config that might have to change to fit in with the implementation", "author": "idlewis", "createdAt": "2020-07-29T12:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMzI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzOTAzMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462139031", "bodyText": "Why do you need metrics feature?", "author": "Emily-Jiang", "createdAt": "2020-07-29T08:45:28Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal_fat_tck/publish/servers/LRATCKServer/server.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+    Copyright (c) 2020 IBM Corporation and others.\n+    All rights reserved. This program and the accompanying materials\n+    are made available under the terms of the Eclipse Public License v1.0\n+    which accompanies this distribution, and is available at\n+    http://www.eclipse.org/legal/epl-v10.html\n+   \n+    Contributors:\n+        IBM Corporation - initial API and implementation\n+ -->\n+<server>\n+   <featureManager>\n+        <feature>mpLRA-1.0</feature>\n+        <feature>cdi-2.0</feature>\n+        <feature>jaxrs-2.1</feature>\n+        <feature>mpConfig-1.3</feature>\n+        <feature>mpMetrics-2.2</feature>", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0OTU4Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462349587", "bodyText": "That isn't needed, I think that can be taken out", "author": "idlewis", "createdAt": "2020-07-29T14:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzOTAzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyOTM3Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462229377", "bodyText": "Again, there will be an FFDC automatically added here to log the URISyntaxException. You then rethrow with a NLS enabled message. I don't think you need the extra error trace ... which would need to be NLS enabled anyway.", "author": "tevans78", "createdAt": "2020-07-29T11:29:25Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/src/io/openliberty/microprofile/lra/internal/LraFilterComponent.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.microprofile.lra.internal;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.jaxrs20.providers.api.JaxRsProviderRegister;\n+\n+import io.narayana.lra.client.NarayanaLRAClient;\n+import io.narayana.lra.filter.ClientLRARequestFilter;\n+import io.narayana.lra.filter.ClientLRAResponseFilter;\n+import io.narayana.lra.filter.ServerLRAFilter;\n+\n+/**\n+ * A declarative services component can be completely POJO based\n+ * (no awareness/use of OSGi services).\n+ *\n+ * OSGi methods (activate/deactivate) should be protected.\n+ */\n+@Component(service = { JaxRsProviderRegister.class })\n+public class LraFilterComponent implements JaxRsProviderRegister {\n+\n+    private static final TraceComponent tc = Tr.register(LraFilterComponent.class);\n+\n+    @Reference\n+    private LraConfig config;\n+\n+    /**\n+     * DS method to activate this component.\n+     * Best practice: this should be a protected method, not public or private\n+     *\n+     * @param properties : Map containing service & config properties\n+     *            populated/provided by config admin\n+     */\n+    @Activate\n+    protected void activate(Map<String, Object> properties) throws LraException {\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+            Tr.event(tc, \"LraFilterComponent activated\", properties);\n+        }\n+        String coordString = \"http://\" + config.getHost() + \":\" + config.getPort() + \"/\" + config.getPath();\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isInfoEnabled()) {\n+            Tr.info(tc, \"Attempting to contact coordinator at \" + coordString);\n+        }\n+        try {\n+            URI coord = new URI(coordString);\n+            NarayanaLRAClient.setDefaultCoordinatorEndpoint(coord);\n+        } catch (URISyntaxException e) {\n+            Tr.error(tc, \"Invalid LRA coordinator URI: '\" + coordString + \"'\");", "originalCommit": "2d3dc60eeb9fc13a2a01c803c95a3f94773b6dd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3MTAxMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r462271010", "bodyText": "I don't think this is adding anything so I'll remove it", "author": "idlewis", "createdAt": "2020-07-29T12:48:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyOTM3Nw=="}], "type": "inlineReview"}, {"oid": "b937189d615eed9ed4759da32adbaab91cbd4d7d", "url": "https://github.com/OpenLiberty/open-liberty/commit/b937189d615eed9ed4759da32adbaab91cbd4d7d", "message": "Address review comments", "committedDate": "2020-07-29T15:14:08Z", "type": "commit"}, {"oid": "999cb1474dff0c9f63bd3a0c2c54092a930afe21", "url": "https://github.com/OpenLiberty/open-liberty/commit/999cb1474dff0c9f63bd3a0c2c54092a930afe21", "message": "Reduce name length in metatype.properties\n\nAs there was an error in the build otherwise", "committedDate": "2020-07-30T17:01:14Z", "type": "commit"}, {"oid": "999cb1474dff0c9f63bd3a0c2c54092a930afe21", "url": "https://github.com/OpenLiberty/open-liberty/commit/999cb1474dff0c9f63bd3a0c2c54092a930afe21", "message": "Reduce name length in metatype.properties\n\nAs there was an error in the build otherwise", "committedDate": "2020-07-30T17:01:14Z", "type": "forcePushed"}, {"oid": "c71661bc3cedb3c96fcb88cc7d6b909febb56509", "url": "https://github.com/OpenLiberty/open-liberty/commit/c71661bc3cedb3c96fcb88cc7d6b909febb56509", "message": "Add jboss.logging bundle to mpLRA-1.0.feature", "committedDate": "2020-08-05T15:16:04Z", "type": "commit"}, {"oid": "2f616edc6e4800f0f436ece858289443e7050ff4", "url": "https://github.com/OpenLiberty/open-liberty/commit/2f616edc6e4800f0f436ece858289443e7050ff4", "message": "Removing com.ibm.ws.require.java8 as no longer required", "committedDate": "2020-08-07T09:13:42Z", "type": "commit"}, {"oid": "a069497445b79e6f19da547c4458c4239350dfd9", "url": "https://github.com/OpenLiberty/open-liberty/commit/a069497445b79e6f19da547c4458c4239350dfd9", "message": "Add the always passes test\n\nAs the real tests are currently experimental, and you need\na passing test in every fat bucket", "committedDate": "2020-08-12T13:00:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5MzU3Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469293577", "bodyText": "Add \"file.\" to the end of the useraction so that it has \"Correct the LRA coordinator configuration in the server.xml file.\"", "author": "helyarp", "createdAt": "2020-08-12T14:17:22Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is not valid\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.explanation=LRA participants must be able to contact the coordinator.\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E.useraction=Correct the LRA coordinator configuration in the server.xml", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5Njg5Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469296893", "bodyText": "Add a period to the end of the message so that it is \"The LRA coordinator URI is not valid.\"", "author": "helyarp", "createdAt": "2020-08-12T14:22:00Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/resources/io/openliberty/microprofile/lra/internal/resources/Lra.nlsprops", "diffHunk": "@@ -0,0 +1,27 @@\n+###############################################################################\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+###############################################################################\n+\n+\n+#ISMESSAGEFILE true\n+#NLS_ENCODING=UNICODE\n+#COMPONENTPREFIX CWMRX\n+\n+# LRA is currently using the message prefix CWMRX in the range 5000-5999\n+# This is temporary and should be fixed with a proper prefix before GA.\n+\n+LRA_INVALID_COORDINATOR_URI.CWMRX5000E=CWMRX5000E: The LRA coordinator URI is not valid", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1MDY0NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469850645", "bodyText": "The info log level doesn't count as trace so it shouldn't be behind an isAnyTracingEnabled() guard and it needs to be translated.\nCan be done as a follow up action.", "author": "Azquelt", "createdAt": "2020-08-13T10:20:59Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal/src/io/openliberty/microprofile/lra/internal/LraFilterComponent.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.microprofile.lra.internal;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.ibm.websphere.ras.Tr;\n+import com.ibm.websphere.ras.TraceComponent;\n+import com.ibm.ws.jaxrs20.providers.api.JaxRsProviderRegister;\n+\n+import io.narayana.lra.client.NarayanaLRAClient;\n+import io.narayana.lra.filter.ClientLRARequestFilter;\n+import io.narayana.lra.filter.ClientLRAResponseFilter;\n+import io.narayana.lra.filter.ServerLRAFilter;\n+\n+/**\n+ * A declarative services component can be completely POJO based\n+ * (no awareness/use of OSGi services).\n+ *\n+ * OSGi methods (activate/deactivate) should be protected.\n+ */\n+@Component(service = { JaxRsProviderRegister.class })\n+public class LraFilterComponent implements JaxRsProviderRegister {\n+\n+    private static final TraceComponent tc = Tr.register(LraFilterComponent.class);\n+\n+    @Reference\n+    private LraConfig config;\n+\n+    /**\n+     * DS method to activate this component.\n+     * Best practice: this should be a protected method, not public or private\n+     *\n+     * @param properties : Map containing service & config properties\n+     *            populated/provided by config admin\n+     */\n+    @Activate\n+    protected void activate(Map<String, Object> properties) throws LraException {\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isEventEnabled()) {\n+            Tr.event(tc, \"LraFilterComponent activated\", properties);\n+        }\n+        String coordString = \"http://\" + config.getHost() + \":\" + config.getPort() + \"/\" + config.getPath();\n+        if (TraceComponent.isAnyTracingEnabled() && tc.isInfoEnabled()) {\n+            Tr.info(tc, \"Attempting to contact coordinator at \" + coordString);\n+        }", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1Mjg2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469852867", "bodyText": "This file appears to be unnecessary.\nCan be done as a follow up action.", "author": "Azquelt", "createdAt": "2020-08-13T10:25:21Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal_fat_tck/build.gradle", "diffHunk": "@@ -0,0 +1,15 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\t\n+//dependencies {\n+//}\n+\t", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1MzM3MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469853370", "bodyText": "FYI,  you don't need to list features here which are in your server xml.\ntested.features is to tell the build infrastructure that your test uses additional features not listed in server.xml (usually through @RepeatTests)", "author": "Azquelt", "createdAt": "2020-08-13T10:26:25Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal_fat_tck/bnd.bnd", "diffHunk": "@@ -0,0 +1,34 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+src: \\\n+\tfat/src\n+\n+fat.project: true\n+\n+tested.features: mpLRA-1.0", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1NDA0MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469854041", "bodyText": "Stray comment", "author": "Azquelt", "createdAt": "2020-08-13T10:27:48Z", "path": "dev/io.openliberty.microprofile.lra.1.0.internal_fat_tck/fat/src/io/openliberty/microprofile/lra/tck/LraTckLauncher.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.microprofile.lra.tck;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+//import com.ibm.websphere.microprofile.faulttolerance_fat.suite.RepeatFaultTolerance;", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1ODIzMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469858231", "bodyText": "This is one place to define a trace group which the user can use to turn on trace for the whole feature rather than having to list package and class names. Elsewhere, you've used LRA as the tracegroup\nI don't think you want this in the API bundle anyway since it won't have trace in it.", "author": "Azquelt", "createdAt": "2020-08-13T10:36:03Z", "path": "dev/io.openliberty.org.eclipse.microprofile.lra.1.0/bnd.bnd", "diffHunk": "@@ -0,0 +1,35 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#    IBM Corporation \n+# This wraps the external JAR.\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/rejar.props\n+\n+bVersion=1.0\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+Bundle-SymbolicName: io.openliberty.org.eclipse.microprofile.lra.1.0; singleton:=true\n+                     \n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.8))\"\n+\n+# We will whittle this down once it is working\n+Export-Package: \\\n+  org.eclipse.microprofile.lra*; version=\"1.0.0\"\n+\n+# TODO what should this be?\n+#WS-TraceGroup: REACTIVESTREAMS", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg1OTkzMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469859931", "bodyText": "I don't think it would help to declare a trace group for this bundle since trace groups unfortunately don't work for third party code.", "author": "Azquelt", "createdAt": "2020-08-13T10:39:32Z", "path": "dev/io.openliberty.org.jboss.narayana.rts/bnd.bnd", "diffHunk": "@@ -0,0 +1,37 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#    IBM Corporation \n+# This wraps the external JAR.\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/rejar.props\n+\n+bVersion=1.0\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+Bundle-SymbolicName: io.openliberty.org.jboss.narayana.rts; singleton:=true\n+                     \n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.8))\"\n+\n+# We will whittle this down once it is working\n+Export-Package: \\\n+  io.narayana.lra.*; version=5.10.5, \\\n+  io.narayana.lra; version=5.10.5\n+\n+# TODO what should this be?\n+#WS-TraceGroup: REACTIVESTREAMS", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg2MDMxMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13214#discussion_r469860311", "bodyText": "Do you have an issue open to whittle these lists down?", "author": "Azquelt", "createdAt": "2020-08-13T10:40:24Z", "path": "dev/io.openliberty.org.jboss.narayana.rts/bnd.bnd", "diffHunk": "@@ -0,0 +1,37 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#    IBM Corporation \n+# This wraps the external JAR.\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/rejar.props\n+\n+bVersion=1.0\n+\n+javac.source: 1.8\n+javac.target: 1.8\n+\n+Bundle-SymbolicName: io.openliberty.org.jboss.narayana.rts; singleton:=true\n+                     \n+Require-Capability: osgi.ee;filter:=\"(&(osgi.ee=JavaSE)(version=1.8))\"\n+\n+# We will whittle this down once it is working\n+Export-Package: \\\n+  io.narayana.lra.*; version=5.10.5, \\\n+  io.narayana.lra; version=5.10.5", "originalCommit": "a069497445b79e6f19da547c4458c4239350dfd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}