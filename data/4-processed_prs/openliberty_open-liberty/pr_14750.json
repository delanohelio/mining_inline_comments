{"pr_number": 14750, "pr_title": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "pr_createdAt": "2020-10-29T14:07:37Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/14750", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMTM5Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r514301396", "bodyText": "This change should be removed if not absolutely required", "author": "tevans78", "createdAt": "2020-10-29T14:27:56Z", "path": "dev/fattest.simplicity/bnd.bnd", "diffHunk": "@@ -92,3 +92,7 @@ test.project: true\n \torg.jboss.arquillian.core:arquillian-core-api;version=1.3.0.Final,\\\n \torg.jboss.arquillian.test:arquillian-test-spi;version=1.3.0.Final,\\\n \torg.testcontainers:testcontainers;version=1.14.0\n+\t\n+#\t,\\\n+#\torg.apache.sshd:sshd-core;version=2.5.1", "originalCommit": "191bcbee480382f75bb81db269c8278a6cd18a50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNDYxMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r514304613", "bodyText": "Good catch. Originally I was going to add some utils for some remote interactions with the KDC, but instead put it in my FAT bucket.", "author": "jvanhill", "createdAt": "2020-10-29T14:31:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMTM5Ng=="}], "type": "inlineReview"}, {"oid": "04d4164dfeb4946767afd1dc1d183845ef08bf42", "url": "https://github.com/OpenLiberty/open-liberty/commit/04d4164dfeb4946767afd1dc1d183845ef08bf42", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-10-29T14:32:34Z", "type": "forcePushed"}, {"oid": "a621328b92d733c10a788ea98f6d82450030c26f", "url": "https://github.com/OpenLiberty/open-liberty/commit/a621328b92d733c10a788ea98f6d82450030c26f", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-10-30T16:22:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2OTE3NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r515969175", "bodyText": "Do you plan to only run the Jakarta 9 ones with lite mode?", "author": "jhanders34", "createdAt": "2020-11-02T13:26:12Z", "path": "dev/com.ibm.ws.security.spnego_fat.1/fat/src/com/ibm/ws/security/spnego/fat/FATSuite.java", "diffHunk": "@@ -0,0 +1,164 @@\n+/*******************************************************************************\n+ * Copyright (c) 2014, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.security.spnego.fat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import org.junit.ClassRule;\n+import org.junit.rules.ExternalResource;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+import com.ibm.ws.security.spnego.fat.config.CommonTest;\n+import com.ibm.ws.security.spnego.fat.config.InitClass;\n+import com.ibm.ws.security.spnego.fat.config.SPNEGOConstants;\n+\n+import componenttest.rules.repeater.JakartaEE9Action;\n+import componenttest.rules.repeater.RepeatTests;\n+import componenttest.topology.impl.JavaInfo;\n+import componenttest.topology.impl.JavaInfo.Vendor;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+                DynamicSpnegoConfigTest.class,\n+                S4U2SelfTest.class,\n+                S4U2ProxyTest.class\n+})\n+public class FATSuite extends InitClass {\n+    private static final Class<?> c = FATSuite.class;\n+\n+    @ClassRule\n+    public static RepeatTests repeat = RepeatTests.withoutModification().andWith(new JakartaEE9Action());", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5MzYxMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r515993612", "bodyText": "Typically when I move these over, I set them to run only EE9 in lite, and everything in full. However; if I recall correctly these were written so that pretty much everything is run in full. I didn't change that, so making it so that only EE9 ran in lite would really have no consequence.", "author": "jvanhill", "createdAt": "2020-11-02T14:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2OTE3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDgyMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516020820", "bodyText": "No repeats for Jakarta 9?  I saw the bnd file said it was going to test faces-3.0", "author": "jhanders34", "createdAt": "2020-11-02T14:46:31Z", "path": "dev/com.ibm.ws.security.spnego_fat.2/fat/src/com/ibm/ws/security/spnego/fat/FATSuite.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*******************************************************************************\n+ * Copyright (c) 2014, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.security.spnego.fat;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+\n+import org.junit.ClassRule;\n+import org.junit.rules.ExternalResource;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+import com.ibm.ws.security.spnego.fat.config.CommonTest;\n+import com.ibm.ws.security.spnego.fat.config.InitClass;\n+import com.ibm.ws.security.spnego.fat.config.SPNEGOConstants;\n+\n+import componenttest.topology.impl.JavaInfo;\n+import componenttest.topology.impl.JavaInfo.Vendor;\n+import componenttest.topology.impl.LibertyServerFactory;\n+\n+@RunWith(Suite.class)", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0OTA5Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516049097", "bodyText": "The FATs were originally all in one bucket, and took ~1.5 hours to run end to end in FULL mode (and overran the trace limit by quite a bit), and I didn't want to add another 1.5 hours. So I spoke with @utle and we picked a few of the FATs that represented a good coverage and then split the bucket into 3 buckets to get them each around 30 mins and below the trace output limit for the bucket.", "author": "jvanhill", "createdAt": "2020-11-02T15:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0OTk4Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516049982", "bodyText": "(I think this is the bucket that didn't have one FATs we picked for EE9 repeat)", "author": "jvanhill", "createdAt": "2020-11-02T15:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA1MDQ4Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516050487", "bodyText": "The tested features is probably b/c I got them all running first and then split the buckets by copying from the original bucket. I can remove that tested.features.", "author": "jvanhill", "createdAt": "2020-11-02T15:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNjc2NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516106765", "bodyText": "No need for this code since we don't support Java 7 any longer.", "author": "jhanders34", "createdAt": "2020-11-02T16:45:29Z", "path": "dev/com.ibm.ws.security.spnego_fat/fat/src/com/ibm/ws/security/spnego/fat/FATSuite.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*******************************************************************************\n+ * Copyright (c) 2014, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.security.spnego.fat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import org.junit.ClassRule;\n+import org.junit.rules.ExternalResource;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.junit.runners.Suite.SuiteClasses;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+import com.ibm.ws.security.spnego.fat.config.CommonTest;\n+import com.ibm.ws.security.spnego.fat.config.InitClass;\n+import com.ibm.ws.security.spnego.fat.config.SPNEGOConstants;\n+\n+import componenttest.rules.repeater.JakartaEE9Action;\n+import componenttest.rules.repeater.RepeatTests;\n+import componenttest.topology.impl.JavaInfo;\n+import componenttest.topology.impl.JavaInfo.Vendor;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n+\n+@RunWith(Suite.class)\n+@SuiteClasses({\n+                BasicAuthTest.class,\n+                CanonicalHostNameTest.class,\n+                IncludeClientGSSCredentialInSubjectTest.class,\n+                IncludeCustomCacheKeyTest.class,\n+                Krb5ConfigTest.class,\n+                ServicePrincipalNamesTest.class,\n+                SpnegoTokenHelperApiTest.class,\n+                TrustedActiveDirectoryDomainsTest.class\n+})\n+public class FATSuite extends InitClass {\n+    private static final Class<?> c = FATSuite.class;\n+\n+    @ClassRule\n+    public static RepeatTests repeat = RepeatTests.withoutModification().andWith(new JakartaEE9Action());\n+\n+    @ClassRule\n+    public static ExternalResource testRule = new ExternalResource() {\n+        /**\n+         * Creates the SPN and keytab file to be used in any ensuing tests. Test classes can elect to create their own\n+         * SPN and keytab file if needed. A common SPNEGO token is also created which can be used by all test classes.\n+         * The common SPNEGO token should be refreshed at a certain interval, specified by the\n+         * TOKEN_REFRESH_LIFETIME_SECONDS variable.\n+         */\n+        @Override\n+        protected void before() throws Exception {\n+            String thisMethod = \"before\";\n+            Log.info(c, thisMethod, \"Performing the common setup for all test classes\");\n+\n+            getKDCInfoFromConsul();\n+\n+            if (!isSupportJDK())\n+                return;\n+\n+            String ip = InetAddress.getByName(\"localhost\").getHostAddress();\n+            if (!\"127.0.0.1\".equals(ip)) {\n+                Log.info(c, thisMethod, \"The localhost ip address is \" + ip + \" (not default value 127.0.0.1), localhost ip address tests will not be run\");\n+                LOCALHOST_DEFAULT_IP_ADDRESS = false;\n+            }\n+\n+            try {\n+                CommonTest.commonSetUp(\"com.ibm.ws.security.spnego.fat.setup\", null, SPNEGOConstants.NO_APPS, SPNEGOConstants.NO_PROPS,\n+                                       SPNEGOConstants.DONT_CREATE_SSL_CLIENT,\n+                                       SPNEGOConstants.CREATE_SPN_AND_KEYTAB, SPNEGOConstants.DEFAULT_REALM, SPNEGOConstants.CREATE_SPNEGO_TOKEN,\n+                                       SPNEGOConstants.SET_AS_COMMON_TOKEN, SPNEGOConstants.USE_CANONICAL_NAME, SPNEGOConstants.DONT_USE_COMMON_KEYTAB,\n+                                       SPNEGOConstants.DONT_START_SERVER);\n+            } catch (Exception e) {\n+                String message = CommonTest.maskHostnameAndPassword(e.getMessage());\n+                Log.info(c, thisMethod, \"Common setup failed, tests will not run: \" + message, e);\n+                throw (new Exception(\"Common setup failed, tests will not run: \" + message, e));\n+            }\n+\n+            // The keytab file needs to be copied into the /tmp folder so we can include it in the other servers\n+            CommonTest.getMyServer().copyFileToTempDir(SPNEGOConstants.KRB_RESOURCE_LOCATION.substring(1) + SPNEGOConstants.KRB5_KEYTAB_FILE, SPNEGOConstants.KRB5_KEYTAB_FILE);\n+            KEYTAB_FILE_LOCATION = \"tmp/\" + SPNEGOConstants.KRB5_KEYTAB_FILE;\n+\n+            Log.info(c, thisMethod, \"Common setup is complete\");\n+        }\n+\n+        private boolean isSupportJDK() throws IOException {\n+            String thisMethod = \"isSupportJDK\";\n+            JavaInfo javaInfo = JavaInfo.forServer(LibertyServerFactory.getLibertyServer(\"BasicAuthTest\"));\n+\n+            JDK_V7_LOWER = javaInfo.majorVersion() <= 7;", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEzOTQ4Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516139487", "bodyText": "I will remove this.", "author": "jvanhill", "createdAt": "2020-11-02T17:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNjc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1MTIwMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516151203", "bodyText": "I got rid of the JDK_V7_LOWER field in InitClass, which meant I could remove the testS4U2SelfJDKVersionComplianceTest test in S4U2SelfTest.java.", "author": "jvanhill", "createdAt": "2020-11-02T17:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNjc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1MTk2MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516151961", "bodyText": "I also removed this from the two other FATSuite classes as well.", "author": "jvanhill", "createdAt": "2020-11-02T17:48:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNjc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNzE2OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516107168", "bodyText": "I didn't se repeats so no jakarta 9 testing from what I could tell.  This can be removed?", "author": "jhanders34", "createdAt": "2020-11-02T16:46:06Z", "path": "dev/com.ibm.ws.security.spnego_fat/bnd.bnd", "diffHunk": "@@ -0,0 +1,38 @@\n+#*******************************************************************************\n+# Copyright (c) 2020 IBM Corporation and others.\n+# All rights reserved. This program and the accompanying materials\n+# are made available under the terms of the Eclipse Public License v1.0\n+# which accompanies this distribution, and is available at\n+# http://www.eclipse.org/legal/epl-v10.html\n+#\n+# Contributors:\n+#     IBM Corporation - initial API and implementation\n+#*******************************************************************************\n+-include= ~../cnf/resources/bnd/bundle.props\n+bVersion=1.0\n+\n+src: \\\n+    fat/src\n+\n+fat.project: true\n+\n+tested.features: pages-3.0", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MTEwOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516141109", "bodyText": "This FAT does have one FVT run with EE9 repeat - ServerPrincipalNamesTest.", "author": "jvanhill", "createdAt": "2020-11-02T17:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNzE2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNzQwOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516107408", "bodyText": "No test-applications for this project so I believe this can be removed.", "author": "jhanders34", "createdAt": "2020-11-02T16:46:23Z", "path": "dev/com.ibm.ws.security.spnego_fat/.classpath", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" path=\"fat/src\"/>\n+\t<classpathentry kind=\"src\" path=\"test-applications/SPNEGOTokenHelperFVTWeb.war/src\"/>", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MTY4MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516141680", "bodyText": "Yes. This can be removed. This app was already in the fat.common project, so I just use it from there.", "author": "jvanhill", "createdAt": "2020-11-02T17:31:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNzQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwODE4MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516108180", "bodyText": "No test-applications in this project so this can be removed.", "author": "jhanders34", "createdAt": "2020-11-02T16:47:23Z", "path": "dev/com.ibm.ws.security.spnego_fat.2/.classpath", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" path=\"fat/src\"/>\n+\t<classpathentry kind=\"src\" path=\"test-applications/SPNEGOTokenHelperFVTWeb.war/src\"/>", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MTgxNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516141816", "bodyText": "Yes. This can be removed. This app was already in the fat.common project, so I just use it from there.", "author": "jvanhill", "createdAt": "2020-11-02T17:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwODE4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwOTM3Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516109377", "bodyText": "No test-applications for this project, so this should be removed.", "author": "jhanders34", "createdAt": "2020-11-02T16:48:46Z", "path": "dev/com.ibm.ws.security.spnego_fat.1/.classpath", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" path=\"fat/src\"/>\n+\t<classpathentry kind=\"src\" path=\"test-applications/SPNEGOTokenHelperFVTWeb.war/src\"/>", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MTg5Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516141896", "bodyText": "Yes. This can be removed. This app was already in the fat.common project, so I just use it from there.", "author": "jvanhill", "createdAt": "2020-11-02T17:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwOTM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExMDEyNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516110124", "bodyText": "Should this depend on the private API feature instead of the public feature?  Same for the auto features then as well.", "author": "jhanders34", "createdAt": "2020-11-02T16:49:43Z", "path": "dev/com.ibm.websphere.appserver.features/visibility/protected/com.ibm.websphere.appserver.authFilter-1.0.feature", "diffHunk": "@@ -2,6 +2,7 @@\n symbolicName=com.ibm.websphere.appserver.authFilter-1.0\n WLP-DisableAllFeatures-OnConflict: false\n visibility=protected\n--bundles=com.ibm.ws.security.authentication.filter\n+-features=\\\n+   com.ibm.websphere.appserver.servlet-3.0; ibm.tolerates:=\"3.1,4.0,5.0\"", "originalCommit": "a621328b92d733c10a788ea98f6d82450030c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MjQ2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r516142467", "bodyText": "It is quite possible this could depend on the private feature. I am not sure which it should though.", "author": "jvanhill", "createdAt": "2020-11-02T17:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExMDEyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAzNDE0OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r518034148", "bodyText": "It looks like @utle made a change with PR #13795 to change this feature already and has created a merge conflict with your PR.  He changed to use the API features like you did and switch to have auto features.   So looks like you need to clean up your PR to remove some changes to avoid the conflict and then rebase to pick up his changes and rebuild.", "author": "jhanders34", "createdAt": "2020-11-05T13:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExMDEyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3NTg2MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14750#discussion_r519975860", "bodyText": "I rebased with Ut's changes, and rebuilt. Everything looks good with these private features. I had some others failures related to not having any tests run in Lite mode, and am rebuilding with those changes.", "author": "jvanhill", "createdAt": "2020-11-09T17:07:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExMDEyNA=="}], "type": "inlineReview"}, {"oid": "4e35c2c10c155b59fda3d2ca1f319773a3742a17", "url": "https://github.com/OpenLiberty/open-liberty/commit/4e35c2c10c155b59fda3d2ca1f319773a3742a17", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-02T17:49:27Z", "type": "forcePushed"}, {"oid": "1b87f9fbbc8d5eddc16454a3c49f9f8dd9cb933a", "url": "https://github.com/OpenLiberty/open-liberty/commit/1b87f9fbbc8d5eddc16454a3c49f9f8dd9cb933a", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-06T15:55:03Z", "type": "forcePushed"}, {"oid": "dc432a5513ceb060ee1dfbccd196a8cdaf399abe", "url": "https://github.com/OpenLiberty/open-liberty/commit/dc432a5513ceb060ee1dfbccd196a8cdaf399abe", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-06T19:39:32Z", "type": "forcePushed"}, {"oid": "5ef6cf3a7901fc7997bc858ad887182e1eded370", "url": "https://github.com/OpenLiberty/open-liberty/commit/5ef6cf3a7901fc7997bc858ad887182e1eded370", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-09T17:05:25Z", "type": "forcePushed"}, {"oid": "dd45ee44fdb92e69a6e5d2a624571f9947a45130", "url": "https://github.com/OpenLiberty/open-liberty/commit/dd45ee44fdb92e69a6e5d2a624571f9947a45130", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-09T20:43:41Z", "type": "forcePushed"}, {"oid": "009a6335dfb779d6804aafebb4797917ad8354be", "url": "https://github.com/OpenLiberty/open-liberty/commit/009a6335dfb779d6804aafebb4797917ad8354be", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-10T15:20:58Z", "type": "forcePushed"}, {"oid": "5513592254f340a6c62fefd80e003b6d3b1bbbbd", "url": "https://github.com/OpenLiberty/open-liberty/commit/5513592254f340a6c62fefd80e003b6d3b1bbbbd", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-12T16:19:24Z", "type": "forcePushed"}, {"oid": "a21a759d25cb3b18809247ba105a27bfaf66f19f", "url": "https://github.com/OpenLiberty/open-liberty/commit/a21a759d25cb3b18809247ba105a27bfaf66f19f", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-13T15:10:39Z", "type": "forcePushed"}, {"oid": "8cd97888a641f35648fa97bbbd1a008fb6e8b154", "url": "https://github.com/OpenLiberty/open-liberty/commit/8cd97888a641f35648fa97bbbd1a008fb6e8b154", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-14T17:24:24Z", "type": "commit"}, {"oid": "8cd97888a641f35648fa97bbbd1a008fb6e8b154", "url": "https://github.com/OpenLiberty/open-liberty/commit/8cd97888a641f35648fa97bbbd1a008fb6e8b154", "message": "Issue #14098: Jakarta'ize spnego-1.0 feature.", "committedDate": "2020-11-14T17:24:24Z", "type": "forcePushed"}]}