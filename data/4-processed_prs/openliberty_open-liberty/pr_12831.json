{"pr_number": 12831, "pr_title": "Adding service in Bean Validation to determine if a method or constructor should be validated.", "pr_createdAt": "2020-06-30T03:05:19Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12831", "timeline": [{"oid": "4c39aa006553acec872b1bc0200f34f12ade593b", "url": "https://github.com/OpenLiberty/open-liberty/commit/4c39aa006553acec872b1bc0200f34f12ade593b", "message": "Adding service in Bean Validation to determine if a method or constructor should be validated.\n\nThis takes into account the use of the @ValidateOnExecution annotation.", "committedDate": "2020-06-30T03:13:04Z", "type": "forcePushed"}, {"oid": "f3f8f89c81bf52bdab05b6b2d50e15262941dd1e", "url": "https://github.com/OpenLiberty/open-liberty/commit/f3f8f89c81bf52bdab05b6b2d50e15262941dd1e", "message": "Adding service in Bean Validation to determine if a method or constructor should be validated.\n\nThis takes into account the use of the @ValidateOnExecution annotation.", "committedDate": "2020-06-30T03:17:52Z", "type": "forcePushed"}, {"oid": "81bd8fb7756d63cb54565a09e7078c65a6ebad25", "url": "https://github.com/OpenLiberty/open-liberty/commit/81bd8fb7756d63cb54565a09e7078c65a6ebad25", "message": "Adding service in Bean Validation to determine if a method or constructor should be validated.\n\nThis takes into account the use of the @ValidateOnExecution annotation.", "committedDate": "2020-06-30T03:23:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MDkyNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r448570924", "bodyText": "change\non methods overriding\nto\non methods that override", "author": "jantley-ibm", "createdAt": "2020-07-01T19:25:55Z", "path": "dev/com.ibm.ws.beanvalidation.core/resources/com/ibm/ws/beanvalidation/resources/nls/BVNLSMessages.nlsprops", "diffHunk": "@@ -87,3 +87,16 @@ JNDI_NON_JEE_THREAD_CWNBV0006E.explanation=JNDI operations on a java:comp/env na\n JNDI_NON_JEE_THREAD_CWNBV0006E.useraction=Modify the application so that the JNDI operation occurs on a thread associated with a Java EE application component.\n \n # -----------------------------------------------------------------------\n+# PARAMETERS:\n+#    {0} is the method with the invalid ValidateOnExecution annotation\n+# -----------------------------------------------------------------------\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E=CWNBV0007E: @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. Check configuration for {0}", "originalCommit": "81bd8fb7756d63cb54565a09e7078c65a6ebad25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYxNjc1OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r448616758", "bodyText": "Your requested updates have been made for this comment and the others in a new commit.", "author": "nmittles", "createdAt": "2020-07-01T21:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MDkyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MTYyMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r448571620", "bodyText": "change\non methods overriding\nto\non methods that override\nchange\nA method overriding\nto\nA method that overrides\nchange\nthe method it overrides or implements.\nto\nthe method that it overrides or implements.", "author": "jantley-ibm", "createdAt": "2020-07-01T19:27:29Z", "path": "dev/com.ibm.ws.beanvalidation.core/resources/com/ibm/ws/beanvalidation/resources/nls/BVNLSMessages.nlsprops", "diffHunk": "@@ -87,3 +87,16 @@ JNDI_NON_JEE_THREAD_CWNBV0006E.explanation=JNDI operations on a java:comp/env na\n JNDI_NON_JEE_THREAD_CWNBV0006E.useraction=Modify the application so that the JNDI operation occurs on a thread associated with a Java EE application component.\n \n # -----------------------------------------------------------------------\n+# PARAMETERS:\n+#    {0} is the method with the invalid ValidateOnExecution annotation\n+# -----------------------------------------------------------------------\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E=CWNBV0007E: @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. Check configuration for {0}\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.explanation= @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. A method overriding a superclass method or implementing an interface method inherits the behavior of the method it overrides or implements.", "originalCommit": "81bd8fb7756d63cb54565a09e7078c65a6ebad25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MjY4NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r448572685", "bodyText": "change\nMixing IMPLICIT and other executable types\nto\nMixing IMPLICIT type with other executable types", "author": "jantley-ibm", "createdAt": "2020-07-01T19:30:02Z", "path": "dev/com.ibm.ws.beanvalidation.core/resources/com/ibm/ws/beanvalidation/resources/nls/BVNLSMessages.nlsprops", "diffHunk": "@@ -87,3 +87,16 @@ JNDI_NON_JEE_THREAD_CWNBV0006E.explanation=JNDI operations on a java:comp/env na\n JNDI_NON_JEE_THREAD_CWNBV0006E.useraction=Modify the application so that the JNDI operation occurs on a thread associated with a Java EE application component.\n \n # -----------------------------------------------------------------------\n+# PARAMETERS:\n+#    {0} is the method with the invalid ValidateOnExecution annotation\n+# -----------------------------------------------------------------------\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E=CWNBV0007E: @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. Check configuration for {0}\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.explanation= @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. A method overriding a superclass method or implementing an interface method inherits the behavior of the method it overrides or implements.\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.useraction= Remove the @ValidateOnExecution from the specified method.\n+\n+# -----------------------------------------------------------------------\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E=CWNBV0008E: Mixing IMPLICIT and other executable types is not allowed.", "originalCommit": "81bd8fb7756d63cb54565a09e7078c65a6ebad25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3Mjg2MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r448572860", "bodyText": "change\nMixing IMPLICIT and other executable types\nto\nMixing IMPLICIT type with other executable types", "author": "jantley-ibm", "createdAt": "2020-07-01T19:30:22Z", "path": "dev/com.ibm.ws.beanvalidation.core/resources/com/ibm/ws/beanvalidation/resources/nls/BVNLSMessages.nlsprops", "diffHunk": "@@ -87,3 +87,16 @@ JNDI_NON_JEE_THREAD_CWNBV0006E.explanation=JNDI operations on a java:comp/env na\n JNDI_NON_JEE_THREAD_CWNBV0006E.useraction=Modify the application so that the JNDI operation occurs on a thread associated with a Java EE application component.\n \n # -----------------------------------------------------------------------\n+# PARAMETERS:\n+#    {0} is the method with the invalid ValidateOnExecution annotation\n+# -----------------------------------------------------------------------\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E=CWNBV0007E: @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. Check configuration for {0}\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.explanation= @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. A method overriding a superclass method or implementing an interface method inherits the behavior of the method it overrides or implements.\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.useraction= Remove the @ValidateOnExecution from the specified method.\n+\n+# -----------------------------------------------------------------------\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E=CWNBV0008E: Mixing IMPLICIT and other executable types is not allowed.\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E.explanation= Mixing IMPLICIT and other executable types is not allowed for the @ValidateOnExecution annotation.", "originalCommit": "81bd8fb7756d63cb54565a09e7078c65a6ebad25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MzIxNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r448573215", "bodyText": "change\nchange\nmixing IMPLICIT with other executable types.\nto\nmixing IMPLICIT type with other executable types.", "author": "jantley-ibm", "createdAt": "2020-07-01T19:31:12Z", "path": "dev/com.ibm.ws.beanvalidation.core/resources/com/ibm/ws/beanvalidation/resources/nls/BVNLSMessages.nlsprops", "diffHunk": "@@ -87,3 +87,16 @@ JNDI_NON_JEE_THREAD_CWNBV0006E.explanation=JNDI operations on a java:comp/env na\n JNDI_NON_JEE_THREAD_CWNBV0006E.useraction=Modify the application so that the JNDI operation occurs on a thread associated with a Java EE application component.\n \n # -----------------------------------------------------------------------\n+# PARAMETERS:\n+#    {0} is the method with the invalid ValidateOnExecution annotation\n+# -----------------------------------------------------------------------\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E=CWNBV0007E: @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. Check configuration for {0}\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.explanation= @ValidateOnExecution is not allowed on methods overriding a superclass method or implementing an interface. A method overriding a superclass method or implementing an interface method inherits the behavior of the method it overrides or implements.\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.useraction= Remove the @ValidateOnExecution from the specified method.\n+\n+# -----------------------------------------------------------------------\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E=CWNBV0008E: Mixing IMPLICIT and other executable types is not allowed.\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E.explanation= Mixing IMPLICIT and other executable types is not allowed for the @ValidateOnExecution annotation.\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E.useraction= Update the method, class, or global XML settings for executable types to prevent mixing IMPLICIT with other executable types.", "originalCommit": "81bd8fb7756d63cb54565a09e7078c65a6ebad25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72e868ee799c4c6c99237e20c71bf2a5bdd66dc9", "url": "https://github.com/OpenLiberty/open-liberty/commit/72e868ee799c4c6c99237e20c71bf2a5bdd66dc9", "message": "Fix abstract method signatures.", "committedDate": "2020-07-02T14:03:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzODg5MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12831#discussion_r449038890", "bodyText": "I wonder if this could be clarified more.  Maybe indicate where the IMPLICIT type was specified and which other types were specified (and where)?\nFor the explanation, it might be worth pointing out where in the spec it says that this is prohibited.", "author": "andymc12", "createdAt": "2020-07-02T14:22:48Z", "path": "dev/com.ibm.ws.beanvalidation.core/resources/com/ibm/ws/beanvalidation/resources/nls/BVNLSMessages.nlsprops", "diffHunk": "@@ -87,3 +87,16 @@ JNDI_NON_JEE_THREAD_CWNBV0006E.explanation=JNDI operations on a java:comp/env na\n JNDI_NON_JEE_THREAD_CWNBV0006E.useraction=Modify the application so that the JNDI operation occurs on a thread associated with a Java EE application component.\n \n # -----------------------------------------------------------------------\n+# PARAMETERS:\n+#    {0} is the method with the invalid ValidateOnExecution annotation\n+# -----------------------------------------------------------------------\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E=CWNBV0007E: @ValidateOnExecution is not allowed on methods that override a superclass method or implement an interface. Check configuration for {0}\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.explanation= @ValidateOnExecution is not allowed on methods that override a superclass method or implement an interface. A method that overrides a superclass method or implements an interface method inherits the behavior of the method that it overrides or implements.\n+BVKEY_VALIDATE_ON_EXECUTION_NOT_ALLOWED_CWNBV0007E.useraction= Remove the @ValidateOnExecution from the specified method.\n+\n+# -----------------------------------------------------------------------\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E=CWNBV0008E: Mixing IMPLICIT type with other executable types is not allowed.\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E.explanation= Mixing IMPLICIT type with other executable types is not allowed for the @ValidateOnExecution annotation.\n+BVKEY_MIXING_IMPLICIT_TYPE_NOT_ALLOWED_CWNBV0008E.useraction= Update the method, class, or global XML settings for executable types to prevent mixing IMPLICIT type with other executable types.", "originalCommit": "72e868ee799c4c6c99237e20c71bf2a5bdd66dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f24e3435d29c2e927354e21871c155a2f6269916", "url": "https://github.com/OpenLiberty/open-liberty/commit/f24e3435d29c2e927354e21871c155a2f6269916", "message": "Code review updates. Fixed version update for the org.hibernate.validator.internal.properties package on Jakarta 9.", "committedDate": "2020-07-02T19:20:33Z", "type": "forcePushed"}, {"oid": "14596969a15360a4335815187f08b6cd5bb887be", "url": "https://github.com/OpenLiberty/open-liberty/commit/14596969a15360a4335815187f08b6cd5bb887be", "message": "Code review updates. Fixed version updates for the org.hibernate.validator.internal.* packages on Jakarta 9.", "committedDate": "2020-07-13T21:13:46Z", "type": "forcePushed"}, {"oid": "a12645b696640f2a50a524fbfc238472bb908a96", "url": "https://github.com/OpenLiberty/open-liberty/commit/a12645b696640f2a50a524fbfc238472bb908a96", "message": "Adding service in Bean Validation to determine if a method or constructor should be validated.\n\nThis takes into account the use of the @ValidateOnExecution annotation.", "committedDate": "2020-07-21T04:03:16Z", "type": "commit"}, {"oid": "43db9fd54ade4e1bd0e8252e02e272f712b73580", "url": "https://github.com/OpenLiberty/open-liberty/commit/43db9fd54ade4e1bd0e8252e02e272f712b73580", "message": "ID review feedback.", "committedDate": "2020-07-21T04:03:17Z", "type": "commit"}, {"oid": "205ba93974427af991762692de74a22df1cda749", "url": "https://github.com/OpenLiberty/open-liberty/commit/205ba93974427af991762692de74a22df1cda749", "message": "Fix abstract method signatures.", "committedDate": "2020-07-21T04:03:18Z", "type": "commit"}, {"oid": "d4da13a171d5739a0563ba68701b261ed8ee14af", "url": "https://github.com/OpenLiberty/open-liberty/commit/d4da13a171d5739a0563ba68701b261ed8ee14af", "message": "Code review updates. Fixed version updates for the org.hibernate.validator.internal.* packages on Jakarta 9.", "committedDate": "2020-07-21T04:03:19Z", "type": "commit"}, {"oid": "b36f8599265e4ccc66f6b0ebeebf999a0cd7825a", "url": "https://github.com/OpenLiberty/open-liberty/commit/b36f8599265e4ccc66f6b0ebeebf999a0cd7825a", "message": "Make sure bval 1.0 always returns false for if method or constructors are constrained, since the 1.0 spec doesn't support it.", "committedDate": "2020-07-21T04:03:20Z", "type": "commit"}, {"oid": "b36f8599265e4ccc66f6b0ebeebf999a0cd7825a", "url": "https://github.com/OpenLiberty/open-liberty/commit/b36f8599265e4ccc66f6b0ebeebf999a0cd7825a", "message": "Make sure bval 1.0 always returns false for if method or constructors are constrained, since the 1.0 spec doesn't support it.", "committedDate": "2020-07-21T04:03:20Z", "type": "forcePushed"}]}