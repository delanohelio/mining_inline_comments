{"pr_number": 12618, "pr_title": "Use AcmeHistory file to revoke the old certificate", "pr_createdAt": "2020-06-16T06:04:12Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12618", "timeline": [{"oid": "be9dd2a8fe077917a48c355ae4f9ed720ed13abd", "url": "https://github.com/OpenLiberty/open-liberty/commit/be9dd2a8fe077917a48c355ae4f9ed720ed13abd", "message": "update certificate revoker after renewal", "committedDate": "2020-06-16T06:09:51Z", "type": "forcePushed"}, {"oid": "64bd831a95c36b9269370e63b68f9300190aebe2", "url": "https://github.com/OpenLiberty/open-liberty/commit/64bd831a95c36b9269370e63b68f9300190aebe2", "message": "update certificate revoker after renewal", "committedDate": "2020-06-16T21:36:08Z", "type": "forcePushed"}, {"oid": "955d9a60602536ff84be59f65848dc93d7850fbe", "url": "https://github.com/OpenLiberty/open-liberty/commit/955d9a60602536ff84be59f65848dc93d7850fbe", "message": "update certificate revoker after renewal", "committedDate": "2020-06-18T12:52:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMTY4Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442311682", "bodyText": "Probably should update the comment to say this uses the configured directory URI.", "author": "jvanhill", "createdAt": "2020-06-18T15:26:08Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeClient.java", "diffHunk": "@@ -920,7 +920,6 @@ private Challenge prepareHttpChallenge(Authorization auth) throws AcmeCaExceptio\n \t\t\t\t+ challenge.getAuthorization() + \"'.\");\n \t\treturn challenge;\n \t}\n-\n \t/**\n \t * Revoke a certificate using an existing account on the ACME server. If the\n \t * account key pair cannot be found, we will fail.", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMjQxNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442312414", "bodyText": "Whitespace between methods.", "author": "jvanhill", "createdAt": "2020-06-18T15:27:08Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeClient.java", "diffHunk": "@@ -1020,16 +1041,28 @@ private static void sleep(long sleepMs, long orUntil) {\n \t\t\t}\n \t\t}\n \t}\n+\t/**", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNDAxMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442314010", "bodyText": "Update comment to explain this uses the configured directory URI.", "author": "jvanhill", "createdAt": "2020-06-18T15:29:28Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeClient.java", "diffHunk": "@@ -1020,16 +1041,28 @@ private static void sleep(long sleepMs, long orUntil) {\n \t\t\t}\n \t\t}\n \t}\n+\t/**\n+\t * Create a new session with the ACME CA server.\n+\t * ", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNTAwOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442315008", "bodyText": "javadoc", "author": "jvanhill", "createdAt": "2020-06-18T15:31:01Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistory.java", "diffHunk": "@@ -236,4 +237,28 @@ public void writeAcmeFileLine(File file, String date, String serial, String dire\n \t\t}\n \t\treturn entries;\n \t}\n+\t\n+\tpublic String getDirectoryURI(String serial) {", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxODUzMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442318531", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t//Write 10 fake entries to the ACME file\n          \n          \n            \n            \t\t\t//Write 9 fake entries to the ACME file", "author": "jvanhill", "createdAt": "2020-06-18T15:35:58Z", "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeSwapDirectoriesTest.java", "diffHunk": "@@ -373,7 +374,7 @@ public void update_directoryURI_maxFileSize() throws Exception {\n \n \t\t\t//Write 10 fake entries to the ACME file", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyMDU4MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442320581", "bodyText": "We repeat the tokenizing of this file in several methods. Can't we just have one method that reads the files, creates some simple pojo that contains the data, and then call that from all of these methods? I think that would make it much cleaner and reduce the number of places that have the same sort of code that we need to maintain.", "author": "jvanhill", "createdAt": "2020-06-18T15:38:56Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistory.java", "diffHunk": "@@ -236,4 +237,28 @@ public void writeAcmeFileLine(File file, String date, String serial, String dire\n \t\t}\n \t\treturn entries;\n \t}\n+\t\n+\tpublic String getDirectoryURI(String serial) {\n+\t\tif (!acmeFile.exists()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\ttry {\n+\t\t    BufferedReader br = new BufferedReader(new FileReader(acmeFile));", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyMjE4Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442322183", "bodyText": "Comment:\nCheck to see if the certificate is in the history file - it should be unless we are transitioning from self-signed to ACME. If the certificate isn't in the history file, use the configured directory URI.", "author": "jvanhill", "createdAt": "2020-06-18T15:41:29Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeProviderImpl.java", "diffHunk": "@@ -290,7 +290,14 @@ public void revoke(List<X509Certificate> certificateChain, String reason) throws\n \t\tacquireWriteLock();\n \t\ttry {\n \t\t\tX509Certificate certificate = getLeafCertificate(certificateChain);\n-\t\t\tgetAcmeClient().revoke(certificate, reason);\n+\t\t\tif (certificate == null) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tString directoryURI = acmeHistory.getDirectoryURI(certificate.getSerialNumber().toString(16));", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyMjU5Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r442322596", "bodyText": "Probably some debug indicating the certificate wasn't found in the history file.", "author": "jvanhill", "createdAt": "2020-06-18T15:42:03Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeProviderImpl.java", "diffHunk": "@@ -290,7 +290,14 @@ public void revoke(List<X509Certificate> certificateChain, String reason) throws\n \t\tacquireWriteLock();\n \t\ttry {\n \t\t\tX509Certificate certificate = getLeafCertificate(certificateChain);\n-\t\t\tgetAcmeClient().revoke(certificate, reason);\n+\t\t\tif (certificate == null) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tString directoryURI = acmeHistory.getDirectoryURI(certificate.getSerialNumber().toString(16));\n+\t\t\tif (directoryURI == null) {\n+\t\t\t\tdirectoryURI = acmeConfig.getDirectoryURI();", "originalCommit": "955d9a60602536ff84be59f65848dc93d7850fbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "953949c6c4f78c7654f7e496cfe6f460aaeacc2d", "url": "https://github.com/OpenLiberty/open-liberty/commit/953949c6c4f78c7654f7e496cfe6f460aaeacc2d", "message": "update certificate revoker after renewal", "committedDate": "2020-06-23T19:00:22Z", "type": "forcePushed"}, {"oid": "b729423d6b8418e249dc327c72755480567a18a8", "url": "https://github.com/OpenLiberty/open-liberty/commit/b729423d6b8418e249dc327c72755480567a18a8", "message": "update certificate revoker after renewal", "committedDate": "2020-06-24T14:54:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1NTMzNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444955337", "bodyText": "Need copyright.", "author": "jvanhill", "createdAt": "2020-06-24T14:53:35Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistoryEntry.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.ibm.ws.security.acme.internal;", "originalCommit": "953949c6c4f78c7654f7e496cfe6f460aaeacc2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1NTQ4NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444955485", "bodyText": "Need javadoc... here and on methods.", "author": "jvanhill", "createdAt": "2020-06-24T14:53:48Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistoryEntry.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package com.ibm.ws.security.acme.internal;\n+\n+public class AcmeHistoryEntry {", "originalCommit": "953949c6c4f78c7654f7e496cfe6f460aaeacc2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1ODk0Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444958942", "bodyText": "Seems these return codes should be constants.", "author": "jvanhill", "createdAt": "2020-06-24T14:58:26Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistory.java", "diffHunk": "@@ -99,23 +105,31 @@ protected boolean directoryURIChanged(String currentDirectoryURI, WsLocationAdmi\n      *          2 if the file was not created", "originalCommit": "b729423d6b8418e249dc327c72755480567a18a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MDAzMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444960033", "bodyText": "Shouldn't this logic just go in the writeAcmeFileLine method? can't we make this check there?", "author": "jvanhill", "createdAt": "2020-06-24T14:59:52Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistory.java", "diffHunk": "@@ -145,61 +159,51 @@ protected void updateAcmeFile(AcmeCertificate acmeCertificate, X509Certificate c\n \t\t}\n \t\tLocalDateTime now = LocalDateTime.now();  \n \t\tString date = FORMATTER.format(now);\n-\t\tString serial = null;\n-\t\tif (acmeCertificate == null) {\n-\t\t\tif (certificate != null) serial = certificate.getSerialNumber().toString(16);\n-\t\t} else {\n-\t\t\tserial = acmeCertificate.getCertificate().getSerialNumber().toString(16);\n+\t\tString serial = null, expirationDate = null;\n+\t\tX509Certificate cert = certificate;\n+\t\tif (acmeCertificate != null) {\n+\t\t\tcert = acmeCertificate.getCertificate();\n \t\t}\n-\n-\t\tFile file = wslocation.getServerWorkareaResource(\"acme/\" + acmeFile).asFile();\n-\t\twriteAcmeFileLine(file, date, serial, directoryURI, accountURI);\n+\t\tserial = cert.getSerialNumber().toString(16);\n+\t\texpirationDate = df.format(cert.getNotAfter());\n+\t\tAcmeHistoryEntry newEntry = new AcmeHistoryEntry(date, serial, directoryURI, accountURI, expirationDate);\n+\t\tacmeHistoryEntries.add(newEntry);\n+\t\tboolean rewriteFile = false;\n+\t\t//Enforce max file size and remove the oldest entry if we are over max\n+\t\tif (acmeHistoryEntries.size() > AcmeConstants.ACME_HISTORICAL_FILE_MAX_SIZE) {", "originalCommit": "b729423d6b8418e249dc327c72755480567a18a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMTg3NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r445031875", "bodyText": "Since I changed the FAT, I no longer need to split these two methods up. I will put them together.", "author": "ryanesch", "createdAt": "2020-06-24T16:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MDAzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MTU5OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444961599", "bodyText": "Whitespace. (for all methods in this class)", "author": "jvanhill", "createdAt": "2020-06-24T15:01:45Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistoryEntry.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.security.acme.internal;\n+\n+/**\n+ * This class represents one entry in the AcmeHistory file.\n+ *\n+ */\n+public class AcmeHistoryEntry {\n+\tprivate String date;\n+\tprivate String serial;\n+\tprivate String directoryURI;\n+\tprivate String accountURI;\n+\tprivate String expirationDate;\n+\tprivate String smallSpaceDelim = \"         \";\n+\tpublic AcmeHistoryEntry(String date, String serial, String directoryURI, String accountURI, String expirationDate) {", "originalCommit": "b729423d6b8418e249dc327c72755480567a18a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MjcwOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444962708", "bodyText": "Do we use the set methods? Seems this should be an immutable class.", "author": "jvanhill", "createdAt": "2020-06-24T15:03:10Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeHistoryEntry.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.security.acme.internal;\n+\n+/**\n+ * This class represents one entry in the AcmeHistory file.\n+ *\n+ */\n+public class AcmeHistoryEntry {\n+\tprivate String date;\n+\tprivate String serial;\n+\tprivate String directoryURI;\n+\tprivate String accountURI;\n+\tprivate String expirationDate;\n+\tprivate String smallSpaceDelim = \"         \";\n+\tpublic AcmeHistoryEntry(String date, String serial, String directoryURI, String accountURI, String expirationDate) {\n+\t\tthis.date=date;\n+\t\tthis.serial=serial;\n+\t\tthis.directoryURI = directoryURI;\n+\t\tthis.accountURI = accountURI;\n+\t\tthis.expirationDate = expirationDate;\n+\t}\n+\tprotected String getDate() {\n+\t\treturn date;\n+\t}\n+\tprotected void setDate(String date) {", "originalCommit": "b729423d6b8418e249dc327c72755480567a18a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MzczMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12618#discussion_r444963730", "bodyText": "Check whether anytrace and debug is enabled before calling.", "author": "jvanhill", "createdAt": "2020-06-24T15:04:35Z", "path": "dev/com.ibm.ws.security.acme/src/com/ibm/ws/security/acme/internal/AcmeProviderImpl.java", "diffHunk": "@@ -290,7 +290,17 @@ public void revoke(List<X509Certificate> certificateChain, String reason) throws\n \t\tacquireWriteLock();\n \t\ttry {\n \t\t\tX509Certificate certificate = getLeafCertificate(certificateChain);\n-\t\t\tgetAcmeClient().revoke(certificate, reason);\n+\t\t\tif (certificate == null) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\t//Check to see if the certificate is in the history file - it should be unless we are transitioning from self-signed to ACME. \n+\t\t\t//If the certificate isn't in the history file, use the configured directory URI.\n+\t\t\tString directoryURI = acmeHistory.getDirectoryURI(certificate.getSerialNumber().toString(16));\n+\t\t\tif (directoryURI == null) {\n+\t\t\t\tTr.debug(tc, \"The certificate was not found in the AcmeHistory file. Use the configured directory URI to revoke.\");", "originalCommit": "b729423d6b8418e249dc327c72755480567a18a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "55f5fc09ce8889268616ebbfed8409b829003387", "url": "https://github.com/OpenLiberty/open-liberty/commit/55f5fc09ce8889268616ebbfed8409b829003387", "message": "update certificate revoker after renewal", "committedDate": "2020-06-24T16:48:57Z", "type": "forcePushed"}, {"oid": "e0e505adfe0e42fb62d4f690187aae9e070f3c1b", "url": "https://github.com/OpenLiberty/open-liberty/commit/e0e505adfe0e42fb62d4f690187aae9e070f3c1b", "message": "update certificate revoker after renewal", "committedDate": "2020-06-25T15:11:51Z", "type": "forcePushed"}, {"oid": "e29aba65c1455dd4347a8f453bda06110517217f", "url": "https://github.com/OpenLiberty/open-liberty/commit/e29aba65c1455dd4347a8f453bda06110517217f", "message": "update certificate revoker after renewal", "committedDate": "2020-06-25T17:24:26Z", "type": "forcePushed"}, {"oid": "a9a9277c4f8af01c7710d0ccb1c8f7889139bdec", "url": "https://github.com/OpenLiberty/open-liberty/commit/a9a9277c4f8af01c7710d0ccb1c8f7889139bdec", "message": "update certificate revoker after renewal", "committedDate": "2020-06-25T17:29:58Z", "type": "forcePushed"}, {"oid": "2ef1bc3bb1fcdd52491faafd83d7b742cc88e64a", "url": "https://github.com/OpenLiberty/open-liberty/commit/2ef1bc3bb1fcdd52491faafd83d7b742cc88e64a", "message": "update certificate revoker after renewal", "committedDate": "2020-06-26T12:48:55Z", "type": "forcePushed"}, {"oid": "d956766572708f2089aafe392f3c245fd1e406dc", "url": "https://github.com/OpenLiberty/open-liberty/commit/d956766572708f2089aafe392f3c245fd1e406dc", "message": "update certificate revoker after renewal", "committedDate": "2020-06-26T20:54:11Z", "type": "commit"}, {"oid": "d956766572708f2089aafe392f3c245fd1e406dc", "url": "https://github.com/OpenLiberty/open-liberty/commit/d956766572708f2089aafe392f3c245fd1e406dc", "message": "update certificate revoker after renewal", "committedDate": "2020-06-26T20:54:11Z", "type": "forcePushed"}]}