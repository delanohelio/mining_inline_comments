{"pr_number": 13766, "pr_title": "Update grpcClient configuration attributes", "pr_createdAt": "2020-09-01T21:13:51Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13766", "timeline": [{"oid": "59fe7de71d8c6e00f782bff944eccd4c0ecafd3a", "url": "https://github.com/OpenLiberty/open-liberty/commit/59fe7de71d8c6e00f782bff944eccd4c0ecafd3a", "message": "rename grpcClient target -> host", "committedDate": "2020-09-03T00:05:44Z", "type": "forcePushed"}, {"oid": "e16c33bf1138701178fae90f59f1aa6602f3cd2b", "url": "https://github.com/OpenLiberty/open-liberty/commit/e16c33bf1138701178fae90f59f1aa6602f3cd2b", "message": "replace grpcClient \"target\" config with \"host\" and \"port\"", "committedDate": "2020-09-08T16:23:55Z", "type": "forcePushed"}, {"oid": "eb42aa9ebac90a186c03c69b06b45afd81aa5f31", "url": "https://github.com/OpenLiberty/open-liberty/commit/eb42aa9ebac90a186c03c69b06b45afd81aa5f31", "message": "replace grpcClient \"target\" config with \"host\" and \"port\"", "committedDate": "2020-09-08T16:45:16Z", "type": "forcePushed"}, {"oid": "8b125b5a127881071575771a6e01917542678351", "url": "https://github.com/OpenLiberty/open-liberty/commit/8b125b5a127881071575771a6e01917542678351", "message": "replace grpcClient \"target\" config with \"host\" and \"port\"", "committedDate": "2020-09-08T20:53:41Z", "type": "forcePushed"}, {"oid": "55467be80a7b0b7a5006d6a639536f12f212a29c", "url": "https://github.com/OpenLiberty/open-liberty/commit/55467be80a7b0b7a5006d6a639536f12f212a29c", "message": "fix ssl config attribute for grpcClient", "committedDate": "2020-09-09T15:09:22Z", "type": "commit"}, {"oid": "6612f064aae2279403a2fe0bfdfacf7e6a6b3f5e", "url": "https://github.com/OpenLiberty/open-liberty/commit/6612f064aae2279403a2fe0bfdfacf7e6a6b3f5e", "message": "add new grpcClient server.xml config props", "committedDate": "2020-09-09T15:09:23Z", "type": "commit"}, {"oid": "a5df0f0b70f88e2ac83fe129ed6ee6156aa88a38", "url": "https://github.com/OpenLiberty/open-liberty/commit/a5df0f0b70f88e2ac83fe129ed6ee6156aa88a38", "message": "remove authnToken config from grpcClient", "committedDate": "2020-09-09T15:11:15Z", "type": "commit"}, {"oid": "a51a66927a094174919c2f9c22832a3d3a11dd44", "url": "https://github.com/OpenLiberty/open-liberty/commit/a51a66927a094174919c2f9c22832a3d3a11dd44", "message": "rename server.xml grpcTarget -> grpcClient", "committedDate": "2020-09-09T15:16:07Z", "type": "commit"}, {"oid": "973dd4ad921d313ef0e116811f5825e3c04a32a5", "url": "https://github.com/OpenLiberty/open-liberty/commit/973dd4ad921d313ef0e116811f5825e3c04a32a5", "message": "replace grpcClient \"target\" config with \"host\" and \"port\"", "committedDate": "2020-09-09T15:17:13Z", "type": "commit"}, {"oid": "722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "url": "https://github.com/OpenLiberty/open-liberty/commit/722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "message": "merge updates", "committedDate": "2020-09-09T16:17:17Z", "type": "commit"}, {"oid": "722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "url": "https://github.com/OpenLiberty/open-liberty/commit/722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "message": "merge updates", "committedDate": "2020-09-09T16:17:17Z", "type": "forcePushed"}, {"oid": "722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "url": "https://github.com/OpenLiberty/open-liberty/commit/722e4e5af25d5dbb5bde2f7112299593c6a32ee7", "message": "merge updates", "committedDate": "2020-09-09T16:17:17Z", "type": "forcePushed"}, {"oid": "ab946af60b6f5cccde9d35d940729cc2a5af67e9", "url": "https://github.com/OpenLiberty/open-liberty/commit/ab946af60b6f5cccde9d35d940729cc2a5af67e9", "message": "merge with integration", "committedDate": "2020-09-09T16:24:20Z", "type": "commit"}, {"oid": "e91e798c79b1a0e77cbae2a4daf46f329b3fe831", "url": "https://github.com/OpenLiberty/open-liberty/commit/e91e798c79b1a0e77cbae2a4daf46f329b3fe831", "message": "add grpcClient usePlaintext config prop", "committedDate": "2020-09-09T18:25:13Z", "type": "commit"}, {"oid": "18cd5dd290d396816084da1722f660f239955781", "url": "https://github.com/OpenLiberty/open-liberty/commit/18cd5dd290d396816084da1722f660f239955781", "message": "code review updates", "committedDate": "2020-09-09T21:05:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNTU1OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486525559", "bodyText": "Suggested update\n\nA path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n\nTo\n\nA path consists of the gRPC service and method names, in the \"ServiceName/MethodName\" format.", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:49:25Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjY1Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486526657", "bodyText": "Suggested update\n\nPerform keepalive when there are no outstanding RPCs on the channel.\n\nTo\n\nPerform keepalive when no outstanding RPCs are on the channel.", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:51:15Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486526845", "bodyText": "Suggested update\n\nSSL Reference\n\nTo\n\nSSL reference", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:51:36Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzNzY4Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486537682", "bodyText": "I agree that making reference lowercase here makes the most sense - but the build process includes a schema validator tool that fails if I make this change.", "author": "wtlucy", "createdAt": "2020-09-10T18:10:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU0OTIyNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486549227", "bodyText": "junit.framework.AssertionFailedError: The label \"SSL reference\" for element ssl of pid io.openliberty.grpc.clientConfig should be in title case.", "author": "wtlucy", "createdAt": "2020-09-10T18:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1NDE3Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486554176", "bodyText": "Ah, okay. Then it's alright.", "author": "Charlotte-Holt", "createdAt": "2020-09-10T18:33:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNjg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyNzc1Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486527757", "bodyText": "Suggested update\n\nA custom authority which will override the default authority.\n\nTo\n\nA custom authority that overrides the default authority.", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:53:03Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyOTQ4NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486529484", "bodyText": "Suggested update\n\nA custom User-Agent which will prepend the default User-Agent.\n\nTo\n\nA custom User-Agent that adds a prefix to the default User-Agent.", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:55:59Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUyOTc0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486529743", "bodyText": "Suggested update\n\nUse a plaintext connection\n\nTo\n\nUse a plain text connection", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:56:23Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.\n+\n+usePlaintext=Use a plaintext connection", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUzMDAxNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13766#discussion_r486530016", "bodyText": "Suggested update\n\nUse a plaintext connection for the outbound gRPC channel.\n\nTo\n\nUse a plain text connection for the outbound gRPC channel.", "author": "Charlotte-Holt", "createdAt": "2020-09-10T17:56:52Z", "path": "dev/io.openliberty.grpc.1.0.internal.client/resources/OSGI-INF/l10n/metatype.properties", "diffHunk": "@@ -18,29 +18,42 @@\n clientConfig=GRPC Client Properties\n clientConfig.desc=Configuration properties to be applied to gRPC targets that match the specified URI.\n \n-target=Remote target\n-target.desc=The remote gRPC target URI, with wildcard support.\n+host=Remote host\n+host.desc=The remote gRPC service hostname or IP address, with wildcard support.\n+\n+path=Remote procedure path\n+path.desc=The remote gRPC service path, with wildcard support. A path consists of the gRPC service and method names, in the form \"ServiceName/MethodName\".\n \n headersToPropagate=HTTP header names to propagate\n headersToPropagate.desc=HTTP header names to propagate from an inbound request to an outbound call.\n \n clientInterceptors=GRPC client interceptors\n clientInterceptors.desc=A list of fully qualified class names for gRPC client interceptor classes.\n \n-authnToken=Authorization token\n-authnToken.desc=The type of authorization token to propagate. Currently supported token types are jwt or oauth.\n-\n-enableKeepAlive=Keepalive\n-enableKeepAlive.desc=Enable gRPC keepalive.\n-\n keepAliveTime=Keepalive interval\n keepAliveTime.desc=The time to wait for new messages before sending a new keepalive ping.\n \n keepAliveTimeout=Keepalive timeout\n keepAliveTimeout.desc=End the connection if a keepalive response is not received within this time.\n \n+keepAliveWithoutCalls=Keepalive without calls\n+keepAliveWithoutCalls.desc=Perform keepalive when there are no outstanding RPCs on the channel.\n+\n maxInboundMessageSize=Maximum message size\n maxInboundMessageSize.desc=The maximum inbound message size.\n  \n-sslConfig=The id of an ssl reference in server.xml\n-sslConfig.desc=An id of an ssl reference found in server.xml. The ssl configuration that is specified by this reference is used in the gRPC client configuration.\n+sslRef=SSL Reference\n+sslRef.desc=Specifies an ID of the SSL configuration that is used to connect to the gRPC service.\n+sslRef$Ref=SSL reference\n+\n+maxInboundMetadataSize=Maximum metadata size\n+maxInboundMetadataSize.desc=The maximum allowed inbound metadata size.\n+\n+overrideAuthority=Override authority\n+overrideAuthority.desc=A custom authority which will override the default authority.\n+\n+userAgent=Custom user agent\n+userAgent.desc=A custom User-Agent which will prepend the default User-Agent.\n+\n+usePlaintext=Use a plaintext connection\n+usePlaintext.desc=Use a plaintext connection for the outbound gRPC channel.", "originalCommit": "18cd5dd290d396816084da1722f660f239955781", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7faa31fdb87300e8adaf11d3b6d04748b318bb9c", "url": "https://github.com/OpenLiberty/open-liberty/commit/7faa31fdb87300e8adaf11d3b6d04748b318bb9c", "message": "ID review updates", "committedDate": "2020-09-10T18:28:44Z", "type": "commit"}]}