{"pr_number": 13055, "pr_title": "Fix for injecting ManagedExecutorService using @Resource into CDI bean", "pr_createdAt": "2020-07-15T21:53:45Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13055", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyOTI4Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13055#discussion_r455629286", "bodyText": "I expect that you intended to remove the line above?", "author": "tevans78", "createdAt": "2020-07-16T08:52:05Z", "path": "dev/com.ibm.ws.cdi.weld/src/com/ibm/ws/cdi/impl/weld/injection/EEValidationUtils.java", "diffHunk": "@@ -212,26 +212,27 @@ private static void validateJndiLookup(InitialContext c, String lookupString, An\n                 try {\n                     String className = pair.getClassName();\n                     Class<?> jndiClass = cdiArchive.getClassLoader().loadClass(className);\n-                    if (\"javax.resource.cci.ConnectionFactory\".equals(className)) {\n-                        try {\n-                            Object o = c.lookup(lookupName);\n-                            if (o != null) {\n-                                jndiClass = o.getClass();\n-                            }\n-                        } catch (RuntimeException e) {\n-                            // An error occurred while getting the object from JNDI. This may happen\n-                            // at this early point in the initialisation process, but if so we just\n-                            // skip validation.\n-                        }\n-                    } else {\n-                        try {\n-                            jndiClass = cdiArchive.getClassLoader().loadClass(className);\n-                        } catch (ClassNotFoundException ex) {\n-                            // Couldn't load the jndiClass name, can't validate\n-                        }\n+                    try {", "originalCommit": "b9790c43d0e89c962ed892e4f175cbcaa8d8e124", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxMDY0MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13055#discussion_r461710641", "bodyText": "good point, I didn't realize this was redundant with the try/catch block. I can just remove the try/catch entirely since we're already doing cdiArchive.getClassLoader().loadClass(className) earlier with no try/catch", "author": "aguibert", "createdAt": "2020-07-28T16:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyOTI4Ng=="}], "type": "inlineReview"}, {"oid": "a75e478c02c94c4f3a0f465388480c25994089e1", "url": "https://github.com/OpenLiberty/open-liberty/commit/a75e478c02c94c4f3a0f465388480c25994089e1", "message": "Generic support for injecting objects from JNDI registered as multiple types", "committedDate": "2020-07-28T16:24:24Z", "type": "forcePushed"}, {"oid": "3480d8e2443425f031bc8c7df2871ba1b0412383", "url": "https://github.com/OpenLiberty/open-liberty/commit/3480d8e2443425f031bc8c7df2871ba1b0412383", "message": "Reproduce issue for @Inject on ManagedExecutorService", "committedDate": "2020-07-28T16:24:39Z", "type": "commit"}, {"oid": "1ccdc7c7412c58e91b8ad60f9871d096062819fe", "url": "https://github.com/OpenLiberty/open-liberty/commit/1ccdc7c7412c58e91b8ad60f9871d096062819fe", "message": "Generic support for injecting objects from JNDI registered as multiple types", "committedDate": "2020-07-28T16:24:39Z", "type": "commit"}, {"oid": "1ccdc7c7412c58e91b8ad60f9871d096062819fe", "url": "https://github.com/OpenLiberty/open-liberty/commit/1ccdc7c7412c58e91b8ad60f9871d096062819fe", "message": "Generic support for injecting objects from JNDI registered as multiple types", "committedDate": "2020-07-28T16:24:39Z", "type": "forcePushed"}]}