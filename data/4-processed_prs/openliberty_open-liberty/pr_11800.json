{"pr_number": 11800, "pr_title": "Allow the creation of the KafkaConsumer to be retried", "pr_createdAt": "2020-04-17T16:17:10Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11800", "timeline": [{"oid": "7ddb3733a92a322d0040dfd163238d42991b27a9", "url": "https://github.com/OpenLiberty/open-liberty/commit/7ddb3733a92a322d0040dfd163238d42991b27a9", "message": "Retry obtaining KafkaConsumer\n\nWhen starting in a dynamic environment like Kubertnetes, it's possible\nfor the broker hostname to be unresolvable immediately at startup, which\ncauses the creation of the KafkaConsumer to fail.\n\nIntroduce a new parameter to allow the KafkaConsumer creation to be\nretried during server startup.", "committedDate": "2020-04-22T16:01:07Z", "type": "commit"}, {"oid": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "url": "https://github.com/OpenLiberty/open-liberty/commit/e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "message": "Add test for bad config\n\nCheck that app fails to start and that creation of the KafkaConsumer is\nretried if creation.retry.seconds is set.", "committedDate": "2020-04-22T16:01:07Z", "type": "commit"}, {"oid": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "url": "https://github.com/OpenLiberty/open-liberty/commit/e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "message": "Add test for bad config\n\nCheck that app fails to start and that creation of the KafkaConsumer is\nretried if creation.retry.seconds is set.", "committedDate": "2020-04-22T16:01:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2NzY5Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r412467692", "bodyText": "change\nserver message.log\nto\nthe message.log file on the server", "author": "jantley-ibm", "createdAt": "2020-04-21T20:26:31Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -60,6 +60,22 @@ kafka.library.not.present.CWMRX1006E=CWMRX1006E: Classes from the kafka-clients\n kafka.library.not.present.CWMRX1006E.explanation=Applications that use the Reactive Messaging Kafka Client must provide the kafka-clients JAR file and its dependencies. They can provide this file and its dependencies either by packaging it as a library within the application or by providing it as a shared library.\n kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR file and its dependencies as libraries in your application or as a shared library. The kafka-clients JAR file can be downloaded from the Apache Kafka website or from Maven Central.\n \n+# A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n+kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n+kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.", "originalCommit": "5b4d9eacded154ffc1b153c7c8446edaf01bcee5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2ODAwMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r412468002", "bodyText": "change\nserver message.log\nto\nthe message.log file on the server", "author": "jantley-ibm", "createdAt": "2020-04-21T20:27:02Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -60,6 +60,22 @@ kafka.library.not.present.CWMRX1006E=CWMRX1006E: Classes from the kafka-clients\n kafka.library.not.present.CWMRX1006E.explanation=Applications that use the Reactive Messaging Kafka Client must provide the kafka-clients JAR file and its dependencies. They can provide this file and its dependencies either by packaging it as a library within the application or by providing it as a shared library.\n kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR file and its dependencies as libraries in your application or as a shared library. The kafka-clients JAR file can be downloaded from the Apache Kafka website or from Maven Central.\n \n+# A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n+kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n+kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+\n+# A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n+kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n+kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n+kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.", "originalCommit": "5b4d9eacded154ffc1b153c7c8446edaf01bcee5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5ODU3OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413198578", "bodyText": "change\nserver message.log\nto\nthe message.log file on the server", "author": "jantley-ibm", "createdAt": "2020-04-22T17:59:34Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -70,6 +70,12 @@ kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector fo\n kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n \n+# {0} = channel name, {1} = error message\n+kafka.create.incoming.retry.CWMRX1009W=CWMRX1009W: A Kafka incoming connector for the {0} channel could not be created but this operation will be retried. The error is {1}\n+kafka.create.incoming.retry.CWMRX1009W.explanation=An error occurred when the Kafka connector was set up for an incoming reactive messaging channel but the set up will be retried.\n+kafka.create.incoming.retry.CWMRX1009W.useraction=Review the error message, server message.log, and FFDC logs to identify whether the problem was transient and was resolved by retrying the connector set up.", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3NzIxMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413677210", "bodyText": "Please extract this sleep time to a constant. Any thoughts on if it needs to be configurable?", "author": "tevans78", "createdAt": "2020-04-23T09:53:00Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/src/com/ibm/ws/microprofile/reactive/messaging/kafka/KafkaIncomingConnector.java", "diffHunk": "@@ -135,4 +138,25 @@ private void shutdown() {\n         }\n     }\n \n+    private <K, V> KafkaConsumer<K, V> getKafkaConsumerWithRetry(Map<String, Object> consumerConfig, int retrySeconds, String channelName) throws InterruptedException {\n+        if (retrySeconds == 0) {\n+            return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);\n+        }\n+\n+        long retryNs = Duration.ofSeconds(retrySeconds).toNanos();\n+        long startTime = System.nanoTime();\n+\n+        while (true) {\n+            try {\n+                return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);\n+            } catch (KafkaAdapterException e) {\n+                if ((System.nanoTime() - startTime) > retryNs) {\n+                    throw e;\n+                }\n+                Tr.warning(tc, \"kafka.create.incoming.retry.CWMRX1009W\", channelName, e.getMessage());\n+            }\n+            Thread.sleep(1000);", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjI1Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413686257", "bodyText": "It's a fairly limited use case (broker hostname is not resolvable at startup) so I went for a simpler single option configuration, rather than two options (number of times to retry + delay between retries).", "author": "Azquelt", "createdAt": "2020-04-23T10:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3NzIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjYyOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413686628", "bodyText": "I'm not sure that extracting it into a constant actually helps anything here.", "author": "Azquelt", "createdAt": "2020-04-23T10:06:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3NzIxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MTM2Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413681363", "bodyText": "In SmallRye, the wait between the retry is 30s. https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2/kafka/kafka.html I think the default should be 30s instead of 0.", "author": "Emily-Jiang", "createdAt": "2020-04-23T09:59:07Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/src/com/ibm/ws/microprofile/reactive/messaging/kafka/KafkaIncomingConnector.java", "diffHunk": "@@ -96,6 +98,7 @@ private void shutdown() {\n             String topic = config.getOptionalValue(KafkaConnectorConstants.TOPIC, String.class).orElse(channelName);\n             int maxPollRecords = config.getOptionalValue(KafkaConnectorConstants.MAX_POLL_RECORDS, Integer.class).orElse(500);\n             int unackedLimit = config.getOptionalValue(KafkaConnectorConstants.UNACKED_LIMIT, Integer.class).orElse(maxPollRecords);\n+            int retrySeconds = config.getOptionalValue(KafkaConnectorConstants.CREATION_RETRY_SECONDS, Integer.class).orElse(0);", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4Mzk2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413683967", "bodyText": "I disagree.\nWe can't tell the difference between a failure caused by the hostname not being resolvable and a failure caused by bad configuration.\nIf the user has configured the application wrongly, we want to app to fail to start as soon as possible, not pointlessly retry for 30s.\nAs far as we've seen so far, having the broker hostname not be resolvable is the only failure that Kafka treats this way, in most cases network failures are already retried automatically by the kafka client.", "author": "Azquelt", "createdAt": "2020-04-23T10:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MTM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NTM0MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413685341", "bodyText": "No-one should have to use this unless they're deploying in an environment where the kafka broker and the app are being brought up at the same time. (e.g. during a kubernetes deployment in a test environment)", "author": "Azquelt", "createdAt": "2020-04-23T10:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MTM2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MzU4Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413683583", "bodyText": "Can we sync up with SmallRye for the retry-max-wait, retry-attempts?", "author": "Emily-Jiang", "createdAt": "2020-04-23T10:02:23Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/src/com/ibm/ws/microprofile/reactive/messaging/kafka/KafkaIncomingConnector.java", "diffHunk": "@@ -135,4 +138,25 @@ private void shutdown() {\n         }\n     }\n \n+    private <K, V> KafkaConsumer<K, V> getKafkaConsumerWithRetry(Map<String, Object> consumerConfig, int retrySeconds, String channelName) throws InterruptedException {\n+        if (retrySeconds == 0) {\n+            return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);\n+        }\n+\n+        long retryNs = Duration.ofSeconds(retrySeconds).toNanos();\n+        long startTime = System.nanoTime();\n+\n+        while (true) {\n+            try {\n+                return this.kafkaAdapterFactory.newKafkaConsumer(consumerConfig);", "originalCommit": "e274d7c7932a0429f8b1c004c0d16fed0e9a9015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NDM4OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413684389", "bodyText": "I'm not sure what the point of those options are in smallrye, they don't seem to be the same as this one.\nThey talk about retrying the connection if it goes down, which is not what this change is doing.", "author": "Azquelt", "createdAt": "2020-04-23T10:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MzU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4ODczNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r413688736", "bodyText": "I named the property creation.retry.seconds to emphasise that it's only the creation of the kafka client which is retried.\nOnce we have set up the kafka client, we leave it to do any retries itself.", "author": "Azquelt", "createdAt": "2020-04-23T10:10:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4MzU4Mw=="}], "type": "inlineReview"}, {"oid": "66af0d2ae019875d93696074421d4e886edff520", "url": "https://github.com/OpenLiberty/open-liberty/commit/66af0d2ae019875d93696074421d4e886edff520", "message": "Message review changes for Kafka connector", "committedDate": "2020-04-23T14:07:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwMDQ1Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r416000456", "bodyText": "Change could not be created to cannot be created or to was not created", "author": "helyarp", "createdAt": "2020-04-27T17:19:21Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -63,12 +63,18 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n \n # A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n+\n+# {0} = channel name, {1} = error message\n+kafka.create.incoming.retry.CWMRX1009W=CWMRX1009W: A Kafka incoming connector for the {0} channel could not be created but this operation will be retried. The error is {1}", "originalCommit": "66af0d2ae019875d93696074421d4e886edff520", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwMzU3OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r416003578", "bodyText": "Change the second \"set up\" to \"setup\" because it is a noun. Thus, change to: was set up for an incoming reactive messaging channel but the setup will be retried.", "author": "helyarp", "createdAt": "2020-04-27T17:23:55Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -63,12 +63,18 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n \n # A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n+\n+# {0} = channel name, {1} = error message\n+kafka.create.incoming.retry.CWMRX1009W=CWMRX1009W: A Kafka incoming connector for the {0} channel could not be created but this operation will be retried. The error is {1}\n+kafka.create.incoming.retry.CWMRX1009W.explanation=An error occurred when the Kafka connector was set up for an incoming reactive messaging channel but the set up will be retried.", "originalCommit": "66af0d2ae019875d93696074421d4e886edff520", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyOTg1Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r419629856", "bodyText": "Per QA ID review, provide a couple of possible or likely errors that might have occurred to cause this error. The explanation should have more information than just a restating of the error message.", "author": "jantley-ibm", "createdAt": "2020-05-04T18:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwMzU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzODYwMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r419638600", "bodyText": "Also, avoid future tense if possible. You can achieve this by stating \"when X, the setup is retried.\" instead of \"the setup will be retried.\"", "author": "jantley-ibm", "createdAt": "2020-05-04T18:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwMzU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzMDczOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r420230739", "bodyText": "provide a couple of possible or likely errors that might have occurred to cause this error\n\nI think I can do this. We're calling a third party API and it's throwing an exception. We don't know all the reasons that this error can occur but we can make a guess at what it might be.\nThe most important part of this message is informing the user that the error occurred during channel setup and which channel it occurred for. The error message included as placeholder {1} is the exception thrown by the API which hopefully says what's gone wrong.\n\navoid future tense if possible. You can achieve this by stating \"when X, the setup is retried.\" instead of \"the setup will be retried.\"\n\nHmm, we emit this message after catching an exception from a third-party API. We wait for a short period and then retry.\nI guess I could say \"the setup is being retried\", even though we're actually going to wait a second or so before we actually retry it? Otherwise I'm not sure how to avoid using the future tense here.", "author": "Azquelt", "createdAt": "2020-05-05T16:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwMzU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3NDQ3MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r420274471", "bodyText": "@jantley-ibm I've made these changes, could you take a look at the latest commit on this PR? Thanks.", "author": "Azquelt", "createdAt": "2020-05-05T17:15:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwMzU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNDMxOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r416004319", "bodyText": "Change  set up to setup because it is a noun: the connector setup.", "author": "helyarp", "createdAt": "2020-04-27T17:24:53Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -63,12 +63,18 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n \n # A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n+\n+# {0} = channel name, {1} = error message\n+kafka.create.incoming.retry.CWMRX1009W=CWMRX1009W: A Kafka incoming connector for the {0} channel could not be created but this operation will be retried. The error is {1}\n+kafka.create.incoming.retry.CWMRX1009W.explanation=An error occurred when the Kafka connector was set up for an incoming reactive messaging channel but the set up will be retried.\n+kafka.create.incoming.retry.CWMRX1009W.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify whether the problem was transient and was resolved by retrying the connector set up.", "originalCommit": "66af0d2ae019875d93696074421d4e886edff520", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyOTA0OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r419629048", "bodyText": "There's been additional ID QA review on this PR. For CWMRX1007E.explanation, we need to not say \"An error ... occurred\". The reviewer suggests that if there are multiple possible errors that could have occurred, we should provide a couple of the likely possible ones.", "author": "jantley-ibm", "createdAt": "2020-05-04T18:11:15Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -63,12 +63,18 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.", "originalCommit": "66af0d2ae019875d93696074421d4e886edff520", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzMDU0OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r419630549", "bodyText": "Per QA ID review, provide a couple of possible or likely errors that might have occurred to cause this error.", "author": "jantley-ibm", "createdAt": "2020-05-04T18:13:37Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -63,12 +63,18 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n \n # A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.", "originalCommit": "66af0d2ae019875d93696074421d4e886edff520", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3747cdf6ce505b28e07705465c2097b1acca16f4", "url": "https://github.com/OpenLiberty/open-liberty/commit/3747cdf6ce505b28e07705465c2097b1acca16f4", "message": "Further message review changes for Kafka connector", "committedDate": "2020-05-05T17:06:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzkxNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r422327915", "bodyText": "change \"This may be\" to \"This might be\"\n(\"may\" can indicate permission being granted, which can confuse translators)", "author": "jantley-ibm", "createdAt": "2020-05-08T19:24:06Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -62,13 +62,19 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n \n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n-kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging. This may be caused by a problem with the connector configuration, or by a problem resolving the Kafka broker hostname.", "originalCommit": "3747cdf6ce505b28e07705465c2097b1acca16f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODA0NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r422328044", "bodyText": "may / might", "author": "jantley-ibm", "createdAt": "2020-05-08T19:24:20Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -62,13 +62,19 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n \n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n-kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging. This may be caused by a problem with the connector configuration, or by a problem resolving the Kafka broker hostname.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n \n # A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n-kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging. This may be caused by a problem with the connector configuration, or by a problem resolving the Kafka broker hostname.", "originalCommit": "3747cdf6ce505b28e07705465c2097b1acca16f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODE3Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11800#discussion_r422328172", "bodyText": "may / might", "author": "jantley-ibm", "createdAt": "2020-05-08T19:24:35Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging.kafka/resources/com/ibm/ws/microprofile/reactive/messaging/kafka/resources/ReactiveMessaging.nlsprops", "diffHunk": "@@ -62,13 +62,19 @@ kafka.library.not.present.CWMRX1006E.useraction=Package the kafka-clients JAR fi\n \n # A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n kafka.create.incoming.error.CWMRX1007E=CWMRX1007E: A Kafka incoming connector for the {0} channel cannot be created. The error is {1}\n-kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.incoming.error.CWMRX1007E.explanation=An error that occurred when the Kafka connector was set up for an incoming reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging. This may be caused by a problem with the connector configuration, or by a problem resolving the Kafka broker hostname.\n+kafka.create.incoming.error.CWMRX1007E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n \n # A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n kafka.create.outgoing.error.CWMRX1008E=CWMRX1008E: A Kafka outgoing connector for the {0} channel cannot be created. The error is {1}\n-kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging.\n-kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, server message.log, and FFDC logs to identify the problem.\n+kafka.create.outgoing.error.CWMRX1008E.explanation=An error that occurred when the Kafka connector was set up for an outgoing reactive messaging channel prevents normal operation of MicroProfile Reactive Messaging. This may be caused by a problem with the connector configuration, or by a problem resolving the Kafka broker hostname.\n+kafka.create.outgoing.error.CWMRX1008E.useraction=Review the error message, the messages.log file on the server, and FFDC logs to identify the problem.\n+\n+# {0} = channel name, {1} = error message\n+kafka.create.incoming.retry.CWMRX1009W=CWMRX1009W: A Kafka incoming connector for the {0} channel cannot be created but this operation is being retried. The error is {1}\n+kafka.create.incoming.retry.CWMRX1009W.explanation=An error occurred when the Kafka connector was set up for an incoming reactive messaging channel. This may be caused by a problem with the connector configuration, or by a problem resolving the Kafka broker hostname.", "originalCommit": "3747cdf6ce505b28e07705465c2097b1acca16f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e941837a803e3479d5001111825a9fc23bae6d17", "url": "https://github.com/OpenLiberty/open-liberty/commit/e941837a803e3479d5001111825a9fc23bae6d17", "message": "Further message review changes for Kafka connector", "committedDate": "2020-05-13T11:02:27Z", "type": "commit"}]}