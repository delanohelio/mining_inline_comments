{"pr_number": 14792, "pr_title": "Issue 13577: NLS updates for JWE decryption", "pr_createdAt": "2020-11-02T18:59:28Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/14792", "timeline": [{"oid": "e82debaca293793be4eddbc1ff50b4a1dfcf65dd", "url": "https://github.com/OpenLiberty/open-liberty/commit/e82debaca293793be4eddbc1ff50b4a1dfcf65dd", "message": "Issue 13577: NLS updates for JWE decryption", "committedDate": "2020-11-03T21:46:42Z", "type": "forcePushed"}, {"oid": "013103650b6d10797e7f66c8be0c2412e37bbd1b", "url": "https://github.com/OpenLiberty/open-liberty/commit/013103650b6d10797e7f66c8be0c2412e37bbd1b", "message": "Issue 13577: NLS updates for JWE decryption", "committedDate": "2020-11-03T21:56:39Z", "type": "forcePushed"}, {"oid": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "url": "https://github.com/OpenLiberty/open-liberty/commit/7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "message": "Issue 13577: NLS updates for JWE decryption", "committedDate": "2020-11-03T22:52:19Z", "type": "commit"}, {"oid": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "url": "https://github.com/OpenLiberty/open-liberty/commit/7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "message": "Issue 13577: NLS updates for JWE decryption", "committedDate": "2020-11-03T22:52:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ5OTcwMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r517499702", "bodyText": "This seems contradictory- it says that only JWS tokens are accepted, and then tells you how to configure for JWE.\nWould this work:\nThe token in the request is not in JSON Web Signature (JWS) format and the JSON Web Encryption (JWE) decryption key location is not configured. To accept tokens that are in JWE format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.", "author": "dmuelle", "createdAt": "2020-11-04T17:09:29Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,23 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but only tokens that are in JWS format are accepted. If the token is in JSON Web Encryption (JWE) format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.", "originalCommit": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUwMTQ0MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r517501440", "bodyText": "suggested edit\nIf JWE tokens must be accepted...-->To accept JWE tokens", "author": "dmuelle", "createdAt": "2020-11-04T17:12:14Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,23 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but only tokens that are in JWS format are accepted. If the token is in JSON Web Encryption (JWE) format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured. The decryption key location is missing from the MicroProfile Config properties and the server configuration, so only tokens in JWS format are accepted.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.useraction=If JWE tokens must be accepted, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWS tokens are sent to this resource.", "originalCommit": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUwNTY5NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r517505695", "bodyText": "similar to my suggestion for CWWKS6063E:\nThe token in the request is not in JSON Web Encryption (JWE) format but the JWE decryption key location is configured. To accept tokens that are in JSON Web Signature (JWS) format, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute from the [{0}] JWT consumer configuration.", "author": "dmuelle", "createdAt": "2020-11-04T17:18:50Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,23 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but only tokens that are in JWS format are accepted. If the token is in JSON Web Encryption (JWE) format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured. The decryption key location is missing from the MicroProfile Config properties and the server configuration, so only tokens in JWS format are accepted.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.useraction=If JWE tokens must be accepted, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWS tokens are sent to this resource.\n+\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE=CWWKS6064E: The token in the request is not in JSON Web Encryption (JWE) format, but only tokens that are in JWE format are accepted. If the token is in JSON Web Signature (JWS) format, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute from the [{0}] JWT consumer configuration.", "originalCommit": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUwNzA2OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r517507069", "bodyText": "suggested edit:\nThe MicroProfile JWT specification requires that only tokens in JWE format are accepted if the JWE decryption key location is configured.\nunless other formats can be accepted, but not mandatory", "author": "dmuelle", "createdAt": "2020-11-04T17:21:01Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,23 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but only tokens that are in JWS format are accepted. If the token is in JSON Web Encryption (JWE) format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured. The decryption key location is missing from the MicroProfile Config properties and the server configuration, so only tokens in JWS format are accepted.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.useraction=If JWE tokens must be accepted, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWS tokens are sent to this resource.\n+\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE=CWWKS6064E: The token in the request is not in JSON Web Encryption (JWE) format, but only tokens that are in JWE format are accepted. If the token is in JSON Web Signature (JWS) format, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute from the [{0}] JWT consumer configuration.\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE.explanation=The MicroProfile JWT specification requires that only tokens in JWE format must be accepted if the JWE decryption key location is configured. The decryption key location is specified in the MicroProfile Config properties or the server configuration, so only tokens in JWE format are accepted.", "originalCommit": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUwODUwOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r517508509", "bodyText": "suggested edit (clarify and remove \"should\"):\nchange\nIf JWE tokens should not be accepted....\nto\nTo accept JWS tokens instead of JWE tokens...", "author": "dmuelle", "createdAt": "2020-11-04T17:23:22Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,23 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but only tokens that are in JWS format are accepted. If the token is in JSON Web Encryption (JWE) format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured. The decryption key location is missing from the MicroProfile Config properties and the server configuration, so only tokens in JWS format are accepted.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.useraction=If JWE tokens must be accepted, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWS tokens are sent to this resource.\n+\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE=CWWKS6064E: The token in the request is not in JSON Web Encryption (JWE) format, but only tokens that are in JWE format are accepted. If the token is in JSON Web Signature (JWS) format, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute from the [{0}] JWT consumer configuration.\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE.explanation=The MicroProfile JWT specification requires that only tokens in JWE format must be accepted if the JWE decryption key location is configured. The decryption key location is specified in the MicroProfile Config properties or the server configuration, so only tokens in JWE format are accepted.\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE.useraction=If JWE tokens should not be accepted, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWE tokens are sent to this resource.", "originalCommit": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNjU5OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r517516598", "bodyText": "the message, explanation, and user action are using different terms- \"JSON Web Signature (JWS) token\" vs \"signed JWS token\" vs \"valid JWT in JWS format\" is there a difference? If not I'd suggest the explanation:\nThe payload of the JSON Web Encryption (JWE) token that is included in the request is not in JSON Web Signature (JWS) format.\nThe payload of a JWE token must be a valid JSON web token (JWT) in JWS format.\nEnsure that the payload of the JWE token is a valid JWT in JWS format.", "author": "dmuelle", "createdAt": "2020-11-04T17:36:36Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,23 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but only tokens that are in JWS format are accepted. If the token is in JSON Web Encryption (JWE) format, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the [{0}] JWT consumer configuration.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured. The decryption key location is missing from the MicroProfile Config properties and the server configuration, so only tokens in JWS format are accepted.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.useraction=If JWE tokens must be accepted, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWS tokens are sent to this resource.\n+\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE=CWWKS6064E: The token in the request is not in JSON Web Encryption (JWE) format, but only tokens that are in JWE format are accepted. If the token is in JSON Web Signature (JWS) format, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute from the [{0}] JWT consumer configuration.\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE.explanation=The MicroProfile JWT specification requires that only tokens in JWE format must be accepted if the JWE decryption key location is configured. The decryption key location is specified in the MicroProfile Config properties or the server configuration, so only tokens in JWE format are accepted.\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE.useraction=If JWE tokens should not be accepted, remove the mp.jwt.decrypt.key.location MicroProfile Config property and the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWE tokens are sent to this resource.\n+\n+NESTED_JWS_REQUIRED_BUT_NOT_FOUND=CWWKS6065E: The payload of the JSON Web Encryption (JWE) token that is included in the request is not a JSON Web Signature (JWS) token.\n+NESTED_JWS_REQUIRED_BUT_NOT_FOUND.explanation=The payload of a JWE token must be a signed JWS token.", "originalCommit": "7cc48e1b09da5a5a050ae8db671bc889ea7a149c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09ed376de69f12e602638ad250bc3a7dac8ac7af", "url": "https://github.com/OpenLiberty/open-liberty/commit/09ed376de69f12e602638ad250bc3a7dac8ac7af", "message": "Issue 13577: NLS updates for JWE decryption after ID review", "committedDate": "2020-11-04T22:35:00Z", "type": "commit"}, {"oid": "09ed376de69f12e602638ad250bc3a7dac8ac7af", "url": "https://github.com/OpenLiberty/open-liberty/commit/09ed376de69f12e602638ad250bc3a7dac8ac7af", "message": "Issue 13577: NLS updates for JWE decryption after ID review", "committedDate": "2020-11-04T22:35:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0MjMzMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r518142333", "bodyText": "Is there a reason this message says \"appears to include...\" rather than just \"includes..\"? Seems unnecessarily ambiguous, especially from a translator's perspective. Maybe:\nThe value for the [{0}] MicroProfile Config property includes a private key string.  Private key string values are not supported for this property.", "author": "dmuelle", "createdAt": "2020-11-05T15:33:44Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,24 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.", "originalCommit": "09ed376de69f12e602638ad250bc3a7dac8ac7af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE3OTA1MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r518179050", "bodyText": "I say \"appears to include\" because I'm checking a string to see if it contains \"BEGIN \". Strictly speaking, a server admin could have their private key in, say, a directory /some/path/BEGIN FOLDER/with/keys/. In that case, our check would emit this error message and fail out even though the key location string doesn't actually include a private key.", "author": "ayoho", "createdAt": "2020-11-05T16:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0MjMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE5NDIzNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r518194234", "bodyText": "OK that makes sense. If I understand correctly, just the appearance of a private string is what draws the error, so a configuration that includes such an appearance will error out regardless. I can't think of a better way to succinctly convey that than what you have here.", "author": "dmuelle", "createdAt": "2020-11-05T16:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0MjMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0ODUxMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r518148513", "bodyText": "Is there a reason it says \"must be\" instead of \"are\"?\nThe MicroProfile JWT specification requires that only tokens in JWS format are accepted if the JWE decryption key location is not configured.\nor\nThe MicroProfile JWT specification requires that tokens must be in JWS format if the JWE decryption key location is not configured.\nIt could be even more concise if the user doesn't need to care about the spec in order to fix the problem:\nTokens must be in JWS format if the JWE decryption key location is not configured.", "author": "dmuelle", "createdAt": "2020-11-05T15:39:32Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,24 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but the [{0}] JWT consumer only accepts tokens that are in JWS format.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The token in the request might be malformed or might be in JSON Web Encryption (JWE) format. The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured.", "originalCommit": "09ed376de69f12e602638ad250bc3a7dac8ac7af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4MjQzMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r518182432", "bodyText": "My thought was to mention the spec so that the admin knows that it's not a limitation that our product has put on the request, but rather the specification itself. I'm perfectly fine making the change, though - I don't think mentioning the spec is really necessary.", "author": "ayoho", "createdAt": "2020-11-05T16:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0ODUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0ODkzMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14792#discussion_r518148931", "bodyText": "see comment for JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation", "author": "dmuelle", "createdAt": "2020-11-05T15:40:05Z", "path": "dev/com.ibm.ws.security.jwt/resources/com/ibm/ws/security/jwt/internal/resources/JWTMessages.nlsprops", "diffHunk": "@@ -361,3 +361,24 @@ ERROR_BUILDING_SIGNED_JWE.useraction=Check the error that is included in the mes\n KEY_MANAGEMENT_KEY_NOT_FOUND=CWWKS6061E: The [{0}] JWT builder cannot create a JSON Web Encryption (JWE) token because a key management key cannot be found. They key management key alias is [{1}], and the configured trust store is [{2}].\n KEY_MANAGEMENT_KEY_NOT_FOUND.explanation=A key management key is a key that is used to encrypt the Content Encryption Key of a JWE token. A key management key must be specified so the JWT builder can create JWE tokens. A key management key can be specified by using the key alias and configured trust store values that are specified in the message or by using the JwtBuilder API.\n KEY_MANAGEMENT_KEY_NOT_FOUND.useraction=Verify that a key with the alias that is specified in the message exists in the trust store that is specified in the message. If the JwtBuilder API is used, ensure that a key management key is provided.\n+\n+# Do not translate \"MicroProfile Config\", \"mp.jwt.verify.publickey.location\"\n+# 0=mp.jwt.decrypt.key.location\n+DECRYPT_KEY_LOCATION_INLINE_KEY=CWWKS6062E: The value for the [{0}] MicroProfile Config property appears to include a private key string, which is not a supported configuration.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.explanation=The MicroProfile JWT feature does not support specifying private key strings in the MicroProfile Config property that is specified in the message. The value of this property must be a relative path or URL.\n+DECRYPT_KEY_LOCATION_INLINE_KEY.useraction=Use a relative path or URL as the value for the MicroProfile Config property that is specified in the message. The location values that are supported are the same as the mp.jwt.verify.publickey.location property.\n+\n+# Do not translate \"mp.jwt.decrypt.key.location\", \"keyManagementKeyAlias\", \"Content Encryption Key\"\n+# 0=JWT consumer config ID\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS=CWWKS6063E: The token in the request is not in JSON Web Signature (JWS) format, but the [{0}] JWT consumer only accepts tokens that are in JWS format.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.explanation=The token in the request might be malformed or might be in JSON Web Encryption (JWE) format. The MicroProfile JWT specification requires that only tokens in JWS format must be accepted if the JWE decryption key location is not configured.\n+JWS_REQUIRED_BUT_TOKEN_NOT_JWS.useraction=To accept JWE tokens, configure the mp.jwt.decrypt.key.location MicroProfile Config property or the keyManagementKeyAlias attribute in the JWT consumer configuration. Otherwise, ensure that only JWS tokens are sent to this resource.\n+\n+# 0=JWT consumer config ID\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE=CWWKS6064E: The token in the request is not in JSON Web Encryption (JWE) format, but the [{0}] JWT consumer only accepts tokens that are in JWE format.\n+JWE_REQUIRED_BUT_TOKEN_NOT_JWE.explanation=The token in the request might be malformed or might be in JSON Web Signature (JWS) format. The MicroProfile JWT specification requires that only tokens in JWE format must be accepted if the JWE decryption key location is configured.", "originalCommit": "09ed376de69f12e602638ad250bc3a7dac8ac7af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9a68c661e33fee5214af4ffe34633d12dc7af64c", "url": "https://github.com/OpenLiberty/open-liberty/commit/9a68c661e33fee5214af4ffe34633d12dc7af64c", "message": "Issue 13577: Additional NLS updates for JWE decryption from ID review", "committedDate": "2020-11-05T16:26:36Z", "type": "commit"}]}