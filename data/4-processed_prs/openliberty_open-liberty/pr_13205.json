{"pr_number": 13205, "pr_title": "Support for Kerberos auth for Oracle-backed JDBC datasources", "pr_createdAt": "2020-07-27T22:23:47Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13205", "timeline": [{"oid": "cf0adf97bb99cb27b274ef91a3f957e238172757", "url": "https://github.com/OpenLiberty/open-liberty/commit/cf0adf97bb99cb27b274ef91a3f957e238172757", "message": "Support for Kerberos auth for Oracle-backed JDBC datasources", "committedDate": "2020-07-28T00:00:20Z", "type": "commit"}, {"oid": "cf0adf97bb99cb27b274ef91a3f957e238172757", "url": "https://github.com/OpenLiberty/open-liberty/commit/cf0adf97bb99cb27b274ef91a3f957e238172757", "message": "Support for Kerberos auth for Oracle-backed JDBC datasources", "committedDate": "2020-07-28T00:00:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTQ5MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13205#discussion_r461635491", "bodyText": "Looks like this principle is no longer used so can likely be removed in the future.", "author": "KyleAure", "createdAt": "2020-07-28T14:40:39Z", "path": "dev/com.ibm.ws.jdbc_fat_krb5/publish/files/kdc-server/docker-entrypoint.sh", "diffHunk": "@@ -95,6 +95,9 @@ EOT\n     \n     echo \"Creating XE/oracle Account\"\n     kadmin.local -q \"addprinc -pw ${KRB5_PASS} XE/oracle@${KRB5_REALM}\"", "originalCommit": "cf0adf97bb99cb27b274ef91a3f957e238172757", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNjk3Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13205#discussion_r461636972", "bodyText": "Wondering if this is necessary since this principle is no longer being used.", "author": "KyleAure", "createdAt": "2020-07-28T14:42:24Z", "path": "dev/com.ibm.ws.jdbc_fat_krb5/publish/files/oracle/Dockerfile", "diffHunk": "@@ -0,0 +1,31 @@\n+FROM kyleaure/oracle-18.4.0-xe-prebuilt\n+\n+# Update and install Kerberos (server head)\n+RUN yum update -y\n+RUN yum -y install krb5-workstation krb5-libs krb5-auth-dialog vim\n+\n+COPY setup/ /opt/oracle/scripts/setup\n+COPY startup/ /opt/oracle/scripts/startup\n+\n+ENV ORACLE_PWD=password\n+ENV KRB5_REALM=EXAMPLE.COM\n+ENV KRB5_KDC=kerberos\n+\n+RUN mkdir /etc/krb5\n+RUN printf 'add_entry -password -p XE/oracle@EXAMPLE.COM -k 1 -e aes256-cts\\npassword\\nwkt /etc/krb5.keytab' | ktutil", "originalCommit": "cf0adf97bb99cb27b274ef91a3f957e238172757", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MzQ5OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13205#discussion_r461653498", "bodyText": "To make thing a little bit clearer. We should have two keytab files,\n\nkeytab file for liberty server has the Kerberos principal TESTUSER@EXAMPLE.COM\nkeytab file for Oracle server has the XE/myhost@EXAMPLE.COM.\nI thought we want to name the hostname to something else rather than oracle.\nAlso the Kerberos user principal is something like testuser or user in uppercase instead of oracle\n... For example:\nLiberty server's keytab has Kerberos principal testuser\nthe SPN is XE/myhost@EXAMPLE.COM", "author": "utle", "createdAt": "2020-07-28T15:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNjk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NDE0MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13205#discussion_r461644140", "bodyText": "Should we change owner to oracle instead of chmod 777?", "author": "utle", "createdAt": "2020-07-28T14:51:01Z", "path": "dev/com.ibm.ws.jdbc_fat_krb5/publish/files/oracle/setup/1kerberos.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/bin/sh\n+\n+# This is a setup script we want to run inside the database container after databse setup\n+# but before database start.  This script creates the kerb5.conf file\n+\n+if [ -z ${KRB5_REALM} ]; then\n+    echo \"No KRB5_REALM Provided. Exiting ...\"\n+    exit 1\n+fi\n+\n+if [ -z ${KRB5_KDC} ]; then\n+    echo \"No KRB5_KDC Provided. Exting ...\"\n+    exit 1\n+fi\n+\n+if [ -z ${KRB5_ADMINSERVER} ]; then\n+    echo \"KRB5_ADMINSERVER provided. Using ${KRB5_KDC} in place.\"\n+    KRB5_ADMINSERVER=${KRB5_KDC}\n+fi\n+\n+echo \"Creating Krb5 Client Configuration\"\n+\n+cat <<EOT > /etc/krb5.conf\n+[libdefaults]\n+    dns_lookup_realm = false\n+    ticket_lifetime = 24h\n+    renew_lifetime = 7d\n+    forwardable = true\n+    rdns = false\n+    ccache_type = 4\n+    allow_weak_crypto = true\n+    ignore_acceptor_hostname = true\n+    kdc_timesync = 0\n+    default_realm = ${KRB5_REALM}\n+ \n+[realms]\n+    ${KRB5_REALM} = {\n+        kdc = ${KRB5_KDC}:99\n+        admin_server = ${KRB5_ADMINSERVER}\n+    }\n+\n+[domain_realm]\n+        .example.com = EXAMPLE.COM\n+        example.com = EXAMPLE.COM\n+EOT\n+\n+echo \"Make configuration and key table accessible\"\n+# Not ideal security paractice but only used for testing\n+# In production these files should be restricted to user \"oracle\"\n+chmod 777 /etc/krb5.conf", "originalCommit": "cf0adf97bb99cb27b274ef91a3f957e238172757", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NDk0NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13205#discussion_r461644945", "bodyText": "Change owner to oracle instead of chmod 777?", "author": "utle", "createdAt": "2020-07-28T14:52:02Z", "path": "dev/com.ibm.ws.jdbc_fat_krb5/publish/files/oracle/startup/01_kerberos.sh", "diffHunk": "@@ -0,0 +1,17 @@\n+#!/bin/sh\n+\n+su oracle << EOF\n+echo \"Username:\"\n+whoami\n+\n+echo \"Initialize oracle user(s)\"\n+echo password | okinit -f ORACLEUSR\n+\n+echo \"List principles in key table: \"\n+oklist -k -t /etc/krb5.keytab\n+EOF\n+\n+echo \"Make credential cache accessible\"", "originalCommit": "cf0adf97bb99cb27b274ef91a3f957e238172757", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1NDE2OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13205#discussion_r461654168", "bodyText": "When we document or comment kerberos, it should be cap K", "author": "utle", "createdAt": "2020-07-28T15:03:20Z", "path": "dev/com.ibm.ws.jdbc_fat_krb5/publish/files/oracle/setup/2oracle.sh", "diffHunk": "@@ -0,0 +1,49 @@\n+#!/bin/sh\n+\n+# This is a startup script we want to run inside the database container after database has been started.\n+# This script will do all the oracle configuration steps needed to enable Kerberos Authentication\n+\n+if [ -z ${ORACLE_HOME} ]; then\n+    echo \"No ORACLE_HOME variable.  Exiting...\"\n+    exit 1\n+fi\n+\n+# Step 6A: Configure Kerberos on the Client and on the Database Server\n+SQLNETORA=\"$ORACLE_HOME/network/admin/sqlnet.ora\"\n+touch $SQLNETORA\n+    # Set authentication service we want to use (Kerberos v.5)\n+    echo \"Setup sqlnet.ora authentication servies\"\n+    # Tell oracle to use kerberos for authentication\n+    echo \"SQLNET.AUTHENTICATION_SERVICES=(BEQ, KERBEROS5)\" >> $SQLNETORA\n+    # Use the service name oracle (kerberos service name NOT ORACLE SERVICE NAME)\n+    echo \"SQLNET.AUTHENTICATION_KERBEROS5_SERVICE=XE\" >> $SQLNETORA\n+    echo \"UPDATED SQLNET.ORA\"\n+\n+# Step 6B: Set the Initialization Parameters\n+INITORA=\"$ORACLE_HOME/dbs/init.ora\"\n+touch $INITORA\n+    echo \"Setup init.ora username parameters\"\n+    # No longer need to use OPS$ infront of externally authenticated usernames\n+    echo 'OS_AUTHENT_PREFIX=\"\"' >> $INITORA\n+    echo \"UPDATED INIT.ORA\"\n+\n+#Step 6C: Set sqlnet.ora Parameters (Optional)\n+# These are kerberos specific parameters that oracle says are not required", "originalCommit": "cf0adf97bb99cb27b274ef91a3f957e238172757", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}