{"pr_number": 13227, "pr_title": "Remaining MP Metrics 3.0 Implementation", "pr_createdAt": "2020-07-29T00:13:30Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13227", "timeline": [{"oid": "14fff4221b1fbb321640c257a9d017ccabf162a8", "url": "https://github.com/OpenLiberty/open-liberty/commit/14fff4221b1fbb321640c257a9d017ccabf162a8", "message": "MP Metrics 3.0 FAT TCK", "committedDate": "2020-08-03T20:56:40Z", "type": "forcePushed"}, {"oid": "e16cedde5e376326a5719902c64c580c9d2e1be6", "url": "https://github.com/OpenLiberty/open-liberty/commit/e16cedde5e376326a5719902c64c580c9d2e1be6", "message": "java 11 compat", "committedDate": "2020-08-04T13:38:22Z", "type": "forcePushed"}, {"oid": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "url": "https://github.com/OpenLiberty/open-liberty/commit/82f8f4129b1665dd44753ddbb341dc8f3d18a887", "message": "java 11 compat", "committedDate": "2020-08-04T13:56:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzODc1OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465238759", "bodyText": "Would be nice to convert these string literals \"gauge\", \"counter\" to constants.", "author": "fmhwong", "createdAt": "2020-08-04T18:14:28Z", "path": "dev/com.ibm.ws.microprofile.metrics.3.0/src/com/ibm/ws/microprofile/metrics30/helper/PrometheusBuilder30.java", "diffHunk": "@@ -30,47 +37,269 @@\n \n     private static final TraceComponent tc = Tr.register(PrometheusBuilder30.class);\n \n-    public static void buildTimer(StringBuilder builder, String name, String description, Map<MetricID, Metric> currentMetricMap) {\n-        buildMetered(builder, name, description, currentMetricMap);\n+    /**\n+     * If there exists global tags then we will combine these tags with the provided\n+     * MetricID's tags. The returned combination of tags will be represented as a String in\n+     * 'key=\"value\",key2=\"value2\",...'. This is exactly the same as MetricID's getTagAsString()\n+     *\n+     * @param mid the MetricID\n+     * @return String of combined tags 'key=\"value\",key2=\"value2\",...' format\n+     */\n+    protected static String resolveTagsAsStringWithGlobalTags(MetricID mid) {\n+        org.eclipse.microprofile.metrics.Tag[] globalTags = Util30.getCachedGlobalTags();\n+\n+        /*\n+         * If there exists global tags, then we will need to copy\n+         *\n+         */\n+        if (globalTags != null && globalTags.length != 0) {\n+            org.eclipse.microprofile.metrics.Tag[] applicationTags = mid.getTagsAsArray();\n+            org.eclipse.microprofile.metrics.Tag[] combinedTags = new org.eclipse.microprofile.metrics.Tag[globalTags.length + applicationTags.length];\n+\n+            /*\n+             * Copying Global Tags first ensures that any application tag\n+             * with matching key will override the global tag when\n+             * it is copied into the array.\n+             *\n+             * This is because the MetricID will read through the array\n+             * and take the \"newest\" value.\n+             *\n+             * This is the behaviour in mpMetrics-2.x and below\n+             */\n+            System.arraycopy(globalTags, 0, combinedTags, 0, globalTags.length);\n+            System.arraycopy(applicationTags, 0, combinedTags, globalTags.length, applicationTags.length);\n+\n+            MetricID temp = new MetricID(\"temporary\", combinedTags);\n+\n+            return temp.getTagsAsString();\n+        } else {\n+            return mid.getTagsAsString();\n+        }\n+    }\n+\n+    public static void buildTimer30(StringBuilder builder, String name, String description, Map<MetricID, Metric> currentMetricMap) {\n+        buildMetered30(builder, name, description, currentMetricMap);\n         double conversionFactor = Constants.NANOSECONDCONVERSION;\n \n         String lineName = name + \"_elapsedTime_\" + MetricUnits.SECONDS.toString();\n         getPromTypeLine(builder, lineName, \"gauge\");\n         for (MetricID mid : currentMetricMap.keySet()) {\n-            getPromValueLine(builder, lineName, ((Timer) currentMetricMap.get(mid)).getElapsedTime().toNanos() * conversionFactor, mid.getTagsAsString());\n+\n+            getPromValueLine(builder, lineName, ((Timer) currentMetricMap.get(mid)).getElapsedTime().toNanos() * conversionFactor, resolveTagsAsStringWithGlobalTags(mid));\n         }\n \n         // Build Histogram\n-        buildSampling(builder, name, description, currentMetricMap, conversionFactor, Constants.APPENDEDSECONDS);\n+        buildSampling30(builder, name, description, currentMetricMap, conversionFactor, Constants.APPENDEDSECONDS);\n     }\n \n-    public static void buildSimpleTimer(StringBuilder builder, String name, String description, Map<MetricID, Metric> currentMetricMap) {\n+    public static void buildSimpleTimer30(StringBuilder builder, String name, String description, Map<MetricID, Metric> currentMetricMap) {\n         double conversionFactor = Constants.NANOSECONDCONVERSION;\n \n-        buildCounting(builder, name, description, currentMetricMap);\n+        buildCounting30(builder, name, description, currentMetricMap);\n \n         String lineName = name + \"_elapsedTime_\" + MetricUnits.SECONDS.toString();\n         getPromTypeLine(builder, lineName, \"gauge\");", "originalCommit": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMzM0OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465313348", "bodyText": "Fixed.", "author": "Channyboy", "createdAt": "2020-08-04T20:32:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzODc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NjY4Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465246683", "bodyText": "2020?", "author": "fmhwong", "createdAt": "2020-08-04T18:28:17Z", "path": "dev/com.ibm.ws.microprofile.metrics.3.0_fat_tck/fat/resources/logging.properties", "diffHunk": "@@ -0,0 +1,78 @@\n+#Logging file used by com.ibm.ws.microprofile.metrics11.tck.launcher.FATSuite\n+#Thu, 14 Mar 2019 14:27:11 -0400\n+###############################################################################\n+# Copyright (c) 2017 IBM Corporation and others.", "originalCommit": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMzMwMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465313301", "bodyText": "This file is \"copied\". I believe we don't change the copyright for such files since it isn't new.", "author": "Channyboy", "createdAt": "2020-08-04T20:32:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NjY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODIxNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465248214", "bodyText": "2020?", "author": "fmhwong", "createdAt": "2020-08-04T18:30:53Z", "path": "dev/com.ibm.ws.microprofile.metrics.3.0_fat_tck/publish/tckRunner/tck/src/test/java/com/ibm/ws/microprofile/metrics/test/ArquillianLoadableExtension.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 IBM Corporation and others.", "originalCommit": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMzI4MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465313281", "bodyText": "This file is \"copied\". I believe we don't change the copyright for such files since it isn't new.", "author": "Channyboy", "createdAt": "2020-08-04T20:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODg1NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465248855", "bodyText": "2.0?", "author": "fmhwong", "createdAt": "2020-08-04T18:32:05Z", "path": "dev/com.ibm.ws.microprofile.metrics.3.0_fat_tck/publish/tckRunner/pom.xml", "diffHunk": "@@ -0,0 +1,76 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.ibm.ws.microprofile.metrics</groupId>\n+    <artifactId>tck.runner</artifactId>\n+    <version>3.0-RC1</version>\n+    <packaging>pom</packaging>\n+    <name>MicroProfile Metrics TCK 3.0 Runner</name>\n+\n+    <properties>\n+        <arquillian.version>1.1.13.Final</arquillian.version>\n+\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+    </properties>\n+\n+    <modules>\n+        <module>tck</module>\n+    </modules>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>javax.enterprise</groupId>\n+                <artifactId>cdi-api</artifactId>\n+                <version>1.2</version>", "originalCommit": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMjk4NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465312985", "bodyText": "fixed.", "author": "Channyboy", "createdAt": "2020-08-04T20:31:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0OTAwMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465249003", "bodyText": "2.0?", "author": "fmhwong", "createdAt": "2020-08-04T18:32:21Z", "path": "dev/com.ibm.ws.microprofile.metrics.3.0_fat_tck/publish/tckRunner/tck/pom.xml", "diffHunk": "@@ -0,0 +1,261 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you\n+    may not use this file except in compliance with the License. You may obtain\n+    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless\n+    required by applicable law or agreed to in writing, software distributed\n+    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n+    OR CONDITIONS OF ANY KIND, either express or implied. See the License for\n+    the specific language governing permissions and limitations under the License. -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.ibm.ws.microprofile.metrics</groupId>\n+    <artifactId>tck.runner.tck</artifactId>\n+    <version>3.0-RC1</version>\n+    <name>MicroProfile Metrics TCK Runner 3.0 TCK Module</name>\n+\n+    <properties>\n+        <microprofile.metrics.version>3.0-RC1</microprofile.metrics.version>\n+        <arquillian.version>1.1.13.Final</arquillian.version>\n+\n+        <!-- the below is used in arquillian.xml -->\n+        <wlp>${wlp}</wlp>\n+\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+\n+        <defaultSuiteFiles>tck-suite.xml</defaultSuiteFiles>\n+        <suiteXmlFile>${defaultSuiteFiles}</suiteXmlFile>\n+        <targetDirectory>${project.basedir}/target</targetDirectory>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.jboss.arquillian</groupId>\n+                <artifactId>arquillian-bom</artifactId>\n+                <version>${arquillian.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.ibm.ws</groupId>\n+            <artifactId>fattest.simplicity</artifactId>\n+            <version>1</version>\n+            <scope>system</scope>\n+            <systemPath>${project.basedir}/../../../lib/fattest.simplicity.jar</systemPath> <!-- This will point to build/libs/autoFVT/lib/fattest.simplicity.jar -->\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-api</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency>\n+\t\t<dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-optional-tck</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency> \n+\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-rest-tck</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-api-tck</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <version>1.3</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.enterprise</groupId>\n+            <artifactId>cdi-api</artifactId>\n+            <version>1.2</version>", "originalCommit": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMjkzMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465312930", "bodyText": "fixed.", "author": "Channyboy", "createdAt": "2020-08-04T20:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0OTAwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1MDc0Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465250742", "bodyText": "2.0?", "author": "fmhwong", "createdAt": "2020-08-04T18:35:36Z", "path": "dev/com.ibm.ws.microprofile.metrics.3.0_fat_tck/publish/tckRunner/tck/pom.xml", "diffHunk": "@@ -0,0 +1,261 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you\n+    may not use this file except in compliance with the License. You may obtain\n+    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless\n+    required by applicable law or agreed to in writing, software distributed\n+    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n+    OR CONDITIONS OF ANY KIND, either express or implied. See the License for\n+    the specific language governing permissions and limitations under the License. -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.ibm.ws.microprofile.metrics</groupId>\n+    <artifactId>tck.runner.tck</artifactId>\n+    <version>3.0-RC1</version>\n+    <name>MicroProfile Metrics TCK Runner 3.0 TCK Module</name>\n+\n+    <properties>\n+        <microprofile.metrics.version>3.0-RC1</microprofile.metrics.version>\n+        <arquillian.version>1.1.13.Final</arquillian.version>\n+\n+        <!-- the below is used in arquillian.xml -->\n+        <wlp>${wlp}</wlp>\n+\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+\n+        <defaultSuiteFiles>tck-suite.xml</defaultSuiteFiles>\n+        <suiteXmlFile>${defaultSuiteFiles}</suiteXmlFile>\n+        <targetDirectory>${project.basedir}/target</targetDirectory>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.jboss.arquillian</groupId>\n+                <artifactId>arquillian-bom</artifactId>\n+                <version>${arquillian.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.ibm.ws</groupId>\n+            <artifactId>fattest.simplicity</artifactId>\n+            <version>1</version>\n+            <scope>system</scope>\n+            <systemPath>${project.basedir}/../../../lib/fattest.simplicity.jar</systemPath> <!-- This will point to build/libs/autoFVT/lib/fattest.simplicity.jar -->\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-api</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency>\n+\t\t<dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-optional-tck</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency> \n+\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-rest-tck</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.metrics</groupId>\n+            <artifactId>microprofile-metrics-api-tck</artifactId>\n+            <version>${microprofile.metrics.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <version>1.3</version>", "originalCommit": "82f8f4129b1665dd44753ddbb341dc8f3d18a887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMzA4NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13227#discussion_r465313084", "bodyText": "Removed. It's not needed actually.", "author": "Channyboy", "createdAt": "2020-08-04T20:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI1MDc0Mg=="}], "type": "inlineReview"}, {"oid": "0b2710d42487147e5a0c6ab63e20f6f8d6e8d1f0", "url": "https://github.com/OpenLiberty/open-liberty/commit/0b2710d42487147e5a0c6ab63e20f6f8d6e8d1f0", "message": "Additional Implementation Changes to statistfy MP Metrics 3.0 specification.\n\n- Cache MP Config mp.metrics.appName tags in Metric Registry by Application level values for each application (defined in mp.config.properties) and on the Server level (i.e env vars or sys props)\n- Cache MP Config mp.metrics.tags tags with the Metric Registry and is appended during metrics export\n- CDI Producers are no longer supported by the @metrics annotation\n- New Gauge register/retrieve methods that take Functions as parameters\n- MP Metrics 3.0 FAT TCK", "committedDate": "2020-08-05T15:45:53Z", "type": "commit"}, {"oid": "0b2710d42487147e5a0c6ab63e20f6f8d6e8d1f0", "url": "https://github.com/OpenLiberty/open-liberty/commit/0b2710d42487147e5a0c6ab63e20f6f8d6e8d1f0", "message": "Additional Implementation Changes to statistfy MP Metrics 3.0 specification.\n\n- Cache MP Config mp.metrics.appName tags in Metric Registry by Application level values for each application (defined in mp.config.properties) and on the Server level (i.e env vars or sys props)\n- Cache MP Config mp.metrics.tags tags with the Metric Registry and is appended during metrics export\n- CDI Producers are no longer supported by the @metrics annotation\n- New Gauge register/retrieve methods that take Functions as parameters\n- MP Metrics 3.0 FAT TCK", "committedDate": "2020-08-05T15:45:53Z", "type": "forcePushed"}]}