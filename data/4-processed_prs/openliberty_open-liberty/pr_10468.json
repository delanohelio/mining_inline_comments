{"pr_number": 10468, "pr_title": "Ensure OL tests run properly in DB Rotation", "pr_createdAt": "2020-01-16T20:53:15Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10468", "timeline": [{"oid": "f36217156e5d3f0258d505e876790ceca36c0b1e", "url": "https://github.com/OpenLiberty/open-liberty/commit/f36217156e5d3f0258d505e876790ceca36c0b1e", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-01-20T16:06:56Z", "type": "forcePushed"}, {"oid": "124d8df1cae3713c8fbc3efccc83c69c49a943e6", "url": "https://github.com/OpenLiberty/open-liberty/commit/124d8df1cae3713c8fbc3efccc83c69c49a943e6", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-01-20T19:05:07Z", "type": "forcePushed"}, {"oid": "4347a4de7b1906310265e90189482c65bf31339c", "url": "https://github.com/OpenLiberty/open-liberty/commit/4347a4de7b1906310265e90189482c65bf31339c", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-01-22T19:04:12Z", "type": "forcePushed"}, {"oid": "4097d6d7f2d49f2a6cf00da6cd28104045923d90", "url": "https://github.com/OpenLiberty/open-liberty/commit/4097d6d7f2d49f2a6cf00da6cd28104045923d90", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-01-27T21:21:26Z", "type": "forcePushed"}, {"oid": "9366f1a1c01e1485c8f963d74c2d72968c778372", "url": "https://github.com/OpenLiberty/open-liberty/commit/9366f1a1c01e1485c8f963d74c2d72968c778372", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-01-27T21:25:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MjQ1MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10468#discussion_r371962451", "bodyText": "I don't believe this is needed, any properties that start with fat.* or test.* should get added already up on line 209.\nIf this is needed because System.getProperties() has things that bndWorkspace.getProject(project.getProjectDir()).getProperties() doesn't, then we should add a generic mechanism for System properties in the same way we do for bnd project properties", "author": "aguibert", "createdAt": "2020-01-28T17:55:27Z", "path": "dev/wlp-gradle/subprojects/fat.gradle", "diffHunk": "@@ -214,6 +214,14 @@ task autoFVT {\n     bndProps.setProperty('fat.minimum.java.level', minJavaLevel)\n     bndProps.setProperty('micro.version', bnd('libertyBundleMicroVersion'))\n     \n+    // Add in database rotation properties, if they are present", "originalCommit": "9366f1a1c01e1485c8f963d74c2d72968c778372", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MzM0Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10468#discussion_r371963346", "bodyText": "Will these lines print out every time someone runs a FAT locally now? If so, I don't think it's necessary to log this much information on the \"normal\" path", "author": "aguibert", "createdAt": "2020-01-28T17:57:09Z", "path": "dev/fattest.simplicity/autoFVT-defaults/src/ant/launch.xml", "diffHunk": "@@ -90,23 +87,77 @@\n \t\t\t<entry key=\"preferJIIWSWsAdmin\" value=\"${simplicity.preferJIIWSWsAdmin}\" />\n \t\t</propertyfile>\n \t\t\n-\t\t<!-- Work out the actual entry point based on the current java level -->\n+\t\t<!-- Work out the actual entry point based on the current java level and database properties -->\n \t\t<echo message=\"Checking min java level for project based on bootstrapping.properties file...\" />\n+\t\t\n+\t\t<!-- Get fat.test.databases and fat.minimum.java.level properties-->\n+\t\t<property file=\"${basedir}/fat.bnd.properties\" />\n+\t\t\n+\t\t<!-- Enforce fat.test.databases.only rule.  If bucket is not enlisted in database rotation skip it -->\n+\t\t<condition property=\"skip.no.db.tests\" value=\"true\">\n+\t\t\t<and>\n+\t\t\t\t<istrue value=\"${fat.test.databases.only}\" />\n+\t\t\t\t<not><isTrue value=\"${fat.test.databases}\" /></not>\n+\t\t\t</and>\n+\t\t</condition>\n+\t\t\n+\t\t<!-- If a specific DB is being used, include it later in the bucket name -->\n+    \t<condition property=\"suite.db.type\" value=\" with ${fat.bucket.db.type}\" else=\"\">\n+    \t\t<and>\n+    \t\t\t<istrue value=\"${fat.test.databases}\" />\n+    \t\t\t<isset property=\"fat.bucket.db.type\" />\n+    \t\t</and>\n+    \t</condition>\n \t\t            \n-        <!-- If this test is compiled with a java level higher than the one we're currently running, -->\n-        <!-- bypass the tests by invoking the always passes test instead of real FAT tests -->\n-        <property file=\"${basedir}/fat.bnd.properties\" />\n+        <!-- Enforce fat.minimum.java.level rule. If this test is compiled with a java level \n+           higher than the one we're currently running we should skip these tests. -->\n \t\t<script language=\"javascript\"> <![CDATA[\n-\t\t\tvar testBucketClassForLowJava = \"componenttest.custom.junit.runner.AlwaysPassesTest\";\n \t\t\tvar minTestJava = project.getProperty(\"fat.minimum.java.level\");\n \t\t\tvar javaVersion = parseFloat(project.getProperty(\"java.specification.version\"));\n \t\t\tif(minTestJava != null && javaVersion < parseFloat(minTestJava))\n-\t\t\t  project.setProperty(\"test.bucket.class\", testBucketClassForLowJava);\n+\t\t\t\tproject.setProperty(\"skip.java.level\", true);\n         ]]></script>\n+\t\t\n+\t\t<!-- Output java level info -->\n         <echo message=\"fat.minimum.java.level=${fat.minimum.java.level}\"/>\n         <echo message=\"java.specification.version=${java.specification.version}\"/>\n-        <echo message=\"FAT entry point will be: ${test.bucket.class}\"/>\n \t\t<echo message=\"micro.version=${micro.version}\"/>\n+\t\t\n+\t\t<!-- Determine if we are going to skip testing or not -->\n+\t\t<!-- Bypass the tests by invoking the always passes test instead of real FAT tests -->\n+\t\t\n+\t\t<!-- Our build infrastructure will set this properties prior to launching tests, \n+\t\t\tneed to overwrite it here if we are going to skip tests. -->\n+\t\t<var name=\"test.bucket.class\" unset=\"true\" />\n+\t\t<iff>\n+\t\t\t<or>\n+\t\t\t\t<istrue value=\"${skip.no.db.tests}\" />\n+\t\t\t\t<istrue value=\"${skip.java.level}\" />\n+\t\t\t</or>\n+\t\t\t<then>\n+\t\t        <property name=\"test.bucket.class\" value=\"componenttest.custom.junit.runner.AlwaysPassesTest\" />\n+\t\t\t\t\n+\t\t\t\t<echo message=\"FAT bucket WILL NOT run tests, due to the following properties:\"/>\n+\t\t\t\t<echo message=\"     Only run database rotation buckets:  ${fat.test.databases.only}\"/>\n+\t\t\t\t<echo message=\"     This bucket uses database rotation:  ${fat.test.databases}\"/>\n+\t\t\t\t<echo message=\"     This bucket uses java level:         ${fat.minimum.java.level}\" />\n+\t\t\t</then>\n+\t\t\t<else>\n+\t\t\t\t<var name=\"test.bucket.name\" unset=\"true\" />\n+\t\t        <property name=\"test.bucket.class\" value=\"${entry.point}\" />\n+\t\t\t\t<property name=\"test.bucket.name\" value=\"${test.bucket.class}${suite.db.type}\"/>\n+\t\t\t\t\n+\t\t\t\t<echo message=\"FAT bucket WILL run, with the following properties:\"/>", "originalCommit": "9366f1a1c01e1485c8f963d74c2d72968c778372", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1d3ca13dc6d5759f9f427d7ecf0d63aa2fc034e", "url": "https://github.com/OpenLiberty/open-liberty/commit/f1d3ca13dc6d5759f9f427d7ecf0d63aa2fc034e", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-02-03T17:24:25Z", "type": "forcePushed"}, {"oid": "8da49553afe6b7fdfaf37eae9a93792c442e42ed", "url": "https://github.com/OpenLiberty/open-liberty/commit/8da49553afe6b7fdfaf37eae9a93792c442e42ed", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-02-03T18:55:02Z", "type": "forcePushed"}, {"oid": "b66fb61ee125b2170923ebba02f58c7faa7a5d75", "url": "https://github.com/OpenLiberty/open-liberty/commit/b66fb61ee125b2170923ebba02f58c7faa7a5d75", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-02-10T16:57:12Z", "type": "forcePushed"}, {"oid": "aa59d8ff403d77b9547c2c0babd220268844462a", "url": "https://github.com/OpenLiberty/open-liberty/commit/aa59d8ff403d77b9547c2c0babd220268844462a", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-02-10T16:58:26Z", "type": "forcePushed"}, {"oid": "f791a10e2a0b9415570a69d75322a0ef2d635162", "url": "https://github.com/OpenLiberty/open-liberty/commit/f791a10e2a0b9415570a69d75322a0ef2d635162", "message": "move fat.test.localrun", "committedDate": "2020-02-11T22:36:48Z", "type": "forcePushed"}, {"oid": "b313e30f7365167c9699c32df8144f1a53ed4e7c", "url": "https://github.com/OpenLiberty/open-liberty/commit/b313e30f7365167c9699c32df8144f1a53ed4e7c", "message": "Ensure OL tests run properly in DB Rotation", "committedDate": "2020-02-12T15:11:21Z", "type": "commit"}, {"oid": "6c8f2137bcfd8d7e59d919c108d346f169410d2f", "url": "https://github.com/OpenLiberty/open-liberty/commit/6c8f2137bcfd8d7e59d919c108d346f169410d2f", "message": "move fat.test.localrun", "committedDate": "2020-02-12T15:11:21Z", "type": "commit"}, {"oid": "6c8f2137bcfd8d7e59d919c108d346f169410d2f", "url": "https://github.com/OpenLiberty/open-liberty/commit/6c8f2137bcfd8d7e59d919c108d346f169410d2f", "message": "move fat.test.localrun", "committedDate": "2020-02-12T15:11:21Z", "type": "forcePushed"}]}