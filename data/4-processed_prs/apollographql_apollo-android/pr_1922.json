{"pr_number": 1922, "pr_title": "toJson kotlin extension", "pr_createdAt": "2020-01-21T13:37:21Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/1922", "timeline": [{"oid": "2d46211c05ade6d6794eb2cde8cf83a32cd852ad", "url": "https://github.com/apollographql/apollo-android/commit/2d46211c05ade6d6794eb2cde8cf83a32cd852ad", "message": "Add toJson kotlin extension", "committedDate": "2020-01-21T13:18:55Z", "type": "commit"}, {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf", "url": "https://github.com/apollographql/apollo-android/commit/15719f84fc24a80b8e411ccd116a64fdf34d1adf", "message": "Add Kotlin extension toJson and also add documentation", "committedDate": "2020-01-21T13:34:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNDAzOQ==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369004039", "bodyText": "I thought operation here would be more correct. Query was referring to a generated type, right?", "author": "tasomaniac", "createdAt": "2020-01-21T13:38:12Z", "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -10,13 +10,15 @@ For this, remove the `com.apollographql.apollo:apollo-runtime`dependency and rep\n   implementation(\"com.apollographql.apollo:apollo-api:x.y.z\")\n ```\n \n+## Parsing HTTP body\n+\n All `Operation` instances provide an API to parse `Response` from raw `okio.BufferedSource` source that represents http response body returned by the GraphQL server.\n If for some reason you want to use your own network layer and don't want to use fully featured `ApolloClient` provided by `apollo-runtime` you can use this API:\n \n ```java\n     okhttp3.Response httpResponse = ...;\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source());\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source());", "originalCommit": "15719f84fc24a80b8e411ccd116a64fdf34d1adf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNjc5MA==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369126790", "bodyText": "I think Query was referring to https://github.com/apollographql/apollo-android/blob/65c4fff8b98f9c8f5949adb6a3b2e694489dfee0/apollo-api/src/main/java/com/apollographql/apollo/api/Query.java.\nBut this all should work with Mutation as well so using Operation.Data seems better \ud83d\udc4d", "author": "martinbonnin", "createdAt": "2020-01-21T17:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNDAzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369127563", "bodyText": "Does that belong to the no-runtime doc ? I think the original use case was for testing with a mock server. Not sure where to put it though... \ud83d\ude05", "author": "martinbonnin", "createdAt": "2020-01-21T17:03:56Z", "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "originalCommit": "15719f84fc24a80b8e411ccd116a64fdf34d1adf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE3NTEyMg==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369175122", "bodyText": "Suggestions are welcome. All of the stuff mentioned in this doc are in api module rather than runtime. I didn't really want to create a new file.", "author": "tasomaniac", "createdAt": "2020-01-21T18:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE3NTIwMQ==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369175201", "bodyText": "Should I move out?", "author": "tasomaniac", "createdAt": "2020-01-21T18:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMwOTMxNw==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369309317", "bodyText": "I don't really have a better idea where to put this doc. Maybe at some point do a 'testing' page ? But I guess no-runtime is fine for now, sorry for the noise.", "author": "martinbonnin", "createdAt": "2020-01-22T00:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5NjcyNg==", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369396726", "bodyText": "Not at all. It's useful feedback.", "author": "tasomaniac", "createdAt": "2020-01-22T07:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}], "type": "inlineReview"}, {"oid": "255f9c39b4387521700750b959bb09849495a669", "url": "https://github.com/apollographql/apollo-android/commit/255f9c39b4387521700750b959bb09849495a669", "message": "Also add the annotation to the other extension file", "committedDate": "2020-01-22T07:07:12Z", "type": "commit"}]}