{"pr_number": 2653, "pr_title": "Add Operation Inline Fragment Support", "pr_createdAt": "2020-10-13T05:00:59Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2653", "timeline": [{"oid": "6af4dda43b9a1c676c77ec03871246b4231fdc7a", "url": "https://github.com/apollographql/apollo-android/commit/6af4dda43b9a1c676c77ec03871246b4231fdc7a", "message": "Fix Missing Referenced Fragments in Query Document", "committedDate": "2020-10-10T08:35:14Z", "type": "commit"}, {"oid": "52ad7cf20944b74a2b3064620cb418d946dcb3d0", "url": "https://github.com/apollographql/apollo-android/commit/52ad7cf20944b74a2b3064620cb418d946dcb3d0", "message": "Revert unnecessary formatting", "committedDate": "2020-10-10T08:39:49Z", "type": "commit"}, {"oid": "08c12102763abc80b390ec334a31303961c3f099", "url": "https://github.com/apollographql/apollo-android/commit/08c12102763abc80b390ec334a31303961c3f099", "message": "Clean up declarations", "committedDate": "2020-10-10T08:50:36Z", "type": "commit"}, {"oid": "1b5b275e59316fd9bc7b2132ba9f5ab2e070d811", "url": "https://github.com/apollographql/apollo-android/commit/1b5b275e59316fd9bc7b2132ba9f5ab2e070d811", "message": "Use Union over + and toSet()", "committedDate": "2020-10-10T09:13:50Z", "type": "commit"}, {"oid": "b7dcb05d691892e71cd260f47c6315c8fe863386", "url": "https://github.com/apollographql/apollo-android/commit/b7dcb05d691892e71cd260f47c6315c8fe863386", "message": "Fix nested fragments on root query and add test case", "committedDate": "2020-10-10T12:31:39Z", "type": "commit"}, {"oid": "8c3a0663242ddae8d11660f14bbdb9c59d5eabb0", "url": "https://github.com/apollographql/apollo-android/commit/8c3a0663242ddae8d11660f14bbdb9c59d5eabb0", "message": "Add Validation for Root Fragments on Invalid Type", "committedDate": "2020-10-12T07:39:18Z", "type": "commit"}, {"oid": "aaec7db5693e9c188bd4b35537cec8af9015dbe9", "url": "https://github.com/apollographql/apollo-android/commit/aaec7db5693e9c188bd4b35537cec8af9015dbe9", "message": "Re-use List<FragmentRef>.findFragments", "committedDate": "2020-10-12T20:54:16Z", "type": "commit"}, {"oid": "30958fb1ebace50ed231fff6ca4f6e9d005d476f", "url": "https://github.com/apollographql/apollo-android/commit/30958fb1ebace50ed231fff6ca4f6e9d005d476f", "message": "Merge latest from root-query-document", "committedDate": "2020-10-13T04:26:20Z", "type": "commit"}, {"oid": "efa60de888914fc08818b99a5175a23b97b57a19", "url": "https://github.com/apollographql/apollo-android/commit/efa60de888914fc08818b99a5175a23b97b57a19", "message": "Update test fixtures for root fragments", "committedDate": "2020-10-13T04:35:10Z", "type": "commit"}, {"oid": "0408dd6c6425d346086844cfdf0aa377865ea540", "url": "https://github.com/apollographql/apollo-android/commit/0408dd6c6425d346086844cfdf0aa377865ea540", "message": "Add Root Inline Fragment Support", "committedDate": "2020-10-13T04:54:41Z", "type": "commit"}, {"oid": "cf296f3750db9f14fb7cfb89fd3443c001c5314b", "url": "https://github.com/apollographql/apollo-android/commit/cf296f3750db9f14fb7cfb89fd3443c001c5314b", "message": "Revert \"fix the license url and a few other dangling urls after the master -> (#2639)\"\n\nThis reverts commit 577cc7d97b5882c5065bca71cf1ce3f335d55bf6.", "committedDate": "2020-10-13T04:56:10Z", "type": "commit"}, {"oid": "6343d1152979844c9086f5394686264781bcda16", "url": "https://github.com/apollographql/apollo-android/commit/6343d1152979844c9086f5394686264781bcda16", "message": "Merge dev-3.x", "committedDate": "2020-10-13T18:24:03Z", "type": "commit"}, {"oid": "c539e358e839d0483354faac29a350a81d3aebc5", "url": "https://github.com/apollographql/apollo-android/commit/c539e358e839d0483354faac29a350a81d3aebc5", "message": "Merge dev-3.x", "committedDate": "2020-10-13T18:30:22Z", "type": "commit"}, {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb", "url": "https://github.com/apollographql/apollo-android/commit/fe2f01a422128a3a02907d9878f277875d0b49fb", "message": "Remove leftover Java codegen", "committedDate": "2020-10-13T18:33:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r504529317", "bodyText": "Double check: passing ParseResult(result = emptyList())) as parentFields is ok I think because there's no polymorphism on the root query and the parent fields will be merged in all cases?  @sav007 does that sound good to you?", "author": "martinbonnin", "createdAt": "2020-10-14T09:20:08Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {\n+    val rawRootParentType = schema.rootTypeForOperationType(operationType) ?: throw ParseException(\n+        message = \"Invalid operation type `${operationType}`\"\n+    )\n+    val rootParentType = schema.resolveType(schema.resolveType(rawRootParentType))\n+\n+    return this\n+        ?.selection()\n+        ?.mapNotNull { ctx ->\n+          ctx.inlineFragment()?.parse(parentSchemaType = rootParentType, ParseResult(result = emptyList()))?.result", "originalCommit": "fe2f01a422128a3a02907d9878f277875d0b49fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMjI2Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505112262", "bodyText": "hm, not sure about this. I think we need to pass parent fields as we are merging them. For example:\nquery {\n  hero {\n    name\n    ... on Human {\n      height\n   }\n }\n}\n\nwe will merge  parent field name and height for inline fragment", "author": "sav007", "createdAt": "2020-10-15T01:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEyNDE1NQ==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505124155", "bodyText": "I think d665d93 addresses this? Hopefully I'm on the right track.", "author": "tylerbwong", "createdAt": "2020-10-15T02:17:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NzM5OA==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505387398", "bodyText": "d665d93 looks good to me even though I don't think it's strictly required.\n@sav007 your sample will take a different path as the inline fragment it contains is on a field. This PR is about inline fragments on the root query. So more something like:\nquery {\n  episode\n  someOtherField\n\n  ... on Query  {\n    hero {\n      height\n   }\n }\n}\n\nI'd say in all cases, the root \"query\" type will always resolve to a single concrete type so all the fields will end up merged anyways? I'm good with either d665d93 or without. @tylerbwong Maybe put a comment linking back here in case our future selves bump into something weird?", "author": "martinbonnin", "createdAt": "2020-10-15T09:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMDcwNA==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r504530704", "bodyText": "I think we want the result to be a List<ParseResult<InlineFragment>> to correctly track the used types. If you do something like:\nquery TestQuery {\n  ... on Query {\n    hero {\n      appearsIn\n    }\n  }\n}\n\nappearsIn is an enum type that needs to be generated but won't be if the \"usedTypes\" are not \"bubbled\" up.", "author": "martinbonnin", "createdAt": "2020-10-14T09:22:11Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {", "originalCommit": "fe2f01a422128a3a02907d9878f277875d0b49fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1Mzk0OA==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r504553948", "bodyText": "Whoops, should be fixed by 0ed96fb!", "author": "tylerbwong", "createdAt": "2020-10-14T09:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMDcwNA=="}], "type": "inlineReview"}, {"oid": "0ed96fb0e5137350ae240e701b1bdbd96f43b2e9", "url": "https://github.com/apollographql/apollo-android/commit/0ed96fb0e5137350ae240e701b1bdbd96f43b2e9", "message": "Properly pass usedTypes from ParseResult", "committedDate": "2020-10-14T09:58:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMjY5OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505112699", "bodyText": "should we omit named fragment to make this test fixture more simple? As I understood we testing just a case when inline fragment is used as root.", "author": "sav007", "createdAt": "2020-10-15T01:33:12Z", "path": "apollo-compiler/src/test/graphql/com/example/root_query_inline_fragment/TestOperation.graphql", "diffHunk": "@@ -0,0 +1,26 @@\n+query TestQuery {\n+  ... on Query {\n+    __typename\n+    hero {\n+      ...heroFragment\n+    }\n+    droid(id: 1) {\n+      ...droidFragment\n+    }\n+    human(id: 1) {\n+      ... on Human {\n+       name\n+       homePlanet\n+      }\n+    }\n+  }\n+}\n+\n+fragment heroFragment on Character {\n+  name\n+}\n+\n+fragment droidFragment on Droid {\n+  name\n+  primaryFunction\n+}", "originalCommit": "fe2f01a422128a3a02907d9878f277875d0b49fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMzc1Nw==", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505113757", "bodyText": "Sure! Removed in 6fbb8af.", "author": "tylerbwong", "createdAt": "2020-10-15T01:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMjY5OQ=="}], "type": "inlineReview"}, {"oid": "6fbb8af557a47381f78fdf487d5b891bc28a6701", "url": "https://github.com/apollographql/apollo-android/commit/6fbb8af557a47381f78fdf487d5b891bc28a6701", "message": "Remove named fragment from test fixture", "committedDate": "2020-10-15T01:37:00Z", "type": "commit"}, {"oid": "d665d934749ccd33abe5219acd66d5a5fb999b6a", "url": "https://github.com/apollographql/apollo-android/commit/d665d934749ccd33abe5219acd66d5a5fb999b6a", "message": "Pass parentFields", "committedDate": "2020-10-15T01:51:13Z", "type": "commit"}, {"oid": "95d79e9818c098d165ee285cc3eff13dca0b6d83", "url": "https://github.com/apollographql/apollo-android/commit/95d79e9818c098d165ee285cc3eff13dca0b6d83", "message": "Update test", "committedDate": "2020-10-15T02:06:56Z", "type": "commit"}, {"oid": "6783eafa130e4b3513528be8792fea39743cc7fc", "url": "https://github.com/apollographql/apollo-android/commit/6783eafa130e4b3513528be8792fea39743cc7fc", "message": "Simplify test case", "committedDate": "2020-10-15T02:14:59Z", "type": "commit"}, {"oid": "01b70478d0795da4762db84a0e0b68910a25d058", "url": "https://github.com/apollographql/apollo-android/commit/01b70478d0795da4762db84a0e0b68910a25d058", "message": "Add comment about passing parentFields", "committedDate": "2020-10-15T09:37:02Z", "type": "commit"}]}