{"pr_number": 2311, "pr_title": "Provide base websocket abstraction", "pr_createdAt": "2020-05-27T19:44:30Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2311", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY0NDc5MA==", "url": "https://github.com/apollographql/apollo-android/pull/2311#discussion_r431644790", "bodyText": "Feels weird to name it NetworkTransport if it inherits from Interceptor", "author": "martinbonnin", "createdAt": "2020-05-28T07:47:42Z", "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/websocket/ApolloWebSocketNetworkTransport.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.apollographql.apollo.network.websocket\n+\n+import com.apollographql.apollo.api.ApolloExperimental\n+import com.apollographql.apollo.api.Response\n+import com.apollographql.apollo.interceptor.ApolloInterceptorChain\n+import com.apollographql.apollo.interceptor.ApolloRequest\n+import com.apollographql.apollo.interceptor.ApolloRequestInterceptor\n+import kotlinx.coroutines.flow.Flow\n+\n+@ApolloExperimental\n+class ApolloWebSocketNetworkTransport(\n+    private val apolloWebSocketFactory: ApolloWebSocketFactory\n+) : ApolloRequestInterceptor {", "originalCommit": "df9d76c8f942e4096c5315265ba403415b74e874", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NjM4OA==", "url": "https://github.com/apollographql/apollo-android/pull/2311#discussion_r431866388", "bodyText": "Sorry it was a mistake, it supposed to inherit NetworkTransport", "author": "sav007", "createdAt": "2020-05-28T14:12:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY0NDc5MA=="}], "type": "inlineReview"}, {"oid": "289fe751044df788974d9ad4decfdc9f2c42158b", "url": "https://github.com/apollographql/apollo-android/commit/289fe751044df788974d9ad4decfdc9f2c42158b", "message": "ApolloWebSocketNetworkTransport implementation", "committedDate": "2020-05-28T14:15:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwOTUzMw==", "url": "https://github.com/apollographql/apollo-android/pull/2311#discussion_r431909533", "bodyText": "This is a big one: We need to make it clear that this will only work with iOS 13+ - I don't think this will even compile on older versions of iOS since it leverages web socket stuff introduced in iOS 13.\nIf we're not making iOS 13 a requirement for KMP (which we could, but I think might be a smidge premature), then there needs to be a way to prevent this from compiling or being available on iOS 12 and below.", "author": "designatednerd", "createdAt": "2020-05-28T15:05:30Z", "path": "apollo-runtime-kotlin/src/iosMain/kotlin/com/apollographql/apollo/network/websocket/ApolloWebSocket.kt", "diffHunk": "@@ -0,0 +1,160 @@\n+package com.apollographql.apollo.network.websocket\n+\n+import com.apollographql.apollo.ApolloWebSocketException\n+import com.apollographql.apollo.network.toNSData\n+import kotlinx.coroutines.channels.Channel\n+import kotlinx.coroutines.channels.ReceiveChannel\n+import okio.ByteString\n+import okio.ByteString.Companion.toByteString\n+import okio.IOException\n+import okio.internal.commonAsUtf8ToByteArray\n+import okio.toByteString\n+import platform.Foundation.NSMutableURLRequest\n+import platform.Foundation.NSOperationQueue\n+import platform.Foundation.NSThread\n+import platform.Foundation.NSURL\n+import platform.Foundation.NSURLRequest\n+import platform.Foundation.NSURLSession\n+import platform.Foundation.NSURLSessionConfiguration\n+import platform.Foundation.NSURLSessionWebSocketCloseCode\n+import platform.Foundation.NSURLSessionWebSocketMessage\n+import platform.Foundation.NSURLSessionWebSocketMessageTypeData\n+import platform.Foundation.NSURLSessionWebSocketMessageTypeString\n+import platform.Foundation.NSURLSessionWebSocketTask\n+import platform.Foundation.setValue\n+import kotlin.native.concurrent.AtomicReference\n+\n+typealias WebSocketFactory = (NSURLRequest) -> NSURLSessionWebSocketTask\n+\n+actual class ApolloWebSocketFactory(", "originalCommit": "289fe751044df788974d9ad4decfdc9f2c42158b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3ODQ4MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2311#discussion_r431978481", "bodyText": "I was thinking on adding this as part of documentation later as we don't really promote new kotlin runtime module.\nIt's interesting is there any way to put restriction on iOS version in KN configuration? We should check that.", "author": "sav007", "createdAt": "2020-05-28T16:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwOTUzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0NzQzNw==", "url": "https://github.com/apollographql/apollo-android/pull/2311#discussion_r432747437", "bodyText": "I have to imagine there's a way to do it somehow - Or I wonder if maybe the K/N shims are doing the work of no-op'ing new APIs on older versions under the hood? I haven't looked into it tbh.", "author": "designatednerd", "createdAt": "2020-05-29T21:39:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwOTUzMw=="}], "type": "inlineReview"}, {"oid": "df973cf1f1058d5de6cc5d08e2b631dbc8937cad", "url": "https://github.com/apollographql/apollo-android/commit/df973cf1f1058d5de6cc5d08e2b631dbc8937cad", "message": "Tests + refactoring", "committedDate": "2020-05-29T22:40:30Z", "type": "forcePushed"}, {"oid": "289a1cd9312f7af511910270d4b00ef4d95457c3", "url": "https://github.com/apollographql/apollo-android/commit/289a1cd9312f7af511910270d4b00ef4d95457c3", "message": "Provide base websocket abstraction\n\nIntroduce websocket abstraction targeting both Android and iOS for later use in `ApolloWebSocketNetworkTransport`.\n\nUse `OkHttpClient` and `NSURLSession` for Android and iOS targets accordingly as web socket implementation under the hood.\n\nPart of https://github.com/apollographql/apollo-android/issues/2222", "committedDate": "2020-06-02T22:14:09Z", "type": "commit"}, {"oid": "5410edac9be55004d2df46209e05ee2695cf92a8", "url": "https://github.com/apollographql/apollo-android/commit/5410edac9be55004d2df46209e05ee2695cf92a8", "message": "Remove hardcoded token", "committedDate": "2020-06-02T22:14:12Z", "type": "commit"}, {"oid": "803398ab5cc95fd97be4c6fae0c69207a02d0358", "url": "https://github.com/apollographql/apollo-android/commit/803398ab5cc95fd97be4c6fae0c69207a02d0358", "message": "ApolloWebSocketNetworkTransport implementation", "committedDate": "2020-06-02T22:14:12Z", "type": "commit"}, {"oid": "3eee52bce54e72ac7558330134695442435ce1f8", "url": "https://github.com/apollographql/apollo-android/commit/3eee52bce54e72ac7558330134695442435ce1f8", "message": "Tests + refactoring", "committedDate": "2020-06-02T22:14:56Z", "type": "commit"}, {"oid": "d503278649924bf09da71ce4bdeffe240133dacc", "url": "https://github.com/apollographql/apollo-android/commit/d503278649924bf09da71ce4bdeffe240133dacc", "message": "Rename + refactor", "committedDate": "2020-06-02T22:14:59Z", "type": "commit"}, {"oid": "434b3924173fabc92e65980d978266fbf4a702c4", "url": "https://github.com/apollographql/apollo-android/commit/434b3924173fabc92e65980d978266fbf4a702c4", "message": "Fix issues after testing with real websocket", "committedDate": "2020-06-02T22:14:59Z", "type": "commit"}, {"oid": "366d42d6869f71adfc246160183e5a3270452f10", "url": "https://github.com/apollographql/apollo-android/commit/366d42d6869f71adfc246160183e5a3270452f10", "message": "Fix test", "committedDate": "2020-06-02T22:14:59Z", "type": "commit"}, {"oid": "d5b90e0e365977b87ce57ad72b5e82ef24d76fb5", "url": "https://github.com/apollographql/apollo-android/commit/d5b90e0e365977b87ce57ad72b5e82ef24d76fb5", "message": "Refactor to auto add `Sec-WebSocket-Protocol: to graphql-ws` header for Apollo WS protocol implementation", "committedDate": "2020-06-02T22:14:59Z", "type": "commit"}, {"oid": "755e87cbe760254d9d54dac515ac391225a84580", "url": "https://github.com/apollographql/apollo-android/commit/755e87cbe760254d9d54dac515ac391225a84580", "message": "Send stop message on complete + fix test", "committedDate": "2020-06-02T22:14:59Z", "type": "commit"}, {"oid": "fb8e8b64d81e668f2ebc1e36e3e14811c0ab83c6", "url": "https://github.com/apollographql/apollo-android/commit/fb8e8b64d81e668f2ebc1e36e3e14811c0ab83c6", "message": "Introduce `WebSocketFactory` interface and default Apollo KN `ApolloWebSocketFactory` implementation", "committedDate": "2020-06-02T22:14:59Z", "type": "forcePushed"}, {"oid": "6889606013bd2658c3883890b6c55bce9f2c4940", "url": "https://github.com/apollographql/apollo-android/commit/6889606013bd2658c3883890b6c55bce9f2c4940", "message": "Introduce `WebSocketFactory` interface and default Apollo KN `ApolloWebSocketFactory` implementation", "committedDate": "2020-06-02T23:21:03Z", "type": "forcePushed"}, {"oid": "b9dd0fdb8581ab93917c1f37ba6164ea9721106e", "url": "https://github.com/apollographql/apollo-android/commit/b9dd0fdb8581ab93917c1f37ba6164ea9721106e", "message": "Introduce `WebSocketFactory` interface and default Apollo KN `ApolloWebSocketFactory` implementation", "committedDate": "2020-06-03T00:26:12Z", "type": "forcePushed"}, {"oid": "40521cd8d42e18c16a6fcfd22bbcb255b55ea7d1", "url": "https://github.com/apollographql/apollo-android/commit/40521cd8d42e18c16a6fcfd22bbcb255b55ea7d1", "message": "Introduce `WebSocketFactory` interface and default Apollo KN `ApolloWebSocketFactory` implementation", "committedDate": "2020-06-03T01:06:03Z", "type": "forcePushed"}, {"oid": "49b2820fbab856e60cb96cd7922b18e22abcb435", "url": "https://github.com/apollographql/apollo-android/commit/49b2820fbab856e60cb96cd7922b18e22abcb435", "message": "Introduce `WebSocketFactory` interface and default Apollo KN `ApolloWebSocketFactory` implementation", "committedDate": "2020-06-03T14:22:40Z", "type": "commit"}, {"oid": "49b2820fbab856e60cb96cd7922b18e22abcb435", "url": "https://github.com/apollographql/apollo-android/commit/49b2820fbab856e60cb96cd7922b18e22abcb435", "message": "Introduce `WebSocketFactory` interface and default Apollo KN `ApolloWebSocketFactory` implementation", "committedDate": "2020-06-03T14:22:40Z", "type": "forcePushed"}]}