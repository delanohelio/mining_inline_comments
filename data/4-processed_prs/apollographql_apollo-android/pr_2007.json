{"pr_number": 2007, "pr_title": "Coroutines: make sure we do not crash when calling `offer`", "pr_createdAt": "2020-02-20T23:49:57Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2007", "timeline": [{"oid": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc", "url": "https://github.com/apollographql/apollo-android/commit/45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc", "message": "catch offer exceptions. See https://github.com/Kotlin/kotlinx.coroutines/issues/974", "committedDate": "2020-02-20T23:47:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzQ5Mw==", "url": "https://github.com/apollographql/apollo-android/pull/2007#discussion_r382327493", "bodyText": "@sav007 I feel the runCatching approach is safer since there could potentially be a race condition where the channel is closed just after the if before. Let me know if isClosedForSend was used to catch other cases.", "author": "martinbonnin", "createdAt": "2020-02-20T23:59:48Z", "path": "apollo-coroutines-support/src/main/kotlin/com/apollographql/apollo/coroutines/CoroutinesExtensions.kt", "diffHunk": "@@ -13,9 +13,8 @@ import kotlinx.coroutines.flow.*\n \n private class ChannelCallback<T>(val channel: Channel<Response<T>>) : ApolloCall.Callback<T>() {\n \n-  @ExperimentalCoroutinesApi\n   override fun onResponse(response: Response<T>) {\n-    if (!channel.isClosedForSend) {\n+    runCatching {", "originalCommit": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwODMyNg==", "url": "https://github.com/apollographql/apollo-android/pull/2007#discussion_r382708326", "bodyText": "To avoid having to wrap the offer in a runCatching, you could create an extension on a Channel.\nfun <E> SendChannel<E>.safeOffer(value: E) = runCatching {\n        offer(value)\n}", "author": "msya", "createdAt": "2020-02-21T17:25:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzQ5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgzMTY2NA==", "url": "https://github.com/apollographql/apollo-android/pull/2007#discussion_r382831664", "bodyText": "@msya, for 2 instances only, I'd rather not pollute the SendChannel namespace with an extension function.", "author": "martinbonnin", "createdAt": "2020-02-21T22:14:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzQ5Mw=="}], "type": "inlineReview"}]}