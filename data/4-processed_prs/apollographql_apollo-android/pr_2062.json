{"pr_number": 2062, "pr_title": "Introduce Kotlin Multiplatform into apollo-api module", "pr_createdAt": "2020-03-10T23:46:26Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2062", "timeline": [{"oid": "03915bc8558442c7113fc8133e1b42956f9b3788", "url": "https://github.com/apollographql/apollo-android/commit/03915bc8558442c7113fc8133e1b42956f9b3788", "message": "Introduce Kotlin Multiplatform into apollo-api module", "committedDate": "2020-03-10T23:39:47Z", "type": "commit"}, {"oid": "a76050801e72145db5861dc5ff3c57c52519e24a", "url": "https://github.com/apollographql/apollo-android/commit/a76050801e72145db5861dc5ff3c57c52519e24a", "message": "Revert unnecessary change", "committedDate": "2020-03-10T23:47:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3NDU0MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390674541", "bodyText": "Here hashCode has been always the same value. Was that intentional?", "author": "tasomaniac", "createdAt": "2020-03-10T23:48:01Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/CustomTypeValue.kt", "diffHunk": "@@ -13,11 +16,12 @@ sealed class CustomTypeValue<T>(@JvmField val value: T) {\n     override fun equals(other: Any?): Boolean {\n       if (this === other) return true\n       if (other !is GraphQLString) return false\n+      if (value != other.value) return false\n       return true\n     }\n \n     override fun hashCode(): Int {\n-      return javaClass.hashCode()", "originalCommit": "03915bc8558442c7113fc8133e1b42956f9b3788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4MzE4MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390683181", "bodyText": "Probably oversight", "author": "sav007", "createdAt": "2020-03-11T00:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3NDU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3NTE2NQ==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390675165", "bodyText": "I want to say that this is the same as before. But I'm not sure.", "author": "tasomaniac", "createdAt": "2020-03-10T23:50:16Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/internal/SimpleResponseReader.kt", "diffHunk": "@@ -125,12 +124,12 @@ class SimpleResponseReader private constructor(\n         val conditionValue = variableValues[condition.variableName] as Boolean\n         if (condition.inverted) {\n           // means it's a skip directive\n-          if (java.lang.Boolean.TRUE == conditionValue) {", "originalCommit": "03915bc8558442c7113fc8133e1b42956f9b3788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4NTM5Nw==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390685397", "bodyText": "Yeah, that's fine. It was bad port to kotlin.", "author": "sav007", "createdAt": "2020-03-11T00:27:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3NTE2NQ=="}], "type": "inlineReview"}, {"oid": "7aa804cd43c808b3b6f25f927db50bb786cfc64c", "url": "https://github.com/apollographql/apollo-android/commit/7aa804cd43c808b3b6f25f927db50bb786cfc64c", "message": "Have String.format in common code", "committedDate": "2020-03-10T23:53:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3Njg3Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390676872", "bodyText": "I'm not 100% sure about this. Right now, this is the only choice to keep it compatible. This means, javaType will work as before for Jvm/Android.\nRight now, this is also used by generated code. So, it would be blocker moving forward to figure this out.", "author": "tasomaniac", "createdAt": "2020-03-10T23:56:15Z", "path": "apollo-api/src/jvmMain/kotlin/com/apollographql/apollo/api/ScalarType.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.apollographql.apollo.api\n+\n+/**\n+ * Represents a custom GraphQL scalar type\n+ */\n+actual interface ScalarType {\n+  actual fun typeName(): String\n+\n+  fun javaType(): Class<*>", "originalCommit": "03915bc8558442c7113fc8133e1b42956f9b3788", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4OTkzMg==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390689932", "bodyText": "We need to think about this, this is used only to locate default scalar type adapter for system types like Int, Boolean, String etc.", "author": "sav007", "createdAt": "2020-03-11T00:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3Njg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTM2OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r391199369", "bodyText": "This will be done in a follow-up by also changing the code generation to accomodate.", "author": "tasomaniac", "createdAt": "2020-03-11T19:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3Njg3Mg=="}], "type": "inlineReview"}, {"oid": "1595070d772398418a47fb22d5f335edd43affc9", "url": "https://github.com/apollographql/apollo-android/commit/1595070d772398418a47fb22d5f335edd43affc9", "message": "Try with jvm suffix on artifact id", "committedDate": "2020-03-11T00:03:27Z", "type": "commit"}, {"oid": "bea17e0864bdf99ef2e676f109a4ea8bb84b52b3", "url": "https://github.com/apollographql/apollo-android/commit/bea17e0864bdf99ef2e676f109a4ea8bb84b52b3", "message": "Revert checkstyle changes in tests", "committedDate": "2020-03-11T00:04:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4MTgwMQ==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390681801", "bodyText": "is it intentionally? I thought we keep the name of artifact the same.", "author": "sav007", "createdAt": "2020-03-11T00:14:03Z", "path": "apollo-api/gradle.properties", "diffHunk": "@@ -1,4 +1,4 @@\n-POM_ARTIFACT_ID=apollo-api\n+POM_ARTIFACT_ID=apollo-api-jvm", "originalCommit": "bea17e0864bdf99ef2e676f109a4ea8bb84b52b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NzgzMA==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390797830", "bodyText": "I was just trying stuff. I reverted this soon after pushing.", "author": "tasomaniac", "createdAt": "2020-03-11T08:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4MTgwMQ=="}], "type": "inlineReview"}, {"oid": "16111dcd40a0bc3fa6638bc00c00bc8e89419389", "url": "https://github.com/apollographql/apollo-android/commit/16111dcd40a0bc3fa6638bc00c00bc8e89419389", "message": "Revert \"Try with jvm suffix on artifact id\"\n\nThis reverts commit 1595070d", "committedDate": "2020-03-11T00:14:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4Mjk3OA==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390682978", "bodyText": "I have in one of my project this https://gist.github.com/sav007/8bf365e7eaa86f4f4b6c890ea3ce47e6", "author": "sav007", "createdAt": "2020-03-11T00:18:39Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/BigDecimal.kt", "diffHunk": "@@ -0,0 +1,7 @@\n+package com.apollographql.apollo.api\n+\n+expect class BigDecimal(value: String?) {", "originalCommit": "bea17e0864bdf99ef2e676f109a4ea8bb84b52b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df06210d025711714ee90777c02dfad513160b75", "url": "https://github.com/apollographql/apollo-android/commit/df06210d025711714ee90777c02dfad513160b75", "message": "Fix StackOverflow", "committedDate": "2020-03-11T00:22:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4NDkzMw==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390684933", "bodyText": "Wonder if we should replace this with KClass, the only place where it used is to find default scalar type adapter.\ncom.apollographql.apollo.api.ScalarTypeAdapters", "author": "sav007", "createdAt": "2020-03-11T00:25:57Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ScalarType.kt", "diffHunk": "@@ -3,8 +3,6 @@ package com.apollographql.apollo.api\n /**\n  * Represents a custom GraphQL scalar type\n  */\n-interface ScalarType {\n+expect interface ScalarType {\n   fun typeName(): String\n-\n-  fun javaType(): Class<*>", "originalCommit": "bea17e0864bdf99ef2e676f109a4ea8bb84b52b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NzM0Mw==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390797343", "bodyText": "I tried but it is not possible. It is because the code generation uses this to implement custom types and KClass would not compile in Java code generation.\nIf we replace it somehow with KClass, then it can be easily moved to common", "author": "tasomaniac", "createdAt": "2020-03-11T08:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4NDkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE2NzU1Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r391167552", "bodyText": "We can replace this with raw string, I can make codegen changes for that.", "author": "sav007", "createdAt": "2020-03-11T18:10:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4NDkzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4NzI4OA==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390687288", "bodyText": "nit: should it be moved to dep.gradle?", "author": "sav007", "createdAt": "2020-03-11T00:35:16Z", "path": "apollo-api/build.gradle.kts", "diffHunk": "@@ -1,18 +1,36 @@\n plugins {\n   `java-library`\n-  kotlin(\"jvm\")\n+  kotlin(\"multiplatform\")\n }\n \n-dependencies {\n-  add(\"compileOnly\", groovy.util.Eval.x(project, \"x.dep.kotlin.stdLib\"))\n-  add(\"compileOnly\", groovy.util.Eval.x(project, \"x.dep.okHttp.okHttp\"))\n+kotlin {\n+  jvm {\n+    withJava()\n+  }\n \n-  add(\"api\", groovy.util.Eval.x(project, \"x.dep.kotlin.stdLib\"))\n-  add(\"api\", groovy.util.Eval.x(project, \"x.dep.okio\"))\n+  sourceSets {\n+    val commonMain by getting {\n+      dependencies {\n+        implementation(kotlin(\"stdlib-common\"))\n+        api(\"com.squareup.okio:okio-multiplatform:2.4.3\")", "originalCommit": "df06210d025711714ee90777c02dfad513160b75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4Nzg4OA==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390687888", "bodyText": "What holds us to move this class to common?", "author": "sav007", "createdAt": "2020-03-11T00:37:53Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ScalarTypeAdapters.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.apollographql.apollo.api\n+\n+expect class ScalarTypeAdapters(customAdapters: Map<ScalarType, CustomTypeAdapter<*>>) {", "originalCommit": "df06210d025711714ee90777c02dfad513160b75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NzU3Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2062#discussion_r390797576", "bodyText": "Answered here #2062 (comment)", "author": "tasomaniac", "createdAt": "2020-03-11T08:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY4Nzg4OA=="}], "type": "inlineReview"}, {"oid": "f31d5f0bd77532a1e0c1fe9a66f65ba0cf10b798", "url": "https://github.com/apollographql/apollo-android/commit/f31d5f0bd77532a1e0c1fe9a66f65ba0cf10b798", "message": "Fix publish task", "committedDate": "2020-03-11T00:41:14Z", "type": "commit"}, {"oid": "49b0f6293cffbeec9618828fa871ef80c319f910", "url": "https://github.com/apollographql/apollo-android/commit/49b0f6293cffbeec9618828fa871ef80c319f910", "message": "upload the jar for plugin tests", "committedDate": "2020-03-11T18:27:09Z", "type": "commit"}, {"oid": "652d7d0a69f5a7d389343161eb2c4c382eb8d0cb", "url": "https://github.com/apollographql/apollo-android/commit/652d7d0a69f5a7d389343161eb2c4c382eb8d0cb", "message": "hopefully make tests pass", "committedDate": "2020-03-11T18:53:13Z", "type": "commit"}, {"oid": "77bffe03b72f1523589635dea9aae2d92cfb8b38", "url": "https://github.com/apollographql/apollo-android/commit/77bffe03b72f1523589635dea9aae2d92cfb8b38", "message": "Move okioMultiplatform to dependencies.gradle", "committedDate": "2020-03-11T19:07:51Z", "type": "commit"}, {"oid": "ddd010d828736946bd7552910bd7631fce4147e2", "url": "https://github.com/apollographql/apollo-android/commit/ddd010d828736946bd7552910bd7631fce4147e2", "message": "Fix okio reference in dependencies.gradle", "committedDate": "2020-03-11T19:20:16Z", "type": "commit"}, {"oid": "bf9d23f037d76edfc3d2a1c3716ca86dd276c62e", "url": "https://github.com/apollographql/apollo-android/commit/bf9d23f037d76edfc3d2a1c3716ca86dd276c62e", "message": "Keep original dependency artifact", "committedDate": "2020-03-11T19:22:08Z", "type": "commit"}]}