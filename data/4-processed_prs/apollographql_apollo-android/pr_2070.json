{"pr_number": 2070, "pr_title": "Add iOS targets to API module", "pr_createdAt": "2020-03-15T17:08:33Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2070", "timeline": [{"oid": "ff9ca18b59e64fdf52b4f4d77b429ae51b4f2f42", "url": "https://github.com/apollographql/apollo-android/commit/ff9ca18b59e64fdf52b4f4d77b429ae51b4f2f42", "message": "Add iOS targets to API module\n\n- Refactor couple classes to make easier to add support for iOS targets\n- Provide iOS implementations of expected classes", "committedDate": "2020-03-15T17:07:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MzI1NA==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392693254", "bodyText": "Changing from File to String would be additional binary incompatible change. Are we ok with that?", "author": "tasomaniac", "createdAt": "2020-03-15T17:11:35Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/FileUpload.kt", "diffHunk": "@@ -1,5 +1,19 @@\n package com.apollographql.apollo.api\n \n-expect class FileUpload constructor(mimetype: String, file: File) {\n-  val mimetype: String\n+class FileUpload(val mimetype: String, val filePath: String) {", "originalCommit": "ff9ca18b59e64fdf52b4f4d77b429ae51b4f2f42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NjM5Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392696396", "bodyText": "Could we keep the File constructor in the jvm artifact and expose both ?", "author": "martinbonnin", "createdAt": "2020-03-15T17:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MzI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NjU3MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392696571", "bodyText": "I guess Ivan wanted to keep the full implementation in the common code. To do that you unfortunately need to use expect/actual and have different implementations in common/jvm/ios", "author": "tasomaniac", "createdAt": "2020-03-15T17:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MzI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5OTAwOA==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392699008", "bodyText": "yeah if we keep file then we need to provide full implementation of File, where on iOS it's completely different how you work with files. There is no such thing as File, and for example to read text on iOS:\nNSString.create(contentsOfFile = path).toString()\n\nSecondly, this file upload is hack, there is no GraphQL specs, it supported probably by just one server only. Not sure if it widely used as the common practice is to use just plain http upload to let's say S3, then get url and run mutation to update.\nSo I would make such changes anyway to avoid extra complexity.", "author": "sav007", "createdAt": "2020-03-15T18:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MzI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5OTI1Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392699252", "bodyText": "TBH I was against this feature at first place, I think you shouldn't use GraphQL to upload files.", "author": "sav007", "createdAt": "2020-03-15T18:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MzI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMDk4Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392730982", "bodyText": "FWIW, there is a graphQL multi-part request spec that's mostly intended to handle Upload types.\nHowever as Apollo we only recommend it for proof-of-concept and recommend only sending the URL the file was uploaded to via GraphQL in most normal cases.", "author": "designatednerd", "createdAt": "2020-03-16T00:19:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MzI1NA=="}], "type": "inlineReview"}, {"oid": "87cdb8495ee80520db440e15839b352e75daf19d", "url": "https://github.com/apollographql/apollo-android/commit/87cdb8495ee80520db440e15839b352e75daf19d", "message": "Fix build", "committedDate": "2020-03-15T18:38:58Z", "type": "forcePushed"}, {"oid": "25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "url": "https://github.com/apollographql/apollo-android/commit/25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "message": "Fix build", "committedDate": "2020-03-15T19:20:29Z", "type": "commit"}, {"oid": "25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "url": "https://github.com/apollographql/apollo-android/commit/25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "message": "Fix build", "committedDate": "2020-03-15T19:20:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMDYxNw==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392730617", "bodyText": "Totally optional but is it worth making this iOSTarget so it's easier to parse visually? I think I'm fine with iosTargets below but the uppercase here threw me off", "author": "designatednerd", "createdAt": "2020-03-16T00:15:41Z", "path": "apollo-api/build.gradle.kts", "diffHunk": "@@ -4,6 +4,21 @@ plugins {\n }\n \n kotlin {\n+  data class IosTarget(val name: String, val preset: String, val id: String)", "originalCommit": "25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392731097", "bodyText": "Will Kotlin not auto-generate hashCode for MPP stuff?", "author": "designatednerd", "createdAt": "2020-03-16T00:20:28Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/FileUpload.kt", "diffHunk": "@@ -1,5 +1,19 @@\n package com.apollographql.apollo.api\n \n-expect class FileUpload constructor(mimetype: String, file: File) {\n-  val mimetype: String\n+class FileUpload(val mimetype: String, val filePath: String) {\n+  override fun equals(other: Any?): Boolean {\n+    if (this === other) return true\n+    if (other !is FileUpload) return false\n+\n+    if (mimetype != other.mimetype) return false\n+    if (filePath != other.filePath) return false\n+\n+    return true\n+  }\n+\n+  override fun hashCode(): Int {\n+    var result = mimetype.hashCode()\n+    result = 31 * result + filePath.hashCode()", "originalCommit": "25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4ODM0Nw==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392788347", "bodyText": "What do you mean? It won't as FileUpload is not a data class.", "author": "sav007", "createdAt": "2020-03-16T05:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzk1MA==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r393237950", "bodyText": "Why is it not? \ud83d\ude0a", "author": "tasomaniac", "createdAt": "2020-03-16T18:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NTM4MA==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r393275380", "bodyText": "Ah that's what I missed, that it's not a data class. However @tasomaniac poses a good question \ud83d\ude04", "author": "designatednerd", "createdAt": "2020-03-16T19:52:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5MDE0Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r393290146", "bodyText": "I'd like to avoid data classes in public APIs unless really needed as they make it quite hard to ensure source/binary compatibility.\nSee https://jakewharton.com/public-api-challenges-in-kotlin/", "author": "martinbonnin", "createdAt": "2020-03-16T20:25:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMxMzAxMg==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r393313012", "bodyText": "And that's a great answer as to why not do it that way. Thank you @martinbonnin!", "author": "designatednerd", "createdAt": "2020-03-16T21:11:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyMzk3Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r393323972", "bodyText": "Oh yes. Makes sense.", "author": "tasomaniac", "createdAt": "2020-03-16T21:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTE3MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392731171", "bodyText": "Is this something you really want to crash on if it's not working?", "author": "designatednerd", "createdAt": "2020-03-16T00:21:10Z", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/internal/json/ResponseJsonStreamReader.kt", "diffHunk": "@@ -104,7 +104,7 @@ open class ResponseJsonStreamReader(\n     return when {\n       isNextNull -> skipNext().let { null }\n       isNextBoolean -> nextBoolean(false)\n-      isNextNumber -> BigDecimal(nextString(false))\n+      isNextNumber -> BigDecimal(nextString(false)!!)", "originalCommit": "25dee1ad757c1124f9a21cecfa1d3b527541d0cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4ODEzMg==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r392788132", "bodyText": "It's not informative but false signals here that field is non optional, so we will never crash here but in other place where we resolve field value (inside nextString function)", "author": "sav007", "createdAt": "2020-03-16T05:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI4MDcwMQ==", "url": "https://github.com/apollographql/apollo-android/pull/2070#discussion_r393280701", "bodyText": "Shouldn't the value from that be non-nullable if that's the case?", "author": "designatednerd", "createdAt": "2020-03-16T20:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMTE3MQ=="}], "type": "inlineReview"}, {"oid": "2f310e474491ea1c2e7d8381c1eb8118d2fd8f7d", "url": "https://github.com/apollographql/apollo-android/commit/2f310e474491ea1c2e7d8381c1eb8118d2fd8f7d", "message": "Feedback", "committedDate": "2020-03-16T05:41:09Z", "type": "commit"}]}