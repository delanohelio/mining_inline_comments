{"pr_number": 2168, "pr_title": "Fix some of the Kotlin Multiplatform dependency issues", "pr_createdAt": "2020-04-14T16:09:36Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2168", "timeline": [{"oid": "131919b1cd6d4e873e189e41cdd4bc98df6a0629", "url": "https://github.com/apollographql/apollo-android/commit/131919b1cd6d4e873e189e41cdd4bc98df6a0629", "message": "Fix some of the dependency issues", "committedDate": "2020-04-14T16:08:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NzkzMQ==", "url": "https://github.com/apollographql/apollo-android/pull/2168#discussion_r408267931", "bodyText": "Isn't type inference supposed to work here ? Or are you adding this for readability reasons ?", "author": "martinbonnin", "createdAt": "2020-04-14T16:22:30Z", "path": "apollo-coroutines-support/src/main/kotlin/com/apollographql/apollo/coroutines/CoroutinesExtensions.kt", "diffHunk": "@@ -19,7 +22,7 @@ import kotlinx.coroutines.flow.*\n  * @return a flow which emits [Responses<T>]\n  */\n @ExperimentalCoroutinesApi\n-fun <T> ApolloCall<T>.toFlow() = callbackFlow {\n+fun <T> ApolloCall<T>.toFlow(): Flow<Response<T>> = callbackFlow {", "originalCommit": "131919b1cd6d4e873e189e41cdd4bc98df6a0629", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3NzIzNw==", "url": "https://github.com/apollographql/apollo-android/pull/2168#discussion_r408277237", "bodyText": "I think originally this was because of compileOnly. I added it. But then didn't remove it since It is a good practice to explicitly define types in public APIs.", "author": "tasomaniac", "createdAt": "2020-04-14T16:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NzkzMQ=="}], "type": "inlineReview"}]}