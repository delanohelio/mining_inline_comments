{"pr_number": 2223, "pr_title": "Swift UI funtimes for iOS Sample App on KMP", "pr_createdAt": "2020-04-27T03:04:18Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2223", "timeline": [{"oid": "455f1f3e7f2f7416b4b5c650012eee9d2ef304dd", "url": "https://github.com/apollographql/apollo-android/commit/455f1f3e7f2f7416b4b5c650012eee9d2ef304dd", "message": "alias name of `description` because otherwise it causes Obj-C runtime confusion", "committedDate": "2020-04-27T02:34:16Z", "type": "commit"}, {"oid": "1c3c760072080cb5c429fb3f2771914e153757bb", "url": "https://github.com/apollographql/apollo-android/commit/1c3c760072080cb5c429fb3f2771914e153757bb", "message": "UI featuring SwiftUI", "committedDate": "2020-04-27T02:45:38Z", "type": "commit"}, {"oid": "b6dd7e570246fd0d33ab5969745550c142e2e328", "url": "https://github.com/apollographql/apollo-android/commit/b6dd7e570246fd0d33ab5969745550c142e2e328", "message": "remove old \"Hello-world\"", "committedDate": "2020-04-27T20:13:44Z", "type": "commit"}, {"oid": "406f2a80f87451a2ea8989d097049a0051aebb6d", "url": "https://github.com/apollographql/apollo-android/commit/406f2a80f87451a2ea8989d097049a0051aebb6d", "message": "byeee whitespace", "committedDate": "2020-04-27T20:14:09Z", "type": "commit"}, {"oid": "d21d2697b8679d687f53443068272a04a69ef3e2", "url": "https://github.com/apollographql/apollo-android/commit/d21d2697b8679d687f53443068272a04a69ef3e2", "message": "fix which screen gets an inline title", "committedDate": "2020-04-27T20:15:26Z", "type": "commit"}, {"oid": "7afb11d44e6499bee967e18c0716423b6c7320ce", "url": "https://github.com/apollographql/apollo-android/commit/7afb11d44e6499bee967e18c0716423b6c7320ce", "message": "Add note about commit types vs. generics and map to Nodes.", "committedDate": "2020-04-27T20:19:22Z", "type": "commit"}, {"oid": "addec177d0f0369c55b6a3372fc1595bd3569944", "url": "https://github.com/apollographql/apollo-android/commit/addec177d0f0369c55b6a3372fc1595bd3569944", "message": "create UI for commit list", "committedDate": "2020-04-27T20:19:36Z", "type": "commit"}, {"oid": "5884b1840a3c7ceba4901ba2c3d62754c6ee53a1", "url": "https://github.com/apollographql/apollo-android/commit/5884b1840a3c7ceba4901ba2c3d62754c6ee53a1", "message": "update repo description on details and update Android app so everything compiles", "committedDate": "2020-04-27T20:30:58Z", "type": "commit"}, {"oid": "6fabd869ca178c061dbd47c134b94d060abbd19e", "url": "https://github.com/apollographql/apollo-android/commit/6fabd869ca178c061dbd47c134b94d060abbd19e", "message": "Add readme with a bunch of notes about Obj-C shenanigans", "committedDate": "2020-04-27T20:42:39Z", "type": "commit"}, {"oid": "cdef9c2841e4c5a19da7f09850cbf26c33613b0c", "url": "https://github.com/apollographql/apollo-android/commit/cdef9c2841e4c5a19da7f09850cbf26c33613b0c", "message": "actually set content view on repo detail activity", "committedDate": "2020-04-28T21:30:50Z", "type": "commit"}, {"oid": "027cc4781870e81168efb224e6027acc2d5fa934", "url": "https://github.com/apollographql/apollo-android/commit/027cc4781870e81168efb224e6027acc2d5fa934", "message": "fix parent activity for commits activity", "committedDate": "2020-04-28T22:52:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5Mzk1OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2223#discussion_r417893959", "bodyText": "Is there a way to force a crash if $0 is not nil but not of type GithubRepositoryCommitsQuery.Edge either? Some swift equivalent of mapNotNull { it as GithubRepositoryCommitsQuery.Edge? } in Kotlin?", "author": "martinbonnin", "createdAt": "2020-04-30T09:56:30Z", "path": "samples/multiplatform/kmp-ios-app/kmp-ios-app/RepositoryManager.swift", "diffHunk": "@@ -0,0 +1,46 @@\n+//\n+//  RepositoryManager.swift\n+//  kmp-ios-app\n+//\n+//  Created by Ellen Shapiro on 4/26/20.\n+//\n+\n+import Foundation\n+import kmp_lib_sample\n+import SwiftUI\n+\n+class RepositoryManager: ObservableObject {\n+    \n+    private let repository = ApolloiOSRepositoryKt.create()\n+    \n+    @Published var repos: [RepositoryFragment] = []\n+    @Published var repoDetails: [String: RepositoryDetail] = [:]\n+    @Published var commits: [String: [GithubRepositoryCommitsQuery.Node]] = [:]\n+    \n+    func fetch() {\n+        self.repository.fetchRepositories { [weak self] repos in\n+            self?.repos = repos\n+        }\n+    }\n+    \n+    func fetchDetails(for repo: RepositoryFragment) {        \n+        self.repository.fetchRepositoryDetail(repositoryName: repo.name) { [weak self] detail in\n+            if let detail = detail {\n+                self?.repoDetails[repo.name] = detail\n+            }\n+        }\n+    }\n+    \n+    func fetchCommits(for repo: RepositoryFragment) {\n+        // NOTE: This comes in as `[Any]` due to some some issues with representing\n+        // optional types in a generic array in Objective-C from K/N. The actual\n+        // type coming back here is `GithubRepositoryCommitsQuery.Edge`, and the\n+        // `Node` it contains is where actual information about the commit lives.\n+        self.repository.fetchCommits(repositoryName: repo.name) { [weak self] commits in\n+            let filteredCommits = commits\n+                .compactMap { $0 as? GithubRepositoryCommitsQuery.Edge }", "originalCommit": "027cc4781870e81168efb224e6027acc2d5fa934", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4MjQ2MA==", "url": "https://github.com/apollographql/apollo-android/pull/2223#discussion_r418182460", "bodyText": "\ud83e\udd14 Good question - this isn't really a pattern used much in iOS so I don't think it's a change worth making generally, but I'll mess around and see because now I'm curious :)", "author": "designatednerd", "createdAt": "2020-04-30T17:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5Mzk1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyNjQzNA==", "url": "https://github.com/apollographql/apollo-android/pull/2223#discussion_r418326434", "bodyText": "OK, survey says that's not a thing in Swift:\n\nYou also can't do$0 as? GithubRepositoryCommitsQuery.Edge? since the type is [Any] rather than [Any?]:\n\nIf the type were [Any?] then you could do that:\n\nBut yeah basically you can't do what causes a runtime crash in Kotlin because it causes a compile-time error in Swift.", "author": "designatednerd", "createdAt": "2020-04-30T22:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5Mzk1OQ=="}], "type": "inlineReview"}]}