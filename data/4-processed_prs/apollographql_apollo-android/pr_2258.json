{"pr_number": 2258, "pr_title": "Make Execution context more Kotlin coroutine context idiomatic", "pr_createdAt": "2020-05-08T22:40:36Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2258", "timeline": [{"oid": "66bf089f0c3ef37a8afc47546ec85b6c33695f42", "url": "https://github.com/apollographql/apollo-android/commit/66bf089f0c3ef37a8afc47546ec85b6c33695f42", "message": "Make Execution context more Kotlin coroutine context idiomatic\n\nAfter working on new version of kotlin runtime, I realized why coroutine context `Element` confirms to the `ExecutionContext` protocol, it's much easier to work with this when you need to pass only one element as a context.\n\nRefactor our `ExecutionContext` implementation to be more similar to coroutines ones.", "committedDate": "2020-05-08T22:41:33Z", "type": "commit"}, {"oid": "66bf089f0c3ef37a8afc47546ec85b6c33695f42", "url": "https://github.com/apollographql/apollo-android/commit/66bf089f0c3ef37a8afc47546ec85b6c33695f42", "message": "Make Execution context more Kotlin coroutine context idiomatic\n\nAfter working on new version of kotlin runtime, I realized why coroutine context `Element` confirms to the `ExecutionContext` protocol, it's much easier to work with this when you need to pass only one element as a context.\n\nRefactor our `ExecutionContext` implementation to be more similar to coroutines ones.", "committedDate": "2020-05-08T22:41:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwNzkzNw==", "url": "https://github.com/apollographql/apollo-android/pull/2258#discussion_r422407937", "bodyText": "for JVM users", "author": "sav007", "createdAt": "2020-05-08T22:42:20Z", "path": "apollo-runtime/src/main/java/com/apollographql/apollo/http/OkHttpExecutionContext.kt", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.apollographql.apollo.http\n+\n+import com.apollographql.apollo.api.ApolloExperimental\n+import com.apollographql.apollo.api.ExecutionContext\n+import okhttp3.Response\n+\n+/**\n+ * Http GraphQL execution context, provides access to the raw {@link okhttp3.Response} response.\n+ */\n+@ApolloExperimental\n+class OkHttpExecutionContext(\n+    response: Response\n+) : ExecutionContext.Element {\n+  val response: Response = response.strip()\n+\n+  override val key: ExecutionContext.Key<*> = Key\n+\n+  companion object Key : ExecutionContext.Key<OkHttpExecutionContext> {\n+    @JvmField\n+    val KEY: Key = Key", "originalCommit": "66bf089f0c3ef37a8afc47546ec85b6c33695f42", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}