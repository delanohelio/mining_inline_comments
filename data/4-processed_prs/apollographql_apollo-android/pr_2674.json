{"pr_number": 2674, "pr_title": "[Performance] Add a Benchmark project", "pr_createdAt": "2020-10-19T14:57:57Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2674", "timeline": [{"oid": "bbeb9170432774397ef5e4605447dbb8a829945e", "url": "https://github.com/apollographql/apollo-android/commit/bbeb9170432774397ef5e4605447dbb8a829945e", "message": "add a benchmark test", "committedDate": "2020-10-19T15:47:26Z", "type": "commit"}, {"oid": "7e49670ce969fd2d82174e6e39f87db2c74ac243", "url": "https://github.com/apollographql/apollo-android/commit/7e49670ce969fd2d82174e6e39f87db2c74ac243", "message": "update to 3.0.0-SNAPSHOT", "committedDate": "2020-10-19T15:47:26Z", "type": "commit"}, {"oid": "bbb6a4081ff79a9bef8a230a24a2f4f9601f5848", "url": "https://github.com/apollographql/apollo-android/commit/bbb6a4081ff79a9bef8a230a24a2f4f9601f5848", "message": "fix typo", "committedDate": "2020-10-19T15:47:26Z", "type": "commit"}, {"oid": "c0e8e5e02f98a75561671e1d4f1c8f9f0ca39d2d", "url": "https://github.com/apollographql/apollo-android/commit/c0e8e5e02f98a75561671e1d4f1c8f9f0ca39d2d", "message": "tweak the gitignore to share codestyle between all projects", "committedDate": "2020-10-19T15:47:26Z", "type": "commit"}, {"oid": "c0e8e5e02f98a75561671e1d4f1c8f9f0ca39d2d", "url": "https://github.com/apollographql/apollo-android/commit/c0e8e5e02f98a75561671e1d4f1c8f9f0ca39d2d", "message": "tweak the gitignore to share codestyle between all projects", "committedDate": "2020-10-19T15:47:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MjI2MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2674#discussion_r510472261", "bodyText": "what is this file? Is it meant to be committed - it doesn't seem to be used in the actual benchmark from what I can tell?", "author": "BenSchwab", "createdAt": "2020-10-22T21:36:06Z", "path": "benchmark/addTypename.main.kts", "diffHunk": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env kotlin\n+@file:DependsOn(\"com.squareup.okio:okio:2.9.0\")\n+@file:DependsOn(\"com.squareup.moshi:moshi:1.11.0\")\n+\n+import com.squareup.moshi.Moshi\n+import okio.buffer\n+import okio.sink\n+import okio.source\n+import java.io.File\n+\n+val adapter = Moshi.Builder().build().adapter(Any::class.java)", "originalCommit": "c0e8e5e02f98a75561671e1d4f1c8f9f0ca39d2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUwNTEzMg==", "url": "https://github.com/apollographql/apollo-android/pull/2674#discussion_r510505132", "bodyText": "Good catch! It was a one-time script to add the __typename field to the ZacSweers's largesample.json since GraphQL requires __typename. It's actually one area where we might gain a tiny bit of performance if we wanted to save this parsing for fields that are not polymorphic.\nIn all cases, this file isn't needed anymore, I removed it.", "author": "martinbonnin", "createdAt": "2020-10-22T23:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MjI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3Njc1Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2674#discussion_r510476752", "bodyText": "I would love to also see a benchmark that goes the actual apollo client with response normalization enabled", "author": "BenSchwab", "createdAt": "2020-10-22T21:46:01Z", "path": "benchmark/src/androidTest/java/com/apollographql/apollo/benchmark/Benchmark.kt", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.apollographql.apollo.benchmark\n+\n+import androidx.benchmark.junit4.BenchmarkRule\n+import androidx.benchmark.junit4.measureRepeated\n+import androidx.test.platform.app.InstrumentationRegistry\n+import com.apollographql.apollo.benchmark.moshi.Query\n+import com.apollographql.apollo.benchmark.test.R\n+import com.squareup.moshi.Moshi\n+import okio.buffer\n+import okio.source\n+import org.junit.Rule\n+import org.junit.Test\n+\n+class Benchmark {\n+  @get:Rule\n+  val benchmarkRule = BenchmarkRule()\n+\n+  private val operation = GetResponseQuery()\n+\n+  private val moshiAdapter = Moshi.Builder().build().adapter(Query::class.java)\n+\n+  private fun bufferedSource() = InstrumentationRegistry.getInstrumentation().context.resources.openRawResource(R.raw.largesample)\n+      .source()\n+      .buffer()\n+\n+  @Test\n+  fun apollo() = benchmarkRule.measureRepeated {\n+    val bufferedSource = runWithTimingDisabled {\n+      bufferedSource()\n+    }\n+\n+    operation.parse(bufferedSource)", "originalCommit": "c0e8e5e02f98a75561671e1d4f1c8f9f0ca39d2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUwNTI0Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2674#discussion_r510505242", "bodyText": "\ud83d\udc4d Good idea, I'll try to think of something", "author": "martinbonnin", "createdAt": "2020-10-22T23:02:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3Njc1Mg=="}], "type": "inlineReview"}, {"oid": "c3ce71cac1fa0ff4e170bf2ec7e82ffde0c9c7e7", "url": "https://github.com/apollographql/apollo-android/commit/c3ce71cac1fa0ff4e170bf2ec7e82ffde0c9c7e7", "message": "remove unused script", "committedDate": "2020-10-22T22:59:17Z", "type": "commit"}]}