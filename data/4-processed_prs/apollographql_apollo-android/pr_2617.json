{"pr_number": 2617, "pr_title": "[Gradle Plugin] add registry download", "pr_createdAt": "2020-09-29T08:46:15Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2617", "timeline": [{"oid": "1da126e84b7a289351c7c19d472a2f93d9164f6e", "url": "https://github.com/apollographql/apollo-android/commit/1da126e84b7a289351c7c19d472a2f93d9164f6e", "message": "add registry download", "committedDate": "2020-09-29T08:40:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg3NzM5OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2617#discussion_r496877399", "bodyText": "Could we make sure to name the operation here? Additionally, using variables is a best practice, along with identifying your client traffic using the apollographql-client-name header.\nMaybe something like this?\nquery DownloadSchema($graphID: ID!, $variant: String! = \"current\") {\n  service(id: $graphID) {\n    variant(name: $variant) {\n      activeSchemaPublish {\n        schema {\n          document\n        }\n      }\n    }\n  }\n}", "author": "zionts", "createdAt": "2020-09-29T16:29:11Z", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/SchemaDownloader.kt", "diffHunk": "@@ -39,30 +44,56 @@ object SchemaDownloader {\n             addHeader(it.key, it.value)\n           }\n         }\n-        .url(endpoint)\n+        .url(url)\n         .build()\n \n-    val response = OkHttpClient.Builder()\n-        .connectTimeout(connectTimeoutSeconds, TimeUnit.SECONDS)\n-        .readTimeout(readTimeoutSeconds, TimeUnit.SECONDS)\n-        .build()\n-        .newCall(request).execute()\n+    val response = newOkHttpClient()\n+        .newCall(request)\n+        .execute()\n \n     if (!response.isSuccessful) {\n       throw Exception(\"cannot get schema: ${response.code}:\\n${response.body?.string()}\")\n     }\n \n-    schema.parentFile?.mkdirs()\n+    return response\n+  }\n+\n+  fun downloadIntrospection(\n+      endpoint: String,\n+      headers: Map<String, String>\n+  ): String {\n+\n+    val response = executeQuery(introspectionQuery, endpoint, headers)\n+\n+    return response.body.use { responseBody ->\n+      responseBody!!.string()\n+    }\n+  }\n \n-    response.body.use { responseBody ->\n-      if (schema.extension.toLowerCase() == \"json\") {\n-        schema.writeText(responseBody!!.string())\n-      } else {\n-        IntrospectionSchema(responseBody!!.byteStream()).toSDL(schema)\n+  fun downloadRegistry(graph: String, key: String, variant: String): String? {\n+    val registryQuery = \"\"\"\n+    query {", "originalCommit": "1da126e84b7a289351c7c19d472a2f93d9164f6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg3ODAxNA==", "url": "https://github.com/apollographql/apollo-android/pull/2617#discussion_r496878014", "bodyText": "can we add in an apollographql-client-name header? This will help us make sure that we're tracking this operation back to this particular client so if there are any changes that might affect it down the road, we can reach out :) https://www.apollographql.com/docs/studio/client-awareness/", "author": "zionts", "createdAt": "2020-09-29T16:30:05Z", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/SchemaDownloader.kt", "diffHunk": "@@ -39,30 +44,56 @@ object SchemaDownloader {\n             addHeader(it.key, it.value)\n           }\n         }\n-        .url(endpoint)\n+        .url(url)\n         .build()\n \n-    val response = OkHttpClient.Builder()\n-        .connectTimeout(connectTimeoutSeconds, TimeUnit.SECONDS)\n-        .readTimeout(readTimeoutSeconds, TimeUnit.SECONDS)\n-        .build()\n-        .newCall(request).execute()\n+    val response = newOkHttpClient()\n+        .newCall(request)\n+        .execute()\n \n     if (!response.isSuccessful) {\n       throw Exception(\"cannot get schema: ${response.code}:\\n${response.body?.string()}\")\n     }\n \n-    schema.parentFile?.mkdirs()\n+    return response\n+  }\n+\n+  fun downloadIntrospection(\n+      endpoint: String,\n+      headers: Map<String, String>\n+  ): String {\n+\n+    val response = executeQuery(introspectionQuery, endpoint, headers)\n+\n+    return response.body.use { responseBody ->\n+      responseBody!!.string()\n+    }\n+  }\n \n-    response.body.use { responseBody ->\n-      if (schema.extension.toLowerCase() == \"json\") {\n-        schema.writeText(responseBody!!.string())\n-      } else {\n-        IntrospectionSchema(responseBody!!.byteStream()).toSDL(schema)\n+  fun downloadRegistry(graph: String, key: String, variant: String): String? {\n+    val registryQuery = \"\"\"\n+    query {\n+      service(id: \"$graph\") {\n+        schema(tag: \"$variant\") {\n+          document\n+        }\n       }\n     }\n+  \"\"\".trimIndent()\n+\n+    val response = executeQuery(registryQuery, \"https://engine-graphql.apollographql.com/api/graphql\", mapOf(\"x-api-key\" to key))", "originalCommit": "1da126e84b7a289351c7c19d472a2f93d9164f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxMDk3MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2617#discussion_r497410971", "bodyText": "Sounds good \ud83d\udc4d . I also added apollographql-client-version there just in case.", "author": "martinbonnin", "createdAt": "2020-09-30T10:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg3ODAxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQyNTU2MA==", "url": "https://github.com/apollographql/apollo-android/pull/2617#discussion_r497425560", "bodyText": "Also, I set the client name to apollo-gradle-plugin, which is the name of the maven artifact. Let me know how that sounds.", "author": "martinbonnin", "createdAt": "2020-09-30T11:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg3ODAxNA=="}], "type": "inlineReview"}, {"oid": "25b02fee86742a50698394ec21aaec08cdcd8dfa", "url": "https://github.com/apollographql/apollo-android/commit/25b02fee86742a50698394ec21aaec08cdcd8dfa", "message": "pass the apollographql-client-name and apollographql-client-version\nheaders", "committedDate": "2020-09-30T10:31:40Z", "type": "commit"}, {"oid": "6b1a3210148723affcfff852816afa368a77360e", "url": "https://github.com/apollographql/apollo-android/commit/6b1a3210148723affcfff852816afa368a77360e", "message": "gix typo", "committedDate": "2020-09-30T11:59:54Z", "type": "commit"}, {"oid": "5a409eaca174cba6c321b6eb7d36343c923486a5", "url": "https://github.com/apollographql/apollo-android/commit/5a409eaca174cba6c321b6eb7d36343c923486a5", "message": "use the new url", "committedDate": "2020-09-30T13:39:59Z", "type": "commit"}]}