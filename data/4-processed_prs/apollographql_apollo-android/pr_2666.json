{"pr_number": 2666, "pr_title": "[SDL] add support for type extensions", "pr_createdAt": "2020-10-16T14:24:38Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2666", "timeline": [{"oid": "47f95fad8beefcb3a983af9d5eb1359016d3a00b", "url": "https://github.com/apollographql/apollo-android/commit/47f95fad8beefcb3a983af9d5eb1359016d3a00b", "message": "add support for type extensions\n\ncloses #2656", "committedDate": "2020-10-16T14:22:32Z", "type": "commit"}, {"oid": "5f6a57dd3431004e8b43f86029c3d5e000195b16", "url": "https://github.com/apollographql/apollo-android/commit/5f6a57dd3431004e8b43f86029c3d5e000195b16", "message": "fix typo", "committedDate": "2020-10-16T14:25:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4NTYzNQ==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r506985635", "bodyText": "nit:  just a preference\nval scalar = typeDefinitions.get(name) ?: throw ParseException(\n          message = \"Cannot add scalar type extension on unknown scalar `$name`\",\n          token = start\n      )", "author": "sav007", "createdAt": "2020-10-17T21:24:18Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/sdl/GraphSDLSchemaParser.kt", "diffHunk": "@@ -106,6 +109,218 @@ object GraphSDLSchemaParser {\n     )\n   }\n \n+  private fun List<GraphSDLParser.TypeSystemExtensionContext>.parse(\n+      typeDefinitions: MutableMap<String, GraphSdlSchema.TypeDefinition>\n+  ) {\n+    forEach {\n+      it.typeExtension()?.apply {\n+        scalarTypeExtensionDefinition()?.parse(typeDefinitions)\n+        enumTypeExtensionDefinition()?.parse(typeDefinitions)\n+        objectTypeExtensionDefinition()?.parse(typeDefinitions)\n+        interfaceTypeExtensionDefinition()?.parse(typeDefinitions)\n+        unionTypeExtensionDefinition()?.parse(typeDefinitions)\n+        inputObjectTypeExtensionDefinition()?.parse(typeDefinitions)\n+      }\n+    }\n+  }\n+\n+  private fun GraphSDLParser.ScalarTypeExtensionDefinitionContext.parse(typeDefinitions: MutableMap<String, GraphSdlSchema.TypeDefinition>) {\n+    val name = name().text\n+    val scalar = typeDefinitions.get(name)\n+    if (scalar == null) {\n+      throw ParseException(\n+          message = \"Cannot add scalar type extension on unknown scalar `$name`\",\n+          token = start\n+      )\n+    }", "originalCommit": "5f6a57dd3431004e8b43f86029c3d5e000195b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk5MjMxMg==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r506992312", "bodyText": "IntelliJ agrees with you and put yellow underlines. I replaced them.", "author": "martinbonnin", "createdAt": "2020-10-17T22:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4NTYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4NjIxNw==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r506986217", "bodyText": "not a big fan of passing mutable map and having side affect to mutate typeDefinitions map, but don't see easy way to make it pure. We might consider to rename this function to smth that describes mutation maybe like MutableMap<String, GraphSdlSchema.TypeDefinition>.decorateWithTypeExtentantion()?", "author": "sav007", "createdAt": "2020-10-17T21:31:47Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/sdl/GraphSDLSchemaParser.kt", "diffHunk": "@@ -106,6 +109,218 @@ object GraphSDLSchemaParser {\n     )\n   }\n \n+  private fun List<GraphSDLParser.TypeSystemExtensionContext>.parse(\n+      typeDefinitions: MutableMap<String, GraphSdlSchema.TypeDefinition>", "originalCommit": "5f6a57dd3431004e8b43f86029c3d5e000195b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk5Mzc1NQ==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r506993755", "bodyText": "Yea, not a huge fan of MutableMap either. I just pushed a new version with a fold. That's a lot more copying Maps all over the place but I think that's the price to pay for immutability.\n  private fun List<GraphSDLParser.TypeSystemExtensionContext>.parse(\n      typeDefinitions: Map<String, GraphSdlSchema.TypeDefinition>\n  ): Map<String, GraphSdlSchema.TypeDefinition> {\n    return fold(typeDefinitions) { acc, context ->\n      return with(context.typeExtension()) {\n        scalarTypeExtensionDefinition()?.parse(acc)\n            ?: enumTypeExtensionDefinition()?.parse(acc)\n            ?: objectTypeExtensionDefinition()?.parse(acc)\n            ?: interfaceTypeExtensionDefinition()?.parse(acc)\n            ?: unionTypeExtensionDefinition()?.parse(acc)\n            ?: inputObjectTypeExtensionDefinition()?.parse(acc)\n            ?: acc\n      }\n    }\n  }", "author": "martinbonnin", "createdAt": "2020-10-17T23:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4NjIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4ODM5Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r506988392", "bodyText": "that interesting am I right that this myModifier directive is not declared in the schema? I thought that GraphQL spec says that directive also must be declared in the schema?", "author": "sav007", "createdAt": "2020-10-17T21:59:42Z", "path": "apollo-compiler/src/test/graphql/com/example/operation_directive/TestOperation.graphql", "diffHunk": "@@ -0,0 +1,5 @@\n+query TestQuery @myModifier {", "originalCommit": "5f6a57dd3431004e8b43f86029c3d5e000195b16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk5MjA2Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r506992066", "bodyText": "Yup, that's 100% correct. I added this test as part of checking #2661.\nBut since myModifier is not in the schema, this means we're missing some validation there. I opened #2673 as a follow up.", "author": "martinbonnin", "createdAt": "2020-10-17T22:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4ODM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4ODIyMQ==", "url": "https://github.com/apollographql/apollo-android/pull/2666#discussion_r507188221", "bodyText": "Yeah, I guess we missed that validation as we have tests for skip / include and I don't see them either in schema sdl.", "author": "sav007", "createdAt": "2020-10-18T17:14:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4ODM5Mg=="}], "type": "inlineReview"}, {"oid": "21cdf5b662ba1a539684ac953d749ab227001ecb", "url": "https://github.com/apollographql/apollo-android/commit/21cdf5b662ba1a539684ac953d749ab227001ecb", "message": "use Elvis operator", "committedDate": "2020-10-17T22:50:36Z", "type": "commit"}, {"oid": "3919f05040d35b7674143421b12545c39f79c960", "url": "https://github.com/apollographql/apollo-android/commit/3919f05040d35b7674143421b12545c39f79c960", "message": "keep everything immutable", "committedDate": "2020-10-17T23:09:56Z", "type": "commit"}, {"oid": "6e39e2ac4b7bedc991247f88c3110795ae1c2d30", "url": "https://github.com/apollographql/apollo-android/commit/6e39e2ac4b7bedc991247f88c3110795ae1c2d30", "message": "fix bad copy paste", "committedDate": "2020-10-17T23:12:34Z", "type": "commit"}]}