{"pr_number": 1888, "pr_title": "Singularization fixes", "pr_createdAt": "2020-01-07T23:34:57Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/1888", "timeline": [{"oid": "4d64bfd8a675e04c23bdb7db24e1b6afe4d71e05", "url": "https://github.com/apollographql/apollo-android/commit/4d64bfd8a675e04c23bdb7db24e1b6afe4d71e05", "message": "Singularization updates", "committedDate": "2020-01-07T23:34:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDkxMg==", "url": "https://github.com/apollographql/apollo-android/pull/1888#discussion_r364170912", "bodyText": "Interesting that it suffixes the class now. I think it should be ok without the 1 since it's nested ?\nclass AllStarships {\n    class AllStarships {\n    }\n}\n\nThat should be valid, right ?", "author": "martinbonnin", "createdAt": "2020-01-08T10:49:44Z", "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -117,7 +117,7 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n     }\n   }\n \n-  data class AllStarship(\n+  data class AllStarships1(", "originalCommit": "4d64bfd8a675e04c23bdb7db24e1b6afe4d71e05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM0NzczNQ==", "url": "https://github.com/apollographql/apollo-android/pull/1888#discussion_r364347735", "bodyText": "Seems like it should be, yeah. This should probably be fixed with the 1.3.0 release so you don't risk doing 2 consecutive breaking changes releases. That being said, it's unrelated to this PR so I won't fix it here.", "author": "EricKuck", "createdAt": "2020-01-08T17:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NzAyNg==", "url": "https://github.com/apollographql/apollo-android/pull/1888#discussion_r364477026", "bodyText": "Sounds good. We should just remember to fix it in 1.3.0. Maybe it's time we document the coming breaking changes somewhere so we don't forget anything...", "author": "martinbonnin", "createdAt": "2020-01-08T22:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ4MDI3OQ==", "url": "https://github.com/apollographql/apollo-android/pull/1888#discussion_r364480279", "bodyText": "1.3.0 release checklist there : #1889", "author": "martinbonnin", "createdAt": "2020-01-08T22:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1NTE2Nw==", "url": "https://github.com/apollographql/apollo-android/pull/1888#discussion_r364555167", "bodyText": "It's ok for Kotlin, but not for Java, this is not valid in Java:\npublic class Test {\n  static class Test {\n    \n  }\n}\n\nWe might need to relax our Kotlin version of class name clash resolution and don't include top class into used keywords. But for Java we can't do the same.", "author": "sav007", "createdAt": "2020-01-09T04:29:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNjk0MQ==", "url": "https://github.com/apollographql/apollo-android/pull/1888#discussion_r364626941", "bodyText": "Thanks for the explanation!", "author": "martinbonnin", "createdAt": "2020-01-09T09:11:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDkxMg=="}], "type": "inlineReview"}]}