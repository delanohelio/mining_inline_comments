{"pr_number": 2476, "pr_title": "[Gradle Plugin] add a way to generate operation ids as batch", "pr_createdAt": "2020-07-27T08:23:22Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2476", "timeline": [{"oid": "2b9fdede7b232913756defae77bde23286896f72", "url": "https://github.com/apollographql/apollo-android/commit/2b9fdede7b232913756defae77bde23286896f72", "message": "add `generateApolloIR`", "committedDate": "2020-07-22T10:35:09Z", "type": "commit"}, {"oid": "6440621845ed374a0f354c8e3cf70af186191cf4", "url": "https://github.com/apollographql/apollo-android/commit/6440621845ed374a0f354c8e3cf70af186191cf4", "message": "add packageNames to the IR", "committedDate": "2020-07-22T12:12:21Z", "type": "commit"}, {"oid": "fda67ca1f8d59793dce9b3923aee5e0194907ccb", "url": "https://github.com/apollographql/apollo-android/commit/fda67ca1f8d59793dce9b3923aee5e0194907ccb", "message": "remove packageNameProvider for the kotlin codegen", "committedDate": "2020-07-22T13:29:50Z", "type": "commit"}, {"oid": "7d88ea5d40966cacaf296106751059caf98aec48", "url": "https://github.com/apollographql/apollo-android/commit/7d88ea5d40966cacaf296106751059caf98aec48", "message": "remove packageNameProvider for java", "committedDate": "2020-07-22T13:38:19Z", "type": "commit"}, {"oid": "5a06d281f351da7e559158e8924576a67faeca56", "url": "https://github.com/apollographql/apollo-android/commit/5a06d281f351da7e559158e8924576a67faeca56", "message": "remove packageNameProvider for the SourceGen task", "committedDate": "2020-07-22T13:39:57Z", "type": "commit"}, {"oid": "019fe66935a6f69e1306bb848b91e3fd954d4390", "url": "https://github.com/apollographql/apollo-android/commit/019fe66935a6f69e1306bb848b91e3fd954d4390", "message": "skip if no source files", "committedDate": "2020-07-22T14:15:27Z", "type": "commit"}, {"oid": "7045f5cb798b8e5e40fb6212029351497893cbd2", "url": "https://github.com/apollographql/apollo-android/commit/7045f5cb798b8e5e40fb6212029351497893cbd2", "message": "wip", "committedDate": "2020-07-23T20:32:08Z", "type": "commit"}, {"oid": "0cbad24c98f89ff7a541f09a7b7af7867b39208e", "url": "https://github.com/apollographql/apollo-android/commit/0cbad24c98f89ff7a541f09a7b7af7867b39208e", "message": "wip", "committedDate": "2020-07-24T07:51:28Z", "type": "commit"}, {"oid": "ecef91041196b7888f382779e9ddd38b0ea7e41c", "url": "https://github.com/apollographql/apollo-android/commit/ecef91041196b7888f382779e9ddd38b0ea7e41c", "message": "handle NO-SOURCE", "committedDate": "2020-07-24T10:43:05Z", "type": "commit"}, {"oid": "aa9ec1a4ba4c3e508715ee33d4776c5d0cbd7d5e", "url": "https://github.com/apollographql/apollo-android/commit/aa9ec1a4ba4c3e508715ee33d4776c5d0cbd7d5e", "message": "fix the schema test with more significant modifications", "committedDate": "2020-07-24T14:20:27Z", "type": "commit"}, {"oid": "00bd6771111093cdcd5e1b8ae41951806f44679c", "url": "https://github.com/apollographql/apollo-android/commit/00bd6771111093cdcd5e1b8ae41951806f44679c", "message": "mark tasks as cacheable", "committedDate": "2020-07-24T14:30:56Z", "type": "commit"}, {"oid": "dd615cdc12ff30410aa127159c9bc3bc63b2b9d5", "url": "https://github.com/apollographql/apollo-android/commit/dd615cdc12ff30410aa127159c9bc3bc63b2b9d5", "message": "fix tests", "committedDate": "2020-07-24T14:54:40Z", "type": "commit"}, {"oid": "b5e0637f11b91f9c21196bd2d3d1ffc3d154b946", "url": "https://github.com/apollographql/apollo-android/commit/b5e0637f11b91f9c21196bd2d3d1ffc3d154b946", "message": "fix test", "committedDate": "2020-07-24T17:07:30Z", "type": "commit"}, {"oid": "4a2d20f6623293d3e604f8237b25a941313589ce", "url": "https://github.com/apollographql/apollo-android/commit/4a2d20f6623293d3e604f8237b25a941313589ce", "message": "fix test", "committedDate": "2020-07-24T17:44:23Z", "type": "commit"}, {"oid": "a21a88f3e3ff243a32e72be9f19e190d2908035b", "url": "https://github.com/apollographql/apollo-android/commit/a21a88f3e3ff243a32e72be9f19e190d2908035b", "message": "added a testcase", "committedDate": "2020-07-25T13:25:41Z", "type": "commit"}, {"oid": "4e012279884aa1f50845674227f6ec26ae54a734", "url": "https://github.com/apollographql/apollo-android/commit/4e012279884aa1f50845674227f6ec26ae54a734", "message": "make the cache test fail", "committedDate": "2020-07-25T13:39:21Z", "type": "commit"}, {"oid": "41e36413dcd7f179ab346a7aa966d9fb2a3adce8", "url": "https://github.com/apollographql/apollo-android/commit/41e36413dcd7f179ab346a7aa966d9fb2a3adce8", "message": "remove filePath from operationIdProvider", "committedDate": "2020-07-26T14:50:14Z", "type": "commit"}, {"oid": "0afccba40d163061dbc514e1ee614648276ef35d", "url": "https://github.com/apollographql/apollo-android/commit/0afccba40d163061dbc514e1ee614648276ef35d", "message": "fix CodegenTests", "committedDate": "2020-07-26T15:24:52Z", "type": "commit"}, {"oid": "5c8cf34930a5d4cda7a53dbf00a813d1ee989ea2", "url": "https://github.com/apollographql/apollo-android/commit/5c8cf34930a5d4cda7a53dbf00a813d1ee989ea2", "message": "fix tests", "committedDate": "2020-07-26T15:28:47Z", "type": "commit"}, {"oid": "b23a8911aae6309319a34b41bf658b0c39698474", "url": "https://github.com/apollographql/apollo-android/commit/b23a8911aae6309319a34b41bf658b0c39698474", "message": "introduce ParsedOperation", "committedDate": "2020-07-26T15:39:56Z", "type": "commit"}, {"oid": "1edf1c95b71db7bc9fb14ed1e455713137b28624", "url": "https://github.com/apollographql/apollo-android/commit/1edf1c95b71db7bc9fb14ed1e455713137b28624", "message": "introduce ParsedFragment", "committedDate": "2020-07-26T15:46:22Z", "type": "commit"}, {"oid": "07113bb97f369afd485f94aef1e8646d9da26042", "url": "https://github.com/apollographql/apollo-android/commit/07113bb97f369afd485f94aef1e8646d9da26042", "message": "fix cache tests", "committedDate": "2020-07-26T16:05:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNjEzMg==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r460726132", "bodyText": "That's a breaking change. In order to make the task cacheable, I had to remove filePath from the generated files which means that it's better if identification is made based on name and packageName. If needed, we could add file.name (without path) but I don't think this would help much compared to qualified name.", "author": "martinbonnin", "createdAt": "2020-07-27T08:25:42Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/OperationIdGenerator.kt", "diffHunk": "@@ -10,10 +10,9 @@ interface OperationIdGenerator {\n        */\n       operationDocument: String,\n \n-      /**\n-       * The path to the GraphQL file\n-       */\n-      operationFilepath: String\n+      operationName: String,\n+      operationPackageName: String", "originalCommit": "07113bb97f369afd485f94aef1e8646d9da26042", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2NjU5Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r467966596", "bodyText": "I reverted that since it's not serialized anymore.", "author": "martinbonnin", "createdAt": "2020-08-10T15:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNjEzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzE5OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r460727199", "bodyText": "One main side effect of this pull request is that the IR class have been made Json serializable. I think that's ok but let me know if there's another way to look at this.", "author": "martinbonnin", "createdAt": "2020-07-27T08:27:26Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/ir/Argument.kt", "diffHunk": "@@ -1,5 +1,8 @@\n package com.apollographql.apollo.compiler.ir\n \n+import com.squareup.moshi.JsonClass\n+\n+@JsonClass(generateAdapter = true)\n data class Argument(", "originalCommit": "07113bb97f369afd485f94aef1e8646d9da26042", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyOTE2NA==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461229164", "bodyText": "Could you please elaborate more on this, why it's serializable?", "author": "sav007", "createdAt": "2020-07-27T23:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzE5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3MzU2MA==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461473560", "bodyText": "That PR uses the IR  as task input/output so Gradle will need it be serialized for UP-TO-DATE checks.\nThe generateOperationIds tasks needs access to the sourceWithFragments and most of that is the result of parsing the .graphql files.\nThe other option if we want to avoid serialization is to keep everything bundled in one single task and keep relying on the OperationIdGenerator.version for invalidation, which feels less \"Gradle-ly\".\nSomething else to consider is multi-modules. I've been thinking about that lately and the IR would be a convenient point to inject fragments and types from another module.", "author": "martinbonnin", "createdAt": "2020-07-28T10:15:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzE5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MDU3Nw==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r467970577", "bodyText": "Serialization is now removed", "author": "martinbonnin", "createdAt": "2020-08-10T15:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyODI1OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r460728259", "bodyText": "As the Fragment and Operation IR classes contained absolute file paths, I had to duplicate the struct:\n\nParsedFragment is used during parsing and contains the absolute file path for diagnostics purposes\nFragment is serialized and later used by codegen. It contains package name and name but no absolute file path.", "author": "martinbonnin", "createdAt": "2020-07-27T08:29:17Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/ir/Fragment.kt", "diffHunk": "@@ -5,9 +5,10 @@ import com.apollographql.apollo.compiler.VisitorSpec.VISITOR_CLASSNAME\n import com.squareup.javapoet.ClassName\n import com.squareup.javapoet.FieldSpec\n import com.squareup.javapoet.TypeSpec\n+import com.squareup.moshi.JsonClass\n import javax.lang.model.element.Modifier\n \n-data class Fragment(\n+data class ParsedFragment(", "originalCommit": "07113bb97f369afd485f94aef1e8646d9da26042", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyODQyMQ==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r460728421", "bodyText": "Same as for Fragment above", "author": "martinbonnin", "createdAt": "2020-07-27T08:29:33Z", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/ir/Operation.kt", "diffHunk": "@@ -4,17 +4,31 @@ import com.apollographql.apollo.api.Operation\n import com.apollographql.apollo.compiler.SchemaTypeSpecBuilder\n import com.apollographql.apollo.compiler.withBuilder\n import com.squareup.javapoet.TypeSpec\n+import com.squareup.moshi.JsonClass\n import javax.lang.model.element.Modifier\n \n+data class ParsedOperation(\n+    val operationName: String,\n+    val packageName: String,\n+    val operationType: String,\n+    val description: String,\n+    val variables: List<Variable>,\n+    val source: String,\n+    val fields: List<Field>,\n+    val filePath: String,\n+    val fragments: List<FragmentRef>\n+)", "originalCommit": "07113bb97f369afd485f94aef1e8646d9da26042", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "00230d130286c042684c2bdb9284decb2efd67d4", "url": "https://github.com/apollographql/apollo-android/commit/00230d130286c042684c2bdb9284decb2efd67d4", "message": "reformat code", "committedDate": "2020-07-27T08:30:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyOTk4NA==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r460729984", "bodyText": "Being able to use SDL in unit tests is lovely. Thanks @sav007 ! \ud83e\udd17", "author": "martinbonnin", "createdAt": "2020-07-27T08:32:05Z", "path": "apollo-gradle-plugin/testProjects/operationIds/src/main/graphql/com/example/schema.sdl", "diffHunk": "@@ -0,0 +1,4 @@\n+\n+type Query {\n+  greeting: String\n+}", "originalCommit": "07113bb97f369afd485f94aef1e8646d9da26042", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "257606360c88d37669987153c010f2be7da9e277", "url": "https://github.com/apollographql/apollo-android/commit/257606360c88d37669987153c010f2be7da9e277", "message": "fix Gradle warning", "committedDate": "2020-07-27T08:40:41Z", "type": "commit"}, {"oid": "6aaa25dc1e6df125d5dcd14a55563fbaa233670d", "url": "https://github.com/apollographql/apollo-android/commit/6aaa25dc1e6df125d5dcd14a55563fbaa233670d", "message": "update metalava", "committedDate": "2020-07-27T08:43:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461034322", "bodyText": "Does this class actually need to be extended by users? Couldn't it work with just an interface containing generateOperationOutput, which gets invoked by a task managed by the Apollo plugin?", "author": "DSteve595", "createdAt": "2020-07-27T16:58:53Z", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/api/ApolloGenerateOperationIdsTask.kt", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.apollographql.apollo.gradle.api\n+\n+import com.apollographql.apollo.compiler.operationoutput.OperationList\n+import com.apollographql.apollo.compiler.operationoutput.OperationOutput\n+import com.apollographql.apollo.compiler.operationoutput.toJson\n+import org.gradle.api.DefaultTask\n+import org.gradle.api.file.FileCollection\n+import org.gradle.api.file.RegularFileProperty\n+import org.gradle.api.tasks.CacheableTask\n+import org.gradle.api.tasks.InputFiles\n+import org.gradle.api.tasks.Internal\n+import org.gradle.api.tasks.OutputFile\n+import org.gradle.api.tasks.PathSensitive\n+import org.gradle.api.tasks.PathSensitivity\n+import org.gradle.api.tasks.SkipWhenEmpty\n+import org.gradle.api.tasks.TaskAction\n+\n+@CacheableTask\n+abstract class ApolloGenerateOperationIdsTask : DefaultTask() {", "originalCommit": "6aaa25dc1e6df125d5dcd14a55563fbaa233670d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MDg1OA==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461040858", "bodyText": "I thought you preferred defining your own Task. Having an interface, like OperationIdGenerator is of course doable too. It just feels a bit less \"Gradle-y\" because users will have to remember to bump operationIdGenerator.version every time the implementation changes.\nWith a user-defined task, Gradle will magically determine the classpath changed and invalidate as needed.", "author": "martinbonnin", "createdAt": "2020-07-27T17:09:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODQ2OA==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461058468", "bodyText": "The classpath invalidation is a good point.", "author": "DSteve595", "createdAt": "2020-07-27T17:39:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTIzNg==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461065236", "bodyText": "At this stage, I think you'll be the first user of this API so I'm happy to modify OperationIdgenerator with something like below instead:\nabstract class OperationIdGenerator {\n  abstract fun apply(operationDocument: String, name: String, packageName: String)\n\n  // overridee for batch handling\n  open fun generateOperationOutput(operationList: OperationList): OperationOutput {\n    operationList.map {\n      apply(it.source, it.name, it.packageName) to it\n    }\n  }\n\n  // change version here everytime the implementation of this class changes\n  val version: String\n}", "author": "martinbonnin", "createdAt": "2020-07-27T17:51:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NjM5NQ==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461066395", "bodyText": "Or if we want an interface:\ninterface BatchOperationIdGenerator {\n  fun generateOperationOutput(operationList: OperationList): OperationOutput\n\n  // change version here everytime the implementation of this class changes\n  val version: String\n}", "author": "martinbonnin", "createdAt": "2020-07-27T17:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NjYxMw==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461066613", "bodyText": "I do think the automatic classpath invalidation is worth extending the custom task. Less mental load.", "author": "DSteve595", "createdAt": "2020-07-27T17:53:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MDAzOQ==", "url": "https://github.com/apollographql/apollo-android/pull/2476#discussion_r461080039", "bodyText": "\ud83d\udc4d sounds good", "author": "martinbonnin", "createdAt": "2020-07-27T18:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNDMyMg=="}], "type": "inlineReview"}, {"oid": "d5060b097427fa6d1f8732dc69b6fcbcdb739c1e", "url": "https://github.com/apollographql/apollo-android/commit/d5060b097427fa6d1f8732dc69b6fcbcdb739c1e", "message": "revert back to a single task for performance purposes", "committedDate": "2020-08-05T09:44:10Z", "type": "commit"}, {"oid": "8e733a5d1deb2a591366f0ca8df054bb13a22225", "url": "https://github.com/apollographql/apollo-android/commit/8e733a5d1deb2a591366f0ca8df054bb13a22225", "message": "add a comment", "committedDate": "2020-08-05T10:03:08Z", "type": "commit"}, {"oid": "9bd9eed4e3ea4401aaf41fcfcd1eb83719541797", "url": "https://github.com/apollographql/apollo-android/commit/9bd9eed4e3ea4401aaf41fcfcd1eb83719541797", "message": "fix integration tests", "committedDate": "2020-08-05T12:15:17Z", "type": "commit"}, {"oid": "e0749bcd7d5811a876171e6be213ffc98a753fdc", "url": "https://github.com/apollographql/apollo-android/commit/e0749bcd7d5811a876171e6be213ffc98a753fdc", "message": "update metalava api", "committedDate": "2020-08-06T12:06:50Z", "type": "commit"}, {"oid": "5accdbaaa34f5a42ebedb4d5c8ad43835a07abeb", "url": "https://github.com/apollographql/apollo-android/commit/5accdbaaa34f5a42ebedb4d5c8ad43835a07abeb", "message": "use a Collection since order doesn't matter", "committedDate": "2020-08-07T20:15:50Z", "type": "commit"}, {"oid": "deef52ba33cf3868a24dd195d6ed5dd4227c513c", "url": "https://github.com/apollographql/apollo-android/commit/deef52ba33cf3868a24dd195d6ed5dd4227c513c", "message": "Keep the OperationIdGenerator API the same", "committedDate": "2020-08-10T14:59:50Z", "type": "commit"}, {"oid": "afb1a686370773feaca5eeb3c1c50ed36a711140", "url": "https://github.com/apollographql/apollo-android/commit/afb1a686370773feaca5eeb3c1c50ed36a711140", "message": "remove serialization on the IT", "committedDate": "2020-08-10T15:04:06Z", "type": "commit"}, {"oid": "f4532a57a193439263fd424754cec12c4136a937", "url": "https://github.com/apollographql/apollo-android/commit/f4532a57a193439263fd424754cec12c4136a937", "message": "optimise imports", "committedDate": "2020-08-10T15:20:01Z", "type": "commit"}, {"oid": "8fb28940b3709ce764d53eacd0d6a50ab2fe9cb8", "url": "https://github.com/apollographql/apollo-android/commit/8fb28940b3709ce764d53eacd0d6a50ab2fe9cb8", "message": "remove unused serialization code", "committedDate": "2020-08-10T15:27:47Z", "type": "commit"}, {"oid": "6519a9d23b3629b04895154694a4095d970f757f", "url": "https://github.com/apollographql/apollo-android/commit/6519a9d23b3629b04895154694a4095d970f757f", "message": "fix imports being optimized too much", "committedDate": "2020-08-10T15:50:59Z", "type": "commit"}, {"oid": "7ae9349dc75a7edf6fb6b6cf89f23832ed62476a", "url": "https://github.com/apollographql/apollo-android/commit/7ae9349dc75a7edf6fb6b6cf89f23832ed62476a", "message": "remove unused import", "committedDate": "2020-08-10T15:51:30Z", "type": "commit"}, {"oid": "4ce8c19910053ceca1098562d4bb76c597c55ffe", "url": "https://github.com/apollographql/apollo-android/commit/4ce8c19910053ceca1098562d4bb76c597c55ffe", "message": "restore test", "committedDate": "2020-08-10T15:51:48Z", "type": "commit"}, {"oid": "81d68da3f409fe865cc3a2646164376487a20f40", "url": "https://github.com/apollographql/apollo-android/commit/81d68da3f409fe865cc3a2646164376487a20f40", "message": "revert non-significant changes to limit the diff size", "committedDate": "2020-08-10T15:51:58Z", "type": "commit"}]}