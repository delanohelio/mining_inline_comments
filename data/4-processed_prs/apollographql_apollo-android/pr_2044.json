{"pr_number": 2044, "pr_title": "Convert next portion of api module files to Kotlin", "pr_createdAt": "2020-03-06T22:39:31Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2044", "timeline": [{"oid": "60550df4e8145f82cd1cbe7b031d0db5c378aab5", "url": "https://github.com/apollographql/apollo-android/commit/60550df4e8145f82cd1cbe7b031d0db5c378aab5", "message": "Rename .java to .kt", "committedDate": "2020-03-06T22:38:12Z", "type": "commit"}, {"oid": "30783010f578e7dfb18629dc2d403cabd4002aea", "url": "https://github.com/apollographql/apollo-android/commit/30783010f578e7dfb18629dc2d403cabd4002aea", "message": "Convert next portion of api module files to Kotlin.", "committedDate": "2020-03-06T22:38:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MDU4Mw==", "url": "https://github.com/apollographql/apollo-android/pull/2044#discussion_r389250583", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            sealed class CustomTypeValue<T> (@JvmField val value: T) {\n          \n          \n            \n            sealed class CustomTypeValue<T>(@JvmField val value: T) {", "author": "tasomaniac", "createdAt": "2020-03-07T12:10:55Z", "path": "apollo-api/src/main/java/com/apollographql/apollo/api/CustomTypeValue.kt", "diffHunk": "@@ -4,9 +4,7 @@ package com.apollographql.apollo.api\n  * A wrapper class for representation of custom GraphQL type value, used in user provided [CustomTypeAdapter]\n  * encoding / decoding functions.\n  **/\n-abstract class CustomTypeValue<T> private constructor(\n-    @JvmField val value: T\n-) {\n+sealed class CustomTypeValue<T> (@JvmField val value: T) {", "originalCommit": "30783010f578e7dfb18629dc2d403cabd4002aea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MDY3MA==", "url": "https://github.com/apollographql/apollo-android/pull/2044#discussion_r389250670", "bodyText": "One thing that I do for self returning functions is to use apply\noverride fun beginArray(): JsonReader = apply {\n  // do stuff\n}\n\nThen you don't have to return this", "author": "tasomaniac", "createdAt": "2020-03-07T12:13:05Z", "path": "apollo-api/src/main/java/com/apollographql/apollo/api/internal/json/BufferedSourceJsonReader.kt", "diffHunk": "@@ -55,7 +55,7 @@ class BufferedSourceJsonReader(private val source: BufferedSource) : JsonReader\n   override var failOnUnknown = false\n \n   @Throws(IOException::class)\n-  override fun beginArray() {\n+  override fun beginArray(): JsonReader {", "originalCommit": "30783010f578e7dfb18629dc2d403cabd4002aea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1MDc4NA==", "url": "https://github.com/apollographql/apollo-android/pull/2044#discussion_r389250784", "bodyText": "For consistency, maybe we can invert this conditional and have value == null first.", "author": "tasomaniac", "createdAt": "2020-03-07T12:15:39Z", "path": "apollo-api/src/main/java/com/apollographql/apollo/api/internal/json/InputFieldJsonWriter.kt", "diffHunk": "@@ -0,0 +1,222 @@\n+package com.apollographql.apollo.api.internal.json\n+\n+import com.apollographql.apollo.api.CustomTypeValue.*\n+import com.apollographql.apollo.api.ScalarType\n+import com.apollographql.apollo.api.ScalarTypeAdapters\n+import com.apollographql.apollo.api.internal.InputFieldMarshaller\n+import com.apollographql.apollo.api.internal.InputFieldWriter\n+import com.apollographql.apollo.api.internal.json.Utils.writeToJson\n+import java.io.IOException\n+\n+class InputFieldJsonWriter(\n+    private val jsonWriter: JsonWriter,\n+    private val scalarTypeAdapters: ScalarTypeAdapters\n+) : InputFieldWriter {\n+\n+  @Throws(IOException::class)\n+  override fun writeString(fieldName: String, value: String?) {\n+    if (value != null) {", "originalCommit": "30783010f578e7dfb18629dc2d403cabd4002aea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwNjM3OA==", "url": "https://github.com/apollographql/apollo-android/pull/2044#discussion_r389306378", "bodyText": "What is the reason to make it a RuntimeException instead of an IOException like it used to be ?", "author": "martinbonnin", "createdAt": "2020-03-07T19:35:23Z", "path": "apollo-api/src/main/java/com/apollographql/apollo/api/internal/json/JsonEncodingException.kt", "diffHunk": "@@ -13,13 +13,9 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.apollographql.apollo.api.internal.json;\n+package com.apollographql.apollo.api.internal.json\n \n-import java.io.IOException;\n-\n-/** Thrown when the data being parsed is not encoded as valid JSON. */\n-public final class JsonEncodingException extends IOException {\n-  public JsonEncodingException(String message) {\n-    super(message);\n-  }\n-}\n+/**\n+ * Thrown when the data being parsed is not encoded as valid JSON.\n+ */\n+class JsonEncodingException(message: String) : RuntimeException(message)", "originalCommit": "30783010f578e7dfb18629dc2d403cabd4002aea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNTM4Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2044#discussion_r389315386", "bodyText": "Are you suggesting to keep it as IOException but skip having @throws annotation? I assume this turns checked exception to unchecked. In Kotlin the difference is thinner.", "author": "tasomaniac", "createdAt": "2020-03-07T22:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwNjM3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NTAxNQ==", "url": "https://github.com/apollographql/apollo-android/pull/2044#discussion_r390065015", "bodyText": "Agh, it was my mistake. Will revert it back", "author": "sav007", "createdAt": "2020-03-10T02:41:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwNjM3OA=="}], "type": "inlineReview"}, {"oid": "22f31dd6d7c75c2bf86ee9d6b45f100b275b4455", "url": "https://github.com/apollographql/apollo-android/commit/22f31dd6d7c75c2bf86ee9d6b45f100b275b4455", "message": "Feedback", "committedDate": "2020-03-10T02:46:45Z", "type": "commit"}]}