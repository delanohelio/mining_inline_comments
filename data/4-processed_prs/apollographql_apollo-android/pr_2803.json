{"pr_number": 2803, "pr_title": "[Plugin] For recent versions of Gradle, use .convention to provide the default", "pr_createdAt": "2020-12-14T22:45:37Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2803", "timeline": [{"oid": "edf39bae8aa0375d9d672cfbe26fb1448aa585ca", "url": "https://github.com/apollographql/apollo-android/commit/edf39bae8aa0375d9d672cfbe26fb1448aa585ca", "message": "For recent versions of Gradle, use .convention to provide the default\n\nThis allows to call `customTypeMap.put()`", "committedDate": "2020-12-14T22:43:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxMjg0Ng==", "url": "https://github.com/apollographql/apollo-android/pull/2803#discussion_r542912846", "bodyText": "Seeing as Gradle is not up to 6.7 with 7 around the corner it doesn't feel unreasonable to require 6.2+", "author": "ansman", "createdAt": "2020-12-14T23:09:34Z", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilerParams.kt", "diffHunk": "@@ -42,11 +43,16 @@ abstract class DefaultCompilerParams @Inject constructor(objects: ObjectFactory)\n   abstract override val alwaysGenerateTypesMatching: SetProperty<String>\n \n   init {\n-    // see https://github.com/gradle/gradle/issues/7485\n-    // TODO replace with `convention(null)` when we can target Gradle 6.2\n-    customTypeMapping.set(null as Map<String, String>?)\n-    sealedClassesForEnumsMatching.set(null as List<String>?)\n-    alwaysGenerateTypesMatching.set(null as Set<String>?)\n+    if (GradleVersion.current() >= GradleVersion.version(\"6.2\")) {", "originalCommit": "edf39bae8aa0375d9d672cfbe26fb1448aa585ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyMjQ0Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2803#discussion_r542922442", "bodyText": "Yup. At the same time, there are still users on Gradle 5.6 so if we keep this working for them (even if using .set), I think it's not too much of a price to pay for now.", "author": "martinbonnin", "createdAt": "2020-12-14T23:30:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxMjg0Ng=="}], "type": "inlineReview"}]}