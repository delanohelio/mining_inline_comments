{"pr_number": 2091, "pr_title": "Move to GitHub actions", "pr_createdAt": "2020-03-22T17:21:46Z", "pr_url": "https://github.com/apollographql/apollo-android/pull/2091", "timeline": [{"oid": "7985a176736b7d2218e779430c4abad011bb12e3", "url": "https://github.com/apollographql/apollo-android/commit/7985a176736b7d2218e779430c4abad011bb12e3", "message": "Move to Github actions", "committedDate": "2020-03-22T15:27:24Z", "type": "commit"}, {"oid": "40c952fc2081351dc90a694fb22cb59beb2162a3", "url": "https://github.com/apollographql/apollo-android/commit/40c952fc2081351dc90a694fb22cb59beb2162a3", "message": "use a x86_64 emulator", "committedDate": "2020-03-22T15:35:06Z", "type": "commit"}, {"oid": "fa55e4031993ed8ff867480e8d239718139699a3", "url": "https://github.com/apollographql/apollo-android/commit/fa55e4031993ed8ff867480e8d239718139699a3", "message": "maybe justt x86", "committedDate": "2020-03-22T16:02:07Z", "type": "commit"}, {"oid": "efab907d7bf2cdb359c8b964f5618b3babad56e0", "url": "https://github.com/apollographql/apollo-android/commit/efab907d7bf2cdb359c8b964f5618b3babad56e0", "message": "more emulator options", "committedDate": "2020-03-22T16:05:18Z", "type": "commit"}, {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed", "url": "https://github.com/apollographql/apollo-android/commit/5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed", "message": "use appropriate emulator", "committedDate": "2020-03-22T16:16:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTgwMA==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396121800", "bodyText": "nit: I thought Gradle project provides logger, should we use proper project.logger?\nThe same comment for any usage println below", "author": "sav007", "createdAt": "2020-03-22T17:51:02Z", "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  println(\"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    println(\"Deploying snapshot to OSS...\")", "originalCommit": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyNTkwNg==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396125906", "bodyText": "Yep, that'll allow users to shut down the logs if they really want to. I should certainly do this inside the Gradle plugin as well.", "author": "martinbonnin", "createdAt": "2020-03-22T18:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczNDM1MQ==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396734351", "bodyText": "For the record, I just checked the apollo-gradle-plugin module and it doesn't print to stdout at all so we're all good \ud83c\udf89", "author": "martinbonnin", "createdAt": "2020-03-23T20:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTgwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjYyNA==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396122624", "bodyText": "\ud83e\udd14 isn't ./gradlew clean connectedCheck will do the same? I mean build first?", "author": "sav007", "createdAt": "2020-03-22T17:58:43Z", "path": "scripts/ci.sh", "diffHunk": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+set -x\n+\n+export PATH=\"$ANDROID_HOME\"/tools/bin:$PATH\n+\n+which emulator\n+\n+sdkmanager --install 'system-images;android-28;default;x86_64' 'emulator'\n+echo \"no\" |avdmanager create avd --force -n test -k 'system-images;android-28;default;x86_64'\n+\n+\"$ANDROID_HOME\"/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &\n+\n+# theorically, we should wait here for the emulator to boot but compilation is slow enough\n+# that the emulator will be up by the time we reach the connectedTests. This saves writing\n+# some bash code and a few seconds of total build time.\n+\n+./gradlew clean connectedCheck\n+./gradlew build -x checkstyleTest --stacktrace --max-workers=2", "originalCommit": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjkyMw==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396122923", "bodyText": "I think that is assemble.\nBuild is everything including tests, static analysis etc", "author": "tasomaniac", "createdAt": "2020-03-22T18:02:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjYyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyNTU5OQ==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396125599", "bodyText": "I think build run tests while connectedCheck doesn't. I did this in order to fail faster on the connectedCheck since setting up an android emulator was a bit painful but everything can be put back to the same gradle invocation and gradle should parallelize appropriately.", "author": "martinbonnin", "createdAt": "2020-03-22T18:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjYyNA=="}], "type": "inlineReview"}, {"oid": "3cce6a5651278e65e74a2d232a88cd93cdf88c03", "url": "https://github.com/apollographql/apollo-android/commit/3cce6a5651278e65e74a2d232a88cd93cdf88c03", "message": "move back connectedCheck with the other targets", "committedDate": "2020-03-22T18:24:37Z", "type": "commit"}, {"oid": "74ccc82374cda3538ead51df1b0214f1b103da7e", "url": "https://github.com/apollographql/apollo-android/commit/74ccc82374cda3538ead51df1b0214f1b103da7e", "message": "use project.logger", "committedDate": "2020-03-22T18:29:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1ODc3NA==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r407058774", "bodyText": "@martinbonnin\nHow can it.name == \"apollo-gradle-plugin\" be true and it.name in arrayOf(\"publishDefaultPublicationToOjoRepository\", \"publishApolloGradlePluginPluginMarkerMavenPublicationToOjoRepository\") be true at the same time?\nThe content of that if branch looks incorrect as to what would be a intent that makes sense.", "author": "LouisCAD", "createdAt": "2020-04-11T12:34:29Z", "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  project.logger.log(LogLevel.LIFECYCLE, \"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    project.logger.log(LogLevel.LIFECYCLE, \"Deploying snapshot to OSS...\")\n+    dependsOn(subprojects.flatMap {\n+      tasks.matching {\n+        if (it.name == \"apollo-gradle-plugin\") {\n+          it.name in arrayOf(\"publishDefaultPublicationToOjoRepository\",\n+              \"publishApolloGradlePluginPluginMarkerMavenPublicationToOjoRepository\")\n+        } else {\n+          it.name == \"publishAllPublicationsToOjoRepository\"\n+        }", "originalCommit": "74ccc82374cda3538ead51df1b0214f1b103da7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2NDQ4Mg==", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r407064482", "bodyText": "Yup, that's a bug, the first it should be the project, the second it should be the task...\nWe have a very complicated bintray setup right now because we have 1 bintray package for each artifact, which doesn't really scale. I'm planning to streamling this for 2.0 and this code should actually disappear", "author": "martinbonnin", "createdAt": "2020-04-11T13:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1ODc3NA=="}], "type": "inlineReview"}]}