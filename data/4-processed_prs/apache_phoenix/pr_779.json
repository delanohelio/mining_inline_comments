{"pr_number": 779, "pr_title": "PHOENIX-5896: Implement incremental rebuild along the failed regions \u2026", "pr_createdAt": "2020-05-14T21:54:06Z", "pr_url": "https://github.com/apache/phoenix/pull/779", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MTExNw==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425461117", "bodyText": "Please rename as shouldVerify", "author": "gokceni", "createdAt": "2020-05-14T22:14:58Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -159,6 +161,16 @@ public IndexRebuildRegionScanner(final RegionScanner innerScanner, final Region\n         }\n     }\n \n+    private boolean shouldRebuildOrVerify() throws IOException {", "originalCommit": "dde52d9d738d4040e5a30f67fbe6d6a16994340a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2NzQ1Nw==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425467457", "bodyText": "Have we decided that we would do this check always? Should we do this only when incremental build is specified? At least we should not do this check for read-repair since it will unnecessarily impact the read performance.", "author": "kadirozde", "createdAt": "2020-05-14T22:32:33Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -1191,6 +1203,9 @@ public boolean next(List<Cell> results) throws IOException {\n         }\n         Cell lastCell = null;\n         int rowCount = 0;\n+        if(!shouldRebuildOrVerify()) {", "originalCommit": "dde52d9d738d4040e5a30f67fbe6d6a16994340a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5MjExMQ==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425492111", "bodyText": "This was one way without taking any additional parameters. I think the read repair won't be impacted as it would have different ts than the key of PIT result and this if will not get executed. We can wrap this under a parameter if you think that's the right thing to do.", "author": "swaroopak", "createdAt": "2020-05-14T23:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2NzQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MjI0MA==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425472240", "bodyText": "rather than importing the generateResultTableRowKey here, might be cleaner to have a ResultRepository \"exists\" overload that takes Scan, indexMaintainer, and region name. That keeps the internal details of the table from \"leaking\" back into the region scanner.", "author": "gjacoby126", "createdAt": "2020-05-14T22:47:23Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -159,6 +161,16 @@ public IndexRebuildRegionScanner(final RegionScanner innerScanner, final Region\n         }\n     }\n \n+    private boolean shouldRebuildOrVerify() throws IOException {\n+        if(verifyType == IndexTool.IndexVerifyType.ONLY) {\n+            return true;\n+        }\n+        byte [] rowKey = generateResultTableRowKey(scan.getTimeRange().getMax(),", "originalCommit": "dde52d9d738d4040e5a30f67fbe6d6a16994340a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MzIwMQ==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425473201", "bodyText": "or Scan, index table name, and region name. Whichever you prefer.", "author": "gjacoby126", "createdAt": "2020-05-14T22:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MjI0MA=="}], "type": "inlineReview"}, {"oid": "daa864e91ddd2addce18d710439b8242a95ecd19", "url": "https://github.com/apache/phoenix/commit/daa864e91ddd2addce18d710439b8242a95ecd19", "message": "Fixing review comments (2/2)", "committedDate": "2020-05-15T01:10:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3OTI0Mw==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425579243", "bodyText": "This test class is written to test a tiny method which does a simple check. Given how this test class is constructed, I do not see any value of these tests and the entire class. I am not sure if you notice that these tests verifies that the following block of code is correct\nif(a != null || b == IndexTool.IndexVerifyType.ONLY) {\nreturn true;\n}\nreturn !c;\nwhere a, b and c are supplied by the tests.\nI suggest adding a test to an existing integration test to test this incremental verification feature end to end. The jira does not explain how this feature is activated. It seems one needs to provide the end time parameter. If so, the same end time parameter needs to be used for the base run and the incremental runs.  How do we differentiate the result table entries of one run from those for another run when these runs use the same end time? Do we need to differentiate it? How about the start time? What happens if the end times are the same but the start times are different for these runs. All these questions would have been considered if an integration test were written. Have you considered them?", "author": "kadirozde", "createdAt": "2020-05-15T05:48:23Z", "path": "phoenix-core/src/test/java/org/apache/phoenix/index/ShouldVerifyTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.phoenix.index;\n+\n+import org.apache.hadoop.hbase.client.Scan;\n+import org.apache.hadoop.hbase.regionserver.Region;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.phoenix.coprocessor.IndexRebuildRegionScanner;\n+import org.apache.phoenix.mapreduce.index.IndexTool;\n+import org.apache.phoenix.mapreduce.index.IndexVerificationResultRepository;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Matchers;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.io.IOException;\n+\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Mockito.when;\n+\n+public class ShouldVerifyTest {", "originalCommit": "daa864e91ddd2addce18d710439b8242a95ecd19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1MzQwNA==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425953404", "bodyText": "@kadirozde - while I agree an IT test is also necessary here, it's useful to have a unit test that can quickly verify behavior given a complicated state machine (even if the lines of code under test are few). What makes it tricky is that we're essentially verifying a private method here, which is a code smell. I don't have a great refactor off the top of my head.", "author": "gjacoby126", "createdAt": "2020-05-15T17:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3OTI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1ODk0NQ==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r425958945", "bodyText": "@kadirozde Thank you for explaining the missing piece in the PR. I will add an IT in this one. I agree with @gjacoby126  and I faced the same challenge of refactoring it. Some unit tests are better than no tests I guess :(", "author": "swaroopak", "createdAt": "2020-05-15T17:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3OTI0Mw=="}], "type": "inlineReview"}, {"oid": "ce23255dd3f47499e32e737516966f0c82921e21", "url": "https://github.com/apache/phoenix/commit/ce23255dd3f47499e32e737516966f0c82921e21", "message": "PHOENIX-5896: Implement incremental rebuild along the failed regions in IndexTool", "committedDate": "2020-05-16T01:15:12Z", "type": "forcePushed"}, {"oid": "5f3ddf80708347e9bb5aba227f215088cde6d51d", "url": "https://github.com/apache/phoenix/commit/5f3ddf80708347e9bb5aba227f215088cde6d51d", "message": "PHOENIX-5896: Implement incremental rebuild along the failed regions in IndexTool", "committedDate": "2020-05-16T01:16:40Z", "type": "forcePushed"}, {"oid": "85612b647d36050b78cd6f6dbc0b6eb6b9c196b8", "url": "https://github.com/apache/phoenix/commit/85612b647d36050b78cd6f6dbc0b6eb6b9c196b8", "message": "PHOENIX-5896: Implement incremental rebuild along the failed regions in IndexTool", "committedDate": "2020-05-16T01:21:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NjU3OA==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r426796578", "bodyText": "Nit: Please change this to full \"incremental-verify\"", "author": "priyankporwal", "createdAt": "2020-05-18T17:49:55Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "diffHunk": "@@ -235,15 +235,22 @@ public static IndexVerifyType fromValue(byte[] value) {\n     private static final Option END_TIME_OPTION = new Option(\"et\", \"endtime\",\n             true, \"End time for indextool rebuild or verify\");\n \n+    private static final Option INCREMENTAL_VERIFY_OPTION = new Option(\"iv\", \"incre-verify\",", "originalCommit": "e98fd0d12dde23ddbd0e517e8bfe38e6b3b1dd9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5ODI2MQ==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r426798261", "bodyText": "Should we call this as \"retry-verify\" since that's what the implementation looks like?", "author": "priyankporwal", "createdAt": "2020-05-18T17:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NjU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NzAwOA==", "url": "https://github.com/apache/phoenix/pull/779#discussion_r426797008", "bodyText": "For consistency: These should both use \"start-time\" / \"end-time\" .. just like all other composite-word options.", "author": "priyankporwal", "createdAt": "2020-05-18T17:50:41Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "diffHunk": "@@ -235,15 +235,22 @@ public static IndexVerifyType fromValue(byte[] value) {\n     private static final Option END_TIME_OPTION = new Option(\"et\", \"endtime\",", "originalCommit": "e98fd0d12dde23ddbd0e517e8bfe38e6b3b1dd9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44975fd233d3dbd4d6bcbfc1efabe0c0359211f5", "url": "https://github.com/apache/phoenix/commit/44975fd233d3dbd4d6bcbfc1efabe0c0359211f5", "message": "Added isValidLastVerifyTime method", "committedDate": "2020-05-18T19:25:55Z", "type": "forcePushed"}, {"oid": "26d9ad6593a0c996cf5efe13a903a3de90f8846e", "url": "https://github.com/apache/phoenix/commit/26d9ad6593a0c996cf5efe13a903a3de90f8846e", "message": "effeciently validating lastVerifyTime and fixed nits", "committedDate": "2020-05-18T22:05:31Z", "type": "forcePushed"}, {"oid": "5fe3e99678ad69cc53c33033dc18298175849f0d", "url": "https://github.com/apache/phoenix/commit/5fe3e99678ad69cc53c33033dc18298175849f0d", "message": "effeciently validating lastVerifyTime and fixed nits", "committedDate": "2020-05-18T22:08:28Z", "type": "forcePushed"}, {"oid": "d49a489ab8163234a73c8b5a2e93fe536cc69e9b", "url": "https://github.com/apache/phoenix/commit/d49a489ab8163234a73c8b5a2e93fe536cc69e9b", "message": "PHOENIX-5896: Implement incremental rebuild along the failed regions in IndexTool", "committedDate": "2020-05-18T22:43:04Z", "type": "forcePushed"}, {"oid": "50c21ac4be8f7c002d3fcd46cd294b98c23c965b", "url": "https://github.com/apache/phoenix/commit/50c21ac4be8f7c002d3fcd46cd294b98c23c965b", "message": "PHOENIX-5896: Implement incremental rebuild along the failed regions in IndexTool", "committedDate": "2020-05-19T01:27:48Z", "type": "commit"}, {"oid": "50c21ac4be8f7c002d3fcd46cd294b98c23c965b", "url": "https://github.com/apache/phoenix/commit/50c21ac4be8f7c002d3fcd46cd294b98c23c965b", "message": "PHOENIX-5896: Implement incremental rebuild along the failed regions in IndexTool", "committedDate": "2020-05-19T01:27:48Z", "type": "forcePushed"}]}