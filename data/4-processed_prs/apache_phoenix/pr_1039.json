{"pr_number": 1039, "pr_title": "PHOENIX-6277 upsert into data error after HBASE-24850,HBASE-24754 merged", "pr_createdAt": "2020-12-30T01:52:05Z", "pr_url": "https://github.com/apache/phoenix/pull/1039", "timeline": [{"oid": "e331469484dda165c91f876ed2da272653003efc", "url": "https://github.com/apache/phoenix/commit/e331469484dda165c91f876ed2da272653003efc", "message": "PHOENIX-6277 upsert into data error after HBASE-24850,HBASE-24754 merged", "committedDate": "2020-12-30T01:49:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMjk5OA==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549912998", "bodyText": "nit: formatting of comment is mixed up now. (should be \"for backward compatibility\")", "author": "gjacoby126", "createdAt": "2020-12-30T02:17:03Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -867,7 +868,9 @@ private void addColumnToTable(List<Cell> results, PName colName, PName famName,\n         PDataType dataType =\n                 PDataType.fromTypeId(PInteger.INSTANCE.getCodec().decodeInt(\n                         dataTypeKv.getValueArray(), dataTypeKv.getValueOffset(), SortOrder.getDefault()));\n-        if (maxLength == null && dataType == PBinary.INSTANCE) dataType = PVarbinary.INSTANCE;   // For\n+        if (maxLength == null && dataType == PBinary.INSTANCE) {", "originalCommit": "e331469484dda165c91f876ed2da272653003efc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549913057", "bodyText": "This entire file can be removed; I believe it's been causing ASF license failures and it doesn't do anything. I think a previous JIRA checked it in by mistake.", "author": "gjacoby126", "createdAt": "2020-12-30T02:17:39Z", "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.", "originalCommit": "e331469484dda165c91f876ed2da272653003efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxNTY4Ng==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549915686", "bodyText": "thank you , I will remove this class.", "author": "wangchao316", "createdAt": "2020-12-30T02:35:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxNzk5OA==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549917998", "bodyText": "@gjacoby126 \uff0c I remove this class , please review again. thank you.", "author": "wangchao316", "createdAt": "2020-12-30T02:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MzI2OQ==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549943269", "bodyText": "PHOENIX-6272 is tracking this?", "author": "virajjasani", "createdAt": "2020-12-30T05:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0Nzc4MA==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549947780", "bodyText": "oh, thank you  @virajjasani ,I will assign me to PHOENIX-6272, and remove Dummy.java in this PR.", "author": "wangchao316", "createdAt": "2020-12-30T06:20:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}], "type": "inlineReview"}, {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7", "url": "https://github.com/apache/phoenix/commit/d649c729258fcdb4f2171ea2c772c981f04ea2e7", "message": "PHOENIX-6277 upsert into data error after HBASE-24850,HBASE-24754 merged", "committedDate": "2020-12-30T02:49:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDc0MQ==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549944741", "bodyText": "Better replace with placeholder?\nLOGGER.debug(\"Reloading table {} data from server\", e.getTableName());", "author": "virajjasani", "createdAt": "2020-12-30T06:00:29Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "diffHunk": "@@ -342,12 +341,12 @@ public PhoenixResultSet call() throws SQLException {\n                     }\n                     //Force update cache and retry if meta not found error occurs\n                     catch (MetaDataEntityNotFoundException e) {\n-                        if(doRetryOnMetaNotFoundError && e.getTableName()!=null){\n-                            if(LOGGER.isDebugEnabled())\n-                                LOGGER.debug(\"Reloading table \"\n-                                        + e.getTableName()+\" data from server\");\n-                            if(new MetaDataClient(connection).updateCache(connection.getTenantId(),\n-                                e.getSchemaName(), e.getTableName(), true).wasUpdated()){\n+                        if (doRetryOnMetaNotFoundError && e.getTableName() != null) {\n+                            if (LOGGER.isDebugEnabled()) {\n+                                LOGGER.debug(\"Reloading table \" + e.getTableName() + \" data from server\");", "originalCommit": "d649c729258fcdb4f2171ea2c772c981f04ea2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDgxNQ==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549944815", "bodyText": "same here", "author": "virajjasani", "createdAt": "2020-12-30T06:01:02Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "diffHunk": "@@ -430,12 +429,12 @@ public Integer call() throws SQLException {\n                             }\n                             //Force update cache and retry if meta not found error occurs\n                             catch (MetaDataEntityNotFoundException e) {\n-                                if(doRetryOnMetaNotFoundError && e.getTableName()!=null){\n-                                    if(LOGGER.isDebugEnabled())\n-                                        LOGGER.debug(\"Reloading table \"+ e.getTableName()\n-                                                +\" data from server\");\n-                                    if(new MetaDataClient(connection).updateCache(connection.getTenantId(),\n-                                        e.getSchemaName(), e.getTableName(), true).wasUpdated()){\n+                                if (doRetryOnMetaNotFoundError && e.getTableName() != null) {\n+                                    if (LOGGER.isDebugEnabled()) {\n+                                        LOGGER.debug(\"Reloading table \" + e.getTableName() + \" data from server\");", "originalCommit": "d649c729258fcdb4f2171ea2c772c981f04ea2e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4ODgzNA==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549988834", "bodyText": "same here\n\nphoenix code have more this ways that not placeholder in log. I will solved this in another issues.", "author": "wangchao316", "createdAt": "2020-12-30T07:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDkxMg==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549944912", "bodyText": "same here", "author": "virajjasani", "createdAt": "2020-12-30T06:01:41Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -2461,11 +2464,11 @@ public Object run() throws Exception {\n                         try (PhoenixConnection connection =\n                                      QueryUtil.getConnectionOnServer(env.getConfiguration())\n                                              .unwrap(PhoenixConnection.class)) {\n-                            try{\n+                            try {\n                                 MetaDataUtil.deleteFromStatsTable(connection, deletedTable,\n                                         physicalTableNames, sharedTableStates);\n-                                LOGGER.info(\"Table stats deleted successfully. \"+\n-                                        deletedTable.getPhysicalName().getString());\n+                                LOGGER.info(\"Table stats deleted successfully. \"\n+                                    + deletedTable.getPhysicalName().getString());", "originalCommit": "d649c729258fcdb4f2171ea2c772c981f04ea2e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4ODk1OA==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549988958", "bodyText": "phoenix code have more this ways that not placeholder in log. I will solved this in another issues.", "author": "wangchao316", "createdAt": "2020-12-30T07:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NTQ1MA==", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549945450", "bodyText": "Since we are sorting list, we can directly use sort():\nCOLUMN_KV_COLUMNS.sort(CellComparator.getInstance());", "author": "virajjasani", "createdAt": "2020-12-30T06:05:26Z", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -456,7 +457,7 @@\n     );\n \n     static {\n-        Collections.sort(COLUMN_KV_COLUMNS, KeyValue.COMPARATOR);\n+        Collections.sort(COLUMN_KV_COLUMNS, CellComparator.getInstance());", "originalCommit": "d649c729258fcdb4f2171ea2c772c981f04ea2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b75130c585b0daeb7755a4b74aaa91a19a51704d", "url": "https://github.com/apache/phoenix/commit/b75130c585b0daeb7755a4b74aaa91a19a51704d", "message": "PHOENIX-6277 upsert into data error after HBASE-24850,HBASE-24754 merged", "committedDate": "2020-12-30T07:36:16Z", "type": "commit"}, {"oid": "33a9182ee42bbf55b75f512c9bc82548420a153d", "url": "https://github.com/apache/phoenix/commit/33a9182ee42bbf55b75f512c9bc82548420a153d", "message": "PHOENIX-6277 upsert into data error after HBASE-24850,HBASE-24754 merged", "committedDate": "2020-12-30T07:47:08Z", "type": "commit"}, {"oid": "28e5768338856d78107cd7648350c504a0742b8b", "url": "https://github.com/apache/phoenix/commit/28e5768338856d78107cd7648350c504a0742b8b", "message": "Merge branch 'master' of https://github.com/apache/phoenix into master", "committedDate": "2020-12-31T01:46:13Z", "type": "commit"}]}