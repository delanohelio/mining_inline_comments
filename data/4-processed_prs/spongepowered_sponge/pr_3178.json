{"pr_number": 3178, "pr_title": "Generify Palettes Implementation", "pr_createdAt": "2020-10-05T06:48:28Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/3178", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MDkwMA==", "url": "https://github.com/SpongePowered/Sponge/pull/3178#discussion_r499670900", "bodyText": "Why not use an Int2ObjectMap and Object2IntMap if you're going to make a copy?", "author": "Cybermaxke", "createdAt": "2020-10-05T15:08:45Z", "path": "src/main/java/org/spongepowered/common/world/schematic/ImmutableBimapPalette.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.world.schematic;\n+\n+import com.google.common.collect.BiMap;\n+import com.google.common.collect.ImmutableBiMap;\n+import net.minecraft.util.palette.IPalette;\n+import org.spongepowered.api.world.schematic.Palette;\n+import org.spongepowered.api.world.schematic.PaletteType;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+public class ImmutableBimapPalette<T> implements Palette.Immutable<T> {\n+\n+    private final ImmutableBiMap<Integer, T> ids;\n+    private final ImmutableBiMap<T, Integer> idsr;\n+    private final PaletteType<T> paletteType;\n+    private final int maxId;\n+\n+    public ImmutableBimapPalette(final PaletteType<T> paletteType, final BiMap<Integer, T> reference) {\n+        final ImmutableBiMap.Builder<Integer, T> builder = ImmutableBiMap.builder();", "originalCommit": "39d4be935546d994aaf25270bb87284ee7bb792c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwNDAzOA==", "url": "https://github.com/SpongePowered/Sponge/pull/3178#discussion_r499704038", "bodyText": "\ud83d\udc4d for using fastutil here", "author": "kashike", "createdAt": "2020-10-05T15:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwNTgzMQ==", "url": "https://github.com/SpongePowered/Sponge/pull/3178#discussion_r499705831", "bodyText": "Agreed", "author": "Zidane", "createdAt": "2020-10-05T15:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MDkwMA=="}], "type": "inlineReview"}, {"oid": "5b714865095a242ef6ba9fb8286e243cbef89044", "url": "https://github.com/SpongePowered/Sponge/commit/5b714865095a242ef6ba9fb8286e243cbef89044", "message": "Implement PaletteType and supply the registry\n\nSigned-off-by: Gabriel Harris-Rouquette <gabizou@me.com>", "committedDate": "2020-11-13T07:39:13Z", "type": "forcePushed"}, {"oid": "adc69af4e5c7d1a8750885730659c281a1459c43", "url": "https://github.com/SpongePowered/Sponge/commit/adc69af4e5c7d1a8750885730659c281a1459c43", "message": "Introduce MemoizedSupplier for Supplier memoization\n\nA Supplier normally would evaluate every single time being called, but in\nsome cases, we'd rather be able to memoize the value generated from the\nSupplier after the first call. This is not meant to be leaked beyond memoizing\nglobal objects that are referentially transparent themselves (like an object\nbeing comprised of functions/suppliers that rely on other global variables).\n\nSigned-off-by: Gabriel Harris-Rouquette <gabizou@me.com>", "committedDate": "2020-11-13T07:47:21Z", "type": "commit"}, {"oid": "702dc997a10fd763388ca8832a594fce31864dbb", "url": "https://github.com/SpongePowered/Sponge/commit/702dc997a10fd763388ca8832a594fce31864dbb", "message": "Reintroduce Blockstate(De)Serializer\n\nTraditionally, Mojang is appearing to want to store a BlockState as a map to better\nsuit DFU's ability to update a state's values and properties. This map based\nrepresentation however, is not ideal to being used for storage with a palette that\nretains the integer to string like mapping internally. It may well be possible to\ntake advantage of DFU in the future, but at this time, a less breakage of the\nSchematic Specification is required.\n\nSigned-off-by: Gabriel Harris-Rouquette <gabizou@me.com>", "committedDate": "2020-11-13T07:50:09Z", "type": "commit"}, {"oid": "d897cf750ea24ef4436f2ba06f4bb9f059a8654e", "url": "https://github.com/SpongePowered/Sponge/commit/d897cf750ea24ef4436f2ba06f4bb9f059a8654e", "message": "Implement new Palettes\n\nPalettes are much more streamlined now, with global palettes being memoized functions\nbuilt off the global registries (meaning they are reload-aware) while copies can be\nisolated by themselves and rebuilt however need be.\n\nSigned-off-by: Gabriel Harris-Rouquette <gabizou@me.com>", "committedDate": "2020-11-13T07:51:09Z", "type": "forcePushed"}, {"oid": "77a6d322bcafbf843546495856b18a5c43000041", "url": "https://github.com/SpongePowered/Sponge/commit/77a6d322bcafbf843546495856b18a5c43000041", "message": "Implement new Palettes\n\nPalettes are much more streamlined now, with global palettes being memoized functions\nbuilt off the global registries (meaning they are reload-aware) while copies can be\nisolated by themselves and rebuilt however need be.\n\nSigned-off-by: Gabriel Harris-Rouquette <gabizou@me.com>", "committedDate": "2020-11-13T08:23:39Z", "type": "commit"}, {"oid": "77a6d322bcafbf843546495856b18a5c43000041", "url": "https://github.com/SpongePowered/Sponge/commit/77a6d322bcafbf843546495856b18a5c43000041", "message": "Implement new Palettes\n\nPalettes are much more streamlined now, with global palettes being memoized functions\nbuilt off the global registries (meaning they are reload-aware) while copies can be\nisolated by themselves and rebuilt however need be.\n\nSigned-off-by: Gabriel Harris-Rouquette <gabizou@me.com>", "committedDate": "2020-11-13T08:23:39Z", "type": "forcePushed"}]}