{"pr_number": 1297, "pr_title": "SAMZA-2379: Support Container Placements for job running in degraded state ", "pr_createdAt": "2020-02-28T17:39:02Z", "pr_url": "https://github.com/apache/samza/pull/1297", "timeline": [{"oid": "e9acfc6a7feaeb9fdeb05a441a1d11fb4c2d4d21", "url": "https://github.com/apache/samza/commit/e9acfc6a7feaeb9fdeb05a441a1d11fb4c2d4d21", "message": "Container Placements support for Job Running in degraded state", "committedDate": "2020-02-29T00:15:14Z", "type": "forcePushed"}, {"oid": "14034f3b441ae79ec4ba43f4a0e8e94836dd34f1", "url": "https://github.com/apache/samza/commit/14034f3b441ae79ec4ba43f4a0e8e94836dd34f1", "message": "Container Placements support for Job Running in degraded state", "committedDate": "2020-03-02T20:21:29Z", "type": "commit"}, {"oid": "14034f3b441ae79ec4ba43f4a0e8e94836dd34f1", "url": "https://github.com/apache/samza/commit/14034f3b441ae79ec4ba43f4a0e8e94836dd34f1", "message": "Container Placements support for Job Running in degraded state", "committedDate": "2020-03-02T20:21:29Z", "type": "forcePushed"}, {"oid": "087a20f160e7f411b1bfa7a138e0b58f60875a8f", "url": "https://github.com/apache/samza/commit/087a20f160e7f411b1bfa7a138e0b58f60875a8f", "message": "Improve comment", "committedDate": "2020-03-03T00:39:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNzc0MA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r387917740", "bodyText": "Is this required only for testing?", "author": "rmatharu", "createdAt": "2020-03-04T20:32:26Z", "path": "samza-core/src/test/java/org/apache/samza/clustermanager/MockClusterResourceManager.java", "diffHunk": "@@ -102,12 +102,17 @@ public void launchStreamProcessor(SamzaResource resource, CommandBuilder builder\n \n   @Override\n   public void stopStreamProcessor(SamzaResource resource) {\n-    SamzaResourceStatus status = new SamzaResourceStatus(resource.getContainerId(), \"diagnostics\", SamzaResourceStatus.PREEMPTED);\n+    stopStreamProcessor(resource, SamzaResourceStatus.PREEMPTED);\n+  }\n+\n+  void stopStreamProcessor(SamzaResource resource, int exitCode) {", "originalCommit": "087a20f160e7f411b1bfa7a138e0b58f60875a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU5Njg4Mg==", "url": "https://github.com/apache/samza/pull/1297#discussion_r388596882", "bodyText": "yes", "author": "Sanil15", "createdAt": "2020-03-05T22:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNzc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MTQyNA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389041424", "bodyText": "Maybe @visible for testing or\n// package private for testing?", "author": "rmatharu", "createdAt": "2020-03-06T17:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNzc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NzQ3OA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389877478", "bodyText": "this class is a Mock itself but sure Ill add it", "author": "Sanil15", "createdAt": "2020-03-09T18:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNzc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzM5OA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r387923398", "bodyText": "CPM does a similar thing at\nString lastSeenOn = state.jobModelManager.jobModel().getContainerToHostValue(processorId, SetContainerHostMapping.HOST_KEY);\n\nIs it possible to consolidate these multiple job-model-manager accesses?\nmaybe call it just getHostForContainer?", "author": "rmatharu", "createdAt": "2020-03-04T20:44:25Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -429,6 +429,25 @@ private void writeContainerPlacementResponseMessage(ContainerPlacementRequestMes\n             responseMessage, System.currentTimeMillis()));\n   }\n \n+  /**\n+   * Gets the hostname on which container is either currently running or was last seen on if it is not running\n+   */\n+  private String getSourceHostForContainer(ContainerPlacementRequestMessage requestMessage) {\n+    String sourceHost = null;\n+    String processorId = requestMessage.getProcessorId();\n+    if (samzaApplicationState.runningProcessors.containsKey(processorId)) {\n+      SamzaResource currentResource = samzaApplicationState.runningProcessors.get(processorId);\n+      LOG.info(\"Processor ID: {} matched a running container with containerId ID: {} is running on host: {} for ContainerPlacement action: {}\",\n+          processorId, currentResource.getContainerId(), currentResource.getHost(), requestMessage);\n+      sourceHost = currentResource.getHost();\n+    } else {\n+      sourceHost = samzaApplicationState.jobModelManager.jobModel().getContainerToHostValue(processorId, SetContainerHostMapping.HOST_KEY);\n+      LOG.info(\"Processor ID: {} is not running and was last seen on host: {} for ContainerPlacement action: {}\",\n+          processorId, sourceHost, requestMessage);", "originalCommit": "087a20f160e7f411b1bfa7a138e0b58f60875a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYwMTc3Nw==", "url": "https://github.com/apache/samza/pull/1297#discussion_r388601777", "bodyText": "Yes it is possible, one last part left in CPM refactor is moving onResourcesCompleted logic to container manager, let's do this as a part of that logic", "author": "Sanil15", "createdAt": "2020-03-05T22:22:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzMjM4MQ==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389032381", "bodyText": "maybe link jira for that here?", "author": "rmatharu", "createdAt": "2020-03-06T17:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NjIyOQ==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389876229", "bodyText": "sure", "author": "Sanil15", "createdAt": "2020-03-09T18:20:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzM5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNDI3MA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r387924270", "bodyText": "Log statements needed?", "author": "rmatharu", "createdAt": "2020-03-04T20:46:13Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -443,6 +462,11 @@ private boolean deQueueAction(ContainerPlacementRequestMessage requestMessage) {\n     if (checkIfActiveOrStandbyContainerHasActivePlacementAction(requestMessage)) {\n       return false;\n     }\n+\n+    if (samzaApplicationState.failedProcessors.containsKey(requestMessage.getProcessorId())) {\n+      return true;", "originalCommit": "087a20f160e7f411b1bfa7a138e0b58f60875a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU5OTc1OA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r388599758", "bodyText": "I can add one but the de-queuing is already logged at the caller", "author": "Sanil15", "createdAt": "2020-03-05T22:17:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNDI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTAwNQ==", "url": "https://github.com/apache/samza/pull/1297#discussion_r387925005", "bodyText": "To make this readable, maybe define variables for each of the lookups and\ndefine the if to be\nif (inRunning || inPending || inFailed) {//do blah}\nelse {\nthis\n}", "author": "rmatharu", "createdAt": "2020-03-04T20:47:45Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -464,7 +488,8 @@ private boolean deQueueAction(ContainerPlacementRequestMessage requestMessage) {\n     Boolean invalidAction = false;\n     String errorMessage = null;\n     if (!samzaApplicationState.runningProcessors.containsKey(requestMessage.getProcessorId()) &&\n-        !samzaApplicationState.pendingProcessors.containsKey(requestMessage.getProcessorId())\n+        !samzaApplicationState.pendingProcessors.containsKey(requestMessage.getProcessorId()) &&\n+        !samzaApplicationState.failedProcessors.containsKey(requestMessage.getProcessorId())", "originalCommit": "087a20f160e7f411b1bfa7a138e0b58f60875a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU5NTYyNw==", "url": "https://github.com/apache/samza/pull/1297#discussion_r388595627", "bodyText": "sure", "author": "Sanil15", "createdAt": "2020-03-05T22:07:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTAwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTk5NQ==", "url": "https://github.com/apache/samza/pull/1297#discussion_r387925995", "bodyText": "This class already has a map called\n/**\n   * ContainerStatuses of failed containers.\t   * ContainerStatuses of failed containers.\n   */\t \n  public final ConcurrentMap<String, SamzaResourceStatus> failedContainersStatus = new ConcurrentHashMap<>();\t \n\nCould we please reuse that?\nAlso the variable type can just be a Map<,> doesnt need to be ConcurrentHashMap", "author": "rmatharu", "createdAt": "2020-03-04T20:49:47Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/SamzaApplicationState.java", "diffHunk": "@@ -110,7 +110,17 @@\n    */\n   public final ConcurrentMap<String, SamzaResource> runningProcessors = new ConcurrentHashMap<>(0);\n \n-   /**\n+  /**\n+   *  Map of the failed Samza processor ID to resource status of the last attempted of the container.\n+   *  This map is only used when {@link org.apache.samza.config.ClusterManagerConfig#CLUSTER_MANAGER_CONTAINER_FAIL_JOB_AFTER_RETRIES}\n+   *  is set to false, this map tracks the containers which have exhausted all retires for restart and JobCoordinator is\n+   *  no longer attempting to restart this container\n+   *\n+   *  Modified by both the AMRMCallbackThread and the ContainerAllocator thread\n+   */\n+  public final ConcurrentHashMap<String, SamzaResourceStatus> failedProcessors = new ConcurrentHashMap<>(0);", "originalCommit": "087a20f160e7f411b1bfa7a138e0b58f60875a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU5NTU2Nw==", "url": "https://github.com/apache/samza/pull/1297#discussion_r388595567", "bodyText": "good catch, it was there but was only populated by onResourceCompletedWithUnknownStatus and not used anywhere else, we do not need it I will remove that one", "author": "Sanil15", "createdAt": "2020-03-05T22:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTk5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MDg2NA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389040864", "bodyText": "As long as we use one of the two.\nIts also used by YarnClusterResourceManager for updating \"completed\" containers,\nwhich are containers that exit after finishing gracefully.", "author": "rmatharu", "createdAt": "2020-03-06T17:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTk5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3Njk3Mw==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389876973", "bodyText": "thats YarnAppState not SamzaApplicationState", "author": "Sanil15", "createdAt": "2020-03-09T18:21:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTk5NQ=="}], "type": "inlineReview"}, {"oid": "54c4148a9d81ecf5430e60a1c65dc26afd68e221", "url": "https://github.com/apache/samza/commit/54c4148a9d81ecf5430e60a1c65dc26afd68e221", "message": "Address comments and remove unused maps in samza", "committedDate": "2020-03-05T22:44:43Z", "type": "commit"}, {"oid": "acb86bc5982afcda840137fb5030a4821bb55ea8", "url": "https://github.com/apache/samza/commit/acb86bc5982afcda840137fb5030a4821bb55ea8", "message": "Merging master branch", "committedDate": "2020-03-05T23:03:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzMjkxOQ==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389032919", "bodyText": "\"neither in running, pending or failed state\"", "author": "rmatharu", "createdAt": "2020-03-06T17:14:31Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -486,9 +512,12 @@ private boolean deQueueAction(ContainerPlacementRequestMessage requestMessage) {\n     String errorMessagePrefix = ContainerPlacementMessage.StatusCode.BAD_REQUEST + \" reason: %s\";\n     Boolean invalidAction = false;\n     String errorMessage = null;\n-    if (!samzaApplicationState.runningProcessors.containsKey(requestMessage.getProcessorId()) &&\n-        !samzaApplicationState.pendingProcessors.containsKey(requestMessage.getProcessorId())\n-    ) {\n+\n+    boolean isRunning = samzaApplicationState.runningProcessors.containsKey(requestMessage.getProcessorId());\n+    boolean isPending = samzaApplicationState.pendingProcessors.containsKey(requestMessage.getProcessorId());\n+    boolean isFailed = samzaApplicationState.failedProcessors.containsKey(requestMessage.getProcessorId());\n+\n+    if (!isRunning && !isPending && !isFailed) {\n       errorMessage = String.format(errorMessagePrefix, \"invalid processor id neither in running or pending processors\");", "originalCommit": "acb86bc5982afcda840137fb5030a4821bb55ea8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0ODg4OA==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389048888", "bodyText": "This test is littered with thread.sleep and timeouts -- a typical recipe for flaky jarvis/test, and increasing build times.\nWould it be possible to reduce/consolidate them?", "author": "rmatharu", "createdAt": "2020-03-06T17:44:55Z", "path": "samza-core/src/test/java/org/apache/samza/clustermanager/TestContainerPlacementActions.java", "diffHunk": "@@ -528,6 +528,124 @@ public Void answer(InvocationOnMock invocation) {\n     assertFalse(containerPlacementMetadataStore.readContainerPlacementRequestMessage(requestMessage.getUuid()).isPresent());\n   }\n \n+\n+  @Test(timeout = 20000)", "originalCommit": "acb86bc5982afcda840137fb5030a4821bb55ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3OTAyMw==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389879023", "bodyText": "I have used semaphores where it was easy to inject (awaiting container launch), this timeout configured on tests is generous enough, each callback spawns a different thread to mimic AMRMClientAsync behavior, so if I were to do all of these with using semaphores instead of thread.sleep for state change, I would need some significant refactors", "author": "Sanil15", "createdAt": "2020-03-09T18:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0ODg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4MDk3Ng==", "url": "https://github.com/apache/samza/pull/1297#discussion_r389880976", "bodyText": "These are integ tests and it takes 35 seconds to run all of them serially, we can also make them run in parallel to further reduce build times", "author": "Sanil15", "createdAt": "2020-03-09T18:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0ODg4OA=="}], "type": "inlineReview"}, {"oid": "5d8d34a9bb9ba4bff5718034b6529def06142b57", "url": "https://github.com/apache/samza/commit/5d8d34a9bb9ba4bff5718034b6529def06142b57", "message": "Address feedback remove flaky assertions due to thread contention flakiness", "committedDate": "2020-03-09T18:30:33Z", "type": "commit"}, {"oid": "800ca30e679857a620f146b342897e57a7b73097", "url": "https://github.com/apache/samza/commit/800ca30e679857a620f146b342897e57a7b73097", "message": "Empty Commit to Trigger Build", "committedDate": "2020-03-09T18:58:31Z", "type": "commit"}]}