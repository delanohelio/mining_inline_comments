{"pr_number": 1381, "pr_title": "SAMZA-2547: Add missing \"tableId\" for SendToTableOperatorSpec in Samza job execution plan", "pr_createdAt": "2020-06-11T03:05:05Z", "pr_url": "https://github.com/apache/samza/pull/1381", "timeline": [{"oid": "8c890dc693ef582f6215958004873f2edf049e94", "url": "https://github.com/apache/samza/commit/8c890dc693ef582f6215958004873f2edf049e94", "message": "Add missing \"tableId\" for SendToTableOperatorSpec\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>", "committedDate": "2020-06-11T02:54:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzMjMxMQ==", "url": "https://github.com/apache/samza/pull/1381#discussion_r438532311", "bodyText": "why do you need this? can we just use mock instead?", "author": "mynameborat", "createdAt": "2020-06-11T04:12:03Z", "path": "samza-core/src/test/java/org/apache/samza/execution/TestJobGraphJsonGenerator.java", "diffHunk": "@@ -368,4 +373,41 @@ String getCountry() {\n       return \"\";\n     }\n   }\n+\n+  @Test\n+  public void testOperatorToMapForTable() {\n+    JobGraphJsonGenerator jsonGenerator = new JobGraphJsonGenerator();\n+    Map<String, Object> map;\n+    SendToTableOperatorSpec<Object, Object> sendToTableOperatorSpec =\n+        OperatorSpecs.createSendToTableOperatorSpec(\"test-sent-to-table\", \"test-sent-to\");\n+    map = jsonGenerator.operatorToMap(sendToTableOperatorSpec);\n+    assertTrue(map.containsKey(\"tableId\"));\n+    assertEquals(map.get(\"tableId\"), \"test-sent-to-table\");\n+    assertEquals(map.get(\"opCode\"), OperatorSpec.OpCode.SEND_TO.name());\n+    assertEquals(map.get(\"opId\"), \"test-sent-to\");\n+    StreamTableJoinOperatorSpec<String, String, String, String> streamTableJoinOperatorSpec =\n+        OperatorSpecs.createStreamTableJoinOperatorSpec(\"test-join-table\", new TestStreamTableJoinFunction(),\n+            \"test-join\");\n+    map = jsonGenerator.operatorToMap(streamTableJoinOperatorSpec);\n+    assertTrue(map.containsKey(\"tableId\"));\n+    assertEquals(map.get(\"tableId\"), \"test-join-table\");\n+    assertEquals(map.get(\"opCode\"), OperatorSpec.OpCode.JOIN.name());\n+    assertEquals(map.get(\"opId\"), \"test-join\");\n+  }\n+\n+  private class TestStreamTableJoinFunction implements StreamTableJoinFunction<String, String, String, String> {\n+    @Override\n+    public String apply(String message, String record) {\n+      return null;\n+    }\n+    @Override\n+    public String getMessageKey(String message) {\n+      return null;\n+    }\n+    @Override\n+    public String getRecordKey(String record) {\n+      return null;\n+    }\n+  }", "originalCommit": "8c890dc693ef582f6215958004873f2edf049e94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzMzY0NA==", "url": "https://github.com/apache/samza/pull/1381#discussion_r438533644", "bodyText": "ah, good catch! Mock StreamTableJoinFunction  is a good idea, as we can remove those dummy codes.", "author": "alnzng", "createdAt": "2020-06-11T04:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzMjMxMQ=="}], "type": "inlineReview"}, {"oid": "285c7fdedda89b0b810b7e31b9c3abde30a36af0", "url": "https://github.com/apache/samza/commit/285c7fdedda89b0b810b7e31b9c3abde30a36af0", "message": "remove useless codes\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>", "committedDate": "2020-06-11T04:18:39Z", "type": "commit"}]}