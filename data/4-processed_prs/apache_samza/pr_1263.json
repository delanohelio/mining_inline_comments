{"pr_number": 1263, "pr_title": "SAMZA-2448: [Scala cleanup] Clean up and convert some parts of samza-kafka to java", "pr_createdAt": "2020-01-29T18:35:17Z", "pr_url": "https://github.com/apache/samza/pull/1263", "timeline": [{"oid": "ef87b6c17e66003ab780f89269f02ca43559f424", "url": "https://github.com/apache/samza/commit/ef87b6c17e66003ab780f89269f02ca43559f424", "message": "moved java files to java directory, deleted unused scala classes, added KafkaUtilJava", "committedDate": "2020-01-24T23:54:11Z", "type": "commit"}, {"oid": "f15483a1b3c45a35596f10e525053de3db93b10f", "url": "https://github.com/apache/samza/commit/f15483a1b3c45a35596f10e525053de3db93b10f", "message": "remove KafkaUtil.scala, replace with KafkaUtil.java", "committedDate": "2020-01-24T23:57:44Z", "type": "commit"}, {"oid": "18050168d96f25ccace4041843eff597d1664c30", "url": "https://github.com/apache/samza/commit/18050168d96f25ccace4041843eff597d1664c30", "message": "licenses", "committedDate": "2020-01-25T00:11:10Z", "type": "commit"}, {"oid": "d45cf5df41eddbd9c5686fbd54de51715801f554", "url": "https://github.com/apache/samza/commit/d45cf5df41eddbd9c5686fbd54de51715801f554", "message": "Merge branch 'master' into kafka_scala", "committedDate": "2020-02-06T00:26:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5NzUzMA==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377797530", "bodyText": "minor: define: \"samza_checkpoint_ver%d_for%s_%s\" and static final?", "author": "Sanil15", "createdAt": "2020-02-11T17:50:57Z", "path": "samza-kafka/src/main/java/org/apache/samza/util/KafkaUtil.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.util;\n+\n+import java.util.List;\n+import org.apache.kafka.common.PartitionInfo;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.samza.Partition;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.execution.StreamManager;\n+import org.apache.samza.system.OutgoingMessageEnvelope;\n+import org.apache.samza.system.SystemStreamPartition;\n+\n+\n+public class KafkaUtil {\n+  private static final int CHECKPOINT_LOG_VERSION_NUMBER = 1;\n+\n+  public static String getCheckpointTopic(String jobName, String jobId, Config config) {\n+    String checkpointTopic = String.format(\"__samza_checkpoint_ver_%d_for_%s_%s\", CHECKPOINT_LOG_VERSION_NUMBER,", "originalCommit": "d45cf5df41eddbd9c5686fbd54de51715801f554", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDExMg==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377860112", "bodyText": "Did you leave it out as is and plan to rewrite these tests when KafkaCheckpointManager is rewritten in Java?", "author": "mynameborat", "createdAt": "2020-02-11T19:47:31Z", "path": "samza-kafka/src/test/scala/org/apache/samza/checkpoint/kafka/TestKafkaCheckpointManager.scala", "diffHunk": "@@ -159,29 +159,31 @@ class TestKafkaCheckpointManager extends KafkaServerTestHarness {\n   def testFailOnTopicValidation(): Unit = {\n     // By default, should fail if there is a topic validation error\n     val checkpointTopic = \"eight-partition-topic\";\n-    val kcm1 = createKafkaCheckpointManager(checkpointTopic)\n-    kcm1.register(taskName)\n+    val kcm = createKafkaCheckpointManager(checkpointTopic)", "originalCommit": "d45cf5df41eddbd9c5686fbd54de51715801f554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1MDQzMQ==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377950431", "bodyText": "Yes, this will be rewritten in java in a future PR when KafkaCheckpointManager is migrated.\nI was modifying this class since it had the only reference to KafkaUtilException, but non-test code no longer referred to that exception.", "author": "cameronlee314", "createdAt": "2020-02-11T22:58:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDExMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDg4Mg==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377860882", "bodyText": "Did any of your change force to separate out the tests or is it more of a clean up?", "author": "mynameborat", "createdAt": "2020-02-11T19:48:58Z", "path": "samza-kafka/src/test/scala/org/apache/samza/checkpoint/kafka/TestKafkaCheckpointManager.scala", "diffHunk": "@@ -159,29 +159,31 @@ class TestKafkaCheckpointManager extends KafkaServerTestHarness {\n   def testFailOnTopicValidation(): Unit = {\n     // By default, should fail if there is a topic validation error\n     val checkpointTopic = \"eight-partition-topic\";\n-    val kcm1 = createKafkaCheckpointManager(checkpointTopic)\n-    kcm1.register(taskName)\n+    val kcm = createKafkaCheckpointManager(checkpointTopic)\n+    kcm.register(taskName)\n     // create topic with the wrong number of partitions\n     createTopic(checkpointTopic, 8, new KafkaConfig(config).getCheckpointTopicProperties())\n     try {\n-      kcm1.createResources\n-      kcm1.start\n+      kcm.createResources()\n+      kcm.start()\n       fail(\"Expected an exception for invalid number of partitions in the checkpoint topic.\")\n     } catch {\n       case e: StreamValidationException => None\n     }\n-    kcm1.stop\n+    kcm.stop()\n+  }\n \n-    // Should not fail if failOnTopicValidation = false\n+  @Test\n+  def testNoFailOnTopicValidationDisabled(): Unit = {", "originalCommit": "d45cf5df41eddbd9c5686fbd54de51715801f554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0NjgyNg==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377946826", "bodyText": "If I recall correctly, it was more of a clean-up in order to isolate the two tests, since this class still uses real Kafka/Zookeeper. I was also running into transient issues with the test not executing in the IDE, and this seemed to help with those issues (although I don't think having a single test was really the problem).", "author": "cameronlee314", "createdAt": "2020-02-11T22:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg2MDg4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkzNzI5OQ==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377937299", "bodyText": "Does it have to be boxed? Can we replace this w/ primitive?", "author": "mynameborat", "createdAt": "2020-02-11T22:27:04Z", "path": "samza-kafka/src/main/java/org/apache/samza/util/KafkaUtil.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.util;\n+\n+import java.util.List;\n+import org.apache.kafka.common.PartitionInfo;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.samza.Partition;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.execution.StreamManager;\n+import org.apache.samza.system.OutgoingMessageEnvelope;\n+import org.apache.samza.system.SystemStreamPartition;\n+\n+\n+public class KafkaUtil {\n+  private static final int CHECKPOINT_LOG_VERSION_NUMBER = 1;\n+\n+  public static String getCheckpointTopic(String jobName, String jobId, Config config) {\n+    String checkpointTopic = String.format(\"__samza_checkpoint_ver_%d_for_%s_%s\", CHECKPOINT_LOG_VERSION_NUMBER,\n+        jobName.replaceAll(\"_\", \"-\"), jobId.replaceAll(\"_\", \"-\"));\n+    return StreamManager.createUniqueNameForBatch(checkpointTopic, config);\n+  }\n+\n+  /**\n+   * Partition key in the envelope must not be null.\n+   */\n+  public static Integer getIntegerPartitionKey(OutgoingMessageEnvelope envelope, List<PartitionInfo> partitions) {", "originalCommit": "d45cf5df41eddbd9c5686fbd54de51715801f554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0ODM2NQ==", "url": "https://github.com/apache/samza/pull/1263#discussion_r377948365", "bodyText": "I tried to unbox also, but KafkaSystemProducer needs the boxed type since it assigns the output of this method to a variable which needs to be nullable.", "author": "cameronlee314", "createdAt": "2020-02-11T22:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkzNzI5OQ=="}], "type": "inlineReview"}, {"oid": "ba43b9486476d0591f6823f311d394a98c5238e0", "url": "https://github.com/apache/samza/commit/ba43b9486476d0591f6823f311d394a98c5238e0", "message": "Merge branch 'master' into kafka_scala", "committedDate": "2020-02-11T22:34:27Z", "type": "commit"}, {"oid": "01bb5b1e615bfa701485fa27c2798940b1134b12", "url": "https://github.com/apache/samza/commit/01bb5b1e615bfa701485fa27c2798940b1134b12", "message": "use constant var", "committedDate": "2020-02-11T23:01:25Z", "type": "commit"}]}