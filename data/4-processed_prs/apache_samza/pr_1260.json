{"pr_number": 1260, "pr_title": "SAMZA-2446: Invoke onCheckpoint only for registered SSPs", "pr_createdAt": "2020-01-27T23:31:23Z", "pr_url": "https://github.com/apache/samza/pull/1260", "timeline": [{"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605", "url": "https://github.com/apache/samza/commit/54a5b0cde16fe66e56096d7f273bdcfe41100605", "message": "OffsetManager should only invoke checkpointListener for SSPs that are registered with it", "committedDate": "2020-01-27T23:28:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODYyOA==", "url": "https://github.com/apache/samza/pull/1260#discussion_r371568628", "bodyText": "Minor: Can we do the following?\nval registeredSSPs = systemStreamPartitions.getOrElse(taskName, Set())", "author": "prateekm", "createdAt": "2020-01-28T01:15:46Z", "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager\n+      val registeredSSPs = systemStreamPartitions.getOrElse(taskName, immutable.Set[SystemStreamPartition]())", "originalCommit": "54a5b0cde16fe66e56096d7f273bdcfe41100605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4MDgwOA==", "url": "https://github.com/apache/samza/pull/1260#discussion_r371580808", "bodyText": "We need to indicate the type somewhere or the compiler throws up. E.g.\nval registeredSSPs = systemStreamPartitions.getOrElse(taskName, Set[SystemStreamPartition]()", "author": "bkonold", "createdAt": "2020-01-28T02:12:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODYyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODcxNQ==", "url": "https://github.com/apache/samza/pull/1260#discussion_r371568715", "bodyText": "Let's add a comment explaining when this will not be the case.", "author": "prateekm", "createdAt": "2020-01-28T01:16:12Z", "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager", "originalCommit": "54a5b0cde16fe66e56096d7f273bdcfe41100605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4MDg1NQ==", "url": "https://github.com/apache/samza/pull/1260#discussion_r371580855", "bodyText": "Good point, I'll add an example.", "author": "bkonold", "createdAt": "2020-01-28T02:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODcxNQ=="}], "type": "inlineReview"}, {"oid": "2a8aac2fa31b8ff0b996f46bf0c9d7a3c7ea9638", "url": "https://github.com/apache/samza/commit/2a8aac2fa31b8ff0b996f46bf0c9d7a3c7ea9638", "message": "Add comment detailing when a Checkpoint would contain an SSP not regsitered with OffsetManager", "committedDate": "2020-01-28T02:22:55Z", "type": "commit"}]}