{"pr_number": 1251, "pr_title": "SAMZA-2431: Fix the checkpoint and changelog topic auto-creation.", "pr_createdAt": "2020-01-14T03:06:36Z", "pr_url": "https://github.com/apache/samza/pull/1251", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NjYyMA==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366496620", "bodyText": "Minor: Fix indentation.", "author": "prateekm", "createdAt": "2020-01-14T18:19:08Z", "path": "samza-kafka/src/main/java/org/apache/samza/system/kafka/KafkaSystemAdmin.java", "diffHunk": "@@ -541,8 +541,8 @@ public KafkaStreamSpec toKafkaSpec(StreamSpec spec) {\n           new KafkaStreamSpec(spec.getId(), spec.getPhysicalName(), systemName, 1, coordinatorStreamReplicationFactor,\n               coordinatorStreamProperties);\n     } else if (spec.isCheckpointStream()) {\n-      kafkaSpec = KafkaStreamSpec.fromSpec(StreamSpec.createCheckpointStreamSpec(spec.getPhysicalName(), systemName))\n-              .copyWithReplicationFactor(Integer.parseInt(new KafkaConfig(config).getCheckpointReplicationFactor().get()));\n+      kafkaSpec = KafkaStreamSpec.fromSpec(spec)", "originalCommit": "23ae3230ab2f0a715cb5b8858d62bedd04d0fba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUwMDIzMQ==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366500231", "bodyText": "Here's how this is done in KafkaCheckpointManager:\n    val checkpointSpec = KafkaStreamSpec.fromSpec(StreamSpec.createCheckpointStreamSpec(checkpointTopic, checkpointSystemName))\n        .copyWithReplicationFactor(kafkaConfig.getCheckpointReplicationFactor.get.toInt)\n        .copyWithProperties(kafkaConfig.getCheckpointTopicProperties)\n\nCan we do that here for consistency?", "author": "prateekm", "createdAt": "2020-01-14T18:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NjYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyNzgyNw==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366527827", "bodyText": "Fixed the indentation.\nUpdated the checkpoint spec building to be consistent with KafkaCheckpointManager.", "author": "shanthoosh", "createdAt": "2020-01-14T19:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NjYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NzEyOQ==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366497129", "bodyText": "Minor: Can use 'rocksDbTtl' here instead of getting it again.", "author": "prateekm", "createdAt": "2020-01-14T18:20:13Z", "path": "samza-kafka/src/main/scala/org/apache/samza/config/KafkaConfig.scala", "diffHunk": "@@ -316,16 +316,18 @@ class KafkaConfig(config: Config) extends ScalaMapConfig(config) {\n     val filteredConfigs = config.subset(KafkaConfig.CHANGELOG_STREAM_KAFKA_SETTINGS format name, true)\n     val kafkaChangeLogProperties = new Properties\n \n-    val appConfig = new ApplicationConfig(config)\n     // SAMZA-1600: do not use the combination of \"compact,delete\" as cleanup policy until we pick up Kafka broker 0.11.0.57,\n     // 1.0.2, or 1.1.0 (see KAFKA-6568)\n \n     // Adjust changelog topic setting, when TTL is set on a RocksDB store\n     //  - Disable log compaction on Kafka changelog topic\n     //  - Set topic TTL to be the same as RocksDB TTL\n-    Option(config.get(\"stores.%s.rocksdb.ttl.ms\" format name)) match {\n+    val storeTTLkey = \"stores.%s.rocksdb.ttl.ms\" format name\n+    Option(config.get(storeTTLkey)) match {\n       case Some(rocksDbTtl) =>\n-        if (!config.containsKey(\"stores.%s.changelog.kafka.cleanup.policy\" format name)) {\n+        if (config.getInt(storeTTLkey, 0) < 0) {", "originalCommit": "23ae3230ab2f0a715cb5b8858d62bedd04d0fba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NzM0Nw==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366497347", "bodyText": "Set the max.message.bytes property too (line 338)", "author": "prateekm", "createdAt": "2020-01-14T18:20:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NzEyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyODc4MA==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366528780", "bodyText": "Done.", "author": "shanthoosh", "createdAt": "2020-01-14T19:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5NzEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5ODY3MA==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366498670", "bodyText": "Do you need this containsKey check in the new condition as well?", "author": "prateekm", "createdAt": "2020-01-14T18:23:37Z", "path": "samza-kafka/src/main/scala/org/apache/samza/config/KafkaConfig.scala", "diffHunk": "@@ -316,16 +316,18 @@ class KafkaConfig(config: Config) extends ScalaMapConfig(config) {\n     val filteredConfigs = config.subset(KafkaConfig.CHANGELOG_STREAM_KAFKA_SETTINGS format name, true)\n     val kafkaChangeLogProperties = new Properties\n \n-    val appConfig = new ApplicationConfig(config)\n     // SAMZA-1600: do not use the combination of \"compact,delete\" as cleanup policy until we pick up Kafka broker 0.11.0.57,\n     // 1.0.2, or 1.1.0 (see KAFKA-6568)\n \n     // Adjust changelog topic setting, when TTL is set on a RocksDB store\n     //  - Disable log compaction on Kafka changelog topic\n     //  - Set topic TTL to be the same as RocksDB TTL\n-    Option(config.get(\"stores.%s.rocksdb.ttl.ms\" format name)) match {\n+    val storeTTLkey = \"stores.%s.rocksdb.ttl.ms\" format name\n+    Option(config.get(storeTTLkey)) match {\n       case Some(rocksDbTtl) =>\n-        if (!config.containsKey(\"stores.%s.changelog.kafka.cleanup.policy\" format name)) {\n+        if (config.getInt(storeTTLkey, 0) < 0) {\n+          kafkaChangeLogProperties.setProperty(\"cleanup.policy\", \"compact\")\n+        } else if (!config.containsKey(\"stores.%s.changelog.kafka.cleanup.policy\" format name)) {", "originalCommit": "23ae3230ab2f0a715cb5b8858d62bedd04d0fba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0MTk4OQ==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366541989", "bodyText": "Yes.  At the end of this function, the changelog properties if defined for the store in user-config are picked-up and populated in the resultant change-log-topic-properties. So this cleanup.policy check is still necessary. We could simplify the code, but I prefer not to couple clean-up with a critical-fix.  What do you think?", "author": "shanthoosh", "createdAt": "2020-01-14T19:55:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5ODY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MTM0Mg==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366591342", "bodyText": "Why not kafkaConfig.getCheckpointTopicProperties?", "author": "prateekm", "createdAt": "2020-01-14T21:51:19Z", "path": "samza-kafka/src/main/java/org/apache/samza/system/kafka/KafkaSystemAdmin.java", "diffHunk": "@@ -541,8 +541,11 @@ public KafkaStreamSpec toKafkaSpec(StreamSpec spec) {\n           new KafkaStreamSpec(spec.getId(), spec.getPhysicalName(), systemName, 1, coordinatorStreamReplicationFactor,\n               coordinatorStreamProperties);\n     } else if (spec.isCheckpointStream()) {\n-      kafkaSpec = KafkaStreamSpec.fromSpec(StreamSpec.createCheckpointStreamSpec(spec.getPhysicalName(), systemName))\n-              .copyWithReplicationFactor(Integer.parseInt(new KafkaConfig(config).getCheckpointReplicationFactor().get()));\n+      Properties checkpointTopicProperties = new Properties();\n+      checkpointTopicProperties.putAll(spec.getConfig());\n+      kafkaSpec = KafkaStreamSpec.fromSpec(StreamSpec.createCheckpointStreamSpec(spec.getPhysicalName(), spec.getSystemName()))\n+              .copyWithReplicationFactor(Integer.parseInt(new KafkaConfig(config).getCheckpointReplicationFactor().get()))\n+              .copyWithProperties(checkpointTopicProperties);", "originalCommit": "f56966c1b441223cf03f4377af63abec9970a667", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwODMyNg==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366608326", "bodyText": "The control flow to create the checkpoint stream is the following:\n\nBuild the checkpoint spec in KafkaCheckpointManagerFactory, which uses kafkaConfig.getCheckpointProperties to populate the config in CheckpointSpec.\nKafkaCheckpointManager.createStream uses the checkpoint spec that was built from 1 and KafkaSystemAdmin.createStream in-turn invokes KafkaSystemAdmin.toKafkaSpec.\nKafkaSystemAdmin.toKafkaSpec(CheckpointSpec) above is used to convert the incoming spec of type StreamSpec to KafkaStreamSpec .\n\nThe config in incoming checkpoint StreamSpec is already built using   kafkaConfig.getCheckpointTopicProperties in KafkaCheckpointManagerFactory. So using kafkaConfig.getCheckpointProperties here again would be redundant, unnecessary and might return incorrect config-bag.\nWhat do you think?", "author": "shanthoosh", "createdAt": "2020-01-14T22:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MTM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYxODQwMQ==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366618401", "bodyText": "Got it, so the spec.getConfig here is already the checkpoint topic related subset. In that case, LGTM.", "author": "prateekm", "createdAt": "2020-01-14T23:01:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MTM0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzOTkxMg==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366639912", "bodyText": "We can do it separately, can we add .copyWithConfig or .copyWithMap which takes Config or Map<String, String> ?\ncopyWithProperties is not user friendly, as we are converting a Map/Config to a properties, and this method basically convert it back.", "author": "kw2542", "createdAt": "2020-01-15T00:16:48Z", "path": "samza-kafka/src/main/java/org/apache/samza/system/kafka/KafkaSystemAdmin.java", "diffHunk": "@@ -541,8 +541,11 @@ public KafkaStreamSpec toKafkaSpec(StreamSpec spec) {\n           new KafkaStreamSpec(spec.getId(), spec.getPhysicalName(), systemName, 1, coordinatorStreamReplicationFactor,\n               coordinatorStreamProperties);\n     } else if (spec.isCheckpointStream()) {\n-      kafkaSpec = KafkaStreamSpec.fromSpec(StreamSpec.createCheckpointStreamSpec(spec.getPhysicalName(), systemName))\n-              .copyWithReplicationFactor(Integer.parseInt(new KafkaConfig(config).getCheckpointReplicationFactor().get()));\n+      Properties checkpointTopicProperties = new Properties();\n+      checkpointTopicProperties.putAll(spec.getConfig());\n+      kafkaSpec = KafkaStreamSpec.fromSpec(StreamSpec.createCheckpointStreamSpec(spec.getPhysicalName(), spec.getSystemName()))\n+              .copyWithReplicationFactor(Integer.parseInt(new KafkaConfig(config).getCheckpointReplicationFactor().get()))\n+              .copyWithProperties(checkpointTopicProperties);", "originalCommit": "f56966c1b441223cf03f4377af63abec9970a667", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1NTI5Ng==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366655296", "bodyText": "Yes, adding the copyWithConfig to KafkaStreamSpec might be good convenience API. We've additional cleanup planned with this control-flow in the near-future. If acceptable, then I can couple this change with that. Since it's a critical bug-fix, I would prefer to keep the change minimal by containing it to the fix alone and do the clean-up later.", "author": "shanthoosh", "createdAt": "2020-01-15T01:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzOTkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY0MTMwNA==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366641304", "bodyText": "any specific reason to split this line into two? val storeTTLkey does not seem to be used elsewhere.", "author": "kw2542", "createdAt": "2020-01-15T00:21:38Z", "path": "samza-kafka/src/main/scala/org/apache/samza/config/KafkaConfig.scala", "diffHunk": "@@ -316,16 +316,19 @@ class KafkaConfig(config: Config) extends ScalaMapConfig(config) {\n     val filteredConfigs = config.subset(KafkaConfig.CHANGELOG_STREAM_KAFKA_SETTINGS format name, true)\n     val kafkaChangeLogProperties = new Properties\n \n-    val appConfig = new ApplicationConfig(config)\n     // SAMZA-1600: do not use the combination of \"compact,delete\" as cleanup policy until we pick up Kafka broker 0.11.0.57,\n     // 1.0.2, or 1.1.0 (see KAFKA-6568)\n \n     // Adjust changelog topic setting, when TTL is set on a RocksDB store\n     //  - Disable log compaction on Kafka changelog topic\n     //  - Set topic TTL to be the same as RocksDB TTL\n-    Option(config.get(\"stores.%s.rocksdb.ttl.ms\" format name)) match {\n+    val storeTTLkey = \"stores.%s.rocksdb.ttl.ms\" format name\n+    Option(config.get(storeTTLkey)) match {", "originalCommit": "f56966c1b441223cf03f4377af63abec9970a667", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1NTMwOQ==", "url": "https://github.com/apache/samza/pull/1251#discussion_r366655309", "bodyText": "Removed.", "author": "shanthoosh", "createdAt": "2020-01-15T01:18:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY0MTMwNA=="}], "type": "inlineReview"}, {"oid": "a38393967b73546ddef2ceef9bc33396381b0767", "url": "https://github.com/apache/samza/commit/a38393967b73546ddef2ceef9bc33396381b0767", "message": "Fix the checkpoint and changelog topic creation configurations.", "committedDate": "2020-01-15T02:11:15Z", "type": "commit"}, {"oid": "f5df1650f62412c4b8bd068ada0628e6be71bc21", "url": "https://github.com/apache/samza/commit/f5df1650f62412c4b8bd068ada0628e6be71bc21", "message": "Address review comments.", "committedDate": "2020-01-15T02:11:15Z", "type": "commit"}, {"oid": "934f5067903ba406bfe4d29514465d21808613a0", "url": "https://github.com/apache/samza/commit/934f5067903ba406bfe4d29514465d21808613a0", "message": "Address review comments.", "committedDate": "2020-01-15T02:11:15Z", "type": "commit"}, {"oid": "934f5067903ba406bfe4d29514465d21808613a0", "url": "https://github.com/apache/samza/commit/934f5067903ba406bfe4d29514465d21808613a0", "message": "Address review comments.", "committedDate": "2020-01-15T02:11:15Z", "type": "forcePushed"}]}