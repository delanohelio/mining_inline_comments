{"pr_number": 1364, "pr_title": "SAMZA-2534: AzureBlobSystemProducer: Enable adding of number of records in blob as metadata of the blob", "pr_createdAt": "2020-05-18T22:44:31Z", "pr_url": "https://github.com/apache/samza/pull/1364", "timeline": [{"oid": "6ac55fe66e57aa6e11a67dacef14bc62f1d3696a", "url": "https://github.com/apache/samza/commit/6ac55fe66e57aa6e11a67dacef14bc62f1d3696a", "message": "AzureBlobSystemProducer: Enable adding of number of records in blob as metadata of the blob", "committedDate": "2020-05-18T20:54:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NTAzOQ==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427765039", "bodyText": "Would it be better to use AtomicLong here to ensure that all access to the member are atomic?", "author": "bkonold", "createdAt": "2020-05-20T06:17:36Z", "path": "samza-azure/src/main/java/org/apache/samza/system/azureblob/avro/AzureBlobOutputStream.java", "diffHunk": "@@ -85,6 +85,7 @@\n \n   private volatile boolean isClosed = false;\n   private long totalUploadedBlockSize = 0;\n+  private long totalNumberOfRecordsInBlob = 0;", "originalCommit": "6ac55fe66e57aa6e11a67dacef14bc62f1d3696a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTgyNg==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427769826", "bodyText": "Was there any consideration given to using AtomicLong here instead? If threading is involved, it could more clearly express that any modifications will be atomic without the need to worry about method synchronization.", "author": "bkonold", "createdAt": "2020-05-20T06:29:55Z", "path": "samza-azure/src/main/java/org/apache/samza/system/azureblob/avro/AzureBlobOutputStream.java", "diffHunk": "@@ -85,6 +85,7 @@\n \n   private volatile boolean isClosed = false;\n   private long totalUploadedBlockSize = 0;\n+  private long totalNumberOfRecordsInBlob = 0;", "originalCommit": "6ac55fe66e57aa6e11a67dacef14bc62f1d3696a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MzkwMg==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427783902", "bodyText": "AtomicLong is a nice thing to do. However, the methods of this class are all synchronized as there are other aspects beyond this variable that require single threaded access.", "author": "lakshmi-manasa-g", "createdAt": "2020-05-20T07:02:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5OTcyNA==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427799724", "bodyText": "Cool. That's fine then.", "author": "bkonold", "createdAt": "2020-05-20T07:34:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTk2MA==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427769960", "bodyText": "What will this be used for or what do we anticipate it will be used for?", "author": "bkonold", "createdAt": "2020-05-20T06:30:14Z", "path": "samza-azure/src/main/java/org/apache/samza/system/azureblob/utils/BlobMetadataContext.java", "diffHunk": "@@ -25,10 +25,12 @@\n public class BlobMetadataContext {\n   private final String streamName;\n   private final long blobSize;\n+  private final long numberOfMessagesInBlob;\n \n-  public BlobMetadataContext(String streamName, long blobSize) {\n+  public BlobMetadataContext(String streamName, long blobSize, long numberOfMessagesInBlob) {\n     this.streamName = streamName;\n     this.blobSize = blobSize;\n+    this.numberOfMessagesInBlob = numberOfMessagesInBlob;", "originalCommit": "6ac55fe66e57aa6e11a67dacef14bc62f1d3696a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MjIyOQ==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427782229", "bodyText": "This value will be given to the metadata generator Impl passed in by the user of the SystemProducer through a config (#1358).\nSo along with streamName, blobSize, this numberOfMessagesInBlob is anticipated to be used to build metadata properties of the blob created. Metadata proprties are kv pairs attached to the blob that can then be leveraged for kusto ingestion. So I expect the usage to be something like <stream:streamName, rawSize: blobSize, records: numberofMessages>", "author": "lakshmi-manasa-g", "createdAt": "2020-05-20T06:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgwNjY5OQ==", "url": "https://github.com/apache/samza/pull/1364#discussion_r427806699", "bodyText": "I see. Thanks for explaining.\nI notice that the interface of the generator takes a BlobMetadataContext and returns a Map<String,String>; out of curiosity, is it intended that a generator may have additional metadata (beyond what is carried within the BlobMetadataContext) to attach to the blob?", "author": "bkonold", "createdAt": "2020-05-20T07:47:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNDEzMQ==", "url": "https://github.com/apache/samza/pull/1364#discussion_r429424131", "bodyText": "I suggest adding some javadocs here to clarify how this needs to be used (i.e. only for passing metadata for the blob when closing the blob).\nSince DataFileWriter may still be buffering some data, this totalNumberOfRecordsInBlob may not reflect the exact number of records in the output stream until flush/close are actually called. Also, it would be good to clarify that this needs to be atomically incremented along with appending the record to the DataFileWriter (or else the final record count may not be correct when closing the blob). It looks like you are doing the atomic update already in AzureBlobAvroWriter, but the general management of writers and output streams is a bit complex, so it would be good to add some more details.", "author": "cameronlee314", "createdAt": "2020-05-22T19:38:07Z", "path": "samza-azure/src/main/java/org/apache/samza/system/azureblob/avro/AzureBlobOutputStream.java", "diffHunk": "@@ -230,6 +231,10 @@ public synchronized void releaseBuffer() throws IOException {\n     }\n   }\n \n+  public synchronized void incrementNumberOfRecordsInBlob() {", "originalCommit": "6ac55fe66e57aa6e11a67dacef14bc62f1d3696a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "926a2cb84a11604e974b7ab6cf3884f8ddd3dfba", "url": "https://github.com/apache/samza/commit/926a2cb84a11604e974b7ab6cf3884f8ddd3dfba", "message": "add java doc to clarify incrementNumberOfRecordsInBlob", "committedDate": "2020-05-27T19:27:46Z", "type": "commit"}]}