{"pr_number": 14907, "pr_title": "Fix flaky testTransactionMetadataCleanup", "pr_createdAt": "2020-07-28T15:32:05Z", "pr_url": "https://github.com/prestodb/presto/pull/14907", "timeline": [{"oid": "0cfbb6a32aab185396879e956ceecad1ec2d69e6", "url": "https://github.com/prestodb/presto/commit/0cfbb6a32aab185396879e956ceecad1ec2d69e6", "message": "Fix flaky testTransactionMetadataCleanup", "committedDate": "2020-07-28T16:57:08Z", "type": "forcePushed"}, {"oid": "9305ced71ac79416ca15288e40a89d6ab084ae23", "url": "https://github.com/prestodb/presto/commit/9305ced71ac79416ca15288e40a89d6ab084ae23", "message": "Fix flaky testTransactionMetadataCleanup", "committedDate": "2020-07-28T18:51:03Z", "type": "commit"}, {"oid": "9305ced71ac79416ca15288e40a89d6ab084ae23", "url": "https://github.com/prestodb/presto/commit/9305ced71ac79416ca15288e40a89d6ab084ae23", "message": "Fix flaky testTransactionMetadataCleanup", "committedDate": "2020-07-28T18:51:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjM0Mg==", "url": "https://github.com/prestodb/presto/pull/14907#discussion_r463222342", "bodyText": "do we still need this logging?", "author": "rschlussel", "createdAt": "2020-07-30T19:29:25Z", "path": "presto-tests/src/test/java/com/facebook/presto/tests/TestTransactionManagerIntegration.java", "diffHunk": "@@ -13,31 +13,63 @@\n  */\n package com.facebook.presto.tests;\n \n+import com.facebook.airlift.log.Logger;\n import com.facebook.presto.tests.tpch.TpchQueryRunnerBuilder;\n+import com.facebook.presto.transaction.TransactionInfo;\n+import com.facebook.presto.transaction.TransactionManager;\n import org.testng.annotations.Test;\n \n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.testng.Assert.assertTrue;\n \n public class TestTransactionManagerIntegration\n {\n+    private static final Logger log = Logger.get(TestTransactionManagerIntegration.class);\n+\n     @Test\n     public void testTransactionMetadataCleanup()\n             throws Exception\n     {\n         try (DistributedQueryRunner queryRunner = TpchQueryRunnerBuilder.builder().build()) {\n+            log.info(\"Start running testTransactionMetadataCleanup\");", "originalCommit": "9305ced71ac79416ca15288e40a89d6ab084ae23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzODk5MQ==", "url": "https://github.com/prestodb/presto/pull/14907#discussion_r463238991", "bodyText": "I am not sure whether this PR will completely solve the issue,  so additional logging of remaining transaction ids is another purpose of this PR.", "author": "viczhang861", "createdAt": "2020-07-30T20:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4MzczMg==", "url": "https://github.com/prestodb/presto/pull/14907#discussion_r463283732", "bodyText": "that's covered in the assertTrue at line 41.  this logging just shows the beginning and end of the test.", "author": "rschlussel", "createdAt": "2020-07-30T21:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMzOTk0Nw==", "url": "https://github.com/prestodb/presto/pull/14907#discussion_r463339947", "bodyText": "Right,  assertTrue will show up in error message, then I need to search previous logging to match which queries are not cleaned. An example of 5 actual transaction ids are shown here. #14835", "author": "viczhang861", "createdAt": "2020-07-31T00:17:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0MjQwMA==", "url": "https://github.com/prestodb/presto/pull/14907#discussion_r463642400", "bodyText": "Got it. Can you create an issue to clean up the logging in e.g. 2 months if the error doesn't recur?", "author": "rschlussel", "createdAt": "2020-07-31T14:25:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjM0Mg=="}], "type": "inlineReview"}]}