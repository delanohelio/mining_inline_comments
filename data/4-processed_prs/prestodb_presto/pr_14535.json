{"pr_number": 14535, "pr_title": "Remove workers from active nodes based on status", "pr_createdAt": "2020-05-14T23:00:39Z", "pr_url": "https://github.com/prestodb/presto/pull/14535", "timeline": [{"oid": "bbf0a7cfcfd77f1557875c219db1e76353ed81f4", "url": "https://github.com/prestodb/presto/commit/bbf0a7cfcfd77f1557875c219db1e76353ed81f4", "message": "Blacklist worker based on SMC status\nIntroducing StatusDetector that can detect if any worker is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation of StatusDetector is NoOp which does nothing. And can be overriden by providing specific implentation.", "committedDate": "2020-05-14T23:07:15Z", "type": "forcePushed"}, {"oid": "0c4acc057001c61874924d0d4183ebd912cec15c", "url": "https://github.com/prestodb/presto/commit/0c4acc057001c61874924d0d4183ebd912cec15c", "message": "Blacklist worker based on SMC status\nIntroducing StatusDetector that can detect if any worker is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation of StatusDetector is NoOp which does nothing. And can be overriden by providing specific implentation.", "committedDate": "2020-05-14T23:21:19Z", "type": "forcePushed"}, {"oid": "d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "url": "https://github.com/prestodb/presto/commit/d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "message": "Blacklist worker based on SMC status\n\nIntroducing StatusDetector that can detect if any worker is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation of StatusDetector is NoOp which does nothing. And can be overriden by providing specific implentation.", "committedDate": "2020-05-15T06:22:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODQ1Ng==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426018456", "bodyText": "Generally we don't use camelCase in package names. Lets change this to statusdetector. Also statusdetector is a very vague term - it doesn't clarify whose status is being detected.", "author": "mayankgarg1990", "createdAt": "2020-05-15T19:57:59Z", "path": "presto-main/src/main/java/com/facebook/presto/statusDetector/NoOpStatusDetector.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusDetector;", "originalCommit": "d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMDQ5MQ==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427600491", "bodyText": "updated and changed it to statuservice", "author": "swapsmagic", "createdAt": "2020-05-19T21:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODQ1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODY2Mg==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426018662", "bodyText": "Generally we don't use camelCase in package names. Lets change this to statusdetector. Also statusdetector is a very vague term - it doesn't clarify whose status is being detected.", "author": "mayankgarg1990", "createdAt": "2020-05-15T19:58:33Z", "path": "presto-main/src/main/java/com/facebook/presto/statusDetector/StatusDetector.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusDetector;", "originalCommit": "d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODg0Mw==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426018843", "bodyText": "is this being used?", "author": "mayankgarg1990", "createdAt": "2020-05-15T19:59:01Z", "path": "presto-main/src/main/java/com/facebook/presto/statusDetector/StatusDetector.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusDetector;\n+\n+import java.util.List;\n+\n+public interface StatusDetector\n+{\n+    List<String> getDisabled();\n+\n+    enum State\n+    {\n+        ENABLE,\n+        DISABLE\n+    }", "originalCommit": "d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5MDgyNA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426090824", "bodyText": "nope, removing.", "author": "swapsmagic", "createdAt": "2020-05-15T23:47:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODg0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxOTcyMA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426019720", "bodyText": "Currently this class only allows for support of disabled or blocked nodes. We should allow for someone to also specify the allowed nodes - if any node other than the allowed list tries to connect then it should fail.", "author": "mayankgarg1990", "createdAt": "2020-05-15T20:01:00Z", "path": "presto-main/src/main/java/com/facebook/presto/statusDetector/StatusDetector.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusDetector;\n+\n+import java.util.List;\n+\n+public interface StatusDetector\n+{\n+    List<String> getDisabled();", "originalCommit": "d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5MDc3Ng==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426090776", "bodyText": "Yes going to introduce that once this flow looks good.", "author": "swapsmagic", "createdAt": "2020-05-15T23:46:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxOTcyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NDcyMw==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426754723", "bodyText": "While I was initially thinking of getting this in Discovery service - seeing its complexity and this being the only use case - being here makes sense.\nI feel that this PR only should address this change. If we change the interface to isAllowed(String host) then we can just have the implementation take care of all the details - return true (for not care), return false (for disabled or if not in list) - just makes it a lot more flexible. What the proposed API prevents us from doing is to say give me a list of all the hosts that are disabled - but does it matter?", "author": "mayankgarg1990", "createdAt": "2020-05-18T16:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxOTcyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMDY1OA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427600658", "bodyText": "added isAllowed instead.", "author": "swapsmagic", "createdAt": "2020-05-19T21:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxOTcyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDU2Ng==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426020566", "bodyText": "Given that we have the no-op implementation - do we need the enabled flag?", "author": "mayankgarg1990", "createdAt": "2020-05-15T20:03:05Z", "path": "presto-main/src/main/java/com/facebook/presto/statusDetector/StatusDetectorConfig.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusDetector;\n+\n+import com.facebook.airlift.configuration.Config;\n+\n+public class StatusDetectorConfig\n+{\n+    private boolean enabled;\n+\n+    public boolean isEnabled()\n+    {\n+        return enabled;\n+    }\n+\n+    @Config(\"status-detector.enabled\")\n+    public StatusDetectorConfig setEnabled(boolean enabled)\n+    {\n+        this.enabled = enabled;\n+        return this;\n+    }\n+}", "originalCommit": "d97052dec75783fa9bbf4b1416d899bd9cbf6e1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5MTIzNA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426091234", "bodyText": "Having a config is good, so if we want to disable it without code change, we can do it quickly.", "author": "swapsmagic", "createdAt": "2020-05-15T23:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDU2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMTM4OQ==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427601389", "bodyText": "using it in DiscoveryNodeManager to decide if to call the NodeStatusService or not. Can be useful in case we want to disable the feature without deployment.", "author": "swapsmagic", "createdAt": "2020-05-19T21:09:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDU2Ng=="}], "type": "inlineReview"}, {"oid": "021395f8b5f225bddfd3f28eedade95fa2a42e87", "url": "https://github.com/prestodb/presto/commit/021395f8b5f225bddfd3f28eedade95fa2a42e87", "message": "Blacklist worker based on SMC status\n\nIntroducing StatusDetector that can detect if any worker is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation of StatusDetector is NoOp which does nothing. And can be overriden by providing specific implentation.", "committedDate": "2020-05-15T23:49:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNDE1NA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426104154", "bodyText": "just thinking about the name NodeStatusDetector, I think detector feels like it detects when the node is up/down/disabled etc.\nI feel like this is more of a NodeStatusService which provides a list of disabled servers.", "author": "ajaygeorge", "createdAt": "2020-05-16T01:31:04Z", "path": "presto-main/src/main/java/com/facebook/presto/statusdetector/NodeStatusDetector.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusdetector;\n+\n+import java.util.List;\n+\n+public interface NodeStatusDetector", "originalCommit": "021395f8b5f225bddfd3f28eedade95fa2a42e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDcxOA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427594718", "bodyText": "done.", "author": "swapsmagic", "createdAt": "2020-05-19T20:56:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNDE1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNDcxMg==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426104712", "bodyText": "How about Set<ServiceDescriptor> instead of List<String> since I think there cannot be duplicates and ServiceDescriptor captures the idea of node better than String", "author": "ajaygeorge", "createdAt": "2020-05-16T01:37:11Z", "path": "presto-main/src/main/java/com/facebook/presto/statusdetector/NodeStatusDetector.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusdetector;\n+\n+import java.util.List;\n+\n+public interface NodeStatusDetector\n+{\n+    List<String> getDisabled();", "originalCommit": "021395f8b5f225bddfd3f28eedade95fa2a42e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDYxNA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427594614", "bodyText": "change the interface as per Mayank's suggestion and so no longer need getDisabled method.", "author": "swapsmagic", "createdAt": "2020-05-19T20:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNDcxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNDg1Nw==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426104857", "bodyText": "Are we using this anywhere. ?\nShouldn't the filtering logic in DiscoveryNodeManager.java respect this flag?", "author": "ajaygeorge", "createdAt": "2020-05-16T01:38:41Z", "path": "presto-main/src/main/java/com/facebook/presto/statusdetector/NodeStatusDetectorConfig.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusdetector;\n+\n+import com.facebook.airlift.configuration.Config;\n+\n+public class NodeStatusDetectorConfig\n+{\n+    private boolean enabled;\n+\n+    public boolean isEnabled()", "originalCommit": "021395f8b5f225bddfd3f28eedade95fa2a42e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDQxMQ==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427594411", "bodyText": "made changes, please have a look at it again.", "author": "swapsmagic", "createdAt": "2020-05-19T20:55:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNDg1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODM1NA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426758354", "bodyText": "Can we define a lambda function instead?", "author": "cemcayiroglu", "createdAt": "2020-05-18T16:40:45Z", "path": "presto-main/src/main/java/com/facebook/presto/statusdetector/NoOpNodeStatusDetector.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusdetector;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+public class NoOpNodeStatusDetector", "originalCommit": "021395f8b5f225bddfd3f28eedade95fa2a42e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODc4NA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r426758784", "bodyText": "Sorry I think it is not possible because of the injection.", "author": "cemcayiroglu", "createdAt": "2020-05-18T16:41:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1ODM1NA=="}], "type": "inlineReview"}, {"oid": "2326e449f09daf7020e7cdf1f06e1205c7ee9433", "url": "https://github.com/prestodb/presto/commit/2326e449f09daf7020e7cdf1f06e1205c7ee9433", "message": "Blacklist worker based on SMC status\n\nIntroducing StatusDetector that can detect if any worker is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation of StatusDetector is NoOp which does nothing. And can be overriden by providing specific implentation.", "committedDate": "2020-05-19T01:00:27Z", "type": "forcePushed"}, {"oid": "dac5eaeb6ce11b75eaff8def9b05a610638707a0", "url": "https://github.com/prestodb/presto/commit/dac5eaeb6ce11b75eaff8def9b05a610638707a0", "message": "Blacklist worker based on SMC status\n\nIntroducing StatusDetector that can detect if any worker is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation of StatusDetector is NoOp which does nothing. And can be overriden by providing specific implentation.", "committedDate": "2020-05-19T20:19:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NTIzNw==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r427595237", "bodyText": "Call this AllowAllStatusService?", "author": "tdcmeehan", "createdAt": "2020-05-19T20:57:13Z", "path": "presto-main/src/main/java/com/facebook/presto/statusservice/NoOpNodeStatusService.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.statusservice;\n+\n+public class NoOpNodeStatusService", "originalCommit": "dac5eaeb6ce11b75eaff8def9b05a610638707a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "33d02008c982e109db4ae35cea456624056b8bdb", "url": "https://github.com/prestodb/presto/commit/33d02008c982e109db4ae35cea456624056b8bdb", "message": "Blacklist worker based on SMC status\n\nIntroducing NodeStatusService that can detect if any node is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation is to allow all nodes. And can be overriden by providing specific implentation.", "committedDate": "2020-05-19T21:05:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI5NjQxNQ==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r428296415", "bodyText": "change this to configBinder(binder).bindConfig(NodeStatusServiceConfig.class) - this will make it actually read configuration properties. As of now the class will be initialized like any other class", "author": "mayankgarg1990", "createdAt": "2020-05-20T20:44:29Z", "path": "presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java", "diffHunk": "@@ -260,6 +263,8 @@ protected void setup(Binder binder)\n         // analyze properties\n         binder.bind(AnalyzePropertyManager.class).in(Scopes.SINGLETON);\n \n+        binder.bind(NodeStatusServiceConfig.class).in(Scopes.SINGLETON);", "originalCommit": "33d02008c982e109db4ae35cea456624056b8bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM1OTQ5OA==", "url": "https://github.com/prestodb/presto/pull/14535#discussion_r428359498", "bodyText": "done", "author": "swapsmagic", "createdAt": "2020-05-20T23:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI5NjQxNQ=="}], "type": "inlineReview"}, {"oid": "7fbc73162ebb8009b9924f90735efdef6db713f6", "url": "https://github.com/prestodb/presto/commit/7fbc73162ebb8009b9924f90735efdef6db713f6", "message": "Blacklist worker based on SMC status\n\nIntroducing NodeStatusService that can detect if any node is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation is to allow all nodes. And can be overriden by providing specific implentation.", "committedDate": "2020-05-20T22:50:38Z", "type": "forcePushed"}, {"oid": "3bcf33e3bf07f5e1c6b6ed386ef92a74994aba7a", "url": "https://github.com/prestodb/presto/commit/3bcf33e3bf07f5e1c6b6ed386ef92a74994aba7a", "message": "Blacklist worker based on SMC status\n\nIntroducing NodeStatusService that can detect if any node is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation is to allow all nodes. And can be overriden by providing specific implentation.", "committedDate": "2020-05-21T18:37:14Z", "type": "forcePushed"}, {"oid": "b73117ef653d970e8606a3f4091909426f7d4a56", "url": "https://github.com/prestodb/presto/commit/b73117ef653d970e8606a3f4091909426f7d4a56", "message": "Blacklist worker based on SMC status\n\nIntroducing NodeStatusService that can detect if any node is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation is to allow all nodes. And can be overriden by providing specific implentation.", "committedDate": "2020-05-26T18:22:54Z", "type": "forcePushed"}, {"oid": "b2f87bb88656ee2f616b2c02a518d63fca986499", "url": "https://github.com/prestodb/presto/commit/b2f87bb88656ee2f616b2c02a518d63fca986499", "message": "Blacklist worker based on SMC status\n\nIntroducing NodeStatusService that can detect if any node is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation is to allow all nodes. And can be overriden by providing specific implentation.", "committedDate": "2020-05-26T19:48:03Z", "type": "commit"}, {"oid": "b2f87bb88656ee2f616b2c02a518d63fca986499", "url": "https://github.com/prestodb/presto/commit/b2f87bb88656ee2f616b2c02a518d63fca986499", "message": "Blacklist worker based on SMC status\n\nIntroducing NodeStatusService that can detect if any node is marked to be not used even if they are up (i.e. maintenannce mode)\nDefault implementation is to allow all nodes. And can be overriden by providing specific implentation.", "committedDate": "2020-05-26T19:48:03Z", "type": "forcePushed"}]}