{"pr_number": 14130, "pr_title": "Add release notes for 0.232", "pr_createdAt": "2020-02-20T23:53:04Z", "pr_url": "https://github.com/prestodb/presto/pull/14130", "timeline": [{"oid": "98c681cd592d9ce9a8fb65aa4f1bc172ee2e71a1", "url": "https://github.com/prestodb/presto/commit/98c681cd592d9ce9a8fb65aa4f1bc172ee2e71a1", "message": "Add release notes for 0.232", "committedDate": "2020-02-23T21:06:46Z", "type": "forcePushed"}, {"oid": "455e9aac691a3a54c2c7123a04e6ef38934bd87b", "url": "https://github.com/prestodb/presto/commit/455e9aac691a3a54c2c7123a04e6ef38934bd87b", "message": "Add release notes for 0.232", "committedDate": "2020-02-23T21:31:23Z", "type": "forcePushed"}, {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "url": "https://github.com/prestodb/presto/commit/feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "message": "Add release notes for 0.232", "committedDate": "2020-02-23T21:33:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NTk3MQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383345971", "bodyText": "Add rather than Added", "author": "rschlussel", "createdAt": "2020-02-24T15:49:08Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjM5Mg==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383346392", "bodyText": "Maybe note the default value", "author": "rschlussel", "createdAt": "2020-02-24T15:49:49Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0Njk4MA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383346980", "bodyText": "that's not a note?", "author": "rschlussel", "createdAt": "2020-02-24T15:50:38Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0ODA2Mw==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383348063", "bodyText": "Add configuration property xxx to control the frequency of reloading resource group information from the database.  The default value is yyy.", "author": "rschlussel", "createdAt": "2020-02-24T15:52:15Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0ODk4OQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383348989", "bodyText": "what does \"which is repurposed from list-non-build-in-functions\" mean?", "author": "rschlussel", "createdAt": "2020-02-24T15:53:34Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTIyMA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383349220", "bodyText": "what's the difference between these two notes?", "author": "rschlussel", "createdAt": "2020-02-24T15:53:53Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MDQyNA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383350424", "bodyText": "Replace ``isHidden`` attribute on AggregationFunction and ScalarFunction with ``visibility``.\n\nWhat values can visibility have, and what do they mean?", "author": "rschlussel", "createdAt": "2020-02-24T15:55:45Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTYyMA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383351620", "bodyText": "to reference a pr use\n:pr:14010", "author": "rschlussel", "createdAt": "2020-02-24T15:57:32Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjU4MQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383352581", "bodyText": "Add support for handling statistics to the Alluxio metastore\nAlso, does \"handling statistics\" mean?  Does that mean like for cost-based optimization?", "author": "rschlussel", "createdAt": "2020-02-24T15:58:54Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2MzE0Mg==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383563142", "bodyText": "yes from the pr its looks like it", "author": "bhhari", "createdAt": "2020-02-24T22:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383352775", "bodyText": "what does this mean? Is it user facing?", "author": "rschlussel", "createdAt": "2020-02-24T15:59:14Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2NTM3NA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383565374", "bodyText": "This is 3 byte header value which needs to used when there is compression for calculating maxBuffersize", "author": "bhhari", "createdAt": "2020-02-24T22:59:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3MDQzMQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383970431", "bodyText": "What would the user have seen? Is the following correct:\nFix an issue where queries could fail with buffer overflow when writing ORC files.", "author": "rschlussel", "createdAt": "2020-02-25T15:55:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NDUxMQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383354511", "bodyText": "Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.", "author": "rschlussel", "createdAt": "2020-02-24T16:01:58Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.\n+* Expose Hive table properties via system table$properties table.\n+* When ``DROP TABLE`` query fails because the table has being dropped by other query before this query finishes,  change error code name from ``HIVE_METASTORE_ERROR`` to  ``HIVE_TABLE_DROPPED_DURING_QUERY``.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NjY1OQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383356659", "bodyText": "Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximmum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default.", "author": "rschlussel", "createdAt": "2020-02-24T16:05:25Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.", "originalCommit": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b", "url": "https://github.com/prestodb/presto/commit/4df0f18ef47d633e57728a1462875e28d3871c2b", "message": "Add release notes for 0.232", "committedDate": "2020-02-24T22:55:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2MzI0MA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383963240", "bodyText": "the double backticks should be after \"node\" and not \"session\"", "author": "rschlussel", "createdAt": "2020-02-25T15:45:33Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.", "originalCommit": "4df0f18ef47d633e57728a1462875e28d3871c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NTA2NA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383965064", "bodyText": "Is this an SPI change?  It just looks like some added functions.", "author": "rschlussel", "createdAt": "2020-02-25T15:48:14Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.\n+* Add config ``internal-communication.server-info-communication-protocol`` to support Presto nodes to announce state with Thrift protocol. Use HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.\n+\n+Kafka changes\n+_____________\n+* Update kafka connector to 2.3.1, which improves implementation and performance (:pr:`13709`).\n+\n+Pinot Changes\n+_____________\n+* Replace config ``pinot.prefer-broker-queries`` with the inverse config ``pinot.forbid-broker-queries``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "originalCommit": "4df0f18ef47d633e57728a1462875e28d3871c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NTk2Mg==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383965962", "bodyText": "Add support for using the Thrift protocol to shuffle data.  This can be configured using the configuration property internal-communication.task-communication-protocol.  Possible values are HTTP or Thrift.", "author": "rschlussel", "createdAt": "2020-02-25T15:49:31Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.", "originalCommit": "4df0f18ef47d633e57728a1462875e28d3871c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NzkzOQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383967939", "bodyText": "Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property  internal-communication.server-info-communication-protocol.  Possible values are HTTP or Thrift.", "author": "rschlussel", "createdAt": "2020-02-25T15:52:27Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.\n+* Add config ``internal-communication.server-info-communication-protocol`` to support Presto nodes to announce state with Thrift protocol. Use HTTP or Thrift.", "originalCommit": "4df0f18ef47d633e57728a1462875e28d3871c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f", "url": "https://github.com/prestodb/presto/commit/70a9c0dd52409050dd6adecfe3832a263267969f", "message": "Add release notes for 0.232", "committedDate": "2020-02-25T19:51:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU1OQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091559", "bodyText": "nit: Kerberose should be capitalized", "author": "rschlussel", "createdAt": "2020-02-25T19:54:48Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.", "originalCommit": "70a9c0dd52409050dd6adecfe3832a263267969f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091593", "bodyText": "link to the docs for these functions", "author": "rschlussel", "createdAt": "2020-02-25T19:54:53Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "originalCommit": "70a9c0dd52409050dd6adecfe3832a263267969f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMTg4OA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384101888", "bodyText": "we don't have tdigest functions yet we have only qdigest\nhttps://prestodb.io/docs/current/functions/qdigest.html", "author": "bhhari", "createdAt": "2020-02-25T20:15:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNDUzOQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384104539", "bodyText": "@tdcmeehan can you add documentation for these functions?", "author": "rschlussel", "createdAt": "2020-02-25T20:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE0MDc4Ng==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384140786", "bodyText": "These are marked experimental, which means they are not listed by default.  I think the most appropriate time to add documentation is when they're enabled by default, so perhaps we should just remove this from the release notes?", "author": "tdcmeehan", "createdAt": "2020-02-25T21:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3Mzk5OQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384173999", "bodyText": "update the release notes to call out these are experimental functions", "author": "bhhari", "createdAt": "2020-02-25T22:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTg0Mg==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091842", "bodyText": "capitalize Kafka", "author": "rschlussel", "createdAt": "2020-02-25T19:55:24Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.\n+\n+Kafka changes\n+_____________\n+* Update kafka connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "originalCommit": "70a9c0dd52409050dd6adecfe3832a263267969f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MjcwOQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384092709", "bodyText": "I think this should be under Hive changes", "author": "rschlussel", "createdAt": "2020-02-25T19:56:56Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.", "originalCommit": "70a9c0dd52409050dd6adecfe3832a263267969f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "url": "https://github.com/prestodb/presto/commit/e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "message": "Add release notes for 0.232", "committedDate": "2020-02-25T20:16:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384103021", "bodyText": "Functions should be referenced like\n:func`tdigest_agg `, :func`merge`", "author": "caithagoras", "createdAt": "2020-02-25T20:17:43Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzc1OA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384103758", "bodyText": "https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines#formatting", "author": "caithagoras", "createdAt": "2020-02-25T20:19:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwOTg0OQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384109849", "bodyText": "these  functions are non-existent and will result in a error if you use :func", "author": "bhhari", "createdAt": "2020-02-25T20:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNDA2OA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384104068", "bodyText": "Remove this. This is not a user-facing change and should not be included.", "author": "caithagoras", "createdAt": "2020-02-25T20:19:55Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105715", "bodyText": "Improve ``Kafka`` connector implementation and performance (:pr:`13709`)\n```", "author": "caithagoras", "createdAt": "2020-02-25T20:23:21Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes\n+_____________\n+* Update KAFKA connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMDU2OA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384110568", "bodyText": "@rschlussel commented to make it capitalized", "author": "bhhari", "createdAt": "2020-02-25T20:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNTk0MQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384115941", "bodyText": "sorry, I meant capitalize the first letter since it's a proper noun.", "author": "rschlussel", "createdAt": "2020-02-25T20:45:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTc1OA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105758", "bodyText": "Changes", "author": "caithagoras", "createdAt": "2020-02-25T20:23:26Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105802", "bodyText": "Kerberos", "author": "caithagoras", "createdAt": "2020-02-25T20:23:30Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODQ0MA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108440", "bodyText": "@rschlussel commented to make it capitalized", "author": "bhhari", "createdAt": "2020-02-25T20:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMTUwMA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384111500", "bodyText": "I guess @rschlussel meant capitalized the first letter.\nKerberos is a special noun rather than an acronyms:  https://en.wikipedia.org/wiki/Kerberos_(protocol)", "author": "caithagoras", "createdAt": "2020-02-25T20:35:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNjQzNQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384106435", "bodyText": "The property is `false` by default.", "author": "caithagoras", "createdAt": "2020-02-25T20:24:48Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODEyMA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108120", "bodyText": "Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>`\n\nYou can use\nmake clean\nmake html\n\nto make sure the the generated HTML works as intended.", "author": "caithagoras", "createdAt": "2020-02-25T20:28:17Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODM5Ng==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108396", "bodyText": "``internal-communication.server-info-communication-protocol``", "author": "caithagoras", "createdAt": "2020-02-25T20:28:53Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODUyMA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108520", "bodyText": "``internal-communication.task-communication-protocol``", "author": "caithagoras", "createdAt": "2020-02-25T20:29:09Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.", "originalCommit": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNDE2Ng==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384114166", "bodyText": "ah missed it while changing", "author": "bhhari", "createdAt": "2020-02-25T20:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODUyMA=="}], "type": "inlineReview"}, {"oid": "e28f5d07599c25d06b0a2295a7e48db9d59846d1", "url": "https://github.com/prestodb/presto/commit/e28f5d07599c25d06b0a2295a7e48db9d59846d1", "message": "Add release notes for 0.232", "committedDate": "2020-02-25T20:46:01Z", "type": "forcePushed"}, {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "url": "https://github.com/prestodb/presto/commit/3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "message": "Add release notes for 0.232", "committedDate": "2020-02-25T22:27:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjMxNQ==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384166315", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              The property is `false` by default. (:pr:`14010`).\n          \n          \n            \n              The property is ``false`` by default. (:pr:`14010`).", "author": "rschlussel", "createdAt": "2020-02-25T22:30:47Z", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,54 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property ``internal-communication.task-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property ``internal-communication.server-info-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add experimental functions ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+  These can be enabled by using the session property ``experimental_functions_enabled`` and the configuration property ``experimental-functions-enabled``.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>.\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.\n+  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.\n+  The property is `false` by default. (:pr:`14010`).", "originalCommit": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzczMA==", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384173730", "bodyText": "updated", "author": "bhhari", "createdAt": "2020-02-25T22:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjMxNQ=="}], "type": "inlineReview"}, {"oid": "64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "url": "https://github.com/prestodb/presto/commit/64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "message": "Add release notes for 0.232", "committedDate": "2020-02-25T22:31:26Z", "type": "commit"}, {"oid": "64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "url": "https://github.com/prestodb/presto/commit/64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "message": "Add release notes for 0.232", "committedDate": "2020-02-25T22:31:26Z", "type": "forcePushed"}]}