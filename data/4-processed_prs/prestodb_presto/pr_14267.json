{"pr_number": 14267, "pr_title": "Handle coalesce partition handle when bucket count does not match but compatible", "pr_createdAt": "2020-03-19T01:33:17Z", "pr_url": "https://github.com/prestodb/presto/pull/14267", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0NzgyOA==", "url": "https://github.com/prestodb/presto/pull/14267#discussion_r394747828", "bodyText": "Should we also update the error message?", "author": "caithagoras", "createdAt": "2020-03-19T01:56:02Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java", "diffHunk": "@@ -317,9 +317,9 @@ else if (argument instanceof VariableReferenceExpression) {\n     }\n \n     // Maps VariableReferenceExpression in both partitions to an COALESCE expression, keeps constant arguments unchanged.\n-    public Optional<Partitioning> translateToCoalesce(Partitioning other)\n+    public Optional<Partitioning> translateToCoalesce(Partitioning other, Metadata metadata, Session session)\n     {\n-        checkArgument(this.handle.equals(other.handle), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);\n+        checkArgument(metadata.getCommonPartitioning(session, this.handle, other.handle).isPresent(), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);", "originalCommit": "d581cae3bb9e023cd2e130d78ba60a5dc5d161e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4OTM2NA==", "url": "https://github.com/prestodb/presto/pull/14267#discussion_r394789364", "bodyText": "what about:\n    this.handle.equals(other.handle) || metadata.isRefinedPartitioningOver(session, this, other) || metadata.isRefinedPartitioningOver(session, other, this)", "author": "wenleix", "createdAt": "2020-03-19T04:49:38Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java", "diffHunk": "@@ -317,9 +317,9 @@ else if (argument instanceof VariableReferenceExpression) {\n     }\n \n     // Maps VariableReferenceExpression in both partitions to an COALESCE expression, keeps constant arguments unchanged.\n-    public Optional<Partitioning> translateToCoalesce(Partitioning other)\n+    public Optional<Partitioning> translateToCoalesce(Partitioning other, Metadata metadata, Session session)\n     {\n-        checkArgument(this.handle.equals(other.handle), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);\n+        checkArgument(metadata.getCommonPartitioning(session, this.handle, other.handle).isPresent(), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);", "originalCommit": "d581cae3bb9e023cd2e130d78ba60a5dc5d161e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4OTczMg==", "url": "https://github.com/prestodb/presto/pull/14267#discussion_r394789732", "bodyText": "what about\n   && metadata.isRefinedPartitioningOver(session, probeProperties.getNodePartitioning().get().getHandle(), buildProperties.getNodePartitioning().get().getHandle()).isPresent()) || metadata.isRefinedPartitioningOver()...\n\nYou might want to save probeProperties.getNodePartitioning().get().getHandle() and buildProperties.getNodePartitioning().get().getHandle()).isPresent() as local variable.", "author": "wenleix", "createdAt": "2020-03-19T04:51:11Z", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java", "diffHunk": "@@ -449,9 +449,12 @@ public ActualProperties visitJoin(JoinNode node, List<ActualProperties> inputPro\n                                 .build();\n                     }\n \n-                    if (isOptimizeFullOuterJoinWithCoalesce(session) && probeProperties.getNodePartitioning().isPresent() && buildProperties.getNodePartitioning().isPresent()) {\n+                    if (isOptimizeFullOuterJoinWithCoalesce(session) &&\n+                            probeProperties.getNodePartitioning().isPresent() &&\n+                            buildProperties.getNodePartitioning().isPresent() &&\n+                            metadata.getCommonPartitioning(session, probeProperties.getNodePartitioning().get().getHandle(), buildProperties.getNodePartitioning().get().getHandle()).isPresent()) {", "originalCommit": "d581cae3bb9e023cd2e130d78ba60a5dc5d161e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b51d3f1f44ac6accccbf475253b899468df66eca", "url": "https://github.com/prestodb/presto/commit/b51d3f1f44ac6accccbf475253b899468df66eca", "message": "Handle coalesce partition handle with mismatched bucket count", "committedDate": "2020-03-20T18:19:14Z", "type": "forcePushed"}, {"oid": "1df68bf1d0ea2107d3ecbefed42a3e9572e6ed07", "url": "https://github.com/prestodb/presto/commit/1df68bf1d0ea2107d3ecbefed42a3e9572e6ed07", "message": "Change default value for colocated_join to true", "committedDate": "2020-03-23T19:32:26Z", "type": "commit"}, {"oid": "a529c0c9c8b0c8593264d5e878233a1220f050a9", "url": "https://github.com/prestodb/presto/commit/a529c0c9c8b0c8593264d5e878233a1220f050a9", "message": "Handle coalesce partition handle with mismatched bucket count", "committedDate": "2020-03-23T19:32:26Z", "type": "commit"}, {"oid": "a529c0c9c8b0c8593264d5e878233a1220f050a9", "url": "https://github.com/prestodb/presto/commit/a529c0c9c8b0c8593264d5e878233a1220f050a9", "message": "Handle coalesce partition handle with mismatched bucket count", "committedDate": "2020-03-23T19:32:26Z", "type": "forcePushed"}]}