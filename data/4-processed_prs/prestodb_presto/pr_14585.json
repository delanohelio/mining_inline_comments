{"pr_number": 14585, "pr_title": "Use local private credentials (json key file) to refresh GCS access token", "pr_createdAt": "2020-05-28T06:16:21Z", "pr_url": "https://github.com/prestodb/presto/pull/14585", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NzI2Mw==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432067263", "bodyText": "Do we need to hardcode the URL here? Maybe we can move it to a static variable.", "author": "ChunxuTang", "createdAt": "2020-05-28T19:24:25Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthInterceptor.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthInterceptor\n+        implements Interceptor\n+{\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthInterceptor(String credentialPath)\n+    {\n+        this.credentialsFilePath = requireNonNull(credentialPath);\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        return chain.proceed(attachGCSAccessToken(chain.request()));\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();\n+        return request.newBuilder()\n+                .addHeader(PRESTO_EXTRA_CREDENTIAL, GCS_CREDENTIALS_OAUTH_TOKEN_KEY + \"=\" + token.getTokenValue())\n+                .build();\n+    }\n+\n+    private synchronized GoogleCredentials getCredentials()\n+    {\n+        if (credentials == null) {\n+            credentials = createCredentials();\n+        }\n+        try {\n+            credentials.refreshIfExpired();\n+        }\n+        catch (IOException e) {\n+            throw new ClientException(\"Google credential refreshing error\", e);\n+        }\n+        return credentials;\n+    }\n+\n+    private GoogleCredentials createCredentials()\n+    {\n+        try {\n+            return GoogleCredentials.fromStream(new FileInputStream(credentialsFilePath)).createScoped(Collections.singleton(\"https://www.googleapis.com/auth/devstorage.read_only\"));", "originalCommit": "4e3b2d647675badb8df03c3d5cf78f72ff184f40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3MTc4Nw==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432671787", "bodyText": "Good catch,  will extract it as a constant val", "author": "beinan", "createdAt": "2020-05-29T18:46:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NzI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2ODM4NA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432068384", "bodyText": "The GCP documentation here (https://developers.google.com/identity/protocols/oauth2) recommends creating a signed JWT with the client ID and a private key from the GCP credential. Is this step automatically covered in the Google OAuth libs?", "author": "ChunxuTang", "createdAt": "2020-05-28T19:26:34Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthInterceptor.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthInterceptor\n+        implements Interceptor\n+{\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthInterceptor(String credentialPath)\n+    {\n+        this.credentialsFilePath = requireNonNull(credentialPath);\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        return chain.proceed(attachGCSAccessToken(chain.request()));\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();", "originalCommit": "4e3b2d647675badb8df03c3d5cf78f72ff184f40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3MTIwMg==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432671202", "bodyText": "Good call, I guess not.  I will post another commit or PR to support JWT with a given client ID", "author": "beinan", "createdAt": "2020-05-29T18:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2ODM4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA3MDU0OQ==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432070549", "bodyText": "Is the synchronized keyword necessary here? Will this function be invoked in a multi-threaded situation?", "author": "ChunxuTang", "createdAt": "2020-05-28T19:30:48Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthInterceptor.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthInterceptor\n+        implements Interceptor\n+{\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthInterceptor(String credentialPath)\n+    {\n+        this.credentialsFilePath = requireNonNull(credentialPath);\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        return chain.proceed(attachGCSAccessToken(chain.request()));\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();\n+        return request.newBuilder()\n+                .addHeader(PRESTO_EXTRA_CREDENTIAL, GCS_CREDENTIALS_OAUTH_TOKEN_KEY + \"=\" + token.getTokenValue())\n+                .build();\n+    }\n+\n+    private synchronized GoogleCredentials getCredentials()", "originalCommit": "4e3b2d647675badb8df03c3d5cf78f72ff184f40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2NzYzNw==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432667637", "bodyText": "Good call.  This interceptor is used by presto-cli and presto-jdbc.  I think presto-jdbc might have some queries running in parallel.  Even for a single query, during the http conversation,  there are still multiple http calls, some of which might be triggered in an asynchronous way.", "author": "beinan", "createdAt": "2020-05-29T18:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA3MDU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3MzM0MA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432673340", "bodyText": "Gotcha. Thanks for your explanation.", "author": "ChunxuTang", "createdAt": "2020-05-29T18:49:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA3MDU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUxOA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799518", "bodyText": "add one blank line between private static final and private final", "author": "zhenxiao", "createdAt": "2020-05-30T01:53:03Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+    private final ClientSession session;", "originalCommit": "745a04286c14c3827ac79c378eaa2d1f1eb65484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NzMwMg==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463467302", "bodyText": "done", "author": "beinan", "createdAt": "2020-07-31T08:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUzMw==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799533", "bodyText": "shall we keep hive here? kind of misleading. If the session property is already defined, could we import the string from other class?", "author": "zhenxiao", "createdAt": "2020-05-30T01:53:20Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";", "originalCommit": "745a04286c14c3827ac79c378eaa2d1f1eb65484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4MzUzNA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r462683534", "bodyText": "The \"hive.gcs.credentials.path\" is the key I newly added.   The other 'hive.gcs.oauth' is an existing one, which can be also found in presto-hive.\npresto-hive/src/main/java/com/facebook/presto/hive/gcs/GcsConfigurationProvider.java\n28:    private static final String GCS_OAUTH_KEY = \"hive.gcs.oauth\";\nIf we imported the constant \"hive.gcs.oauth\" from presto-hive,  we might introduce a new dependency from presto-client to presto-hive.  Shall we do that?\nI'm just thinking the name of these two keys need to be consistent.", "author": "beinan", "createdAt": "2020-07-30T01:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNDQzNg==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463234436", "bodyText": "get it. no need to have dependency from presto-hive\nkeep hive.gcs.credentials.path is fine", "author": "zhenxiao", "createdAt": "2020-07-30T19:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTU1NA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799554", "bodyText": "remove this blank line", "author": "zhenxiao", "createdAt": "2020-05-30T01:53:33Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+    private final ClientSession session;\n+\n+    private String credentialsFilePath;\n+", "originalCommit": "745a04286c14c3827ac79c378eaa2d1f1eb65484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NzIxOQ==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463467219", "bodyText": "done", "author": "beinan", "createdAt": "2020-07-31T08:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTU1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTcxMw==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799713", "bodyText": "make constant:\nhttps://www.googleapis.com/auth/devstorage.read_only", "author": "zhenxiao", "createdAt": "2020-05-30T01:55:44Z", "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+    private final ClientSession session;\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthHandler(ClientSession session)\n+    {\n+        this.session = requireNonNull(session);\n+        this.credentialsFilePath = session.getExtraCredentials().get(GCS_CREDENTIALS_PATH_KEY);\n+    }\n+\n+    @Nullable\n+    @Override\n+    public Request authenticate(Route route, Response response)\n+            throws IOException\n+    {\n+        return attachGCSAccessToken(response.request());\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        try {\n+            return chain.proceed(attachGCSAccessToken(chain.request()));\n+        }\n+        catch (ClientException ignored) {\n+            return chain.proceed(chain.request());\n+        }\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();\n+        return request.newBuilder()\n+                .addHeader(PRESTO_EXTRA_CREDENTIAL, GCS_CREDENTIALS_OAUTH_TOKEN_KEY + \"=\" + token.getTokenValue())\n+                .build();\n+    }\n+\n+    private synchronized GoogleCredentials getCredentials()\n+    {\n+        if (credentials == null) {\n+            credentials = createCredentials();\n+        }\n+        try {\n+            credentials.refreshIfExpired();\n+        }\n+        catch (IOException e) {\n+            throw new ClientException(\"Google credential refreshing error\", e);\n+        }\n+        return credentials;\n+    }\n+\n+    private GoogleCredentials createCredentials()\n+    {\n+        try {\n+            return GoogleCredentials.fromStream(new FileInputStream(credentialsFilePath)).createScoped(Collections.singleton(\"https://www.googleapis.com/auth/devstorage.read_only\"));", "originalCommit": "745a04286c14c3827ac79c378eaa2d1f1eb65484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NzA4MQ==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463467081", "bodyText": "done", "author": "beinan", "createdAt": "2020-07-31T08:08:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTcxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTc5MA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799790", "bodyText": "oh, this PR is a dependency of:\nprestodb/presto-hadoop-apache2#43", "author": "zhenxiao", "createdAt": "2020-05-30T01:56:28Z", "path": "pom.xml", "diffHunk": "@@ -548,7 +548,7 @@\n             <dependency>\n                 <groupId>com.facebook.presto.hadoop</groupId>\n                 <artifactId>hadoop-apache2</artifactId>\n-                <version>2.7.4-7</version>\n+                <version>2.7.4-8-beinan</version>", "originalCommit": "ddfb2d3f7e3fc09070625b8fd8dac59426c9c3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2Njk5Mg==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463466992", "bodyText": "We have updated the version to 2.7.4-8 in another pr", "author": "beinan", "createdAt": "2020-07-31T08:08:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTc5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTkxNA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799914", "bodyText": "static import GCSOAuthInterceptor.GCS_CREDENTIALS_PATH_KEY", "author": "zhenxiao", "createdAt": "2020-05-30T01:57:32Z", "path": "presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -186,6 +188,10 @@ public void setupClient(OkHttpClient.Builder builder)\n                                 .orElseGet(() -> defaultCredentialCachePath().map(File::new).orElse(null))));\n             }\n \n+            Map<String, String> extraCredentials = EXTRA_CREDENTIALS.getValue(properties).orElse(ImmutableMap.of());\n+            Optional.ofNullable(extraCredentials.get(GCSOAuthInterceptor.GCS_CREDENTIALS_PATH_KEY))", "originalCommit": "8cd37a79efb808264f56aab5e25cecbaad6595ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NjY1OQ==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463466659", "bodyText": "done", "author": "beinan", "createdAt": "2020-07-31T08:07:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTkxNA=="}], "type": "inlineReview"}, {"oid": "11bc554bdaf2ef39660130e19a649d2aa43408cc", "url": "https://github.com/prestodb/presto/commit/11bc554bdaf2ef39660130e19a649d2aa43408cc", "message": "Fix transitive dependencies conflict of google oauth libraries", "committedDate": "2020-07-17T08:52:55Z", "type": "forcePushed"}, {"oid": "6de3aa26245600deb46663284f35f271a0b91d7f", "url": "https://github.com/prestodb/presto/commit/6de3aa26245600deb46663284f35f271a0b91d7f", "message": "Implement GCS OAuth token handler", "committedDate": "2020-07-29T18:39:43Z", "type": "commit"}, {"oid": "6b335f32837bf31750f1d4a98d7c1f8352ea3b3c", "url": "https://github.com/prestodb/presto/commit/6b335f32837bf31750f1d4a98d7c1f8352ea3b3c", "message": "Make QueryRunner support GCS private key handling", "committedDate": "2020-07-29T18:40:57Z", "type": "commit"}, {"oid": "2985af79e58e628cf6d9005baab73e4aca628a49", "url": "https://github.com/prestodb/presto/commit/2985af79e58e628cf6d9005baab73e4aca628a49", "message": "Make presto jdbc driver support Google OAuth private key handling", "committedDate": "2020-07-29T18:40:58Z", "type": "commit"}, {"oid": "83931d3a88948ceaa9fc870ac00ab8422b95f6dd", "url": "https://github.com/prestodb/presto/commit/83931d3a88948ceaa9fc870ac00ab8422b95f6dd", "message": "Fix transitive dependencies conflict of google oauth libraries", "committedDate": "2020-07-29T18:42:25Z", "type": "commit"}, {"oid": "47236c34513b1dbe60bfa73cd9a77b4c356ca3a4", "url": "https://github.com/prestodb/presto/commit/47236c34513b1dbe60bfa73cd9a77b4c356ca3a4", "message": "Add Google OAuth scopes to extra credentials", "committedDate": "2020-07-31T07:59:09Z", "type": "forcePushed"}, {"oid": "56c88e10d6dd7bcb6e94eb96be91091b4a0dad02", "url": "https://github.com/prestodb/presto/commit/56c88e10d6dd7bcb6e94eb96be91091b4a0dad02", "message": "Add Google OAuth scopes to extra credentials", "committedDate": "2020-07-31T08:04:18Z", "type": "forcePushed"}, {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2", "url": "https://github.com/prestodb/presto/commit/e852a2b6791288ed358354d987c6d5ac57815fc2", "message": "Add Google OAuth scopes to extra credentials", "committedDate": "2020-07-31T18:46:44Z", "type": "commit"}, {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2", "url": "https://github.com/prestodb/presto/commit/e852a2b6791288ed358354d987c6d5ac57815fc2", "message": "Add Google OAuth scopes to extra credentials", "committedDate": "2020-07-31T18:46:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5NDc5OA==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463794798", "bodyText": "shall we keep the blank line?", "author": "zhenxiao", "createdAt": "2020-07-31T19:34:21Z", "path": "pom.xml", "diffHunk": "@@ -1174,7 +1185,6 @@\n                     </exclusion>\n                 </exclusions>\n             </dependency>\n-", "originalCommit": "e852a2b6791288ed358354d987c6d5ac57815fc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMjIzOQ==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463822239", "bodyText": "done", "author": "beinan", "createdAt": "2020-07-31T20:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5NDc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5NDg5Mw==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463794893", "bodyText": "keep the blank line for format", "author": "zhenxiao", "createdAt": "2020-07-31T19:34:36Z", "path": "pom.xml", "diffHunk": "@@ -1158,7 +1170,6 @@\n                     </exclusion>\n                 </exclusions>\n             </dependency>\n-", "originalCommit": "e852a2b6791288ed358354d987c6d5ac57815fc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMjIyMg==", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463822222", "bodyText": "done", "author": "beinan", "createdAt": "2020-07-31T20:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5NDg5Mw=="}], "type": "inlineReview"}, {"oid": "f3b747de9e4d0981e95803478afe024965db94db", "url": "https://github.com/prestodb/presto/commit/f3b747de9e4d0981e95803478afe024965db94db", "message": "Add blank line for format", "committedDate": "2020-07-31T23:29:14Z", "type": "forcePushed"}, {"oid": "b17a3e0c0eb193cd357032895f7f4b57bbba3cb9", "url": "https://github.com/prestodb/presto/commit/b17a3e0c0eb193cd357032895f7f4b57bbba3cb9", "message": "Add blank line for format", "committedDate": "2020-08-01T04:34:22Z", "type": "forcePushed"}, {"oid": "09af78c60303cc196f5f5cbdb746e1c68f68526b", "url": "https://github.com/prestodb/presto/commit/09af78c60303cc196f5f5cbdb746e1c68f68526b", "message": "Add blank line for format", "committedDate": "2020-08-01T07:02:26Z", "type": "forcePushed"}, {"oid": "5bb06893ebb96ec645ab6b8bfc394bb05184b752", "url": "https://github.com/prestodb/presto/commit/5bb06893ebb96ec645ab6b8bfc394bb05184b752", "message": "Add blank line for format", "committedDate": "2020-08-02T05:28:37Z", "type": "commit"}, {"oid": "5bb06893ebb96ec645ab6b8bfc394bb05184b752", "url": "https://github.com/prestodb/presto/commit/5bb06893ebb96ec645ab6b8bfc394bb05184b752", "message": "Add blank line for format", "committedDate": "2020-08-02T05:28:37Z", "type": "forcePushed"}]}