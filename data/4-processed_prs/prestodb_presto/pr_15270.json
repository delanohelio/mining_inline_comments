{"pr_number": 15270, "pr_title": "Add release notes for 0.242", "pr_createdAt": "2020-10-06T02:10:50Z", "pr_url": "https://github.com/prestodb/presto/pull/15270", "timeline": [{"oid": "e5a9c8393429d513beaae05f1976e38e3aeabfc2", "url": "https://github.com/prestodb/presto/commit/e5a9c8393429d513beaae05f1976e38e3aeabfc2", "message": "Add release notes for 0.242", "committedDate": "2020-10-07T06:48:56Z", "type": "forcePushed"}, {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "url": "https://github.com/prestodb/presto/commit/715285b14bb213fb2e12f52f278bd7d2baa55c8c", "message": "Add release notes for 0.242", "committedDate": "2020-10-07T06:54:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NjQ3Nw==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501346477", "bodyText": "My bad, let's change \"when CSE is enabled\" to \"when common sub-expression optimization is enabled\"", "author": "rongrong", "createdAt": "2020-10-07T22:30:19Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NjcwNA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501346704", "bodyText": "\"permanently\" stuck queries ...  memory limit \"is\" exceeded..", "author": "rongrong", "createdAt": "2020-10-07T22:30:52Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NzU5MQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501347591", "bodyText": "This should be a Hive connector change? @NikhilCollooru", "author": "rongrong", "createdAt": "2020-10-07T22:33:09Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MDIyMQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501360221", "bodyText": "Let move this to Hive Connector Change. Also,\n... with the ``hive.file_renaming_enabled`` ...", "author": "caithagoras", "createdAt": "2020-10-07T23:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NzU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0ODI0OA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501348248", "bodyText": "Is there a separate rst file documenting how this could be used? This should not be explained in release notes. @shixuan-fan", "author": "rongrong", "createdAt": "2020-10-07T22:34:56Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkzMDA1NQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501930055", "bodyText": "No we don't. I could work on the rst file.\nHow about we just say\nAdd support for fragment result caching. This can be enabled by ``fragment-result-cache.enabled`` and ``experimental.fragment-result-caching-enabled``\n\nIn the meanwhile, we could work on rst file.", "author": "shixuan-fan", "createdAt": "2020-10-08T18:31:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0ODI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0OTAzMA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501349030", "bodyText": "This probably also should be under hive changes? cc @zhenxiao", "author": "rongrong", "createdAt": "2020-10-07T22:36:55Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1ODYwMA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501358600", "bodyText": "nice catch. yes, this should be in hive changes", "author": "zhenxiao", "createdAt": "2020-10-07T23:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0OTAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0OTQyOQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501349429", "bodyText": "This and the next one also should be in hive changes. @NikhilCollooru", "author": "rongrong", "createdAt": "2020-10-07T22:37:56Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDQ0Ng==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501350446", "bodyText": "What's the user impact for this? @pettyjamesm @arhimondr @highker", "author": "rongrong", "createdAt": "2020-10-07T22:40:39Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3MzE3NQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501373175", "bodyText": "A significant reduction in thread creation for coordinators (depending on workload characteristics, of course). Knowledgeable cluster administrators might consider changing their split loader concurrency setting is their chosen value was influenced by a desire to conserve coordinator thread count.", "author": "pettyjamesm", "createdAt": "2020-10-07T23:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4MzIyMg==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501383222", "bodyText": "Can you rephrase the release note in terms of user impact? It's hard to understand what this improvement means for them from the original description. Thanks!", "author": "rongrong", "createdAt": "2020-10-08T00:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczNTMyMA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501735320", "bodyText": "How about:\n\nImprove split loading efficiency by only using as many threads as are required", "author": "pettyjamesm", "createdAt": "2020-10-08T13:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDYwMg==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501350602", "bodyText": "Format:\nAdd config pinot.xxxx", "author": "rongrong", "createdAt": "2020-10-07T22:41:03Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1OTc0NA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501359744", "bodyText": "Add configuration property ...", "author": "caithagoras", "createdAt": "2020-10-07T23:07:19Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTA5OQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361099", "bodyText": "Add support for caching HiveMetastore calls at a more granular level. This can be specified by the ``hive.metastore-cache-scope`` configuration property.", "author": "caithagoras", "createdAt": "2020-10-07T23:11:16Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTI0Ng==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361246", "bodyText": "double back quotes:\n``LambdaBytecodeGenerator``", "author": "caithagoras", "createdAt": "2020-10-07T23:11:49Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTQzMw==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361433", "bodyText": "Double back quotes\n``TIMESTAMP_MICROS`` as the ``OriginalType``", "author": "caithagoras", "createdAt": "2020-10-07T23:12:28Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTcyOA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361728", "bodyText": "No need to mention Cassandra because of the section title.\nAdd support for ``SMALLINT``, ``TINYINT``, and ``DATE`` types.", "author": "caithagoras", "createdAt": "2020-10-07T23:13:25Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.\n+\n+Cassandra Change\n+_______________\n+* Add ``SMALLINT``, ``TINYINT``, and ``DATE`` type support to Cassandra connector.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTk0Ng==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361946", "bodyText": "@zhenxiao What is the user-facing impact here?", "author": "caithagoras", "createdAt": "2020-10-07T23:14:09Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.\n+\n+Cassandra Change\n+_______________\n+* Add ``SMALLINT``, ``TINYINT``, and ``DATE`` type support to Cassandra connector.\n+\n+Druid Changes\n+_______________\n+* Upgrade apache druid version to 0.19.0", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MjY4OA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501362688", "bodyText": "no user facing impact. shall we mention it?", "author": "zhenxiao", "createdAt": "2020-10-07T23:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg2NjY3Mw==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501866673", "bodyText": "@zhenxiao No, we should only include the ones with user-facing impact. See also, Release Notes Guideline\n@kewang1024 Let's remove this item.", "author": "caithagoras", "createdAt": "2020-10-08T16:49:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxMjg3Mw==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501912873", "bodyText": "let's remove it", "author": "zhenxiao", "createdAt": "2020-10-08T18:03:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTk0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MjE2Mw==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501362163", "bodyText": "Remove duplicated white space.", "author": "caithagoras", "createdAt": "2020-10-07T23:14:55Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.\n+\n+Cassandra Change\n+_______________\n+* Add ``SMALLINT``, ``TINYINT``, and ``DATE`` type support to Cassandra connector.\n+\n+Druid Changes\n+_______________\n+* Upgrade apache druid version to 0.19.0\n+\n+Verifier Changes\n+_______________\n+* Fix an issue in determinism analysis which would indicate failing due to data being changed while the data is not changed.\n+* Improve JSON plan comparison for explain verification. (:pr:`15198`).\n+* Add application-name config to override source passed in ClientInfo.\n+* Add support to fetch the list of queries to be verified by running a Presto query.\n+* Add support to run explain verification. (:pr:`15101`). This can be enabled by configuration property ``explain``.\n+\n+SPI Changes\n+_______________\n+* Add ``getIdentifier`` to ``ConnectorTableLayoutHandle``. Layout identifier is used in fragment result caching to construct canonical plan.\n+* Add ``getSplitIdentifier`` to ``ConnectorSplit``. Split identifier is used in fragment result caching to identify if splits are identical.\n+\n+Geospatial Changes\n+_______________\n+* Upgrade Esri to [2.2.4](https://github.com/Esri/geometry-api-java/releases/tag/v2.2.4).  This includes two fixes for bug (https://github.com/Esri/geometry-api-java/issues/266 and https://github.com/Esri/geometry-api-java/issues/247) that were seen in production.", "originalCommit": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce667f5acee41ab611486422854d3ad6af9af292", "url": "https://github.com/prestodb/presto/commit/ce667f5acee41ab611486422854d3ad6af9af292", "message": "Add release notes for 0.242", "committedDate": "2020-10-08T00:22:01Z", "type": "forcePushed"}, {"oid": "2ed68a63aff87ad7a512c505b5887b39e3cd708a", "url": "https://github.com/prestodb/presto/commit/2ed68a63aff87ad7a512c505b5887b39e3cd708a", "message": "Add release notes for 0.242", "committedDate": "2020-10-08T00:28:29Z", "type": "forcePushed"}, {"oid": "0ca8b3d21a4b83f0a4e092e87c8c087133ed884c", "url": "https://github.com/prestodb/presto/commit/0ca8b3d21a4b83f0a4e092e87c8c087133ed884c", "message": "Add release notes for 0.242", "committedDate": "2020-10-08T21:34:32Z", "type": "forcePushed"}, {"oid": "1766971dc3c47611941ba152d87f49e04e54237c", "url": "https://github.com/prestodb/presto/commit/1766971dc3c47611941ba152d87f49e04e54237c", "message": "Add release notes for 0.242", "committedDate": "2020-10-09T06:34:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTMyNQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502715325", "bodyText": "\".\" at the end?", "author": "rongrong", "createdAt": "2020-10-09T23:50:07Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes\n+_______________\n+* Fix compiler error in ``LambdaBytecodeGenerator`` when common sub-expression optimization is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanently stucked queries when memory limit is exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for fragment result caching. This can be enabled by ``fragment-result-cache.enabled`` and ``experimental.fragment-result-caching-enabled``", "originalCommit": "1766971dc3c47611941ba152d87f49e04e54237c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTU0NA==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502715544", "bodyText": "Not a feedback to the release notes but I thought we normally use \"-\" rather than \"_\" in configs?", "author": "rongrong", "createdAt": "2020-10-09T23:51:31Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes\n+_______________\n+* Fix compiler error in ``LambdaBytecodeGenerator`` when common sub-expression optimization is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanently stucked queries when memory limit is exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for fragment result caching. This can be enabled by ``fragment-result-cache.enabled`` and ``experimental.fragment-result-caching-enabled``\n+\n+Hive Changes\n+____________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading efficiency by only using as many threads as are required.\n+* Add support for file renaming for Hive connector. This can be enabled with the ``hive.file_renaming_enabled`` configuration property.", "originalCommit": "1766971dc3c47611941ba152d87f49e04e54237c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxOTE2OQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502719169", "bodyText": "@NikhilCollooru", "author": "caithagoras", "createdAt": "2020-10-10T00:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTU0NA=="}], "type": "inlineReview"}, {"oid": "767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "url": "https://github.com/prestodb/presto/commit/767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "message": "Add release notes for 0.242", "committedDate": "2020-10-09T23:56:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxOTkwNQ==", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502719905", "bodyText": "Add the section header for details above General Changed:\n**Details**\n===========\n\nGeneral Changes", "author": "caithagoras", "createdAt": "2020-10-10T00:18:42Z", "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes", "originalCommit": "767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0693cbc1002843e7b12cbc98cd85bafcc8e63484", "url": "https://github.com/prestodb/presto/commit/0693cbc1002843e7b12cbc98cd85bafcc8e63484", "message": "Add release notes for 0.242", "committedDate": "2020-10-10T00:24:00Z", "type": "forcePushed"}, {"oid": "0557975243ef2e7572272865a40960b0fea4e6a2", "url": "https://github.com/prestodb/presto/commit/0557975243ef2e7572272865a40960b0fea4e6a2", "message": "Add release notes for 0.242", "committedDate": "2020-10-10T00:25:25Z", "type": "commit"}, {"oid": "0557975243ef2e7572272865a40960b0fea4e6a2", "url": "https://github.com/prestodb/presto/commit/0557975243ef2e7572272865a40960b0fea4e6a2", "message": "Add release notes for 0.242", "committedDate": "2020-10-10T00:25:25Z", "type": "forcePushed"}]}