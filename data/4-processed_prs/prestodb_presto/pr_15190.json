{"pr_number": 15190, "pr_title": "Refactor more classes to use Page helper methods", "pr_createdAt": "2020-09-18T17:06:13Z", "pr_url": "https://github.com/prestodb/presto/pull/15190", "timeline": [{"oid": "839edfcaa526e5817bbdbc420b9b19ec4bd12458", "url": "https://github.com/prestodb/presto/commit/839edfcaa526e5817bbdbc420b9b19ec4bd12458", "message": "Add Page#extractChannel(int) to enable efficient single channel extraction", "committedDate": "2020-09-18T16:54:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc3OTY4MQ==", "url": "https://github.com/prestodb/presto/pull/15190#discussion_r491779681", "bodyText": "Will this save CPU c.p. extractChannels(new int[]{channel});?", "author": "highker", "createdAt": "2020-09-21T03:32:40Z", "path": "presto-common/src/main/java/com/facebook/presto/common/Page.java", "diffHunk": "@@ -329,6 +329,11 @@ public Page copyPositions(int[] retainedPositions, int offset, int length)\n         return wrapBlocksWithoutCopy(length, blocks);\n     }\n \n+    public Page extractChannel(int channel)\n+    {\n+        return wrapBlocksWithoutCopy(positionCount, new Block[]{this.blocks[channel]});", "originalCommit": "839edfcaa526e5817bbdbc420b9b19ec4bd12458", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNjA4MQ==", "url": "https://github.com/prestodb/presto/pull/15190#discussion_r492016081", "bodyText": "They should be the same IFF the method is fully inlined and the temporary int array becomes stack allocated, but that seemed more fragile to depend on compared to just providing the desired implementation directly.", "author": "pettyjamesm", "createdAt": "2020-09-21T12:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc3OTY4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4MDIxNw==", "url": "https://github.com/prestodb/presto/pull/15190#discussion_r491780217", "bodyText": "keep this comment to the second to last line", "author": "highker", "createdAt": "2020-09-21T03:35:46Z", "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/GenericAccumulatorFactory.java", "diffHunk": "@@ -550,14 +550,8 @@ public Type getFinalType()\n         @Override\n         public void addInput(GroupByIdBlock groupIdsBlock, Page page)\n         {\n-            Block[] blocks = new Block[page.getChannelCount() + 1];\n-            for (int i = 0; i < page.getChannelCount(); i++) {\n-                blocks[i] = page.getBlock(i);\n-            }\n-            // Add group id block", "originalCommit": "9bf4262fba5516ab2e0305801edfe3f6fab6aa65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyMjU5Ng==", "url": "https://github.com/prestodb/presto/pull/15190#discussion_r492022596", "bodyText": "Woops, good catch. Added it back.", "author": "pettyjamesm", "createdAt": "2020-09-21T12:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4MDIxNw=="}], "type": "inlineReview"}, {"oid": "65bc8b8611282c5a8c4b87cac5a7f8da98eb295b", "url": "https://github.com/prestodb/presto/commit/65bc8b8611282c5a8c4b87cac5a7f8da98eb295b", "message": "Refactor more operators to use applicate Page method helpers\n\nAvoids extra copies of Block array values", "committedDate": "2020-09-21T12:56:22Z", "type": "commit"}, {"oid": "65bc8b8611282c5a8c4b87cac5a7f8da98eb295b", "url": "https://github.com/prestodb/presto/commit/65bc8b8611282c5a8c4b87cac5a7f8da98eb295b", "message": "Refactor more operators to use applicate Page method helpers\n\nAvoids extra copies of Block array values", "committedDate": "2020-09-21T12:56:22Z", "type": "forcePushed"}]}