{"pr_number": 14758, "pr_title": "Fixes for DWRF encryption", "pr_createdAt": "2020-07-01T13:05:21Z", "pr_url": "https://github.com/prestodb/presto/pull/14758", "timeline": [{"oid": "94e1911e7d5a8a3b573e6759cb45a371169356f1", "url": "https://github.com/prestodb/presto/commit/94e1911e7d5a8a3b573e6759cb45a371169356f1", "message": "Generate DataEncryptionKeys in OrcWriter\n\nPreviously this was passed in in the writer encryption group, but they\nshould be generated by the encryption provider", "committedDate": "2020-07-01T12:52:53Z", "type": "commit"}, {"oid": "da0590f1c22fc87c90eb26a777f35bdf92f5b6a9", "url": "https://github.com/prestodb/presto/commit/da0590f1c22fc87c90eb26a777f35bdf92f5b6a9", "message": "Decrypt separately from compression\n\nPreviously we were using an EncryptingCompressor and\nDecryptingDecompressor.  However, this was incorrect for uncompressed\ndata, which can happen when the compressed output would be larger then\nuncompressed.  In those cases we use the uncompressed data, but we still\nwant to encrypt/decrypt it", "committedDate": "2020-07-01T12:52:53Z", "type": "commit"}, {"oid": "74f0e743e77444eb652db262996e19ba7af9ab3a", "url": "https://github.com/prestodb/presto/commit/74f0e743e77444eb652db262996e19ba7af9ab3a", "message": "Fix encryption/decryption of encrypted metadata\n\nencrypted file statistics and stripe encryption groups should be\nencrypted/decrypted similar to compressed data, with 3 byte headers for\neach chunk.  Previously we were directly encrypting/decrypting the\nserialized fields.", "committedDate": "2020-07-01T12:52:53Z", "type": "commit"}, {"oid": "3ca1a50368a64a1d6453d6e86bea9aaba08cb3b0", "url": "https://github.com/prestodb/presto/commit/3ca1a50368a64a1d6453d6e86bea9aaba08cb3b0", "message": "Fix reading and writing of column encodings for DWRF\n\nPreviously we weren't setting the column value for DWRF column\nencodings.  This is a problem for encryption because we need the column\nvalue to get the right column encoding for a column since we can't rely\non the index order.", "committedDate": "2020-07-01T12:52:54Z", "type": "commit"}, {"oid": "3f01d222857749695eb4beba3f752388cecc9342", "url": "https://github.com/prestodb/presto/commit/3f01d222857749695eb4beba3f752388cecc9342", "message": "Use byte[] instead of slice for EncryptionLibrary\n\nThere's no reason to keep wrapping things in slices and then converting\nthem back to byte arrays, just use byte arrays in the interface", "committedDate": "2020-07-01T12:52:54Z", "type": "commit"}, {"oid": "25fbb7dea70a1bbf5d7306981ad9f5c123284022", "url": "https://github.com/prestodb/presto/commit/25fbb7dea70a1bbf5d7306981ad9f5c123284022", "message": "Remove unused methods", "committedDate": "2020-07-01T12:52:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ1MjM2Nw==", "url": "https://github.com/prestodb/presto/pull/14758#discussion_r448452367", "bodyText": "do we have unit tests for stats of nested types?", "author": "zzhao0", "createdAt": "2020-07-01T15:41:52Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "diffHunk": "@@ -623,19 +629,19 @@ public void close()\n             List<WriterEncryptionGroup> writerEncryptionGroups = dwrfWriterEncryption.get().getWriterEncryptionGroups();\n             for (int i = 0; i < writerEncryptionGroups.size(); i++) {\n                 WriterEncryptionGroup group = writerEncryptionGroups.get(i);\n-                List<byte[]> columnStatistics = encryptedStats.get(i)\n-                        .stream()\n-                        .map(DwrfMetadataWriter::toColumnStatistics)\n-                        .map(AbstractMessageLite::toByteArray)\n-                        .collect(toImmutableList());\n-\n                 DwrfProto.FileStatistics fileStatistics = toFileStatistics(encryptedStats.get(i));\n-                byte[] serializedStats = fileStatistics.toByteArray();\n+                DwrfDataEncryptor dwrfDataEncryptor = dwrfEncryptionInfo.getEncryptorByGroupId(i);\n+                OrcOutputBuffer buffer = new OrcOutputBuffer(compression, Optional.of(dwrfDataEncryptor), maxCompressionBufferSize);\n+                fileStatistics.writeTo(buffer);", "originalCommit": "25fbb7dea70a1bbf5d7306981ad9f5c123284022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NTgzMA==", "url": "https://github.com/prestodb/presto/pull/14758#discussion_r448465830", "bodyText": "We don't have any fileStatistics tests (Presto doesn't use filestatistics for dwrf, so none of our tests are testing the functionality, since we don't read them back). Let me think about how to write some kind of test though and I'll add it as a follow on", "author": "rschlussel", "createdAt": "2020-07-01T16:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ1MjM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ1NDA3Mw==", "url": "https://github.com/prestodb/presto/pull/14758#discussion_r448454073", "bodyText": "It's unclear to me how you handle encrypted but uncompressed file. Would be good to throw in that case if not supported at the moment", "author": "zzhao0", "createdAt": "2020-07-01T15:44:30Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -461,13 +456,21 @@ private void writeChunkToOutputStream(byte[] chunk, int offset, int length)\n \n         int compressedSize = compressor.compress(chunk, offset, length, compressionBuffer, 0, compressionBuffer.length);\n         if (compressedSize < length) {\n+            if (dwrfEncryptor.isPresent()) {", "originalCommit": "25fbb7dea70a1bbf5d7306981ad9f5c123284022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NjQ3Mg==", "url": "https://github.com/prestodb/presto/pull/14758#discussion_r448466472", "bodyText": "As per offline conversation I will add a follow up to support this.  I previously thought that wasn't supported by the file format.", "author": "rschlussel", "createdAt": "2020-07-01T16:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ1NDA3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ1NjM2MA==", "url": "https://github.com/prestodb/presto/pull/14758#discussion_r448456360", "bodyText": "This logic is correct for encrypted and compressed file (and a single chunk/page is uncompressed). We need to handle encrypted but uncompressed file.", "author": "zzhao0", "createdAt": "2020-07-01T15:47:59Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java", "diffHunk": "@@ -462,11 +467,19 @@ private void advance()\n         if (isUncompressed) {\n             buffer = ensureCapacity(buffer, chunkLength);\n             length = compressedSliceInput.read(buffer, 0, chunkLength);\n+            if (dwrfDecryptor.isPresent()) {", "originalCommit": "25fbb7dea70a1bbf5d7306981ad9f5c123284022", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}