{"pr_number": 14506, "pr_title": "Auto-resolve certain result mismatches", "pr_createdAt": "2020-05-09T00:16:17Z", "pr_url": "https://github.com/prestodb/presto/pull/14506", "timeline": [{"oid": "1658774e55acbcd74b33f893e0b57cdec933b5ef", "url": "https://github.com/prestodb/presto/commit/1658774e55acbcd74b33f893e0b57cdec933b5ef", "message": "Return checksum objects in column validator\n\nColumnMatchResult contains only a String message. It contains\ntext description about the discrepancy between control and test\ncolumn checksum.\n\nInstead, returns Java object ColumnChecksum object so that they\ncan be programmatically accessed in Verifier.", "committedDate": "2020-05-09T00:16:50Z", "type": "forcePushed"}, {"oid": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "url": "https://github.com/prestodb/presto/commit/0d3d585ddafbef517507f8270ccebd7097fa1e57", "message": "Return checksum objects in column validator\n\nColumnMatchResult contains only a String message. It contains\ntext description about the discrepancy between control and test\ncolumn checksum.\n\nInstead, returns Java object ColumnChecksum object so that they\ncan be programmatically accessed in Verifier.\n\nAlso, MatchResult.mismatchedColumns does not need to be a map.\nChange it to a list.", "committedDate": "2020-05-09T00:19:41Z", "type": "forcePushed"}, {"oid": "1457444a6543069e1f641988598e579f736cbf24", "url": "https://github.com/prestodb/presto/commit/1457444a6543069e1f641988598e579f736cbf24", "message": "Auto-resolve mismatched strucutured-type columns\n\nIf array element or map key/value contains floating point types,\ncolumn checksum is unlikely to match. Hence, we can allow Verifier\nto auto resolve those cases.\n\n- For an array column, resolve if the element type contains floating\n  point type.\n- For a map column, resolve if either key or value contains floating\n  point type, the cardinality sum matches, and the key or value that\n  does not contains floating point type matches.\n\nWe check each mismatched column and resolve the test case only when\nall columns are resolved.", "committedDate": "2020-05-09T01:56:45Z", "type": "forcePushed"}, {"oid": "e998ed5ee44952acf102fd6159218c35dd0820d1", "url": "https://github.com/prestodb/presto/commit/e998ed5ee44952acf102fd6159218c35dd0820d1", "message": "Auto-resolve mismatched strucutured-type columns\n\nIf array element or map key/value contains floating point types,\ncolumn checksum is unlikely to match. Hence, we can allow Verifier\nto auto resolve those cases.\n\n- For an array column, resolve if the element type contains floating\n  point type.\n- For a map column, resolve if either key or value contains floating\n  point type, the cardinality sum matches, and the key or value that\n  does not contains floating point type matches.\n\nWe check each mismatched column and resolve the test case only when\nall columns are resolved.", "committedDate": "2020-05-09T02:41:07Z", "type": "forcePushed"}, {"oid": "8481c716d2de2ad7d8e7f17766f0c32912956f71", "url": "https://github.com/prestodb/presto/commit/8481c716d2de2ad7d8e7f17766f0c32912956f71", "message": "Auto-resolve mismatched strucutured-type columns\n\nIf array element or map key/value contains floating point types,\ncolumn checksum is unlikely to match. Hence, we can allow Verifier\nto auto resolve those cases.\n\n- For an array column, resolve if the element type contains floating\n  point type.\n- For a map column, resolve if either key or value contains floating\n  point type, the cardinality sum matches, and the key or value that\n  does not contains floating point type matches.\n\nWe check each mismatched column and resolve the test case only when\nall columns are resolved.", "committedDate": "2020-05-09T02:41:48Z", "type": "forcePushed"}, {"oid": "1087d8e8c5731df380797475c4364d6bd055f7b0", "url": "https://github.com/prestodb/presto/commit/1087d8e8c5731df380797475c4364d6bd055f7b0", "message": "Auto-resolve queries referencing certain functions", "committedDate": "2020-05-09T03:25:55Z", "type": "forcePushed"}, {"oid": "d9e0c86a192aab2a96fde67e91d1748d838dd6e4", "url": "https://github.com/prestodb/presto/commit/d9e0c86a192aab2a96fde67e91d1748d838dd6e4", "message": "Auto-resolve queries referencing certain functions", "committedDate": "2020-05-09T03:40:34Z", "type": "forcePushed"}, {"oid": "5f7a7e9a219e971228337e6db06e326696648900", "url": "https://github.com/prestodb/presto/commit/5f7a7e9a219e971228337e6db06e326696648900", "message": "Auto-resolve queries referencing certain functions", "committedDate": "2020-05-09T03:46:11Z", "type": "forcePushed"}, {"oid": "efd1834864cb43ef74157fbb4d29cdf8a7b0a885", "url": "https://github.com/prestodb/presto/commit/efd1834864cb43ef74157fbb4d29cdf8a7b0a885", "message": "Auto-resolve queries referencing certain functions", "committedDate": "2020-05-09T03:46:35Z", "type": "forcePushed"}, {"oid": "f8f082702e8eae45e361d6bb17d830f8eee1374b", "url": "https://github.com/prestodb/presto/commit/f8f082702e8eae45e361d6bb17d830f8eee1374b", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-09T03:47:22Z", "type": "forcePushed"}, {"oid": "ae81f3ef862238d60f81f78f3953c857c5f7a43f", "url": "https://github.com/prestodb/presto/commit/ae81f3ef862238d60f81f78f3953c857c5f7a43f", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-09T03:59:29Z", "type": "forcePushed"}, {"oid": "b385f6ca3e28281660e6ec9a25c53c25fb63a3ca", "url": "https://github.com/prestodb/presto/commit/b385f6ca3e28281660e6ec9a25c53c25fb63a3ca", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-09T04:10:02Z", "type": "forcePushed"}, {"oid": "3c035aec3127351bcacebbe50f3eb8121109341b", "url": "https://github.com/prestodb/presto/commit/3c035aec3127351bcacebbe50f3eb8121109341b", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-09T04:16:22Z", "type": "forcePushed"}, {"oid": "7d559257b4bf6f4a615f0f7e5fd84aebf39ddbb3", "url": "https://github.com/prestodb/presto/commit/7d559257b4bf6f4a615f0f7e5fd84aebf39ddbb3", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-09T04:17:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0ODE0Mw==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423548143", "bodyText": "Is this the checksum of the array cardinalities, or the sum of array cardinalities? If it's the first, can we change it to cardinalityCheckSum? If it's the latter then it doesn't sound enough condition to auto-resolve.", "author": "yingsu00", "createdAt": "2020-05-12T08:17:49Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ArrayColumnValidator.java", "diffHunk": "@@ -37,6 +39,57 @@\n public class ArrayColumnValidator\n         implements ColumnValidator\n {\n+    public static class ArrayColumnChecksum\n+            extends ColumnChecksum\n+    {\n+        private final Object checksum;\n+        private final Object cardinalitySum;", "originalCommit": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2OTc1Nw==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r425369757", "bodyText": "We were not doing cardinality checksum, but that sound like a good idea to me. Will add array/map cardinality checksum for better confidence.", "author": "caithagoras", "createdAt": "2020-05-14T19:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0ODE0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU1MTM1NA==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423551354", "bodyText": "Just wonder why can't we make this a standalone class? It's used in both ArrayColumnValidator and StructuredColumnMismatchResolver. My understanding is that it's better to make it a nested class if it's only used by the container class. Note that ColumnChecksum is a standalone abstract class.", "author": "yingsu00", "createdAt": "2020-05-12T08:22:52Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ArrayColumnValidator.java", "diffHunk": "@@ -37,6 +39,57 @@\n public class ArrayColumnValidator\n         implements ColumnValidator\n {\n+    public static class ArrayColumnChecksum", "originalCommit": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2OTg4NA==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r425369884", "bodyText": "Moved to standalone class.", "author": "caithagoras", "createdAt": "2020-05-14T19:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU1MTM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU1MTgxNA==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423551814", "bodyText": "All methods are abstract. Is it better to make it an Interface?", "author": "yingsu00", "createdAt": "2020-05-12T08:23:34Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ColumnChecksum.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.verifier.checksum;\n+\n+public abstract class ColumnChecksum", "originalCommit": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MTMyMg==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r425371322", "bodyText": "It has to be an abstract class if we want to force subclasses to implement those methods. There are a couple of examples in the code base. You can search for public abstract boolean equals", "author": "caithagoras", "createdAt": "2020-05-14T19:12:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU1MTgxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4OTA0Mg==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423589042", "bodyText": "Should we move this private method to the private method section below?", "author": "yingsu00", "createdAt": "2020-05-12T09:20:15Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ArrayColumnValidator.java", "diffHunk": "@@ -53,25 +106,19 @@\n     }\n \n     @Override\n-    public List<ColumnMatchResult> validate(Column column, ChecksumResult controlResult, ChecksumResult testResult)\n+    public List<ColumnMatchResult<ArrayColumnChecksum>> validate(Column column, ChecksumResult controlResult, ChecksumResult testResult)\n+    {\n+        ArrayColumnChecksum controlChecksum = toColumnChecksum(column, controlResult);\n+        ArrayColumnChecksum testChecksum = toColumnChecksum(column, testResult);\n+\n+        return ImmutableList.of(new ColumnMatchResult<>(Objects.equals(controlChecksum, testChecksum), column, controlChecksum, testChecksum));\n+    }\n+\n+    private static ArrayColumnChecksum toColumnChecksum(Column column, ChecksumResult checksumResult)", "originalCommit": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU5Mzg4NQ==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423593885", "bodyText": "Nit: I'd move this to a separate commit, but it's up to you.", "author": "yingsu00", "createdAt": "2020-05-12T09:28:08Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ChecksumValidator.java", "diffHunk": "@@ -55,14 +53,11 @@ public Query generateChecksumQuery(QualifiedName tableName, List<Column> columns\n         return simpleQuery(new Select(false, selectItems.build()), new Table(tableName));\n     }\n \n-    public Map<Column, ColumnMatchResult> getMismatchedColumns(List<Column> columns, ChecksumResult controlChecksum, ChecksumResult testChecksum)\n+    public List<ColumnMatchResult<?>> getMismatchedColumns(List<Column> columns, ChecksumResult controlChecksum, ChecksumResult testChecksum)", "originalCommit": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NjE4Mw==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r425396183", "bodyText": "Done", "author": "caithagoras", "createdAt": "2020-05-14T20:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU5Mzg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU5NjA2OA==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423596068", "bodyText": "Is cardinality_sum really sum of the cardinalities?", "author": "yingsu00", "createdAt": "2020-05-12T09:31:30Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ArrayColumnValidator.java", "diffHunk": "@@ -37,6 +39,57 @@\n public class ArrayColumnValidator\n         implements ColumnValidator\n {\n+    public static class ArrayColumnChecksum\n+            extends ColumnChecksum\n+    {\n+        private final Object checksum;\n+        private final Object cardinalitySum;\n+\n+        public ArrayColumnChecksum(@Nullable Object checksum, @Nullable Object cardinalitySum)\n+        {\n+            this.checksum = checksum;\n+            this.cardinalitySum = cardinalitySum;\n+        }\n+\n+        @Nullable\n+        public Object getChecksum()\n+        {\n+            return checksum;\n+        }\n+\n+        @Nullable\n+        public Object getCardinalitySum()\n+        {\n+            return cardinalitySum;\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj)\n+        {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if ((obj == null) || (getClass() != obj.getClass())) {\n+                return false;\n+            }\n+            ArrayColumnChecksum o = (ArrayColumnChecksum) obj;\n+            return Objects.equals(checksum, o.checksum) &&\n+                    Objects.equals(cardinalitySum, o.cardinalitySum);\n+        }\n+\n+        @Override\n+        public int hashCode()\n+        {\n+            return Objects.hash(checksum, cardinalitySum);\n+        }\n+\n+        @Override\n+        public String toString()\n+        {\n+            return format(\"checksum: %s, cardinality_sum: %s\", checksum, cardinalitySum);", "originalCommit": "0d3d585ddafbef517507f8270ccebd7097fa1e57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU5ODkzOQ==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423598939", "bodyText": "cardinality checksum?", "author": "yingsu00", "createdAt": "2020-05-12T09:36:00Z", "path": "presto-docs/src/main/sphinx/admin/verifier.rst", "diffHunk": "@@ -168,6 +168,17 @@ query failures.\n * ``COMPILER_ERROR``: Resolves if checksum fails with this error. If a control query has too many\n   columns, generated checksum query might be too large in certain cases.\n \n+In cases of result mismatches, Verifier may be giving noisy signals, and we allow Verifier to\n+automatically resolve certain mismatches.\n+\n+* **Structured-typed Columns**: If array element or map key/value contains floating point types, column checksum is unlikely to match.\n+    * For an array column, resolve if the element type contains floating point types and the\n+      cardinality matches.", "originalCommit": "c578d8aaeb3a7209983c7b6a82c7fcbf1b7d95ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYwMzIzOQ==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r423603239", "bodyText": "I feel this is a bit hard to understand. Can we say\nFor a map column, resolve the mismatch when both of the following conditions are true:\n - The cardinality checksum matches;\n - The checksum of the key or value that does not contains floating point type matches.", "author": "yingsu00", "createdAt": "2020-05-12T09:43:03Z", "path": "presto-docs/src/main/sphinx/admin/verifier.rst", "diffHunk": "@@ -168,6 +168,17 @@ query failures.\n * ``COMPILER_ERROR``: Resolves if checksum fails with this error. If a control query has too many\n   columns, generated checksum query might be too large in certain cases.\n \n+In cases of result mismatches, Verifier may be giving noisy signals, and we allow Verifier to\n+automatically resolve certain mismatches.\n+\n+* **Structured-typed Columns**: If array element or map key/value contains floating point types, column checksum is unlikely to match.\n+    * For an array column, resolve if the element type contains floating point types and the\n+      cardinality matches.\n+    * For a map column, resolve if either key or value contains floating point types, the\n+      cardinality sum matches, and the checksum of the key or value that does not contains\n+      floating point type matches.", "originalCommit": "c578d8aaeb3a7209983c7b6a82c7fcbf1b7d95ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ef2527d0db149986b6bef7be9d893cdf5ae8f92c", "url": "https://github.com/prestodb/presto/commit/ef2527d0db149986b6bef7be9d893cdf5ae8f92c", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-12T19:41:43Z", "type": "forcePushed"}, {"oid": "4da61b49f1551be4fe77f3cb50be4f282f024f1b", "url": "https://github.com/prestodb/presto/commit/4da61b49f1551be4fe77f3cb50be4f282f024f1b", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T19:11:48Z", "type": "forcePushed"}, {"oid": "120d799bc95c2f09784e5b98aa5dcb45132bc0aa", "url": "https://github.com/prestodb/presto/commit/120d799bc95c2f09784e5b98aa5dcb45132bc0aa", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T19:41:30Z", "type": "forcePushed"}, {"oid": "118f043eb343cd229298e1bbcef9e72b8ebefe93", "url": "https://github.com/prestodb/presto/commit/118f043eb343cd229298e1bbcef9e72b8ebefe93", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T19:42:10Z", "type": "forcePushed"}, {"oid": "cb2c504f495a02daa627167fb70f2359d3f341d0", "url": "https://github.com/prestodb/presto/commit/cb2c504f495a02daa627167fb70f2359d3f341d0", "message": "Remove unused class in VerifierLimitationFailureResolver", "committedDate": "2020-05-14T20:12:16Z", "type": "commit"}, {"oid": "ba676cd5f4231b8edcf265e7a5a06395ca40b024", "url": "https://github.com/prestodb/presto/commit/ba676cd5f4231b8edcf265e7a5a06395ca40b024", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T20:12:16Z", "type": "forcePushed"}, {"oid": "cc06bc49df5703d4aa694b6438498370547884ae", "url": "https://github.com/prestodb/presto/commit/cc06bc49df5703d4aa694b6438498370547884ae", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T22:11:01Z", "type": "forcePushed"}, {"oid": "7abb31fdc08745a800e3e2996420a537ff634277", "url": "https://github.com/prestodb/presto/commit/7abb31fdc08745a800e3e2996420a537ff634277", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T22:13:24Z", "type": "forcePushed"}, {"oid": "ffa81b6c49d8090dd3e963956a87a1e5a3700765", "url": "https://github.com/prestodb/presto/commit/ffa81b6c49d8090dd3e963956a87a1e5a3700765", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T22:17:53Z", "type": "forcePushed"}, {"oid": "c78ee487b2e7ad14065c78d3af49091823923318", "url": "https://github.com/prestodb/presto/commit/c78ee487b2e7ad14065c78d3af49091823923318", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T22:35:06Z", "type": "forcePushed"}, {"oid": "e0c62e36577c3e9ab8bb2e2bc9051e196fa430d5", "url": "https://github.com/prestodb/presto/commit/e0c62e36577c3e9ab8bb2e2bc9051e196fa430d5", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T23:07:18Z", "type": "forcePushed"}, {"oid": "6103fca16165d52d8f206a0e7dad649b069a8179", "url": "https://github.com/prestodb/presto/commit/6103fca16165d52d8f206a0e7dad649b069a8179", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-14T23:08:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NzI5Nw==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r425577297", "bodyText": "Under what circumstance can cardinalityChecksum and cardinalitySum be null?", "author": "yingsu00", "createdAt": "2020-05-15T05:41:31Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/checksum/ArrayColumnChecksum.java", "diffHunk": "@@ -23,11 +23,13 @@\n         extends StructureColumnChecksum\n {\n     private final Object checksum;\n+    private final Object cardinalityChecksum;\n     private final Object cardinalitySum;\n \n-    public ArrayColumnChecksum(@Nullable Object checksum, @Nullable Object cardinalitySum)\n+    public ArrayColumnChecksum(@Nullable Object checksum, @Nullable Object cardinalityChecksum, @Nullable Object cardinalitySum)", "originalCommit": "79254abfc649009379d7e5e1a748fe54b13b979f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNDc0MQ==", "url": "https://github.com/prestodb/presto/pull/14506#discussion_r426014741", "bodyText": "cardinalityChecksum will be null when there is no input row.\ncardinalitySum should never be null since we added a coalesce. Will update this.", "author": "caithagoras", "createdAt": "2020-05-15T19:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU3NzI5Nw=="}], "type": "inlineReview"}, {"oid": "7c481036fb85f32fb7ff4c9fc0762f5df6389946", "url": "https://github.com/prestodb/presto/commit/7c481036fb85f32fb7ff4c9fc0762f5df6389946", "message": "Return checksum objects in column validator\n\nColumnMatchResult contains only a String message. It contains\ntext description about the discrepancy between control and test\ncolumn checksum.\n\nInstead, returns Java object ColumnChecksum object so that they\ncan be programmatically accessed in Verifier.", "committedDate": "2020-05-15T19:53:41Z", "type": "commit"}, {"oid": "6f41b2340567678ee3286ed09007e948741b124e", "url": "https://github.com/prestodb/presto/commit/6f41b2340567678ee3286ed09007e948741b124e", "message": "Convert MatchResult.mismatchedColumns to a list", "committedDate": "2020-05-15T19:53:42Z", "type": "commit"}, {"oid": "5a83a5f2efb95940436828733a33f58ea913d064", "url": "https://github.com/prestodb/presto/commit/5a83a5f2efb95940436828733a33f58ea913d064", "message": "Compute cardinality checksum for array and map columns", "committedDate": "2020-05-15T19:56:46Z", "type": "commit"}, {"oid": "44f43ca0a557892ae1da09fb9eaa3f27a1bca11d", "url": "https://github.com/prestodb/presto/commit/44f43ca0a557892ae1da09fb9eaa3f27a1bca11d", "message": "Auto-resolve mismatched structured-type columns\n\nIf array element or map key/value contains floating point types, column\nchecksum is unlikely to match.\n* For an array column, resolve if the element type contains floating\n  point types and the cardinality checksum matches.\n* For a map column, resolve the mismatch when both of the following\n  conditions are true:\n  * The cardinality checksum matches.\n  * The checksum of the key or value that does not contains floating\n    point types matches.\n* Resolve a test case only when all columns are resolved.", "committedDate": "2020-05-15T19:56:46Z", "type": "commit"}, {"oid": "bec7a3e09cb7343bb4d7e3605a819172bd53b63f", "url": "https://github.com/prestodb/presto/commit/bec7a3e09cb7343bb4d7e3605a819172bd53b63f", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-15T19:56:46Z", "type": "forcePushed"}, {"oid": "9ce6f9b27eabc8e55777e1a9ef7b710a37f5e9d2", "url": "https://github.com/prestodb/presto/commit/9ce6f9b27eabc8e55777e1a9ef7b710a37f5e9d2", "message": "Auto-resolve queries referencing certain functions", "committedDate": "2020-05-15T20:12:44Z", "type": "commit"}, {"oid": "8595774e344c50e915f42ca586c75d380be67fca", "url": "https://github.com/prestodb/presto/commit/8595774e344c50e915f42ca586c75d380be67fca", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-15T20:12:52Z", "type": "commit"}, {"oid": "8595774e344c50e915f42ca586c75d380be67fca", "url": "https://github.com/prestodb/presto/commit/8595774e344c50e915f42ca586c75d380be67fca", "message": "Bind classes as singleton in FailureResolverModule", "committedDate": "2020-05-15T20:12:52Z", "type": "forcePushed"}]}