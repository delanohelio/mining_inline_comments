{"pr_number": 14715, "pr_title": "Add session property to ignore table bucketing", "pr_createdAt": "2020-06-24T14:39:39Z", "pr_url": "https://github.com/prestodb/presto/pull/14715", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5MzQ5NA==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445093494", "bodyText": "nit: Ignore table bucketing when the number of buckets is less than the value specified", "author": "arhimondr", "createdAt": "2020-06-24T18:36:00Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java", "diffHunk": "@@ -133,6 +134,11 @@ public HiveSessionProperties(HiveClientConfig hiveClientConfig, OrcFileWriterCon\n                         \"Ignore table bucketing to enable reading from unbucketed partitions\",\n                         hiveClientConfig.isIgnoreTableBucketing(),\n                         false),\n+                integerProperty(\n+                        MIN_BUCKET_COUNT_TO_NOT_IGNORE_TABLE_BUCKETING,\n+                        \"Ignore table bucketing when table bucket count is less than this session property\",", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NDAyMw==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445094023", "bodyText": "I think this description is extra", "author": "arhimondr", "createdAt": "2020-06-24T18:36:56Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java", "diffHunk": "@@ -1083,7 +1084,8 @@ public HiveClientConfig setSortedWritingEnabled(boolean sortedWritingEnabled)\n     }\n \n     @Config(\"hive.ignore-table-bucketing\")\n-    @ConfigDescription(\"Ignore table bucketing to allow reading from unbucketed partitions\")\n+    @ConfigDescription(\"Ignore table bucketing to allow reading from unbucketed partitions \" +\n+            \"only if table bucket count is not less than hive.min-bucket-count-to-not-ignore-table-bucketing\")", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NDYzMw==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445094633", "bodyText": "nit: Ignore table bucketing when the number of buckets is less than the value specified", "author": "arhimondr", "createdAt": "2020-06-24T18:38:06Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java", "diffHunk": "@@ -1095,6 +1097,20 @@ public boolean isIgnoreTableBucketing()\n         return ignoreTableBucketing;\n     }\n \n+    @Config(\"hive.min-bucket-count-to-not-ignore-table-bucketing\")\n+    @ConfigDescription(\"If table bucket count is less than this value, table bucketing is always ignored. \" +", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445095333", "bodyText": "nit: How about minNumberOfBucketsForBucketedExecution\nCC: @aweisberg ?", "author": "arhimondr", "createdAt": "2020-06-24T18:39:28Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClientConfig.java", "diffHunk": "@@ -131,6 +131,7 @@\n     private boolean bucketExecutionEnabled = true;\n     private boolean sortedWritingEnabled = true;\n     private boolean ignoreTableBucketing;\n+    private int minBucketCountToNotIgnoreTableBucketing;", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MzcxNw==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445143717", "bodyText": "I considered this one before as it is simpler than minBucketCountToNotIgnoreTableBucketing. However, when bucket count is less than the threshold, there is still bucketed execution with a larger bucket count.", "author": "viczhang861", "createdAt": "2020-06-24T20:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyNjQ3OA==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445626478", "bodyText": "minBucketCountToNotIgnoreTableBucketing\n\nThis a little bit hard to read because of kinda \"double negative\".\n\nminNumberOfBucketsForBucketedExecution\n\nShould be easier to read. It defines the minimum number of buckets for the bucketed execution to be enabled.\ne.g.:\nif minNumberOfBucketsForBucketedExecution=1024 and the table has only 512 buckets, it doesn't meet the requirement and the bucketed execution will be disabled. If the table has 2048 buckets it meets the requirement, but the bucketed execution can still be manually disabled with the session property.", "author": "arhimondr", "createdAt": "2020-06-25T15:01:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcxMzg0OQ==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445713849", "bodyText": "Since the actual execution depends on other session property and whether LBM is enabled, how about minNumberOfBucketsForBucketedTable,  if bucket count is less than the threshold, this table is not considered as a bucketed table.", "author": "viczhang861", "createdAt": "2020-06-25T17:15:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcxNTk5MA==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445715990", "bodyText": "@aweisberg What do you think?", "author": "arhimondr", "createdAt": "2020-06-25T17:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg2MDcyNg==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445860726", "bodyText": "I think minNumberOfBucketsForBucketedExecution is clearer minNumberOfBucketsForBucketedTable because the table is still bucketed we are just not using an execution plan that leverages it.", "author": "aweisberg", "createdAt": "2020-06-25T21:55:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg2NDY2Ng==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445864666", "bodyText": "Based on the offline discussion we've decided to proceed with the existing name", "author": "arhimondr", "createdAt": "2020-06-25T22:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTY2NA==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445095664", "bodyText": "This is not used", "author": "arhimondr", "createdAt": "2020-06-24T18:40:06Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePartitionManager.java", "diffHunk": "@@ -74,6 +75,7 @@\n     private final TypeManager typeManager;\n     private final int maxPartitionsPerScan;\n     private final int domainCompactionThreshold;\n+    private final int minBucketCountToNotIgnoreTableBucketing;", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NjY3Nw==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445096677", "bodyText": "nit: how about simply getBucketHandle?", "author": "arhimondr", "createdAt": "2020-06-24T18:41:55Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePartitionManager.java", "diffHunk": "@@ -247,6 +250,26 @@ public HivePartitionResult getPartitions(SemiTransactionalHiveMetastore metastor\n                 bucketFilter);\n     }\n \n+    private Optional<HiveBucketHandle> getBucketHandleIfNotIgnoreTableBucketing(Table table, ConnectorSession session)", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5Njg3Mg==", "url": "https://github.com/prestodb/presto/pull/14715#discussion_r445096872", "bodyText": "You can use Optional.map", "author": "arhimondr", "createdAt": "2020-06-24T18:42:15Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePartitionManager.java", "diffHunk": "@@ -192,10 +197,8 @@ public HivePartitionResult getPartitions(SemiTransactionalHiveMetastore metastor\n \n         List<HivePartition> partitions = getPartitionsAsList(getPartitionsIterator(metastore, tableHandle, constraint, session).iterator());\n \n-        // never ignore table bucketing for temporary tables as those are created such explicitly by the engine request\n-        boolean shouldIgnoreTableBucketing = !table.getTableType().equals(TEMPORARY_TABLE) && shouldIgnoreTableBucketing(session);\n-        Optional<HiveBucketHandle> hiveBucketHandle = shouldIgnoreTableBucketing ? Optional.empty() : getHiveBucketHandle(table);\n-        Optional<HiveBucketFilter> bucketFilter = shouldIgnoreTableBucketing ? Optional.empty() : getHiveBucketFilter(table, effectivePredicate);\n+        Optional<HiveBucketHandle> hiveBucketHandle = getBucketHandleIfNotIgnoreTableBucketing(table, session);\n+        Optional<HiveBucketFilter> bucketFilter = hiveBucketHandle.isPresent() ? getHiveBucketFilter(table, effectivePredicate) : Optional.empty();", "originalCommit": "041e197572a908951aba2116d1ec7f0ee31916af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d43fb6a1e3e296fdc18cbf5f39f04e0113afdca3", "url": "https://github.com/prestodb/presto/commit/d43fb6a1e3e296fdc18cbf5f39f04e0113afdca3", "message": "Add session property to ignore table bucketing\n\n - When table bucket count is not large enough, using such table count\n   won't achieve expected partitioning performance.\n - Ignoring table bucketing makes it possible to use a larger bucket\n   count when needed, e.g., exchange materialization.", "committedDate": "2020-06-24T20:05:13Z", "type": "commit"}, {"oid": "d43fb6a1e3e296fdc18cbf5f39f04e0113afdca3", "url": "https://github.com/prestodb/presto/commit/d43fb6a1e3e296fdc18cbf5f39f04e0113afdca3", "message": "Add session property to ignore table bucketing\n\n - When table bucket count is not large enough, using such table count\n   won't achieve expected partitioning performance.\n - Ignoring table bucketing makes it possible to use a larger bucket\n   count when needed, e.g., exchange materialization.", "committedDate": "2020-06-24T20:05:13Z", "type": "forcePushed"}]}