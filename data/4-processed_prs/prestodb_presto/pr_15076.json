{"pr_number": 15076, "pr_title": "Track cache objects sizes in CachingOrcDataSource", "pr_createdAt": "2020-08-25T02:45:04Z", "pr_url": "https://github.com/prestodb/presto/pull/15076", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc1OTY0NQ==", "url": "https://github.com/prestodb/presto/pull/15076#discussion_r476759645", "bodyText": "What is the maximal possible cacheLength?  is it tinyStripeThreshold (default 8MB) ?\nHow about initialize cache size as maximal possible stripe size (8MB at most for tiny stripe?)\nIf memory accounting is only off by 8MB, it is probably ok. Is creating new cache too fast caused GC ?", "author": "viczhang861", "createdAt": "2020-08-25T21:36:59Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/CachingOrcDataSource.java", "diffHunk": "@@ -73,6 +75,7 @@ void readCacheAt(long offset)\n         cacheLength = newCacheRange.getLength();\n         if (cache.length < cacheLength) {\n             cache = new byte[cacheLength];\n+            systemMemoryContext.setBytes(cacheLength);", "originalCommit": "e5cf9ecc46a40d04c9cfcabd206cc62fc858e585", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkwMjQ3Nw==", "url": "https://github.com/prestodb/presto/pull/15076#discussion_r479902477", "bodyText": "@viczhang861 The cacheLength is the min of tinyStripeThreshold and the size of the file. We don't want to make it always 8MB because the files may well be smaller than that. This 8MB is not small because the cache is allocated for each PageSource(typically a file) in each OrcRecordReader. Considering worker parallelism and query parallelism, this amount could be quite high.", "author": "yingsu00", "createdAt": "2020-08-31T05:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc1OTY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0MzIxNw==", "url": "https://github.com/prestodb/presto/pull/15076#discussion_r477043217", "bodyText": "Can we assert assertEquals(systemMemoryContext.getBytes(), 8 * 1048576); after this?", "author": "highker", "createdAt": "2020-08-26T05:30:37Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestCachingOrcDataSource.java", "diffHunk": "@@ -146,13 +153,16 @@ public void testTinyStripesReadCacheAt()\n         DataSize maxMergeDistance = new DataSize(1, Unit.MEGABYTE);\n         DataSize tinyStripeThreshold = new DataSize(8, Unit.MEGABYTE);\n \n+        OrcAggregatedMemoryContext systemMemoryContext = new TestingHiveOrcAggregatedMemoryContext();\n+\n         TestingOrcDataSource testingOrcDataSource = new TestingOrcDataSource(FakeOrcDataSource.INSTANCE);\n         CachingOrcDataSource cachingOrcDataSource = new CachingOrcDataSource(\n                 testingOrcDataSource,\n                 createTinyStripesRangeFinder(\n                         ImmutableList.of(new StripeInformation(123, 3, 10, 10, 10, ImmutableList.of()), new StripeInformation(123, 33, 10, 10, 10, ImmutableList.of()), new StripeInformation(123, 63, 1048576 * 8 - 20, 10, 10, ImmutableList.of())),\n                         maxMergeDistance,\n-                        tinyStripeThreshold));\n+                        tinyStripeThreshold),\n+                systemMemoryContext.newOrcLocalMemoryContext(CachingOrcDataSource.class.getSimpleName()));\n         cachingOrcDataSource.readCacheAt(3);\n         assertEquals(testingOrcDataSource.getLastReadRanges(), ImmutableList.of(new DiskRange(3, 60)));\n         cachingOrcDataSource.readCacheAt(63);", "originalCommit": "e5cf9ecc46a40d04c9cfcabd206cc62fc858e585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0MzI3NQ==", "url": "https://github.com/prestodb/presto/pull/15076#discussion_r477043275", "bodyText": "same, can we add an assertion?", "author": "highker", "createdAt": "2020-08-26T05:30:49Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestCachingOrcDataSource.java", "diffHunk": "@@ -167,7 +177,8 @@ public void testTinyStripesReadCacheAt()\n                                 new StripeInformation(123, 33, 10, 10, 10, ImmutableList.of()),\n                                 new StripeInformation(123, 63, 1048576 * 8 - 20, 10, 10, ImmutableList.of())),\n                         maxMergeDistance,\n-                        tinyStripeThreshold));\n+                        tinyStripeThreshold),\n+                systemMemoryContext.newOrcLocalMemoryContext(CachingOrcDataSource.class.getSimpleName()));\n         cachingOrcDataSource.readCacheAt(62); // read at the end of a stripe\n         assertEquals(testingOrcDataSource.getLastReadRanges(), ImmutableList.of(new DiskRange(3, 60)));\n         cachingOrcDataSource.readCacheAt(63);", "originalCommit": "e5cf9ecc46a40d04c9cfcabd206cc62fc858e585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0MzMwMA==", "url": "https://github.com/prestodb/presto/pull/15076#discussion_r477043300", "bodyText": "same", "author": "highker", "createdAt": "2020-08-26T05:30:54Z", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestCachingOrcDataSource.java", "diffHunk": "@@ -182,7 +193,8 @@ public void testTinyStripesReadCacheAt()\n                                 new StripeInformation(123, 4, 1048576, 1048576, 1048576 * 3, ImmutableList.of()),\n                                 new StripeInformation(123, 4 + 1048576 * 5, 1048576, 1048576, 1048576, ImmutableList.of())),\n                         maxMergeDistance,\n-                        tinyStripeThreshold));\n+                        tinyStripeThreshold),\n+                systemMemoryContext.newOrcLocalMemoryContext(CachingOrcDataSource.class.getSimpleName()));\n         cachingOrcDataSource.readCacheAt(3);\n         assertEquals(testingOrcDataSource.getLastReadRanges(), ImmutableList.of(new DiskRange(3, 1 + 1048576 * 5)));\n         cachingOrcDataSource.readCacheAt(4 + 1048576 * 5);", "originalCommit": "e5cf9ecc46a40d04c9cfcabd206cc62fc858e585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8e8b6226aeab4030142e20abd6c1b6748aa7f1a", "url": "https://github.com/prestodb/presto/commit/f8e8b6226aeab4030142e20abd6c1b6748aa7f1a", "message": "Track cache objects sizes in CachingOrcDataSource\n\nThe cache object in CachingOrcDataSource was not tracked before. This\ncommit updates the PageSource's system memory usage whenever a new cache\nobject is allocated.", "committedDate": "2020-08-31T08:12:17Z", "type": "forcePushed"}, {"oid": "d60863e8541c54d277c486daf892c30b96ae19a9", "url": "https://github.com/prestodb/presto/commit/d60863e8541c54d277c486daf892c30b96ae19a9", "message": "Create OrcPageSource using the OrcDataSource from OrcReader\n\nOrcReader would wrap the OrcDataSource with CachingOrcDataSource if the\nfile is less than the tiny stripe threashold. However the PageSource in\nthe scan operators would still use the original OrcDataSource. This\nis confusing since the OrcReader, OrcRecordReder, and StreamReaders all\nkeep the CachingOrcDataSource while the PageSource keeps the underlying\nOrcDataSource. This commit creates the PageSource using the wrapped\nCachingOrcDataSource if the original OrcDataSource was wrapped.", "committedDate": "2020-08-31T08:13:38Z", "type": "commit"}, {"oid": "55f587e0ea5aab1d23f15df2f0da801e9b40cec8", "url": "https://github.com/prestodb/presto/commit/55f587e0ea5aab1d23f15df2f0da801e9b40cec8", "message": "Track cache objects sizes in CachingOrcDataSource\n\nThe cache object in CachingOrcDataSource was not tracked before. This\ncommit updates the PageSource's system memory usage whenever a new cache\nobject is allocated.", "committedDate": "2020-08-31T08:14:37Z", "type": "commit"}, {"oid": "55f587e0ea5aab1d23f15df2f0da801e9b40cec8", "url": "https://github.com/prestodb/presto/commit/55f587e0ea5aab1d23f15df2f0da801e9b40cec8", "message": "Track cache objects sizes in CachingOrcDataSource\n\nThe cache object in CachingOrcDataSource was not tracked before. This\ncommit updates the PageSource's system memory usage whenever a new cache\nobject is allocated.", "committedDate": "2020-08-31T08:14:37Z", "type": "forcePushed"}]}