{"pr_number": 14498, "pr_title": "Drop presto-orc's dependency on presto-spi", "pr_createdAt": "2020-05-08T03:46:56Z", "pr_url": "https://github.com/prestodb/presto/pull/14498", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNDc5OA==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r421934798", "bodyText": "We should rethrow\n        catch (InvalidFunctionArgumentException e) {\n            closeWithSuppression(e);\n            throw new PrestoException(INVALID_.....);\n        }", "author": "highker", "createdAt": "2020-05-08T04:44:23Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSource.java", "diffHunk": "@@ -87,7 +88,7 @@ public Page getNextPage()\n             }\n             return page;\n         }\n-        catch (PrestoException e) {\n+        catch (PrestoException | InvalidFunctionArgumentException e) {", "originalCommit": "dfc5e395266ba4248eb05d7d81334783643f370c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNTE3OA==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r421935178", "bodyText": "Same, rethrow", "author": "highker", "createdAt": "2020-05-08T04:46:01Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSource.java", "diffHunk": "@@ -88,7 +89,7 @@ public Page getNextPage()\n             }\n             return page;\n         }\n-        catch (PrestoException | InvalidFunctionArgumentException e) {\n+        catch (PrestoException | InvalidFunctionArgumentException | NotSupportedException e) {", "originalCommit": "17e10686d748e1456214d23fa228aad6d947177c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNjg3Mw==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r421936873", "bodyText": "Seems NOT_SUPPORTED is only thrown by OrcWriter but not reader. Did I miss anything?", "author": "highker", "createdAt": "2020-05-08T04:53:20Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -360,23 +362,29 @@ public static OrcSelectivePageSource createOrcPageSource(\n \n             List<FilterFunction> filterFunctions = toFilterFunctions(replaceExpression(remainingPredicate, variableToInput), bucketAdapter, session, rowExpressionService.getDeterminismEvaluator(), rowExpressionService.getPredicateCompiler());\n \n-            OrcSelectiveRecordReader recordReader = reader.createSelectiveRecordReader(\n-                    columnTypes,\n-                    outputIndices,\n-                    tupleDomainFilters,\n-                    filterFunctions,\n-                    inputs.inverse(),\n-                    requiredSubfields,\n-                    typedPrefilledValues,\n-                    Maps.transformValues(mappedCoercers, Function.class::cast),\n-                    orcPredicate,\n-                    start,\n-                    length,\n-                    hiveStorageTimeZone,\n-                    session.getSqlFunctionProperties().isLegacyMapSubscript(),\n-                    systemMemoryUsage,\n-                    Optional.empty(),\n-                    INITIAL_BATCH_SIZE);\n+            OrcSelectiveRecordReader recordReader;\n+            try {\n+                recordReader = reader.createSelectiveRecordReader(\n+                        columnTypes,\n+                        outputIndices,\n+                        tupleDomainFilters,\n+                        filterFunctions,\n+                        inputs.inverse(),\n+                        requiredSubfields,\n+                        typedPrefilledValues,\n+                        Maps.transformValues(mappedCoercers, Function.class::cast),\n+                        orcPredicate,\n+                        start,\n+                        length,\n+                        hiveStorageTimeZone,\n+                        session.getSqlFunctionProperties().isLegacyMapSubscript(),\n+                        systemMemoryUsage,\n+                        Optional.empty(),\n+                        INITIAL_BATCH_SIZE);\n+            }\n+            catch (NotSupportedException e) {\n+                throw new PrestoException(NOT_SUPPORTED, e.getMessage(), e);", "originalCommit": "17e10686d748e1456214d23fa228aad6d947177c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk0ODE0Mg==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r421948142", "bodyText": "OrcSelectivePageSourceFactory.createSelectiveRecordReader() --> OrcReader.createSelectiveRecordReader() --> new OrcSelectiveRecordReader() --> super --> AbstractOrcRecordReader() --> createWriteStatisticsBuilder() --> new StatisticsValidation() --> new ColumnStatisticsValidation() --> NotSupportedException", "author": "NikhilCollooru", "createdAt": "2020-05-08T05:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNjg3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MDY5Mg==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r421950692", "bodyText": "Got it. I think we can relax any orc writer validation-related callsites. Let's replace NOT_SUPPORTED with generic internal error for it. The validation code was introduced for orc writer rollout. It is not used anymore.", "author": "highker", "createdAt": "2020-05-08T05:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNjg3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk3Nzg1Mw==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r421977853", "bodyText": "Oh okay got it. Will throw as GenericInternalException.", "author": "NikhilCollooru", "createdAt": "2020-05-08T07:00:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzNjg3Mw=="}], "type": "inlineReview"}, {"oid": "77f913c43c338713ecb4d46a95f846a7f117ad73", "url": "https://github.com/prestodb/presto/commit/77f913c43c338713ecb4d46a95f846a7f117ad73", "message": "Drop presto-orc usage of INVALID_FUNCTION_ARGUMENT PrestoException", "committedDate": "2020-05-08T06:26:46Z", "type": "commit"}, {"oid": "dcb894e027664f74b4a5f82ccd990cad9c7b1418", "url": "https://github.com/prestodb/presto/commit/dcb894e027664f74b4a5f82ccd990cad9c7b1418", "message": "Drop presto-orc usage of GENERIC_INTERNAL_ERROR PrestoException", "committedDate": "2020-05-08T06:27:02Z", "type": "commit"}, {"oid": "d33eef3675f3185cb7a832e5cc977588746c2079", "url": "https://github.com/prestodb/presto/commit/d33eef3675f3185cb7a832e5cc977588746c2079", "message": "Drop presto-orc usage of NOT_SUPPORTED PrestoException", "committedDate": "2020-05-08T06:57:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2MTY1Mg==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r422261652", "bodyText": "But checking the callsites, I think we need to catch NotSupportedException for getNextPage method in both OrcBatchPageSource and OrcSelectivePageSource. We also need to catch InvalidFunctionArgumentException for OrcBatchPageSource.getNextPage", "author": "highker", "createdAt": "2020-05-08T17:10:02Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/ExceptionWrappingMetadataReader.java", "diffHunk": "@@ -114,7 +116,9 @@ public StripeFooter readStripeFooter(List<OrcType> types, InputStream inputStrea\n \n     private OrcCorruptionException propagate(Throwable throwable, String message)\n     {\n-        propagateIfPossible(throwable, PrestoException.class);\n+        propagateIfPossible(throwable, InvalidFunctionArgumentException.class);\n+        propagateIfPossible(throwable, NotSupportedException.class);", "originalCommit": "d33eef3675f3185cb7a832e5cc977588746c2079", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzMjI2MA==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r422332260", "bodyText": "Actually i blindly replaced PrestoException here will all three. But looking deeper , will PrestoException ever be raised  by its callers  readBloomFilterIndexes(), readRowIndexes(), readStripeFooter() etc ?", "author": "NikhilCollooru", "createdAt": "2020-05-08T19:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2MTY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzODYyMg==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r422338622", "bodyText": "Actually, is it even possible for throwable here to be InvalidFunctionArgumentException, NotSupportedException, etc?", "author": "highker", "createdAt": "2020-05-08T19:47:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2MTY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0MjM3NQ==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r422342375", "bodyText": "Its not possible. I think we should remove all propagateIfPossible ?", "author": "NikhilCollooru", "createdAt": "2020-05-08T19:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2MTY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0Mjk0NQ==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r422342945", "bodyText": "SG, let's remove", "author": "highker", "createdAt": "2020-05-08T19:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2MTY1Mg=="}], "type": "inlineReview"}, {"oid": "23d24058443f7bc60ddd96422384f43457b54c58", "url": "https://github.com/prestodb/presto/commit/23d24058443f7bc60ddd96422384f43457b54c58", "message": "Drop presto-orc usage of NOT_SUPPORTED PrestoException", "committedDate": "2020-05-08T20:16:17Z", "type": "commit"}, {"oid": "23d24058443f7bc60ddd96422384f43457b54c58", "url": "https://github.com/prestodb/presto/commit/23d24058443f7bc60ddd96422384f43457b54c58", "message": "Drop presto-orc usage of NOT_SUPPORTED PrestoException", "committedDate": "2020-05-08T20:16:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxMzEyMQ==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r468313121", "bodyText": "Why this line get removed as well? -- I have seen IOException (e.g. connection reset when reading from storage system) are now treated as HIVE_BAD_DATA  due to Presto thought it's OrcCorruptionException?\ncc @NikhilCollooru , @highker", "author": "wenleix", "createdAt": "2020-08-11T04:01:36Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/ExceptionWrappingMetadataReader.java", "diffHunk": "@@ -114,7 +112,6 @@ public StripeFooter readStripeFooter(List<OrcType> types, InputStream inputStrea\n \n     private OrcCorruptionException propagate(Throwable throwable, String message)\n     {\n-        propagateIfPossible(throwable, PrestoException.class);", "originalCommit": "23d24058443f7bc60ddd96422384f43457b54c58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxNDUwMA==", "url": "https://github.com/prestodb/presto/pull/14498#discussion_r468314500", "bodyText": "I see. Because we want to drop PrestoException class from presto-orc. But in that case shouldn't we figure out some way to propagate it (without referring to PrestoException)?", "author": "wenleix", "createdAt": "2020-08-11T04:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxMzEyMQ=="}], "type": "inlineReview"}]}