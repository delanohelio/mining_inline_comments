{"pr_number": 15377, "pr_title": "Use more efficient getApproximateLogicalSizeInBytes in OrcWriter", "pr_createdAt": "2020-10-30T08:37:51Z", "pr_url": "https://github.com/prestodb/presto/pull/15377", "timeline": [{"oid": "12173d1d8ddd88821d3fb6aea1c998ef0e76db44", "url": "https://github.com/prestodb/presto/commit/12173d1d8ddd88821d3fb6aea1c998ef0e76db44", "message": "Use more efficient getApproximateLogicalSizeInBytes in OrcWriter\n\nOrcWriter.estimateAverageLogicalSizePerRow has the top memory allocation\nin some KDS pipeline. Since the original code was to estimate the page's\nlogical size and do not require accurate size to be calculated, this\ncommit changes the call of the expensive getLogicalSizeInBytes method to\na much faster and momory friendly method getApproximateLogicalSizeInBytes\nthat estimate the approximate logical size of a page.", "committedDate": "2020-10-30T21:54:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQxMzUwMg==", "url": "https://github.com/prestodb/presto/pull/15377#discussion_r515413502", "bodyText": "There are two changes here.\n\nCall approximate logical size, which is faster then getLogicalSizeInBytes()\nCalculate whole page, which may be slower\n\nHave you considered to not calculating the whole page by adding a function page.getApproximateRegionLogicalSizeInBytes(position = 0, length = 100) ? I am not sure how faster it would be, however it guarantees there will be no regression due to calculating the whole page.", "author": "viczhang861", "createdAt": "2020-10-30T22:46:11Z", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "diffHunk": "@@ -309,8 +309,7 @@ public void write(Page page)\n         }\n \n         // avoid chunk with huge logical size\n-        int averageLogicalSizePerRow = estimateAverageLogicalSizePerRow(page);\n-        int maxChunkRowCount = max(1, chunkMaxLogicalBytes / max(1, averageLogicalSizePerRow));\n+        int maxChunkRowCount = toIntExact(max(1, chunkMaxLogicalBytes / max(1, page.getApproximateLogicalSizeInBytes() / page.getPositionCount())));", "originalCommit": "12173d1d8ddd88821d3fb6aea1c998ef0e76db44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyMzE4OA==", "url": "https://github.com/prestodb/presto/pull/15377#discussion_r515423188", "bodyText": "@viczhang861 Thanks for reviewing the PR so quickly! getApproximateRegionLogicalSizeInBytes is the same fast calculating a region as calculating a whole page. It is over 20x faster than getLogicalSizeInBytes() and do not allocate memory for DictionaryBlock as shown in #15272\nLet's see the difference for the two functions in DictionaryBlock\n@Override\n    public long getRegionLogicalSizeInBytes(int positionOffset, int length)\n    {\n        if (positionOffset == 0 && length == getPositionCount() && logicalSizeInBytes >= 0) {\n            return logicalSizeInBytes;\n        }\n\n        long sizeInBytes = 0;\n        long[] seenSizes = new long[dictionary.getPositionCount()];\n        Arrays.fill(seenSizes, -1L);\n        for (int i = positionOffset; i < positionOffset + length; i++) {\n            int position = getId(i);\n            if (seenSizes[position] < 0) {\n                seenSizes[position] = dictionary.getRegionLogicalSizeInBytes(position, 1);\n            }\n            sizeInBytes += seenSizes[position];\n        }\n\n        if (positionOffset == 0 && length == getPositionCount()) {\n            logicalSizeInBytes = sizeInBytes;\n        }\n\n        return sizeInBytes;\n    }\n\n    @Override\n    public long getApproximateRegionLogicalSizeInBytes(int position, int length)\n    {\n        int dictionaryPositionCount = dictionary.getPositionCount();\n        return dictionaryPositionCount == 0 ? 0 : dictionary.getApproximateRegionLogicalSizeInBytes(0, dictionaryPositionCount) * length / dictionaryPositionCount;\n    }\n\nThe bad thing in getRegionLogicalSizeInBytes was the memory allocation long[] seenSizes = new long[dictionary.getPositionCount()];.  getApproximateRegionLogicalSizeInBytes avoids this problem and just has scalar arithmetic operations.\nWith this in mind, calculating the size for the whole page is more accurate and advantageous.", "author": "yingsu00", "createdAt": "2020-10-30T23:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQxMzUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0MDQyMw==", "url": "https://github.com/prestodb/presto/pull/15377#discussion_r515440423", "bodyText": "@yingsu00 Thanks for the explanation !", "author": "viczhang861", "createdAt": "2020-10-31T01:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQxMzUwMg=="}], "type": "inlineReview"}, {"oid": "f06c5b76217ca66e0ef06c324551f52d796cfa16", "url": "https://github.com/prestodb/presto/commit/f06c5b76217ca66e0ef06c324551f52d796cfa16", "message": "Use more efficient getApproximateLogicalSizeInBytes in OrcWriter\n\nOrcWriter.estimateAverageLogicalSizePerRow has the top memory allocation\nin some KDS pipeline. Since the original code was to estimate the page's\nlogical size and do not require accurate size to be calculated, this\ncommit changes the call of the expensive getLogicalSizeInBytes method to\na much faster and momory friendly method getApproximateLogicalSizeInBytes\nthat estimate the approximate logical size of a page.", "committedDate": "2020-10-31T04:40:23Z", "type": "forcePushed"}, {"oid": "a95f537327e5cbb7bef202c558d3fb010781826a", "url": "https://github.com/prestodb/presto/commit/a95f537327e5cbb7bef202c558d3fb010781826a", "message": "Use more efficient getApproximateLogicalSizeInBytes in OrcWriter\n\nOrcWriter.estimateAverageLogicalSizePerRow has the top memory allocation\nin some KDS pipeline. Since the original code was to estimate the page's\nlogical size and do not require accurate size to be calculated, this\ncommit changes the call of the expensive getLogicalSizeInBytes method to\na much faster and momory friendly method getApproximateLogicalSizeInBytes\nthat estimate the approximate logical size of a page.", "committedDate": "2020-10-31T07:06:20Z", "type": "commit"}, {"oid": "a95f537327e5cbb7bef202c558d3fb010781826a", "url": "https://github.com/prestodb/presto/commit/a95f537327e5cbb7bef202c558d3fb010781826a", "message": "Use more efficient getApproximateLogicalSizeInBytes in OrcWriter\n\nOrcWriter.estimateAverageLogicalSizePerRow has the top memory allocation\nin some KDS pipeline. Since the original code was to estimate the page's\nlogical size and do not require accurate size to be calculated, this\ncommit changes the call of the expensive getLogicalSizeInBytes method to\na much faster and momory friendly method getApproximateLogicalSizeInBytes\nthat estimate the approximate logical size of a page.", "committedDate": "2020-10-31T07:06:20Z", "type": "forcePushed"}]}