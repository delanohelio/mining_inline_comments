{"pr_number": 14181, "pr_title": "Support determinism analysis for simple queries with top-level ORDER BY LIMIT clause", "pr_createdAt": "2020-02-28T21:57:03Z", "pr_url": "https://github.com/prestodb/presto/pull/14181", "timeline": [{"oid": "e70160e100e595e79d3803adaf4696d07c161126", "url": "https://github.com/prestodb/presto/commit/e70160e100e595e79d3803adaf4696d07c161126", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-01T04:27:15Z", "type": "forcePushed"}, {"oid": "1dc2ad2efc9307d05cfb732e60d755d4c0176a05", "url": "https://github.com/prestodb/presto/commit/1dc2ad2efc9307d05cfb732e60d755d4c0176a05", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-02T07:00:46Z", "type": "forcePushed"}, {"oid": "65daf961886925e189ed87b0d1bd828929bcf8fe", "url": "https://github.com/prestodb/presto/commit/65daf961886925e189ed87b0d1bd828929bcf8fe", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-02T19:24:03Z", "type": "forcePushed"}, {"oid": "6cb6dd058a44e0494625024e58c4f1e504f6bdea", "url": "https://github.com/prestodb/presto/commit/6cb6dd058a44e0494625024e58c4f1e504f6bdea", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-02T20:07:51Z", "type": "forcePushed"}, {"oid": "42ea570d9918247d6fc673733a237fe87286e7c1", "url": "https://github.com/prestodb/presto/commit/42ea570d9918247d6fc673733a237fe87286e7c1", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-02T20:08:28Z", "type": "forcePushed"}, {"oid": "b237d04cdcdfe330d4f0f4eea35a8fa2db672a9c", "url": "https://github.com/prestodb/presto/commit/b237d04cdcdfe330d4f0f4eea35a8fa2db672a9c", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-02T20:17:29Z", "type": "forcePushed"}, {"oid": "5c265fb491cab60f3256660ffd4400349caf07dc", "url": "https://github.com/prestodb/presto/commit/5c265fb491cab60f3256660ffd4400349caf07dc", "message": "Support determinism analysis for ORDER BY LIMIT queries", "committedDate": "2020-03-03T00:50:27Z", "type": "forcePushed"}, {"oid": "f0eabe57ff1153516322ed4512764392e6a3d96f", "url": "https://github.com/prestodb/presto/commit/f0eabe57ff1153516322ed4512764392e6a3d96f", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are support,\nbut only when the query part is a Select query, not a SetOperation,\nsuch as UNION, Intersect, and Except.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)th row.", "committedDate": "2020-03-03T00:51:14Z", "type": "forcePushed"}, {"oid": "d99ba6ffb5c739405174e456207581416acbe6fb", "url": "https://github.com/prestodb/presto/commit/d99ba6ffb5c739405174e456207581416acbe6fb", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are support,\nbut only when the query part is a Select query, not a SetOperation,\nsuch as UNION, Intersect, and Except.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)th row.", "committedDate": "2020-03-03T01:33:22Z", "type": "forcePushed"}, {"oid": "42d86d432e72513fd0bbfd1eb7624010a857f84f", "url": "https://github.com/prestodb/presto/commit/42d86d432e72513fd0bbfd1eb7624010a857f84f", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e.,Union, Intersect, and Except).\n\nINSERT INTO SELECT ... ORDER BY ... LIMIT ... is supported, but\nINSERT INTO SELECT ... UNION ALL ... SELECT ... ORDER BY ... LIMIT ...\nis not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)th row.", "committedDate": "2020-03-03T01:43:19Z", "type": "forcePushed"}, {"oid": "a0a2a595ad502a4c6d7317ff5a7cd0dfd40b0fe8", "url": "https://github.com/prestodb/presto/commit/a0a2a595ad502a4c6d7317ff5a7cd0dfd40b0fe8", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e.,Union, Intersect, and Except).\n\nINSERT INTO SELECT ... ORDER BY ... LIMIT ... is supported, but\nINSERT INTO SELECT ... UNION ALL ... SELECT ... ORDER BY ... LIMIT ...\nis not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-03T01:45:35Z", "type": "forcePushed"}, {"oid": "0f2d92650dbb84c352dd13e5779eefba1a917ee2", "url": "https://github.com/prestodb/presto/commit/0f2d92650dbb84c352dd13e5779eefba1a917ee2", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\nINSERT INTO SELECT ... ORDER BY ... LIMIT ... is supported, but\nINSERT INTO SELECT ... UNION ALL ... SELECT ... ORDER BY ... LIMIT ...\nis not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-03T01:46:10Z", "type": "forcePushed"}, {"oid": "b21cd3caaf1ff2d7ddef492b166e2cc15f051f48", "url": "https://github.com/prestodb/presto/commit/b21cd3caaf1ff2d7ddef492b166e2cc15f051f48", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-03T01:46:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE5OTE4NA==", "url": "https://github.com/prestodb/presto/pull/14181#discussion_r387199184", "bodyText": "javadoc maybe?", "author": "mbasmanova", "createdAt": "2020-03-03T18:07:08Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/LimitQueryDeterminismAnalyzer.java", "diffHunk": "@@ -126,20 +142,82 @@ private LimitQueryDeterminismAnalysis analyzeQuery(Query query)\n         }\n         long limit = parseLong(query.getLimit().get());\n         Optional<String> newLimit = Optional.of(Long.toString(limit + 1));\n+\n         Query newLimitQuery = new Query(query.getWith(), query.getQueryBody(), Optional.empty(), newLimit);\n         return analyzeLimitNoOrderBy(newLimitQuery, limit);\n     }\n \n+    // To check whether all ORDER BY columns are matching between the n-th and the (n+1)-th row, we", "originalCommit": "b21cd3caaf1ff2d7ddef492b166e2cc15f051f48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIzMTQzMg==", "url": "https://github.com/prestodb/presto/pull/14181#discussion_r387231432", "bodyText": "it is too late to check name and index for null; if they were nulls the checkState would already fail with NPE; consider moving checkState after assignments", "author": "mbasmanova", "createdAt": "2020-03-03T19:06:17Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/LimitQueryDeterminismAnalyzer.java", "diffHunk": "@@ -175,8 +253,89 @@ private LimitQueryDeterminismAnalysis analyzeLimitNoOrderBy(Query newLimitQuery,\n         return FAILED_DATA_CHANGED;\n     }\n \n+    private LimitQueryDeterminismAnalysis analyzeLimitOrderBy(Query tieInspectorQuery, List<ColumnNameOrIndex> orderByKeys, long limit)\n+    {\n+        QueryResult<List<Object>> result = callWithQueryStatsConsumer(\n+                () -> prestoAction.execute(tieInspectorQuery, DETERMINISM_ANALYSIS, new TieInspector(limit)),\n+                stats -> verificationContext.setLimitQueryAnalysisQueryId(stats.getQueryId()));\n+        if (result.getResults().isEmpty()) {\n+            return FAILED_DATA_CHANGED;\n+        }\n+        if (result.getResults().size() == 1) {\n+            return DETERMINISTIC;\n+        }\n+\n+        List<Object> row1 = result.getResults().get(0);\n+        List<Object> row2 = result.getResults().get(1);\n+        checkState(row1.size() == row2.size(), \"Rows have different sizes: %s %s\", row1.size(), row2.size());\n+        for (ColumnNameOrIndex orderByKey : orderByKeys) {\n+            int columnIndex = orderByKey.getIndex().isPresent()\n+                    ? orderByKey.getIndex().get()\n+                    : result.getColumnIndex(orderByKey.getName().orElseThrow(() -> new IllegalArgumentException(format(\"Invalid orderByKey: %s\", orderByKey))));\n+            if (!Objects.equals(row1.get(columnIndex), row2.get(columnIndex))) {\n+                return DETERMINISTIC;\n+            }\n+        }\n+        return NON_DETERMINISTIC;\n+    }\n+\n     private static boolean isLimitAll(String limitClause)\n     {\n         return limitClause.toLowerCase(ENGLISH).equals(\"all\");\n     }\n+\n+    private static class ColumnNameOrIndex\n+    {\n+        private final Optional<String> name;\n+        private final Optional<Integer> index;\n+\n+        private ColumnNameOrIndex(Optional<String> name, Optional<Integer> index)\n+        {\n+            checkState(name.isPresent() ^ index.isPresent(), \"Exactly one of name and index must be present: %s %s\", name, index);\n+            this.name = requireNonNull(name, \"name is null\");", "originalCommit": "b21cd3caaf1ff2d7ddef492b166e2cc15f051f48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2NDU0OA==", "url": "https://github.com/prestodb/presto/pull/14181#discussion_r387264548", "bodyText": "nit: .filter(SingleColumn.class::isInstance)", "author": "mbasmanova", "createdAt": "2020-03-03T20:08:08Z", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/LimitQueryDeterminismAnalyzer.java", "diffHunk": "@@ -126,20 +142,82 @@ private LimitQueryDeterminismAnalysis analyzeQuery(Query query)\n         }\n         long limit = parseLong(query.getLimit().get());\n         Optional<String> newLimit = Optional.of(Long.toString(limit + 1));\n+\n         Query newLimitQuery = new Query(query.getWith(), query.getQueryBody(), Optional.empty(), newLimit);\n         return analyzeLimitNoOrderBy(newLimitQuery, limit);\n     }\n \n+    // To check whether all ORDER BY columns are matching between the n-th and the (n+1)-th row, we\n+    // may need to project additional columns.\n+    // Takes in the list of SelectItems of the original query and append additional SelectItems to\n+    // the list. Return the a list ColumnNameOrIndex, which tells us how to find the ORDER BY columns\n+    // from the query result.\n+    private List<ColumnNameOrIndex> populateSelectItems(List<SelectItem> selectItems, OrderBy orderBy)\n+    {\n+        Set<String> aliases = selectItems.stream()\n+                .filter(item -> item instanceof SingleColumn)", "originalCommit": "b21cd3caaf1ff2d7ddef492b166e2cc15f051f48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "898d2f7a4e5e4b294f969d267850dd056659a89c", "url": "https://github.com/prestodb/presto/commit/898d2f7a4e5e4b294f969d267850dd056659a89c", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-03T20:45:57Z", "type": "forcePushed"}, {"oid": "1d3c040e1ec4b068bb4a88bf859701c488590487", "url": "https://github.com/prestodb/presto/commit/1d3c040e1ec4b068bb4a88bf859701c488590487", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-03T20:54:53Z", "type": "forcePushed"}, {"oid": "61ca600eac1db1007fb613fca897ee09b25c2839", "url": "https://github.com/prestodb/presto/commit/61ca600eac1db1007fb613fca897ee09b25c2839", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-03T20:55:40Z", "type": "forcePushed"}, {"oid": "c2caf7fc90e29129fc677b1d6acb1803e1a0fdde", "url": "https://github.com/prestodb/presto/commit/c2caf7fc90e29129fc677b1d6acb1803e1a0fdde", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T00:20:31Z", "type": "forcePushed"}, {"oid": "171cc11566326394e921231722f2a466e38e6d1b", "url": "https://github.com/prestodb/presto/commit/171cc11566326394e921231722f2a466e38e6d1b", "message": "Improve Presto results conversion\n\n- Fix the failure when column is null.\n- Fix incorrect index in default result set converter.\n- Allow result rows to be ignored.", "committedDate": "2020-03-04T00:21:05Z", "type": "commit"}, {"oid": "d9141e429769651dbe21e8b1f76fa778e17b18c5", "url": "https://github.com/prestodb/presto/commit/d9141e429769651dbe21e8b1f76fa778e17b18c5", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T00:21:05Z", "type": "forcePushed"}, {"oid": "470dd084827054120f988efeb4e0dfc47a299942", "url": "https://github.com/prestodb/presto/commit/470dd084827054120f988efeb4e0dfc47a299942", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T01:01:30Z", "type": "forcePushed"}, {"oid": "2cbed76e511d1fb599271f550f824053308ad7b7", "url": "https://github.com/prestodb/presto/commit/2cbed76e511d1fb599271f550f824053308ad7b7", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T01:02:45Z", "type": "forcePushed"}, {"oid": "14168b9bfb9dbbd2a0f1fcda88fb33879e847390", "url": "https://github.com/prestodb/presto/commit/14168b9bfb9dbbd2a0f1fcda88fb33879e847390", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T01:04:15Z", "type": "forcePushed"}, {"oid": "ed4d499e2c8336d7622f0de0330b51c0c097656f", "url": "https://github.com/prestodb/presto/commit/ed4d499e2c8336d7622f0de0330b51c0c097656f", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T01:18:55Z", "type": "forcePushed"}, {"oid": "79fe75c19815b48ef423cdd87acc67a7a973f4df", "url": "https://github.com/prestodb/presto/commit/79fe75c19815b48ef423cdd87acc67a7a973f4df", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T02:09:34Z", "type": "forcePushed"}, {"oid": "176d0f60890d68f412b3e3aa862703ddd5d835ca", "url": "https://github.com/prestodb/presto/commit/176d0f60890d68f412b3e3aa862703ddd5d835ca", "message": "Support determinism analysis for simple ORDER BY LIMIT querie\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T02:35:37Z", "type": "forcePushed"}, {"oid": "e1076371d8a2c4c3df95a2bb2fc42fa8fe72c48e", "url": "https://github.com/prestodb/presto/commit/e1076371d8a2c4c3df95a2bb2fc42fa8fe72c48e", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T02:35:52Z", "type": "commit"}, {"oid": "e1076371d8a2c4c3df95a2bb2fc42fa8fe72c48e", "url": "https://github.com/prestodb/presto/commit/e1076371d8a2c4c3df95a2bb2fc42fa8fe72c48e", "message": "Support determinism analysis for simple ORDER BY LIMIT queries\n\nSupport determinism analysis for simple queries with top-level ORDER\nBY LIMIT clause. Select, Insert, and CreateTableAsSelect are supported,\nbut only when the query part is a Select query, not a SetOperation(\ni.e., Union, Intersect, and Except).\n\n\"INSERT INTO ...SELECT ... ORDER BY ... LIMIT ...\" is supported.\n\"INSERT INTO ... SELECT ... UNION ALL ... SELECT ... ORDER BY ...\nLIMIT ...\" is not supported.\n\nTo check for determinism of ORDER BY LIMIT queries, we run the Select\nquery with limit N + 1, project all the necessary ORDER BY columns,\nand check whether there is a tie on the ORDER BY columns for the\nn-th row and the (n+1)-th row.", "committedDate": "2020-03-04T02:35:52Z", "type": "forcePushed"}]}