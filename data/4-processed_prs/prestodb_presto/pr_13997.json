{"pr_number": 13997, "pr_title": "Add release notes for 0.231", "pr_createdAt": "2020-01-22T19:26:03Z", "pr_url": "https://github.com/prestodb/presto/pull/13997", "timeline": [{"oid": "8425385d23f918bae35e0a7ad81c6ee34b08d88a", "url": "https://github.com/prestodb/presto/commit/8425385d23f918bae35e0a7ad81c6ee34b08d88a", "message": "Add release notes for 0.231", "committedDate": "2020-01-22T19:45:52Z", "type": "forcePushed"}, {"oid": "0564e2397a33db6346089b389a349b053bc129f1", "url": "https://github.com/prestodb/presto/commit/0564e2397a33db6346089b389a349b053bc129f1", "message": "Add release notes for 0.231", "committedDate": "2020-01-22T22:05:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgxNg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372595816", "bodyText": "i don't know what this means", "author": "rschlussel", "createdAt": "2020-01-29T19:49:44Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNzExNQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372637115", "bodyText": "How about\nAdd a session property to configure merging partitions. Default option is LEGACY and can be overwritten to TOP_DOWN or BOTTOM_UP", "author": "bhhari", "createdAt": "2020-01-29T21:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNzgyOQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372637829", "bodyText": "I still don't understand this.  What partitions are we merging, and what do legacy, top_down, and bottom_up mean?", "author": "rschlussel", "createdAt": "2020-01-29T21:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMzczNg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373103736", "bodyText": "@jessesleeping  can you provide a better description for this", "author": "bhhari", "createdAt": "2020-01-30T17:59:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU4MTk1NQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373581955", "bodyText": "How about \"Add a new session property aggregation_partitioning_merging_strategy to configure partition merging strategy when adding exchange around aggregation node.\"", "author": "bhhari", "createdAt": "2020-01-31T16:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5Njk4NA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372596984", "bodyText": "I don't think \"window\" should be capitalized.  Also, has this been added to the window functions documentation.  Can we link to documentation here?", "author": "rschlussel", "createdAt": "2020-01-29T19:52:02Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations.\n+  Polygon WKTs must have closed loops. Previously Esri would close the loops for you.\n+  Certain other invalid geometries will fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order.\n+  Fixes incorrect calculation of extreme points in certain cases.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals\n+* Add IGNORE NULLS clause to various Window functions", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5ODc5MA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372598790", "bodyText": "Improve efficiency of ST_Buffer.  The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results.  It also better handles buffering with small (<1e-9) distances.\nAlso, link to the documentation for ST_Buffer", "author": "rschlussel", "createdAt": "2020-01-29T19:56:01Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5OTg4NQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372599885", "bodyText": "How about the following:\nUse JTS instead of Esri for many geometrical operations to improve efficiency\nand fix incorrect calculation of extreme points in certain cases. Polygon WKTs\nare now required to have closed loops, whereas previously Esri would close the\nloops for you. Certain other invalid geometries will also fail to be created from\nWKTs, such as `LINESTRING(0 0, 0 0, 0 0)`. Returned WKTs may have a \ndifferent point order than before.\n\nAlso, @jagill  is it true that this is also about efficiency or is it just about fixing the correctness bug?  I was going off of vague recollections.", "author": "rschlussel", "createdAt": "2020-01-29T19:58:20Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkyMTQ5MQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372921491", "bodyText": "It is both about efficiency and correctness bugs.  I would add:  \"Certain invalid geometries will now throw an exception on construction.\"", "author": "jagill", "createdAt": "2020-01-30T12:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5OTg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNjQ1Nw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373116457", "bodyText": "created a issue #14031 and linked it in the doc to keep it small", "author": "bhhari", "createdAt": "2020-01-30T18:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5OTg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTUxNA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372601514", "bodyText": "Fix accounting of raw input bytes in ScanFilterAndProjectOperator.", "author": "rschlussel", "createdAt": "2020-01-29T20:01:42Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTczNg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372601736", "bodyText": "I don't know what this means", "author": "rschlussel", "createdAt": "2020-01-29T20:02:11Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNTIyMQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373115221", "bodyText": "updated with @rongrong  suggestion", "author": "bhhari", "createdAt": "2020-01-30T18:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTczNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMjA0Nw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372602047", "bodyText": "this should be in the Hive Changes", "author": "rschlussel", "createdAt": "2020-01-29T20:02:52Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwNTg0Nw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372605847", "bodyText": "also, i would say something like\nAdd support for the AWS Default Credentials Provider for s3", "author": "rschlussel", "createdAt": "2020-01-29T20:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMjA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMzU0NQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372603545", "bodyText": "I don't think this change is about the optimizer performance.  I think it's just optimizing the performance of array_join.  (#13874)\nImprove performance of array_join.", "author": "rschlussel", "createdAt": "2020-01-29T20:05:59Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwNjQ0OA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372606448", "bodyText": "write out the word \"with\".  Also, put this under Hive changes.", "author": "rschlussel", "createdAt": "2020-01-29T20:12:37Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations.\n+  Polygon WKTs must have closed loops. Previously Esri would close the loops for you.\n+  Certain other invalid geometries will fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order.\n+  Fixes incorrect calculation of extreme points in certain cases.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals\n+* Add IGNORE NULLS clause to various Window functions\n+\n+Verifier Changes\n+________________\n+* Add checks for the cardinalities sum when validating an array column.\n+* Improve Verifier to skip verification when checksum query fails to compile.\n+* Fix an issue where checksum query text and ID are not recorded if the checksum query fails.\n+* Add new columns ``control_session_properties`` and `test_session_properties` to ``verifier_queries``, and remove column ``session_properties_json``. The value of the removed column can be copied to the two new columns for the schema change.\n+* Add details of determinism analysis runs to the output.\n+* Add configuration property ``max-determinism-analysis-runs`` to control maximum number of determinism analysis runs in case of column mismatch.\n+* Add configuration property ``run-teardown-for-determinism-analysis`` to allow disabling teardown for determinism analysis runs.\n+\n+SPI Changes\n+___________\n+* Add API to check if the query is unexpectedly modified using the credentials passed in the identity.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch w/Parquet INT64 & Timestamp.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyMjMwNw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372622307", "bodyText": "According to release note guideline, fixes should go first: https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines#order-of-changes", "author": "rongrong", "createdAt": "2020-01-29T20:49:52Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.", "originalCommit": "0564e2397a33db6346089b389a349b053bc129f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzMTA1Nw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372631057", "bodyText": "yes changed the order of sections and changes according to the wiki", "author": "bhhari", "createdAt": "2020-01-29T21:10:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyMjMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNTI3Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372635276", "bodyText": "quote IS DISTINCT FROM? But what is the fix? What was the problem before?", "author": "rongrong", "createdAt": "2020-01-29T21:19:13Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNzYyMQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372637621", "bodyText": "I also don't quite understand this sentence. From #13879 it seems that this is about improving stats. @wenleix could you help reword this? Otherwise I think the commit message itself is better than this: Keep sum stat for string when min/max stat is too long in ORC writer.", "author": "rongrong", "createdAt": "2020-01-29T21:24:07Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MDc2NA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372640764", "bodyText": "Can we use :ref: instead of hard coded link here?", "author": "rongrong", "createdAt": "2020-01-29T21:31:07Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NTU4Nw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372655587", "bodyText": ":doc:/functions/geospatial is that more appropriate", "author": "bhhari", "createdAt": "2020-01-29T22:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MDc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MTM4MA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372641380", "bodyText": "This is also a \"improve\". Maybe reword it as Improve efficiency and ... by use JTS instead of Esri for ... and group this together with other geometry related improvement?", "author": "rongrong", "createdAt": "2020-01-29T21:32:32Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MTgyNA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372641824", "bodyText": "Also this item is too long. Make it shorter and more abstract with a link to the issue if necessary.", "author": "rongrong", "createdAt": "2020-01-29T21:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MTM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MjI3NA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372642274", "bodyText": "use :ref:", "author": "rongrong", "createdAt": "2020-01-29T21:34:20Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0Mzc3MA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372643770", "bodyText": "``ST_Buffer``", "author": "rongrong", "createdAt": "2020-01-29T21:37:10Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0Mzk0NA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372643944", "bodyText": "double ``", "author": "rongrong", "createdAt": "2020-01-29T21:37:28Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDU4Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372644586", "bodyText": ":func:approx_percentile?", "author": "rongrong", "createdAt": "2020-01-29T21:38:43Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDY2Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372644666", "bodyText": "double ``", "author": "rongrong", "createdAt": "2020-01-29T21:38:53Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDkwNg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372644906", "bodyText": "Is the convention uppercase S3 or lowercase s3?", "author": "rongrong", "createdAt": "2020-01-29T21:39:26Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for s3.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY2ODE3Mw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372668173", "bodyText": "it should be S3", "author": "bhhari", "createdAt": "2020-01-29T22:32:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDkwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NTA0Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372645046", "bodyText": "quote INT64 and timestamp?", "author": "rongrong", "createdAt": "2020-01-29T21:39:47Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for s3.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch with Parquet INT64 & Timestamp.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NTM2Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372645366", "bodyText": "inconsistent quote", "author": "rongrong", "createdAt": "2020-01-29T21:40:27Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for s3.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch with Parquet INT64 & Timestamp.\n+\n+Raptor Changes\n+______________\n+* Add the ability to read and write with delta deletes.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where checksum query text and ID are not recorded if the checksum query fails.\n+* Improve Verifier to skip verification when checksum query fails to compile.\n+* Add checks for the cardinalities sum when validating an array column.\n+* Add new columns ``control_session_properties`` and `test_session_properties` to ``verifier_queries``, and remove column ``session_properties_json``. The value of the removed column can be copied to the two new columns for the schema change.", "originalCommit": "a19edf3039f0731c5f518920cef36b17f7c444b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4cfac9666f513095a3e660f89528252d0995604c", "url": "https://github.com/prestodb/presto/commit/4cfac9666f513095a3e660f89528252d0995604c", "message": "Add release notes for 0.231", "committedDate": "2020-01-30T01:47:37Z", "type": "forcePushed"}, {"oid": "5717cb7e04f63330ff03b0d5fbfcfd8bdfdb3486", "url": "https://github.com/prestodb/presto/commit/5717cb7e04f63330ff03b0d5fbfcfd8bdfdb3486", "message": "Add release notes for 0.231", "committedDate": "2020-01-30T01:51:45Z", "type": "forcePushed"}, {"oid": "5a5992fef67c56bfdaf9342ada3ed8dc443b4a7f", "url": "https://github.com/prestodb/presto/commit/5a5992fef67c56bfdaf9342ada3ed8dc443b4a7f", "message": "Add release notes for 0.231", "committedDate": "2020-01-30T02:06:18Z", "type": "forcePushed"}, {"oid": "53550da11a2399174e22273da5541ed8941447c9", "url": "https://github.com/prestodb/presto/commit/53550da11a2399174e22273da5541ed8941447c9", "message": "Add release notes for 0.231", "committedDate": "2020-01-30T18:17:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNjE5MQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373116191", "bodyText": ":func:array_join?", "author": "rongrong", "createdAt": "2020-01-30T18:25:36Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.", "originalCommit": "53550da11a2399174e22273da5541ed8941447c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzI2Mg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373117262", "bodyText": "Maybe just change it to Improve efficiency of :func:ST_Buffer. ... and remove the reference at the end.", "author": "rongrong", "createdAt": "2020-01-30T18:27:43Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.", "originalCommit": "53550da11a2399174e22273da5541ed8941447c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373117972", "bodyText": "Is this an improvement or a fix? @wenleix", "author": "rongrong", "createdAt": "2020-01-30T18:29:08Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Keep sum stat for string when min/max stat is too long in ORC writer.", "originalCommit": "53550da11a2399174e22273da5541ed8941447c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyMTA1OA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373121058", "bodyText": "I still don't understand this one.  what's this the \"sum\" of?  Is this for stats that go in the orc footer? Also, I think ORC writer things go under the Hive Changes.", "author": "rschlussel", "createdAt": "2020-01-30T18:35:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0NjMzNA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373246334", "bodyText": "@rongrong : It's an improvement.\n@rschlussel : It's the sum of length of the strings.  Previously, when the min/max of the string is too long, we drop all the stats on that column. so ORC Writer doesn't use too much memory. However, we could still keep the sum of length of that column. This can help, for example the IO team to do some estimation based on metadata :)", "author": "wenleix", "createdAt": "2020-01-30T23:20:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzM1NQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373253355", "bodyText": "ok moved it to HiveChanges @rschlussel  can you confirm if it looks good do we need to update the message", "author": "bhhari", "createdAt": "2020-01-30T23:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2NTY2MA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373265660", "bodyText": "Maybe also reword it to \"Improve string stats by ...\"?", "author": "rongrong", "createdAt": "2020-01-31T00:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwMzM5NQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373303395", "bodyText": "changed it to be \"Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.\" @rongrong  does this look fine?", "author": "bhhari", "createdAt": "2020-01-31T03:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExODY5Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373118696", "bodyText": "What does this look like in text? Please check the generated text and make sure they read fluently.", "author": "rongrong", "createdAt": "2020-01-30T18:30:33Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Keep sum stat for string when min/max stat is too long in ORC writer.\n+* Add support for get partition names by filter.\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add new session property ``aggregation_partitioning_merging_strategy`` to control merging partitions when adding repartition remote exchange around aggregation node. Default option is ``LEGACY`` and can be overwritten to ``TOP_DOWN`` or ``BOTTOM_UP``.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.", "originalCommit": "53550da11a2399174e22273da5541ed8941447c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2MjU2Mw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373162563", "bodyText": "its \"Add IGNORE NULLS clause to various Window Functions.\"\nthe \"Window Functions\" goes to the windows.html page", "author": "bhhari", "createdAt": "2020-01-30T19:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExODY5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNjE3NA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373126174", "bodyText": "This isn't a user focused description @ajaygeorge  @arhimondr is this specific to the Hive connector? Is there an SPI change that goes with this?\nWould something like\nAdd method getPartitionNamesByFilter` to HiveMetastore SPI to get partitions based on a range predicate.\nAlso, if it's specific to the HiveMetastore, it belongs under \"Hive Changes\"", "author": "rschlussel", "createdAt": "2020-01-30T18:45:31Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Keep sum stat for string when min/max stat is too long in ORC writer.\n+* Add support for get partition names by filter.", "originalCommit": "53550da11a2399174e22273da5541ed8941447c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0Mjc5Mg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373142792", "bodyText": "@rschlussel I think you are right.\n\nIt should be under \"Hive Changes\" .\nThere are no changes to presto-spi for this.\nDescription can be : Add method getPartitionNamesByFilter to HiveMetastore to get partitions based on predicates.\n\n@arhimondr , It would be good if you can take a quick look as well.", "author": "ajaygeorge", "createdAt": "2020-01-30T19:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNjE3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE3NDI3NA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373174274", "bodyText": "This change is not user visible, and doesn't change anything in practice. I wonder if we should add this to the release notes all together.", "author": "arhimondr", "createdAt": "2020-01-30T20:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNjE3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNzA4NQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373237085", "bodyText": "ok will remove from the release notes", "author": "bhhari", "createdAt": "2020-01-30T22:52:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNjE3NA=="}], "type": "inlineReview"}, {"oid": "feee79a900eaad2d9d072ab97fd55c861377a78e", "url": "https://github.com/prestodb/presto/commit/feee79a900eaad2d9d072ab97fd55c861377a78e", "message": "Add release notes for 0.231", "committedDate": "2020-01-30T23:01:31Z", "type": "forcePushed"}, {"oid": "8d35015ca66f632d4f3424152d33cf27a13ef6dd", "url": "https://github.com/prestodb/presto/commit/8d35015ca66f632d4f3424152d33cf27a13ef6dd", "message": "Add release notes for 0.231", "committedDate": "2020-01-31T00:09:05Z", "type": "forcePushed"}, {"oid": "c73df8ed7669cc635676c6bf7be70414e92204a7", "url": "https://github.com/prestodb/presto/commit/c73df8ed7669cc635676c6bf7be70414e92204a7", "message": "Add release notes for 0.231", "committedDate": "2020-01-31T08:10:40Z", "type": "forcePushed"}, {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "url": "https://github.com/prestodb/presto/commit/0057390d12e7bd068f12ed8c39c3908c76d28ab9", "message": "Add release notes for 0.231", "committedDate": "2020-01-31T16:56:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2NjY1Mg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373666652", "bodyText": "Should it be \"all string lengths\" or \"all strings lengths\"? I don't know what's the right grammar. \ud83d\ude02", "author": "rongrong", "createdAt": "2020-01-31T20:15:37Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.", "originalCommit": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTc1Mw==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373669753", "bodyText": "either all strings' lengths (with an apostrophe after the s) or 'all string lengths`  as rongrong suggested.", "author": "rschlussel", "createdAt": "2020-01-31T20:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2NjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NTU0Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r374275546", "bodyText": "changed it to \"all strings' lengths\"", "author": "bhhari", "createdAt": "2020-02-03T18:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2NjY1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2Njg2Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373666866", "bodyText": "Should we say \"local storage\" rather than \"local disks\"?", "author": "rongrong", "createdAt": "2020-01-31T20:16:09Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config ``cache.base-directory``.", "originalCommit": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTQ0Ng==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373669446", "bodyText": "I still don't think this is very clear -- what is a partition merging strategy? How would a user decide when to set this property or what the appropriate setting should be?\nOr if it's not really user facing, maybe it doesn't need a release note.", "author": "rschlussel", "createdAt": "2020-01-31T20:22:59Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.", "originalCommit": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwODAyMg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r374308022", "bodyText": "It's a little bit tricky (at least for me) to summarize the change of behavior in a short note. If it's doable, can we keep this note with a link to the PR where I have detailed description on the change of behavior?\nAnother option is to exclude this note as I can imagine only very sophisticated user will need to leverage it. By default it does not change the current behavior.", "author": "jessesleeping", "createdAt": "2020-02-03T19:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNTg1MQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r374325851", "bodyText": "ok added a link to the PR", "author": "bhhari", "createdAt": "2020-02-03T20:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNzIxNQ==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r374327215", "bodyText": "we can probably leave out the note then, but adding a link to a PR or issue is also an option\nyou can link to an issue or pr using the following syntax as appropriate.\nFor issue #1234\n:issue:`1234`\n\nFor pr #1234\n:pr:`1234`", "author": "rschlussel", "createdAt": "2020-02-03T20:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM1MTAzNA==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r374351034", "bodyText": "yes added a link to the PR", "author": "bhhari", "createdAt": "2020-02-03T21:28:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3MDkyMg==", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373670922", "bodyText": "this can go under \"Hive Changes\"", "author": "rschlussel", "createdAt": "2020-01-31T20:27:10Z", "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config ``cache.base-directory``.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for S3.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch with Parquet ``INT64`` & ``Timestamp``.", "originalCommit": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ed066502130bfc07e0b1254c6f7369a61225a105", "url": "https://github.com/prestodb/presto/commit/ed066502130bfc07e0b1254c6f7369a61225a105", "message": "Add release notes for 0.231", "committedDate": "2020-02-03T19:18:24Z", "type": "forcePushed"}, {"oid": "de9385ab2831474c8c5cdbc039ddd94f5c0139de", "url": "https://github.com/prestodb/presto/commit/de9385ab2831474c8c5cdbc039ddd94f5c0139de", "message": "Add release notes for 0.231", "committedDate": "2020-02-03T20:32:48Z", "type": "commit"}, {"oid": "de9385ab2831474c8c5cdbc039ddd94f5c0139de", "url": "https://github.com/prestodb/presto/commit/de9385ab2831474c8c5cdbc039ddd94f5c0139de", "message": "Add release notes for 0.231", "committedDate": "2020-02-03T20:32:48Z", "type": "forcePushed"}]}