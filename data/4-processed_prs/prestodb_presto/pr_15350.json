{"pr_number": 15350, "pr_title": "Add Thrift transport support for TaskStatus", "pr_createdAt": "2020-10-23T20:35:14Z", "pr_url": "https://github.com/prestodb/presto/pull/15350", "timeline": [{"oid": "88c3001a602297d8ecdee5670f8e6c83a1d9816b", "url": "https://github.com/prestodb/presto/commit/88c3001a602297d8ecdee5670f8e6c83a1d9816b", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-23T21:46:35Z", "type": "forcePushed"}, {"oid": "56e7e201dc4da30a988e1bcaccb658c50a5c958c", "url": "https://github.com/prestodb/presto/commit/56e7e201dc4da30a988e1bcaccb658c50a5c958c", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-25T22:18:11Z", "type": "forcePushed"}, {"oid": "4cbdff24fafc6b97a28d068726029af0bb9905c8", "url": "https://github.com/prestodb/presto/commit/4cbdff24fafc6b97a28d068726029af0bb9905c8", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-26T00:31:15Z", "type": "forcePushed"}, {"oid": "b289818275d6ad83622ec830ede1924ad9228d45", "url": "https://github.com/prestodb/presto/commit/b289818275d6ad83622ec830ede1924ad9228d45", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-26T00:35:48Z", "type": "forcePushed"}, {"oid": "5351a34c0c9db556a1b809fa0e6b94cd97ec7f54", "url": "https://github.com/prestodb/presto/commit/5351a34c0c9db556a1b809fa0e6b94cd97ec7f54", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-26T01:31:45Z", "type": "forcePushed"}, {"oid": "d2e3fa5a8b7ded718cb13bb9437d2d4078819dd1", "url": "https://github.com/prestodb/presto/commit/d2e3fa5a8b7ded718cb13bb9437d2d4078819dd1", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-26T01:36:17Z", "type": "forcePushed"}, {"oid": "4d42231a895ca0d7204e8e5da5d4181f870e579a", "url": "https://github.com/prestodb/presto/commit/4d42231a895ca0d7204e8e5da5d4181f870e579a", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-26T05:08:10Z", "type": "forcePushed"}, {"oid": "027ed2cfe22510c7fec36a72a15a66eb77b98bd9", "url": "https://github.com/prestodb/presto/commit/027ed2cfe22510c7fec36a72a15a66eb77b98bd9", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-27T06:28:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwNzMyOA==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r512907328", "bodyText": "wait for airlift release cut", "author": "ajaygeorge", "createdAt": "2020-10-27T17:53:39Z", "path": "pom.xml", "diffHunk": "@@ -45,23 +45,23 @@\n         <air.maven.version>3.3.9</air.maven.version>\n \n         <dep.antlr.version>4.7.1</dep.antlr.version>\n-        <dep.airlift.version>0.195</dep.airlift.version>\n+        <dep.airlift.version>0.197-SNAPSHOT</dep.airlift.version>", "originalCommit": "027ed2cfe22510c7fec36a72a15a66eb77b98bd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "url": "https://github.com/prestodb/presto/commit/72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-28T01:30:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1MzI5MA==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513653290", "bodyText": "I am wondering if we can use SimpleHttpResponseHandler here instead of creating ThriftHttpResponseHandler. We can maybe wrap ThriftResponse to BaseResponse and keep using  SimpleHttpResponseHandler.", "author": "cemcayiroglu", "createdAt": "2020-10-28T17:59:44Z", "path": "presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java", "diffHunk": "@@ -154,26 +167,40 @@ private synchronized void scheduleNextRequest()\n             return;\n         }\n \n-        Request request = setContentTypeHeaders(isBinaryTransportEnabled, prepareGet())\n-                .setUri(uriBuilderFrom(taskStatus.getSelf()).appendPath(\"status\").build())\n-                .setHeader(PRESTO_CURRENT_STATE, taskStatus.getState().toString())\n-                .setHeader(PRESTO_MAX_WAIT, refreshMaxWait.toString())\n-                .build();\n-\n+        Request.Builder requestBuilder;\n         ResponseHandler responseHandler;\n-        if (isBinaryTransportEnabled) {\n+        if (thriftTransportEnabled) {\n+            requestBuilder = ThriftRequestUtils.prepareThriftGet(thriftProtocol);\n+            responseHandler = new ThriftResponseHandler(unwrapThriftCodec(taskStatusCodec));\n+        }\n+        else if (binaryTransportEnabled) {\n+            requestBuilder = getBinaryTransportBuilder(prepareGet());\n             responseHandler = createFullSmileResponseHandler((SmileCodec<TaskStatus>) taskStatusCodec);\n         }\n         else {\n+            requestBuilder = getJsonTransportBuilder(prepareGet());\n             responseHandler = createAdaptingJsonResponseHandler(unwrapJsonCodec(taskStatusCodec));\n         }\n \n+        Request request = requestBuilder.setUri(uriBuilderFrom(taskStatus.getSelf()).appendPath(\"status\").build())\n+                .setHeader(PRESTO_CURRENT_STATE, taskStatus.getState().toString())\n+                .setHeader(PRESTO_MAX_WAIT, refreshMaxWait.toString())\n+                .build();\n+\n         errorTracker.startRequest();\n         future = httpClient.executeAsync(request, responseHandler);\n         currentRequestStartNanos.set(System.nanoTime());\n+        FutureCallback callback;\n+        if (thriftTransportEnabled) {\n+            callback = new ThriftHttpResponseHandler(this, request.getUri(), stats.getHttpResponseStats(), REMOTE_TASK_ERROR);", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQxNTQxOA==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r514415418", "bodyText": "#15350 (comment)", "author": "ajaygeorge", "createdAt": "2020-10-29T16:54:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1MzI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1NjU5NQ==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513656595", "bodyText": "Should we move codec and response handler to a class (TaskStatusRequest?) and pass it to  ContinuousTaskStatusFetcher? We can get rid of these if checks and casts.", "author": "cemcayiroglu", "createdAt": "2020-10-28T18:04:31Z", "path": "presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java", "diffHunk": "@@ -93,7 +102,9 @@ public ContinuousTaskStatusFetcher(\n             Duration maxErrorDuration,\n             ScheduledExecutorService errorScheduledExecutor,\n             RemoteTaskStats stats,\n-            boolean isBinaryTransportEnabled)\n+            boolean binaryTransportEnabled,", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY1OTY0Ng==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513659646", "bodyText": "I am not sure if we need this wrapper anymore if we move codec and response handler to a class.", "author": "cemcayiroglu", "createdAt": "2020-10-28T18:09:16Z", "path": "presto-main/src/main/java/com/facebook/presto/server/thrift/ThriftCodecWrapper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.server.thrift;\n+\n+import com.facebook.drift.codec.ThriftCodec;\n+import com.facebook.presto.server.codec.Codec;\n+\n+import static com.google.common.base.Verify.verify;\n+import static java.util.Objects.requireNonNull;\n+\n+public class ThriftCodecWrapper<T>", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY2Mzg1Mw==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513663853", "bodyText": "Why do we need this?", "author": "tdcmeehan", "createdAt": "2020-10-28T18:16:02Z", "path": "presto-bytecode/src/test/java/com/facebook/presto/bytecode/TestClassGenerator.java", "diffHunk": "@@ -77,7 +77,7 @@ public void testGenerator()\n             assertThat(writer.toString())\n                     .contains(\"00002 I I  : I I  :     IADD\")\n                     .contains(\"public final class test/Example {\")\n-                    .contains(\"// declaration: int (int, int)\")\n+                    .contains(\"// declaration: int add(int, int)\")", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgyNjg4NA==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513826884", "bodyText": "asm upgrade to 9 has a slight change in the way class file is generated.", "author": "ajaygeorge", "createdAt": "2020-10-28T23:45:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY2Mzg1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY2NTQ3Mw==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513665473", "bodyText": "Nit: better to move this and associated changes to their own commit", "author": "tdcmeehan", "createdAt": "2020-10-28T18:18:43Z", "path": "presto-main/src/main/java/com/facebook/presto/server/codec/Codec.java", "diffHunk": "@@ -11,7 +11,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.facebook.presto.server.smile;\n+package com.facebook.presto.server.codec;", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY3OTIzNA==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513679234", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ConfigDescription(\"Enables thrift encoding support for coordinator-to-worker communication\")\n          \n          \n            \n                @ConfigDescription(\"Enables thrift encoding support for internal task communication\")", "author": "tdcmeehan", "createdAt": "2020-10-28T18:41:19Z", "path": "presto-main/src/main/java/com/facebook/presto/server/InternalCommunicationConfig.java", "diffHunk": "@@ -149,6 +152,32 @@ public InternalCommunicationConfig setBinaryTransportEnabled(boolean binaryTrans\n         return this;\n     }\n \n+    public boolean isThriftTransportEnabled()\n+    {\n+        return thriftTransportEnabled;\n+    }\n+\n+    @Config(\"experimental.internal-communication.thrift-transport-enabled\")\n+    @ConfigDescription(\"Enables thrift encoding support for coordinator-to-worker communication\")", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk5NjI5Mw==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513996293", "bodyText": "We might be eventually using this flag for non-task related calls as well. I just modeled this on the binary transport flag.", "author": "ajaygeorge", "createdAt": "2020-10-29T05:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY3OTIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwMzQ5MQ==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r514003491", "bodyText": "Then how about Enables thrift encoding support for internal communication?", "author": "tdcmeehan", "createdAt": "2020-10-29T06:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY3OTIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAzNjU3Mw==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r514036573", "bodyText": "done. !", "author": "ajaygeorge", "createdAt": "2020-10-29T06:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY3OTIzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2NDU0NQ==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513864545", "bodyText": "Why do we need this library in the SPI?", "author": "arhimondr", "createdAt": "2020-10-29T01:35:34Z", "path": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "diffHunk": "@@ -83,6 +83,7 @@\n             .add(\"com.facebook.drift.annotations.\")\n             .add(\"com.facebook.drift.TException\")\n             .add(\"com.facebook.drift.TApplicationException\")\n+            .add(\"org.objectweb.asm.\")", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0OTEwOQ==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r514049109", "bodyText": "Good catch. I think this was a remnant from the drift-codec excludes hack that we had initially.\nSince we went via the airlift upgrade remote I have removed it and tested server startup and it looks good.", "author": "ajaygeorge", "createdAt": "2020-10-29T07:22:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2NDU0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2NTk5OQ==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513865999", "bodyText": "I assume that this is just an almost verbatim copy of the SimpleHttpResponseHandler. I wonder if the SimpleHttpResponseHandler can be reused to avoid copy-paste?", "author": "arhimondr", "createdAt": "2020-10-29T01:38:54Z", "path": "presto-main/src/main/java/com/facebook/presto/server/thrift/ThriftHttpResponseHandler.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.server.thrift;\n+\n+import com.facebook.airlift.http.client.HttpStatus;\n+import com.facebook.airlift.http.client.thrift.ThriftResponse;\n+import com.facebook.presto.server.ServiceUnavailableException;\n+import com.facebook.presto.server.SimpleHttpResponseCallback;\n+import com.facebook.presto.server.SimpleHttpResponseHandlerStats;\n+import com.facebook.presto.spi.ErrorCodeSupplier;\n+import com.facebook.presto.spi.PrestoException;\n+import com.google.common.util.concurrent.FutureCallback;\n+\n+import java.net.URI;\n+\n+import static com.facebook.airlift.http.client.HttpStatus.OK;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+public class ThriftHttpResponseHandler<T>", "originalCommit": "72b53ebd93f5ddf6912334e6bc0f6e28ef88d274", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg3MzkwMA==", "url": "https://github.com/prestodb/presto/pull/15350#discussion_r513873900", "bodyText": "SimpleHttpResponseHandler\nimplements FutureCallback<BaseResponse>\nwhile\npublic class ThriftHttpResponseHandler\nimplements FutureCallback<ThriftResponse>\nissue is that ThriftResponse doesn't implement com.facebook.presto.server.smile.BaseResponse which sits in presto-main .\nWe can maybe have a follow up task to move BaseResponse upto airlift and then make ThriftResponse implement BaseResponse to have similar handling.", "author": "ajaygeorge", "createdAt": "2020-10-29T01:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2NTk5OQ=="}], "type": "inlineReview"}, {"oid": "40dc166056b1b370b3fd384da3e7a280b72c8ad5", "url": "https://github.com/prestodb/presto/commit/40dc166056b1b370b3fd384da3e7a280b72c8ad5", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-29T06:00:44Z", "type": "forcePushed"}, {"oid": "b9cfb8978a604062dff36500aaa164b21e099c98", "url": "https://github.com/prestodb/presto/commit/b9cfb8978a604062dff36500aaa164b21e099c98", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-29T06:58:42Z", "type": "commit"}, {"oid": "b9cfb8978a604062dff36500aaa164b21e099c98", "url": "https://github.com/prestodb/presto/commit/b9cfb8978a604062dff36500aaa164b21e099c98", "message": "Add Thrift transport support for TaskStatus", "committedDate": "2020-10-29T06:58:42Z", "type": "forcePushed"}]}