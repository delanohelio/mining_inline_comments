{"pr_number": 14588, "pr_title": "Add support for Druid's basic and kerberos authentication", "pr_createdAt": "2020-05-29T05:02:01Z", "pr_url": "https://github.com/prestodb/presto/pull/14588", "timeline": [{"oid": "c45a05583f39f285f2d1acb94d932afd57acbbae", "url": "https://github.com/prestodb/presto/commit/c45a05583f39f285f2d1acb94d932afd57acbbae", "message": "Add druid authentication type to DruidConfig", "committedDate": "2020-05-29T04:50:33Z", "type": "commit"}, {"oid": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "url": "https://github.com/prestodb/presto/commit/8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "message": "Implement druid http basic authentication", "committedDate": "2020-05-29T04:50:52Z", "type": "commit"}, {"oid": "f9e7b065b614ceedbe084c9f0ce63c4212d82142", "url": "https://github.com/prestodb/presto/commit/f9e7b065b614ceedbe084c9f0ce63c4212d82142", "message": "Implement druid kerberos authentication", "committedDate": "2020-05-29T04:51:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzQxNg==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432657416", "bodyText": "KERBEROS, -> KERBEROS", "author": "zhenxiao", "createdAt": "2020-05-29T18:17:23Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -29,6 +29,14 @@\n     private String schema = \"druid\";\n     private boolean pushdown;\n     private List<String> hadoopConfiguration = ImmutableList.of();\n+    private DruidAuthenticationType druidAuthenticationType = DruidAuthenticationType.NONE;\n+\n+    public enum DruidAuthenticationType\n+    {\n+        NONE,\n+        BASIC,\n+        KERBEROS,", "originalCommit": "c45a05583f39f285f2d1acb94d932afd57acbbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NDI5OQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432764299", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NzQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1Nzk3MQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432657971", "bodyText": "should it be DruidAuthenticationType.NONE?", "author": "zhenxiao", "createdAt": "2020-05-29T18:18:32Z", "path": "presto-druid/src/test/java/com/facebook/presto/druid/TestDruidConfig.java", "diffHunk": "@@ -33,7 +33,8 @@ public void testDefaults()\n                 .setDruidCoordinatorUrl(null)\n                 .setDruidSchema(\"druid\")\n                 .setComputePushdownEnabled(false)\n-                .setHadoopConfiguration(\"\"));\n+                .setHadoopConfiguration(\"\")\n+                .setDruidAuthenticationType(null));", "originalCommit": "c45a05583f39f285f2d1acb94d932afd57acbbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NDU2NA==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432764564", "bodyText": "changed to DruidAuthenticationType.NONE", "author": "beinan", "createdAt": "2020-05-29T22:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1Nzk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1ODYxNQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432658615", "bodyText": "static import DruidConfig.DruidAuthenticationType.NONE", "author": "zhenxiao", "createdAt": "2020-05-29T18:19:39Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/authentication/DruidAuthenticationModule.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.druid.authentication;\n+\n+import com.facebook.airlift.configuration.AbstractConfigurationAwareModule;\n+import com.facebook.presto.druid.DruidConfig;\n+import com.facebook.presto.druid.ForDruidClient;\n+import com.google.inject.Binder;\n+import com.google.inject.Module;\n+\n+import java.util.function.Predicate;\n+\n+import static com.facebook.airlift.configuration.ConditionalModule.installModuleIf;\n+import static com.facebook.airlift.http.client.HttpClientBinder.httpClientBinder;\n+\n+public class DruidAuthenticationModule\n+        extends AbstractConfigurationAwareModule\n+{\n+    @Override\n+    protected void setup(Binder binder)\n+    {\n+        bindAuthenticationModule(\n+                config -> config.getDruidAuthenticationType() == DruidConfig.DruidAuthenticationType.NONE,", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NTA1OQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432765059", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1ODYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1ODg0MA==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432658840", "bodyText": "static import DruidConfig.DruidAuthenticationType.BASIC", "author": "zhenxiao", "createdAt": "2020-05-29T18:19:57Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/authentication/DruidAuthenticationModule.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.druid.authentication;\n+\n+import com.facebook.airlift.configuration.AbstractConfigurationAwareModule;\n+import com.facebook.presto.druid.DruidConfig;\n+import com.facebook.presto.druid.ForDruidClient;\n+import com.google.inject.Binder;\n+import com.google.inject.Module;\n+\n+import java.util.function.Predicate;\n+\n+import static com.facebook.airlift.configuration.ConditionalModule.installModuleIf;\n+import static com.facebook.airlift.http.client.HttpClientBinder.httpClientBinder;\n+\n+public class DruidAuthenticationModule\n+        extends AbstractConfigurationAwareModule\n+{\n+    @Override\n+    protected void setup(Binder binder)\n+    {\n+        bindAuthenticationModule(\n+                config -> config.getDruidAuthenticationType() == DruidConfig.DruidAuthenticationType.NONE,\n+                noneAuthenticationModule());\n+\n+        bindAuthenticationModule(\n+                config -> config.getDruidAuthenticationType() == DruidConfig.DruidAuthenticationType.BASIC,", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NTA4NQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432765085", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1ODg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1OTk5Mg==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432659992", "bodyText": "s/username/basicAuthenticationUsername/g", "author": "zhenxiao", "createdAt": "2020-05-29T18:21:36Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -30,6 +31,8 @@\n     private boolean pushdown;\n     private List<String> hadoopConfiguration = ImmutableList.of();\n     private DruidAuthenticationType druidAuthenticationType = DruidAuthenticationType.NONE;\n+    private String username;", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDA5OA==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432660098", "bodyText": "s/password/basicAuthenticationPassword/g", "author": "zhenxiao", "createdAt": "2020-05-29T18:21:51Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -30,6 +31,8 @@\n     private boolean pushdown;\n     private List<String> hadoopConfiguration = ImmutableList.of();\n     private DruidAuthenticationType druidAuthenticationType = DruidAuthenticationType.NONE;\n+    private String username;\n+    private String password;", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDIwMw==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432660203", "bodyText": "getBasicAuthenticationUsername", "author": "zhenxiao", "createdAt": "2020-05-29T18:22:03Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -130,4 +133,30 @@ public DruidConfig setDruidAuthenticationType(DruidAuthenticationType druidAuthe\n         }\n         return this;\n     }\n+\n+    @Nullable\n+    public String getUsername()", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NjQwMg==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432766402", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDIwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDI4OQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432660289", "bodyText": "getBasicAuthenticationPassword", "author": "zhenxiao", "createdAt": "2020-05-29T18:22:15Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -130,4 +133,30 @@ public DruidConfig setDruidAuthenticationType(DruidAuthenticationType druidAuthe\n         }\n         return this;\n     }\n+\n+    @Nullable\n+    public String getUsername()\n+    {\n+        return username;\n+    }\n+\n+    @Config(\"druid.authentication.username\")\n+    public DruidConfig setUsername(String username)\n+    {\n+        this.username = username;\n+        return this;\n+    }\n+\n+    @Nullable\n+    public String getPassword()", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NjQ0NQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432766445", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDI4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDUwMA==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432660500", "bodyText": "druid.basic.authentication.username\nsetBasicAuthenticationUserName", "author": "zhenxiao", "createdAt": "2020-05-29T18:22:40Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -130,4 +133,30 @@ public DruidConfig setDruidAuthenticationType(DruidAuthenticationType druidAuthe\n         }\n         return this;\n     }\n+\n+    @Nullable\n+    public String getUsername()\n+    {\n+        return username;\n+    }\n+\n+    @Config(\"druid.authentication.username\")\n+    public DruidConfig setUsername(String username)", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDYwMA==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432660600", "bodyText": "similar to above", "author": "zhenxiao", "createdAt": "2020-05-29T18:22:50Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidConfig.java", "diffHunk": "@@ -130,4 +133,30 @@ public DruidConfig setDruidAuthenticationType(DruidAuthenticationType druidAuthe\n         }\n         return this;\n     }\n+\n+    @Nullable\n+    public String getUsername()\n+    {\n+        return username;\n+    }\n+\n+    @Config(\"druid.authentication.username\")\n+    public DruidConfig setUsername(String username)\n+    {\n+        this.username = username;\n+        return this;\n+    }\n+\n+    @Nullable\n+    public String getPassword()\n+    {\n+        return password;\n+    }\n+\n+    @Config(\"druid.authentication.password\")\n+    public DruidConfig setPassword(String password)", "originalCommit": "8ea5d08fed91bdd4ab867240d83c10a9d3109a29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NTcyOQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432765729", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDgwOQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432660809", "bodyText": "static import DruidConfig.DruidAuthenticationType.KERBEROS", "author": "zhenxiao", "createdAt": "2020-05-29T18:23:14Z", "path": "presto-druid/src/main/java/com/facebook/presto/druid/authentication/DruidAuthenticationModule.java", "diffHunk": "@@ -37,6 +37,10 @@ protected void setup(Binder binder)\n         bindAuthenticationModule(\n                 config -> config.getDruidAuthenticationType() == DruidConfig.DruidAuthenticationType.BASIC,\n                 basicAuthenticationModule());\n+\n+        bindAuthenticationModule(\n+                config -> config.getDruidAuthenticationType() == DruidConfig.DruidAuthenticationType.KERBEROS,", "originalCommit": "f9e7b065b614ceedbe084c9f0ce63c4212d82142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NjQ2Nw==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432766467", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-29T22:26:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MDgwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5NjMyNQ==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432796325", "bodyText": "static import DruidConfig.DruidAuthenticationType.NONE?", "author": "zhenxiao", "createdAt": "2020-05-30T01:14:15Z", "path": "presto-druid/src/test/java/com/facebook/presto/druid/TestDruidConfig.java", "diffHunk": "@@ -33,7 +33,10 @@ public void testDefaults()\n                 .setDruidCoordinatorUrl(null)\n                 .setDruidSchema(\"druid\")\n                 .setComputePushdownEnabled(false)\n-                .setHadoopConfiguration(\"\"));\n+                .setHadoopConfiguration(\"\")\n+                .setDruidAuthenticationType(DruidConfig.DruidAuthenticationType.NONE)", "originalCommit": "f4d40d664e9c32bb9c618fb427efaae8c2d7c122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5NzMwMg==", "url": "https://github.com/prestodb/presto/pull/14588#discussion_r432797302", "bodyText": "done", "author": "beinan", "createdAt": "2020-05-30T01:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5NjMyNQ=="}], "type": "inlineReview"}, {"oid": "ebd2a290396b0cdaf8faa6a45bd7f3b5cc982d05", "url": "https://github.com/prestodb/presto/commit/ebd2a290396b0cdaf8faa6a45bd7f3b5cc982d05", "message": "Code refactoring and fix code review issue", "committedDate": "2020-05-30T01:23:56Z", "type": "commit"}, {"oid": "ebd2a290396b0cdaf8faa6a45bd7f3b5cc982d05", "url": "https://github.com/prestodb/presto/commit/ebd2a290396b0cdaf8faa6a45bd7f3b5cc982d05", "message": "Code refactoring and fix code review issue", "committedDate": "2020-05-30T01:23:56Z", "type": "forcePushed"}]}