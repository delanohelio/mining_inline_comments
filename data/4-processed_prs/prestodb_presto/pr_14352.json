{"pr_number": 14352, "pr_title": "Add Internationalization (i18n) plugin and Myanmar UDFs", "pr_createdAt": "2020-04-06T20:40:56Z", "pr_url": "https://github.com/prestodb/presto/pull/14352", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NDc2Mw==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r405144763", "bodyText": "Put this in a section as Myanmar Functions maybe?", "author": "rongrong", "createdAt": "2020-04-07T22:14:00Z", "path": "presto-docs/src/main/sphinx/functions/internationalization.rst", "diffHunk": "@@ -0,0 +1,20 @@\n+==============================\n+Internationalization Functions\n+==============================\n+\n+.. note::", "originalCommit": "f80b7213cc55fa07cbc3b5b8ecb2790d73efd93e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NTUxMg==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r405145512", "bodyText": "is 0.9 always a good threshold?", "author": "rongrong", "createdAt": "2020-04-07T22:15:57Z", "path": "presto-i18n/src/main/java/com/facebook/presto/i18n/I18nMyanmarFunctions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.i18n;\n+\n+import com.facebook.presto.spi.function.Description;\n+import com.facebook.presto.spi.function.ScalarFunction;\n+import com.facebook.presto.spi.function.SqlType;\n+import com.facebook.presto.spi.type.StandardTypes;\n+import com.google.myanmartools.TransliterateZ2U;\n+import com.google.myanmartools.ZawgyiDetector;\n+import io.airlift.slice.Slice;\n+\n+import static io.airlift.slice.Slices.utf8Slice;\n+\n+public final class I18nMyanmarFunctions\n+{\n+    private I18nMyanmarFunctions() {}\n+\n+    static ZawgyiDetector detector = new ZawgyiDetector();\n+    static TransliterateZ2U z2uTransliterator = new TransliterateZ2U(\"Zawgyi to Unicode\");\n+\n+    @Description(\"labels whether input strings use Unicode or Zawgyi font encoding\")\n+    @ScalarFunction\n+    @SqlType(StandardTypes.VARCHAR)\n+    public static Slice myanmarFontEncoding(@SqlType(StandardTypes.VARCHAR) Slice slice)\n+    {\n+        if (detector.getZawgyiProbability(slice.toStringUtf8()) > 0.9) {", "originalCommit": "f80b7213cc55fa07cbc3b5b8ecb2790d73efd93e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NDY2MA==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r405154660", "bodyText": "This is what we use for the Facebook site - we are experimenting with this, but for now we don't have data supporting a different threshold.", "author": "nlagrow", "createdAt": "2020-04-07T22:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NTUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg4Mjc0Ng==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r406882746", "bodyText": "Maybe define it as a constant. You can also consider adding a function taking threshold as input.", "author": "rongrong", "createdAt": "2020-04-10T18:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NTUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg5NzY4Nw==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r406897687", "bodyText": "Added a constant - I think adding functions w. threshold as input is a great idea, but let's keep it simple in this rev.\nI'm thinking of:\n\nadd threshold as an option to both MYANMAR_FONT_ENCODING and MYANMAR_NORMALIZE_UNICODE\nadd an option for whether to split on newlines to MYANMAR_FONT_ENCODING - a lot of times, Myanmar content will be posted as paragraphs of Zawgyi followed by paragraphs of Unicode\n\nbut for now, MYANAMR_NORMALIZE_UNICODE should help the most with any text matching queries", "author": "nlagrow", "createdAt": "2020-04-10T19:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NTUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NjQ4OA==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r405146488", "bodyText": "Let's name it presto-i18n-functions since this is a function plugin package.", "author": "rongrong", "createdAt": "2020-04-07T22:18:32Z", "path": "presto-i18n/pom.xml", "diffHunk": "@@ -0,0 +1,90 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>com.facebook.presto</groupId>\n+        <artifactId>presto-root</artifactId>\n+        <version>0.235-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>presto-i18n</artifactId>", "originalCommit": "f80b7213cc55fa07cbc3b5b8ecb2790d73efd93e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "426f00b99686c7e9eb11b32b99426fca2882fa82", "url": "https://github.com/prestodb/presto/commit/426f00b99686c7e9eb11b32b99426fca2882fa82", "message": "Change plugin to presto-i18n-functions. Add Myanmar section to docs.", "committedDate": "2020-04-07T23:08:09Z", "type": "forcePushed"}, {"oid": "5441b3c35bbfcfecabb9cc4335082e95c9c70408", "url": "https://github.com/prestodb/presto/commit/5441b3c35bbfcfecabb9cc4335082e95c9c70408", "message": "Add Internationalization (i18n) plugin and Myanmar UDFs", "committedDate": "2020-04-07T23:19:04Z", "type": "forcePushed"}, {"oid": "6a25a23402e2168d3fddee2bcc2ff373efc55e42", "url": "https://github.com/prestodb/presto/commit/6a25a23402e2168d3fddee2bcc2ff373efc55e42", "message": "Add Internationalization (i18n) plugin and Myanmar UDFs", "committedDate": "2020-04-10T18:38:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0NTAzNA==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r408445034", "bodyText": "Do you want to use the constant ZAWGYI_PROBABILITY_THRESHOLD  here as well?", "author": "rongrong", "createdAt": "2020-04-14T21:25:06Z", "path": "presto-i18n-functions/src/main/java/com/facebook/presto/i18n/functions/I18nMyanmarFunctions.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.i18n.functions;\n+\n+import com.facebook.presto.spi.function.Description;\n+import com.facebook.presto.spi.function.ScalarFunction;\n+import com.facebook.presto.spi.function.SqlType;\n+import com.facebook.presto.spi.type.StandardTypes;\n+import com.google.myanmartools.TransliterateZ2U;\n+import com.google.myanmartools.ZawgyiDetector;\n+import io.airlift.slice.Slice;\n+\n+import static io.airlift.slice.Slices.utf8Slice;\n+\n+public final class I18nMyanmarFunctions\n+{\n+    private I18nMyanmarFunctions() {}\n+\n+    static ZawgyiDetector detector = new ZawgyiDetector();\n+    static TransliterateZ2U z2uTransliterator = new TransliterateZ2U(\"Zawgyi to Unicode\");\n+\n+    /**\n+     * ZawgyiDetector returns a confidence score that a given string is Zawgyi encoded.\n+     * This constant defines the default confidence at which a string is treated as Zawgyi.\n+     */\n+    private static final double ZAWGYI_PROBABILITY_THRESHOLD = 0.9;\n+\n+    @Description(\"labels whether input strings use Unicode or Zawgyi font encoding\")\n+    @ScalarFunction\n+    @SqlType(StandardTypes.VARCHAR)\n+    public static Slice myanmarFontEncoding(@SqlType(StandardTypes.VARCHAR) Slice slice)\n+    {\n+        if (detector.getZawgyiProbability(slice.toStringUtf8()) > 0.9) {", "originalCommit": "6a25a23402e2168d3fddee2bcc2ff373efc55e42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1NzQyOQ==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r408457429", "bodyText": "ah yes! thanks for noticing will patch that", "author": "nlagrow", "createdAt": "2020-04-14T21:50:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0NTAzNA=="}], "type": "inlineReview"}, {"oid": "172e5d21d99bf5fdf7811d63d2c531419f22d4e1", "url": "https://github.com/prestodb/presto/commit/172e5d21d99bf5fdf7811d63d2c531419f22d4e1", "message": "Add Internationalization (i18n) plugin and Myanmar UDFs", "committedDate": "2020-04-14T21:56:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3Njg2NQ==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r408476865", "bodyText": "Actually should these also be private static final? Put the variables before the constructor per convention.", "author": "rongrong", "createdAt": "2020-04-14T22:38:37Z", "path": "presto-i18n-functions/src/main/java/com/facebook/presto/i18n/functions/I18nMyanmarFunctions.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.i18n.functions;\n+\n+import com.facebook.presto.spi.function.Description;\n+import com.facebook.presto.spi.function.ScalarFunction;\n+import com.facebook.presto.spi.function.SqlType;\n+import com.facebook.presto.spi.type.StandardTypes;\n+import com.google.myanmartools.TransliterateZ2U;\n+import com.google.myanmartools.ZawgyiDetector;\n+import io.airlift.slice.Slice;\n+\n+import static io.airlift.slice.Slices.utf8Slice;\n+\n+public final class I18nMyanmarFunctions\n+{\n+    private I18nMyanmarFunctions() {}\n+\n+    static ZawgyiDetector detector = new ZawgyiDetector();\n+    static TransliterateZ2U z2uTransliterator = new TransliterateZ2U(\"Zawgyi to Unicode\");", "originalCommit": "172e5d21d99bf5fdf7811d63d2c531419f22d4e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MzIwMg==", "url": "https://github.com/prestodb/presto/pull/14352#discussion_r408483202", "bodyText": "They can be - updated & shifted the definition of these and ZAWGYI_PROBABILITY_THRESHOLD", "author": "nlagrow", "createdAt": "2020-04-14T22:56:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3Njg2NQ=="}], "type": "inlineReview"}, {"oid": "4af53919666abdd656f3023ae415d65f9c6b6283", "url": "https://github.com/prestodb/presto/commit/4af53919666abdd656f3023ae415d65f9c6b6283", "message": "Add Internationalization (i18n) plugin and Myanmar UDFs", "committedDate": "2020-04-14T22:52:56Z", "type": "commit"}, {"oid": "4af53919666abdd656f3023ae415d65f9c6b6283", "url": "https://github.com/prestodb/presto/commit/4af53919666abdd656f3023ae415d65f9c6b6283", "message": "Add Internationalization (i18n) plugin and Myanmar UDFs", "committedDate": "2020-04-14T22:52:56Z", "type": "forcePushed"}]}