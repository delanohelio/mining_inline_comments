{"pr_number": 682, "pr_title": "Add methods in TranslationMessage to support named arguments", "pr_createdAt": "2020-07-21T09:23:24Z", "pr_url": "https://github.com/vmware/singleton/pull/682", "timeline": [{"oid": "851de99a545a7ea09f7381110427aafca2cac2d1", "url": "https://github.com/vmware/singleton/commit/851de99a545a7ea09f7381110427aafca2cac2d1", "message": "Add methods in TranslationMessage to support named arguments", "committedDate": "2020-07-21T09:20:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMDE2Nw==", "url": "https://github.com/vmware/singleton/pull/682#discussion_r458530167", "bodyText": "Can we have another private method for these codes and both getString2 can share it?", "author": "linr211", "createdAt": "2020-07-22T04:41:01Z", "path": "src/main/java/com/vmware/vipclient/i18n/base/instances/TranslationMessage.java", "diffHunk": "@@ -319,11 +357,50 @@ public String getString2(final String component,\n                     LocaleUtility.defaultLocale);\n             source = rb.getString(key);\n         } catch (Exception e) {\n-            this.logger.error(e.getMessage());\n+            logger.error(e.getMessage());\n+            source = key;\n+        }\n+        // get translation from VIP service\n+        message = getString(locale, component, key, source, \"\", args);\n+        return message;\n+    }\n+\n+    /**\n+     * get one translation of the configured product from VIP, if message not\n+     * found will get the English message from specified bundle.\n+     *\n+     * @param component\n+     *            defined on VIP service, it will be created automatically if\n+     *            not exist\n+     * @param bundle\n+     *            properties file name, normally it should be put under the root\n+     *            'src' path\n+     * @param locale\n+     *            an object used to get the source's translation\n+     * @param key\n+     *            identify the source\n+     * @param args\n+     *            named arguments used to format the message with placeholder\n+     * @return a message of translation, if the translation is not found from\n+     *         VIP service, it will return the value defined in the bundle\n+     *         searching by the key\n+     */\n+    public String getString2(final String component, final String bundle, final Locale locale, final String key,\n+            final Map<String, Object> arguments) {\n+        logger.trace(\"Start to execute TranslationMessage.getStringWithNamedArgs\");\n+        if (key == null || key.equalsIgnoreCase(\"\"))\n+            return \"\";\n+        String message = \"\";\n+        String source;\n+        try {\n+            ResourceBundle rb = ResourceBundle.getBundle(bundle, LocaleUtility.defaultLocale);\n+            source = rb.getString(key);\n+        } catch (Exception e) {\n+            logger.error(e.getMessage());\n             source = key;\n         }\n         // get translation from VIP service", "originalCommit": "851de99a545a7ea09f7381110427aafca2cac2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6dbe6498d931a6b0a165cbf8a3598b51dd68ff1e", "url": "https://github.com/vmware/singleton/commit/6dbe6498d931a6b0a165cbf8a3598b51dd68ff1e", "message": "Create method getString2WithArgs", "committedDate": "2020-07-22T05:47:34Z", "type": "commit"}]}