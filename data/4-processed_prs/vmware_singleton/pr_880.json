{"pr_number": 880, "pr_title": "upload external pattern lib smoke test", "pr_createdAt": "2020-11-19T15:33:37Z", "pr_url": "https://github.com/vmware/singleton/pull/880", "timeline": [{"oid": "010be746fc9e604496262554ac0c99ec846fd6e5", "url": "https://github.com/vmware/singleton/commit/010be746fc9e604496262554ac0c99ec846fd6e5", "message": "upload external pattern lib smoke test", "committedDate": "2020-11-19T15:28:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MTAwMA==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527341000", "bodyText": "that may have out of range exception when excel column count has changed. Please add 'try catch' block and print friendly waring message to show excel file loading failure.", "author": "surite", "createdAt": "2020-11-20T01:45:08Z", "path": "autotest/cldrpattern/excelutility.py", "diffHunk": "@@ -0,0 +1,37 @@\n+from openpyxl import load_workbook\n+\n+def excelutil():\n+    workbook = load_workbook(filename='ExternalPatternLibTestCases.xlsx')\n+    sheet = workbook.active\n+\n+    datas = []\n+\n+    for row in sheet.iter_rows(min_row=2, values_only=True):\n+        # data = TestData(casename=row[0],\n+        #                 path=row[1],\n+        #                 filename=row[2],\n+        #                 key=row[3],\n+        #                 expected=row[4])\n+        data = {\"caseid\": row[0],", "originalCommit": "010be746fc9e604496262554ac0c99ec846fd6e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1NTMxMw==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r534855313", "bodyText": "Please see the latest version.", "author": "lyiyu66", "createdAt": "2020-12-03T07:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MTAwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MjM4OQ==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527342389", "bodyText": "it is better to extract file name into a properties file or at least a constant.", "author": "surite", "createdAt": "2020-11-20T01:49:21Z", "path": "autotest/cldrpattern/excelutility.py", "diffHunk": "@@ -0,0 +1,37 @@\n+from openpyxl import load_workbook\n+\n+def excelutil():\n+    workbook = load_workbook(filename='ExternalPatternLibTestCases.xlsx')", "originalCommit": "010be746fc9e604496262554ac0c99ec846fd6e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1ODUzOA==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r534858538", "bodyText": "Adding a constant.py for storing some global settings. Please see the latest verison.", "author": "lyiyu66", "createdAt": "2020-12-03T07:59:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MjM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0Mjc2NQ==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527342765", "bodyText": "is the  version static and no changing in future?", "author": "surite", "createdAt": "2020-11-20T01:50:20Z", "path": "autotest/cldrpattern/test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+import os,json,HTMLTestRunner,unittest\n+from excelutility import excelutil\n+from ddt import ddt,data\n+from datetime import datetime\n+\n+# Set testdata directory:\n+# rootdir = 'D:\\\\PycharmProjects\\\\SmokeTesting\\\\singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+# test_dir = 'D:\\\\PycharmProjects\\\\SmokeTesting' #The directory of generated test report\n+rootdir = './singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage", "originalCommit": "010be746fc9e604496262554ac0c99ec846fd6e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxOTk4MQ==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r533019981", "bodyText": "Strictly speaking, there is no version in external pattern lib branch. The rootdir will be updated once the branch and code structure is done.", "author": "lyiyu66", "createdAt": "2020-12-01T01:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0Mjc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0OTgzMw==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527349833", "bodyText": "can you give a description about what these verification means? so people would know how you test it.", "author": "surite", "createdAt": "2020-11-20T02:13:49Z", "path": "autotest/cldrpattern/test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+import os,json,HTMLTestRunner,unittest\n+from excelutility import excelutil\n+from ddt import ddt,data\n+from datetime import datetime\n+\n+# Set testdata directory:\n+# rootdir = 'D:\\\\PycharmProjects\\\\SmokeTesting\\\\singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+# test_dir = 'D:\\\\PycharmProjects\\\\SmokeTesting' #The directory of generated test report\n+rootdir = './singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+test_dir = './' #The directory of generated test report\n+\n+def curfoldercount(dir):\n+    return str(len(os.listdir(dir)))\n+\n+\n+def rootfoldercount(dir):\n+    L = []\n+    for paths in os.walk(dir):\n+        L.append(paths)\n+    # L includes the root, should -1 to get the folder count under it\n+    return str(len(L)-1)\n+\n+def rootfilecount(dir):\n+    L = []\n+    for paths, folders, files in os.walk(dir):\n+        L.extend(files)\n+    return str(len(L))\n+\n+def readjson(dir, filename, key):\n+    with open(dir+filename, 'r', encoding='utf-8') as f:\n+        temp = json.load(f)\n+        keylist = key.split('.')\n+        for i in keylist:\n+            temp = temp[i]\n+    return str(temp)\n+\n+\n+\n+@ddt\n+class Test(unittest.TestCase):\n+\n+    @data(*excelutil())\n+    def test(self, case):\n+\n+        if (case['casename'] == 'Check the number of folders in cldr folder'):", "originalCommit": "010be746fc9e604496262554ac0c99ec846fd6e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg2MjkxMA==", "url": "https://github.com/vmware/singleton/pull/880#discussion_r534862910", "bodyText": "Adding case category to identify the case purpose, please see the latest version.", "author": "lyiyu66", "createdAt": "2020-12-03T08:01:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0OTgzMw=="}], "type": "inlineReview"}, {"oid": "511d395b626cb0e12c932ba0f6840c8b2192d65f", "url": "https://github.com/vmware/singleton/commit/511d395b626cb0e12c932ba0f6840c8b2192d65f", "message": "updates for comment and branch structure", "committedDate": "2020-12-03T07:15:19Z", "type": "commit"}]}