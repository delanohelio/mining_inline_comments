{"pr_number": 10160, "pr_title": "Release the temporary ByteBuf in case of unexpected exception in WebSocketUtil.base64.", "pr_createdAt": "2020-04-02T13:35:22Z", "pr_url": "https://github.com/netty/netty/pull/10160", "timeline": [{"oid": "667d6d32c252f0fb27fbdbe92d08043dd33868e3", "url": "https://github.com/netty/netty/commit/667d6d32c252f0fb27fbdbe92d08043dd33868e3", "message": "Release the temporary ByteBuf in case of unexpected exception in WebSocketUtil.base64.", "committedDate": "2020-04-02T13:27:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMzMDA2OQ==", "url": "https://github.com/netty/netty/pull/10160#discussion_r402330069", "bodyText": "@seedeed all of this should never throw. If it throws we have a bug in our implementation. What I am missing ?", "author": "normanmaurer", "createdAt": "2020-04-02T13:52:40Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketUtil.java", "diffHunk": "@@ -96,10 +96,18 @@ static String base64(byte[] data) {\n         if (PlatformDependent.javaVersion() >= 8) {\n             return java.util.Base64.getEncoder().encodeToString(data);\n         }\n+        String encodedString;\n         ByteBuf encodedData = Unpooled.wrappedBuffer(data);\n-        ByteBuf encoded = Base64.encode(encodedData);\n-        String encodedString = encoded.toString(CharsetUtil.UTF_8);\n-        encoded.release();\n+        try {\n+            ByteBuf encoded = Base64.encode(encodedData);\n+            try {\n+                encodedString = encoded.toString(CharsetUtil.UTF_8);", "originalCommit": "667d6d32c252f0fb27fbdbe92d08043dd33868e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0Nzk1NQ==", "url": "https://github.com/netty/netty/pull/10160#discussion_r402447955", "bodyText": "Not our implementation bug, I think... But the Base64.encode may throw an OutOfDirectMemoryError if the jvm argument -XX:MaxDirectMemorySize's value is too small. For instance:\nException in thread \"main\" io.netty.util.internal.OutOfDirectMemoryError: failed to allocate 28 byte(s) of direct memory (used: 1048576, max: 1048576)\n\tat io.netty.util.internal.PlatformDependent.incrementMemoryCounter(PlatformDependent.java:742)\n\tat io.netty.util.internal.PlatformDependent.allocateDirectNoCleaner(PlatformDependent.java:697)\n\tat io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf.allocateDirect(UnpooledUnsafeNoCleanerDirectByteBuf.java:30)\n\tat io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf.allocateDirect(UnpooledByteBufAllocator.java:186)\n\tat io.netty.buffer.UnpooledDirectByteBuf.<init>(UnpooledDirectByteBuf.java:64)\n\tat io.netty.buffer.UnpooledUnsafeDirectByteBuf.<init>(UnpooledUnsafeDirectByteBuf.java:41)\n\tat io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf.<init>(UnpooledUnsafeNoCleanerDirectByteBuf.java:25)\n\tat io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf.<init>(UnpooledByteBufAllocator.java:181)\n\tat io.netty.buffer.UnpooledByteBufAllocator.newDirectBuffer(UnpooledByteBufAllocator.java:91)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178)\n\tat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:115)\n\tat io.netty.handler.codec.base64.Base64.encode(Base64.java:108)\n\tat io.netty.handler.codec.base64.Base64.encode(Base64.java:100)\n\tat io.netty.handler.codec.base64.Base64.encode(Base64.java:80)\n\tat io.netty.handler.codec.base64.Base64.encode(Base64.java:70)\n\tat io.netty.handler.codec.base64.Base64.encode(Base64.java:66)\n\tat io.netty.handler.codec.http.websocketx.WebSocketUtil.base64(WebSocketUtil.java:100)", "author": "seedeed", "createdAt": "2020-04-02T16:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMzMDA2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5NjgyNg==", "url": "https://github.com/netty/netty/pull/10160#discussion_r402796826", "bodyText": "@seedeed good point...", "author": "normanmaurer", "createdAt": "2020-04-03T07:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMzMDA2OQ=="}], "type": "inlineReview"}]}