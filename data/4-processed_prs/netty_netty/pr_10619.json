{"pr_number": 10619, "pr_title": "Ensure we can compile io_uring transport on systems that have linux k\u2026", "pr_createdAt": "2020-09-28T19:36:54Z", "pr_url": "https://github.com/netty/netty/pull/10619", "timeline": [{"oid": "4faa637ccd1d997358f1e039162baf2e730b8d11", "url": "https://github.com/netty/netty/commit/4faa637ccd1d997358f1e039162baf2e730b8d11", "message": "Ensure we can compule io_uring transport on systems that have linux kernel < 5.1\n\nMotivation:\n\nWhile we need to have a very recent kernel to run the io_uring transport itself we should allow to compile it with earlier versions to help with our build story.\n\nModifications:\n\n- Ensure we can compile on \"older systems\"\n- Just enable the profile when we build on linux\n\nResult:\n\nLess complicated to build io_uring transport", "committedDate": "2020-09-28T19:37:45Z", "type": "forcePushed"}, {"oid": "22952bd4007acb9ebdc55997bc22d32222f00981", "url": "https://github.com/netty/netty/commit/22952bd4007acb9ebdc55997bc22d32222f00981", "message": "Ensure we can compule io_uring transport on systems that have linux kernel < 5.1\n\nMotivation:\n\nWhile we need to have a very recent kernel to run the io_uring transport itself we should allow to compile it with earlier versions to help with our build story.\n\nModifications:\n\n- Ensure we can compile on \"older systems\"\n- Just enable the profile when we build on linux\n\nResult:\n\nLess complicated to build io_uring transport", "committedDate": "2020-09-28T19:40:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1Njc3OQ==", "url": "https://github.com/netty/netty/pull/10619#discussion_r496356779", "bodyText": "interesting I thought it would even be present on old kernel version like 4.x", "author": "1Jo1", "createdAt": "2020-09-29T03:29:12Z", "path": "transport-native-io_uring/src/main/c/io_uring.h", "diffHunk": "@@ -48,7 +48,10 @@ struct io_uring_sqe {\n \t};\n \t__u32\tlen;\t\t/* buffer size or number of iovecs */\n \tunion {\n-\t\t__kernel_rwf_t\trw_flags;\n+\t\t// IMPORTANT:\n+\t\t// We explicit use 'int __bitwise' here and not ' __kernel_rwf_t' as this may not be present in the\n+\t\t// kernel headers that are used on the system.\n+\t\tint __bitwise\trw_flags;", "originalCommit": "22952bd4007acb9ebdc55997bc22d32222f00981", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1MDczMg==", "url": "https://github.com/netty/netty/pull/10619#discussion_r496450732", "bodyText": "we compile our linux based releases on centos 6 for max compatibility. As far as I know these not ship 4.x kernels. So this makes sense I guess :)", "author": "normanmaurer", "createdAt": "2020-09-29T06:38:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1Njc3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2NjY4Mw==", "url": "https://github.com/netty/netty/pull/10619#discussion_r496466683", "bodyText": "Also I checked and this only exists in 5.x kernels.", "author": "normanmaurer", "createdAt": "2020-09-29T07:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1Njc3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1Nzc2OA==", "url": "https://github.com/netty/netty/pull/10619#discussion_r496357768", "bodyText": "why is the int declaration outside?", "author": "1Jo1", "createdAt": "2020-09-29T03:33:30Z", "path": "transport-native-io_uring/src/main/c/netty_io_uring_native.c", "diffHunk": "@@ -201,7 +201,8 @@ static jboolean netty_io_uring_probe(JNIEnv *env, jclass clazz, jint ring_fd, ji\n \n     jsize opsLen = (*env)->GetArrayLength(env, ops);\n     jint *opsElements = (*env)->GetIntArrayElements(env, ops, 0);\n-    for (int i = 0; i < opsLen; i++) {\n+    int i;", "originalCommit": "22952bd4007acb9ebdc55997bc22d32222f00981", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1MDk2OA==", "url": "https://github.com/netty/netty/pull/10619#discussion_r496450968", "bodyText": "because the gcc we use on our docker image will fail otherwise as it uses an other c standard as default which not supports this.", "author": "normanmaurer", "createdAt": "2020-09-29T06:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM1Nzc2OA=="}], "type": "inlineReview"}, {"oid": "4d741d892b0b93943663183d6701c1ac68f6c191", "url": "https://github.com/netty/netty/commit/4d741d892b0b93943663183d6701c1ac68f6c191", "message": "Ensure we can compule io_uring transport on systems that have linux kernel < 5.1\n\nMotivation:\n\nWhile we need to have a very recent kernel to run the io_uring transport itself we should allow to compile it with earlier versions to help with our build story.\n\nModifications:\n\n- Ensure we can compile on \"older systems\"\n- Just enable the profile when we build on linux\n\nResult:\n\nLess complicated to build io_uring transport", "committedDate": "2020-09-29T07:13:27Z", "type": "commit"}, {"oid": "4d741d892b0b93943663183d6701c1ac68f6c191", "url": "https://github.com/netty/netty/commit/4d741d892b0b93943663183d6701c1ac68f6c191", "message": "Ensure we can compule io_uring transport on systems that have linux kernel < 5.1\n\nMotivation:\n\nWhile we need to have a very recent kernel to run the io_uring transport itself we should allow to compile it with earlier versions to help with our build story.\n\nModifications:\n\n- Ensure we can compile on \"older systems\"\n- Just enable the profile when we build on linux\n\nResult:\n\nLess complicated to build io_uring transport", "committedDate": "2020-09-29T07:13:27Z", "type": "forcePushed"}]}