{"pr_number": 10725, "pr_title": "Use opcode byte instead of int ", "pr_createdAt": "2020-10-23T07:57:19Z", "pr_url": "https://github.com/netty/netty/pull/10725", "timeline": [{"oid": "5f74ef1dbcd8cc625d9b2e3d9b1c7b128777a681", "url": "https://github.com/netty/netty/commit/5f74ef1dbcd8cc625d9b2e3d9b1c7b128777a681", "message": "Use opcode byte instead of int\n\nMotivation:\n\nwe should use byte instead of int as the size of opcode is 1 byte\n\nModifications:\n\nuse byte instead of int\n\nResult:\n\nwe have more space in user_data", "committedDate": "2020-10-23T07:50:27Z", "type": "commit"}, {"oid": "1513e95d7fcd180fc07eaceda3fdbb5fd6223563", "url": "https://github.com/netty/netty/commit/1513e95d7fcd180fc07eaceda3fdbb5fd6223563", "message": "change type of the op counter", "committedDate": "2020-10-23T07:55:23Z", "type": "commit"}, {"oid": "a9ccfc5db370e83c463a959db6ea78c387177352", "url": "https://github.com/netty/netty/commit/a9ccfc5db370e83c463a959db6ea78c387177352", "message": "Use byte in callback as well", "committedDate": "2020-10-21T17:54:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgzNzI4MQ==", "url": "https://github.com/netty/netty/pull/10725#discussion_r510837281", "bodyText": "@1Jo1 we should change the callback handle method to also use byte for the op.", "author": "normanmaurer", "createdAt": "2020-10-23T12:07:25Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/UserData.java", "diffHunk": "@@ -19,15 +19,13 @@\n     private UserData() {\n     }\n \n-    static long encode(int fd, int op, short data) {\n-        assert op <= Short.MAX_VALUE;\n-        assert op >= Short.MIN_VALUE;\n-        return ((long) data << 48) | ((op & 0xFFFFL) << 32) | fd & 0xFFFFFFFFL;\n+    static long encode(int fd, byte op, short data) {\n+        return ((long) data << 48) | ((op & 0xFFL)  << 32) | fd & 0xFFFFFFFFL;\n     }\n \n     static void decode(int res, int flags, long udata, IOUringCompletionQueueCallback callback) {\n         int fd = (int) (udata & 0xFFFFFFFFL);\n-        int op = (short) ((udata >>>= 32) & 0xFFFFL);\n+        int op = (short) ((udata >>>= 32) & 0xFFL);\n         short data = (short) (udata >>> 16);\n         callback.handle(fd, res, flags, op, data);", "originalCommit": "1513e95d7fcd180fc07eaceda3fdbb5fd6223563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}