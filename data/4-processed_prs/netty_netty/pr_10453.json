{"pr_number": 10453, "pr_title": "Fix #10449, buffer.getBytes(...) not change a file channel position", "pr_createdAt": "2020-08-04T19:57:01Z", "pr_url": "https://github.com/netty/netty/pull/10453", "timeline": [{"oid": "f14d41f13165ca5026a43cb27bf38cfe437325b3", "url": "https://github.com/netty/netty/commit/f14d41f13165ca5026a43cb27bf38cfe437325b3", "message": "Fix #10449, buffer.getBytes(...) not change a file channel position", "committedDate": "2020-08-04T19:47:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465315673", "bodyText": "I think this may actually need to be a loop since it's not guaranteed to write all of the bytes in a single invocation", "author": "njhill", "createdAt": "2020-08-04T20:37:26Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -156,17 +156,20 @@ public void addContent(ByteBuf buffer, boolean last)\n                     throw new IOException(\"Out of size: \" + (size + localsize) +\n                             \" > \" + definedSize);\n                 }\n-                int written = 0;\n                 if (file == null) {\n                     file = tempFile();\n                 }\n                 if (fileChannel == null) {\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);\n+                long currentPosition = fileChannel.position();\n+                int written = buffer.getBytes(buffer.readerIndex(), fileChannel, currentPosition, localsize);\n+                if (written > 0) {\n+                    fileChannel.position(currentPosition + written);\n+                    buffer.readerIndex(buffer.readerIndex() + written);\n+                }", "originalCommit": "f14d41f13165ca5026a43cb27bf38cfe437325b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwMjIwOA==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465502208", "bodyText": "@amizurov I think @njhill is right here... can you adjust this please ?", "author": "normanmaurer", "createdAt": "2020-08-05T06:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNDg0OQ==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465514849", "bodyText": "Sure, according java docs it depends on implementation.", "author": "amizurov", "createdAt": "2020-08-05T07:00:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYwMzQzOQ==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465603439", "bodyText": "instead of if (written > 0), you might better inverse the test to if (written < 0) which stands for end of file/channel, therefore giving a break of the while loop ?", "author": "fredericBregier", "createdAt": "2020-08-05T09:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxMTAxNw==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465611017", "bodyText": "or if (written <= 0) since the javadoc does not specify negative result (as in standard Java interaction with file or stream). The idea is to have a clear \"break\" code, and therefore to not rely only on while condition.", "author": "fredericBregier", "createdAt": "2020-08-05T09:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNzUwOA==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465937508", "bodyText": "@amizurov ^^", "author": "normanmaurer", "createdAt": "2020-08-05T18:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NjM0OQ==", "url": "https://github.com/netty/netty/pull/10453#discussion_r465986349", "bodyText": "I changed code according suggestion but i'm not sure is it ok if we break from loop but possible not all data is written or maybe i'm confused :)", "author": "amizurov", "createdAt": "2020-08-05T20:31:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3NTI1Ng==", "url": "https://github.com/netty/netty/pull/10453#discussion_r466175256", "bodyText": "@amizurov I think we should only break on < 0 as 0 is valid.", "author": "normanmaurer", "createdAt": "2020-08-06T06:33:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4MDkzMQ==", "url": "https://github.com/netty/netty/pull/10453#discussion_r466480931", "bodyText": "Ok, also moved change position and buffer reader index from loop", "author": "amizurov", "createdAt": "2020-08-06T15:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTY3Mw=="}], "type": "inlineReview"}, {"oid": "331f0c31cbd6d42fc09a456dfa0bf630e7bb3ccd", "url": "https://github.com/netty/netty/commit/331f0c31cbd6d42fc09a456dfa0bf630e7bb3ccd", "message": "Add loop to sure that all bytes written", "committedDate": "2020-08-05T07:02:08Z", "type": "commit"}, {"oid": "b399e36edb56cc6fe09400186639f174243f1988", "url": "https://github.com/netty/netty/commit/b399e36edb56cc6fe09400186639f174243f1988", "message": "Add break if written bytes are less than or equal to zero", "committedDate": "2020-08-05T20:31:17Z", "type": "commit"}, {"oid": "dca3becd3fb962eca8f797eb74b8012ce1ffdab7", "url": "https://github.com/netty/netty/commit/dca3becd3fb962eca8f797eb74b8012ce1ffdab7", "message": "Break if written bytes less than zero", "committedDate": "2020-08-06T14:59:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjcwNg==", "url": "https://github.com/netty/netty/pull/10453#discussion_r466696706", "bodyText": "nit: would be tiny bit simpler to do decrement remaining instead", "author": "njhill", "createdAt": "2020-08-06T21:29:38Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpData.java", "diffHunk": "@@ -156,17 +156,28 @@ public void addContent(ByteBuf buffer, boolean last)\n                     throw new IOException(\"Out of size: \" + (size + localsize) +\n                             \" > \" + definedSize);\n                 }\n-                int written = 0;\n                 if (file == null) {\n                     file = tempFile();\n                 }\n                 if (fileChannel == null) {\n                     RandomAccessFile accessFile = new RandomAccessFile(file, \"rw\");\n                     fileChannel = accessFile.getChannel();\n                 }\n-                buffer.getBytes(buffer.readerIndex(), fileChannel, fileChannel.position(), localsize);\n+                int totalWritten = 0;", "originalCommit": "dca3becd3fb962eca8f797eb74b8012ce1ffdab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg1MzA1MA==", "url": "https://github.com/netty/netty/pull/10453#discussion_r466853050", "bodyText": "@njhill sorry do you mean decrement localsize variable or something like this:\nint remaining = localsize;\nlong position = fileChannel.position();\nint index = buffer.readerIndex();\nwhile (remaining > 0) {\n   int written = buffer.getBytes(index, fileChannel, position, remaining);\n   if (written < 0) {\n      break;\n   }\n   remaining -= written;\n   position += written;\n   index += written;\n}\nfileChannel.position(position);\nbuffer.readerIndex(index);\nsize += localsize - remaining;", "author": "amizurov", "createdAt": "2020-08-07T06:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjcwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4Njk4Nw==", "url": "https://github.com/netty/netty/pull/10453#discussion_r467086987", "bodyText": "@amizurov yes exactly, except to match the current logic the last line would still be just\nsize += localsize;\nBut noticing that, it looks like this current (now merged) logic is actually slightly wrong and that (ignoring the remaining suggestion) this would be more correct:\nsize += totalWritten;\ni.e. to keep state consistent in the case where we exit prematurely due to written < 0 (not sure it's realistic case but since we're handling it, should be done correctly)\nWDYT? (cc @normanmaurer)", "author": "njhill", "createdAt": "2020-08-07T14:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjcwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4NzU5Mw==", "url": "https://github.com/netty/netty/pull/10453#discussion_r467087593", "bodyText": "@njhill yeah... Want to do a PR ?", "author": "normanmaurer", "createdAt": "2020-08-07T14:46:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjcwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4Mjg3MQ==", "url": "https://github.com/netty/netty/pull/10453#discussion_r467782871", "bodyText": "@njhill, @normanmaurer  I'll create separate PR with code above if you don't mind", "author": "amizurov", "createdAt": "2020-08-10T09:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjcwNg=="}], "type": "inlineReview"}]}