{"pr_number": 711, "pr_title": "Git and SVN backends now properly resolve merge conflicts and dialogs show backend errors", "pr_createdAt": "2020-07-23T15:54:40Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/711", "timeline": [{"oid": "ffd60fc4efcd5516c3d6a64427086ab49134f250", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ffd60fc4efcd5516c3d6a64427086ab49134f250", "message": "Added EGit dialogs for commit and updated - (Task #708)\n\n- Git update handlers now pass the results from the last push / update\naction on to EGit for proper user feedback on UI level\n\n---\nTask #708: Problems with GitBackend deleting files and quietly denying\npush", "committedDate": "2020-07-23T07:25:15Z", "type": "commit"}, {"oid": "dcb2c4a9fbed2b33216de6e4d2166e30a363a9f6", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/dcb2c4a9fbed2b33216de6e4d2166e30a363a9f6", "message": "Fixing git to deal with remote commits on update - (Task #708)\n\n- Added code that the simplified VirSat Update on the git backend is\ndealign with conflicts on the pull.\n- Switched to the standard RECURSIVE merge strategy usually used by Git.\nIt is usually quite powerful.\n- Added code, thus in case of remaining conflicts the truth will be seen\nin the remote Repository. And conflicting files will be replaced by it.\n\n---\nTask #708: Problems with GitBackend deleting files and quietly denying\npush", "committedDate": "2020-07-23T09:36:05Z", "type": "commit"}, {"oid": "4edbfe7108c886d143ada6e24a2c3926869a9ea5", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4edbfe7108c886d143ada6e24a2c3926869a9ea5", "message": "Merge branch 'feature/task_708-Problems_with_GitBack_Update_Fix' into\nfeature/task_708-Problems_with_GitBack\n\nConflicts:\n\tde.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/git/VirSatGitVersionControlBackend.java", "committedDate": "2020-07-23T09:41:52Z", "type": "commit"}, {"oid": "1c66a24afc9f3ff6325e15d00fabda49afc78563", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1c66a24afc9f3ff6325e15d00fabda49afc78563", "message": "Added test case for conflict resolution in backends - (Task #708)\n\n- Added test case that creates a merge conflict and tests that the\nremote version is taken to resolve the conflict\n- Extended test cases to also check that non-conflicting files are\npreserved\n- Implemented tested conflict resolution in SVN backend\n\n---\nTask #708: Problems with GitBackend deleting files and quietly denying\npush", "committedDate": "2020-07-23T14:46:11Z", "type": "commit"}, {"oid": "b551f523b85251bcd565eff3ca03825c40c83217", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/b551f523b85251bcd565eff3ca03825c40c83217", "message": "Adapted SWTBot Test Cases EGit dialogs - (Task #708)\n\n- Closing the EGit dialogues after commit / update operations in git\n\n---\nTask #708: Problems with GitBackend deleting files and quietly denying\npush", "committedDate": "2020-07-23T15:49:50Z", "type": "commit"}, {"oid": "6475447278cdd6333a5ab3f7a9390f51cf24c80f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6475447278cdd6333a5ab3f7a9390f51cf24c80f", "message": "Extracted method for conflict resolution in git backend - (Task #708)\n\n\n---\nTask #708: Problems with GitBackend deleting files and quietly denying\npush", "committedDate": "2020-07-23T16:11:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNzkzNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/711#discussion_r459927937", "bodyText": "Do we maybe want to notify the user about the replacement? Like with a simple dialog? I'm afraid people will not realize that the change was reverted...", "author": "franzTobiasDLR", "createdAt": "2020-07-24T08:48:04Z", "path": "de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/git/VirSatGitVersionControlBackend.java", "diffHunk": "@@ -93,41 +121,87 @@ protected void doCommit(Repository gitRepository, String message, SubMonitor mon\n \r\n \t@Override\r\n \tpublic void update(IProject project,  IProgressMonitor monitor) throws Exception {\r\n-\t\tSubMonitor commitAndPullMonitor = SubMonitor.convert(monitor, \"Virtual Satellite git commit and pull\", PROGRESS_INDEX_COMMIT_UPDATE_STEPS);\r\n+\t\tSubMonitor commitAndPullMonitor = SubMonitor.convert(monitor, \"Virtual Satellite git commit and pull\", PROGRESS_INDEX_UPDATE_STEPS);\r\n \t\t\r\n \t\t// Get the repository mapped to the project\r\n \t\tRepository gitRepository = RepositoryMapping.getMapping(project).getRepository();\r\n \t\t// Stage and commit all changes\r\n \t\tdoCommit(gitRepository, BACKEND_REPOSITORY_COMMIT_PULL_MESSAGE  + project.getName(), commitAndPullMonitor.split(1));\r\n \r\n \t\tcommitAndPullMonitor.split(1).subTask(\"Check if remotes exist\");\r\n+\t\t\r\n \t\t// Get the remotes for the repository\r\n \t\tString remoteUrl = gitRepository.getConfig().getString(\"remote\", \"origin\", \"url\");\r\n \t\tCollection<Ref> refs = Git.lsRemoteRepository()\r\n \t\t\t.setRemote(remoteUrl)\r\n \t\t\t.call();\r\n \t\t\r\n \t\t// Only perform a pull of the remote exists\r\n-\t\tProgressMonitor gitMonitor = new EclipseGitProgressTransformer(commitAndPullMonitor.split(1));\r\n-\t\t\r\n \t\tif (!refs.isEmpty()) {\r\n-\t\t\t// Pull from origin\r\n-\t\t\tGit.wrap(gitRepository).pull()\r\n+\t\t\t\r\n+\t\t\t// Pull from origin and apply the Recursive Merge Strategy. It is the git standard merge strategy.\r\n+\t\t\t// In case there has been another commit on the remote in between, the pull will try to resolve it\r\n+\t\t\t// and store it as a new commit locally.\r\n+\t\t\tProgressMonitor gitPullMonitor = new EclipseGitProgressTransformer(commitAndPullMonitor.setWorkRemaining(1).split(1));\r\n+\t\t\tlastPullResult = Git.wrap(gitRepository).pull()\r\n \t\t\t\t.setCredentialsProvider(credentialsProvider)\r\n-\t\t\t\t.setProgressMonitor(gitMonitor)\r\n+\t\t\t\t.setProgressMonitor(gitPullMonitor)\r\n \t\t\t\t.setTimeout(GIT_REMOTE_TIMEOUT)\r\n-\t\t\t\t.setStrategy(MergeStrategy.THEIRS)\r\n+\t\t\t\t.setStrategy(MergeStrategy.RECURSIVE)\r\n \t\t\t\t.call();\r\n-\t\t}\r\n-\t\t\r\n+\t\t\t\r\n+\t\t\tcheckAndResolveConflicts(gitRepository, commitAndPullMonitor);\r\n+\t\t} \r\n+\t\t \r\n \t\tGit.wrap(gitRepository).close();\r\n \t\t\r\n \t\tproject.refreshLocal(Resource.DEPTH_INFINITE, commitAndPullMonitor.split(1));\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * In case not all files could be merged they need to be fixed.\r\n+\t * Conflicting files are fixed by replacing them with the version from the remote git repository.\r\n+\t * @param gitRepository the git repository\r\n+\t * @param monitor the progress monitor\r\n+\t * @throws Exception\r\n+\t */\r\n+\tprivate void checkAndResolveConflicts(Repository gitRepository, SubMonitor progressMonitor) throws Exception {\r\n+\t\t// Therefore lets see if files are in a conflicting state within the repository\r\n+\t\tSet<String> conflictingFiles = Git.wrap(gitRepository).status().call().getConflicting();\r\n+\t\t\r\n+\t\t// If there are any continue from here with resolving the conflicts.\r\n+\t\tif (!conflictingFiles.isEmpty()) {\r\n+\t\t\tprogressMonitor.setWorkRemaining(2);\r\n+\t\t\tProgressMonitor gitCheckoutMonitor = new EclipseGitProgressTransformer(progressMonitor.split(1));\r\n+\t\t\t\r\n+\t\t\t// Prepare a checkout command to get THEIRS on all conflicting files.\r\n+\t\t\t// This basically means that in case of concept the files in the repository\r\n+\t\t\t// are regarded as being correct. This happens on the cost of loosing local changes.\r\n+\t\t\tCheckoutCommand checkoutCommand = Git.wrap(gitRepository).checkout();\r\n+\t\t\tcheckoutCommand.setProgressMonitor(gitCheckoutMonitor);\r\n+\t\t\t\r\n+\t\t\tfor (String conflictingFile : conflictingFiles) {\r\n+\t\t\t\tcheckoutCommand.addPath(conflictingFile);\r\n+\t\t\t}\r\n+\t\t\tcheckoutCommand.setStage(Stage.THEIRS);\r\n+\t\t\tcheckoutCommand.call();\r\n+\t\t\t\r\n+\t\t\t// Finally close the still open merge commit\r\n+\t\t\tdoCommit(gitRepository, BACKEND_REPOSITORY_MERGE_COMMIT_MESSAGE, progressMonitor.split(1));\r", "originalCommit": "6475447278cdd6333a5ab3f7a9390f51cf24c80f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMzEwNQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/711#discussion_r460003105", "bodyText": "@franzTobiasDLR Its not much but in the EGit dialog you at least see the status notification that there were conflicts + you get the modified files.", "author": "SaMuellerDLR", "createdAt": "2020-07-24T11:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNzkzNw=="}], "type": "inlineReview"}]}