{"pr_number": 889, "pr_title": "Created chapter for describing the Concept Language", "pr_createdAt": "2020-12-04T09:06:50Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889", "timeline": [{"oid": "8deda020f443749631e54473c196790651a789f9", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8deda020f443749631e54473c196790651a789f9", "message": "Started describing concepts - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-02T08:26:35Z", "type": "commit"}, {"oid": "2e64c1123244d920061e20aaca2232922fa66370", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2e64c1123244d920061e20aaca2232922fa66370", "message": "Adding description of concept properties - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-02T08:26:52Z", "type": "commit"}, {"oid": "2d1376b1dbcf904d1ed9b47e85821bee1bf6d044", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2d1376b1dbcf904d1ed9b47e85821bee1bf6d044", "message": "Started description for Structural Elements - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-02T08:39:25Z", "type": "commit"}, {"oid": "5a0676a29c5adc3ca0e6308d4c86a06e1c721f4e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5a0676a29c5adc3ca0e6308d4c86a06e1c721f4e", "message": "Started some description for Categories - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-02T10:16:24Z", "type": "commit"}, {"oid": "b445918786a9cbc5f890c31597f8db7184ae3d3d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/b445918786a9cbc5f890c31597f8db7184ae3d3d", "message": "Streamlining formatting - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-03T12:10:10Z", "type": "commit"}, {"oid": "f337c0d97a9b54bf28462ade301002e88d8cb016", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f337c0d97a9b54bf28462ade301002e88d8cb016", "message": "Finished first version of concept language chapter - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T08:47:24Z", "type": "commit"}, {"oid": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "message": "Merge remote-tracking branch 'origin/development' into feature/task_848-Expand_Concept_Tool_C", "committedDate": "2020-12-04T09:15:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMjIwMQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536002201", "bodyText": "Difference name and displayName", "author": "maurpa", "createdAt": "2020-12-04T10:37:32Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MDEzNQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536040135", "bodyText": "Added name description and extended description of displayname.", "author": "SaMuellerDLR", "createdAt": "2020-12-04T11:43:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMjIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwNTY2Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536005662", "bodyText": "Here are also not all attributes listed:\ne.g. short name\nname etc.", "author": "maurpa", "createdAt": "2020-12-04T10:43:12Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r\n+Structural Elements are also the containers for data information (Categories and Properties).\r\n+To support configuration management and to bundle common data, Structural Elements can also inherit data from one another.\r\n+The instance of a Structural Element is called a _Structural Element Instance_.\r\n+\r\n+A Structural Element can have the following additional attributes:\r\n+\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MDM1MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536040351", "bodyText": "Nice finde, forgot about them. Added name and shortname for Category and Structural Element.", "author": "SaMuellerDLR", "createdAt": "2020-12-04T11:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwNTY2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxMDAxNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536010017", "bodyText": "There is two times extends in the rendered version", "author": "maurpa", "createdAt": "2020-12-04T10:50:10Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r\n+Structural Elements are also the containers for data information (Categories and Properties).\r\n+To support configuration management and to bundle common data, Structural Elements can also inherit data from one another.\r\n+The instance of a Structural Element is called a _Structural Element Instance_.\r\n+\r\n+A Structural Element can have the following additional attributes:\r\n+\r\n+description:: \r\n+The description of the Structural Element.\r\n+\r\n+IsRootStructuralElement::\r\n+Makes it possible to create instances directly in the _Repository_.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Elements may have instances of this Structural Element as a child.\r\n+The Applicable For can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can be then attached to any type of Structural Element.\r\n+\r\n+Inherits From::\r\n+Describes which type of Structural Elements, instances of this Structural Element can inherit data from.\r\n+Note that the concrete inheritance link between instances is defined during runtime.\r\n+At concept level, only the types between which inheritance is possible are defined.\r\n+When an instance inherits from another instance, all attached data will be passed on to the inheriting instance.\r\n+The Inherits From can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can then inherit from any type of Structural Element.\r\n+\r\n+The following example describes a simple system decomposition.\r\n+\r\n+----\r\n+StructuralElement ComponentType {\r\n+\tIsRootStructuralElement;\r\n+\tApplicable For [ComponentType];\r\n+}\r\n+\r\n+StructuralElement Component {\r\n+\tIsRootStructuralElement;\r\n+\tInherits From [ComponentType];\r\n+\tApplicable For [Component];\r\n+}\r\n+----\r\n+\r\n+It defines a _ComponentType_ which can be attached to the _Repository_.\r\n+It can also be nested.\r\n+As a second Structural Element, the example defines a _Component_, which can also be attached to the _Repository_.\r\n+It can be nested and inherit data from a selected _ComponentType_. \r\n+\r\n+=== Categories\r\n+\r\n+Categories are the main way of assigning data to a Structural Element.\r\n+The instance of a Category is called a _CategoryAssignment_.\r\n+\r\n+A Category may contain properties - described in the next section - and\r\n+also supports the following attributes:\r\n+\r\n+extends:: \r\n+A Category may extend another Category.\r\n+The extending Category will then inherit all defined properties from the extended Category.\r\n+\r\n+description::\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxMDkyOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536010928", "bodyText": "I guess it is just the number of category assignments", "author": "maurpa", "createdAt": "2020-12-04T10:51:33Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r\n+Structural Elements are also the containers for data information (Categories and Properties).\r\n+To support configuration management and to bundle common data, Structural Elements can also inherit data from one another.\r\n+The instance of a Structural Element is called a _Structural Element Instance_.\r\n+\r\n+A Structural Element can have the following additional attributes:\r\n+\r\n+description:: \r\n+The description of the Structural Element.\r\n+\r\n+IsRootStructuralElement::\r\n+Makes it possible to create instances directly in the _Repository_.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Elements may have instances of this Structural Element as a child.\r\n+The Applicable For can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can be then attached to any type of Structural Element.\r\n+\r\n+Inherits From::\r\n+Describes which type of Structural Elements, instances of this Structural Element can inherit data from.\r\n+Note that the concrete inheritance link between instances is defined during runtime.\r\n+At concept level, only the types between which inheritance is possible are defined.\r\n+When an instance inherits from another instance, all attached data will be passed on to the inheriting instance.\r\n+The Inherits From can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can then inherit from any type of Structural Element.\r\n+\r\n+The following example describes a simple system decomposition.\r\n+\r\n+----\r\n+StructuralElement ComponentType {\r\n+\tIsRootStructuralElement;\r\n+\tApplicable For [ComponentType];\r\n+}\r\n+\r\n+StructuralElement Component {\r\n+\tIsRootStructuralElement;\r\n+\tInherits From [ComponentType];\r\n+\tApplicable For [Component];\r\n+}\r\n+----\r\n+\r\n+It defines a _ComponentType_ which can be attached to the _Repository_.\r\n+It can also be nested.\r\n+As a second Structural Element, the example defines a _Component_, which can also be attached to the _Repository_.\r\n+It can be nested and inherit data from a selected _ComponentType_. \r\n+\r\n+=== Categories\r\n+\r\n+Categories are the main way of assigning data to a Structural Element.\r\n+The instance of a Category is called a _CategoryAssignment_.\r\n+\r\n+A Category may contain properties - described in the next section - and\r\n+also supports the following attributes:\r\n+\r\n+extends:: \r\n+A Category may extend another Category.\r\n+The extending Category will then inherit all defined properties from the extended Category.\r\n+\r\n+description::\r\n+The description of the Category.\r\n+\r\n+isAbstract::\r\n+Marks a Category as abstract.\r\n+The Category can then be used for defining inheritance hierarchies, \r\n+but the user will not be able to create Category Assignments of this Category.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Element Instances can have Category Assignments of this Category.\r\n+The Applicable For can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. The Category can then be assigned to any Structural Element Instance.\r\n+\r\n+Cardinality::\r\n+Defines how many Category Assignments of this Category can be assigned to one Structural Element Instance.\r\n+If no Cardinality is defined, then the number is unlimited.\r\n+By defining the Cardinality with some integer number, the number Category Assignments can be limited appropriately.\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxMTk3NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536011975", "bodyText": "*EReference", "author": "maurpa", "createdAt": "2020-12-04T10:53:08Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r\n+Structural Elements are also the containers for data information (Categories and Properties).\r\n+To support configuration management and to bundle common data, Structural Elements can also inherit data from one another.\r\n+The instance of a Structural Element is called a _Structural Element Instance_.\r\n+\r\n+A Structural Element can have the following additional attributes:\r\n+\r\n+description:: \r\n+The description of the Structural Element.\r\n+\r\n+IsRootStructuralElement::\r\n+Makes it possible to create instances directly in the _Repository_.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Elements may have instances of this Structural Element as a child.\r\n+The Applicable For can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can be then attached to any type of Structural Element.\r\n+\r\n+Inherits From::\r\n+Describes which type of Structural Elements, instances of this Structural Element can inherit data from.\r\n+Note that the concrete inheritance link between instances is defined during runtime.\r\n+At concept level, only the types between which inheritance is possible are defined.\r\n+When an instance inherits from another instance, all attached data will be passed on to the inheriting instance.\r\n+The Inherits From can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can then inherit from any type of Structural Element.\r\n+\r\n+The following example describes a simple system decomposition.\r\n+\r\n+----\r\n+StructuralElement ComponentType {\r\n+\tIsRootStructuralElement;\r\n+\tApplicable For [ComponentType];\r\n+}\r\n+\r\n+StructuralElement Component {\r\n+\tIsRootStructuralElement;\r\n+\tInherits From [ComponentType];\r\n+\tApplicable For [Component];\r\n+}\r\n+----\r\n+\r\n+It defines a _ComponentType_ which can be attached to the _Repository_.\r\n+It can also be nested.\r\n+As a second Structural Element, the example defines a _Component_, which can also be attached to the _Repository_.\r\n+It can be nested and inherit data from a selected _ComponentType_. \r\n+\r\n+=== Categories\r\n+\r\n+Categories are the main way of assigning data to a Structural Element.\r\n+The instance of a Category is called a _CategoryAssignment_.\r\n+\r\n+A Category may contain properties - described in the next section - and\r\n+also supports the following attributes:\r\n+\r\n+extends:: \r\n+A Category may extend another Category.\r\n+The extending Category will then inherit all defined properties from the extended Category.\r\n+\r\n+description::\r\n+The description of the Category.\r\n+\r\n+isAbstract::\r\n+Marks a Category as abstract.\r\n+The Category can then be used for defining inheritance hierarchies, \r\n+but the user will not be able to create Category Assignments of this Category.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Element Instances can have Category Assignments of this Category.\r\n+The Applicable For can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. The Category can then be assigned to any Structural Element Instance.\r\n+\r\n+Cardinality::\r\n+Defines how many Category Assignments of this Category can be assigned to one Structural Element Instance.\r\n+If no Cardinality is defined, then the number is unlimited.\r\n+By defining the Cardinality with some integer number, the number Category Assignments can be limited appropriately.\r\n+\r\n+=== Properties\r\n+\r\n+A Category can be extended with further data by adding _Properties_.\r\n+An instantiation of a property is called a _Property Instance_.\r\n+\r\n+The GSEL supports the following property types:\r\n+\r\n+FloatProperty:: \r\n+Contains a real number. \r\n+Can be equipped further with the following attributes:\r\n+* _description_: \r\n+A description of the property.\r\n+* _default_: \r\n+The default value after instantiation.\r\n+* _quantityKind_: \r\n+The quantity kind of this property.\r\n+Only units based on the quantity kind of this attribute will be assignable in the user interface.\r\n+* _unit_: \r\n+The default unit after instantiation.\r\n+Has to be a unit compatible to the _quantityKind_ attribute. \r\n+ \r\n+\r\n+IntegerProperty:: \r\n+Contains an integer number.\r\n+Can be equipped further with the following attributes:\r\n+* _description_: \r\n+A description of the property.\r\n+* _default_: \r\n+The default value after instantiation.\r\n+* _quantityKind_: \r\n+The quantity kind of this property.\r\n+Only units based on the quantity kind of this attribute will be assignable in the user interface.\r\n+* _unit_: \r\n+The default unit after instantiation.\r\n+Has to be a unit compatible to the _quantityKind_ attribute. \r\n+\r\n+BooleanProperty::\r\n+Contains a Boolean value.\r\n+Can be equipped further with the following attributes:\r\n+* _description_: \r\n+A description of the property.\r\n+* _default_: \r\n+The default value after instantiation.\r\n+\r\n+StringProperty::\r\n+Contains a string value.\r\n+Can be equipped further with the following attributes:\r\n+* _description_: \r\n+A description of the property.\r\n+* _default_: \r\n+The default value after instantiation.\r\n+\r\n+Resource:\r\n+Contains a link to a resource on the file system.\r\n+Can be equipped further with the following attributes:\r\n+* _description_: \r\n+A description of the property.\r\n+\r\n+Reference:\r\n+Contains a reference to a Category Assignment or  in the model.\r\n+Can be equipped further with the following attributes:\r\n+* _of Type_: \r\n+The _Category_ or _Property_ that can be referenced.\r\n+* _description_: \r\n+A description of the property.\r\n+\r\n+ERference:\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzOTgxNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536039816", "bodyText": "Fixed.", "author": "SaMuellerDLR", "createdAt": "2020-12-04T11:42:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxMTk3NQ=="}], "type": "inlineReview"}, {"oid": "f4841a4c78e6e4d250b43b30fe7a1a616506a2da", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f4841a4c78e6e4d250b43b30fe7a1a616506a2da", "message": "Improved manual according to reviewer feedback - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T11:39:26Z", "type": "commit"}, {"oid": "2d6074980253a00b17726510fa41b792ba53e3cb", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2d6074980253a00b17726510fa41b792ba53e3cb", "message": "Removed bad sentence - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T11:42:16Z", "type": "commit"}, {"oid": "15ad2ae484b8cd06f5572472010aea6a4f30260c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/15ad2ae484b8cd06f5572472010aea6a4f30260c", "message": "Some further formatting fixes - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T11:45:54Z", "type": "commit"}, {"oid": "7b3a90423c161f747d089a652c71dba1f36a8228", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7b3a90423c161f747d089a652c71dba1f36a8228", "message": "Minor example calculation fix - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T11:47:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzODU1Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536038557", "bodyText": "I think we should add one ore two senetences here about why we have this langauge and what concepts are for", "author": "franzTobiasDLR", "createdAt": "2020-12-04T11:40:37Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MjAxOQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536082019", "bodyText": "Im not sure. This is technically the third chapter about concepts. In \"Different Ways to Develop Virtual Satellite\" what concepts are, is already explained (why exactly they are explained at that position is improvable questionable though). But I dont think we should repeat ourselves too much. I included a sentence to link to that section and that the GSEL is mostly relevant for the role of Concept Developers.", "author": "SaMuellerDLR", "createdAt": "2020-12-04T12:59:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzODU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzOTQ3Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536039477", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Must be given in the form of `.` separated numbers.\n          \n          \n            \n            Must be given in the form of `.` separated numbers (E.g. 2.0 ).", "author": "franzTobiasDLR", "createdAt": "2020-12-04T11:42:18Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MDg2NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536040865", "bodyText": "Not sure if we should mention the CEF conept here... Guess it will confuse people as it is not part of core. The system, subsystem and equipment are als represented as SEIs with a basic PS structure", "author": "franzTobiasDLR", "createdAt": "2020-12-04T11:44:47Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3Nzg5NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536077894", "bodyText": "Good idea.", "author": "SaMuellerDLR", "createdAt": "2020-12-04T12:52:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MDg2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0NTA2Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536045067", "bodyText": "I get what you're saying here, but it sounds a bit overprecise making it hard to understand for beginners. What about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Describes which Structural Elements may have instances of this Structural Element as a child.\n          \n          \n            \n            Describes in which structural element this element's instances can be added into.", "author": "franzTobiasDLR", "createdAt": "2020-12-04T11:52:27Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r\n+Structural Elements are also the containers for data information (Categories and Properties).\r\n+To support configuration management and to bundle common data, Structural Elements can also inherit data from one another.\r\n+The instance of a Structural Element is called a _Structural Element Instance_.\r\n+\r\n+A Structural Element can have the following additional attributes:\r\n+\r\n+description:: \r\n+The description of the Structural Element.\r\n+\r\n+IsRootStructuralElement::\r\n+Makes it possible to create instances directly in the _Repository_.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Elements may have instances of this Structural Element as a child.\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0ODM2NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536048364", "bodyText": "The structure is also kind of data isn't it? But categories allow us to add actuall systems engineering domain data to the model....\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Categories are the main way of assigning data to a Structural Element.\n          \n          \n            \n            Categories are the main way of assigning domain data to a Structural Element.", "author": "franzTobiasDLR", "createdAt": "2020-12-04T11:58:40Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r\n === Structural Elements\r\n \r\n+_Structural Elements_ decompose a system into smaller components.\r\n+For example, in the _CEF_ concept, a system is structurally decomposed into _System_ -> _SubSystem_ -> _Equipment_.\r\n+Structural Elements are also the containers for data information (Categories and Properties).\r\n+To support configuration management and to bundle common data, Structural Elements can also inherit data from one another.\r\n+The instance of a Structural Element is called a _Structural Element Instance_.\r\n+\r\n+A Structural Element can have the following additional attributes:\r\n+\r\n+description:: \r\n+The description of the Structural Element.\r\n+\r\n+IsRootStructuralElement::\r\n+Makes it possible to create instances directly in the _Repository_.\r\n+\r\n+Applicable For::\r\n+Describes which Structural Elements may have instances of this Structural Element as a child.\r\n+The Applicable For can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can be then attached to any type of Structural Element.\r\n+\r\n+Inherits From::\r\n+Describes which type of Structural Elements, instances of this Structural Element can inherit data from.\r\n+Note that the concrete inheritance link between instances is defined during runtime.\r\n+At concept level, only the types between which inheritance is possible are defined.\r\n+When an instance inherits from another instance, all attached data will be passed on to the inheriting instance.\r\n+The Inherits From can have the following values:\r\n+* A list of the form _[StructuralElement1, StructuralElement2,...]_.\r\n+* _All_. Instances can then inherit from any type of Structural Element.\r\n+\r\n+The following example describes a simple system decomposition.\r\n+\r\n+----\r\n+StructuralElement ComponentType {\r\n+\tIsRootStructuralElement;\r\n+\tApplicable For [ComponentType];\r\n+}\r\n+\r\n+StructuralElement Component {\r\n+\tIsRootStructuralElement;\r\n+\tInherits From [ComponentType];\r\n+\tApplicable For [Component];\r\n+}\r\n+----\r\n+\r\n+It defines a _ComponentType_ which can be attached to the _Repository_.\r\n+It can also be nested.\r\n+As a second Structural Element, the example defines a _Component_, which can also be attached to the _Repository_.\r\n+It can be nested and inherit data from a selected _ComponentType_. \r\n+\r\n+=== Categories\r\n+\r\n+Categories are the main way of assigning data to a Structural Element.\r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1ODU3MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536058571", "bodyText": "I would add some introducing words about SEs and Cs here before explainging them in the next sections. To provide some background what their main purpose is.... I guess understanding the difference between SEs and Cs is a fundamental thing that needs to be understood before all of the detailed information in the next section.\nI would propose something like this:\nThe concept language distinguishs between Structural Elements and Categories. Structural Elements decompose the system into its basic structure, Categories contain the actual engiering data. By decoupling the engineering domain data from the system model's structure, it is possible to add new concepts to a system model later and to also open system models without all concepts loaded in Virtual Satellite.", "author": "franzTobiasDLR", "createdAt": "2020-12-04T12:17:32Z", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -160,12 +160,255 @@ Congratulations. You have successfully set up your Git integration!\n \r\n == Generic Systems Engineering (Concept) Language \r\n \r\n-=== Categories and Properties\r\n+Concepts are described using the Generic Systems Engineering Language (GSEL).\r\n+The following gives a break-down on the key words and functionalities provided by the GSEL.\r\n+\r\n+=== Concepts\r\n+\r\n+A  _Concept_ is always the root of a concept.concept file.\r\n+It serves as the main container of the concept.\r\n+It also fulfills the task of carrying global meta-information.\r\n+\r\n+A Concept may also have the following attributes:\r\n+\r\n+displayname::\r\n+This name will be shown to the user when interacting with the concept in the UI.\r\n+For example when activating a concept, the displayname is shown.\r\n+\r\n+description::\r\n+The description of the concept.\r\n+\r\n+version:: \r\n+The version number of the concept. \r\n+Must be given in the form of `.` separated numbers.\r\n+For each version number, the IDE tools generate a corresponding `concept_vVERSION.xmi` in the concept folder.\r\n+This file is used to automtically migrate old repositories based on an older concept version to the newest version.\r\n+\r\n+WARNING: When editing a concept, the version number should be increased before making any changes to the concept.\r\n+Otherwise the changes will be considered to be part of the old version.\r\n+Not doing this will cause automatic migration to fail!\r\n \r", "originalCommit": "f24c1c400be1ec481b7d6a8aea0d3bfa87e890c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3NTM2MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/889#discussion_r536075361", "bodyText": "Included proposition. I tried to break down the last sentence a bit since it appeared as quite long.\nPlease check if I retained the meaning.", "author": "SaMuellerDLR", "createdAt": "2020-12-04T12:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1ODU3MQ=="}], "type": "inlineReview"}, {"oid": "2f8f1879a4cc736cbbc6553c59c62a76853b167e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2f8f1879a4cc736cbbc6553c59c62a76853b167e", "message": "Update de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc\n\nCo-authored-by: franzTobiasDLR <49645871+franzTobiasDLR@users.noreply.github.com>", "committedDate": "2020-12-04T12:27:34Z", "type": "commit"}, {"oid": "d6128672ec74cd8edaddd06ccdda3029de15a3ec", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d6128672ec74cd8edaddd06ccdda3029de15a3ec", "message": "Update de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc\n\nCo-authored-by: franzTobiasDLR <49645871+franzTobiasDLR@users.noreply.github.com>", "committedDate": "2020-12-04T12:32:31Z", "type": "commit"}, {"oid": "a66989559031a4aa38c2815bf57d1cea5fb7fd83", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a66989559031a4aa38c2815bf57d1cea5fb7fd83", "message": "Update de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc\n\nCo-authored-by: franzTobiasDLR <49645871+franzTobiasDLR@users.noreply.github.com>", "committedDate": "2020-12-04T12:32:43Z", "type": "commit"}, {"oid": "dcc7a7ac63c799431d5aee6b595dc21fe2ae03bd", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/dcc7a7ac63c799431d5aee6b595dc21fe2ae03bd", "message": "Incorporated more description about SEs and CAs - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T12:37:45Z", "type": "commit"}, {"oid": "30469489d9679ba4b897e956622769ed643b3472", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/30469489d9679ba4b897e956622769ed643b3472", "message": "Improved description of who needs the GSEL - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T12:46:15Z", "type": "commit"}, {"oid": "f4b4776e73452fbe36c898dcaba27e5870c7bea8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f4b4776e73452fbe36c898dcaba27e5870c7bea8", "message": "Merge branch 'feature/task_848-Expand_Concept_Tool_C' of https://github.com/virtualsatellite/VirtualSatellite4-Core into feature/task_848-Expand_Concept_Tool_C", "committedDate": "2020-12-04T12:46:33Z", "type": "commit"}, {"oid": "2527222fba93f406bed04e977a70b4d2e084e7b4", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2527222fba93f406bed04e977a70b4d2e084e7b4", "message": "Eliminated CEF textual dependency - (Task #848)\n\n\n---\nTask #848: Expand Concept Tool Chapter in Developer Manual", "committedDate": "2020-12-04T12:51:56Z", "type": "commit"}]}