{"pr_number": 673, "pr_title": "Feature/task 663 add bean list for bea", "pr_createdAt": "2020-06-26T13:52:49Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673", "timeline": [{"oid": "5862cc19fa4bfdba5f4104971108ed5fdc826e9f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5862cc19fa4bfdba5f4104971108ed5fdc826e9f", "message": "Add TypeSafeReferencePropertyBeanList - (Task #663)\n\nIs a TypeSafeArrayInstanceList correctly typed with a\nBeanPropertyReference.\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed", "committedDate": "2020-06-26T08:38:32Z", "type": "commit"}, {"oid": "d5c9bcc64acc1661e343e92084c1201699b1acb2", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d5c9bcc64acc1661e343e92084c1201699b1acb2", "message": "Merge branch 'development' into feature/task_663-Add_bean_list_for_Bea", "committedDate": "2020-06-26T08:42:45Z", "type": "commit"}, {"oid": "38831d33cbb708e4fc7c94e59fba33e110517c1c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/38831d33cbb708e4fc7c94e59fba33e110517c1c", "message": "Add TypeSafeComposedPropertyBeanList and test cases - (Task #663)\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed", "committedDate": "2020-06-26T09:54:37Z", "type": "commit"}, {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "message": "Add lists to GenerateCategoryBeans - (Task #663)\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed", "committedDate": "2020-06-26T12:37:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNTU3NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446805574", "bodyText": "sure it should be called \"declareSafeAccessArrayMethodBean\" or \"declareMethodSafeAccessArrayBean\" ?", "author": "PhilMFischer", "createdAt": "2020-06-29T06:46:16Z", "path": "de.dlr.sc.virsat.model.concept/src/de/dlr/sc/virsat/model/concept/generator/beans/GenerateCategoryBeans.xtend", "diffHunk": "@@ -329,6 +331,16 @@ class GenerateCategoryBeans extends AGeneratorGapGenerator<Category> {\n \t\t}\r\n \t}\r\n \t'''\r\n+\t\r\n+\tprotected def declareSafeAccessArrayMethodBean(AProperty property, ImportManager importManager) '''\r", "originalCommit": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxNjkwMw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446816903", "bodyText": "Renamed it to \"declareSafeAccessArrayBeanMethod\" to keep it consistent with the existing \"declareSafeAccessArrayMethod\"", "author": "JAmmermann-DLR", "createdAt": "2020-06-29T07:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNTU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNjk1NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446806954", "bodyText": "Check for the white spaces. Maybe a clean up is needed here.", "author": "PhilMFischer", "createdAt": "2020-06-29T06:49:53Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/list/TypeSafeArrayInstanceList.java", "diffHunk": "@@ -44,14 +48,17 @@ public TypeSafeArrayInstanceList(Class<BEAN_TYPE> beanClazz, ArrayInstance ai) {\n \t\tthis.beanClazz = beanClazz;\r\n \t}\r\n \t\r\n-\tprotected Class<BEAN_TYPE> beanClazz;\r\n+\t\r", "originalCommit": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwOTE0Ng==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446809146", "bodyText": "Maybe we could use some mroe documentation on this change. We could explain, that we needed this change for the sub-classes to work as expected.", "author": "PhilMFischer", "createdAt": "2020-06-29T06:54:57Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/list/TypeSafeArrayInstanceList.java", "diffHunk": "@@ -44,14 +48,17 @@ public TypeSafeArrayInstanceList(Class<BEAN_TYPE> beanClazz, ArrayInstance ai) {\n \t\tthis.beanClazz = beanClazz;\r\n \t}\r\n \t\r\n-\tprotected Class<BEAN_TYPE> beanClazz;\r\n+\t\r\n+\r\n+\tprotected Class<?> beanClazz;\r", "originalCommit": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMTgwNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446811806", "bodyText": "The section of Instantiating the CA could maybe simplified by usign the CategoryInstantiator.", "author": "PhilMFischer", "createdAt": "2020-06-29T07:00:47Z", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/concept/lists/TypeSafeComposedPropertyBeanListTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.concept.lists;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.concept.list.TypeSafeComposedPropertyBeanList;\n+import de.dlr.sc.virsat.model.concept.types.category.IBeanCategoryAssignment;\n+import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyComposed;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.Category;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.ComposedProperty;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ArrayInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ComposedPropertyInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryAssignmentHelper;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.dvlm.concepts.ConceptsFactory;\n+\n+public class TypeSafeComposedPropertyBeanListTest {\n+\n+\tprivate ComposedProperty testProperty;\n+\tprivate BeanPropertyComposed<IBeanCategoryAssignment> bean;\n+\tprivate ComposedPropertyInstance cpi;\n+\tprivate TypeSafeComposedPropertyBeanList<IBeanCategoryAssignment> beanList;\n+\tprivate static final String PROPERTY_NAME = \"testProperty\";\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tConcept testConcept = ConceptsFactory.eINSTANCE.createConcept();\n+\t\tCategory testCategory = CategoriesFactory.eINSTANCE.createCategory();\n+\t\ttestProperty = PropertydefinitionsFactory.eINSTANCE.createComposedProperty();\n+\t\ttestProperty.setName(PROPERTY_NAME);\n+\t\ttestProperty.setArrayModifier(PropertydefinitionsFactory.eINSTANCE.createDynamicArrayModifier());\n+\t\t\n+\t\ttestConcept.getCategories().add(testCategory);\n+\t\ttestCategory.getProperties().add(testProperty);\n+\t\t\n+\t\tCategoryAssignment testCA = CategoriesFactory.eINSTANCE.createCategoryAssignment();", "originalCommit": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMjQ1NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446812454", "bodyText": "Maybe possible to simplify by using the CategoryInstantiator.", "author": "PhilMFischer", "createdAt": "2020-06-29T07:02:24Z", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/concept/lists/TypeSafeReferencePropertyBeanListTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.concept.lists;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.concept.list.TypeSafeReferencePropertyBeanList;\n+import de.dlr.sc.virsat.model.concept.types.category.IBeanCategoryAssignment;\n+import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyReference;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.Category;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.ComposedProperty;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ArrayInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ReferencePropertyInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryAssignmentHelper;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.dvlm.concepts.ConceptsFactory;\n+\n+public class TypeSafeReferencePropertyBeanListTest {\n+\n+\tprivate ComposedProperty testProperty;\n+\tprivate BeanPropertyReference<IBeanCategoryAssignment> bean;\n+\tprivate ReferencePropertyInstance rpi;\n+\tprivate TypeSafeReferencePropertyBeanList<IBeanCategoryAssignment> beanList;\n+\tprivate static final String PROPERTY_NAME = \"testProperty\";\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tConcept testConcept = ConceptsFactory.eINSTANCE.createConcept();\n+\t\tCategory testCategory = CategoriesFactory.eINSTANCE.createCategory();\n+\t\ttestProperty = PropertydefinitionsFactory.eINSTANCE.createComposedProperty();\n+\t\ttestProperty.setName(PROPERTY_NAME);\n+\t\ttestProperty.setArrayModifier(PropertydefinitionsFactory.eINSTANCE.createDynamicArrayModifier());\n+\t\t\n+\t\ttestConcept.getCategories().add(testCategory);\n+\t\ttestCategory.getProperties().add(testProperty);\n+\t\t\n+\t\tCategoryAssignment testCA = CategoriesFactory.eINSTANCE.createCategoryAssignment();", "originalCommit": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "be5f8c2775b6c94797ba911e9b8460115f6cede6", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/be5f8c2775b6c94797ba911e9b8460115f6cede6", "message": "Changes due to review - (Task #663)\n\n- Renamed declareSafeAccessArrayMethodBean to\ndeclareSafeAccessArrayBeanMethod\n- In TypeSafeArrayInstanceList remove white spaces and add documentation\n- Shorter test setup using caInstantiator\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed", "committedDate": "2020-06-29T08:11:59Z", "type": "commit"}]}