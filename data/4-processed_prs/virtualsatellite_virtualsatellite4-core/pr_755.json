{"pr_number": 755, "pr_title": "Extended functionality to support connection colors - (Task #750)", "pr_createdAt": "2020-10-06T10:30:26Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/755", "timeline": [{"oid": "5521da4039d970280638a9a37e5faee72205ee51", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5521da4039d970280638a9a37e5faee72205ee51", "message": "Extended functionality to support connection colors - (Task #750)\n\n- Extended the VirSatChangeColorFeature to support changing the color of\nconnections\n- Minor refactoring in the getCustomFeatures method of interface\ndiagrams to enable the generic features such as changing color and\nopening editors as much as possible\n\n---\nTask #750: Support color change of Interfaces / Connections", "committedDate": "2020-10-06T10:23:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3MDk5OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/755#discussion_r500370999", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate void changeColorGenericPictorgramElement(PictogramElement pe, Color color) {\n          \n          \n            \n            \tprivate void changeColorGenericPictogramElement(PictogramElement pe, Color color) {\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\nGuess this change will require some further refactoring...", "author": "franzTobiasDLR", "createdAt": "2020-10-06T15:07:54Z", "path": "de.dlr.sc.virsat.graphiti.ui/src/de/dlr/sc/virsat/graphiti/ui/diagram/feature/VirSatChangeColorFeature.java", "diffHunk": "@@ -65,22 +69,53 @@ public void execute(ICustomContext context) {\n \t\ts.setLocation(context.getX(), context.getY());\r\n \t\tColorDialog colorDialog = new ColorDialog(s);\r\n \t\tRGB rgbColor = colorDialog.open();\r\n-\t\tif (colorDialog != null && rgbColor != null) {\r\n-\t\t\tIColorConstant color =\r\n+\t\tif (rgbColor != null) {\r\n+\t\t\tIColorConstant colorConstant =\r\n \t\t\t\t\tnew ColorConstant(rgbColor.red, rgbColor.green, rgbColor.blue);\r\n+\t\t\tColor color = manageColor(colorConstant);\r\n \t\t\tPictogramElement[] pes = context.getPictogramElements();\r\n \t\t\tif (pes != null && pes.length == 1) {\r\n \t\t\t\tfor (PictogramElement pe : pes) {\r\n-\t\t\t\t\tGraphicsAlgorithm ga = pe.getGraphicsAlgorithm();\r\n-\t\t\t\t\tga.setBackground(manageColor(color));\r\n-\t\t\t\t\tfor (GraphicsAlgorithm childGa : ga.getGraphicsAlgorithmChildren()) {\r\n-\t\t\t\t\t\tif (childGa instanceof RoundedRectangle || childGa instanceof Rectangle) {\r\n-\t\t\t\t\t\t\tchildGa.setBackground(manageColor(color));\r\n-\t\t\t\t\t\t}\r\n+\t\t\t\t\tif (pe instanceof Connection) {\r\n+\t\t\t\t\t\tchangeColorConnection((Connection) pe, color);\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tchangeColorGenericPictorgramElement(pe, color);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\t\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * Changes the color of a generic pictorgram element\r\n+\t * @param pe the pictogram element\r\n+\t * @param color the target color\r\n+\t */\r\n+\tprivate void changeColorGenericPictorgramElement(PictogramElement pe, Color color) {\r", "originalCommit": "5521da4039d970280638a9a37e5faee72205ee51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUwOTA4OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/755#discussion_r501509089", "bodyText": "I now also changed it to changeGenericPictogramElementColor to make it fit with the other suggestion.", "author": "SaMuellerDLR", "createdAt": "2020-10-08T07:38:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3MDk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM3MzE4OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/755#discussion_r500373188", "bodyText": "Wouldn't changeConnectionColor(...) be more intiutive?", "author": "franzTobiasDLR", "createdAt": "2020-10-06T15:10:05Z", "path": "de.dlr.sc.virsat.graphiti.ui/src/de/dlr/sc/virsat/graphiti/ui/diagram/feature/VirSatChangeColorFeature.java", "diffHunk": "@@ -65,22 +69,53 @@ public void execute(ICustomContext context) {\n \t\ts.setLocation(context.getX(), context.getY());\r\n \t\tColorDialog colorDialog = new ColorDialog(s);\r\n \t\tRGB rgbColor = colorDialog.open();\r\n-\t\tif (colorDialog != null && rgbColor != null) {\r\n-\t\t\tIColorConstant color =\r\n+\t\tif (rgbColor != null) {\r\n+\t\t\tIColorConstant colorConstant =\r\n \t\t\t\t\tnew ColorConstant(rgbColor.red, rgbColor.green, rgbColor.blue);\r\n+\t\t\tColor color = manageColor(colorConstant);\r\n \t\t\tPictogramElement[] pes = context.getPictogramElements();\r\n \t\t\tif (pes != null && pes.length == 1) {\r\n \t\t\t\tfor (PictogramElement pe : pes) {\r\n-\t\t\t\t\tGraphicsAlgorithm ga = pe.getGraphicsAlgorithm();\r\n-\t\t\t\t\tga.setBackground(manageColor(color));\r\n-\t\t\t\t\tfor (GraphicsAlgorithm childGa : ga.getGraphicsAlgorithmChildren()) {\r\n-\t\t\t\t\t\tif (childGa instanceof RoundedRectangle || childGa instanceof Rectangle) {\r\n-\t\t\t\t\t\t\tchildGa.setBackground(manageColor(color));\r\n-\t\t\t\t\t\t}\r\n+\t\t\t\t\tif (pe instanceof Connection) {\r\n+\t\t\t\t\t\tchangeColorConnection((Connection) pe, color);\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tchangeColorGenericPictorgramElement(pe, color);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\t\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * Changes the color of a generic pictorgram element\r\n+\t * @param pe the pictogram element\r\n+\t * @param color the target color\r\n+\t */\r\n+\tprivate void changeColorGenericPictorgramElement(PictogramElement pe, Color color) {\r\n+\t\tGraphicsAlgorithm ga = pe.getGraphicsAlgorithm();\r\n+\t\tga.setBackground(color);\r\n+\t\tfor (GraphicsAlgorithm childGa : ga.getGraphicsAlgorithmChildren()) {\r\n+\t\t\tif (childGa instanceof RoundedRectangle || childGa instanceof Rectangle) {\r\n+\t\t\t\tchildGa.setBackground(color);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Changes the color of a connection\r\n+\t * @param connection the connection\r\n+\t * @param color the target color\r\n+\t */\r\n+\tprivate void changeColorConnection(Connection connection, Color color) {\r", "originalCommit": "5521da4039d970280638a9a37e5faee72205ee51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyMjg4OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/755#discussion_r500422888", "bodyText": "In the previous code we returned super features as a fallback, but now we don't. Does it make any difference?", "author": "andriikovalov-dlr", "createdAt": "2020-10-06T16:09:42Z", "path": "de.dlr.sc.virsat.model.extension.funcelectrical.ui/src/de/dlr/sc/virsat/model/extension/funcelectrical/ui/diagram/features/InterfaceDiagramFeatureProvider.java", "diffHunk": "@@ -230,18 +234,22 @@ public IMoveShapeFeature getMoveShapeFeature(IMoveShapeContext context) {\n \t\r\n \t@Override\r\n \tpublic ICustomFeature[] getCustomFeatures(ICustomContext context) {\r\n-\t    \r\n \t    PictogramElement[] pictogramElements = context.getPictogramElements();\r\n \t\tObject object = getBusinessObjectForPictogramElement(pictogramElements[0]);\r\n \t\t\r\n-\t\tif (object instanceof ABeanStructuralElementInstance) {\r\n-\t\t\treturn new ICustomFeature[] {  new VirSatChangeColorFeature(this)};\r\n-\t\t}\r\n+\t\tList<ICustomFeature> customFeatures = new ArrayList<>();\r\n \t\t\r\n \t\tif (object instanceof InterfaceEnd) {\r\n-\t\t\treturn new ICustomFeature[] { new VirsatCategoryAssignmentOpenEditorFeature(this), new InterfaceEndChangeColorFeature(this)};\r\n+\t\t\tcustomFeatures.add(new InterfaceEndChangeColorFeature(this));\r\n+\t\t} else {\r\n+\t\t\tcustomFeatures.add(new VirSatChangeColorFeature(this));\r\n \t\t}\r\n-\t\treturn super.getCustomFeatures(context);\r\n+\t\t\r\n+\t\tif (object instanceof IBeanCategoryAssignment) {\r\n+\t\t\tcustomFeatures.add(new VirsatCategoryAssignmentOpenEditorFeature(this));\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn customFeatures.toArray(new ICustomFeature[0]);\r", "originalCommit": "5521da4039d970280638a9a37e5faee72205ee51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMTIxMw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/755#discussion_r501511213", "bodyText": "In didnt have any effect right now, but I think it could lead to issues down the road, if somebody were to add a custom feature in the base virsat feature provider.\nI changed it to also add all custom features from the parent class.", "author": "SaMuellerDLR", "createdAt": "2020-10-08T07:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyMjg4OA=="}], "type": "inlineReview"}, {"oid": "22b011720e4de5297eefba27c69407b49a65583b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/22b011720e4de5297eefba27c69407b49a65583b", "message": "Improved method naming - (Task #750)\n\n\n---\nTask #750: Support color change of Interfaces / Connections", "committedDate": "2020-10-08T07:37:56Z", "type": "commit"}, {"oid": "3e38b19bf8cf2c9ce14e41d8901840b4f4869344", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3e38b19bf8cf2c9ce14e41d8901840b4f4869344", "message": "Adding custom features of parent feature provider - (Task #750)\n\n- Adding custom features of parent feature provider into the list of\ncustom features of interface diagrams\n\n---\nTask #750: Support color change of Interfaces / Connections", "committedDate": "2020-10-08T07:41:20Z", "type": "commit"}]}