{"pr_number": 4479, "pr_title": "JENKINS-61202 Make job configuration pages read-only when accessing them with the Extended Read permission", "pr_createdAt": "2020-02-06T21:53:29Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4479", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNDE2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376104160", "bodyText": "added a nil check so it doesn't fail if the button isn't present", "author": "timja", "createdAt": "2020-02-06T21:55:43Z", "path": "core/src/main/resources/lib/form/hetero-list/hetero-list.js", "diffHunk": "@@ -10,128 +10,139 @@ Behaviour.specify(\"DIV.hetero-list-container\", 'hetero-list', -100, function(e)\n         var menu = document.createElement(\"SELECT\");\n         var btns = findElementsBySelector(e,\"INPUT.hetero-list-add\"),\n             btn = btns[btns.length-1]; // In case nested content also uses hetero-list\n-        YAHOO.util.Dom.insertAfter(menu,btn);\n-\n-        var prototypes = $(e.lastChild);\n-        while(!prototypes.hasClassName(\"prototypes\"))\n-            prototypes = prototypes.previous();\n-        var insertionPoint = prototypes.previous();    // this is where the new item is inserted.\n-\n-        // extract templates\n-        var templates = []; var i=0;\n-        $(prototypes).childElements().each(function (n) {\n-            var name = n.getAttribute(\"name\");\n-            var tooltip = n.getAttribute(\"tooltip\");\n-            var descriptorId = n.getAttribute(\"descriptorId\");\n-            menu.options[i] = new Option(n.getAttribute(\"title\"),\"\"+i);\n-            templates.push({html:n.innerHTML, name:name, tooltip:tooltip,descriptorId:descriptorId});\n-            i++;\n-        });\n-        Element.remove(prototypes);\n-\n-        var withDragDrop = initContainerDD(e);\n-\n-        var menuAlign = (btn.getAttribute(\"menualign\")||\"tl-bl\");\n-\n-        var menuButton = new YAHOO.widget.Button(btn, { type: \"menu\", menu: menu, menualignment: menuAlign.split(\"-\"), menuminscrollheight: 250 });\n-        $(menuButton._button).addClassName(btn.className);    // copy class names\n-        $(menuButton._button).setAttribute(\"suffix\",btn.getAttribute(\"suffix\"));\n-        menuButton.getMenu().clickEvent.subscribe(function(type,args,value) {\n-            var item = args[1];\n-            if (item.cfg.getProperty(\"disabled\"))   return;\n-            var t = templates[parseInt(item.value)];\n-\n-            var nc = document.createElement(\"div\");\n-            nc.className = \"repeated-chunk\";\n-            nc.setAttribute(\"name\",t.name);\n-            nc.setAttribute(\"descriptorId\",t.descriptorId);\n-            nc.innerHTML = t.html;\n-            $(nc).setOpacity(0);\n-\n-            var scroll = document.body.scrollTop;\n-\n-            renderOnDemand(findElementsBySelector(nc,\"TR.config-page\")[0],function() {\n-                function findInsertionPoint() {\n-                    // given the element to be inserted 'prospect',\n-                    // and the array of existing items 'current',\n-                    // and preferred ordering function, return the position in the array\n-                    // the prospect should be inserted.\n-                    // (for example 0 if it should be the first item)\n-                    function findBestPosition(prospect,current,order) {\n-                        function desirability(pos) {\n-                            var count=0;\n-                            for (var i=0; i<current.length; i++) {\n-                                if ((i<pos) == (order(current[i])<=order(prospect)))\n-                                    count++;\n+        if (btn) {", "originalCommit": "48bcf762a8281737a87bbaac01b0fbf582ca0897", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NjEzNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376276135", "bodyText": "It seems that everything's nested within this clause. I'd suggest to just return if the button is null to keep the function flat.", "author": "fqueiruga", "createdAt": "2020-02-07T08:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwNDE2MA=="}], "type": "inlineReview"}, {"oid": "8653b6ea9db218603e0f3f5d62523ddd00ec0e7c", "url": "https://github.com/jenkinsci/jenkins/commit/8653b6ea9db218603e0f3f5d62523ddd00ec0e7c", "message": "Read-only extended read view", "committedDate": "2020-02-06T21:56:14Z", "type": "commit"}, {"oid": "8653b6ea9db218603e0f3f5d62523ddd00ec0e7c", "url": "https://github.com/jenkinsci/jenkins/commit/8653b6ea9db218603e0f3f5d62523ddd00ec0e7c", "message": "Read-only extended read view", "committedDate": "2020-02-06T21:56:14Z", "type": "forcePushed"}, {"oid": "c563a0d7ea90e8a3c2726f7baf6691e379c32b3a", "url": "https://github.com/jenkinsci/jenkins/commit/c563a0d7ea90e8a3c2726f7baf6691e379c32b3a", "message": "Namespace css, add selector for when read-only\n\nRemove select changes", "committedDate": "2020-02-07T07:44:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MDM4MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376270381", "bodyText": "Can you add a comment to this block to explain its intent?", "author": "fqueiruga", "createdAt": "2020-02-07T08:39:22Z", "path": "core/src/main/resources/lib/form/hetero-list/hetero-list.js", "diffHunk": "@@ -10,128 +10,139 @@ Behaviour.specify(\"DIV.hetero-list-container\", 'hetero-list', -100, function(e)\n         var menu = document.createElement(\"SELECT\");\n         var btns = findElementsBySelector(e,\"INPUT.hetero-list-add\"),\n             btn = btns[btns.length-1]; // In case nested content also uses hetero-list\n-        YAHOO.util.Dom.insertAfter(menu,btn);\n-\n-        var prototypes = $(e.lastChild);\n-        while(!prototypes.hasClassName(\"prototypes\"))\n-            prototypes = prototypes.previous();\n-        var insertionPoint = prototypes.previous();    // this is where the new item is inserted.\n-\n-        // extract templates\n-        var templates = []; var i=0;\n-        $(prototypes).childElements().each(function (n) {\n-            var name = n.getAttribute(\"name\");\n-            var tooltip = n.getAttribute(\"tooltip\");\n-            var descriptorId = n.getAttribute(\"descriptorId\");\n-            menu.options[i] = new Option(n.getAttribute(\"title\"),\"\"+i);\n-            templates.push({html:n.innerHTML, name:name, tooltip:tooltip,descriptorId:descriptorId});\n-            i++;\n-        });\n-        Element.remove(prototypes);\n-\n-        var withDragDrop = initContainerDD(e);\n-\n-        var menuAlign = (btn.getAttribute(\"menualign\")||\"tl-bl\");\n-\n-        var menuButton = new YAHOO.widget.Button(btn, { type: \"menu\", menu: menu, menualignment: menuAlign.split(\"-\"), menuminscrollheight: 250 });\n-        $(menuButton._button).addClassName(btn.className);    // copy class names\n-        $(menuButton._button).setAttribute(\"suffix\",btn.getAttribute(\"suffix\"));\n-        menuButton.getMenu().clickEvent.subscribe(function(type,args,value) {\n-            var item = args[1];\n-            if (item.cfg.getProperty(\"disabled\"))   return;\n-            var t = templates[parseInt(item.value)];\n-\n-            var nc = document.createElement(\"div\");\n-            nc.className = \"repeated-chunk\";\n-            nc.setAttribute(\"name\",t.name);\n-            nc.setAttribute(\"descriptorId\",t.descriptorId);\n-            nc.innerHTML = t.html;\n-            $(nc).setOpacity(0);\n-\n-            var scroll = document.body.scrollTop;\n-\n-            renderOnDemand(findElementsBySelector(nc,\"TR.config-page\")[0],function() {\n-                function findInsertionPoint() {\n-                    // given the element to be inserted 'prospect',\n-                    // and the array of existing items 'current',\n-                    // and preferred ordering function, return the position in the array\n-                    // the prospect should be inserted.\n-                    // (for example 0 if it should be the first item)\n-                    function findBestPosition(prospect,current,order) {\n-                        function desirability(pos) {\n-                            var count=0;\n-                            for (var i=0; i<current.length; i++) {\n-                                if ((i<pos) == (order(current[i])<=order(prospect)))\n-                                    count++;\n+        if (btn) {\n+            YAHOO.util.Dom.insertAfter(menu, btn);\n+\n+            var prototypes = $(e.lastChild);\n+            while (!prototypes.hasClassName(\"prototypes\"))\n+                prototypes = prototypes.previous();\n+            var insertionPoint = prototypes.previous();    // this is where the new item is inserted.\n+\n+            // extract templates\n+            var templates = [];\n+            var i = 0;\n+            $(prototypes).childElements().each(function (n) {\n+                var name = n.getAttribute(\"name\");\n+                var tooltip = n.getAttribute(\"tooltip\");\n+                var descriptorId = n.getAttribute(\"descriptorId\");\n+                menu.options[i] = new Option(n.getAttribute(\"title\"), \"\" + i);\n+                templates.push({html: n.innerHTML, name: name, tooltip: tooltip, descriptorId: descriptorId});\n+                i++;\n+            });\n+            Element.remove(prototypes);\n+\n+            var withDragDrop = initContainerDD(e);\n+\n+            var menuAlign = (btn.getAttribute(\"menualign\") || \"tl-bl\");\n+\n+            var menuButton = new YAHOO.widget.Button(btn, {\n+                type: \"menu\",\n+                menu: menu,\n+                menualignment: menuAlign.split(\"-\"),\n+                menuminscrollheight: 250\n+            });\n+            $(menuButton._button).addClassName(btn.className);    // copy class names\n+            $(menuButton._button).setAttribute(\"suffix\", btn.getAttribute(\"suffix\"));\n+            menuButton.getMenu().clickEvent.subscribe(function (type, args, value) {\n+                var item = args[1];\n+                if (item.cfg.getProperty(\"disabled\")) return;\n+                var t = templates[parseInt(item.value)];\n+\n+                var nc = document.createElement(\"div\");\n+                nc.className = \"repeated-chunk\";\n+                nc.setAttribute(\"name\", t.name);\n+                nc.setAttribute(\"descriptorId\", t.descriptorId);\n+                nc.innerHTML = t.html;\n+                $(nc).setOpacity(0);\n+\n+                var scroll = document.body.scrollTop;\n+\n+                renderOnDemand(findElementsBySelector(nc, \"TR.config-page\")[0], function () {\n+                    function findInsertionPoint() {\n+                        // given the element to be inserted 'prospect',\n+                        // and the array of existing items 'current',\n+                        // and preferred ordering function, return the position in the array\n+                        // the prospect should be inserted.\n+                        // (for example 0 if it should be the first item)\n+                        function findBestPosition(prospect, current, order) {\n+                            function desirability(pos) {\n+                                var count = 0;\n+                                for (var i = 0; i < current.length; i++) {\n+                                    if ((i < pos) == (order(current[i]) <= order(prospect)))\n+                                        count++;\n+                                }\n+                                return count;\n                             }\n-                            return count;\n-                        }\n \n-                        var bestScore = -1;\n-                        var bestPos = 0;\n-                        for (var i=0; i<=current.length; i++) {\n-                            var d = desirability(i);\n-                            if (bestScore<=d) {// prefer to insert them toward the end\n-                                bestScore = d;\n-                                bestPos = i;\n+                            var bestScore = -1;\n+                            var bestPos = 0;\n+                            for (var i = 0; i <= current.length; i++) {\n+                                var d = desirability(i);\n+                                if (bestScore <= d) {// prefer to insert them toward the end\n+                                    bestScore = d;\n+                                    bestPos = i;\n+                                }\n                             }\n+                            return bestPos;\n                         }\n-                        return bestPos;\n-                    }\n \n-                    var current = e.childElements().findAll(function(e) {return e.match(\"DIV.repeated-chunk\")});\n+                        var current = e.childElements().findAll(function (e) {\n+                            return e.match(\"DIV.repeated-chunk\")\n+                        });\n+\n+                        function o(did) {\n+                            if (Object.isElement(did))\n+                                did = did.getAttribute(\"descriptorId\");\n+                            for (var i = 0; i < templates.length; i++)\n+                                if (templates[i].descriptorId == did)\n+                                    return i;\n+                            return 0; // can't happen\n+                        }\n \n-                    function o(did) {\n-                        if (Object.isElement(did))\n-                            did = did.getAttribute(\"descriptorId\");\n-                        for (var i=0; i<templates.length; i++)\n-                            if (templates[i].descriptorId==did)\n-                                return i;\n-                        return 0; // can't happen\n+                        var bestPos = findBestPosition(t.descriptorId, current, o);\n+                        if (bestPos < current.length)\n+                            return current[bestPos];\n+                        else\n+                            return insertionPoint;\n                     }\n \n-                    var bestPos = findBestPosition(t.descriptorId, current, o);\n-                    if (bestPos<current.length)\n-                        return current[bestPos];\n-                    else\n-                        return insertionPoint;\n-                }\n-                (e.hasClassName(\"honor-order\") ? findInsertionPoint() : insertionPoint).insert({before:nc});\n-\n-                if(withDragDrop)    prepareDD(nc);\n+                    (e.hasClassName(\"honor-order\") ? findInsertionPoint() : insertionPoint).insert({before: nc});\n \n-                new YAHOO.util.Anim(nc, {\n-                    opacity: { to:1 }\n-                }, 0.2, YAHOO.util.Easing.easeIn).animate();\n+                    if (withDragDrop) prepareDD(nc);\n \n-                Behaviour.applySubtree(nc,true);\n-                ensureVisible(nc);\n-                layoutUpdateCallback.call();\n-            },true);\n-        });\n-\n-        menuButton.getMenu().renderEvent.subscribe(function() {\n-            // hook up tooltip for menu items\n-            var items = menuButton.getMenu().getItems();\n-            for(i=0; i<items.length; i++) {\n-                var t = templates[i].tooltip;\n-                if(t!=null)\n-                    applyTooltip(items[i].element,t);\n-            }\n-        });\n+                    new YAHOO.util.Anim(nc, {\n+                        opacity: {to: 1}\n+                    }, 0.2, YAHOO.util.Easing.easeIn).animate();\n \n-        if (e.hasClassName(\"one-each\")) {\n-            // does this container already has a configured instance of the specified descriptor ID?\n-            function has(id) {\n-                return Prototype.Selector.find(e.childElements(),\"DIV.repeated-chunk[descriptorId=\\\"\"+id+\"\\\"]\")!=null;\n-            }\n+                    Behaviour.applySubtree(nc, true);", "originalCommit": "c563a0d7ea90e8a3c2726f7baf6691e379c32b3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NTM5MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376275391", "bodyText": "I have no idea it's intent, I added an if block to safe guard against an undefined value, the rest of the changes are all indentation, you can see the changes without white space related changes showing my using this url:\nhttps://github.com/jenkinsci/jenkins/pull/4479/files?utf8=%E2%9C%93&diff=split&w=1", "author": "timja", "createdAt": "2020-02-07T08:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MDM4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MTMyMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376271322", "bodyText": "Would it make sense to extract this <j:choose> to its own jelly template?", "author": "fqueiruga", "createdAt": "2020-02-07T08:41:19Z", "path": "core/src/main/resources/lib/form/number.jelly", "diffHunk": "@@ -76,12 +76,25 @@ THE SOFTWARE.\n   <j:set var=\"name\" value=\"${attrs.name ?: '_.'+attrs.field}\"/>\n   <j:set var=\"default\" value=\"${attrs.default ?: ''}\"/>\n   <j:set var=\"value\" value=\"${attrs.value ?: instance[attrs.field] ?: default}\"/>\n-  <m:input xmlns:m=\"jelly:hudson.util.jelly.MorphTagLibrary\"\n-         class=\"setting-input ${attrs.checkUrl!=null?'validated':''} ${attrs.clazz}\"\n-         name=\"${name}\"\n-         value=\"${value}\"\n-         type=\"number\"\n-         ATTRIBUTES=\"${attrs}\" EXCEPT=\"field clazz\" />\n+\n+  <j:choose>\n+    <j:when test=\"${displayOnlyMode}\">\n+      <j:choose>\n+        <j:when test=\"${empty(value)}\">\n+          <span class=\"jenkins-not-applicable\">N/A</span>", "originalCommit": "c563a0d7ea90e8a3c2726f7baf6691e379c32b3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MTk1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376281952", "bodyText": "Will take a look at this later on, fixed the other comments up", "author": "timja", "createdAt": "2020-02-07T09:07:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NTcxMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r379895710", "bodyText": "Done, in all except password as it has a different default text rendering handling", "author": "timja", "createdAt": "2020-02-16T11:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MTMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MjU2OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376272568", "bodyText": "Any chance you could format this putting attributes in multiple lines, like on other inputs on this PR?\nI'm also in favour of adding spacing within ternary operators. But maybe that's too much for this PR.", "author": "fqueiruga", "createdAt": "2020-02-07T08:44:33Z", "path": "core/src/main/resources/lib/form/radioBlock.jelly", "diffHunk": "@@ -58,7 +58,7 @@ THE SOFTWARE.\n \t  <td colspan=\"3\">\n       <label>\n \t      <input type=\"radio\" name=\"${name}\" value=\"${value}\"\n-             class=\"radio-block-control block-control\" checked=\"${checked?'true':null}\" />\n+             class=\"radio-block-control block-control\" checked=\"${checked?'true':null}\" disabled=\"${displayOnlyMode?'true':null}\" />", "originalCommit": "c563a0d7ea90e8a3c2726f7baf6691e379c32b3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NTczMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376275731", "bodyText": "I went for minimal diff where possible, (although my IDE has fought me to a degree in some files)\nhappy to format this", "author": "timja", "createdAt": "2020-02-07T08:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MjU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MzUwMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376273500", "bodyText": "Could Element.hasClassName(c,\"negative\")) || Element.hasClassName(c, \"display-only-checked\" be extracted into a variable? I think this conditional complicates the xor function a bit.", "author": "fqueiruga", "createdAt": "2020-02-07T08:46:39Z", "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -1382,7 +1382,7 @@ function updateOptionalBlock(c,scroll) {\n     while (!vg.hasClassName(\"rowvg-start\"))\n         vg = vg.next();\n \n-    var checked = xor(c.checked,Element.hasClassName(c,\"negative\"));\n+    var checked = xor(c.checked,Element.hasClassName(c,\"negative\")) || Element.hasClassName(c, \"display-only-checked\");", "originalCommit": "c563a0d7ea90e8a3c2726f7baf6691e379c32b3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NjI3Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r376276272", "bodyText": "this isn't actually in use anymore, I need to revert it.\nI was trying to not use the native controls and use icon's / images so that users don't get confused due to disabled controls not being that obvious.\nBut the javascript wasn't the easiest to change and I didn't want to break anything so I went back to using the native controls but forgot to revert this change", "author": "timja", "createdAt": "2020-02-07T08:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MzUwMA=="}], "type": "inlineReview"}, {"oid": "84ed3d6e6c559399961c7744c88dc4f49fbee41c", "url": "https://github.com/jenkinsci/jenkins/commit/84ed3d6e6c559399961c7744c88dc4f49fbee41c", "message": "Revert change that is no longer in use", "committedDate": "2020-02-07T09:05:06Z", "type": "commit"}, {"oid": "53f53a69c9d901682d2e2486a7da0b6edee76aa4", "url": "https://github.com/jenkinsci/jenkins/commit/53f53a69c9d901682d2e2486a7da0b6edee76aa4", "message": "Format radioBlock", "committedDate": "2020-02-07T09:06:10Z", "type": "commit"}, {"oid": "89b00230802caed6ff9e08c11e9487bc78100925", "url": "https://github.com/jenkinsci/jenkins/commit/89b00230802caed6ff9e08c11e9487bc78100925", "message": "Disable select", "committedDate": "2020-02-07T21:18:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MTg1OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r379871858", "bodyText": "Most of the changes in this file are whitespace only.", "author": "daniel-beck", "createdAt": "2020-02-16T03:16:22Z", "path": "war/src/main/webapp/css/style.css", "diffHunk": "@@ -1,18 +1,18 @@\n /*\n  * The MIT License\n- * \n+ *", "originalCommit": "89b00230802caed6ff9e08c11e9487bc78100925", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MTg2Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r379871866", "bodyText": "This seems a weird choice of name given that both Extended Read and System Read use the term Read. I'm also more familiar with \"read only\" as a term.\nWhy was this term chosen?", "author": "daniel-beck", "createdAt": "2020-02-16T03:16:26Z", "path": "core/src/main/resources/hudson/model/Job/configure.jelly", "diffHunk": "@@ -30,6 +30,15 @@ THE SOFTWARE.\n \n   <l:layout norefresh=\"true\" type=\"one-column\" permission=\"${it.EXTENDED_READ}\" title=\"${%Config(it.displayName)}\">\n \n+    <j:choose>\n+      <j:when test=\"${app.hasPermission(it.CONFIGURE)}\">\n+        <j:set var=\"displayOnlyMode\" value=\"false\" />\n+      </j:when>\n+      <j:otherwise>\n+        <j:set var=\"displayOnlyMode\" value=\"true\" />", "originalCommit": "89b00230802caed6ff9e08c11e9487bc78100925", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg4MjIwNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r379882206", "bodyText": "Planning to rename it to read, naming is hard.", "author": "timja", "createdAt": "2020-02-16T07:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MTg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MTg5NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r379871895", "bodyText": "Really unnecessary whitespace change, cannot even be hidden through ?w=1 on GitHub.", "author": "daniel-beck", "createdAt": "2020-02-16T03:17:15Z", "path": "core/src/main/resources/lib/form/password.jelly", "diffHunk": "@@ -60,74 +60,88 @@ THE SOFTWARE.\n       If any other value is specified then requests will use GET.\n     </st:attribute>\n   </st:documentation>\n-  <f:prepareDatabinding />\n   <j:choose>\n-    <j:when test=\"${h.useHidingPasswordFields()}\">\n-      <j:set var=\"value\" value=\"${h.getPasswordValue(attrs.value ?: instance[attrs.field])}\"/>\n+    <j:when test=\"${displayOnlyMode}\">\n       <j:choose>\n-        <j:when test=\"${ value != null }\">\n-          <st:adjunct includes=\"lib.form.password.password\"/>\n-          <div class=\"hidden-password\">\n-            <m:input xmlns:m=\"jelly:hudson.util.jelly.MorphTagLibrary\"\n-                     class=\"complex-password-field hidden-password-field setting-input ${attrs.checkUrl!=null?'validated ':''}${attrs.clazz}\"\n-                     name=\"${attrs.name ?: '_.'+attrs.field}\"\n-                     value=\"${value}\"\n-                     type=\"hidden\"\n-                     checkMethod=\"post\"\n-                     ATTRIBUTES=\"${attrs}\" EXCEPT=\"field clazz value\" />\n-            <div class=\"hidden-password-placeholder\">\n-              <div class=\"hidden-password-legend\">\n-                <svg width=\"20px\" height=\"25px\" viewBox=\"0 0 25 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n-                  <!--\n-                      Based on Material Design.\n+        <j:when test=\"${value}\"><span class=\"jenkins-readonly\">****</span></j:when>\n+        <j:otherwise>\n+          <span class=\"jenkins-not-applicable\">N/A</span>\n+        </j:otherwise>\n+      </j:choose>\n+    </j:when>\n+    <j:otherwise>\n+      <f:prepareDatabinding/>\n+      <j:choose>\n+        <j:when test=\"${h.useHidingPasswordFields()}\">\n+          <j:set var=\"value\" value=\"${h.getPasswordValue(attrs.value ?: instance[attrs.field])}\"/>\n+          <j:choose>\n+            <j:when test=\"${ value != null }\">\n+              <st:adjunct includes=\"lib.form.password.password\"/>\n+              <div class=\"hidden-password\">\n+                <m:input xmlns:m=\"jelly:hudson.util.jelly.MorphTagLibrary\"\n+                         class=\"complex-password-field hidden-password-field setting-input ${attrs.checkUrl!=null?'validated ':''}${attrs.clazz}\"\n+                         name=\"${attrs.name ?: '_.'+attrs.field}\"\n+                         value=\"${value}\"\n+                         type=\"hidden\"\n+                         checkMethod=\"post\"\n+                         ATTRIBUTES=\"${attrs}\" EXCEPT=\"field clazz value\"/>\n+                <div class=\"hidden-password-placeholder\">\n+                  <div class=\"hidden-password-legend\">\n+                    <svg width=\"20px\" height=\"25px\" viewBox=\"0 0 25 32\" version=\"1.1\"\n+                         xmlns=\"http://www.w3.org/2000/svg\">\n+                      <!--\n+                          Based on Material Design.\n \n-                      Licensed under the Apache License, Version 2.0 (the \"License\");\n-                      you may not use this file except in compliance with the License.\n-                      You may obtain a copy of the License at\n+                          Licensed under the Apache License, Version 2.0 (the \"License\");\n+                          you may not use this file except in compliance with the License.\n+                          You may obtain a copy of the License at\n \n-                          http://www.apache.org/licenses/LICENSE-2.0\n+                              http://www.apache.org/licenses/LICENSE-2.0\n \n-                      Unless required by applicable law or agreed to in writing, software\n-                      distributed under the License is distributed on an \"AS IS\" BASIS,\n-                      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-                      See the License for the specific language governing permissions and\n-                      limitations under the License.\n-                  -->\n-                  <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n-                    <g transform=\"translate(-504.000000, -199.000000)\" fill=\"#788594\">\n-                      <path d=\"M520.914667,209.666667 L511.466667,209.666667 L511.466667,206.619333 C511.466667,204.014 513.584667,201.895333 516.190667,201.895333 C518.796667,201.895333 520.914667,204.014 520.914667,206.619333 L520.914667,209.666667 Z M516.190667,223.381333 C514.514,223.381333 513.143333,222.01 513.143333,220.333333 C513.143333,218.657333 514.514,217.286 516.190667,217.286 C517.867333,217.286 519.238,218.657333 519.238,220.333333 C519.238,222.01 517.867333,223.381333 516.190667,223.381333 Z M516.190667,199 C511.984667,199 508.571333,202.414 508.571333,206.619333 L508.571333,209.666667 L507.048,209.666667 C505.372,209.666667 504,211.038 504,212.714667 L504,227.952667 C504,229.628667 505.372,231 507.048,231 L525.334,231 C527.01,231 528.380667,229.628667 528.380667,227.952667 L528.380667,212.714667 C528.380667,211.038 527.01,209.666667 525.334,209.666667 L523.81,209.666667 L523.81,206.619333 C523.81,202.414 520.396667,199 516.190667,199 Z\"/>\n-                    </g>\n-                  </g>\n-                </svg>\n-                <span>${%Concealed}</span>\n-              </div>\n-              <div class=\"hidden-password-update\">\n-                <input type=\"button\" class=\"hidden-password-update-btn\" value=\"${%Change Password}\"/>\n+                          Unless required by applicable law or agreed to in writing, software\n+                          distributed under the License is distributed on an \"AS IS\" BASIS,\n+                          WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+                          See the License for the specific language governing permissions and\n+                          limitations under the License.\n+                      -->\n+                      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n+                        <g transform=\"translate(-504.000000, -199.000000)\" fill=\"#788594\">\n+                          <path\n+                              d=\"M520.914667,209.666667 L511.466667,209.666667 L511.466667,206.619333 C511.466667,204.014 513.584667,201.895333 516.190667,201.895333 C518.796667,201.895333 520.914667,204.014 520.914667,206.619333 L520.914667,209.666667 Z M516.190667,223.381333 C514.514,223.381333 513.143333,222.01 513.143333,220.333333 C513.143333,218.657333 514.514,217.286 516.190667,217.286 C517.867333,217.286 519.238,218.657333 519.238,220.333333 C519.238,222.01 517.867333,223.381333 516.190667,223.381333 Z M516.190667,199 C511.984667,199 508.571333,202.414 508.571333,206.619333 L508.571333,209.666667 L507.048,209.666667 C505.372,209.666667 504,211.038 504,212.714667 L504,227.952667 C504,229.628667 505.372,231 507.048,231 L525.334,231 C527.01,231 528.380667,229.628667 528.380667,227.952667 L528.380667,212.714667 C528.380667,211.038 527.01,209.666667 525.334,209.666667 L523.81,209.666667 L523.81,206.619333 C523.81,202.414 520.396667,199 516.190667,199 Z\"/>", "originalCommit": "89b00230802caed6ff9e08c11e9487bc78100925", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MTg5Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r379871896", "bodyText": "Really unnecessary whitespace change, cannot even be hidden through ?w=1 on GitHub.", "author": "daniel-beck", "createdAt": "2020-02-16T03:17:18Z", "path": "core/src/main/resources/lib/form/password.jelly", "diffHunk": "@@ -60,74 +60,88 @@ THE SOFTWARE.\n       If any other value is specified then requests will use GET.\n     </st:attribute>\n   </st:documentation>\n-  <f:prepareDatabinding />\n   <j:choose>\n-    <j:when test=\"${h.useHidingPasswordFields()}\">\n-      <j:set var=\"value\" value=\"${h.getPasswordValue(attrs.value ?: instance[attrs.field])}\"/>\n+    <j:when test=\"${displayOnlyMode}\">\n       <j:choose>\n-        <j:when test=\"${ value != null }\">\n-          <st:adjunct includes=\"lib.form.password.password\"/>\n-          <div class=\"hidden-password\">\n-            <m:input xmlns:m=\"jelly:hudson.util.jelly.MorphTagLibrary\"\n-                     class=\"complex-password-field hidden-password-field setting-input ${attrs.checkUrl!=null?'validated ':''}${attrs.clazz}\"\n-                     name=\"${attrs.name ?: '_.'+attrs.field}\"\n-                     value=\"${value}\"\n-                     type=\"hidden\"\n-                     checkMethod=\"post\"\n-                     ATTRIBUTES=\"${attrs}\" EXCEPT=\"field clazz value\" />\n-            <div class=\"hidden-password-placeholder\">\n-              <div class=\"hidden-password-legend\">\n-                <svg width=\"20px\" height=\"25px\" viewBox=\"0 0 25 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n-                  <!--\n-                      Based on Material Design.\n+        <j:when test=\"${value}\"><span class=\"jenkins-readonly\">****</span></j:when>\n+        <j:otherwise>\n+          <span class=\"jenkins-not-applicable\">N/A</span>\n+        </j:otherwise>\n+      </j:choose>\n+    </j:when>\n+    <j:otherwise>\n+      <f:prepareDatabinding/>\n+      <j:choose>\n+        <j:when test=\"${h.useHidingPasswordFields()}\">\n+          <j:set var=\"value\" value=\"${h.getPasswordValue(attrs.value ?: instance[attrs.field])}\"/>\n+          <j:choose>\n+            <j:when test=\"${ value != null }\">\n+              <st:adjunct includes=\"lib.form.password.password\"/>\n+              <div class=\"hidden-password\">\n+                <m:input xmlns:m=\"jelly:hudson.util.jelly.MorphTagLibrary\"\n+                         class=\"complex-password-field hidden-password-field setting-input ${attrs.checkUrl!=null?'validated ':''}${attrs.clazz}\"\n+                         name=\"${attrs.name ?: '_.'+attrs.field}\"\n+                         value=\"${value}\"\n+                         type=\"hidden\"\n+                         checkMethod=\"post\"\n+                         ATTRIBUTES=\"${attrs}\" EXCEPT=\"field clazz value\"/>\n+                <div class=\"hidden-password-placeholder\">\n+                  <div class=\"hidden-password-legend\">\n+                    <svg width=\"20px\" height=\"25px\" viewBox=\"0 0 25 32\" version=\"1.1\"\n+                         xmlns=\"http://www.w3.org/2000/svg\">", "originalCommit": "89b00230802caed6ff9e08c11e9487bc78100925", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a45cc86b3c7074050184aa04616e15039fa0653e", "url": "https://github.com/jenkinsci/jenkins/commit/a45cc86b3c7074050184aa04616e15039fa0653e", "message": "Reduce diff and rename to read only", "committedDate": "2020-02-16T09:02:56Z", "type": "commit"}, {"oid": "673f5edee31a39655590fbd394bea52f0bd89835", "url": "https://github.com/jenkinsci/jenkins/commit/673f5edee31a39655590fbd394bea52f0bd89835", "message": "More whitespace revert", "committedDate": "2020-02-16T09:07:47Z", "type": "commit"}, {"oid": "d2465cb598d24f3f928357315f04027d36326bd8", "url": "https://github.com/jenkinsci/jenkins/commit/d2465cb598d24f3f928357315f04027d36326bd8", "message": "Merge branch 'master' into read-only-view-extended-read", "committedDate": "2020-02-16T09:10:48Z", "type": "commit"}, {"oid": "2a17d9cdbf00f67250aa077d7f1137dd80a3c89b", "url": "https://github.com/jenkinsci/jenkins/commit/2a17d9cdbf00f67250aa077d7f1137dd80a3c89b", "message": "Add possibleReadOnlyField to wrap content", "committedDate": "2020-02-16T11:28:31Z", "type": "commit"}, {"oid": "0dee6db6798947ea21771b1a35bcd6e847605c96", "url": "https://github.com/jenkinsci/jenkins/commit/0dee6db6798947ea21771b1a35bcd6e847605c96", "message": "Less diff", "committedDate": "2020-02-16T11:30:18Z", "type": "commit"}, {"oid": "cf4ffe764da0f1980f3241bc7912c333c030b267", "url": "https://github.com/jenkinsci/jenkins/commit/cf4ffe764da0f1980f3241bc7912c333c030b267", "message": "Fix missing tag close", "committedDate": "2020-02-16T11:31:10Z", "type": "commit"}, {"oid": "a993cbb694bf1d3f0341cbd0eb5430311848d462", "url": "https://github.com/jenkinsci/jenkins/commit/a993cbb694bf1d3f0341cbd0eb5430311848d462", "message": "New line", "committedDate": "2020-02-16T11:31:39Z", "type": "commit"}, {"oid": "f11c417d8d601f7640196e36e2564ae34cb8e470", "url": "https://github.com/jenkinsci/jenkins/commit/f11c417d8d601f7640196e36e2564ae34cb8e470", "message": "Fix another if", "committedDate": "2020-02-16T11:32:45Z", "type": "commit"}, {"oid": "5255738c9898e2d985ccfc5a555c6e1168efd43a", "url": "https://github.com/jenkinsci/jenkins/commit/5255738c9898e2d985ccfc5a555c6e1168efd43a", "message": "Change if statement to bail out early", "committedDate": "2020-02-16T11:40:06Z", "type": "commit"}, {"oid": "226afd26e13a8ed820573b8b0847bae4f149f58a", "url": "https://github.com/jenkinsci/jenkins/commit/226afd26e13a8ed820573b8b0847bae4f149f58a", "message": "Remove drag and drop re-order when read only", "committedDate": "2020-02-16T11:42:58Z", "type": "commit"}, {"oid": "b4b79a8a557c399c1a1c3c50022695bc384c644b", "url": "https://github.com/jenkinsci/jenkins/commit/b4b79a8a557c399c1a1c3c50022695bc384c644b", "message": "Merge branch 'master' into read-only-view-extended-read", "committedDate": "2020-02-22T15:48:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3NDIyNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r387574225", "bodyText": "https://issues.jenkins-ci.org/browse/JENKINS-61321 / #4541", "author": "daniel-beck", "createdAt": "2020-03-04T10:24:28Z", "path": "core/src/main/resources/hudson/model/Job/configure.jelly", "diffHunk": "@@ -30,6 +30,15 @@ THE SOFTWARE.\n \n   <l:layout norefresh=\"true\" type=\"one-column\" permission=\"${it.EXTENDED_READ}\" title=\"${%Config(it.displayName)}\">\n \n+    <j:choose>\n+      <j:when test=\"${app.hasPermission(it.CONFIGURE)}\">", "originalCommit": "b4b79a8a557c399c1a1c3c50022695bc384c644b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3NTM3Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4479#discussion_r387575376", "bodyText": "\ud83e\udd15, tested it with an admin user and read only, but not a lower privileged but still configure -.-", "author": "timja", "createdAt": "2020-03-04T10:26:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3NDIyNQ=="}], "type": "inlineReview"}]}