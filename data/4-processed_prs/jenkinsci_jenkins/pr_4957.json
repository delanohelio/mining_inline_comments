{"pr_number": 4957, "pr_title": "Omit stacktraces on ClassNotFoundException in PluginStrategy classloading", "pr_createdAt": "2020-10-02T10:33:09Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4957", "timeline": [{"oid": "0717906d4ad3ad0c40a138c8418548e1ef27b7cd", "url": "https://github.com/jenkinsci/jenkins/commit/0717906d4ad3ad0c40a138c8418548e1ef27b7cd", "message": "Omit stacktraces on ClassNotFoundException in PluginStrategy classloading", "committedDate": "2020-10-02T10:21:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDE4NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498794185", "bodyText": "I do not think we need a public API for this. Stack traces should be omitted by default, and we can leave in a system property to assist with debugging in case of unexpected ClassNotFoundExceptions.", "author": "jglick", "createdAt": "2020-10-02T12:37:29Z", "path": "core/src/main/java/hudson/ClassicPluginStrategy.java", "diffHunk": "@@ -102,6 +104,18 @@ public ClassicPluginStrategy(PluginManager pluginManager) {\n         this.pluginManager = pluginManager;\n     }\n \n+    /**\n+     * Sets whether the classloader should include stacktraces on {@link ClassNotFoundException}s.\n+     *\n+     * @param skipStacktraces {@link false} to skip stacktraces.\n+     *        The classloader injects stacktraces by default.\n+     * @since TODO\n+     */\n+    public ClassicPluginStrategy withOmitStacktracesOnClassNotFoundException(boolean skipStacktraces) {", "originalCommit": "0717906d4ad3ad0c40a138c8418548e1ef27b7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NzM5Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498797397", "bodyText": "I would prefer to have public API for Jenkinsfile Runner and a few other use-cases.\nFine to change the defaults if there is a consensus about it", "author": "oleg-nenashev", "createdAt": "2020-10-02T12:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwMzQ4OQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498803489", "bodyText": "Maybe I do not understand. Why would you need a Java API if the default is what you want anyway?", "author": "jglick", "createdAt": "2020-10-02T12:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDU4Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498794583", "bodyText": "Conventionally this would be a nonfinal static constant.", "author": "jglick", "createdAt": "2020-10-02T12:38:16Z", "path": "core/src/main/java/hudson/PluginManager.java", "diffHunk": "@@ -1213,8 +1213,13 @@ protected PluginStrategy createPluginStrategy() {\n \t\t\tLOGGER.info(\"Falling back to ClassicPluginStrategy\");\n \t\t}\n \n-\t\t// default and fallback\n-\t\treturn new ClassicPluginStrategy(this);\n+\t\t// Default and fallback strategy\n+        // The default Plugin Manager implementation does not propagate/log stacktraces for ClassNotFoundExceptions,\n+        // hence stacktraces are omitted by default for better performance.\n+        boolean omitClassNotFoundExceptionStacktraces =SystemProperties.getBoolean(\n+                ClassicPluginStrategy.class.getName() + \".omitClassNotFoundStacktraces\", true);", "originalCommit": "0717906d4ad3ad0c40a138c8418548e1ef27b7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5ODMzNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498798336", "bodyText": "There are other system properties which are resolved on-demand. Taking the specifics of Jenkinsfile Runner codebase, I would prefer to keep more deterministic initialization than static initializer", "author": "oleg-nenashev", "createdAt": "2020-10-02T12:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwMzc2Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498803766", "bodyText": "Again, why would you need to do anything at all in JFR if the default is set to omit stack traces, which it should be?", "author": "jglick", "createdAt": "2020-10-02T12:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDU4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDY5OQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498794699", "bodyText": "Ditto, no Java API needed here.", "author": "jglick", "createdAt": "2020-10-02T12:38:30Z", "path": "core/src/main/java/jenkins/util/AntClassLoader.java", "diffHunk": "@@ -568,6 +575,18 @@ public synchronized void setIsolated(boolean isolated) {\n         ignoreBase = isolated;\n     }\n \n+    /**\n+     * Sets whether the classloader should include stacktraces on {@link ClassNotFoundException}s.\n+     *\n+     * @param skipStacktraces {@link true} to skip stacktraces.\n+     *        The classloader adds stacktraces by default.\n+     * @since TODO\n+     */\n+    public AntClassLoader withOmitStacktracesOnClassNotFound(boolean skipStacktraces) {", "originalCommit": "0717906d4ad3ad0c40a138c8418548e1ef27b7cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NDg2Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r498794866", "bodyText": "should be ClassNotFoundNoStackTraceException for consistency", "author": "jglick", "createdAt": "2020-10-02T12:38:54Z", "path": "core/src/main/java/jenkins/util/java/ClassNotFoundNoStacktraceException.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.util.java;\n+\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+\n+/**\n+ * {@link ClassNotFoundException} which does not store the stacktrace on initialization.\n+ * It improves classloading performance when the stacktrace is ignored,\n+ * e.g. like in {@link hudson.ClassicPluginStrategy}.\n+ */\n+@Restricted(NoExternalUse.class)\n+public class ClassNotFoundNoStacktraceException extends ClassNotFoundException {", "originalCommit": "0717906d4ad3ad0c40a138c8418548e1ef27b7cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1de172d7c0f7afe1e3d0dac9f49e73b3273c4ae9", "url": "https://github.com/jenkinsci/jenkins/commit/1de172d7c0f7afe1e3d0dac9f49e73b3273c4ae9", "message": "Modify implementation to not fill in stacktraces by default", "committedDate": "2020-10-02T14:30:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMDQyNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r499420425", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param fillInStackTraces {@link true} to fill in stacktraces.\n          \n          \n            \n                 * @param fillInStackTraces {@code true} to fill in stacktraces.", "author": "oleg-nenashev", "createdAt": "2020-10-05T08:18:01Z", "path": "core/src/main/java/hudson/ClassicPluginStrategy.java", "diffHunk": "@@ -102,6 +104,18 @@ public ClassicPluginStrategy(PluginManager pluginManager) {\n         this.pluginManager = pluginManager;\n     }\n \n+    /**\n+     * Sets whether the classloader should include stacktraces on {@link ClassNotFoundException}s.\n+     *\n+     * @param fillInStackTraces {@link true} to fill in stacktraces.", "originalCommit": "1de172d7c0f7afe1e3d0dac9f49e73b3273c4ae9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMDU4MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4957#discussion_r499420581", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param fillInStackTraces {@link true} to fill in stacktraces.\n          \n          \n            \n                 * @param fillInStackTraces {@code true} to fill in stacktraces.", "author": "oleg-nenashev", "createdAt": "2020-10-05T08:18:19Z", "path": "core/src/main/java/jenkins/util/AntClassLoader.java", "diffHunk": "@@ -568,6 +575,18 @@ public synchronized void setIsolated(boolean isolated) {\n         ignoreBase = isolated;\n     }\n \n+    /**\n+     * Sets whether the classloader should include stacktraces on {@link ClassNotFoundException}s.\n+     *\n+     * @param fillInStackTraces {@link true} to fill in stacktraces.", "originalCommit": "1de172d7c0f7afe1e3d0dac9f49e73b3273c4ae9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ff78d3ea8c34c4454b398dd7b8581e469f602652", "url": "https://github.com/jenkinsci/jenkins/commit/ff78d3ea8c34c4454b398dd7b8581e469f602652", "message": "Apply suggestions from code review", "committedDate": "2020-10-05T08:19:02Z", "type": "commit"}, {"oid": "97c161dcf0f946eb1a5c42aa2d38459150aa3488", "url": "https://github.com/jenkinsci/jenkins/commit/97c161dcf0f946eb1a5c42aa2d38459150aa3488", "message": "Restrict withFillInStackTracesOnClassNotFoundException() at Beta API", "committedDate": "2020-10-09T15:48:35Z", "type": "commit"}]}