{"pr_number": 5145, "pr_title": "[JENKINS-64439] \"positive-number\" field validator accepts non valid java numbers", "pr_createdAt": "2020-12-30T15:22:20Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/5145", "timeline": [{"oid": "d269f262094de3f2d419f3083bec34d85195123a", "url": "https://github.com/jenkinsci/jenkins/commit/d269f262094de3f2d419f3083bec34d85195123a", "message": "[JENKINS-64439] \"positive-number\" field validator accepts non valid java numbers\n\nPrevent user to input 'e' or 'E'.\nExcept 'positive-number', I also add the restriction to 'non-negative-number' and 'number'", "committedDate": "2020-12-30T15:14:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDA0NTcxNg==", "url": "https://github.com/jenkinsci/jenkins/pull/5145#discussion_r560045716", "bodyText": "Now a number cannot be a negative number", "author": "MRamonLeon", "createdAt": "2021-01-19T09:48:27Z", "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -878,18 +878,48 @@ function rowvgStartEachRow(recursive,f) {\n     Behaviour.specify(\"INPUT.required\", \"input-required\", ++p, function(e) { registerRegexpValidator(e,/./,\"Field is required\"); });\n \n     // validate form values to be an integer\n-    Behaviour.specify(\"INPUT.number\", \"input-number\", ++p, function(e) { registerRegexpValidator(e,/^(\\d+|)$/,\"Not an integer\"); });\n-    Behaviour.specify(\"INPUT.number-required\", \"input-number-required\", ++p, function(e) { registerRegexpValidator(e,/^\\-?(\\d+)$/,\"Not an integer\"); });\n+    Behaviour.specify(\"INPUT.number\", \"input-number\", ++p, function(e) {\n+        e.addEventListener('keypress', function (event) {\n+            if (event.which === 69 || event.which === 101) { // Prevent user input 'e' or 'E'\n+                event.preventDefault();\n+            }\n+        })\n+        registerRegexpValidator(e,/^(\\d+|)$/,\"Not an integer\");", "originalCommit": "d269f262094de3f2d419f3083bec34d85195123a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDA3ODE4Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/5145#discussion_r560078187", "bodyText": "I didn't modified it. It seems that it need be modified. How about ^(-?\\d+|)$ ?", "author": "benebsiny", "createdAt": "2021-01-19T10:37:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDA0NTcxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDA0Njg5Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/5145#discussion_r560046892", "bodyText": "The '.' is not included in the if clause", "author": "MRamonLeon", "createdAt": "2021-01-19T09:50:07Z", "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -878,18 +878,48 @@ function rowvgStartEachRow(recursive,f) {\n     Behaviour.specify(\"INPUT.required\", \"input-required\", ++p, function(e) { registerRegexpValidator(e,/./,\"Field is required\"); });\n \n     // validate form values to be an integer\n-    Behaviour.specify(\"INPUT.number\", \"input-number\", ++p, function(e) { registerRegexpValidator(e,/^(\\d+|)$/,\"Not an integer\"); });\n-    Behaviour.specify(\"INPUT.number-required\", \"input-number-required\", ++p, function(e) { registerRegexpValidator(e,/^\\-?(\\d+)$/,\"Not an integer\"); });\n+    Behaviour.specify(\"INPUT.number\", \"input-number\", ++p, function(e) {\n+        e.addEventListener('keypress', function (event) {\n+            if (event.which === 69 || event.which === 101) { // Prevent user input 'e' or 'E'\n+                event.preventDefault();\n+            }\n+        })\n+        registerRegexpValidator(e,/^(\\d+|)$/,\"Not an integer\");\n+    });\n+\n+    Behaviour.specify(\"INPUT.number-required\", \"input-number-required\", ++p, function(e) {\n+        e.addEventListener('keypress', function (event) {\n+            if (event.which === 69 || event.which === 101) { // Prevent user input 'e' or 'E'\n+                event.preventDefault();\n+            }\n+        })\n+        registerRegexpValidator(e,/^\\-?(\\d+)$/,\"Not an integer\");\n+    });\n \n     Behaviour.specify(\"INPUT.non-negative-number-required\", \"input-non-negative-number-required\", ++p, function(e) {\n+        e.addEventListener('keypress', function (event) {\n+            if (event.which === 69 || event.which === 101) { // Prevent user input 'e' or 'E'\n+                event.preventDefault();\n+            }\n+        })\n         registerRegexpValidator(e,/^\\d+$/,\"Not a non-negative number\");\n     });\n \n     Behaviour.specify(\"INPUT.positive-number\", \"input-positive-number\", ++p, function(e) {\n+        e.addEventListener('keypress', function (event) {\n+            if (event.which === 69 || event.which === 101) { // Prevent user input 'e' or 'E'\n+                event.preventDefault();\n+            }\n+        })\n         registerRegexpValidator(e,/^(\\d*[1-9]\\d*|)$/,\"Not a positive integer\");\n     });\n \n     Behaviour.specify(\"INPUT.positive-number-required\", \"input-positive-number-required\", ++p, function(e) {\n+        e.addEventListener('keypress', function (event) {\n+            if (event.which === 69 || event.which === 101) { // Prevent user input 'e', 'E', '.'", "originalCommit": "d269f262094de3f2d419f3083bec34d85195123a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDA3MDI4Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/5145#discussion_r560070283", "bodyText": "I forgot to add it. I feel so sorry.\nBy the way, is it a good idea to add '.' constraint for all input validator? Because some error message shows \"Not an integer\" and other shows \"Not a non-negative number\". The point is the difference between them is number and integer.\nI'm thinking that should I add the '.' constraint for the messages which contain 'integer', or change the messages which contain 'number' to 'integer'?", "author": "benebsiny", "createdAt": "2021-01-19T10:25:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDA0Njg5Mg=="}], "type": "inlineReview"}]}