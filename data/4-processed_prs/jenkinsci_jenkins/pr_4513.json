{"pr_number": 4513, "pr_title": "[JENKINS-61166] Show on 'updates' tab when a warning would be fixed", "pr_createdAt": "2020-02-21T21:28:54Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4513", "timeline": [{"oid": "a937a72838715a4dfda72dca25e6ca590fb12672", "url": "https://github.com/jenkinsci/jenkins/commit/a937a72838715a4dfda72dca25e6ca590fb12672", "message": "[JENKINS-61161] Show on 'updates' tab when a warning would be fixed", "committedDate": "2020-02-21T21:29:15Z", "type": "forcePushed"}, {"oid": "9ec7a736ef1675442305c0fe19258dffcd450108", "url": "https://github.com/jenkinsci/jenkins/commit/9ec7a736ef1675442305c0fe19258dffcd450108", "message": "[JENKINS-61166] Show on 'updates' tab when a warning would be fixed", "committedDate": "2020-02-21T21:29:56Z", "type": "commit"}, {"oid": "9ec7a736ef1675442305c0fe19258dffcd450108", "url": "https://github.com/jenkinsci/jenkins/commit/9ec7a736ef1675442305c0fe19258dffcd450108", "message": "[JENKINS-61166] Show on 'updates' tab when a warning would be fixed", "committedDate": "2020-02-21T21:29:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3MjgyNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r382872826", "bodyText": "NIT: Maybe this variable should be named addressesActiveVuln or something to that effect and have its values reversed in this function so that it matches the javadoc", "author": "res0nance", "createdAt": "2020-02-22T01:29:13Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -1276,6 +1277,32 @@ public boolean isNeededDependenciesCompatibleWithInstalledVersion(PluginManager.\n             return getDependenciesIncompatibleWithInstalledVersion(cache).isEmpty();\n         }\n \n+        /**\n+         * Returns true if and only if this update addressed a currently active security vulnerability.\n+         *\n+         * @return true if and only if this update addressed a currently active security vulnerability.\n+         */\n+        @Restricted(NoExternalUse.class) // Jelly\n+        public boolean fixesSecurityVulnerabilities() {\n+            final PluginWrapper installed = getInstalled();\n+            if (installed == null) {\n+                return false;\n+            }\n+            boolean allWarningsStillApply = true;\n+            for (Warning warning : ExtensionList.lookupSingleton(UpdateSiteWarningsMonitor.class).getActivePluginWarningsByPlugin().getOrDefault(installed, Collections.emptyList())) {\n+                boolean thisWarningApplies = false;\n+                for (WarningVersionRange range : warning.versionRanges) {\n+                    if (range.includes(new VersionNumber(version))) {\n+                        thisWarningApplies = true;\n+                    }\n+                }\n+                if (!thisWarningApplies) {\n+                    allWarningsStillApply = false;\n+                }\n+            }\n+            return !allWarningsStillApply;", "originalCommit": "9ec7a736ef1675442305c0fe19258dffcd450108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1MDU3Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r385050577", "bodyText": "I also find it quite confusing. In the theory in case there is a warning for an individual plugin, then the whole message should be displayed? I think this is actually doing the opposite?", "author": "varyvol", "createdAt": "2020-02-27T10:50:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3MjgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3Mjg5Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r382872897", "bodyText": "NIT: Maybe this VersionNumber object should be constructed outside the loop. Although java might just optimize this away", "author": "res0nance", "createdAt": "2020-02-22T01:29:55Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -1276,6 +1277,32 @@ public boolean isNeededDependenciesCompatibleWithInstalledVersion(PluginManager.\n             return getDependenciesIncompatibleWithInstalledVersion(cache).isEmpty();\n         }\n \n+        /**\n+         * Returns true if and only if this update addressed a currently active security vulnerability.\n+         *\n+         * @return true if and only if this update addressed a currently active security vulnerability.\n+         */\n+        @Restricted(NoExternalUse.class) // Jelly\n+        public boolean fixesSecurityVulnerabilities() {\n+            final PluginWrapper installed = getInstalled();\n+            if (installed == null) {\n+                return false;\n+            }\n+            boolean allWarningsStillApply = true;\n+            for (Warning warning : ExtensionList.lookupSingleton(UpdateSiteWarningsMonitor.class).getActivePluginWarningsByPlugin().getOrDefault(installed, Collections.emptyList())) {\n+                boolean thisWarningApplies = false;\n+                for (WarningVersionRange range : warning.versionRanges) {\n+                    if (range.includes(new VersionNumber(version))) {", "originalCommit": "9ec7a736ef1675442305c0fe19258dffcd450108", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwMjAxOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r383502019", "bodyText": "nit: maybe this would be better\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    <div class=\"alert alert-warning\">${%Applying this update will address security vulnerabilities currently affecting Jenkins.}</div>\n          \n          \n            \n                                    <div class=\"alert alert-warning\">${%Applying this update will address current security vulnerabilities.}</div>", "author": "jeffret-b", "createdAt": "2020-02-24T20:40:54Z", "path": "core/src/main/resources/hudson/PluginManager/table.jelly", "diffHunk": "@@ -119,6 +119,9 @@ THE SOFTWARE.\n                       <j:if test=\"${p.isForNewerJava()}\">\n                         <div class=\"alert alert-danger\">${%javaWarning(p.minimumJavaVersion)}</div>\n                       </j:if>\n+                      <j:if test=\"${p.fixesSecurityVulnerabilities()}\">\n+                        <div class=\"alert alert-warning\">${%Applying this update will address security vulnerabilities currently affecting Jenkins.}</div>", "originalCommit": "9ec7a736ef1675442305c0fe19258dffcd450108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0NjUzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r384446539", "bodyText": "Agreed. \"affecting\" may imply that we know that the instance is affected, but in fact we don't. Some vulns may be a problem only in particular configurations", "author": "oleg-nenashev", "createdAt": "2020-02-26T11:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwMjAxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0ODE0Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r384448146", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    <div class=\"alert alert-warning\">${%Applying this update will address security vulnerabilities currently affecting Jenkins.}</div>\n          \n          \n            \n                                    <div class=\"alert alert-warning\">${%Applying this update will address security vulnerabilities in the currently installed version.}</div>", "author": "daniel-beck", "createdAt": "2020-02-26T11:59:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwMjAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxMzc1Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r383913753", "bodyText": "NIT: due to the length / complexity of the line, it could be useful to put it into a variable. This could also help a bit the debugging.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (Warning warning : ExtensionList.lookupSingleton(UpdateSiteWarningsMonitor.class).getActivePluginWarningsByPlugin().getOrDefault(installed, Collections.emptyList())) {\n          \n          \n            \n                        List<Warning> activePluginWarnings = ExtensionList.lookupSingleton(UpdateSiteWarningsMonitor.class).getActivePluginWarningsByPlugin().getOrDefault(installed, Collections.emptyList())\n          \n          \n            \n                        for (Warning warning : activePluginWarnings) {", "author": "Wadeck", "createdAt": "2020-02-25T14:31:01Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -1276,6 +1277,32 @@ public boolean isNeededDependenciesCompatibleWithInstalledVersion(PluginManager.\n             return getDependenciesIncompatibleWithInstalledVersion(cache).isEmpty();\n         }\n \n+        /**\n+         * Returns true if and only if this update addressed a currently active security vulnerability.\n+         *\n+         * @return true if and only if this update addressed a currently active security vulnerability.\n+         */\n+        @Restricted(NoExternalUse.class) // Jelly\n+        public boolean fixesSecurityVulnerabilities() {\n+            final PluginWrapper installed = getInstalled();\n+            if (installed == null) {\n+                return false;\n+            }\n+            boolean allWarningsStillApply = true;\n+            for (Warning warning : ExtensionList.lookupSingleton(UpdateSiteWarningsMonitor.class).getActivePluginWarningsByPlugin().getOrDefault(installed, Collections.emptyList())) {", "originalCommit": "9ec7a736ef1675442305c0fe19258dffcd450108", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNTkzMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r383915932", "bodyText": "NIT: Not used to such naming convention. I generally expect method starting with an action verb to do something. In this case if I call this method I expect it to fix the vulnerabilities.\n\ud83d\udca1 containsSecurityVulnerabilitiesFixes ?", "author": "Wadeck", "createdAt": "2020-02-25T14:34:50Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -1276,6 +1277,32 @@ public boolean isNeededDependenciesCompatibleWithInstalledVersion(PluginManager.\n             return getDependenciesIncompatibleWithInstalledVersion(cache).isEmpty();\n         }\n \n+        /**\n+         * Returns true if and only if this update addressed a currently active security vulnerability.\n+         *\n+         * @return true if and only if this update addressed a currently active security vulnerability.\n+         */\n+        @Restricted(NoExternalUse.class) // Jelly\n+        public boolean fixesSecurityVulnerabilities() {", "originalCommit": "9ec7a736ef1675442305c0fe19258dffcd450108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0NTg4MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4513#discussion_r384445881", "bodyText": "Not a problem while restricted", "author": "oleg-nenashev", "createdAt": "2020-02-26T11:54:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNTkzMg=="}], "type": "inlineReview"}, {"oid": "56cf4960590c28f604ec5bb5e8d3a7014874bd0b", "url": "https://github.com/jenkinsci/jenkins/commit/56cf4960590c28f604ec5bb5e8d3a7014874bd0b", "message": "Fix message wording", "committedDate": "2020-03-03T04:44:37Z", "type": "commit"}]}