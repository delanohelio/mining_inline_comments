{"pr_number": 4877, "pr_title": "Update at-since Javadoc", "pr_createdAt": "2020-07-27T08:12:40Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4877", "timeline": [{"oid": "304ad624269a32463158b6ed17740e2f325d9d44", "url": "https://github.com/jenkinsci/jenkins/commit/304ad624269a32463158b6ed17740e2f325d9d44", "message": "Update at-since Javadoc", "committedDate": "2020-07-27T08:08:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODk5Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460718992", "bodyText": "#4824", "author": "daniel-beck", "createdAt": "2020-07-27T08:12:55Z", "path": "core/src/main/java/hudson/FilePath.java", "diffHunk": "@@ -1262,7 +1262,7 @@ public Boolean invoke(File f, VirtualChannel channel) throws IOException, Interr\n     /**\n      * Deletes all suffixes recursively.\n      * @throws IOException if it exists but could not be successfully deleted\n-     * @since TODO\n+     * @since 2.244", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTE2Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719166", "bodyText": "#4824", "author": "daniel-beck", "createdAt": "2020-07-27T08:13:15Z", "path": "core/src/main/java/hudson/slaves/WorkspaceList.java", "diffHunk": "@@ -312,7 +312,7 @@ public static FilePath tempDir(FilePath ws) {\n \n     /**\n      * The token that combines the project name and unique number to create unique workspace directory.\n-     * @since TODO\n+     * @since 2.244", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTY3MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719671", "bodyText": "#4531", "author": "daniel-beck", "createdAt": "2020-07-27T08:14:11Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1161,7 +1161,7 @@ public static String getFooterURL() {\n     /**\n      * Checks if the current security principal has one of the supplied permissions.\n      *\n-     * @since TODO\n+     * @since 2.238", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTY5OQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719699", "bodyText": "#4531", "author": "daniel-beck", "createdAt": "2020-07-27T08:14:15Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1176,7 +1176,7 @@ public static boolean hasAnyPermission(AccessControlled ac, Permission[] permiss\n      * degrades gracefully if \"it\" is not an {@link AccessControlled} object.\n      * Otherwise it will perform no check and that problem is hard to notice.\n      *\n-     * @since TODO\n+     * @since 2.238", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTkxMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719910", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:14:44Z", "path": "core/src/main/java/hudson/Launcher.java", "diffHunk": "@@ -116,7 +116,7 @@ protected Launcher(@NonNull Launcher launcher) {\n      * @param run The run that requested the command interpretation, could be <code>null</code> if outside of a run context.\n      * @param builder The builder that asked to run this command\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTk0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719942", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:14:47Z", "path": "core/src/main/java/hudson/Launcher.java", "diffHunk": "@@ -483,7 +483,7 @@ public ProcStarter writeStdin() {\n         /**\n          * Specify the build step that want to run the command to enable the environment filters\n          * @return {@code this}\n-         * @since TODO\n+         * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTk3Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719973", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:14:51Z", "path": "core/src/main/java/hudson/Launcher.java", "diffHunk": "@@ -493,7 +493,7 @@ public ProcStarter buildStep(EnvVarsFilterableBuilder envVarsFilterableBuilder){\n \n         /**\n          * @return if set, returns the build step that wants to run the command\n-         * @since TODO\n+         * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDIzMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720231", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:16Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterGlobalRule.java", "diffHunk": "@@ -42,7 +42,7 @@\n  *\n  * The local rules are applied before the global ones.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDI2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720260", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:19Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterLocalRule.java", "diffHunk": "@@ -37,7 +37,7 @@\n  *\n  * The local rules are applied before the global ones.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDMxNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720315", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:24Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterLocalRuleDescriptor.java", "diffHunk": "@@ -38,7 +38,7 @@\n  * if the rule is applicable to a given builder and then applied every time. <p>\n  * For global rule it's the inverse, the rule itself determines when it's applicable.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDM0OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720348", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:27Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterRuleContext.java", "diffHunk": "@@ -32,7 +32,7 @@\n /**\n  * Information that is used for the environment filtering process.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDM3OQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720379", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:32Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterRuleWrapper.java", "diffHunk": "@@ -40,7 +40,7 @@\n /**\n  * Helper class that provide the list of rules (local + global) for a given builder.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDQxOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720418", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:36Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterableBuilder.java", "diffHunk": "@@ -33,7 +33,7 @@\n /**\n  * Builder step that wants to integrate local environment filter rules should implement this interface\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDQ2NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720464", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:42Z", "path": "core/src/main/java/jenkins/tasks/filters/impl/RetainVariablesLocalRule.java", "diffHunk": "@@ -53,7 +53,7 @@\n /**\n  * Local rule that removes all the non-retained variables for that step.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDYxOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720618", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:15:59Z", "path": "core/src/main/java/hudson/tasks/BatchFile.java", "diffHunk": "@@ -59,7 +59,7 @@ public BatchFile(String command) {\n     /**\n      * Set local environment variable filter rules\n      * @param configuredLocalRules list of local environment filter rules\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDY0Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720646", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:16:02Z", "path": "core/src/main/java/hudson/tasks/Shell.java", "diffHunk": "@@ -71,7 +71,7 @@ public Shell(String command) {\n     /**\n      * Set local environment variable filter rules\n      * @param configuredLocalRules list of local environment filter rules\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDc1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720752", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:16:14Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterException.java", "diffHunk": "@@ -32,7 +32,7 @@\n /**\n  * Exception that occurs during the environment filtering process, with helper to track the source.\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDc5Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720793", "bodyText": "#4683", "author": "daniel-beck", "createdAt": "2020-07-27T08:16:19Z", "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterGlobalConfiguration.java", "diffHunk": "@@ -43,7 +43,7 @@\n  * Configuration of the filter rules that are applied globally,\n  * after filtering which rule applies on which builder\n  *\n- * @since TODO\n+ * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMTg0MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460721840", "bodyText": "#4073", "author": "daniel-beck", "createdAt": "2020-07-27T08:18:12Z", "path": "core/src/main/java/hudson/PluginManager.java", "diffHunk": "@@ -2242,7 +2242,7 @@ private PluginUpdateInfo(String pluginName, String message) {\n     /**\n      * {@link AdministrativeMonitor} that checks if there are any plugins that are deprecated.\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMTg3Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460721873", "bodyText": "#4073", "author": "daniel-beck", "createdAt": "2020-07-27T08:18:16Z", "path": "core/src/main/java/hudson/PluginWrapper.java", "diffHunk": "@@ -368,7 +368,7 @@ public boolean hasMandatoryDependencies() {\n      * Is this plugin deprecated?\n      *\n      * @return {@code true} if and only if an update site reports deprecations for this plugin.\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMTk2Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460721963", "bodyText": "#4073", "author": "daniel-beck", "createdAt": "2020-07-27T08:18:24Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -562,7 +562,7 @@ private boolean isUpdatesFromHudsonLabs() {\n         /**\n          * Mapping of plugin IDs to deprecation notices\n          *\n-         * @since TODO\n+         * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMjAwNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460722005", "bodyText": "#4073", "author": "daniel-beck", "createdAt": "2020-07-27T08:18:28Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -650,7 +650,7 @@ private boolean isUpdatesFromHudsonLabs() {\n         /**\n          * Returns the deprecations provided by the update site\n          * @return the deprecations provided by the update site\n-         * @since TODO\n+         * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMjA0Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460722047", "bodyText": "#4073", "author": "daniel-beck", "createdAt": "2020-07-27T08:18:32Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -842,7 +842,7 @@ public boolean includes(VersionNumber number) {\n     /**\n      * Represents a deprecation of a certain component. Jenkins project policy determines exactly what it means.\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMjk5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460722990", "bodyText": "#4774", "author": "daniel-beck", "createdAt": "2020-07-27T08:20:14Z", "path": "core/src/main/java/hudson/model/labels/LabelExpression.java", "diffHunk": "@@ -270,7 +270,7 @@ public static FormValidation validate(@Nullable String expression) {\n      * @param item       The context item (like a job or a folder), if applicable; used for potential additional\n      *                   restrictions via {@link LabelValidator} instances.\n      * @return The validation result.\n-     * @since TODO\n+     * @since 2.243", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzAxMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723013", "bodyText": "#4774", "author": "daniel-beck", "createdAt": "2020-07-27T08:20:16Z", "path": "core/src/main/java/hudson/model/labels/LabelExpression.java", "diffHunk": "@@ -256,7 +256,7 @@ public static AutoCompletionCandidates autoComplete(@Nullable String label) {\n      *\n      * @param expression The expression to validate.\n      * @return The validation result.\n-     * @since TODO\n+     * @since 2.243", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzAzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723038", "bodyText": "#4774", "author": "daniel-beck", "createdAt": "2020-07-27T08:20:19Z", "path": "core/src/main/java/hudson/model/labels/LabelExpression.java", "diffHunk": "@@ -234,7 +234,7 @@ public LabelOperatorPrecedence precedence() {\n      *\n      * @param label The (partial) label for which auto-completion is being requested.\n      * @return A set of auto-completion candidates.\n-     * @since TODO\n+     * @since 2.243", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzEwNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723105", "bodyText": "#4774", "author": "daniel-beck", "createdAt": "2020-07-27T08:20:27Z", "path": "core/src/main/java/jenkins/model/labels/LabelValidator.java", "diffHunk": "@@ -10,7 +10,7 @@\n  * Plugins may want to contribute additional restrictions on the use of specific labels for specific context items.\n  * This extension point allows such restrictions.\n  *\n- * @since TODO\n+ * @since 2.243", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzI0NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723245", "bodyText": "#4774", "author": "daniel-beck", "createdAt": "2020-07-27T08:20:41Z", "path": "core/src/main/java/hudson/model/AbstractProject.java", "diffHunk": "@@ -2080,7 +2080,7 @@ public void setCustomWorkspace(String customWorkspace) throws IOException {\n          * @param label The label that the job wants to restrict itself to.\n          * @return The validation result.\n          *\n-         * @since TODO\n+         * @since 2.243", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzg0OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723848", "bodyText": "#4817", "author": "daniel-beck", "createdAt": "2020-07-27T08:21:49Z", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNDQzNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460724436", "bodyText": "#4817", "author": "daniel-beck", "createdAt": "2020-07-27T08:22:51Z", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246\n      */\n     public abstract void iterateAndCleanupFingerprints(TaskListener taskListener);\n \n     /**\n      * This method performs the cleanup of the given fingerprint.\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNDQ4MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460724480", "bodyText": "#4817", "author": "daniel-beck", "createdAt": "2020-07-27T08:22:55Z", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -140,7 +140,7 @@ protected Fingerprint getFingerprint(Fingerprint fp) throws IOException {\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNTQwMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460725401", "bodyText": "#4766", "author": "daniel-beck", "createdAt": "2020-07-27T08:24:24Z", "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -100,7 +100,7 @@ default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNu\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n-     * @since TODO\n+     * @since 2.241", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNTcxMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460725711", "bodyText": "#4707", "author": "daniel-beck", "createdAt": "2020-07-27T08:24:56Z", "path": "core/src/main/java/jenkins/util/SystemProperties.java", "diffHunk": "@@ -75,7 +75,7 @@\n  * <p>While it looks like it on first glance, this cannot be mapped to {@link EnvVars},\n  * because {@link EnvVars} is only for build variables, not Jenkins itself variables.\n  *\n- * @since TODO\n+ * @since 2.236", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNjY3Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460726673", "bodyText": "#4731", "author": "daniel-beck", "createdAt": "2020-07-27T08:26:38Z", "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1192,7 +1192,7 @@ public int size() {\n     /**\n      * Returns the persisted facets.\n      *\n-     * @since TODO\n+     * @since 2.242", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNjcwNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460726707", "bodyText": "#4731", "author": "daniel-beck", "createdAt": "2020-07-27T08:26:41Z", "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1359,7 +1359,7 @@ public Api getApi() {\n     /**\n      * Deletes the {@link Fingerprint} in the Storage with the given unique id.\n      *\n-     * @since TODO\n+     * @since 2.242", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzE0NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460727144", "bodyText": "#4826", "author": "daniel-beck", "createdAt": "2020-07-27T08:27:20Z", "path": "core/src/main/java/hudson/model/ParameterDefinition.java", "diffHunk": "@@ -227,7 +227,7 @@ public ParameterValue getDefaultParameterValue() {\n \n     /**\n      * Checks whether a given value is valid for this definition.\n-     * @since TODO\n+     * @since 2.244", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzMzMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460727333", "bodyText": "#4773", "author": "daniel-beck", "createdAt": "2020-07-27T08:27:42Z", "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -460,7 +460,7 @@ public JSONObject reduce(List<JSONObject> jsonList) {\n          *\n          * @param clazz The class to use to determine the downloadable's ID.\n          *\n-         * @since TODO\n+         * @since 2.244", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzM1NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460727354", "bodyText": "#4773", "author": "daniel-beck", "createdAt": "2020-07-27T08:27:45Z", "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -281,7 +281,7 @@ public String getId() {\n          * @param clazz The class to use to generate an ID.\n          * @return The ID generated based on the specified class.\n          *\n-         * @since TODO\n+         * @since 2.244", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzMyMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461603321", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.246\n          \n          \n            \n                 * @since 2.248", "author": "stellargo", "createdAt": "2020-07-28T14:01:09Z", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwODE2Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461608162", "bodyText": "https://github.com/jenkinsci/jenkins/blob/jenkins-2.246/core/src/main/java/jenkins/fingerprints/FingerprintStorage.java#L105\n2.246 and 2.247 weren't properly released, but this is the correct reference.", "author": "daniel-beck", "createdAt": "2020-07-28T14:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzMyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzUyMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461603523", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.246\n          \n          \n            \n                 * @since 2.248", "author": "stellargo", "createdAt": "2020-07-28T14:01:25Z", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246\n      */\n     public abstract void iterateAndCleanupFingerprints(TaskListener taskListener);\n \n     /**\n      * This method performs the cleanup of the given fingerprint.\n      *\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzY2NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461603665", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.246\n          \n          \n            \n                 * @since 2.248", "author": "stellargo", "createdAt": "2020-07-28T14:01:38Z", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -140,7 +140,7 @@ protected Fingerprint getFingerprint(Fingerprint fp) throws IOException {\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.246", "originalCommit": "304ad624269a32463158b6ed17740e2f325d9d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}