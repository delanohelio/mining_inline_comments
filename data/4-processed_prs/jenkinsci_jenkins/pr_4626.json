{"pr_number": 4626, "pr_title": "[JENKINS-60866] Un-inline JavaScript from ReverseProxySetupMonitor", "pr_createdAt": "2020-04-05T11:44:50Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4626", "timeline": [{"oid": "856c4c085ab8f44fb77af27911dd40df1c3ea622", "url": "https://github.com/jenkinsci/jenkins/commit/856c4c085ab8f44fb77af27911dd40df1c3ea622", "message": "[JENKINS-60866] Un-inline JavaScript from ReverseProxySetupMonitor", "committedDate": "2020-04-05T11:36:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MTk1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403691952", "bodyText": "Arrow functions do not work on some browsers jenkins supports. Basically, adjuncts cannot use them or other ES6 features.", "author": "fqueiruga", "createdAt": "2020-04-05T12:02:13Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/resources.js", "diffHunk": "@@ -0,0 +1,35 @@\n+(() => {", "originalCommit": "856c4c085ab8f44fb77af27911dd40df1c3ea622", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjA1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403692052", "bodyText": "Can we return here to avoid one extra level of nesting by skipping the else clause?", "author": "fqueiruga", "createdAt": "2020-04-05T12:02:53Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/resources.js", "diffHunk": "@@ -0,0 +1,35 @@\n+(() => {\n+\tvar redirectForm = document.getElementById('redirect-error');\n+\tif (!redirectForm) {\n+\t\tconsole.warn('This script expects to have an element with id=\"redirect-error\" to be working.');", "originalCommit": "856c4c085ab8f44fb77af27911dd40df1c3ea622", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjA5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403692090", "bodyText": "love seeing use of data-attributes \ud83d\udc4d", "author": "fqueiruga", "createdAt": "2020-04-05T12:03:20Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/resources.js", "diffHunk": "@@ -0,0 +1,35 @@\n+(() => {\n+\tvar redirectForm = document.getElementById('redirect-error');\n+\tif (!redirectForm) {\n+\t\tconsole.warn('This script expects to have an element with id=\"redirect-error\" to be working.');\n+\t} else {\n+\t\tvar urlToTest = redirectForm.getAttribute('data-url');", "originalCommit": "856c4c085ab8f44fb77af27911dd40df1c3ea622", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjM3NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403692375", "bodyText": "I would suggest renaming the .context-message class to .js-context-message, to show is intent to be used by JS code and avoid a regression when refactoring CSS.", "author": "fqueiruga", "createdAt": "2020-04-05T12:05:40Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/resources.js", "diffHunk": "@@ -0,0 +1,35 @@\n+(() => {\n+\tvar redirectForm = document.getElementById('redirect-error');\n+\tif (!redirectForm) {\n+\t\tconsole.warn('This script expects to have an element with id=\"redirect-error\" to be working.');\n+\t} else {\n+\t\tvar urlToTest = redirectForm.getAttribute('data-url');\n+\t\tnew Ajax.Request(urlToTest, {\n+\t\t\tonComplete : function(response) {\n+\t\t\t\tif (response.status !== 200) {\n+\t\t\t\t\tvar context = redirectForm.getAttribute('data-context');\n+\t\t\t\t\t// to cover the case where the JenkinsRootUrl is configured without the context\n+\t\t\t\t\tif (context) {\n+\t\t\t\t\t\tnew Ajax.Request(urlToTest, {\n+\t\t\t\t\t\t\tparameters: { testWithContext:true },\n+\t\t\t\t\t\t\tonComplete: function (response) {\n+\t\t\t\t\t\t\t\tif (response.status === 200) {\n+\t\t\t\t\t\t\t\t\t// this means the root URL was configured but without the contextPath, \n+\t\t\t\t\t\t\t\t\t// so different message to display\n+\t\t\t\t\t\t\t\t\tredirectForm.style.display = \"block\";\n+\t\t\t\t\t\t\t\t\tredirectForm.querySelectorAll('.context-message').forEach(node => node.style.display = \"block\");", "originalCommit": "856c4c085ab8f44fb77af27911dd40df1c3ea622", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5Mjc1MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403692750", "bodyText": "Looks like I failed to pick an actual line :|", "author": "fqueiruga", "createdAt": "2020-04-05T12:08:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjM3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwMTE4MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403701180", "bodyText": "It's a really good idea to js-xxx for stuff only used as tag for JavaScript without any CSS implication. Do we have a guideline/documentation for others?", "author": "Wadeck", "createdAt": "2020-04-05T13:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjQzMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403692432", "bodyText": "Again, arrow functions should be swapped by normal anonymous function () { }s", "author": "fqueiruga", "createdAt": "2020-04-05T12:06:13Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/resources.js", "diffHunk": "@@ -0,0 +1,35 @@\n+(() => {\n+\tvar redirectForm = document.getElementById('redirect-error');\n+\tif (!redirectForm) {\n+\t\tconsole.warn('This script expects to have an element with id=\"redirect-error\" to be working.');\n+\t} else {\n+\t\tvar urlToTest = redirectForm.getAttribute('data-url');\n+\t\tnew Ajax.Request(urlToTest, {\n+\t\t\tonComplete : function(response) {\n+\t\t\t\tif (response.status !== 200) {\n+\t\t\t\t\tvar context = redirectForm.getAttribute('data-context');\n+\t\t\t\t\t// to cover the case where the JenkinsRootUrl is configured without the context\n+\t\t\t\t\tif (context) {\n+\t\t\t\t\t\tnew Ajax.Request(urlToTest, {\n+\t\t\t\t\t\t\tparameters: { testWithContext:true },\n+\t\t\t\t\t\t\tonComplete: function (response) {\n+\t\t\t\t\t\t\t\tif (response.status === 200) {\n+\t\t\t\t\t\t\t\t\t// this means the root URL was configured but without the contextPath, \n+\t\t\t\t\t\t\t\t\t// so different message to display\n+\t\t\t\t\t\t\t\t\tredirectForm.style.display = \"block\";\n+\t\t\t\t\t\t\t\t\tredirectForm.querySelectorAll('.context-message').forEach(node => node.style.display = \"block\");", "originalCommit": "856c4c085ab8f44fb77af27911dd40df1c3ea622", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5Mjg2NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403692865", "bodyText": "I failed to pick an actual line. This comment was meant for the forEach loop", "author": "fqueiruga", "createdAt": "2020-04-05T12:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5MjQzMg=="}], "type": "inlineReview"}, {"oid": "001af91c94be8bc122dcbb43e64ea7fbc1df24af", "url": "https://github.com/jenkinsci/jenkins/commit/001af91c94be8bc122dcbb43e64ea7fbc1df24af", "message": "Also un-inlining CSS", "committedDate": "2020-04-05T12:12:49Z", "type": "commit"}, {"oid": "0b95cdf438257eccc30e8f797b5e5c9ddb8cbf4a", "url": "https://github.com/jenkinsci/jenkins/commit/0b95cdf438257eccc30e8f797b5e5c9ddb8cbf4a", "message": "Arrow to function", "committedDate": "2020-04-05T13:18:08Z", "type": "commit"}, {"oid": "133cff776b2a15fd6eba3db9764483c223665662", "url": "https://github.com/jenkinsci/jenkins/commit/133cff776b2a15fd6eba3db9764483c223665662", "message": "Differentiate css-class and js-class", "committedDate": "2020-04-05T13:20:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzgwMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r403713802", "bodyText": "You left one arrow function here :)", "author": "fqueiruga", "createdAt": "2020-04-05T15:02:43Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/resources.js", "diffHunk": "@@ -0,0 +1,49 @@\n+(function () {\n+\tvar redirectForm = document.getElementById('redirect-error');\n+\tif (!redirectForm) {\n+\t\tconsole.warn('This script expects to have an element with id=\"redirect-error\" to be working.');\n+\t\treturn;\n+\t}\n+\n+\tvar urlToTest = redirectForm.getAttribute('data-url');\n+\tvar callUrlToTest = function(testWithContext, callback) {\n+\t\tvar options = {\n+\t\t\tonComplete: callback\n+\t\t};\n+\t\tif (testWithContext === true) {\n+\t\t\toptions.parameters = { testWithContext: true };\n+\t\t}\n+\t\tnew Ajax.Request(urlToTest, options);\n+\t};\n+\t\n+\tvar displayWarningMessage = function(withContextMessage) {\n+\t\tredirectForm.classList.remove('reverse-proxy__hidden');\n+\t\tif (withContextMessage === true) {\n+\t\t\tredirectForm.querySelectorAll('.js-context-message').forEach(node =>", "originalCommit": "133cff776b2a15fd6eba3db9764483c223665662", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "231e6a7aef3818a6b2288677e04118eaa223327d", "url": "https://github.com/jenkinsci/jenkins/commit/231e6a7aef3818a6b2288677e04118eaa223327d", "message": "The forgotten one", "committedDate": "2020-04-05T16:50:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0ODcwMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4626#discussion_r419648703", "bodyText": "This should have been set-up or configuration", "author": "jsoref", "createdAt": "2020-05-04T18:43:54Z", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/message.properties", "diffHunk": "@@ -1 +1,2 @@\n-blurb=It appears that your reverse proxy set up is broken.\n\\ No newline at end of file\n+blurb=It appears that your reverse proxy set up is broken.", "originalCommit": "231e6a7aef3818a6b2288677e04118eaa223327d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}