{"pr_number": 4597, "pr_title": "Hide message re disabling implied dependencies when no dependents exist", "pr_createdAt": "2020-03-22T21:30:37Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4597", "timeline": [{"oid": "f035ecae2fc20ed092da5419bd1b6a3633d40674", "url": "https://github.com/jenkinsci/jenkins/commit/f035ecae2fc20ed092da5419bd1b6a3633d40674", "message": "Hide message re disabling implied dependencies when no dependents exist", "committedDate": "2020-03-22T21:29:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2NjQ2Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4597#discussion_r400366462", "bodyText": "Not sure I follow what this PR is doing at a user level, but from a code review perspective it is very confusing since it is leaving a CSS class detached which no longer corresponds to whether a plugin is in fact detached.", "author": "jglick", "createdAt": "2020-03-30T17:27:48Z", "path": "core/src/main/resources/hudson/PluginManager/installed.jelly", "diffHunk": "@@ -70,7 +70,7 @@ THE SOFTWARE.\n                 <th width=\"1\">${%Uninstall}</th>\n               </tr>\n               <j:forEach var=\"p\" items=\"${app.pluginManager.plugins}\">\n-                <tr class=\"plugin ${p.hasMandatoryDependents()?'has-dependents':''} ${(p.hasMandatoryDependents() and !p.enabled)?'has-dependents-but-disabled':''} ${p.isDeleted()?'deleted':''} ${p.detached and p.enabled ? 'detached' : ''}\" data-plugin-id=\"${p.shortName}\" data-plugin-name=\"${p.displayName}\">\n+                <tr class=\"plugin ${p.hasMandatoryDependents()?'has-dependents':''} ${(p.hasMandatoryDependents() and !p.enabled)?'has-dependents-but-disabled':''} ${p.isDeleted()?'deleted':''} ${p.hasImpliedDependents() and p.enabled ? 'detached' : ''}\" data-plugin-id=\"${p.shortName}\" data-plugin-name=\"${p.displayName}\">", "originalCommit": "f035ecae2fc20ed092da5419bd1b6a3633d40674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5NDEwNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4597#discussion_r400394107", "bodyText": "Not sure I follow what this PR is doing at a user level\n\nFor every plugin X, I check whether any plugin Y is installed that depends on a core older than the core in which X was detached. Only then can it be an implied dependency.\n\nit is very confusing since it is leaving a CSS class\n\nGood point, fixing.", "author": "daniel-beck", "createdAt": "2020-03-30T18:11:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2NjQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5ODE1Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4597#discussion_r400398153", "bodyText": "Do you not need to check that p.enabled?", "author": "jglick", "createdAt": "2020-03-30T18:18:12Z", "path": "core/src/main/java/hudson/PluginWrapper.java", "diffHunk": "@@ -1026,6 +1026,21 @@ public boolean isDetached() {\n         return DetachedPluginsUtil.isDetachedPlugin(shortName);\n     }\n \n+    @Restricted(NoExternalUse.class)\n+    public boolean hasImpliedDependents() {\n+        if (!isDetached()) {\n+            return false;\n+        }\n+        for (PluginWrapper p : Jenkins.get().getPluginManager().getPlugins()) {", "originalCommit": "f035ecae2fc20ed092da5419bd1b6a3633d40674", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNzY1Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4597#discussion_r400407656", "bodyText": "I thought about it, but didn't for two reasons:\n\nWe're currently not live-updating the list when the enabled status of entries is changed. Disable all possible dependents and the message still exists; same with enabling without reload.\nI didn't think it was worth it to figure out what happens when you re-enable a disabled plugin. IIRC this can even happen in a running instance when you install a plugin with a dependency on the disabled plugin.\n\nAll of this seemed like too much effort for too little gain (not showing this message in few cases).", "author": "daniel-beck", "createdAt": "2020-03-30T18:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5ODE1Mw=="}], "type": "inlineReview"}, {"oid": "765789872f6702f74d0e9c52d595311905d356be", "url": "https://github.com/jenkinsci/jenkins/commit/765789872f6702f74d0e9c52d595311905d356be", "message": "Rename CSS class to be clear about when it's added", "committedDate": "2020-03-30T18:21:57Z", "type": "commit"}]}