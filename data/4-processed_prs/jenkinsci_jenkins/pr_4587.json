{"pr_number": 4587, "pr_title": "Update at-since up to and including 2.226", "pr_createdAt": "2020-03-16T13:23:53Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4587", "timeline": [{"oid": "d698e99aa931c5845ee858247feff6b66eb12014", "url": "https://github.com/jenkinsci/jenkins/commit/d698e99aa931c5845ee858247feff6b66eb12014", "message": "Exclude 'untagged-...' tags, update message when tag isn't found", "committedDate": "2020-03-16T13:22:13Z", "type": "commit"}, {"oid": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "url": "https://github.com/jenkinsci/jenkins/commit/c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "message": "Update at-since up to and including 2.226", "committedDate": "2020-03-16T13:22:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNzc5MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393027791", "bodyText": "Would it be worth the extra cost to insert a git fetch --tags once at the start of the script?", "author": "MarkEWaite", "createdAt": "2020-03-16T13:38:09Z", "path": "update-since-todo.sh", "diffHunk": "@@ -28,6 +30,6 @@ do\n         sed -i.bak \"$sedExpr\" \"$file\"\n         rm -f \"$file.bak\"\n     else\n-        echo -e \"\\tNot updating file, no tag found. Normal if the associated PR/commit is not merged and released yet\"\n+        echo -e \"\\tNot updating file, no tag found. Normal if the associated PR/commit is not merged and released yet; otherwise make sure to fetch tags from jenkinsci/jenkins\"", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNDE4Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393034183", "bodyText": "Would rather not have this script modify the clone.", "author": "daniel-beck", "createdAt": "2020-03-16T13:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNzc5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODU0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393028542", "bodyText": "Should we delete the untagged-.* junk tags that have been created by Release Drafter mistakes?", "author": "MarkEWaite", "createdAt": "2020-03-16T13:39:20Z", "path": "update-since-todo.sh", "diffHunk": "@@ -19,7 +21,7 @@ do\n     lineSha=$( git blame --porcelain -L \"$line,$line\" \"$file\" | head -1 | cut -d ' ' -f 1 )\n     echo -e \"\\tfirst sha: $lineSha\"\n \n-    firstTag=$( git tag --sort=creatordate --contains \"$lineSha\" | head -1 )\n+    firstTag=$( git tag --sort=creatordate --contains \"$lineSha\" 'jenkins-*' | head -1 )", "originalCommit": "d698e99aa931c5845ee858247feff6b66eb12014", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNDU2NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393034565", "bodyText": "Don't know, but I'd rather not have to rely on it not being there, so this change probably should stay either way.", "author": "daniel-beck", "createdAt": "2020-03-16T13:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAxOTEwMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393019102", "bodyText": "#4194 (still a pointless change without merit).", "author": "daniel-beck", "createdAt": "2020-03-16T13:24:17Z", "path": "core/src/main/java/hudson/EnvVars.java", "diffHunk": "@@ -391,7 +391,7 @@ public void putIfNotNull(String key, String value) {\n \n     /**\n      * Add entire map but filter null values out.\n-     * @since TODO\n+     * @since 2.214", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAxOTMxNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393019315", "bodyText": "#4463", "author": "daniel-beck", "createdAt": "2020-03-16T13:24:38Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -526,7 +526,7 @@ public static String getSystemProperty(String key) {\n     /**\n      * Returns true if and only if the UI refresh is enabled.\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAxOTgyNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393019825", "bodyText": "#4506", "author": "daniel-beck", "createdAt": "2020-03-16T13:25:26Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1099,7 +1099,7 @@ public static String getFooterURL() {\n      *\n      * @param predicate\n      *      Filter the descriptors based on this predicate\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAxOTkzMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393019932", "bodyText": "#4506", "author": "daniel-beck", "createdAt": "2020-03-16T13:25:35Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1148,7 +1148,7 @@ public static String getFooterURL() {\n     /**\n      * Descriptors shown in the global configuration form to users with {@link Jenkins#SYSTEM_READ} permission.\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMDA2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393020060", "bodyText": "#4506", "author": "daniel-beck", "createdAt": "2020-03-16T13:25:47Z", "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1162,7 +1162,7 @@ public static String getFooterURL() {\n      * @throws AccessDeniedException\n      *      if the user doesn't have the permission.\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMDMyMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393020323", "bodyText": "#4450", "author": "daniel-beck", "createdAt": "2020-03-16T13:26:10Z", "path": "core/src/main/java/hudson/init/InitMilestone.java", "diffHunk": "@@ -89,14 +89,14 @@\n \n     /**\n      * By this milestone, all the system configurations are loaded from file system\n-     * @since TODO\n+     * @since 2.220", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMDM2OQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393020369", "bodyText": "#4450", "author": "daniel-beck", "createdAt": "2020-03-16T13:26:13Z", "path": "core/src/main/java/hudson/init/InitMilestone.java", "diffHunk": "@@ -89,14 +89,14 @@\n \n     /**\n      * By this milestone, all the system configurations are loaded from file system\n-     * @since TODO\n+     * @since 2.220\n      */\n     SYSTEM_CONFIG_LOADED(\"System config loaded\"),\n \n     /**\n      * By this milestone, the system configuration is adapted just in case any plugin (CasC might be an example) needs\n      * to update configuration files\n-     * @since TODO\n+     * @since 2.220", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMDQyNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393020424", "bodyText": "#4450", "author": "daniel-beck", "createdAt": "2020-03-16T13:26:17Z", "path": "core/src/main/java/hudson/init/InitMilestone.java", "diffHunk": "@@ -107,7 +107,7 @@\n \n     /**\n      * By this milestone, any job configuration is adapted or updated just in case any plugin needs to update former/old configurations or init scripts\n-     * @since TODO\n+     * @since 2.220", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMDgwOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393020809", "bodyText": "#4411", "author": "daniel-beck", "createdAt": "2020-03-16T13:26:55Z", "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1383,7 +1383,7 @@ public void doRssFailed(StaplerRequest req, StaplerResponse rsp ) throws IOExcep\n      * Retrieve the RSS feed for the last build for each project executed in this computer.\n      * Only the information from {@link AbstractProject} is displayed since there isn't a proper API to gather\n      * information about the node where the builds are executed for other sorts of projects such as Pipeline\n-     * @since TODO\n+     * @since 2.215", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMTA5Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393021097", "bodyText": "#4411", "author": "daniel-beck", "createdAt": "2020-03-16T13:27:25Z", "path": "core/src/main/java/hudson/model/RSS.java", "diffHunk": "@@ -98,7 +98,7 @@ public static void rss(StaplerRequest req, StaplerResponse rsp, String title, St\n      *      Entries to be listed in the RSS feed.\n      * @param feedAdapter\n      *      Controls how to render entries to RSS.\n-     * @since TODO\n+     * @since 2.215", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMTEyMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393021123", "bodyText": "#4411", "author": "daniel-beck", "createdAt": "2020-03-16T13:27:27Z", "path": "core/src/main/java/hudson/model/RSS.java", "diffHunk": "@@ -81,7 +81,7 @@\n      *      URL of the model object that owns this feed. Relative to the context root.\n      * @param runList\n      *      Entries to be listed in the RSS feed.\n-     * @since TODO\n+     * @since 2.215", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMTgzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393021839", "bodyText": "#4501", "author": "daniel-beck", "createdAt": "2020-03-16T13:28:37Z", "path": "core/src/main/java/hudson/model/Descriptor.java", "diffHunk": "@@ -839,7 +839,7 @@ public String getGlobalConfigPage() {\n      * Override to return something different if appropriate. The only currently supported alternative return value is {@link Jenkins#MANAGE}.\n      *\n      * @return Permission required to globally configure this descriptor.\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMjA5Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393022097", "bodyText": "#4264", "author": "daniel-beck", "createdAt": "2020-03-16T13:29:00Z", "path": "core/src/main/java/hudson/model/Executor.java", "diffHunk": "@@ -857,7 +857,7 @@ public HttpResponse doStop() {\n      * @param runExtId\n      *      if not null, the externalizable id ({@link Run#getExternalizableId()})\n      *      of the build the user expects to interrupt\n-     * @since TODO\n+     * @since 2.209", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMjQyMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393022420", "bodyText": "#4478", "author": "daniel-beck", "createdAt": "2020-03-16T13:29:31Z", "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1307,7 +1307,7 @@ void save(File file) throws IOException {\n     /**\n      * Returns a facet that blocks the deletion of the fingerprint.\n      * Returns null if no such facet.\n-     * @since TODO\n+     * @since 2.223", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzA3Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023073", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:32Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -62,7 +62,7 @@\n     /**\n      * Gets all the items in this collection in a read-only view\n      * that matches supplied Predicate\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzEwOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023109", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:36Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -71,7 +71,7 @@\n \n     /**\n      * Gets a read-only stream of all the items in this collection\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzE1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023152", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:40Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -80,7 +80,7 @@\n     /**\n      * Gets a read-only stream of all the items in this collection\n      * that matches supplied Predicate\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzE4MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023180", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:43Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -132,7 +132,7 @@ default void onRenamed(T item, String oldName, String newName) throws IOExceptio\n \n     /**\n      * Similar to {@link #getAllItems(Class)} with additional predicate filtering\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzIyOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023228", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:47Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -150,7 +150,7 @@ default void onRenamed(T item, String oldName, String newName) throws IOExceptio\n     /**\n      * Gets all the {@link Item}s unordered, lazily and recursively in the {@link ItemGroup} tree\n      * and filter them by the given type and given predicate\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzI5Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023293", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:51Z", "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -413,7 +413,7 @@ public static XmlFile getConfigFile(Item item) {\n      * @param pred Predicate condition to filter items\n      * @return List of items matching given criteria\n      *\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzMzNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023334", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:30:55Z", "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -466,7 +466,7 @@ public static XmlFile getConfigFile(Item item) {\n      * @param <T> the type.\n      * @param <T> the predicate.\n      * @return An {@link Iterable} for all items.\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzM4NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393023384", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:31:00Z", "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -502,7 +502,7 @@ public static XmlFile getConfigFile(Item item) {\n      * @param <T> the type.\n      * @param pred the predicate.\n      * @return An {@link Iterable} for all items.\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNjYyNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393026626", "bodyText": "#4546", "author": "daniel-beck", "createdAt": "2020-03-16T13:36:15Z", "path": "core/src/main/java/hudson/model/ManagementLink.java", "diffHunk": "@@ -143,7 +143,7 @@ public boolean getRequiresPOST() {\n      * when this was introduced can define a category. Plugins with newer core dependency override {@link #getCategory()} instead.\n      *\n      * @return name of the desired category, one of the enum values of {@link Category}, e.g. {@code STATUS}.\n-     * @since TODO\n+     * @since 2.226", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNjY2Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393026662", "bodyText": "#4546", "author": "daniel-beck", "createdAt": "2020-03-16T13:36:18Z", "path": "core/src/main/java/hudson/model/ManagementLink.java", "diffHunk": "@@ -154,7 +154,7 @@ public boolean getRequiresPOST() {\n      * Category for management link, uses {@code String} so it can be done with core dependency pre-dating the version this feature was added.\n      *\n      * @return An enum value of {@link Category}.\n-     * @since TODO\n+     * @since 2.226", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNjY5Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393026693", "bodyText": "#4546", "author": "daniel-beck", "createdAt": "2020-03-16T13:36:22Z", "path": "core/src/main/java/hudson/model/ManagementLink.java", "diffHunk": "@@ -168,7 +168,7 @@ public boolean getRequiresPOST() {\n     /**\n      * Categories supported by this version of core.\n      *\n-     * @since TODO\n+     * @since 2.226", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNzE3Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393027177", "bodyText": "#4529", "author": "daniel-beck", "createdAt": "2020-03-16T13:37:07Z", "path": "core/src/main/java/hudson/model/Run.java", "diffHunk": "@@ -162,7 +162,7 @@\n      * This is applied to the raw, unformatted description. Especially complex formatting\n      * like hyperlinks can result in much less text being shown than this might imply.\n      * Negative values will disable truncation, {@code 0} will enforce empty strings.\n-     * @since TODO\n+     * @since 2.223", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNzM5OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393027398", "bodyText": "#4259", "author": "daniel-beck", "createdAt": "2020-03-16T13:37:27Z", "path": "core/src/main/java/hudson/model/Run.java", "diffHunk": "@@ -992,7 +992,7 @@ protected void dropLinks() {\n      * @return a list with the builds (youngest build first).\n      *   May be smaller than 'numberOfBuilds' or even empty\n      *   if not enough builds satisfying the threshold have been found. Never null.\n-     * @since TODO\n+     * @since 2.202", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODAzMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393028032", "bodyText": "#4488", "author": "daniel-beck", "createdAt": "2020-03-16T13:38:32Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -168,7 +168,7 @@ public long getDataTimestamp() {\n      * does not exist, or is otherwise due for update.\n      * Accepted formats are JSONP or HTML with {@code postMessage}, not raw JSON.\n      * @return null if no updates are necessary, or the future result\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODA4Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393028086", "bodyText": "#4488", "author": "daniel-beck", "createdAt": "2020-03-16T13:38:36Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -199,7 +199,7 @@ public long getDataTimestamp() {\n     /**\n      * Forces an update of the data file from the configured URL, irrespective of the last time the data was retrieved.\n      * @return A {@code FormValidation} indicating the if the update metadata was successfully downloaded from the configured update site\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODE3OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393028178", "bodyText": "#4535", "author": "daniel-beck", "createdAt": "2020-03-16T13:38:46Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -1023,7 +1023,7 @@ private static String get(JSONObject o, String prop) {\n \n         /**\n          * Date when this plugin was released.\n-         * @since TODO\n+         * @since 2.224", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODIzNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393028235", "bodyText": "#4299", "author": "daniel-beck", "createdAt": "2020-03-16T13:38:51Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -1325,7 +1325,7 @@ public boolean fixesSecurityVulnerabilities() {\n         /**\n          * Get the list of incompatible dependencies (if there are any, as determined by isNeededDependenciesCompatibleWithInstalledVersion)\n          *\n-         * @since TODO\n+         * @since 2.203", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyOTM2Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393029362", "bodyText": "#4506", "author": "daniel-beck", "createdAt": "2020-03-16T13:40:38Z", "path": "core/src/main/java/hudson/security/ACL.java", "diffHunk": "@@ -89,7 +89,7 @@ public final void checkPermission(@Nonnull Permission p) {\n      * @throws IllegalArgumentException\n      *      if no permissions are provided\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyOTc3Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393029772", "bodyText": "#4506", "author": "daniel-beck", "createdAt": "2020-03-16T13:41:18Z", "path": "core/src/main/java/hudson/security/AccessControlled.java", "diffHunk": "@@ -51,7 +51,7 @@ default void checkPermission(@Nonnull Permission permission) throws AccessDenied\n      * Convenient short-cut for {@code getACL().checkAnyPermission(permission)}\n      * @see ACL#checkAnyPermission(Permission...)\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyOTgwOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393029809", "bodyText": "#4506", "author": "daniel-beck", "createdAt": "2020-03-16T13:41:22Z", "path": "core/src/main/java/hudson/security/AccessControlled.java", "diffHunk": "@@ -68,7 +68,7 @@ default boolean hasPermission(@Nonnull Permission permission) {\n      * Convenient short-cut for {@code getACL().hasAnyPermission(permission)}\n      * @see ACL#hasAnyPermission(Permission...)\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMDA4MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393030081", "bodyText": "#4369", "author": "daniel-beck", "createdAt": "2020-03-16T13:41:44Z", "path": "core/src/main/java/hudson/slaves/JNLPLauncher.java", "diffHunk": "@@ -148,14 +148,14 @@ public boolean isLaunchSupported() {\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.216", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMDExOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393030119", "bodyText": "#4369", "author": "daniel-beck", "createdAt": "2020-03-16T13:41:47Z", "path": "core/src/main/java/hudson/slaves/JNLPLauncher.java", "diffHunk": "@@ -148,14 +148,14 @@ public boolean isLaunchSupported() {\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.216\n      */\n     public boolean isWebSocket() {\n         return webSocket;\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.216", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMDQxMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393030411", "bodyText": "#4369", "author": "daniel-beck", "createdAt": "2020-03-16T13:42:16Z", "path": "core/src/main/java/hudson/triggers/SafeTimerTask.java", "diffHunk": "@@ -52,7 +52,7 @@\n \n     /**\n      * Lambda-friendly means of creating a task.\n-     * @since TODO\n+     * @since 2.216", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMDQ1NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393030454", "bodyText": "#4369", "author": "daniel-beck", "createdAt": "2020-03-16T13:42:19Z", "path": "core/src/main/java/hudson/triggers/SafeTimerTask.java", "diffHunk": "@@ -64,7 +64,7 @@ protected void doRun() throws Exception {\n     }\n     /**\n      * @see #of\n-     * @since TODO\n+     * @since 2.216", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMTEzNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393031135", "bodyText": "#4478", "author": "daniel-beck", "createdAt": "2020-03-16T13:43:25Z", "path": "core/src/main/java/jenkins/model/FingerprintFacet.java", "diffHunk": "@@ -106,7 +106,7 @@ public long getTimestamp() {\n     /**\n      * Returns whether Fingerprint deletion has been blocked by this Facet.\n      * Returns false by default. Override the default to block the deletion of the associated Fingerprint.\n-     * @since TODO\n+     * @since 2.223", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMTU0MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393031541", "bodyText": "#3935", "author": "daniel-beck", "createdAt": "2020-03-16T13:44:04Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1061,7 +1061,7 @@ private Object readResolve() {\n      * Retrieve the proxy configuration.\n      *\n      * @return the proxy configuration\n-     * @since TODO\n+     * @since 2.205", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMTU4Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393031582", "bodyText": "#3935", "author": "daniel-beck", "createdAt": "2020-03-16T13:44:07Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1072,7 +1072,7 @@ public ProxyConfiguration getProxy() {\n      * Set the proxy configuration.\n      * \n      * @param proxy the proxy to set\n-     * @since TODO\n+     * @since 2.205", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMTk3MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393031971", "bodyText": "#4549", "author": "daniel-beck", "createdAt": "2020-03-16T13:44:42Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1376,7 +1376,7 @@ public UpdateCenter getUpdateCenter() {\n     /**\n      * If usage statistics has been disabled\n      *\n-     * @since TODO\n+     * @since 2.226", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMjAxMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393032012", "bodyText": "#4549", "author": "daniel-beck", "createdAt": "2020-03-16T13:44:45Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1388,7 +1388,7 @@ public Boolean isNoUsageStatistics() {\n      *\n      * @return {@code true} if usage statistics should be collected.\n      *                Defaults to {@code true} when {@link #noUsageStatistics} is not set.\n-     * @since TODO\n+     * @since 2.226", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3NTMzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r419175339", "bodyText": "Corrected in #4706", "author": "daniel-beck", "createdAt": "2020-05-03T23:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMjAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMjA1MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393032051", "bodyText": "#4549", "author": "daniel-beck", "createdAt": "2020-03-16T13:44:49Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1397,7 +1397,7 @@ public boolean isUsageStatisticsCollected() {\n     /**\n      * Sets the noUsageStatistics flag\n      *\n-     * @since TODO\n+     * @since 2.226", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3NTM0Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r419175343", "bodyText": "Corrected in #4706", "author": "daniel-beck", "createdAt": "2020-05-03T23:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMjA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMjQxOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393032418", "bodyText": "#4501", "author": "daniel-beck", "createdAt": "2020-03-16T13:45:22Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -5310,7 +5310,7 @@ public boolean shouldShowStackTrace() {\n      * <p>This permission is disabled by default and support for it considered experimental.\n      * Administrators can set the system property {@code jenkins.security.ManagePermission} to enable it.</p>\n      *\n-     * @since TODO\n+     * @since 2.222", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMjU3OQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393032579", "bodyText": "#4469", "author": "daniel-beck", "createdAt": "2020-03-16T13:45:40Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1794,7 +1794,7 @@ public String getFullDisplayName() {\n      * Gets just the immediate children of {@link Jenkins} based on supplied predicate.\n      *\n      * @see #getAllItems(Class)\n-     * @since TODO\n+     * @since 2.221", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMzAyMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393033020", "bodyText": "#3894", "author": "daniel-beck", "createdAt": "2020-03-16T13:46:24Z", "path": "core/src/main/java/jenkins/telemetry/Telemetry.java", "diffHunk": "@@ -145,7 +145,7 @@ public static boolean isDisabled() {\n      * Returns true iff we're in the time period during which this is supposed to collect data.\n      * @return true iff we're in the time period during which this is supposed to collect data\n      *\n-     * @since TODO\n+     * @since 2.202", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMzM2OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393033368", "bodyText": "#4369", "author": "daniel-beck", "createdAt": "2020-03-16T13:46:58Z", "path": "core/src/main/java/jenkins/websocket/WebSocketSession.java", "diffHunk": "@@ -39,7 +39,7 @@\n /**\n  * One WebSocket connection.\n  * @see WebSockets\n- * @since TODO\n+ * @since 2.216", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMzQwNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4587#discussion_r393033406", "bodyText": "#4369", "author": "daniel-beck", "createdAt": "2020-03-16T13:47:02Z", "path": "core/src/main/java/jenkins/websocket/WebSockets.java", "diffHunk": "@@ -41,7 +41,7 @@\n \n /**\n  * Support for serving WebSocket responses.\n- * @since TODO\n+ * @since 2.216", "originalCommit": "c4f90b7dbd16df5b593376e8e8e14c1fa91eda7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}