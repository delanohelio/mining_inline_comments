{"pr_number": 4632, "pr_title": "Ensure that encoded console annotations are stripped from system logger messages", "pr_createdAt": "2020-04-06T21:46:56Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4632", "timeline": [{"oid": "bf858b7e5534130e44103925477e317feaa00803", "url": "https://github.com/jenkinsci/jenkins/commit/bf858b7e5534130e44103925477e317feaa00803", "message": "Fixing console annotation masking in LogTaskListener", "committedDate": "2020-04-06T21:44:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODU3Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408577", "bodyText": "Overridden, so already worked.", "author": "jglick", "createdAt": "2020-04-06T21:47:16Z", "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));", "originalCommit": "bf858b7e5534130e44103925477e317feaa00803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODYzNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408635", "bodyText": "Delegates to annotate, so already worked.", "author": "jglick", "createdAt": "2020-04-06T21:47:25Z", "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));\n+        l.getLogger().println(\"from annotate\");\n+        l.hyperlink(url, \"from hyperlink\");", "originalCommit": "bf858b7e5534130e44103925477e317feaa00803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODcyNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408726", "bodyText": "Bypassed the supposed fix.", "author": "jglick", "createdAt": "2020-04-06T21:47:38Z", "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));\n+        l.getLogger().println(\"from annotate\");\n+        l.hyperlink(url, \"from hyperlink\");\n+        l.getLogger().println();\n+        l.getLogger().println(HyperlinkNote.encodeTo(url, \"there\") + \" from encoded\");", "originalCommit": "bf858b7e5534130e44103925477e317feaa00803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODkzNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408935", "bodyText": "Prior to fix, failed with\norg.junit.ComparisonFailure: expected:<...te, from hyperlink, []there from encoded]> but was:<...te, from hyperlink, [ha:////4MQbm/skxyBfes+iRowS5J8SNAG9lLJqegMyU8lLZregAAAAlB+LCAAAAAAAAP9b85aBtbiIQSajNKU4P08vOT+vOD8nVc+jsiC1KCczL9svvyTVzHb1RttJBUeZGJg8GdhyUvPSSzJ8GJhLi3JKGIR8shLLEvVzEvPS9YNLijLz0q0rihik0IxzhtAgwxgggJGJgaGiAMhgLWEQzigpKbDS18/LL89ILUrVy0st0QcAFd2f8JgAAAA=]there from encoded]>\n\tat org.junit.Assert.assertEquals(Assert.java:117)\n\tat org.junit.Assert.assertEquals(Assert.java:146)\n\tat hudson.util.LogTaskListenerTest.annotations(LogTaskListenerTest.java:54)", "author": "jglick", "createdAt": "2020-04-06T21:48:06Z", "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));\n+        l.getLogger().println(\"from annotate\");\n+        l.hyperlink(url, \"from hyperlink\");\n+        l.getLogger().println();\n+        l.getLogger().println(HyperlinkNote.encodeTo(url, \"there\") + \" from encoded\");\n+        assertEquals(\"[plain line, from annotate, from hyperlink, there from encoded]\", logging.getMessages().toString());", "originalCommit": "bf858b7e5534130e44103925477e317feaa00803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwOTA1NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404409055", "bodyText": "Superfluous now.", "author": "jglick", "createdAt": "2020-04-06T21:48:25Z", "path": "core/src/main/java/hudson/util/LogTaskListener.java", "diffHunk": "@@ -47,25 +47,20 @@\n     private final TaskListener delegate;\n \n     public LogTaskListener(Logger logger, Level level) {\n-        delegate = new StreamTaskListener(new LogOutputStream(logger, level, new Throwable().getStackTrace()[1]));\n+        delegate = new StreamTaskListener(new PlainTextConsoleOutputStream(new LogOutputStream(logger, level, new Throwable().getStackTrace()[1])));\n     }\n \n     @Override\n     public PrintStream getLogger() {\n         return delegate.getLogger();\n     }\n \n-    @Override\n-    @SuppressWarnings(\"rawtypes\")\n-    public void annotate(ConsoleNote ann) {", "originalCommit": "bf858b7e5534130e44103925477e317feaa00803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}