{"pr_number": 4391, "pr_title": "DHFPROD-5162: comprehensive e2e tests for different hc roles", "pr_createdAt": "2020-08-12T21:15:20Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4391", "timeline": [{"oid": "a2db417905b3aaf0752239a5b0911d1dd4f79810", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a2db417905b3aaf0752239a5b0911d1dd4f79810", "message": "DHFPROD-5162: comprehensive e2e tests for different hc roles\n\nDHFPROD-5162: fix unit tests", "committedDate": "2020-08-12T21:17:39Z", "type": "commit"}, {"oid": "a2db417905b3aaf0752239a5b0911d1dd4f79810", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a2db417905b3aaf0752239a5b0911d1dd4f79810", "message": "DHFPROD-5162: comprehensive e2e tests for different hc roles\n\nDHFPROD-5162: fix unit tests", "committedDate": "2020-08-12T21:17:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1NDY5Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4391#discussion_r469554697", "bodyText": "I added this since we are running tests by setting hub-central-developer role to hc-test-user.", "author": "bsrikan", "createdAt": "2020-08-12T21:22:48Z", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "diffHunk": "@@ -25,6 +25,10 @@ describe('json scenario for snippet on browse documents page', () => {\n     browsePage.waitForTableToLoad();\n   });\n \n+  afterEach(() => {\n+    cy.resetTestUser();\n+  })\n+", "originalCommit": "a2db417905b3aaf0752239a5b0911d1dd4f79810", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1NTg0OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4391#discussion_r469555848", "bodyText": "added this method to verify Map, Custom tabs in Curate tile that is exposed on roles. IDE will give a better picture of the params. Added docs to help understand the params, just mouse over the method name for more details in your IDE.", "author": "bsrikan", "createdAt": "2020-08-12T21:25:16Z", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/login/authorization.spec.tsx", "diffHunk": "@@ -48,136 +56,146 @@ describe('login', () => {\n \n   });\n \n-  xit('should verify auto logout after inactivity', () => {\n-      cy.loginAsDeveloper().withUI();\n-      toolbar.getCurateToolbarIcon().click();\n-      tiles.getCurateTile().should('exist');\n-      //Verify warning appears before automatic logout\n-      cy.findByText('Customer').click();\n-      cy.findByText('Mapping').should('exist');\n-\n-\n-\n-      //Timeout pop up doesnt close an open modal\n-\n-      //Verify user is logged out after inactivity\n-  });\n-\n-  xit('should verify download of an HC project', () => {\n-      cy.loginAsTestUserWithRoles('hub-central-downloader').withUI();\n-      projectInfo.getAboutProject();\n-      projectInfo.getDownloadButton().click();\n-\n-  });\n-\n-  it('should display appropriate tiles for hub-central-user', () => {\n-      cy.loginAsTestUser().withUI()\n+  it('should only enable Explorer tile for hub-central-user', () => {\n+      cy.loginAsTestUserWithRoles('hub-central-saved-query-user').withUI()\n           .url().should('include', '/tiles');\n         //All tiles but Explore, should show a tooltip that says contact your administrator\n       ['Load', 'Model', 'Curate', 'Run'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-          cy.waitUntil(() => cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`))\n+          toolbar.getToolBarIcon(tile).should('have.attr', {style: 'cursor: not-allowed'})\n       });\n \n       toolbar.getExploreToolbarIcon().trigger('mouseover');\n       cy.contains('Explore');\n-      projectInfo.getAboutProject().should('exist');\n       toolbar.getExploreToolbarIcon().click();\n-      cy.waitUntil(() => cy.findByText('Search through loaded data and curated data'));\n+      cy.findByText('Search through loaded data and curated data');\n       tiles.getExploreTile().should('exist');\n+      projectInfo.getAboutProject().click();\n+      projectInfo.waitForInfoPageToLoad();\n+      projectInfo.getDownloadButton().should('be.disabled');\n+      projectInfo.getClearButton().should('be.disabled');\n   });\n \n-  it('should display appropriate tiles for hub-central-entity-model-reader', () => {\n-      cy.loginAsTestUserWithRoles('hub-central-entity-model-reader').withUI()\n+  it('should only enable Model and Explorer tile for hub-central-entity-model-reader', () => {\n+      cy.loginAsTestUserWithRoles('hub-central-entity-model-reader', 'hub-central-saved-query-user').withUI()\n           .url().should('include', '/tile');\n       //All tiles but Explore and Model, should show a tooltip that says contact your administrator\n       ['Load', 'Curate', 'Run'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-        //   cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`);\n-          cy.waitUntil(() => cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`))\n+          toolbar.getToolBarIcon(tile).should('have.attr', {style: 'cursor: not-allowed'})\n       });\n \n-      ['Model', 'Explore'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-        //   cy.contains(`${tile}`);\n-          cy.waitUntil(() => cy.contains(`${tile}`))\n-      });\n-\n-      //Modeling tests will verify that a valid user is able to access Model tile and its features\n+      toolbar.getModelToolbarIcon().click();\n+      tiles.getModelTile().should('exist');\n+      modelPage.getAddEntityButton().should('be.disabled');\n   });\n \n-  it('should display appropriate tiles for hub-central-load-reader', () => {\n-      cy.loginAsTestUserWithRoles('hub-central-load-reader').withUI()\n+  it('should only enable Load and Explorer tile for hub-central-load-reader', () => {\n+      let stepName = 'loadCustomersJSON';\n+      let flowName= 'personJSON'\n+      cy.loginAsTestUserWithRoles('hub-central-load-reader').withRequest()\n           .url().should('include', '/tile');\n       //All tiles but Explore and Model, should show a tooltip that says contact your administrator\n       ['Model', 'Curate', 'Run'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-        //   cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`);\n-          cy.waitUntil(() => cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`))\n-      });\n-\n-      ['Load', 'Explore'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-        //   cy.contains(`${tile}`);\n-          cy.waitUntil(() => cy.contains(`${tile}`))\n+          toolbar.getToolBarIcon(tile).should('have.attr', {style: 'cursor: not-allowed'})\n       });\n \n-      //Load Data tests will verify that a valid user is able to access Load tile and its features\n+      toolbar.getLoadToolbarIcon().click();\n+      loadPage.loadView('th-large').should('be.visible');\n+      loadPage.addNewButton('card').should('not.be.visible');\n+      loadPage.stepSettings(stepName).click();\n+      loadPage.stepNameInSettings().should('have.text', stepName);\n+      loadPage.saveSettings(stepName).should('be.disabled');\n+      loadPage.cancelSettings(stepName).click();\n+      loadPage.editStepInCardView(stepName).click();\n+      loadPage.saveButton().should('be.disabled');\n+      loadPage.cancelButton().click();\n+      loadPage.deleteStepDisabled(stepName).should('exist');\n+      loadPage.stepName(stepName).trigger('mouseover');\n+      loadPage.addToNewFlow(stepName).click();\n+      runPage.newFlowModal().should('not.be.visible');\n+      loadPage.existingFlowsList(stepName).click();\n+      loadPage.existingFlowsList(flowName).should('not.be.visible');\n+\n+      loadPage.loadView('table').click();\n+      tiles.waitForTableToLoad();\n+      loadPage.addToFlowDisabled(stepName).should('exist');\n+      loadPage.stepSettings(stepName).click();\n+      loadPage.saveSettings(stepName).should('be.disabled');\n+      loadPage.cancelSettings(stepName).click();\n+      loadPage.stepName(stepName).click();\n+      loadPage.saveButton().should('be.disabled');\n+      loadPage.cancelButton().click();\n+      loadPage.deleteStepDisabled(stepName).should('exist');\n   });\n \n-  it('should display appropriate tiles for hub-central-mapping-reader', () => {\n-      cy.loginAsTestUserWithRoles('hub-central-mapping-reader').withUI()\n+  it('should only enable Curate and Explorer tile for hub-central-mapping-reader', () => {\n+      let entityTypeId = 'Customer'\n+      let mapStepName = 'mapCustomersXML'\n+      cy.loginAsTestUserWithRoles('hub-central-mapping-reader').withRequest()\n           .url().should('include', '/tile');\n       //All tiles but Explore and Model, should show a tooltip that says contact your administrator\n       ['Load', 'Model', 'Run'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-        //   cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`);\n-          cy.waitUntil(() => cy.contains(`${tile}: Contact your security administrator to get the roles and permissions required to access this functionality.`))\n+          toolbar.getToolBarIcon(tile).should('have.attr', {style: 'cursor: not-allowed'})\n       });\n \n-      ['Curate', 'Explore'].forEach((tile) => {\n-          toolbar.getToolBarIcon(tile).trigger('mouseover');\n-        //   cy.contains(`${tile}`);\n-          cy.waitUntil(() => cy.contains(`${tile}`))\n-      });\n-\n-      //Mapping tests will verify that a valid user is able to access Curate tile and its features\n+      toolbar.getCurateToolbarIcon().click();\n+      curatePage.toggleEntityTypeId(entityTypeId);\n+      curatePage.verifyTabs(entityTypeId, 'be.visible', 'not.exist');", "originalCommit": "a2db417905b3aaf0752239a5b0911d1dd4f79810", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MzQ3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4391#discussion_r469563476", "bodyText": "@wooldridge @briantang we need to add these to all the modal in future PRs so they dont lie around hidden in the DOM. It affects the tests since labels like Yes/No or Cancel/Save is common between them.", "author": "bsrikan", "createdAt": "2020-08-12T21:42:14Z", "path": "marklogic-data-hub-central/ui/src/components/flows/flows.tsx", "diffHunk": "@@ -190,6 +190,7 @@ const Flows: React.FC<Props> = (props) => {\n             onOk={() => onOk(flowName)}\n             onCancel={() => onCancel()}\n             width={350}\n+            destroyOnClose={true}", "originalCommit": "a2db417905b3aaf0752239a5b0911d1dd4f79810", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NTU0Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4391#discussion_r469565543", "bodyText": "@bsrikan Makes sense. Should I create a task for adding this property in to all Modals across the app?", "author": "briantang", "createdAt": "2020-08-12T21:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MzQ3Ng=="}], "type": "inlineReview"}]}