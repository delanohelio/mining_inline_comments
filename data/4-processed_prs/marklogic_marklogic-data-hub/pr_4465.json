{"pr_number": 4465, "pr_title": "DHFPROD-5793: Find entity type references in referenced steps", "pr_createdAt": "2020-08-22T00:27:59Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4465", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAyMDk5NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475020995", "bodyText": "This will be added back in via @bsrikan's PR #4437", "author": "akshaysonvane", "createdAt": "2020-08-22T00:30:19Z", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/writer.spec.tsx", "diffHunk": "@@ -125,8 +125,6 @@ describe('Entity Modeling: Writer Role', () => {\n     propertyTable.editProperty('fname');\n     cy.waitUntil(() => propertyModal.getToggleStepsButton().should('exist')).click();\n     cy.contains('mapPersonJSON').should('be.visible');\n-    cy.contains('match-person').should('be.visible');\n-    cy.contains('merge-person').should('be.visible');", "originalCommit": "298e428febb4c55f4a40ace2daa5191ed6733761", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a38b3a2a63247b903651a89666545e7a553b2ea3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a38b3a2a63247b903651a89666545e7a553b2ea3", "message": "DHFPROD-5793: Find entity type references in referenced steps", "committedDate": "2020-08-22T07:10:03Z", "type": "commit"}, {"oid": "a38b3a2a63247b903651a89666545e7a553b2ea3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a38b3a2a63247b903651a89666545e7a553b2ea3", "message": "DHFPROD-5793: Find entity type references in referenced steps", "committedDate": "2020-08-22T07:10:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5OTM0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475099342", "bodyText": "Nice, thanks for taking the time to rename this!", "author": "rjrudin", "createdAt": "2020-08-22T15:03:27Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -259,7 +259,7 @@ private ModelsService newService() {\n     }\n \n     public static class ModelReferencesInfo {\n-        public List<String> stepAndMappingNames;\n+        public List<String> stepNames;", "originalCommit": "a38b3a2a63247b903651a89666545e7a553b2ea3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5OTYwNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475099604", "bodyText": "Pinging @fsnow and @ryanjdew about this - one thing I'd like for us to do when possible is use more verbose property names in DHF documents. For example, if we had \"stepName\" instead of \"name\", we could consider a range index on \"stepName\", and thus have this be more efficient by not having to grab documents. We may not be able to do much of this in the 5.x timeframe - but perhaps for matching and merging, we'll have opportunities to use more verbose (and often self-describing) names that are then good candidates for range indexes which allow for better DHF performance.", "author": "rjrudin", "createdAt": "2020-08-22T15:06:34Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/entity-lib.sjs", "diffHunk": "@@ -218,31 +218,12 @@ function deleteModel(entityName) {\n  * @returns {[]}\n  */\n function findModelReferencesInSteps(entityName, entityTypeId) {\n-  let steps = [];\n-\n-  const mappingQuery = cts.andQuery([\n-    cts.collectionQuery('http://marklogic.com/data-hub/mappings'),\n-    cts.jsonPropertyValueQuery(\"targetEntityType\", [entityName, entityTypeId])\n+  const stepQuery = cts.andQuery([\n+    cts.collectionQuery('http://marklogic.com/data-hub/steps'),\n+    cts.jsonPropertyValueQuery([\"targetEntityType\", \"targetEntity\"], [entityName, entityTypeId])\n   ]);\n-  steps = cts.search(mappingQuery).toArray().map(mapping => mapping.toObject().name);\n-\n-\n-  const flowQuery = cts.andQuery([\n-    cts.collectionQuery('http://marklogic.com/data-hub/flow'),\n-    cts.notQuery(cts.collectionQuery(consts.HUB_ARTIFACT_COLLECTION)),\n-    cts.jsonPropertyValueQuery(\"targetEntity\", entityName)\n-  ]);\n-  cts.search(flowQuery).toArray()\n-    .map(flow => flow.toObject())\n-    .filter(flow => flow.steps)\n-    .forEach(flow => {\n-      const flowSteps = flow.steps;\n-      Object.keys(flowSteps)\n-        .filter(stepNumber => flowSteps[stepNumber].options && flowSteps[stepNumber].options.targetEntity === entityName)\n-        .forEach(stepNumber => steps.push(flowSteps[stepNumber].name));\n-    });\n \n-  return steps;\n+  return cts.search(stepQuery).toArray().map(step => step.toObject().name);", "originalCommit": "a38b3a2a63247b903651a89666545e7a553b2ea3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTEwMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475109102", "bodyText": "@SameeraPriyathamTadikonda, @bsrikan can we publish and use mavenLocal to grab the ml-data-hub:5.3-SNAPSHOT dependency?\nUsing maven-snapshots brings in an older version of data-hub which does not have the changes made here and so the tests are failing.", "author": "akshaysonvane", "createdAt": "2020-08-22T16:54:54Z", "path": "marklogic-data-hub-central/ui/e2e/hc-qa-project/build.gradle", "diffHunk": "@@ -1,6 +1,5 @@\n buildscript {\n     repositories {\n-        maven {url 'http://distro.marklogic.com/nexus/repository/maven-snapshots/'}", "originalCommit": "a38b3a2a63247b903651a89666545e7a553b2ea3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMDc1MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475110751", "bodyText": "Yes, I'm publishing the snapshot before running the tests on PR. So we can remove this here.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-08-22T17:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxODY5NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475718695", "bodyText": "@SameeraPriyathamTadikonda how about the tests that run on DHS. Do we publish to maven local for those tests as well.", "author": "bsrikan", "createdAt": "2020-08-24T15:55:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTczOTc5MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475739791", "bodyText": "I've removed this commit. We will be using nexus for tests that run on DHS.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-08-24T16:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc1NDE3OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475754179", "bodyText": "This code is now merged with nexus repo removed from build.gradle", "author": "bsrikan", "createdAt": "2020-08-24T16:49:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTEwMg=="}], "type": "inlineReview"}, {"oid": "fb0a399c2633c2ce9d49f099a6f552f15b8a0c67", "url": "https://github.com/marklogic/marklogic-data-hub/commit/fb0a399c2633c2ce9d49f099a6f552f15b8a0c67", "message": "DHFPROD-5793: Publish to maven local", "committedDate": "2020-08-22T18:06:12Z", "type": "forcePushed"}, {"oid": "eb0fd1eaa6cc195e5fa51951d996e16d98bc7568", "url": "https://github.com/marklogic/marklogic-data-hub/commit/eb0fd1eaa6cc195e5fa51951d996e16d98bc7568", "message": "Adding local maven repo", "committedDate": "2020-08-22T19:55:49Z", "type": "forcePushed"}, {"oid": "8701ec03c170eb4a6f3480232ee46b4e2565404d", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8701ec03c170eb4a6f3480232ee46b4e2565404d", "message": "DHFPROD-5722:Adding local maven repo", "committedDate": "2020-08-22T20:24:02Z", "type": "forcePushed"}, {"oid": "8e84a6db1d7fec28d4a60a3fda784355fa48968f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8e84a6db1d7fec28d4a60a3fda784355fa48968f", "message": "DHFPROD-5722:Adding local maven repo", "committedDate": "2020-08-22T20:43:23Z", "type": "commit"}, {"oid": "8e84a6db1d7fec28d4a60a3fda784355fa48968f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8e84a6db1d7fec28d4a60a3fda784355fa48968f", "message": "DHFPROD-5722:Adding local maven repo", "committedDate": "2020-08-22T20:43:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwOTE1Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4465#discussion_r475709152", "bodyText": "I think this fixes another bug which is that the original query was querying on the mappings collection, but that will pick up existing legacy mappings that have not yet been deleted. And we don't care about those.", "author": "rjrudin", "createdAt": "2020-08-24T15:41:24Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/entity-lib.sjs", "diffHunk": "@@ -218,31 +218,12 @@ function deleteModel(entityName) {\n  * @returns {[]}\n  */\n function findModelReferencesInSteps(entityName, entityTypeId) {\n-  let steps = [];\n-\n-  const mappingQuery = cts.andQuery([\n-    cts.collectionQuery('http://marklogic.com/data-hub/mappings'),\n-    cts.jsonPropertyValueQuery(\"targetEntityType\", [entityName, entityTypeId])\n+  const stepQuery = cts.andQuery([\n+    cts.collectionQuery('http://marklogic.com/data-hub/steps'),", "originalCommit": "8e84a6db1d7fec28d4a60a3fda784355fa48968f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}