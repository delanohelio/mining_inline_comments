{"pr_number": 4060, "pr_title": "DHFPROD-5031: Adding load and mapping steps to flows", "pr_createdAt": "2020-06-06T22:28:16Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4060", "timeline": [{"oid": "f1cad825290206e474044ab747ad07b7299f1da7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f1cad825290206e474044ab747ad07b7299f1da7", "message": "DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031 - Fixing the tileView tests by adding rendering the components with router (+1 squashed commit)\nSquashed commits:\n[6e557bf98] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Tests for options to add Load and Mapping steps to Flow (+1 squashed commit)\nSquashed commits:\n[9782be6ae] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Added logic to update active keys for flows collapse panels (+1 squashed commit)\nSquashed commits:\n[df78cb329] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Fixed few links between step and flows (+1 squashed commit)\nSquashed commits:\n[67adb6269] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Removing unnecessary comment (+1 squashed commit)\nSquashed commits:\n[40084a866] DHFPROD-5031: Adding step to a new flow logic for load and mapping", "committedDate": "2020-06-06T22:53:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NDQ0NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436694444", "bodyText": "Can remove comment", "author": "rjrudin", "createdAt": "2020-06-08T13:21:22Z", "path": "marklogic-data-hub-central/ui/src/pages/Run.tsx", "diffHunk": "@@ -20,8 +20,9 @@ const Statuses = {\n     'FINISHED_WITH_ERRORS': 'finished_with_errors'\n }\n \n-const Run: React.FC = () => {\n-   const { resetSessionTime } = useContext(UserContext)\n+// TODO Rename Bench component to Run", "originalCommit": "f1cad825290206e474044ab747ad07b7299f1da7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTUyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436865521", "bodyText": "Done", "author": "xnikhil08", "createdAt": "2020-06-08T17:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NDQ0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NjI1OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436846259", "bodyText": "Are we adding a label here purely for testing? We dont allow duplicate step names. So do we need a lebel text.", "author": "bsrikan", "createdAt": "2020-06-08T16:43:51Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-card.tsx", "diffHunk": "@@ -180,20 +194,27 @@ const LoadCard: React.FC<Props> = (props) => {\n                             size=\"small\"\n                         >\n                             <div className={styles.formatContainer}>\n-                                <div style={sourceFormatStyle(elem.sourceFormat)}>{elem.sourceFormat.toUpperCase()}</div>\n+                                <div style={sourceFormatStyle(elem.sourceFormat)} aria-label={`${elem.name}-sourceFormat`}>{elem.sourceFormat.toUpperCase()}</div>\n                             </div>\n-                            <div className={styles.stepNameStyle}>{getInitialChars(elem.name, 25, '...')}</div>\n+                            <div className={styles.stepNameStyle} aria-label={`${elem.name}-stepName`}>{getInitialChars(elem.name, 25, '...')}</div>", "originalCommit": "f1cad825290206e474044ab747ad07b7299f1da7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTQxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436865414", "bodyText": "Yes, it was added only for testing purpose initially. But i don't think we need it anymore so have removed it.", "author": "xnikhil08", "createdAt": "2020-06-08T17:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NjI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0Nzc3Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436847777", "bodyText": "any particular reason we are waiting for element here, there is no preceding fireEvent.", "author": "bsrikan", "createdAt": "2020-06-08T16:46:26Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-card.test.tsx", "diffHunk": "@@ -1,10 +1,118 @@\n import React from 'react';\n-import { shallow } from 'enzyme';\n+import { render, fireEvent, wait, cleanup, waitForElement } from '@testing-library/react';\n+import { MemoryRouter } from 'react-router-dom';\n import LoadCard from './load-card';\n+import data from '../../config/test-data.config';\n+import axiosMock from 'axios';\n+import mocks from '../../config/mocks.config';\n+import { AuthoritiesService, AuthoritiesContext } from '../../util/authorities';\n+\n+jest.mock('axios');\n+\n+const mockHistoryPush = jest.fn();\n+\n+jest.mock('react-router-dom', () => ({\n+  ...jest.requireActual('react-router-dom'),\n+  useHistory: () => ({\n+    push: mockHistoryPush,\n+  }),\n+}));\n \n describe('Load Card component', () => {\n-  it('should render correctly', () => {\n-    shallow(<LoadCard data deleteLoadArtifact\n-      createLoadArtifact/>);\n+\n+  beforeEach(() => {\n+    mocks.loadAPI(axiosMock);\n+  })\n+\n+  afterEach(() => {\n+    jest.clearAllMocks();\n+    cleanup();\n+  })\n+\n+  test('Load Card - Add step to an existing Flow', async () => {\n+    const authorityService = new AuthoritiesService();\n+    authorityService.setAuthorities(['readIngestion', 'writeIngestion', 'writeFlow']);\n+    const { getByText, getByLabelText, getByTestId } = render(\n+      <MemoryRouter>\n+        <AuthoritiesContext.Provider value={authorityService}>\n+          <LoadCard \n+            {...data.loadData}\n+            flows={data.flows}\n+            canWriteFlow={true}\n+            addStepToFlow={jest.fn()}\n+            addStepToNew={jest.fn()} />\n+        </AuthoritiesContext.Provider>\n+      </MemoryRouter>\n+    )\n+\n+    //Check if the card is rendered properly\n+    expect(getByText('Add New')).toBeInTheDocument();\n+    expect(getByText('testLoadXML')).toBeInTheDocument();\n+    expect(getByLabelText('testLoadXML-sourceFormat')).toBeInTheDocument();\n+    expect(getByText('Last Updated: 04/15/2020 2:22PM')).toBeInTheDocument();\n+    expect(await (waitForElement(() => getByLabelText('testLoadXML-stepName')))).toBeInTheDocument();", "originalCommit": "f1cad825290206e474044ab747ad07b7299f1da7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDQ1Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436864457", "bodyText": "It was added earlier but i guess i never removed it. Did it now as its not needed anymore.", "author": "xnikhil08", "createdAt": "2020-06-08T17:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0Nzc3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0OTc0NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436849745", "bodyText": "At any point only one step could be moused over to display \"Add to New/Existing Flow\" right. Do we need testid. We can just use getByText.", "author": "bsrikan", "createdAt": "2020-06-08T16:49:27Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-card.test.tsx", "diffHunk": "@@ -1,10 +1,118 @@\n import React from 'react';\n-import { shallow } from 'enzyme';\n+import { render, fireEvent, wait, cleanup, waitForElement } from '@testing-library/react';\n+import { MemoryRouter } from 'react-router-dom';\n import LoadCard from './load-card';\n+import data from '../../config/test-data.config';\n+import axiosMock from 'axios';\n+import mocks from '../../config/mocks.config';\n+import { AuthoritiesService, AuthoritiesContext } from '../../util/authorities';\n+\n+jest.mock('axios');\n+\n+const mockHistoryPush = jest.fn();\n+\n+jest.mock('react-router-dom', () => ({\n+  ...jest.requireActual('react-router-dom'),\n+  useHistory: () => ({\n+    push: mockHistoryPush,\n+  }),\n+}));\n \n describe('Load Card component', () => {\n-  it('should render correctly', () => {\n-    shallow(<LoadCard data deleteLoadArtifact\n-      createLoadArtifact/>);\n+\n+  beforeEach(() => {\n+    mocks.loadAPI(axiosMock);\n+  })\n+\n+  afterEach(() => {\n+    jest.clearAllMocks();\n+    cleanup();\n+  })\n+\n+  test('Load Card - Add step to an existing Flow', async () => {\n+    const authorityService = new AuthoritiesService();\n+    authorityService.setAuthorities(['readIngestion', 'writeIngestion', 'writeFlow']);\n+    const { getByText, getByLabelText, getByTestId } = render(\n+      <MemoryRouter>\n+        <AuthoritiesContext.Provider value={authorityService}>\n+          <LoadCard \n+            {...data.loadData}\n+            flows={data.flows}\n+            canWriteFlow={true}\n+            addStepToFlow={jest.fn()}\n+            addStepToNew={jest.fn()} />\n+        </AuthoritiesContext.Provider>\n+      </MemoryRouter>\n+    )\n+\n+    //Check if the card is rendered properly\n+    expect(getByText('Add New')).toBeInTheDocument();\n+    expect(getByText('testLoadXML')).toBeInTheDocument();\n+    expect(getByLabelText('testLoadXML-sourceFormat')).toBeInTheDocument();\n+    expect(getByText('Last Updated: 04/15/2020 2:22PM')).toBeInTheDocument();\n+    expect(await (waitForElement(() => getByLabelText('testLoadXML-stepName')))).toBeInTheDocument();\n+\n+    fireEvent.mouseOver(getByText('testLoadXML')); // Hover over the Load Card to get more options\n+\n+    //Verify if the flow related options are availble on mouseOver\n+    expect(getByTestId('testLoadXML-toNewFlow')).toBeInTheDocument(); // check if option 'Add to a new Flow' is visible", "originalCommit": "f1cad825290206e474044ab747ad07b7299f1da7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NjEwMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436856102", "bodyText": "Options \"Add to New/Existing Flow\" are available for every card in the document, but except for the one we hover at any point, all others are marked as 'display: none'. So thats why i could't use just the text \"Add to New/Existing Flow\" and had to provide them a proper unique test id.", "author": "xnikhil08", "createdAt": "2020-06-08T17:00:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0OTc0NQ=="}], "type": "inlineReview"}, {"oid": "386e2a415f66f8d5bf8ec0746682c83007b510e4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/386e2a415f66f8d5bf8ec0746682c83007b510e4", "message": "DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Update the tests based on comments in PR (+1 squashed commit)\nSquashed commits:\n[f1cad8252] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031 - Fixing the tileView tests by adding rendering the components with router (+1 squashed commit)\nSquashed commits:\n[6e557bf98] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Tests for options to add Load and Mapping steps to Flow (+1 squashed commit)\nSquashed commits:\n[9782be6ae] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Added logic to update active keys for flows collapse panels (+1 squashed commit)\nSquashed commits:\n[df78cb329] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Fixed few links between step and flows (+1 squashed commit)\nSquashed commits:\n[67adb6269] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Removing unnecessary comment (+1 squashed commit)\nSquashed commits:\n[40084a866] DHFPROD-5031: Adding step to a new flow logic for load and mapping", "committedDate": "2020-06-08T17:11:52Z", "type": "forcePushed"}, {"oid": "9754234d6f1453b5e70ef320394e0420a67440a7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9754234d6f1453b5e70ef320394e0420a67440a7", "message": "DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Update the tests based on comments in PR (+1 squashed commit)\nSquashed commits:\n[f1cad8252] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031 - Fixing the tileView tests by adding rendering the components with router (+1 squashed commit)\nSquashed commits:\n[6e557bf98] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Tests for options to add Load and Mapping steps to Flow (+1 squashed commit)\nSquashed commits:\n[9782be6ae] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Added logic to update active keys for flows collapse panels (+1 squashed commit)\nSquashed commits:\n[df78cb329] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Fixed few links between step and flows (+1 squashed commit)\nSquashed commits:\n[67adb6269] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Removing unnecessary comment (+1 squashed commit)\nSquashed commits:\n[40084a866] DHFPROD-5031: Adding step to a new flow logic for load and mapping", "committedDate": "2020-06-08T17:12:40Z", "type": "forcePushed"}, {"oid": "bd1b8c2aee37c86ffd394008fadddaeddcfabdae", "url": "https://github.com/marklogic/marklogic-data-hub/commit/bd1b8c2aee37c86ffd394008fadddaeddcfabdae", "message": "DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: More updated to the tests (+1 squashed commit)\nSquashed commits:\n[9754234d6] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Update the tests based on comments in PR (+1 squashed commit)\nSquashed commits:\n[f1cad8252] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031 - Fixing the tileView tests by adding rendering the components with router (+1 squashed commit)\nSquashed commits:\n[6e557bf98] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Tests for options to add Load and Mapping steps to Flow (+1 squashed commit)\nSquashed commits:\n[9782be6ae] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Added logic to update active keys for flows collapse panels (+1 squashed commit)\nSquashed commits:\n[df78cb329] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Fixed few links between step and flows (+1 squashed commit)\nSquashed commits:\n[67adb6269] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Removing unnecessary comment (+1 squashed commit)\nSquashed commits:\n[40084a866] DHFPROD-5031: Adding step to a new flow logic for load and mapping", "committedDate": "2020-06-08T17:19:31Z", "type": "forcePushed"}, {"oid": "d7d09cdb42527addedb00e8269264711f8ce6193", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d7d09cdb42527addedb00e8269264711f8ce6193", "message": "DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: More updated to the tests (+1 squashed commit)\nSquashed commits:\n[9754234d6] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Update the tests based on comments in PR (+1 squashed commit)\nSquashed commits:\n[f1cad8252] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031 - Fixing the tileView tests by adding rendering the components with router (+1 squashed commit)\nSquashed commits:\n[6e557bf98] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Tests for options to add Load and Mapping steps to Flow (+1 squashed commit)\nSquashed commits:\n[9782be6ae] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Added logic to update active keys for flows collapse panels (+1 squashed commit)\nSquashed commits:\n[df78cb329] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Fixed few links between step and flows (+1 squashed commit)\nSquashed commits:\n[67adb6269] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Removing unnecessary comment (+1 squashed commit)\nSquashed commits:\n[40084a866] DHFPROD-5031: Adding step to a new flow logic for load and mapping", "committedDate": "2020-06-08T19:10:01Z", "type": "commit"}, {"oid": "d7d09cdb42527addedb00e8269264711f8ce6193", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d7d09cdb42527addedb00e8269264711f8ce6193", "message": "DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: More updated to the tests (+1 squashed commit)\nSquashed commits:\n[9754234d6] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Update the tests based on comments in PR (+1 squashed commit)\nSquashed commits:\n[f1cad8252] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031 - Fixing the tileView tests by adding rendering the components with router (+1 squashed commit)\nSquashed commits:\n[6e557bf98] DHFPROD-5031: Adding step to flows from load and mapping steps\n\nDHFPROD-5031: Tests for options to add Load and Mapping steps to Flow (+1 squashed commit)\nSquashed commits:\n[9782be6ae] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Added logic to update active keys for flows collapse panels (+1 squashed commit)\nSquashed commits:\n[df78cb329] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Fixed few links between step and flows (+1 squashed commit)\nSquashed commits:\n[67adb6269] DHFPROD-5031: Adding step to a new flow logic for load and mapping\n\nDHFPROD-5031: Removing unnecessary comment (+1 squashed commit)\nSquashed commits:\n[40084a866] DHFPROD-5031: Adding step to a new flow logic for load and mapping", "committedDate": "2020-06-08T19:10:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk0NjM2OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4060#discussion_r436946369", "bodyText": "Nice!", "author": "bsrikan", "createdAt": "2020-06-08T19:22:12Z", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.test.tsx", "diffHunk": "@@ -153,4 +162,120 @@ describe(\"Entity Tiles component\", () => {\n        });\n        expect(getByText(AdvancedSettingsMessages.targetPermissions.incorrectFormat)).toBeInTheDocument();\n   });\n+\n+  test('Adding the step to an existing flow', async () => {\n+    const authorityService = new AuthoritiesService();\n+    authorityService.setAuthorities(['readMapping', 'writeMapping', 'writeFlow']);\n+    let entityModel = data.primaryEntityTypes.data[0];\n+    let mapping = data.mappings.data[0].artifacts;\n+    const noopFun = () => {};\n+    let getByText, getByLabelText, getByTestId;\n+    await act(async () => {\n+      const renderResults = render(\n+        <MemoryRouter>\n+          <AuthoritiesContext.Provider value={authorityService}>\n+            <MappingCard\n+              data={mapping}\n+              flows={data.flows.data}\n+              entityTypeTitle={entityModel.entityName}\n+              getMappingArtifactByMapName={noopFun}\n+              deleteMappingArtifact={noopFun}\n+              createMappingArtifact={noopFun}\n+              updateMappingArtifact={noopFun}\n+              canReadOnly={false}\n+              canReadWrite={true}\n+              canWriteFlow={true}\n+              entityModel={entityModel}\n+              addStepToFlow={noopFun}\n+              addStepToNew={noopFun} />\n+          </AuthoritiesContext.Provider>\n+        </MemoryRouter>\n+      );\n+      getByText = renderResults.getByText;\n+      getByLabelText = renderResults.getByLabelText;\n+      getByTestId = renderResults.getByTestId\n+    })\n+\n+    //Check if the card is rendered properly\n+    expect(getByText('Add New')).toBeInTheDocument();\n+    expect(getByText('Mapping1')).toBeInTheDocument();\n+    //expect(getByLabelText('testLoadXML-sourceFormat')).toBeInTheDocument();\n+    expect(getByText('Last Updated: 04/24/2020 1:21PM')).toBeInTheDocument();\n+\n+    fireEvent.mouseOver(getByText('Mapping1')); // Hover over the Load Card to get more options\n+\n+    //Verify if the flow related options are availble on mouseOver\n+    expect(getByTestId('Mapping1-toNewFlow')).toBeInTheDocument(); // check if option 'Add to a new Flow' is visible\n+    expect(getByTestId('Mapping1-toExistingFlow')).toBeInTheDocument(); // check if option 'Add to an existing Flow' is visible\n+\n+    //Click on the select field to open the list of existing flows.\n+    fireEvent.click(getByTestId('Mapping1-flowsList')); \n+\n+    //Choose testFlow from the dropdown\n+    fireEvent.click(getByText('testFlow'));\n+    \n+    //Click on 'Yes' button\n+    fireEvent.click(getByTestId('Mapping1-to-testFlow-Confirm'));\n+\n+    //Check if the tiles-run route has been called\n+    wait(() => {\n+      expect(mockHistoryPush).toHaveBeenCalledWith('/tiles-run');", "originalCommit": "d7d09cdb42527addedb00e8269264711f8ce6193", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}