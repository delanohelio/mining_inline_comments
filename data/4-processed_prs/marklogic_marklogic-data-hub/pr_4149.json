{"pr_number": 4149, "pr_title": "DHFPROD-5112: Display default properties for \"all entities\" search results", "pr_createdAt": "2020-06-25T19:15:55Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4149", "timeline": [{"oid": "161296c3aaf23d417e5a7532665c7486722b65f0", "url": "https://github.com/marklogic/marklogic-data-hub/commit/161296c3aaf23d417e5a7532665c7486722b65f0", "message": "DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Removing uneccessary logs (+1 squashed commit)\nSquashed commits:\n[ba151e0ab] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Add test cases for newly added properties in search response (+2 squashed commits)\nSquashed commits:\n[64ddb2fd9] DHFPROD-5112: Adding properties for All Entities option in backend\n[0626e8c2e] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112- Fixing entity-search-lib (+1 squashed commit)\nSquashed commits:\n[d3975769a] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Adding test cases for backend changes for 5112 (+2 squashed commits)\nSquashed commits:\n[87803c3ca] DHFPROD-5112: Display default properties for \"all entities\" search results\n[501931450] DHFPROD-5152: Detail view column in the tabular view is missing\n\nDHFPROD-5152: Updated test cases for the detail view column (+1 squashed commit)\nSquashed commits:\n[91ff6ffae] DHFPROD-5152: Detail view column in the tabular view is missing", "committedDate": "2020-06-25T19:21:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NTU0NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r445845544", "bodyText": "I'd rather this still be \"entityName\", and then if the request has multiple entity names (which corresponds to \"all entities\", though in the future, this ideally will be captured via some other mechanism than the UI sending all entity names), then don't include this parameter.\nI think that keeps the search transform cleaner. Instead of throwing an error if entityName isn't specified, it'll say - Oh, there's no entityName selected, so the user is searching all entities. Thus, I'll return a generic set of properties instead of an entity-specific set of properties.", "author": "rjrudin", "createdAt": "2020-06-25T21:22:20Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -104,7 +104,7 @@ public StringHandle search(SearchQuery searchQuery) {\n                 // We have some awkwardness here where the input is 'entityName', but as of 5.3.0, the \"entityTypeIds\"\n                 // property is capturing entity names, which are expected to double as collection names as well\n                 ServerTransform searchResultsTransform = new ServerTransform(\"hubEntitySearchTransform\");\n-                searchResultsTransform.put(\"entityName\", entityTypeCollections[0]);\n+                searchResultsTransform.put(\"entityNames\", entityTypeCollections);", "originalCommit": "161296c3aaf23d417e5a7532665c7486722b65f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwODU3NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446008575", "bodyText": "Done.", "author": "xnikhil08", "createdAt": "2020-06-26T07:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NTU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NjQyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r445846426", "bodyText": "I'm not clear on why the primaryKeyValue - which could be any string with any characters in it - would be used for anything except for displaying it. Why does this path differ based on whether the primary key is a URI or not?", "author": "rjrudin", "createdAt": "2020-06-25T21:24:09Z", "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.tsx", "diffHunk": "@@ -43,42 +89,159 @@ const ResultsTabularView = (props) => {\n         return columns;\n     }\n \n-    const tableHeaders = tableHeaderRender(selectedTableColumns);\n+\n+    const updatedTableHeader = () => {\n+        let header = tableHeaderRender(selectedTableColumns);\n+        let detailView = {\n+            title: 'Detail View',\n+            dataIndex: 'detailView',\n+            key: '0-d'\n+        }\n+        header.push(detailView);\n+        return header;\n+    }\n+\n+    const tableHeaders = props.selectedEntities?.length === 0 ? DEFAULT_ALL_ENTITIES_HEADER : updatedTableHeader();\n+\n \n     const tableDataRender = (item) => {\n         let dataObj = {};\n+        let primaryKeyValue = item.primaryKey.propertyValue;\n+        let isUri = item.primaryKey.propertyPath === 'uri';\n+        let uri = encodeURIComponent(item.uri);\n+        let path = { pathname: `/detail/${isUri ? '-' : primaryKeyValue}/${uri}` };", "originalCommit": "161296c3aaf23d417e5a7532665c7486722b65f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjM1OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r445856359", "bodyText": "@rjrudin - This path property is just created to be sent over to the detail view page via the react Link router where its being used in a few places. Since this story was only about the navigation and not updating the detail view page so i didn't touched it.", "author": "xnikhil08", "createdAt": "2020-06-25T21:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NjQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg2ODM5MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r445868391", "bodyText": "This seems like it's asking for trouble though - the primaryKeyValue could have a \"/\" in it, would the path still work??\nI feel that using the primary key value for anything other than display purposes is risky. We can't guarantee that it's unique, and it could contain any character in it. Only the URI is guaranteed to be unique.", "author": "rjrudin", "createdAt": "2020-06-25T22:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NjQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA3NDIwNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446074205", "bodyText": "@rjrudin - I don't think we are handling the case currently, if there is a \"/\" in the primary key value. I am going to create a separate bug to handle that case and also to remove primary key logic completely from Detail , Detail header and other components as well (if any). We might need a bit of refactoring over there.", "author": "xnikhil08", "createdAt": "2020-06-26T09:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NjQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MzA2Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446153066", "bodyText": "A separate ticket works, thanks!", "author": "rjrudin", "createdAt": "2020-06-26T12:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NjQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0Nzg1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r445847858", "bodyText": "This function seems like it has two chunks of code in it - one for entity-specific properties, and one for generic properties. For that reason, I think this should be two separate functions with names that imply what they do - e.g.\n\naddEntitySpecificProperties\naddGenericEntityProperties", "author": "rjrudin", "createdAt": "2020-06-25T21:27:13Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -305,6 +302,70 @@ function getPrimaryValue(entityInstance, entityDefinition) {\n   }\n }\n \n+//Helper funciton to add properties to each result instance under results array in searchReponse\n+function buildResult(result, selectedPropertyMetadata, entityInfo, selectedEntityOption) {", "originalCommit": "161296c3aaf23d417e5a7532665c7486722b65f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwODQzMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446008431", "bodyText": "Done", "author": "xnikhil08", "createdAt": "2020-06-26T07:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0Nzg1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0OTg0Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r445849846", "bodyText": "This initialization of data in \"result\" should happen in the function that's called. I think the forEach loop should be very simple and just do this:\nsearchResponse.results.forEach(result => {\n  if (entityName != null) {\n    addEntitySpecificProperties(...);\n  } else {\n    addGenericEntityProperties(...);\n  }\n});\n\nThat way, only addEntitySpecificProperties cares about selected properties - that concept doesn't exist in addGenericEntityProperties, since we're using a fixed set of columns (I think?).", "author": "rjrudin", "createdAt": "2020-06-25T21:31:12Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -24,60 +24,57 @@ const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n  * trace logging being used. This ensures that the condition appears in logging, but it should not throw an error\n  * because other entities in the search results may be able to have properties added for them.\n  *\n- * @param entityName\n+ * @param entityNames\n  * @param searchResponse\n  */\n-function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToDisplay) {\n+function addPropertiesToSearchResponse(entityNames, searchResponse, propertiesToDisplay) {\n   const maxDefaultProperties = 5;\n-  const selectedPropertyNames = typeof propertiesToDisplay === 'string' ? propertiesToDisplay.split(\",\") :  propertiesToDisplay;\n-  const entityModel = entityLib.findModelByEntityName(entityName);\n-  if (!entityModel) {\n-    ds.throwServerError(`Could not add entity properties to search response; could not find an entity model for entity name: ${entityName}`);\n-  }\n-\n-  const allMetadata = buildAllMetadata(\"\", entityModel, entityName);\n-  const propertyMetadata = allMetadata[\"allPropertiesMetadata\"];\n-\n+  const selectedPropertyNames = typeof propertiesToDisplay === 'string' ? propertiesToDisplay.split(\",\") : propertiesToDisplay;\n   let selectedPropertyMetadata = [];\n-  if(selectedPropertyNames) {\n-    selectedPropertyMetadata = buildSelectedPropertiesMetadata(allMetadata, selectedPropertyNames);\n-  }\n-  selectedPropertyMetadata = selectedPropertyMetadata.length > 0 ? selectedPropertyMetadata : propertyMetadata.slice(0, maxDefaultProperties);\n+  let propertyMetadata = [];\n+\n+  if (Array.isArray(entityNames) && entityNames.length > 1) {\n+    //'All Entities' option is selected\n+    searchResponse.results.forEach(result => {\n+      let entityInfo = {", "originalCommit": "161296c3aaf23d417e5a7532665c7486722b65f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db79f1fd49436c23710e162b7a3b48fce734078d", "url": "https://github.com/marklogic/marklogic-data-hub/commit/db79f1fd49436c23710e162b7a3b48fce734078d", "message": "DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing rebase issues. (+2 squashed commits)\nSquashed commits:\n[4fa5bd63c] DHFPROD-5112: Refactoring the code based on review comments\n[9dffb9a7b] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Removing uneccessary logs (+1 squashed commit)\nSquashed commits:\n[ba151e0ab] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Add test cases for newly added properties in search response (+2 squashed commits)\nSquashed commits:\n[64ddb2fd9] DHFPROD-5112: Adding properties for All Entities option in backend\n[0626e8c2e] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112- Fixing entity-search-lib (+1 squashed commit)\nSquashed commits:\n[d3975769a] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Adding test cases for backend changes for 5112 (+2 squashed commits)\nSquashed commits:\n[87803c3ca] DHFPROD-5112: Display default properties for \"all entities\" search results\n[501931450] DHFPROD-5152: Detail view column in the tabular view is missing\n\nDHFPROD-5152: Updated test cases for the detail view column (+1 squashed commit)\nSquashed commits:\n[91ff6ffae] DHFPROD-5152: Detail view column in the tabular view is missing", "committedDate": "2020-06-26T07:12:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1Mjc3MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446152771", "bodyText": "This should be removed", "author": "rjrudin", "createdAt": "2020-06-26T12:27:49Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/entities/search/EntitySearchManager.java", "diffHunk": "@@ -100,11 +100,14 @@ public StringHandle search(SearchQuery searchQuery) {\n \n             // If an entity has been selected, then apply this transform\n             String[] entityTypeCollections = searchQuery.getQuery().getEntityTypeCollections();\n+            System.out.println(\"entityTypeCollections-sysOut \"+Arrays.toString(entityTypeCollections) + entityTypeCollections);", "originalCommit": "db79f1fd49436c23710e162b7a3b48fce734078d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4MjAwNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446382007", "bodyText": "Removed.", "author": "xnikhil08", "createdAt": "2020-06-26T19:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1Mjc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NDQxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446154414", "bodyText": "Is propertyPath/propertyValue included for entityName and createdOn to make it easier to include in the table? I ask because technically, neither is an entity property, so it's misleading to refer to them as having a propertyPath. So I'd expect to just see \"entityName\":entityName and \"createdOn\": createdOnDate. But if including propertyPath/propertyValue makes life simpler for the UI table, that's fine.", "author": "rjrudin", "createdAt": "2020-06-26T12:31:26Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -315,6 +301,96 @@ function getPrimaryValue(entityInstance, entityDefinition) {\n   }\n }\n \n+//Helper function to add properties to each result instance under results array in searchReponse\n+function addEntitySpecificProperties(result, entityInfo, selectedPropertyMetadata) {\n+  let instance = null;\n+  let entityTitle = entityInfo.entityName;\n+  result.entityProperties = [];\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {\n+    let entityDef = entityInfo.entityModel.definitions[entityTitle];\n+    const entityInstance = instance[entityTitle];\n+    if (!entityInstance) {\n+      console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityTitle}'; will not add entity properties to its search result`);\n+    } else {\n+      selectedPropertyMetadata.forEach(parentProperty => {\n+        result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n+        result.primaryKey = getPrimaryValue(entityInstance, entityDef);\n+      });\n+\n+      // no primaryKey in entity instance, so use URI\n+      if (result.primaryKey === null) {\n+        result.primaryKey = {\n+          \"propertyPath\": \"uri\",\n+          \"propertyValue\": result.uri\n+        }\n+      }\n+    }\n+  }\n+}\n+\n+function addGenericEntityProperties(result) {\n+  let instance = null;\n+  let entityTitle = \"\";\n+  let createdOnDate = \"\";\n+  let entityModel = {};\n+  result.primaryKey = {};\n+  result.identifier = {};\n+  result.entityName = {};\n+  result.createdOn = {};\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {\n+    entityTitle = instance.hasOwnProperty(\"info\") ? instance.info.title : Object.keys(instance)[0];\n+    entityModel = entityLib.findModelByEntityName(entityTitle);\n+    let entityDef = entityModel.definitions[entityTitle];\n+    const entityInstance = instance[entityTitle];\n+    if (!entityInstance) {\n+      console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityTitle}'; will not add entity properties to its search result`);\n+    } else {\n+\n+      result.primaryKey = getPrimaryValue(entityInstance, entityDef);\n+\n+      // no primaryKey in entity instance, so use URI\n+      if (result.primaryKey === null) {\n+        result.primaryKey = {\n+          \"propertyPath\": \"uri\",\n+          \"propertyValue\": result.uri\n+        }\n+      }\n+    }\n+  }\n+  try {\n+    createdOnDate = xdmp.documentGetMetadata(result.uri).datahubCreatedOn;\n+  } catch (error) {\n+    console.log(`Unable to obtain document with URI '${result.uri}'; will not add createdOn date to its search result`);\n+  }\n+  let identifierValue = result.primaryKey.propertyPath === \"uri\" ? result.uri : result.primaryKey.propertyValue;\n+  result.identifier = {\n+    \"propertyPath\": \"identifier\",\n+    \"propertyValue\": identifierValue\n+  };\n+  result.entityName = {", "originalCommit": "db79f1fd49436c23710e162b7a3b48fce734078d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMjU5OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446302598", "bodyText": "@rjrudin - Well i added the propertyPath/propertyValue just to be consistent with other fields like primaryKey and Identifier. But we can keep it simple like \"entityName\":entityName and \"createdOn\": createdOnDate as it's not like we want it is any specific format for UI. I can make those changes.", "author": "xnikhil08", "createdAt": "2020-06-26T16:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NDQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNTcxMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446305710", "bodyText": "If it doesn't make life significantly easier for the UI, let's just do \"entityName\":entityName and likewise for \"createdOn\" because they're definitely not properties, and thus we shouldn't refer to them having a propertyPath.", "author": "rjrudin", "createdAt": "2020-06-26T17:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NDQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4MTk0Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446381943", "bodyText": "Done.", "author": "xnikhil08", "createdAt": "2020-06-26T19:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NDQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NTIyNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446155227", "bodyText": "Pinging @rahulvudutala - I don't think this should be in the forEach loop, it should be outside the loop.\nTo avoid duplication with the same code in addGenericEntityProperties, you can then make an \"addPrimaryKeyToResult(entityInstance, entityDef)\" function to reuse between the two functions.", "author": "rjrudin", "createdAt": "2020-06-26T12:33:03Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -315,6 +301,96 @@ function getPrimaryValue(entityInstance, entityDefinition) {\n   }\n }\n \n+//Helper function to add properties to each result instance under results array in searchReponse\n+function addEntitySpecificProperties(result, entityInfo, selectedPropertyMetadata) {\n+  let instance = null;\n+  let entityTitle = entityInfo.entityName;\n+  result.entityProperties = [];\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {\n+    let entityDef = entityInfo.entityModel.definitions[entityTitle];\n+    const entityInstance = instance[entityTitle];\n+    if (!entityInstance) {\n+      console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityTitle}'; will not add entity properties to its search result`);\n+    } else {\n+      selectedPropertyMetadata.forEach(parentProperty => {\n+        result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n+        result.primaryKey = getPrimaryValue(entityInstance, entityDef);", "originalCommit": "db79f1fd49436c23710e162b7a3b48fce734078d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxMTQ3MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446311470", "bodyText": "@rjrudin @xnikhil08  Agree with Rob. This is when an entityModel is selected. So the primary key and primaryKeyValue should be set for each result but not for each for each selectedMetadataProperty for each result", "author": "rahulvudutala", "createdAt": "2020-06-26T17:18:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NTIyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4MTg1NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446381854", "bodyText": "Done.", "author": "xnikhil08", "createdAt": "2020-06-26T19:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NTIyNw=="}], "type": "inlineReview"}, {"oid": "4ab53bdddd4b35e0c456069c829eb278e3d6cd24", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4ab53bdddd4b35e0c456069c829eb278e3d6cd24", "message": "DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPRDO-5112: Test fixes after rebase (+1 squashed commit)\nSquashed commits:\n[5e4efafe3] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Make changes based on review comments (+1 squashed commit)\nSquashed commits:\n[db79f1fd4] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing rebase issues. (+2 squashed commits)\nSquashed commits:\n[4fa5bd63c] DHFPROD-5112: Refactoring the code based on review comments\n[9dffb9a7b] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Removing uneccessary logs (+1 squashed commit)\nSquashed commits:\n[ba151e0ab] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Add test cases for newly added properties in search response (+2 squashed commits)\nSquashed commits:\n[64ddb2fd9] DHFPROD-5112: Adding properties for All Entities option in backend\n[0626e8c2e] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112- Fixing entity-search-lib (+1 squashed commit)\nSquashed commits:\n[d3975769a] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Adding test cases for backend changes for 5112 (+2 squashed commits)\nSquashed commits:\n[87803c3ca] DHFPROD-5112: Display default properties for \"all entities\" search results\n[501931450] DHFPROD-5152: Detail view column in the tabular view is missing\n\nDHFPROD-5152: Updated test cases for the detail view column (+1 squashed commit)\nSquashed commits:\n[91ff6ffae] DHFPROD-5152: Detail view column in the tabular view is missing", "committedDate": "2020-06-26T19:55:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMDYyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446400620", "bodyText": "This can be if(entityName)", "author": "rahulvudutala", "createdAt": "2020-06-26T20:42:32Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -31,55 +31,41 @@ const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n  */\n function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToDisplay) {\n   const maxDefaultProperties = 5;\n-  const selectedPropertyNames = typeof propertiesToDisplay === 'string' ? propertiesToDisplay.split(\",\") :  propertiesToDisplay;\n-  const entityModel = entityLib.findModelByEntityName(entityName);\n-  if (!entityModel) {\n-    ds.throwServerError(`Could not add entity properties to search response; could not find an entity model for entity name: ${entityName}`);\n-  }\n-\n-  const allMetadata = buildAllMetadata(\"\", entityModel, entityName);\n-  const propertyMetadata = allMetadata[\"allPropertiesMetadata\"];\n-\n+  const selectedPropertyNames = typeof propertiesToDisplay === 'string' ? propertiesToDisplay.split(\",\") : propertiesToDisplay;\n   let selectedPropertyMetadata = [];\n-  if(selectedPropertyNames) {\n-    selectedPropertyMetadata = buildSelectedPropertiesMetadata(allMetadata, selectedPropertyNames);\n-  }\n-  selectedPropertyMetadata = selectedPropertyMetadata.length > 0 ? selectedPropertyMetadata : propertyMetadata.slice(0, maxDefaultProperties);\n-\n-  // Add entityProperties and primaryKey to each search result\n-  searchResponse.results.forEach(result => {\n-    result.entityProperties = [];\n-    result.primaryKey = {};\n-\n-    let instance = null;\n-    try {\n-      instance = getEntityInstance(result.uri);\n-    } catch (error) {\n-      console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  let propertyMetadata = [];\n+\n+  if (entityName != null) {", "originalCommit": "4ab53bdddd4b35e0c456069c829eb278e3d6cd24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMDY2NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446400665", "bodyText": "This can also be if(instance)", "author": "rahulvudutala", "createdAt": "2020-06-26T20:42:38Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -315,6 +301,86 @@ function getPrimaryValue(entityInstance, entityDefinition) {\n   }\n }\n \n+//Helper function to add properties to each result instance under results array in searchReponse\n+function addEntitySpecificProperties(result, entityInfo, selectedPropertyMetadata) {\n+  let instance = null;\n+  let entityTitle = entityInfo.entityName;\n+  result.entityProperties = [];\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {\n+    let entityDef = entityInfo.entityModel.definitions[entityTitle];\n+    const entityInstance = instance[entityTitle];\n+    if (!entityInstance) {\n+      console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityTitle}'; will not add entity properties to its search result`);\n+    } else {\n+      selectedPropertyMetadata.forEach(parentProperty => {\n+        result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n+      });\n+\n+      addPrimaryKeyToResult(result, entityInstance, entityDef);\n+    }\n+  }\n+}\n+\n+function addGenericEntityProperties(result) {\n+  let instance = null;\n+  let entityTitle = \"\";\n+  let createdOnDate = \"\";\n+  let entityModel = {};\n+  result.primaryKey = {};\n+  result.identifier = {};\n+  result.entityName = \"\";\n+  result.createdOn = \"\";\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {", "originalCommit": "4ab53bdddd4b35e0c456069c829eb278e3d6cd24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMDY5OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446400699", "bodyText": "If there is no instance, then is no point in returning the identifier, entityName and createdOn\nprobably we should check this first in the beginning of the function and then if the condition fails, we should process the identifier, createdOn and other details and return the object\nif(! instance) {\n  return;\n}\n\n@rjrudin Can you confirm this", "author": "rahulvudutala", "createdAt": "2020-06-26T20:42:43Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -315,6 +301,86 @@ function getPrimaryValue(entityInstance, entityDefinition) {\n   }\n }\n \n+//Helper function to add properties to each result instance under results array in searchReponse\n+function addEntitySpecificProperties(result, entityInfo, selectedPropertyMetadata) {\n+  let instance = null;\n+  let entityTitle = entityInfo.entityName;\n+  result.entityProperties = [];\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {\n+    let entityDef = entityInfo.entityModel.definitions[entityTitle];\n+    const entityInstance = instance[entityTitle];\n+    if (!entityInstance) {\n+      console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityTitle}'; will not add entity properties to its search result`);\n+    } else {\n+      selectedPropertyMetadata.forEach(parentProperty => {\n+        result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n+      });\n+\n+      addPrimaryKeyToResult(result, entityInstance, entityDef);\n+    }\n+  }\n+}\n+\n+function addGenericEntityProperties(result) {\n+  let instance = null;\n+  let entityTitle = \"\";\n+  let createdOnDate = \"\";\n+  let entityModel = {};\n+  result.primaryKey = {};\n+  result.identifier = {};\n+  result.entityName = \"\";\n+  result.createdOn = \"\";\n+\n+  try {\n+    instance = getEntityInstance(result.uri);\n+  } catch (error) {\n+    console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n+  }\n+\n+  if (instance != null) {\n+    entityTitle = instance.hasOwnProperty(\"info\") ? instance.info.title : Object.keys(instance)[0];\n+    entityModel = entityLib.findModelByEntityName(entityTitle);\n+    let entityDef = entityModel.definitions[entityTitle];\n+    const entityInstance = instance[entityTitle];\n+    if (!entityInstance) {\n+      console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityTitle}'; will not add entity properties to its search result`);\n+    } else {\n+        addPrimaryKeyToResult(result, entityInstance, entityDef);\n+    }\n+  }\n+  try {", "originalCommit": "4ab53bdddd4b35e0c456069c829eb278e3d6cd24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwOTI1NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446409255", "bodyText": "@rahulvudutala @rjrudin - Well we can restrict identifier and entityName but createdOn doesn't seem to depend on whether instance is available in the doc or not. It just captures the datahubCreatedOn date from document metadata.\nAny thoughts ?", "author": "xnikhil08", "createdAt": "2020-06-26T21:04:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMDY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMjU5MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446412590", "bodyText": "I think identifier and createdOn are all still relevant even if we can't find the instance in the document. This is assuming that the URI would be the identifier and createdOn comes from metadata.", "author": "rjrudin", "createdAt": "2020-06-26T21:13:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMDY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxNDk5NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4149#discussion_r446414994", "bodyText": "@rahulvudutala - Then let us not make any changes in this logic. We can update it later if required.", "author": "xnikhil08", "createdAt": "2020-06-26T21:19:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMDY5OQ=="}], "type": "inlineReview"}, {"oid": "3187b857cbd29559278fad1565db861b3e2df520", "url": "https://github.com/marklogic/marklogic-data-hub/commit/3187b857cbd29559278fad1565db861b3e2df520", "message": "DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Hiding column selector for All Entities (+1 squashed commit)\nSquashed commits:\n[e0e2c5e02] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPRDO-5112: Test fixes after rebase (+1 squashed commit)\nSquashed commits:\n[5e4efafe3] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Make changes based on review comments (+1 squashed commit)\nSquashed commits:\n[db79f1fd4] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing rebase issues. (+2 squashed commits)\nSquashed commits:\n[4fa5bd63c] DHFPROD-5112: Refactoring the code based on review comments\n[9dffb9a7b] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Removing uneccessary logs (+1 squashed commit)\nSquashed commits:\n[ba151e0ab] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Add test cases for newly added properties in search response (+2 squashed commits)\nSquashed commits:\n[64ddb2fd9] DHFPROD-5112: Adding properties for All Entities option in backend\n[0626e8c2e] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112- Fixing entity-search-lib (+1 squashed commit)\nSquashed commits:\n[d3975769a] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Adding test cases for backend changes for 5112 (+2 squashed commits)\nSquashed commits:\n[87803c3ca] DHFPROD-5112: Display default properties for \"all entities\" search results\n[501931450] DHFPROD-5152: Detail view column in the tabular view is missing\n\nDHFPROD-5152: Updated test cases for the detail view column (+1 squashed commit)\nSquashed commits:\n[91ff6ffae] DHFPROD-5152: Detail view column in the tabular view is missing", "committedDate": "2020-06-26T23:26:48Z", "type": "forcePushed"}, {"oid": "d71623fac449ed74b07425b14cc54b74798425ed", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d71623fac449ed74b07425b14cc54b74798425ed", "message": "DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing the UI unit test (+1 squashed commit)\nSquashed commits:\n[4103653d0] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Hiding column selector for All Entities (+1 squashed commit)\nSquashed commits:\n[e0e2c5e02] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPRDO-5112: Test fixes after rebase (+1 squashed commit)\nSquashed commits:\n[5e4efafe3] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Make changes based on review comments (+1 squashed commit)\nSquashed commits:\n[db79f1fd4] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing rebase issues. (+2 squashed commits)\nSquashed commits:\n[4fa5bd63c] DHFPROD-5112: Refactoring the code based on review comments\n[9dffb9a7b] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Removing uneccessary logs (+1 squashed commit)\nSquashed commits:\n[ba151e0ab] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Add test cases for newly added properties in search response (+2 squashed commits)\nSquashed commits:\n[64ddb2fd9] DHFPROD-5112: Adding properties for All Entities option in backend\n[0626e8c2e] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112- Fixing entity-search-lib (+1 squashed commit)\nSquashed commits:\n[d3975769a] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Adding test cases for backend changes for 5112 (+2 squashed commits)\nSquashed commits:\n[87803c3ca] DHFPROD-5112: Display default properties for \"all entities\" search results\n[501931450] DHFPROD-5152: Detail view column in the tabular view is missing\n\nDHFPROD-5152: Updated test cases for the detail view column (+1 squashed commit)\nSquashed commits:\n[91ff6ffae] DHFPROD-5152: Detail view column in the tabular view is missing", "committedDate": "2020-06-29T17:01:33Z", "type": "commit"}, {"oid": "d71623fac449ed74b07425b14cc54b74798425ed", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d71623fac449ed74b07425b14cc54b74798425ed", "message": "DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing the UI unit test (+1 squashed commit)\nSquashed commits:\n[4103653d0] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Hiding column selector for All Entities (+1 squashed commit)\nSquashed commits:\n[e0e2c5e02] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPRDO-5112: Test fixes after rebase (+1 squashed commit)\nSquashed commits:\n[5e4efafe3] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Make changes based on review comments (+1 squashed commit)\nSquashed commits:\n[db79f1fd4] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Fixing rebase issues. (+2 squashed commits)\nSquashed commits:\n[4fa5bd63c] DHFPROD-5112: Refactoring the code based on review comments\n[9dffb9a7b] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Removing uneccessary logs (+1 squashed commit)\nSquashed commits:\n[ba151e0ab] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Add test cases for newly added properties in search response (+2 squashed commits)\nSquashed commits:\n[64ddb2fd9] DHFPROD-5112: Adding properties for All Entities option in backend\n[0626e8c2e] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112- Fixing entity-search-lib (+1 squashed commit)\nSquashed commits:\n[d3975769a] DHFPROD-5112: Display default properties for \"all entities\" search results\n\nDHFPROD-5112: Adding test cases for backend changes for 5112 (+2 squashed commits)\nSquashed commits:\n[87803c3ca] DHFPROD-5112: Display default properties for \"all entities\" search results\n[501931450] DHFPROD-5152: Detail view column in the tabular view is missing\n\nDHFPROD-5152: Updated test cases for the detail view column (+1 squashed commit)\nSquashed commits:\n[91ff6ffae] DHFPROD-5152: Detail view column in the tabular view is missing", "committedDate": "2020-06-29T17:01:33Z", "type": "forcePushed"}]}