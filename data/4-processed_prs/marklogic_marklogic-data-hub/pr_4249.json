{"pr_number": 4249, "pr_title": "DHFPROD-5370:Set correct values for 'processors', 'customHook' and 'headers' when a step is edited", "pr_createdAt": "2020-07-21T00:03:47Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4249", "timeline": [{"oid": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c5a4b424bcf86b168ea78a3a2f77d273ba983c1c", "message": "DHFPROD-5370:Set correct values for 'processors', 'customHook' and 'headers' when a step is edited", "committedDate": "2020-07-20T23:56:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4NjY3OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458086679", "bodyText": "@srinathgit is this assertion required again here?", "author": "bsrikan", "createdAt": "2020-07-21T13:15:52Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/step/manageMappingStep.sjs", "diffHunk": "@@ -73,6 +87,11 @@ assertions.push(\n hubJsTest.verifyJson(expectedStep, serviceResponse, assertions);\n hubJsTest.verifyJson(expectedStep, stepService.getStep(stepDefinitionType, stepName), assertions);\n \n+assertions.push(\n+  test.assertEqual(\"{}\", JSON.stringify(serviceResponse.headers)),\n+  test.assertEqual(\"{}\", JSON.stringify(serviceResponse.customHook)),\n+  test.assertEqual(\"[]\", JSON.stringify(serviceResponse.processors))\n+);", "originalCommit": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1OTkxNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458159917", "bodyText": "Yeah, I am calling saveStep() again. So, it ensures the values are present after that as well.", "author": "srinathgit", "createdAt": "2020-07-21T14:52:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4NjY3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA5MjA2Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458092066", "bodyText": "We have an RTL test that sets these to empty string and verifies that 'Invalid JSON' error is not thrown. Should that be changed?", "author": "bsrikan", "createdAt": "2020-07-21T13:23:30Z", "path": "marklogic-data-hub-central/ui/src/components/advanced-settings/advanced-settings-dialog.tsx", "diffHunk": "@@ -303,12 +303,12 @@ const AdvancedSettingsDialog = (props) => {\n         targetDatabase: targetDatabase,\n         targetFormat: targetFormat,\n         permissions: targetPermissions,\n-        headers: parseJSON(headers),\n-        processors: parseJSON(processors),\n+        headers: isEmptyString(headers) ? {} : parseJSON(headers),", "originalCommit": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE2MDg2NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458160864", "bodyText": "No, that test can still remain. If user chooses to set these to empty string, we convert them to valid json values.", "author": "srinathgit", "createdAt": "2020-07-21T14:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA5MjA2Ng=="}], "type": "inlineReview"}]}