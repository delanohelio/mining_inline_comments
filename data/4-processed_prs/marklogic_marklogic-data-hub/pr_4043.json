{"pr_number": 4043, "pr_title": "DHFPROD-4669: Add hub-central-step-runner role", "pr_createdAt": "2020-06-02T23:29:44Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4043", "timeline": [{"oid": "790fbee705fba5ef24a57e0c99e91ffe00336d69", "url": "https://github.com/marklogic/marklogic-data-hub/commit/790fbee705fba5ef24a57e0c99e91ffe00336d69", "message": "DHFPROD-4669: Add hub-central-step-runner role", "committedDate": "2020-06-03T16:02:58Z", "type": "forcePushed"}, {"oid": "1a377f8bdd33b99dabc4c13481c2b3a7c1953f39", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1a377f8bdd33b99dabc4c13481c2b3a7c1953f39", "message": "DHFPROD-4669: Add hub-central-step-runner role", "committedDate": "2020-06-03T19:35:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5MTY5NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r434891695", "bodyText": "can we try using getByLabelText. If it works then we might not need data-testid", "author": "bsrikan", "createdAt": "2020-06-03T22:25:42Z", "path": "marklogic-data-hub-central/ui/src/components/flows/flows.tsx", "diffHunk": "@@ -256,6 +258,7 @@ const Flows: React.FC<Props> = (props) => {\n                                         <div\n                                             className={styles.run}\n                                             aria-label={'runStep-' + stepNumber}\n+                                            data-testid={'runStep-' + stepNumber}", "originalCommit": "1a377f8bdd33b99dabc4c13481c2b3a7c1953f39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMjQwNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r434912407", "bodyText": "@bsrikan I originally tried with getByLabelText, but it didn't seem to find it that way.", "author": "ryanjdew", "createdAt": "2020-06-03T23:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5MTY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMzQzMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r434913431", "bodyText": "ok.", "author": "bsrikan", "createdAt": "2020-06-03T23:36:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5MTY5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5MzI0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r434893242", "bodyText": "same comment applies here. Can we try using getByLabelText and maybe replace row number \"i\" in line 145 above and line 159 below with flow/stepName if possible.", "author": "bsrikan", "createdAt": "2020-06-03T22:30:15Z", "path": "marklogic-data-hub-central/ui/src/components/flows/flows.tsx", "diffHunk": "@@ -150,6 +150,7 @@ const Flows: React.FC<Props> = (props) => {\n                                 event.stopPropagation(); // Do not trigger collapse\n                                 handleFlowDelete(name);\n                             }}\n+                            data-testid={'deleteFlow-' + i}", "originalCommit": "1a377f8bdd33b99dabc4c13481c2b3a7c1953f39", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNzc1Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r434937757", "bodyText": "Can we pls add some more assertions per test plan.\n\nin TilesView.test to check step runner is not able to delete a step\nin Load.test and Curate.test to check step-runner is not able to add steps to a flow\nin Load.test and Curate.test same tests as the ones for ingestion/mapping reader authority but using readStep authority. Additionally these tests will have checks to verify that readStep auth can see Match/Merge and Custom tabs. So corresponding configs needs to be added in runConfig.", "author": "bsrikan", "createdAt": "2020-06-04T01:12:01Z", "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "diffHunk": "@@ -121,6 +121,69 @@ describe('TilesView component', () => {\n         expect(document.querySelector('#flows-container')).toBeInTheDocument();\n         expect(getByText('Create Flow')).toBeInTheDocument();\n         expect(getByText('testFlow')).toBeInTheDocument();\n+        // delete should work\n+        fireEvent.click(getByTestId('deleteFlow-0'));\n+        // testing that confirmation modal appears\n+        expect(queryByText('Yes')).toBeInTheDocument();\n+        fireEvent.click(getByText('No'));\n+\n+        // test description\n+        fireEvent.click(getByText('testFlow'));\n+        expect(getByText('Save')).not.toBeDisabled();\n+        fireEvent.click(getByText('Cancel'));\n+        // test run\n+        fireEvent.click(getByLabelText('icon: right'));\n+        expect(getByTestId('runStep-1')).toBeInTheDocument();\n+    });\n+\n+    test('Verify run tile cannot edit with only readStep authority', async () => {\n+        const authorityService = new AuthoritiesService();\n+        authorityService.setAuthorities(['readStep']);\n+        const {getByLabelText, getByText, queryByText, getByTestId} = render(<AuthoritiesContext.Provider value={authorityService}><TilesView/></AuthoritiesContext.Provider>);\n+\n+\n+        // Run tile not shown initially\n+        expect(queryByText(\"icon-run\")).not.toBeInTheDocument();\n+        expect(queryByText(\"title-run\")).not.toBeInTheDocument();\n+\n+        fireEvent.click(getByLabelText(\"tool-run\"));\n+\n+        // Run tile shown with entityTypes after click\n+        expect(await(waitForElement(() => getByLabelText(\"icon-run\")))).toBeInTheDocument();\n+        expect(getByLabelText(\"title-run\")).toBeInTheDocument();\n+        expect(document.querySelector('#flows-container')).toBeInTheDocument();\n+        expect(getByText('testFlow')).toBeInTheDocument();\n+        // create flow shouldn't be provided\n+        expect(queryByText('Create Flow')).toBeDisabled();\n+        // delete should not work\n+        fireEvent.click(getByTestId('deleteFlow-0'));\n+        // testing that confirmation modal didn't appear\n+        expect(queryByText('Yes')).not.toBeInTheDocument();\n+        // test description\n+        fireEvent.click(getByText('testFlow'));\n+        expect(queryByText('Save')).not.toBeInTheDocument();\n+        fireEvent.click(getByText('Close'));\n+\n+        // test run\n+        fireEvent.click(getByLabelText('icon: right'));\n+        expect(getByTestId('runStepDisabled-1')).toBeInTheDocument();\n+", "originalCommit": "1a377f8bdd33b99dabc4c13481c2b3a7c1953f39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1MjIwMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r435352203", "bodyText": "The user with the readStep authority alone won't have access to the Load and Curate tiles.", "author": "ryanjdew", "createdAt": "2020-06-04T15:34:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwMzI1MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r435403250", "bodyText": "Right, how about runStep authority? HC roles wiki mentions that hub-central-step-runner will have following roles assigned:\ndata-hub-flow-reader, data-hub-ingestion-reader, data-hub-mapping-reader, data-hub-match-merge-reader and data-hub-custom-reader\nSo, above roles enable a step-runner to access steps so they can be run in HC, but not view them in HC?", "author": "bsrikan", "createdAt": "2020-06-04T16:49:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNzAxOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r435427019", "bodyText": "Correct. They will be able to read the documents in the database, but won't be able to access the tiles or middle-tier CRUD APIs.", "author": "ryanjdew", "createdAt": "2020-06-04T17:28:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNzc1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODk5Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r434938992", "bodyText": "should include data-hub-match-merge-reader and data-hub-custom-reader per HC roles wiki.", "author": "bsrikan", "createdAt": "2020-06-04T01:17:09Z", "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/hub-central-step-runner.json", "diffHunk": "@@ -0,0 +1,39 @@\n+{\n+  \"role-name\": \"hub-central-step-runner\",\n+  \"description\": \"Permits reading/reviewing mapping steps in Hub Central\",\n+  \"role\": [\n+    \"hub-central-user\",\n+    \"data-hub-common-writer\",\n+    \"data-hub-flow-reader\",\n+    \"data-hub-ingestion-reader\",\n+    \"data-hub-mapping-reader\",\n+    \"data-hub-step-definition-reader\"", "originalCommit": "1a377f8bdd33b99dabc4c13481c2b3a7c1953f39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MzUxMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r435363513", "bodyText": "created the data-hub-custom-reader role and and added both data-hub-match-merge-reader and data-hub-custom-reader.", "author": "ryanjdew", "createdAt": "2020-06-04T15:47:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODk5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjQ2OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4043#discussion_r435532468", "bodyText": "While the Wiki states that, the Wiki is communicating the end state. Since we don't have referenced custom/match/merge steps in 5.3, I don't think we need to create the roles, nor have them here. It's fine if the work is done already, just pointing out that the Wiki is problematic as a definition of scope when it references many tickets.", "author": "rjrudin", "createdAt": "2020-06-04T20:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODk5Mg=="}], "type": "inlineReview"}, {"oid": "1709bc5622a19d7a40e34d2688c9ed19c3ec0597", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1709bc5622a19d7a40e34d2688c9ed19c3ec0597", "message": "DHFPROD-4669: Add hub-central-step-runner role", "committedDate": "2020-06-04T15:44:52Z", "type": "forcePushed"}, {"oid": "53589c925f2733400408719232a73505d0edcf6c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/53589c925f2733400408719232a73505d0edcf6c", "message": "DHFPROD-4669: Add hub-central-step-runner role", "committedDate": "2020-06-04T20:30:05Z", "type": "commit"}, {"oid": "53589c925f2733400408719232a73505d0edcf6c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/53589c925f2733400408719232a73505d0edcf6c", "message": "DHFPROD-4669: Add hub-central-step-runner role", "committedDate": "2020-06-04T20:30:05Z", "type": "forcePushed"}]}