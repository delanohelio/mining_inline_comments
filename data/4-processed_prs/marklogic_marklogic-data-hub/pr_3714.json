{"pr_number": 3714, "pr_title": "DHFPROD-4162: Initial design for managing entity types", "pr_createdAt": "2020-03-17T18:14:48Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3714", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NTkxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393895914", "bodyText": "PropertyName can only be alphabetic? We do not allow its name like Field1, Field2..", "author": "hao1st", "createdAt": "2020-03-17T18:45:22Z", "path": "specs/models/EntityModelDescriptor.v1.json", "diffHunk": "@@ -0,0 +1,109 @@\n+{\n+  \"title\": \"EntityModelDescriptor\",\n+  \"type\": \"object\",\n+  \"description\": \"JSON schema representation of a MarkLogic Entity Services model\",\n+  \"x-marklogic\": {\n+    \"collections\": [\n+      \"http://marklogic.com/entity-services/models\"\n+    ],\n+    \"permissions\": [\n+      {\n+        \"role-name\": \"data-hub-entity-model-reader\",\n+        \"capability\": \"read\"\n+      },\n+      {\n+        \"role-name\": \"data-hub-entity-model-writer\",\n+        \"capability\": \"update\"\n+      }\n+    ],\n+    \"uri-template\": \"/entities/${./info/title}.entity.json\",\n+    \"databases\": [\n+      \"final\",\n+      \"staging\"\n+    ]\n+  },\n+  \"properties\": {\n+    \"info\": {\n+      \"type\": \"object\",\n+      \"properties\": {\n+        \"title\": {\n+          \"type\": \"string\"\n+        },\n+        \"version\": {\n+          \"type\": \"string\"\n+        },\n+        \"baseUri\": {\n+          \"type\": \"string\",\n+          \"description\": \"Optional for ES, but required by DHF\"\n+        }\n+      },\n+      \"required\": [\n+        \"title\"\n+      ]\n+    },\n+    \"definitions\": {\n+      \"type\": \"object\",\n+      \"additionalProperties\": false,\n+      \"patternProperties\": {\n+        \"^[a-z]+$\": {\n+          \"type\": \"object\",\n+          \"properties\": {\n+            \"required\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"pii\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"elementRangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"rangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"wordLexicon\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"properties\": {\n+              \"type\": \"object\",\n+              \"additionalProperties\": false,\n+              \"patternProperties\": {\n+                \"^[a-z]+$\": {", "originalCommit": "d1bc8a118fe962143b5814e5f1a8df262d89b260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNTk4Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393905987", "bodyText": "I'll check with Erik. This is an attempt to define a schema for ES - we won't be validating anything with it, so it doesn't yet need to be 100% correct. Ideally ML would provide it.", "author": "rjrudin", "createdAt": "2020-03-17T19:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NTkxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzNDE0NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r394334145", "bodyText": "I'll update this, and the other pattern, to a-zA-Z0-9.", "author": "rjrudin", "createdAt": "2020-03-18T13:11:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NTkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NzU2MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393897561", "bodyText": "should be \"datatype\"?", "author": "hao1st", "createdAt": "2020-03-17T18:48:09Z", "path": "specs/models/EntityTypes.v1.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"title\": \"EntityTypes\",\n+  \"type\": \"array\",\n+  \"x-examples\": {},\n+  \"items\": {\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"entityTypeTitle\": {\n+        \"type\": \"string\"", "originalCommit": "d1bc8a118fe962143b5814e5f1a8df262d89b260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNjEyOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393906129", "bodyText": "\"type\" is what JSON schema uses, while Entity Services uses \"datatype\".", "author": "rjrudin", "createdAt": "2020-03-17T19:04:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NzU2MQ=="}], "type": "inlineReview"}, {"oid": "ee03579138c1fd3889fcd827184fd2e8af5c1194", "url": "https://github.com/marklogic/marklogic-data-hub/commit/ee03579138c1fd3889fcd827184fd2e8af5c1194", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-18T15:35:38Z", "type": "forcePushed"}, {"oid": "597c5a3c56fe1289ff392aaac2310b818aa51df4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/597c5a3c56fe1289ff392aaac2310b818aa51df4", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-18T15:36:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3MTU4Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r394471582", "bodyText": "This is great! Being able to extend the APIs with ML specific opens a lot of possibilities for automated testing driven by these API documents.", "author": "ryanjdew", "createdAt": "2020-03-18T16:16:45Z", "path": "specs/models/EntityModelDescriptor.v1.json", "diffHunk": "@@ -0,0 +1,109 @@\n+{\n+  \"title\": \"EntityModelDescriptor\",\n+  \"type\": \"object\",\n+  \"description\": \"JSON schema representation of a MarkLogic Entity Services model\",\n+  \"x-marklogic\": {", "originalCommit": "597c5a3c56fe1289ff392aaac2310b818aa51df4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ec56b7d0b274191445495b21c65ace7f4e82ef9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/5ec56b7d0b274191445495b21c65ace7f4e82ef9", "message": "Progress", "committedDate": "2020-03-19T18:58:02Z", "type": "forcePushed"}, {"oid": "77f77189c2c50c4bd11185db71cf87828d16e97e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/77f77189c2c50c4bd11185db71cf87828d16e97e", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-20T00:25:24Z", "type": "forcePushed"}, {"oid": "d536f339ed0ff27475847096cb72a70bac59cc15", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d536f339ed0ff27475847096cb72a70bac59cc15", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file. \n\nasD", "committedDate": "2020-03-20T14:51:42Z", "type": "forcePushed"}, {"oid": "d17bcc6d6158ed28bb0c11019faf2f19f7962ce1", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d17bcc6d6158ed28bb0c11019faf2f19f7962ce1", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-20T14:52:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1MTY0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r395751647", "bodyText": "Do we want to change this to actually be a multipart request and use encoding to reference the JSON schema as part of the \"input\" parameter? Like this: https://swagger.io/docs/specification/describing-request-body/multipart-requests/ That would more accurately describe the request being made and could be eventually be leveraged for testing data services. Of course we have a good pattern for ML unit tests and Data Services, so that may be less important.", "author": "ryanjdew", "createdAt": "2020-03-20T16:27:14Z", "path": "specs/reference/data-services/models.v1.json", "diffHunk": "@@ -0,0 +1,141 @@\n+{\n+  \"openapi\": \"3.0.0\",\n+  \"info\": {\n+    \"title\": \"models\",\n+    \"version\": \"1.0\",\n+    \"description\": \"Data services for endpoints pertaining to entity models\"\n+  },\n+  \"servers\": [\n+    {\n+      \"url\": \"http://localhost:8011/data-hub/5/data-services/models\"\n+    }\n+  ],\n+  \"paths\": {\n+    \"/getPrimaryEntityTypes.sjs\": {\n+      \"post\": {\n+        \"summary\": \"getPrimaryEntityTypes\",\n+        \"tags\": [],\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"OK\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": {\n+                  \"$ref\": \"../../models/PrimaryEntityTypes.v1.json\"\n+                }\n+              }\n+            }\n+          }\n+        },\n+        \"operationId\": \"getPrimaryEntityTypes.sjs\",\n+        \"description\": \"Returns an array of primary entity types. A primary entity type is the entity type in a model descriptor with a name equal to the title of the model descriptor.\"\n+      },\n+      \"parameters\": []\n+    },\n+    \"/createModel.sjs\": {\n+      \"post\": {\n+        \"summary\": \"createModel\",\n+        \"operationId\": \"post-createModelsjs\",\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"OK\",\n+            \"content\": {\n+              \"application/json\": {", "originalCommit": "d17bcc6d6158ed28bb0c11019faf2f19f7962ce1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc2MzIwMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r395763202", "bodyText": "Yeah I struggled with how to map to DS parameters. The fact that it's multi-part is an implementation detail that's hidden from developers too, buried away in the DS-generated code. So if we want to use OpenAPI to describe DS interfaces, I think we just use a combo of query params and request body as JSON.", "author": "rjrudin", "createdAt": "2020-03-20T16:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1MTY0Nw=="}], "type": "inlineReview"}, {"oid": "2449537354e7998ec5d9be3df93afa07823ddf46", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2449537354e7998ec5d9be3df93afa07823ddf46", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file. \nasdf", "committedDate": "2020-03-20T17:05:10Z", "type": "forcePushed"}, {"oid": "84810fcf87249506cc8ebb386ac32badb5390311", "url": "https://github.com/marklogic/marklogic-data-hub/commit/84810fcf87249506cc8ebb386ac32badb5390311", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-20T20:50:33Z", "type": "forcePushed"}, {"oid": "0ab09063463e926f0be3d1a3debf089c9fc76e70", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0ab09063463e926f0be3d1a3debf089c9fc76e70", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-23T01:05:20Z", "type": "forcePushed"}, {"oid": "4c8ed6d0b5847435ae48e112033e2d9d2b3f241f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4c8ed6d0b5847435ae48e112033e2d9d2b3f241f", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-23T01:06:29Z", "type": "commit"}, {"oid": "4c8ed6d0b5847435ae48e112033e2d9d2b3f241f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4c8ed6d0b5847435ae48e112033e2d9d2b3f241f", "message": "DHFPROD-4162: Initial design for managing entity types\n\nThis is intended for a design review for 4162 before we start on stories. \n\nThis includes a new tool - the Gradle task generateFilesForDataServices - that will automatically create DS files for each endpoint under ./specs/reference/data-services. \n\nIn addition, Gradle tasks for generating Java interfaces are now dynamically created so that we don't need to update build.gradle every time we add a new service.json file.", "committedDate": "2020-03-23T01:06:29Z", "type": "forcePushed"}]}