{"pr_number": 4251, "pr_title": "DHFPROD-5048: Add steps to flow from Load TABLE view", "pr_createdAt": "2020-07-21T07:08:19Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4251", "timeline": [{"oid": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T07:32:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExNDU4Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r458114586", "bodyText": "Can we change this to use aria-label instead: {<div aria-label=\"Yes\">Yes</div>}", "author": "bsrikan", "createdAt": "2020-07-21T13:53:57Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-list.tsx", "diffHunk": "@@ -70,8 +81,82 @@ const LoadList: React.FC<Props> = (props) => {\n \n     const onCancel = () => {\n         setDialogVisible(false);\n+        setAddDialogVisible(false);\n+    }\n+\n+\n+    function handleSelect(obj) {\n+        handleStepAdd(obj.loadName, obj.flowName);\n+    }\n+\n+\n+    const handleStepAdd = (loadName, flowName) => {\n+        setAddDialogVisible(true);\n+        setLoadArtifactName(loadName);\n+        setFlowName(flowName);\n+    }\n+\n+    const onAddOk = async (lName, fName) => {\n+        await props.addStepToFlow(lName, fName)\n+        setAddDialogVisible(false);\n+\n+        history.push({\n+            pathname: '/tiles/run/add',\n+            state: {\n+                flowName: fName,\n+                flowsDefaultKey: [props.flows.findIndex(el => el.name === fName)],\n+                existingFlow: true\n+            }\n+        })\n     }\n \n+    const addConfirmation = (\n+        <Modal\n+            visible={addDialogVisible}\n+            okText={<div data-testid={`${loadArtifactName}-to-${flowName}-Confirm`}>Yes</div>}", "originalCommit": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExNDkwOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r458114908", "bodyText": "Pls replace with {<div aria-label=\"No\">No</div>}", "author": "bsrikan", "createdAt": "2020-07-21T13:54:25Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-list.tsx", "diffHunk": "@@ -70,8 +81,82 @@ const LoadList: React.FC<Props> = (props) => {\n \n     const onCancel = () => {\n         setDialogVisible(false);\n+        setAddDialogVisible(false);\n+    }\n+\n+\n+    function handleSelect(obj) {\n+        handleStepAdd(obj.loadName, obj.flowName);\n+    }\n+\n+\n+    const handleStepAdd = (loadName, flowName) => {\n+        setAddDialogVisible(true);\n+        setLoadArtifactName(loadName);\n+        setFlowName(flowName);\n+    }\n+\n+    const onAddOk = async (lName, fName) => {\n+        await props.addStepToFlow(lName, fName)\n+        setAddDialogVisible(false);\n+\n+        history.push({\n+            pathname: '/tiles/run/add',\n+            state: {\n+                flowName: fName,\n+                flowsDefaultKey: [props.flows.findIndex(el => el.name === fName)],\n+                existingFlow: true\n+            }\n+        })\n     }\n \n+    const addConfirmation = (\n+        <Modal\n+            visible={addDialogVisible}\n+            okText={<div data-testid={`${loadArtifactName}-to-${flowName}-Confirm`}>Yes</div>}\n+            cancelText='No'", "originalCommit": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODExNzIyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r458117220", "bodyText": "Pls add aria-label={f.name}. Need this for e2e.", "author": "bsrikan", "createdAt": "2020-07-21T13:57:22Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-list.tsx", "diffHunk": "@@ -70,8 +81,82 @@ const LoadList: React.FC<Props> = (props) => {\n \n     const onCancel = () => {\n         setDialogVisible(false);\n+        setAddDialogVisible(false);\n+    }\n+\n+\n+    function handleSelect(obj) {\n+        handleStepAdd(obj.loadName, obj.flowName);\n+    }\n+\n+\n+    const handleStepAdd = (loadName, flowName) => {\n+        setAddDialogVisible(true);\n+        setLoadArtifactName(loadName);\n+        setFlowName(flowName);\n+    }\n+\n+    const onAddOk = async (lName, fName) => {\n+        await props.addStepToFlow(lName, fName)\n+        setAddDialogVisible(false);\n+\n+        history.push({\n+            pathname: '/tiles/run/add',\n+            state: {\n+                flowName: fName,\n+                flowsDefaultKey: [props.flows.findIndex(el => el.name === fName)],\n+                existingFlow: true\n+            }\n+        })\n     }\n \n+    const addConfirmation = (\n+        <Modal\n+            visible={addDialogVisible}\n+            okText={<div data-testid={`${loadArtifactName}-to-${flowName}-Confirm`}>Yes</div>}\n+            cancelText='No'\n+            onOk={() => onAddOk(loadArtifactName, flowName)}\n+            onCancel={() => onCancel()}\n+            width={350}\n+            maskClosable={false}\n+        >\n+            <div style={{fontSize: '16px', padding: '10px'}}>\n+                Are you sure you want to add \"{loadArtifactName}\" to flow \"{flowName}\"?\n+            </div>\n+        </Modal>\n+    );\n+\n+    const menu = (name) => (\n+        <Menu style={{right: '80px'}}>\n+            <Menu.Item key=\"0\">\n+                { <Link data-testid=\"link\" id=\"tiles-run-add\" to={\n+                                        {pathname: '/tiles/run/add',\n+                                        state: {\n+                                            stepToAdd : name,\n+                                            stepDefinitionType : 'ingestion',\n+                                            existingFlow : false\n+                                        }}}><div className={styles.stepLink} data-testid={`${name}-toNewFlow`}>Add step to a new flow</div></Link>}\n+            </Menu.Item>\n+            <Menu.Item key=\"1\">\n+                <div className={styles.stepLink} data-testid={`${name}-toExistingFlow`}>Add step to an existing flow \n+                    <div className={styles.stepLinkSelect} onClick={(event) => { event.stopPropagation(); event.preventDefault(); }}>\n+                        <Select\n+                            style={{ width: '100%' }}\n+                            onChange={(flowName) => handleSelect({flowName: flowName, loadName: name})}\n+                            placeholder=\"Select Flow\"\n+                            defaultActiveFirstOption={false}\n+                            disabled={!props.canWriteFlow}\n+                            data-testid={`${name}-flowsList`}\n+                        >\n+                            { props.flows && props.flows.length > 0 ? props.flows.map((f,i) => (\n+                                <Option value={f.name} key={i}>{f.name}</Option>", "originalCommit": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEyNTAxNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r458125015", "bodyText": "Replace with data-testid={`${row.name}-dropdown`}", "author": "bsrikan", "createdAt": "2020-07-21T14:07:42Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-list.tsx", "diffHunk": "@@ -133,6 +218,9 @@ const LoadList: React.FC<Props> = (props) => {\n             key: 'actions',\n             render: (text, row) => (\n                 <span>\n+                    <Dropdown data-testid = \"dropdown\" overlay={menu(row.name)} trigger={['hover']} disabled = {!props.canWriteFlow}>", "originalCommit": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEyNzI3Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r458127277", "bodyText": "Replace aria-label(s) for add-icon and disabled-add-icon to include row.name", "author": "bsrikan", "createdAt": "2020-07-21T14:10:48Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-list.tsx", "diffHunk": "@@ -133,6 +218,9 @@ const LoadList: React.FC<Props> = (props) => {\n             key: 'actions',\n             render: (text, row) => (\n                 <span>\n+                    <Dropdown data-testid = \"dropdown\" overlay={menu(row.name)} trigger={['hover']} disabled = {!props.canWriteFlow}>\n+                        {props.canWriteFlow ? <span className={'AddToFlowIcon'} aria-label = \"add-icon\"></span> : <MLTooltip title={'Add to Flow'} placement=\"bottom\"><span aria-label = \"disabled-add-icon\" className={'disabledAddToFlowIcon'}></span></MLTooltip>}", "originalCommit": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzMjcyNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r458132725", "bodyText": "Can you pls verify Load.test if it needs some changes. It sets default view to be list and asserts the same.", "author": "bsrikan", "createdAt": "2020-07-21T14:18:06Z", "path": "marklogic-data-hub-central/ui/src/pages/Load.tsx", "diffHunk": "@@ -10,7 +10,7 @@ import { AuthoritiesContext } from \"../util/authorities\";\n \n export type ViewType =  'card' | 'list';\n \n-const INITIAL_VIEW: ViewType = 'list';\n+const INITIAL_VIEW: ViewType = 'card';", "originalCommit": "c76c5aedf8c15e5d60ec225fe3b8dfacd686c600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7fbdde73b104ab42d9b20fe0bccd86cbf2620eb3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/7fbdde73b104ab42d9b20fe0bccd86cbf2620eb3", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T16:46:06Z", "type": "forcePushed"}, {"oid": "aea8452532b9d8507cd5922d8d9c84973c17a7be", "url": "https://github.com/marklogic/marklogic-data-hub/commit/aea8452532b9d8507cd5922d8d9c84973c17a7be", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T16:48:51Z", "type": "forcePushed"}, {"oid": "50793b5acb6bdbb159b014cd32691bd314396d2f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/50793b5acb6bdbb159b014cd32691bd314396d2f", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T17:12:54Z", "type": "forcePushed"}, {"oid": "893e603b0c6845049974d287d0231018966dbbc2", "url": "https://github.com/marklogic/marklogic-data-hub/commit/893e603b0c6845049974d287d0231018966dbbc2", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T17:38:20Z", "type": "forcePushed"}, {"oid": "c20b9250073c795b53ecbb68201653796fc2abde", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c20b9250073c795b53ecbb68201653796fc2abde", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T17:40:06Z", "type": "commit"}, {"oid": "c20b9250073c795b53ecbb68201653796fc2abde", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c20b9250073c795b53ecbb68201653796fc2abde", "message": "DHFPROD-5048: Add steps to flow from Load TABLE view", "committedDate": "2020-07-21T17:40:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMjc3OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r459022778", "bodyText": "Is the \"add to new\" testable now? Looks like we do something similar already in load-card.test.", "author": "wooldridge", "createdAt": "2020-07-22T19:12:02Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-list.test.tsx", "diffHunk": "@@ -109,4 +119,152 @@ describe('Load data component', () => {\n     expect(getByText(AdvancedSettingsMessages.targetPermissions.incorrectFormat)).toBeInTheDocument();\n \n   })\n+\n+  test('Load List - Add step to an existing Flow', async () => {\n+    const authorityService = new AuthoritiesService();\n+    authorityService.setAuthorities(['readIngestion', 'writeIngestion', 'writeFlow']);\n+    const { getByText, getByLabelText, getByTestId } = render(\n+      <MemoryRouter>\n+        <AuthoritiesContext.Provider value={authorityService}>\n+          <LoadList \n+            {...data.loadData}\n+            flows={data.flows}\n+            canWriteFlow={true}\n+            addStepToFlow={jest.fn()}\n+            addStepToNew={jest.fn()} />\n+        </AuthoritiesContext.Provider>\n+      </MemoryRouter>\n+    )\n+\n+    //Check if the list is rendered properly\n+    expect(getByText('testLoadXML')).toBeInTheDocument();\n+\n+    fireEvent.mouseOver(getByLabelText('testLoadXML-add-icon')); // Hover over the Add to Flow Icon to get more options\n+\n+    //Verify if the flow related options are availble on mouseOver\n+    await waitForElement(() => expect(getByTestId(`testLoadXML-toNewFlow`))); // check if option 'Add to a new Flow' is visible\n+    await waitForElement(() => expect(getByTestId(`testLoadXML-toExistingFlow`))); // check if option 'Add to an existing Flow' is visible\n+\n+    //Click on the select field to open the list of existing flows.\n+    fireEvent.click(getByTestId('testLoadXML-flowsList')); \n+\n+    //Choose FlowA from the dropdown\n+    fireEvent.click(getByText('FlowA'));\n+    \n+    //Click on 'Yes' button\n+    fireEvent.click(getByLabelText('Yes'));\n+\n+    //Check if the /tiles/run/add route has been called\n+    wait(() => {\n+      expect(mockHistoryPush).toHaveBeenCalledWith('/tiles/run/add');\n+    })\n+    //TODO- E2E test to check if the Run tile is loaded or not.\n+\n+  })\n+\n+  test('Load List - Add step to an new Flow', async () => {\n+    const authorityService = new AuthoritiesService();\n+    authorityService.setAuthorities(['readIngestion', 'writeIngestion', 'writeFlow']);\n+    const { getByText, getByLabelText, getByTestId } = render(\n+      <MemoryRouter>\n+        <AuthoritiesContext.Provider value={authorityService}>\n+          <LoadList \n+            {...data.loadData}\n+            flows={data.flows}\n+            canWriteFlow={true}\n+            addStepToFlow={jest.fn()}\n+            addStepToNew={jest.fn()} />\n+        </AuthoritiesContext.Provider>\n+      </MemoryRouter>\n+    )\n+\n+    //Check if the list is rendered properly\n+    expect(getByText('testLoadXML')).toBeInTheDocument();\n+\n+    fireEvent.mouseOver(getByLabelText('testLoadXML-add-icon')); // Hover over the Add to Flow Icon to get more options\n+\n+    //Verify if the flow related options are availble on mouseOver\n+    await waitForElement(() => expect(getByTestId(`testLoadXML-toNewFlow`))); // check if option 'Add to a new Flow' is visible\n+    await waitForElement(() => expect(getByTestId(`testLoadXML-toExistingFlow`))); // check if option 'Add to an existing Flow' is visible\n+\n+    //Click on the select field to open the list of existing flows.\n+    fireEvent.click(getByTestId('testLoadXML-toNewFlow')); \n+\n+    //Check if the /tiles/run/add route has been called\n+    wait(() => {\n+      expect(mockHistoryPush).toHaveBeenCalledWith('/tiles/run/add');\n+    })\n+    //TODO- E2E test to check if the Run tile is loaded or not.\n+\n+  })\n+\n+  test('Verify Load list allows step to be added to flow with writeFlow authority', async () => {\n+    const authorityService = new AuthoritiesService();\n+    authorityService.setAuthorities(['readIngestion','writeFlow']);\n+    const mockAddStepToFlow = jest.fn();\n+    const mockAddStepToNew = jest.fn();\n+    const mockCreateLoadArtifact = jest.fn();\n+    const mockDeleteLoadArtifact = jest.fn();\n+    const {getByText, getByLabelText, getByTestId} = render(<MemoryRouter><AuthoritiesContext.Provider value={authorityService}><LoadList\n+      addStepToFlow={mockAddStepToFlow}\n+      addStepToNew={mockAddStepToNew}\n+      canReadOnly={authorityService.canReadLoad()}\n+      canReadWrite={authorityService.canWriteLoad()}\n+      canWriteFlow={authorityService.canWriteFlow()}\n+      createLoadArtifact={mockCreateLoadArtifact}\n+      data={data.loadData.data}\n+      deleteLoadArtifact={mockDeleteLoadArtifact}\n+      flows={data.flows}/>\n+    </AuthoritiesContext.Provider></MemoryRouter>);\n+\n+    const loadStepName = data.loadData.data[0].name;\n+\n+    fireEvent.mouseOver(getByLabelText('testLoad-add-icon'));\n+\n+    //verify components and text appear on hover\n+    await waitForElement(() => expect(getByTestId(`${loadStepName}-toNewFlow`)));\n+    await waitForElement(() => expect(getByTestId(`${loadStepName}-toExistingFlow`)));\n+    await waitForElement(() => expect(getByTestId(`${loadStepName}-flowsList`)));\n+    await waitForElement(() => expect(getByText('Add step to a new flow')));\n+    await waitForElement(() => expect(getByText('Add step to an existing flow')));\n+\n+    // test adding to existing flow\n+    fireEvent.click(getByTestId(`${loadStepName}-flowsList`));\n+    fireEvent.click(getByText(data.flows[0].name));\n+    fireEvent.click(getByText('Yes'));\n+    expect(mockAddStepToFlow).toBeCalledTimes(1);\n+\n+    //TODO: Mock addStepToNew not implemented yet", "originalCommit": "c20b9250073c795b53ecbb68201653796fc2abde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzMDE1Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r459030156", "bodyText": "@wooldridge Right, was referring to the load-card.test where it is also still a 'TODO'. Seems like while the POST for addStepToFlow is supported and testable, the POST for addStepToNew is not implemented yet for us to test. Instead, adding a step to a new flow is done with a Link to /tiles/run/add. Not 100% sure but I think it makes sense, can refer to here as well.\n\n  \n    \n      marklogic-data-hub/marklogic-data-hub-central/ui/src/pages/Load.tsx\n    \n    \n         Line 112\n      in\n      aea4246\n    \n    \n    \n    \n\n        \n          \n           const addStepToNew = async () => {", "author": "briantang", "createdAt": "2020-07-22T19:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMjc3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzMzkyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4251#discussion_r459033921", "bodyText": "Thanks!", "author": "wooldridge", "createdAt": "2020-07-22T19:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMjc3OA=="}], "type": "inlineReview"}]}