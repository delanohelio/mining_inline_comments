{"pr_number": 4102, "pr_title": "DHFPROD-5177: Changes to EntitySearch API to accept propertiesToDisplay for tabular view", "pr_createdAt": "2020-06-16T16:16:38Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4102", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNDc5Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441004797", "bodyText": "It'll help a lot to define method comments here that define currentProperty as an object along with the expected keys in that object, which I believe are propertyPath and datatype. Otherwise, I think a reader would not know if \"currentProperty\" is simply a property name/path or a complex object.", "author": "rjrudin", "createdAt": "2020-06-16T17:00:06Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -98,13 +104,19 @@ function buildPropertyMetadata(parentPropertyName, entityModel, entityName) {\n       propertyMetadata[\"properties\"] = buildPropertyMetadata(propertyMetadata[\"propertyPath\"], entityModel, entityName);\n     }\n     allPropertyMetadata.push(propertyMetadata);\n+\n+    if(selectedProperties && selectedProperties.includes(propertyMetadata.propertyPath)) {\n+      selectedPropertyMetadata.push(propertyMetadata);\n+    }\n   }\n   return allPropertyMetadata;\n }\n \n-function getPropertyValues(currentProperty, entityInstance) {\n+// Helper function used by getPropertyValuesFromInstance to fetch property values from a propertyPath\n+function getPropertyPathValues(currentProperty, entityInstance) {", "originalCommit": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNjg4NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441006885", "bodyText": "Let's make these parameters that are passed to functions instead of them being library-level variables. That makes the scope of functions easier to understand, as they won't be depending on library-level variables where it's not clear when the state of those variables is modified.", "author": "rjrudin", "createdAt": "2020-06-16T17:03:49Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -19,24 +19,28 @@ const ds = require(\"/data-hub/5/data-services/ds-utils.sjs\");\n // TODO Will move this to /data-hub/5/entities soon\n const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n \n+let selectedPropertyMetadata = null;", "originalCommit": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNzU4MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441007581", "bodyText": "This naming is confusing - the only time we say \"instance\" is when referring to an \"entity instance\". Is this really a \"value instance\", or simply \"property value\"?", "author": "rjrudin", "createdAt": "2020-06-16T17:05:00Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -141,6 +153,81 @@ function getPropertyValues(currentProperty, entityInstance) {\n   return resultObject;\n }\n \n+// This function fetches the appropriate instance property values for first level simple, structured property paths and\n+// other levels of structured entity properties from the propertyPath.\n+function getPropertyValuesFromInstance(currentProperty, entityInstance) {\n+  let resultObject = {};\n+  resultObject.propertyPath = currentProperty.propertyPath;\n+\n+  if(Array.isArray(entityInstance)) {\n+    let propertyValuesArray = [];\n+    entityInstance.forEach((instance) => {\n+      let propertyValue = getPropertyPathValues(currentProperty, instance).propertyValue;\n+      if(Array.isArray(propertyValue)) {\n+        propertyValue.forEach((propertyValue) => {\n+          propertyValuesArray.push(propertyValue);\n+        });\n+      } else {\n+        propertyValuesArray.push(propertyValue);\n+      }\n+    });\n+    resultObject.propertyValue = propertyValuesArray;\n+  } else {\n+    resultObject.propertyValue =  getPropertyPathValues(currentProperty, entityInstance).propertyValue;\n+  }\n+  return resultObject;\n+}\n+\n+// This function fetches the appropriate instance for first level simple, structured property paths and other levels of\n+// structured entity properties from the propertyPath.\n+function getInstanceFromPropertyPath(currentProperty, entityInstance) {", "originalCommit": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwOTE0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441009142", "bodyText": "This raises the same question above - an entity instance is always an object, it'll never be an array. So what is this variable actually referring to?", "author": "rjrudin", "createdAt": "2020-06-16T17:07:37Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -141,6 +153,81 @@ function getPropertyValues(currentProperty, entityInstance) {\n   return resultObject;\n }\n \n+// This function fetches the appropriate instance property values for first level simple, structured property paths and\n+// other levels of structured entity properties from the propertyPath.\n+function getPropertyValuesFromInstance(currentProperty, entityInstance) {\n+  let resultObject = {};\n+  resultObject.propertyPath = currentProperty.propertyPath;\n+\n+  if(Array.isArray(entityInstance)) {\n+    let propertyValuesArray = [];\n+    entityInstance.forEach((instance) => {\n+      let propertyValue = getPropertyPathValues(currentProperty, instance).propertyValue;\n+      if(Array.isArray(propertyValue)) {\n+        propertyValue.forEach((propertyValue) => {\n+          propertyValuesArray.push(propertyValue);\n+        });\n+      } else {\n+        propertyValuesArray.push(propertyValue);\n+      }\n+    });\n+    resultObject.propertyValue = propertyValuesArray;\n+  } else {\n+    resultObject.propertyValue =  getPropertyPathValues(currentProperty, entityInstance).propertyValue;\n+  }\n+  return resultObject;\n+}\n+\n+// This function fetches the appropriate instance for first level simple, structured property paths and other levels of\n+// structured entity properties from the propertyPath.\n+function getInstanceFromPropertyPath(currentProperty, entityInstance) {\n+  let splitPropertyNames = currentProperty.propertyPath.split(\".\");\n+  splitPropertyNames.pop();\n+\n+  if(splitPropertyNames.length > 0) {\n+    splitPropertyNames.forEach((propertyName) => {\n+      let propertyInstanceArray = [];\n+      if(Array.isArray(entityInstance)) {", "originalCommit": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2215dd494840e9b808bf6ea68149f77aec4ceb97", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2215dd494840e9b808bf6ea68149f77aec4ceb97", "message": "DHFPROD-5177: Changes to EntitySearch API to accept propertiesToDisplay for tabular view", "committedDate": "2020-06-19T14:54:02Z", "type": "forcePushed"}, {"oid": "6915e63bb518f55aa604debca6ef708c37e1d85c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/6915e63bb518f55aa604debca6ef708c37e1d85c", "message": "DHFPROD-5177: Changes to EntitySearch API to accept propertiesToDisplay for tabular view", "committedDate": "2020-06-19T14:58:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDkyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442950926", "bodyText": "This line can be deleted, right?", "author": "rjrudin", "createdAt": "2020-06-19T16:59:33Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -60,19 +66,21 @@ function addPropertiesToSearchResponse(entityName, searchResponse) {\n       }\n     }\n   });\n-\n   // Make it easy for the client to know which property names were used, and which ones exist\n+  // searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;", "originalCommit": "6915e63bb518f55aa604debca6ef708c37e1d85c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1NTk3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442955976", "bodyText": "I will remove this. Thanks", "author": "rahulvudutala", "createdAt": "2020-06-19T17:11:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDkyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MTI0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442951247", "bodyText": "What does \"granular\" mean in this context? Is it really \"selectedPropertyMetadata\"?", "author": "rjrudin", "createdAt": "2020-06-19T17:00:18Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -60,19 +66,21 @@ function addPropertiesToSearchResponse(entityName, searchResponse) {\n       }\n     }\n   });\n-\n   // Make it easy for the client to know which property names were used, and which ones exist\n+  // searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n   searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n   searchResponse.entityPropertyDefinitions = propertyMetadata;\n }\n \n-function buildPropertyMetadata(parentPropertyName, entityModel, entityName) {\n+// This function builds the logical entityType property metadata for all entityType properties from an entityModel.\n+function buildAllMetadata(parentPropertyName, entityModel, entityName) {\n   const entityType = entityModel.definitions[entityName];\n   if (!entityType) {\n     ds.throwServerError(\"Could not build property metadata; could not find entity type with name: \" + entityName);\n   }\n \n-  const allPropertyMetadata = [];\n+  const allPropertiesMetadata = [];\n+  let granularPropertyMetadata = {};", "originalCommit": "6915e63bb518f55aa604debca6ef708c37e1d85c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1NTY5OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442955698", "bodyText": "{ \"propertyPath\": \"billing.zip.plusFour\", \"propertyLabel\": \"plusFour\", \"datatype\": \"string\", \"multiple\": false }\nThe parent structure from where it is referred to is ignored. But its child properties do exist in the object if the object has them", "author": "rahulvudutala", "createdAt": "2020-06-19T17:10:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MTI0Nw=="}], "type": "inlineReview"}, {"oid": "d73b762ebc78d1c6c4679afe15f311496d78f107", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d73b762ebc78d1c6c4679afe15f311496d78f107", "message": "DHFPROD-5177: Changes to EntitySearch API to accept propertiesToDisplay for tabular view", "committedDate": "2020-06-19T17:42:25Z", "type": "commit"}, {"oid": "d73b762ebc78d1c6c4679afe15f311496d78f107", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d73b762ebc78d1c6c4679afe15f311496d78f107", "message": "DHFPROD-5177: Changes to EntitySearch API to accept propertiesToDisplay for tabular view", "committedDate": "2020-06-19T17:42:25Z", "type": "forcePushed"}]}