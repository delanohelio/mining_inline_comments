{"pr_number": 4955, "pr_title": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "pr_createdAt": "2020-12-08T01:35:16Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4955", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUyMTA5Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r538521092", "bodyText": "Add these to Jenkins credentials and use Jenkins credentials plugin to extract these", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-08T15:48:09Z", "path": "Jenkinsfile", "diffHunk": "@@ -636,7 +636,70 @@ pipeline{\n                   }\n                   }\n \t\t}\n-            stage('publishAnddhs'){\n+        stage('FlexCodeScan'){\n+            when {\n+                expression{\n+                    node('dhmaster'){\n+                        props = readProperties file:'data-hub/pipeline.properties';\n+                        println(props['ExecutionBranch'])\n+                        return (env.BRANCH_NAME==props['ExecutionBranch'])\n+                    }\n+                }\n+            }\n+            agent {label 'dhfLinuxAgent'}\n+            steps{\n+                script {\n+\n+                    def palamida_url=\"http://palamida-2.marklogic.com:8888\"\n+                    def jwt=\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwYWxhbWlkYSIsInVzZXJJZCI6MywiaWF0IjoxNjA1NTYxMTc5fQ.5NaV_E4FHSe6vJMTX1siZa6f0U-uKm3ssZIfmsPEPzmdkDvtnNxsXRxI1Mj4mHq0i9cBNEHW_ePYKdFh97Sd9Q\"", "originalCommit": "d679476d02cb31fa1f00187ba9d3e819790424fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6790f82021563024768cd4675f6d69c4ba05ce52", "url": "https://github.com/marklogic/marklogic-data-hub/commit/6790f82021563024768cd4675f6d69c4ba05ce52", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-10T00:15:47Z", "type": "forcePushed"}, {"oid": "a3abbc7ab6c1c61c986845788d43d27bdf62eb7f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a3abbc7ab6c1c61c986845788d43d27bdf62eb7f", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-11T04:26:29Z", "type": "forcePushed"}, {"oid": "5a41ec74491732a638816c0e87d61328613abc8b", "url": "https://github.com/marklogic/marklogic-data-hub/commit/5a41ec74491732a638816c0e87d61328613abc8b", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-11T05:18:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDU3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r541100576", "bodyText": "you don't need to send the email twice. An email will be sent in the post stage. If required include Kavitha to the recipient list.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-11T17:15:16Z", "path": "Jenkinsfile", "diffHunk": "@@ -229,6 +229,161 @@ def runCypressE2e(){\n         junit '**/e2e/**/*.xml'\n     }\n }\n+\n+void postFailureFiexcodeScanAndReport(){\n+    def email=''\n+    if(env.CHANGE_AUTHOR){\n+        def author=env.CHANGE_AUTHOR.toString().trim().toLowerCase()\n+        email=getEmailFromGITUser author\n+    }\n+    else {\n+       email=Email\n+    }\n+    sendMail email,\"<h3>Pipeline FAILED in stage ${STAGE_NAME} <a href=${BUILD_URL}/console> Check Console Output Here</a></h4>\",false,\" pipeline Failed in ${STAGE_NAME} \"\n+}\n+\n+void fiexcodeScanAndReport(){\n+    def palamida_url=\"http://palamida-2.marklogic.com:8888\"\n+    def inventoriesRprt=''\n+\n+    withCredentials([string(credentialsId: 'palamida_jwt', variable: 'jwt')]) {\n+\n+        StartScan(baseUrl: palamida_url, projectName: 'ml-dhf', token: jwt)\n+\n+        inventoriesRprt = sh(returnStdout: true, script: '''curl -X GET ''' + palamida_url + '''/codeinsight/api/project/inventory/21 -H \"Authorization: Bearer $jwt\" ''')\n+    }\n+\n+    writeFile(file: 'inventoriesRprt.report.json', text: inventoriesRprt)\n+\n+    def slurper = new JsonSlurperClassic().parseText(inventoriesRprt.toString().trim())\n+\n+    def failures = []\n+    slurper.inventoryItems.each { key, value ->\n+        key.vulnerabilities.each { key1, value1 ->\n+            if(key1.vulnerabilityCvssV3Severity == 'CRITICAL' || key1.vulnerabilityCvssV3Severity == 'HIGH'){\n+                def msg = \" inventory name: $key.name  volnarability name: $key1.vulnerabilityName with Severity V2: $key1.vulnerabilityCvssV2Severity with Severity V3: $key1.vulnerabilityCvssV3Severity \"\n+                failures.add(msg)\n+\n+            }\n+        }}\n+\n+    archiveArtifacts artifacts: 'inventoriesRprt.report.json'\n+\n+    //Send email\n+    if(failures.size()!=0){\n+        def body=''\n+        failures.each { msg -> body=body+msg + '\\n' }\n+        sendMail 'Kavitha.Sivagnanam@marklogic.com,yakov.feldman@marklogic.com', body,false,'Flexcode FAILED. HIGH vulnerabilities','inventoriesRprt.report.json'", "originalCommit": "5a41ec74491732a638816c0e87d61328613abc8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzMTE3MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r541131171", "bodyText": "Then email in post would need to include attached report and P1 vulnerabilities info in the body of the email. Is it OK?", "author": "yafeldman", "createdAt": "2020-12-11T18:06:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4MzMyMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r541383323", "bodyText": "yes", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-11T22:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDk3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r541100976", "bodyText": "Add an OR check for DEVO project too.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-11T17:15:59Z", "path": "Jenkinsfile", "diffHunk": "@@ -229,6 +229,161 @@ def runCypressE2e(){\n         junit '**/e2e/**/*.xml'\n     }\n }\n+\n+void postFailureFiexcodeScanAndReport(){\n+    def email=''\n+    if(env.CHANGE_AUTHOR){\n+        def author=env.CHANGE_AUTHOR.toString().trim().toLowerCase()\n+        email=getEmailFromGITUser author\n+    }\n+    else {\n+       email=Email\n+    }\n+    sendMail email,\"<h3>Pipeline FAILED in stage ${STAGE_NAME} <a href=${BUILD_URL}/console> Check Console Output Here</a></h4>\",false,\" pipeline Failed in ${STAGE_NAME} \"\n+}\n+\n+void fiexcodeScanAndReport(){\n+    def palamida_url=\"http://palamida-2.marklogic.com:8888\"\n+    def inventoriesRprt=''\n+\n+    withCredentials([string(credentialsId: 'palamida_jwt', variable: 'jwt')]) {\n+\n+        StartScan(baseUrl: palamida_url, projectName: 'ml-dhf', token: jwt)\n+\n+        inventoriesRprt = sh(returnStdout: true, script: '''curl -X GET ''' + palamida_url + '''/codeinsight/api/project/inventory/21 -H \"Authorization: Bearer $jwt\" ''')\n+    }\n+\n+    writeFile(file: 'inventoriesRprt.report.json', text: inventoriesRprt)\n+\n+    def slurper = new JsonSlurperClassic().parseText(inventoriesRprt.toString().trim())\n+\n+    def failures = []\n+    slurper.inventoryItems.each { key, value ->\n+        key.vulnerabilities.each { key1, value1 ->\n+            if(key1.vulnerabilityCvssV3Severity == 'CRITICAL' || key1.vulnerabilityCvssV3Severity == 'HIGH'){\n+                def msg = \" inventory name: $key.name  volnarability name: $key1.vulnerabilityName with Severity V2: $key1.vulnerabilityCvssV2Severity with Severity V3: $key1.vulnerabilityCvssV3Severity \"\n+                failures.add(msg)\n+\n+            }\n+        }}\n+\n+    archiveArtifacts artifacts: 'inventoriesRprt.report.json'\n+\n+    //Send email\n+    if(failures.size()!=0){\n+        def body=''\n+        failures.each { msg -> body=body+msg + '\\n' }\n+        sendMail 'Kavitha.Sivagnanam@marklogic.com,yakov.feldman@marklogic.com', body,false,'Flexcode FAILED. HIGH vulnerabilities','inventoriesRprt.report.json'\n+        sh 'exit 1'\n+    }\n+}\n+\n+void UnitTest(){\n+    script{\n+        props = readProperties file:'data-hub/pipeline.properties';\n+        copyRPM 'Release','10.0-5'\n+        setUpML '$WORKSPACE/xdmp/src/Mark*.rpm'\n+        sh 'export JAVA_HOME=`eval echo \"$JAVA_HOME_DIR\"`;export GRADLE_USER_HOME=$WORKSPACE$GRADLE_DIR;export M2_HOME=$MAVEN_HOME/bin;export PATH=$JAVA_HOME/bin:$GRADLE_USER_HOME:$PATH:$MAVEN_HOME/bin;cd $WORKSPACE/data-hub;rm -rf $GRADLE_USER_HOME/caches;set +e;./gradlew clean;./gradlew marklogic-data-hub:bootstrap -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-central:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/ |& tee console.log;sleep 10s;./gradlew ml-data-hub:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;./gradlew web:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-spark-connector:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;'\n+        junit '**/TEST-*.xml'\n+        cobertura coberturaReportFile: '**/cobertura-coverage.xml'\n+        jacoco()\n+        def output=readFile 'data-hub/console.log'\n+        def result=false;\n+        if(output.contains(\"npm ERR!\")){\n+            result=true;\n+        }\n+        if(result){\n+            currentBuild.result='UNSTABLE'\n+        }\n+        if(env.CHANGE_TITLE){\n+            JIRA_ID=env.CHANGE_TITLE.split(':')[0]\n+            jiraAddComment comment: 'Jenkins Unit Test Results For PR Available', idOrKey: JIRA_ID, site: 'JIRA'\n+        }\n+        if(!env.CHANGE_URL){\n+            env.CHANGE_URL=\" \"\n+        }\n+    }\n+}\n+\n+void PreBuildCheck() {\n+    script{\n+        if(env.CHANGE_ID){\n+            if(PRDraftCheck()){\n+                sh 'exit 1'\n+            }\n+            def reviewState=getReviewState()\n+            if((!env.CHANGE_TITLE.startsWith(\"DHFPROD-\"))){", "originalCommit": "5a41ec74491732a638816c0e87d61328613abc8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMjA0NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r541102045", "bodyText": "These stages FlexCodeScan and PUblishAnddhs should run in parallel.", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-11T17:17:43Z", "path": "Jenkinsfile", "diffHunk": "@@ -636,7 +719,22 @@ pipeline{\n                   }\n                   }\n \t\t}\n-            stage('publishAnddhs'){\n+        stage('FlexCodeScan'){", "originalCommit": "5a41ec74491732a638816c0e87d61328613abc8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dab3ae4d7e2ef69f6beb3e92d344ca8cd00f39ce", "url": "https://github.com/marklogic/marklogic-data-hub/commit/dab3ae4d7e2ef69f6beb3e92d344ca8cd00f39ce", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-12T00:57:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU4NzQ4OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r542587488", "bodyText": "Should be || instead of &&", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-14T17:55:24Z", "path": "Jenkinsfile", "diffHunk": "@@ -229,6 +230,152 @@ def runCypressE2e(){\n         junit '**/e2e/**/*.xml'\n     }\n }\n+\n+void postFailureFiexcodeScanAndReport(def vulnerabilities){\n+    def email=''\n+    if(env.CHANGE_AUTHOR){\n+        def author=env.CHANGE_AUTHOR.toString().trim().toLowerCase()\n+        email=getEmailFromGITUser author\n+    }\n+    else { email=Email }\n+\n+    def body=''\n+    vulnerabilities.each { msg -> body=body+msg + '<p>' }\n+    body = body + '<p>scan report is attached.'\n+\n+    sendMail email,\"<h3>Pipeline FAILED in stage ${STAGE_NAME} <a href=${BUILD_URL}/console> Check Console Output Here</a></h4>  High vulneribilities: <p> $body\",false,\" pipeline FAILED in ${STAGE_NAME} \", 'inventoriesRprt.report.json'\n+}\n+\n+def fiexcodeScanAndReport(){\n+\n+    def palamida_url=\"http://palamida-2.marklogic.com:8888\"\n+    def inventoriesRprt=''\n+\n+    withCredentials([string(credentialsId: 'palamida_jwt', variable: 'jwt')]) {\n+\n+        StartScan(baseUrl: palamida_url, projectName: 'ml-dhf', token: jwt)\n+\n+        inventoriesRprt = sh(returnStdout: true, script: '''curl -X GET ''' + palamida_url + '''/codeinsight/api/project/inventory/21 -H \"Authorization: Bearer $jwt\" ''')\n+    }\n+\n+    writeFile(file: 'inventoriesRprt.report.json', text: inventoriesRprt)\n+\n+    def slurper = new JsonSlurperClassic().parseText(inventoriesRprt.toString().trim())\n+\n+    def vulnerabilities = []\n+    slurper.inventoryItems.each { key, value ->\n+        key.vulnerabilities.each { key1, value1 ->\n+            if(key1.vulnerabilityCvssV3Severity == 'CRITICAL' || key1.vulnerabilityCvssV3Severity == 'HIGH'){\n+                def msg = \"    inventory name: $key.name; volnarability name: $key1.vulnerabilityName; with Severity V2: $key1.vulnerabilityCvssV2Severity; with Severity V3: $key1.vulnerabilityCvssV3Severity; \"\n+                vulnerabilities.add(msg)\n+            }\n+        }}\n+\n+    archiveArtifacts artifacts: 'inventoriesRprt.report.json'\n+\n+    return vulnerabilities\n+\n+}\n+\n+void UnitTest(){\n+    script{\n+        props = readProperties file:'data-hub/pipeline.properties';\n+        copyRPM 'Release','10.0-5'\n+        setUpML '$WORKSPACE/xdmp/src/Mark*.rpm'\n+        sh 'export JAVA_HOME=`eval echo \"$JAVA_HOME_DIR\"`;export GRADLE_USER_HOME=$WORKSPACE$GRADLE_DIR;export M2_HOME=$MAVEN_HOME/bin;export PATH=$JAVA_HOME/bin:$GRADLE_USER_HOME:$PATH:$MAVEN_HOME/bin;cd $WORKSPACE/data-hub;rm -rf $GRADLE_USER_HOME/caches;set +e;./gradlew clean;./gradlew marklogic-data-hub:bootstrap -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-central:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/ |& tee console.log;sleep 10s;./gradlew ml-data-hub:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;./gradlew web:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-spark-connector:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;'\n+        junit '**/TEST-*.xml'\n+        cobertura coberturaReportFile: '**/cobertura-coverage.xml'\n+        jacoco()\n+        def output=readFile 'data-hub/console.log'\n+        def result=false;\n+        if(output.contains(\"npm ERR!\")){\n+            result=true;\n+        }\n+        if(result){\n+            currentBuild.result='UNSTABLE'\n+        }\n+        if(env.CHANGE_TITLE){\n+            JIRA_ID=env.CHANGE_TITLE.split(':')[0]\n+            jiraAddComment comment: 'Jenkins Unit Test Results For PR Available', idOrKey: JIRA_ID, site: 'JIRA'\n+        }\n+        if(!env.CHANGE_URL){\n+            env.CHANGE_URL=\" \"\n+        }\n+    }\n+}\n+\n+void PreBuildCheck() {\n+ if(env.CHANGE_ID){\n+   if(PRDraftCheck()){ sh 'exit 1' }\n+   def reviewState=getReviewState()\n+   if((!env.CHANGE_TITLE.startsWith(\"DHFPROD-\")) && (!env.CHANGE_TITLE.startsWith(\"DEVO-\"))){", "originalCommit": "dab3ae4d7e2ef69f6beb3e92d344ca8cd00f39ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYzNTYyNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r542635624", "bodyText": "I believe it has to be && since it negative condition:\n**!**env.CHANGE_TITLE.startsWith(\"DHFPROD-\")", "author": "yafeldman", "createdAt": "2020-12-14T18:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU4NzQ4OA=="}], "type": "inlineReview"}, {"oid": "93aa3cca0faf3d73cbf57afba1943f11833a5306", "url": "https://github.com/marklogic/marklogic-data-hub/commit/93aa3cca0faf3d73cbf57afba1943f11833a5306", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T18:49:52Z", "type": "forcePushed"}, {"oid": "2a675a6963a40e026252a8a4bf2992ac3ce74273", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2a675a6963a40e026252a8a4bf2992ac3ce74273", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T19:15:14Z", "type": "forcePushed"}, {"oid": "0f7d8c057444c059c9de4fea6543517e6d3260db", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0f7d8c057444c059c9de4fea6543517e6d3260db", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T19:23:45Z", "type": "forcePushed"}, {"oid": "7d9655d418876ba4a8e5274afaa072b200e5212a", "url": "https://github.com/marklogic/marklogic-data-hub/commit/7d9655d418876ba4a8e5274afaa072b200e5212a", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T19:27:08Z", "type": "forcePushed"}, {"oid": "379e3ca50621d7fd875529fd80a809f2c91996cc", "url": "https://github.com/marklogic/marklogic-data-hub/commit/379e3ca50621d7fd875529fd80a809f2c91996cc", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T21:03:48Z", "type": "forcePushed"}, {"oid": "73579cffca2cccdb224f75e3c85a5c5cb5fd07ec", "url": "https://github.com/marklogic/marklogic-data-hub/commit/73579cffca2cccdb224f75e3c85a5c5cb5fd07ec", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T21:10:04Z", "type": "forcePushed"}, {"oid": "ef3c325b4afdc8fb122541700db81f2ac1908f13", "url": "https://github.com/marklogic/marklogic-data-hub/commit/ef3c325b4afdc8fb122541700db81f2ac1908f13", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-14T21:15:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzMzIwNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r543433204", "bodyText": "Why are these changed?", "author": "SameeraPriyathamTadikonda", "createdAt": "2020-12-15T15:15:23Z", "path": "Jenkinsfile", "diffHunk": "@@ -21,17 +22,18 @@ def dhflinuxTests(String mlVersion,String type){\n     \t\tprops = readProperties file:'data-hub/pipeline.properties';\n     \t\tcopyRPM type,mlVersion\n     \t\tdef dockerhost=setupMLDockerCluster 3\n-    \t\tsh 'docker exec -u builder -i '+dockerhost+' /bin/sh -c \"su -builder;export JAVA_HOME=`eval echo \"$JAVA_HOME_DIR\"`;export GRADLE_USER_HOME=$WORKSPACE$GRADLE_DIR;export M2_HOME=$MAVEN_HOME/bin;export PATH=$JAVA_HOME/bin:$GRADLE_USER_HOME:$PATH:$MAVEN_HOME/bin;cd $WORKSPACE/data-hub;rm -rf $GRADLE_USER_HOME/caches;./gradlew clean;set +e;./gradlew marklogic-data-hub:bootstrapAndTest -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-central:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/ |& tee console.log;sleep 10s;./gradlew ml-data-hub:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew web:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-spark-connector:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s; ./gradlew marklogic-data-hub:testBootstrap -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew ml-data-hub:testFullCycle -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;\"'\n+    \t\tsh 'docker exec -u builder -i '+dockerhost+' /bin/sh -c \"su -builder;export JAVA_HOME=`eval echo \"$JAVA_HOME_DIR\"`;export GRADLE_USER_HOME=$WORKSPACE$GRADLE_DIR;export M2_HOME=$MAVEN_HOME/bin;export PATH=$JAVA_HOME/bin:$GRADLE_USER_HOME:$PATH:$MAVEN_HOME/bin;cd $WORKSPACE/data-hub;rm -rf $GRADLE_USER_HOME/caches;./gradlew clean;set +e;./gradlew marklogic-data-hub:bootstrapAndTest -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-central:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/ |& tee console.log;sleep 10s;./gradlew ml-data-hub:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew web:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew marklogic-data-hub-spark-connector:test -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;./gradlew ml-data-hub:testFullCycle -i --stacktrace -PnodeDistributionBaseUrl=http://node-mirror.eng.marklogic.com:8080/;sleep 10s;\"'", "originalCommit": "ef3c325b4afdc8fb122541700db81f2ac1908f13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NTk4OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r543585989", "bodyText": "Tried to fix conflict which I am not sure why this conflict happened. Most likely came form IDE editing.", "author": "yafeldman", "createdAt": "2020-12-15T18:31:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzMzIwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODcyNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r543568727", "bodyText": "Should it be Flex instead of Fiex?", "author": "akshaysonvane", "createdAt": "2020-12-15T18:05:28Z", "path": "Jenkinsfile", "diffHunk": "@@ -229,6 +231,154 @@ def runCypressE2e(){\n         junit '**/e2e/**/*.xml'\n     }\n }\n+\n+void postFailureFiexcodeScanAndReport(def vulnerabilities){", "originalCommit": "ef3c325b4afdc8fb122541700db81f2ac1908f13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NjA5NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r543586094", "bodyText": "fixed", "author": "yafeldman", "createdAt": "2020-12-15T18:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODcyNw=="}], "type": "inlineReview"}, {"oid": "e6ae46404b4ea6884a9473a4449ae3cdf60c8bbe", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e6ae46404b4ea6884a9473a4449ae3cdf60c8bbe", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-15T18:28:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzQ4MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r543613481", "bodyText": "Need the typo fix here as well.", "author": "akshaysonvane", "createdAt": "2020-12-15T19:08:36Z", "path": "Jenkinsfile", "diffHunk": "@@ -229,6 +231,154 @@ def runCypressE2e(){\n         junit '**/e2e/**/*.xml'\n     }\n }\n+\n+void postFailureFlexcodeScanAndReport(def vulnerabilities){\n+    def email=''\n+    if(env.CHANGE_AUTHOR){\n+        def author=env.CHANGE_AUTHOR.toString().trim().toLowerCase()\n+        email=getEmailFromGITUser author\n+    }\n+    else { email=Email }\n+\n+    email = email + ',Kavitha.Sivagnanam@marklogic.com'\n+\n+    def body=''\n+    vulnerabilities.each { msg -> body=body+msg + '<p>' }\n+    body = body + '<p>scan report is attached.'\n+\n+    sendMail email,\"<h3>Pipeline FAILED in stage ${STAGE_NAME} <a href=${BUILD_URL}/console> Check Console Output Here</a></h4>  High vulneribilities: <p> $body\",false,\" pipeline FAILED in ${STAGE_NAME} \", 'inventoriesRprt.report.json'\n+}\n+\n+def fiexcodeScanAndReport(){", "originalCommit": "e6ae46404b4ea6884a9473a4449ae3cdf60c8bbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NTIwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4955#discussion_r543655206", "bodyText": "fixed", "author": "yafeldman", "createdAt": "2020-12-15T20:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzQ4MQ=="}], "type": "inlineReview"}, {"oid": "cf534f1913595df26148ed6e718bc597d2ce287c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/cf534f1913595df26148ed6e718bc597d2ce287c", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-15T19:13:29Z", "type": "commit"}, {"oid": "cf534f1913595df26148ed6e718bc597d2ce287c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/cf534f1913595df26148ed6e718bc597d2ce287c", "message": "DEVO-110:Update DHF Develop pipeline to include palamida scan", "committedDate": "2020-12-15T19:13:29Z", "type": "forcePushed"}]}