{"pr_number": 4325, "pr_title": "DHFPROD-5550: Tooltip and indicator for identifier column", "pr_createdAt": "2020-07-31T15:42:44Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4325", "timeline": [{"oid": "efaffeb8b7034e86cce0930d9002eba0b7f68a22", "url": "https://github.com/marklogic/marklogic-data-hub/commit/efaffeb8b7034e86cce0930d9002eba0b7f68a22", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-03T15:06:20Z", "type": "forcePushed"}, {"oid": "fc98beaa7e863c997364ec3d630f08e90e1b9884", "url": "https://github.com/marklogic/marklogic-data-hub/commit/fc98beaa7e863c997364ec3d630f08e90e1b9884", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-03T19:47:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2MzkwNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465163907", "bodyText": "Its better to create a props object that can then be used in render. We will then have a common set of props required for the component and can add overrides based on the needs of the test. We can avoid making changes in every test like adding primaryKey in this PR and the tests will be maintainable.", "author": "bsrikan", "createdAt": "2020-08-04T16:08:05Z", "path": "marklogic-data-hub-central/ui/src/components/column-selector/column-selector.test.tsx", "diffHunk": "@@ -1,24 +1,24 @@\n import React from 'react';\n import ColumnSelector from './column-selector';\n-import { render, fireEvent } from '@testing-library/react';\n-import {entityPropertyDefinitions, selectedPropertyDefinitions} from \"../../assets/mock-data/entity-search\";\n+import { render, fireEvent, waitForElement } from '@testing-library/react';\n+import { entityPropertyDefinitions, selectedPropertyDefinitions } from \"../../assets/mock-data/entity-search\";\n \n-let columns = ['id', 'firstName', 'lastName', 'age', 'phoneNumber.work']\n+let columns = ['customerId', 'name', 'nicknames', 'shipping', 'billing']\n \n describe('Column selector component', () => {\n \n   test('Verify popover is visible', () => {\n-    const { queryByTestId } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns}/>);\n+    const { queryByTestId } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns} primaryKey={''}/>);", "originalCommit": "fc98beaa7e863c997364ec3d630f08e90e1b9884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMzE3MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465303171", "bodyText": "Agree it's better to use props objects and override them when needed. Thanks.", "author": "timur-isangulov", "createdAt": "2020-08-04T20:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2MzkwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTk3MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465169970", "bodyText": "All these tests for popover and tooltips, we should group them together instead of adding 1 line tests.", "author": "bsrikan", "createdAt": "2020-08-04T16:16:54Z", "path": "marklogic-data-hub-central/ui/src/components/column-selector/column-selector.test.tsx", "diffHunk": "@@ -27,19 +27,32 @@ describe('Column selector component', () => {\n   });\n \n   test('Verify cancel button closes popover', () => {\n-    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns}/>);\n+    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns} primaryKey={''}/>);\n     const cancelButton = getByText('Cancel');\n     cancelButton.onclick = jest.fn();\n     fireEvent.click(cancelButton);\n     expect(cancelButton.onclick).toHaveBeenCalledTimes(1);\n   });\n \n   test('Verify apply button closes popover', () => {\n-    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns}/>);\n+    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns} primaryKey={''}/>);\n     const applyButton = getByText('Apply');\n     applyButton.onclick = jest.fn();\n     fireEvent.click(applyButton);\n     expect(applyButton.onclick).toHaveBeenCalledTimes(1);\n   });\n+\n+  test('Verify primaryKey tooltip renders', async () => {", "originalCommit": "fc98beaa7e863c997364ec3d630f08e90e1b9884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMzY0MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465303640", "bodyText": "Merged tests.", "author": "timur-isangulov", "createdAt": "2020-08-04T20:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MzU1MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465173551", "bodyText": "there is already a test for column selector visibility and the test to verify tooltip should go in there. All tests should be grouped together when possible. We should try to avoid one line tests. A typical user would not login to HC and navigate to explorer tile to verify tooltip or popover closes.\nLets remember the Guiding Principle of RTL whenever tests are added -- \"The more your tests resemble the way your software is used, the more confidence they can give you.\"", "author": "bsrikan", "createdAt": "2020-08-04T16:22:40Z", "path": "marklogic-data-hub-central/ui/src/components/column-selector/column-selector.test.tsx", "diffHunk": "@@ -27,19 +27,32 @@ describe('Column selector component', () => {\n   });\n \n   test('Verify cancel button closes popover', () => {\n-    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns}/>);\n+    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns} primaryKey={''}/>);\n     const cancelButton = getByText('Cancel');\n     cancelButton.onclick = jest.fn();\n     fireEvent.click(cancelButton);\n     expect(cancelButton.onclick).toHaveBeenCalledTimes(1);\n   });\n \n   test('Verify apply button closes popover', () => {\n-    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns}/>);\n+    const { getByText } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns} primaryKey={''}/>);\n     const applyButton = getByText('Apply');\n     applyButton.onclick = jest.fn();\n     fireEvent.click(applyButton);\n     expect(applyButton.onclick).toHaveBeenCalledTimes(1);\n   });\n+\n+  test('Verify primaryKey tooltip renders', async () => {\n+    const { getByTestId } = render(<ColumnSelector popoverVisibility={true} setPopoverVisibility={jest.fn()} entityPropertyDefinitions={entityPropertyDefinitions} selectedPropertyDefinitions={selectedPropertyDefinitions} setColumnSelectorTouched={jest.fn()} columns={columns} primaryKey={'customerId'}/>);\n+    expect(getByTestId('pk-tooltip')).toBeInTheDocument();\n+  });\n+\n+\n+  test('Verify column selector tooltips renders', async () => {", "originalCommit": "fc98beaa7e863c997364ec3d630f08e90e1b9884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMzUxNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465303517", "bodyText": "Merged tests.", "author": "timur-isangulov", "createdAt": "2020-08-04T20:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MzU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTMxMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465175312", "bodyText": "@timur-isangulov Removing hasOwnProperty condition will throw an error when user clicks on last processed time from modelling screen", "author": "Sanjeevani19", "createdAt": "2020-08-04T16:25:25Z", "path": "marklogic-data-hub-central/ui/src/pages/Browse.tsx", "diffHunk": "@@ -160,23 +160,24 @@ const Browse: React.FC<Props> = ({ location }) => {\n       }\n       applySaveQuery(options);\n     }\n-    if(location.state && location.hasOwnProperty('zeroState') && !location.state['zeroState']){\n-        setPageWithEntity(location.state['entity'],\n-            location.state['pageNumber'],\n-            location.state['start'],\n-            location.state['searchFacets'],\n-            location.state['query'])\n-        location.state['tableView'] ? toggleTableView(true) : toggleTableView(false);\n-    }\n-    if(location.state && location.state['entityName'] && location.state['jobId']){\n-        setLatestJobFacet(location.state['jobId'], location.state['entityName']);\n+\n+    if (location.state && location.state['entityName'] && location.state['jobId']) {\n+      setLatestJobFacet(location.state['jobId'], location.state['entityName']);\n     }\n     if (location.state && location.state['entity']) {\n       setEntityClearQuery(location.state['entity']);\n     }\n     if (location.state && location.state['jobId']) {\n       setLatestJobFacet(location.state['jobId'], location.state['entityName']);\n     }\n+    if (location.state && !location.state['zeroState']) {", "originalCommit": "fc98beaa7e863c997364ec3d630f08e90e1b9884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5ODI5MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465198290", "bodyText": "A very solid reason to add RTL tests for Browse page.", "author": "bsrikan", "createdAt": "2020-08-04T17:03:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNDQwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465304406", "bodyText": "Hi Sanjeevani, thank you for testing and noticing this case. I changed the logic can you please review again.", "author": "timur-isangulov", "createdAt": "2020-08-04T20:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTMxMg=="}], "type": "inlineReview"}, {"oid": "290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "url": "https://github.com/marklogic/marklogic-data-hub/commit/290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-04T20:07:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4OTUzNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465389535", "bodyText": "Must verify the warning message. This can be verified via RTL as well, just FYI.", "author": "bsrikan", "createdAt": "2020-08-04T23:41:29Z", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.queries.tsx", "diffHunk": "@@ -361,6 +361,12 @@ describe('save/manage queries scenarios, developer role', () => {\n         browsePage.getExploreButton().click();\n     })\n \n+    it('verify export array/structured data warning', () => {\n+        browsePage.selectEntity('Order');\n+        browsePage.getSelectedEntity().should('contain', 'Order');\n+        browsePage.getDataExportIcon().click();\n+        browsePage.getStructuredDataWarning().should('be.visible');", "originalCommit": "290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4OTc2OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465389769", "bodyText": "can we try using cy.findByTestId.", "author": "bsrikan", "createdAt": "2020-08-04T23:42:22Z", "path": "marklogic-data-hub-central/ui/e2e/cypress/support/pages/browse.tsx", "diffHunk": "@@ -461,6 +465,17 @@ class BrowsePage {\n   }\n \n \n+  //data export modal\n+  getStructuredDataWarning() {\n+    return cy.get('[data-testid=\"export-warning\"]');", "originalCommit": "290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5Nzg4Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465397882", "bodyText": "Not sure if the cypress has this function, the RTL does have.", "author": "timur-isangulov", "createdAt": "2020-08-05T00:09:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4OTc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwOTEyOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465409129", "bodyText": "I am surprised you arent aware. We have imported RTL extension for cypress that lets us use data-testid and some other methods that we are familiar with in RTL, since couple of months.\nJust type cy.find and you will see.", "author": "bsrikan", "createdAt": "2020-08-05T00:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4OTc2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1ODYyNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465758627", "bodyText": "ok. replaced to findByTestId.", "author": "timur-isangulov", "createdAt": "2020-08-05T14:15:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4OTc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MDM2MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465390361", "bodyText": "Need a test to verify this tooltip.", "author": "bsrikan", "createdAt": "2020-08-04T23:44:26Z", "path": "marklogic-data-hub-central/ui/src/components/column-selector/column-selector.tsx", "diffHunk": "@@ -94,10 +97,14 @@ const ColumnSelector: React.FC<Props> = (props) => {\n         }\n       }\n       if (item.visible === false) {\n-        return <TreeNode style={{ display: 'none' }} title={title} disabled={item.key === primaryKey} disableCheckbox={item.key === primaryKey} key={item.key} />;\n-\n+        return <TreeNode style={{ display: 'none' }} title={title} key={item.key} />;\n       } else {\n-        return <TreeNode title={title} disabled={item.key === primaryKey} disableCheckbox={item.key === primaryKey} key={item.key} />;\n+        if (item && primaryKey && item.key === primaryKey.key) {\n+          let pkTitle = <MLTooltip title={'The column identified as the unique identifier must always be displayed.'} placement=\"top\">{title}</MLTooltip>", "originalCommit": "290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5Nzk2Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465397962", "bodyText": "Added test.", "author": "timur-isangulov", "createdAt": "2020-08-05T00:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MDM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTIzNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465391237", "bodyText": "i believe this is the fix for browser back button issue. Need a test for this.", "author": "bsrikan", "createdAt": "2020-08-04T23:47:22Z", "path": "marklogic-data-hub-central/ui/src/pages/Browse.tsx", "diffHunk": "@@ -160,23 +160,21 @@ const Browse: React.FC<Props> = ({ location }) => {\n       }\n       applySaveQuery(options);\n     }\n-    if(location.state && location.hasOwnProperty('zeroState') && !location.state['zeroState']){\n-        setPageWithEntity(location.state['entity'],\n-            location.state['pageNumber'],\n-            location.state['start'],\n-            location.state['searchFacets'],\n-            location.state['query'])\n-        location.state['tableView'] ? toggleTableView(true) : toggleTableView(false);\n+\n+    if (location.state && location.state.hasOwnProperty('zeroState') && !location.state['zeroState']) {", "originalCommit": "290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjI4MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465392280", "bodyText": "There are tests for that created before by Sanjeevni.", "author": "timur-isangulov", "createdAt": "2020-08-04T23:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMTY4Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465411686", "bodyText": "That test doesnt verify the issue for HTTP 400 console error. The test passes I believe which indicates that it doesnt verify the issue in question. Other than console error we also get this:\n\nIf this bug fixes these issues then we need a test for the same. Hope you have reproduced the issue and have steps to add a test for the same.", "author": "bsrikan", "createdAt": "2020-08-05T01:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2NjQ1MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465766451", "bodyText": "The 400 error happened because of the incorrect api request caused by array in array in the searchOptions property. We do have explicit test for this case e.g. clicking back on details page and verifying searchOptions that failed before.\n//Verify navigating back from detail view should persist search options\ndetailPage.clickBackButton();\nbrowsePage.getSelectedEntity().should('contain', 'Person');\nbrowsePage.getClearFacetSearchSelection('Alice').should('exist');\nbrowsePage.getSearchText().should('have.value', 'Alice')\nbrowsePage.getTableView().should('have.css', 'background-color', 'rgb(68, 73, 156)')", "author": "timur-isangulov", "createdAt": "2020-08-05T14:25:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTIzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTcyOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465391728", "bodyText": "Not sure what this is for. can you pls explain.", "author": "bsrikan", "createdAt": "2020-08-04T23:49:11Z", "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query-modal/manage-query.tsx", "diffHunk": "@@ -129,9 +128,23 @@ const QueryModal = (props) => {\n                 query = selectedQuery;\n             }\n         })\n+\n+        //hadle array datatype ", "originalCommit": "290164fdbbf0d0eaf7b7476c40cbd02921e847bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5ODAyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465398021", "bodyText": "Removed.", "author": "timur-isangulov", "createdAt": "2020-08-05T00:10:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMjIzMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465412231", "bodyText": "Comments are good to have and I was asking for the intent of the code after this comment.", "author": "bsrikan", "createdAt": "2020-08-05T01:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MTcyOA=="}], "type": "inlineReview"}, {"oid": "0c135d1ca4583f2a5ca1fe6f819f1c4a9eaf5b10", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0c135d1ca4583f2a5ca1fe6f819f1c4a9eaf5b10", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-05T00:04:14Z", "type": "forcePushed"}, {"oid": "bad52702f835d5057fa75ce5a09f58364b7163a5", "url": "https://github.com/marklogic/marklogic-data-hub/commit/bad52702f835d5057fa75ce5a09f58364b7163a5", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-05T00:08:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMjg2NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465412865", "bodyText": "I was asking for what this code block is for, so I can comment on what type of tests we should add.", "author": "bsrikan", "createdAt": "2020-08-05T01:05:23Z", "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query-modal/manage-query.tsx", "diffHunk": "@@ -129,9 +128,22 @@ const QueryModal = (props) => {\n                 query = selectedQuery;\n             }\n         })\n+\n+        let arrayProperties = new Array();\n+        props.entityDefArray && props.entityDefArray.forEach(entity => {\n+            if (entity.name === query.savedQuery.query.entityTypeIds[0]) {\n+                entity.properties && entity.properties.forEach(prop => {\n+                    if (prop.ref.length === 0 && prop.datatype === 'array') {\n+                        arrayProperties.push(prop.name)\n+                    }\n+                });", "originalCommit": "bad52702f835d5057fa75ce5a09f58364b7163a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2OTU2MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4325#discussion_r465769561", "bodyText": "This just looking for array datatype in the properties. I don't think comments are needed for the simple functions.", "author": "timur-isangulov", "createdAt": "2020-08-05T14:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMjg2NQ=="}], "type": "inlineReview"}, {"oid": "f7984c6bbceaebb9486a7653af7d948f158c5f9c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f7984c6bbceaebb9486a7653af7d948f158c5f9c", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-05T14:35:12Z", "type": "commit"}, {"oid": "f7984c6bbceaebb9486a7653af7d948f158c5f9c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f7984c6bbceaebb9486a7653af7d948f158c5f9c", "message": "DHFPROD-5550: Tooltip and indicator for identifier column", "committedDate": "2020-08-05T14:35:12Z", "type": "forcePushed"}]}