{"pr_number": 4114, "pr_title": "DHFPROD-4180: Delete entity model", "pr_createdAt": "2020-06-18T20:21:19Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4114", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4MTY0OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442481648", "bodyText": "We need this for deploying search options.", "author": "akshaysonvane", "createdAt": "2020-06-18T20:23:02Z", "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/data-hub-entity-model-writer.json", "diffHunk": "@@ -2,13 +2,19 @@\n   \"role-name\": \"data-hub-entity-model-writer\",\n   \"description\": \"Permits updating entity model documents\",\n   \"role\": [\n-    \"data-hub-common-writer\"\n+    \"data-hub-common-writer\",\n+    \"tde-admin\"\n   ],\n   \"privilege\": [\n     {\n       \"privilege-name\": \"any-uri\",\n       \"action\": \"http://marklogic.com/xdmp/privileges/any-uri\",\n       \"kind\": \"execute\"\n+    },\n+    {\n+      \"privilege-name\": \"rest-admin\",", "originalCommit": "499bdabdf6b331062396150dae900a0dc871fc47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4MjA4Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442482082", "bodyText": "We need this so the TDE's can be updated once we delete the entity model.", "author": "akshaysonvane", "createdAt": "2020-06-18T20:23:57Z", "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/data-hub-entity-model-writer.json", "diffHunk": "@@ -2,13 +2,19 @@\n   \"role-name\": \"data-hub-entity-model-writer\",\n   \"description\": \"Permits updating entity model documents\",\n   \"role\": [\n-    \"data-hub-common-writer\"\n+    \"data-hub-common-writer\",\n+    \"tde-admin\"", "originalCommit": "499bdabdf6b331062396150dae900a0dc871fc47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4Nzc5Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442487796", "bodyText": "Moved TDE deletion from the trigger to this data service.\nThe previous TDE deletion code in the trigger module wasn't working as the URL for trigger document needs the model version which can only be obtained from the entity model that was originally deleted.\nIn order to make that work, we would have needed to perform a point in time query to fetch the entity model using something like this: xdmp:request-timestamp()-1.\nAs this is a post-commit trigger the task would be queued in the task server and run sometime after the original transaction commits. Since request timestamp value refers to when the task server executes the task and not the original deletion request, there wouldn\u2019t be a reliable way to fetch the file in time.", "author": "akshaysonvane", "createdAt": "2020-06-18T20:35:59Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/models/deleteModel.sjs", "diffHunk": "@@ -19,8 +19,23 @@ const ds = require(\"/data-hub/5/data-services/ds-utils.sjs\");\n const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n \n var entityName;\n-if (entityName === undefined || entityName === null) {\n+if (!entityName) {\n   ds.throwBadRequest(\"Must specify a name in order to delete an entity model\");\n }\n \n+const entityModel = entityLib.findModelByEntityName(entityName);\n+if (!entityModel) {\n+  ds.throwServerError(`Could not find entity model with name: ${entityName}`);\n+}\n+\n+const entityTypeId = entityLib.getEntityTypeId(entityModel, entityName);\n+const entityModelUri = entityLib.getModelUri(entityName);\n+\n+const steps = entityLib.findModelReferencesInSteps(entityName, entityTypeId);\n+if (steps.length) {\n+  ds.throwServerError(`Cannot delete the entity type '${entityName}' because it is referenced by the following step names: ${steps}`);\n+}\n+\n entityLib.deleteModel(entityName);\n+entityLib.deleteModelReferencesInOtherModels(entityModelUri, entityTypeId);\n+entityLib.deleteModelRelatedTDE(entityName);", "originalCommit": "499bdabdf6b331062396150dae900a0dc871fc47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjQwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442522406", "bodyText": "There are a few other tests that depend on this folder - let's hold off on renaming this, as it's adding to the number of files modified in this PR.", "author": "rjrudin", "createdAt": "2020-06-18T21:51:41Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/hubcentral/ApplyDownloadedZipToProjectTest.java", "diffHunk": "@@ -36,7 +36,7 @@\n      */\n     @Test\n     void deleteOneEntityThenDownloadAndApply() {\n-        installProjectInFolder(\"test-projects/all-artifacts\");\n+        installProjectInFolder(\"test-projects/download-artifacts\");", "originalCommit": "499bdabdf6b331062396150dae900a0dc871fc47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMzU2MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442533560", "bodyText": "Since we are deleting the entity model which is referenced by a couple of mapping artifacts in the ApplyDownloadedZipToProjectTest it used to fail based on the new changes in this PR.\nI created a new project called download-artifacts based on the all-artifacts(not touching it since other tests depend on it) project, the difference here is that I've removed the steps that referenced the Entity that was being deleted so the tests can pass.", "author": "akshaysonvane", "createdAt": "2020-06-18T22:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjQwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjk0OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442522949", "bodyText": "While this is a good change, let's hold off on in and use a separate JIRA/PR to clean up the copyright years. I did a quick search, and there are a lot more issues to fix than just these. It'll shrink the size of this PR which is good too, since it has some complex stuff in it.", "author": "rjrudin", "createdAt": "2020-06-18T21:53:03Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/models/getPrimaryEntityTypes.sjs", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-  Copyright 2012-2019 MarkLogic Corporation\n+  Copyright (c) 2020 MarkLogic Corporation", "originalCommit": "499bdabdf6b331062396150dae900a0dc871fc47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzNzI4Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442537283", "bodyText": "Done", "author": "akshaysonvane", "createdAt": "2020-06-18T22:33:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjk0OQ=="}], "type": "inlineReview"}, {"oid": "586bcb28b49b7af71c033acd179c002c0f218e07", "url": "https://github.com/marklogic/marklogic-data-hub/commit/586bcb28b49b7af71c033acd179c002c0f218e07", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-18T22:29:41Z", "type": "forcePushed"}, {"oid": "c99842fef1e71a10c8064f9d60a7b8db08856f92", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c99842fef1e71a10c8064f9d60a7b8db08856f92", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-19T23:18:38Z", "type": "forcePushed"}, {"oid": "bf30fb133ca9217098757fe619c18aa56bb17ac9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/bf30fb133ca9217098757fe619c18aa56bb17ac9", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-20T01:49:13Z", "type": "forcePushed"}, {"oid": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/3cb193feff072b96ea7d2a06318fc27d66f6775c", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-20T20:15:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwNDcyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443604726", "bodyText": "I think it's important to document why we're not doing anything with indexes or protected paths here because we don't have a reliable way to identify the ones to delete and we only expect entity types to be deleted in a development environment where it's usually fine if some old indexes / protected paths hang around. I say this because when I looked at this, I immediately thought - what about indexes? - before remembering that we're taking the approach above. 6 months from now, we'll be glad we have a comment here explaining why.", "author": "rjrudin", "createdAt": "2020-06-22T14:34:52Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -90,6 +90,21 @@\n         return new ResponseEntity<>(HttpStatus.OK);\n     }\n \n+    @RequestMapping(value = \"/{modelName}\", method = RequestMethod.DELETE)\n+    @Secured(\"ROLE_writeEntityModel\")\n+    public ResponseEntity<Void> deleteModel(@PathVariable String modelName) {\n+        newService().deleteModel(modelName);", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwOTEyNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443609127", "bodyText": "I appreciate the intent here, but I don't think it's easy for a reader to understand what's going on here. I think a more descriptive method name would be \"doAsDeveloperAndThenLoginAs\" but that's pretty wordy.\nI actually prefer how it reads before. I think the only thing being avoided by the new approach is the call to \"loginAsTestUserWithRoles\", and I think it's beneficial for a reader to see that so the reader knows that the user is being switched. I'm good with shortening that to loginAsTestUser(String... roles), I think the \"WithRoles\" is probably unnecessary.", "author": "rjrudin", "createdAt": "2020-06-22T14:40:22Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "diffHunk": "@@ -31,11 +31,10 @@\n \n     @Test\n     void testValidateMappings() throws Exception {\n-        runAsDataHubDeveloper();\n-        ReferenceModelProject project = installOnlyReferenceModelEntities();\n-        project.createRawCustomer(1, \"Jane\");\n-\n-        loginAsTestUserWithRoles(\"hub-central-mapping-reader\");\n+        elevateToDeveloperRole(() -> {", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwOTc0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443609747", "bodyText": "WithMockUser shouldn't be needed anymore, right?", "author": "rjrudin", "createdAt": "2020-06-22T14:41:11Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/model/DeleteModelTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.marklogic.hub.central.controllers.model;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.FailedRequestException;\n+import com.marklogic.client.document.GenericDocumentManager;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.central.controllers.ModelController;\n+import com.marklogic.hub.impl.EntityManagerImpl;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import java.util.function.Consumer;\n+import java.util.stream.Stream;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class DeleteModelTest extends AbstractModelTest {\n+\n+    @Autowired\n+    ModelController controller;\n+\n+    @Test\n+    @WithMockUser(roles = {\"writeEntityModel\"})", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1ODAxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443658014", "bodyText": "It's required to make spring security happy as this is not using the MockMvc test framework.", "author": "akshaysonvane", "createdAt": "2020-06-22T15:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwOTc0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMDUyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443610520", "bodyText": "Since the \"models\" list contains entity names, this should really be called \"entityNames\", not \"models\". My assumption is that if something is called \"models\", it's a list of JSON entity models.", "author": "rjrudin", "createdAt": "2020-06-22T14:42:10Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -253,4 +268,9 @@ private ModelsService newService() {\n     public static class UpdateModelInfoInput {\n         public String description;\n     }\n+\n+    public static class ModelReferencesInfo {\n+        public List<String> steps;\n+        public List<String> models;", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMTY1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443611658", "bodyText": "Pinging @ryanjdew  on this - why the change here? I believe \"/\" was included to ensure that the base URI ends with a \"/\" which I think is a requirement of ES. Perhaps the \"/\" should only be included if info.getBaseUri() doesn't end with \"/\"?", "author": "rjrudin", "createdAt": "2020-06-22T14:43:40Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/mapping/MappingImpl.java", "diffHunk": "@@ -61,7 +61,7 @@ public MappingImpl(String name, HubEntity entity) {\n         if (entity != null) {\n             InfoType info = entity.getInfo();\n             if (info != null) {\n-                String prefix = info.getBaseUri() != null ? info.getBaseUri() + \"/\" : \"\";\n+                String prefix = info.getBaseUri() != null ? info.getBaseUri() : \"\";", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1OTY3NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443659675", "bodyText": "This just reverts the changes made in #4065 since we do need a baseUri to end with /", "author": "akshaysonvane", "createdAt": "2020-06-22T15:52:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMTY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4NjY0NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443686645", "bodyText": "@rjrudin Entity Services will add the slash (\"/\") appropriately whether or not the base URI ends with a slash.", "author": "ryanjdew", "createdAt": "2020-06-22T16:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMTY1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMzgyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443613821", "bodyText": "Note that when you do need a no-arg no-return-value interface in the future, you can just use Runnable instead.", "author": "rjrudin", "createdAt": "2020-06-22T14:46:35Z", "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/Action.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.marklogic.hub.test;\n+\n+/**\n+ * Represents an operation that accepts no input arguments and returns no\n+ * result.\n+ */\n+@FunctionalInterface\n+public interface Action {\n+    \n+    void execute();", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2MDM1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443660358", "bodyText": "I did not use Runnable as it is associated with threads and might cause confusion in the future.", "author": "akshaysonvane", "createdAt": "2020-06-22T15:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMzgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxNjA5NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443616095", "bodyText": "I think you just need mapping.toObject() here? Could get fancy and do this (I think this works - I also often like to declare a query in a separate variable so it's easy to understand outside of the context where it's used, and the variable name can describe the intent of the query):\nconst mappingQuery = ...\nconst steps = cts.search(mappingQuery).toArray().map(mapping => mapping.toObject().name);", "author": "rjrudin", "createdAt": "2020-06-22T14:49:40Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/entity-lib.sjs", "diffHunk": "@@ -208,6 +209,97 @@ function deleteModel(entityName) {\n   }\n }\n \n+/**\n+ * Returns the step names that contain a reference to the supplied entity.\n+ * The targetEntityType for mapping artifacts is checked against both an entityName or an entityTypeId.\n+ *\n+ * @param entityName\n+ * @param entityTypeId\n+ * @returns {[]}\n+ */\n+function findModelReferencesInSteps(entityName, entityTypeId) {\n+  const steps = [];\n+  const mappingArtifacts = cts.search(cts.andQuery([\n+    cts.collectionQuery('http://marklogic.com/data-hub/mappings'),\n+    cts.jsonPropertyValueQuery(\"targetEntityType\", [entityName, entityTypeId])\n+  ]));\n+  mappingArtifacts.toObject()\n+    .forEach(mapping => {\n+      mapping = JSON.parse(mapping);", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxNzAxMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443617012", "bodyText": "I think this should say \"Must specify a name in order to get model references\"", "author": "rjrudin", "createdAt": "2020-06-22T14:50:53Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/models/getModelReferences.sjs", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+  Copyright (c) 2020 MarkLogic Corporation\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+*/\n+'use strict';\n+\n+const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n+const ds = require(\"/data-hub/5/data-services/ds-utils.sjs\");\n+\n+\n+var entityName;\n+if (!entityName) {\n+  ds.throwBadRequest(\"Must specify a name in order to delete an entity model\");", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxNzU4NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443617585", "bodyText": "I think we have to say \"step and/or mapping names\", since the list may contain legacy mapping names, which can be different from the names of the steps that reference them.", "author": "rjrudin", "createdAt": "2020-06-22T14:51:43Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/models/deleteModel.sjs", "diffHunk": "@@ -19,8 +19,22 @@ const ds = require(\"/data-hub/5/data-services/ds-utils.sjs\");\n const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n \n var entityName;\n-if (entityName === undefined || entityName === null) {\n+if (!entityName) {\n   ds.throwBadRequest(\"Must specify a name in order to delete an entity model\");\n }\n \n+const entityModel = entityLib.findModelByEntityName(entityName);\n+if (!entityModel) {\n+  ds.throwServerError(`Could not find entity model with name: ${entityName}`);\n+}\n+\n+const entityTypeId = entityLib.getEntityTypeId(entityModel, entityName);\n+const entityModelUri = entityLib.getModelUri(entityName);\n+\n+const steps = entityLib.findModelReferencesInSteps(entityName, entityTypeId);\n+if (steps.length) {\n+  ds.throwServerError(`Cannot delete the entity type '${entityName}' because it is referenced by the following step names: ${steps}`);", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxODEwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443618106", "bodyText": "A \"step\" is a JSON object. Looking at the impl below, it looks like these are step names, with one exception - mapping names can be in here as well (sigh). To account for this, I think it's best to be verbose here and call this \"stepAndMappingNames\", because the list can contain a combination of step and mapping names. That's not pretty, but it captures the reality.", "author": "rjrudin", "createdAt": "2020-06-22T14:52:24Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -253,4 +268,9 @@ private ModelsService newService() {\n     public static class UpdateModelInfoInput {\n         public String description;\n     }\n+\n+    public static class ModelReferencesInfo {\n+        public List<String> steps;", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9bed829cf79edf69981f6c846114c78936faef13", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9bed829cf79edf69981f6c846114c78936faef13", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T16:42:46Z", "type": "forcePushed"}, {"oid": "b981c75ad1a80a87b47ef4a165d22155a235919d", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b981c75ad1a80a87b47ef4a165d22155a235919d", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:05:39Z", "type": "forcePushed"}, {"oid": "4095330c63e7de5046861e83d87d81c80af384a9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4095330c63e7de5046861e83d87d81c80af384a9", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:07:23Z", "type": "forcePushed"}, {"oid": "f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:10:06Z", "type": "commit"}, {"oid": "f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:10:06Z", "type": "forcePushed"}]}