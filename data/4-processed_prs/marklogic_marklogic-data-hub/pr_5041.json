{"pr_number": 5041, "pr_title": "DHFPROD-6149:Disable generation of TDE for entity models", "pr_createdAt": "2020-12-21T23:29:43Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/5041", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzI0Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547287246", "bodyText": "For readability, let's toss this into a function in the module - e.g. local:is-tde-generation-enabled($definitions, $entity-title) .\nBetter yet - let's put that function into hub-entities.xqy. You can write in-memory unit tests against that function, which makes it easier to test the scenario where there's not an entity definition whose name matches that of info/title (I don't think that's covered below?).\nIt's good to have a test against the trigger too, but I'd opt for one trivial test there, and then exhaustive tests against this function, as the latter will be faster and easier to understand.", "author": "rjrudin", "createdAt": "2020-12-22T13:48:34Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/triggers/entity-model-trigger.xqy", "diffHunk": "@@ -132,8 +132,15 @@ return (\n       }, map:entry(\"database\", xdmp:schema-database())\n     ),\n \n+  (: Check if TDE generation is disabled. Any value other than false or \"false\" disables TDE generation. :)", "originalCommit": "382204eb5383f2aba0d7887b488228aa3f49a564", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2MzYwMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547363600", "bodyText": "@rjrudin ,\nSo, is this response correct for the following 2 entities\nhent.isTdeGenerationDisabled(entity1) - false\nhent.isTdeGenerationDisabled(entity2) - true\n  let entity1 = {\n    \"info\": {\n      \"title\": \"Person\",\n      \"version\": \"0.0.1\",\n      \"baseUri\": \"http://marklogic.com/\",\n      \"description\": \"A person entity\"\n    },\n    \"definitions\": {\n      \"Customer\": {\n        \"tdeGenerationDisabled\": \"true\"\n      }\n    }\n  }\n  let entity2 = {\n    \"info\": {\n      \"title\": \"Person\",\n      \"version\": \"0.0.1\",\n      \"baseUri\": \"http://marklogic.com/\",\n      \"description\": \"A person entity\"\n    },\n    \"definitions\": {\n      \"Person\": {\n        \"tdeGenerationDisabled\": \"randomValue\"\n      }\n    }\n  }", "author": "srinathgit", "createdAt": "2020-12-22T16:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2NzIzNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547367237", "bodyText": "First, call the function \"isTdeGenerationEnabled\", as the typical use will be \"if TDE generation is enabled, then do the following\" (as opposed to \"If TDE generation is disabled, then do nothing\" or \"If TDE generation is not disabled, then do the following\", which is a double negative).\nThe property should still be tdeGenerationDisabled, since for backwards compatibility reasons, we need to default to enabling it if the property is not there.\nFor entity1, TDE generation would not be enabled (because there's no entity with a name matching info/title, so we use the first one) and for entity2 it would be enabled because the value is not the boolean value true. (Let's only support the boolean true and not \"true\" - the user expects to put a boolean here, not a string).", "author": "rjrudin", "createdAt": "2020-12-22T16:14:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2Nzc0OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547367749", "bodyText": "Effectively, the rule is - \"If the definition whose name matches info/title, or the first definition in the absence of such a match, has tdeGenerationDisabled = true, then do not generate a TDE\".", "author": "rjrudin", "createdAt": "2020-12-22T16:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyMjIxOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547422218", "bodyText": "Just to confirm, for entity1, TDE generation should be enabled right ? There's no entity with a name matching info/title, so we use the first one(\"Customer\"), it has \"tdeGenerationDisabled\" set to \"true\" (which we don't support) and not true.", "author": "srinathgit", "createdAt": "2020-12-22T18:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzMTI2OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547431268", "bodyText": "Oh right - yeah, it should be boolean true not \"true\", so yes, it would be enabled.\nAll good explanations to put into assertion messages. :)", "author": "rjrudin", "createdAt": "2020-12-22T18:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NzYwNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547287605", "bodyText": "An XQuery trick that I think works here is:\nlet $primary-type-def := ($definitions => map:get($entity-title), $definitions => map:get(map:keys($definitions)[1]))[1]\n\ni.e. return the first non-empty thing", "author": "rjrudin", "createdAt": "2020-12-22T13:49:18Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/triggers/entity-model-trigger.xqy", "diffHunk": "@@ -132,8 +132,15 @@ return (\n       }, map:entry(\"database\", xdmp:schema-database())\n     ),\n \n+  (: Check if TDE generation is disabled. Any value other than false or \"false\" disables TDE generation. :)\n+  let $primary-type-def := $definitions => map:get($entity-title)\n+  let $primary-type-def := if (fn:exists($primary-type-def)) then $primary-type-def", "originalCommit": "382204eb5383f2aba0d7887b488228aa3f49a564", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4OTE4NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547289185", "bodyText": "Really need assertion messages here to explain why it's true or false for each one.", "author": "rjrudin", "createdAt": "2020-12-22T13:52:39Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/entities/testTdeGenerationDisabled.sjs", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+const test = require(\"/test/test-helper.xqy\");\n+\n+function checkForTde(uri){\n+  return fn.head(xdmp.eval(\n+    `fn.docAvailable('${uri}') `,\n+    {uri:uri}, {database: xdmp.schemaDatabase()}\n+  ));\n+}\n+\n+function verifyTdeGeneration() {\n+  return [\n+    test.assertTrue(checkForTde(\"/tde/Customer-0.0.1.tdex\")),", "originalCommit": "382204eb5383f2aba0d7887b488228aa3f49a564", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "48c12205c1a057cb27e61dc37efcd3df9c977053", "url": "https://github.com/marklogic/marklogic-data-hub/commit/48c12205c1a057cb27e61dc37efcd3df9c977053", "message": "DHFPROD-6149:Disable generation of TDE for entity models", "committedDate": "2020-12-22T18:34:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1MzY5Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547453697", "bodyText": "Hmm - if the code is simpler in XQuery to just support \"true\" and true, let's do that (I don't think I've ever used xdmp:type before, so this seems more complex than it should be).", "author": "rjrudin", "createdAt": "2020-12-22T19:06:23Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-entities.xqy", "diffHunk": "@@ -83,6 +83,21 @@ declare function hent:uber-model($models as object-node()*) as map:map\n     $uber-model\n };\n \n+declare function hent:is-tde-generation-enabled($entity-def as object-node()) as xs:boolean\n+{\n+  let $entity-def-map as map:map := $entity-def\n+  let $definitions := $entity-def-map => map:get(\"definitions\")\n+  let $entity-title := $entity-def/info/title\n+  (: Check if TDE generation is enabled. Any value other than true enables TDE generation. :)\n+  let $primary-type-def := ($definitions => map:get($entity-title), $definitions => map:get(map:keys($definitions)[1]))[1]\n+  let $is-property-set := map:contains($primary-type-def, \"tdeGenerationDisabled\")\n+  let $property-val := map:get($primary-type-def, \"tdeGenerationDisabled\")\n+  let $is-property-type-boolean := $is-property-set and string(xdmp:type($property-val)) = \"boolean\"", "originalCommit": "48c12205c1a057cb27e61dc37efcd3df9c977053", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d87825341850d698d94d91c22dd4ee876b3d109", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9d87825341850d698d94d91c22dd4ee876b3d109", "message": "DHFPROD-6149:Disable generation of TDE for entity models", "committedDate": "2020-12-22T19:48:37Z", "type": "forcePushed"}, {"oid": "ee4d1ec592e2540cfcb3b8a91c711f6131d14cd3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/ee4d1ec592e2540cfcb3b8a91c711f6131d14cd3", "message": "DHFPROD-6149:Disable generation of TDE for entity models", "committedDate": "2020-12-22T19:52:19Z", "type": "forcePushed"}, {"oid": "e04ac6f14904915b897c77004d68bea6d2e4fbdf", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e04ac6f14904915b897c77004d68bea6d2e4fbdf", "message": "DHFPROD-6149:Disable generation of TDE for entity models", "committedDate": "2020-12-22T22:41:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNTkwOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547605909", "bodyText": "Sorry to be picky here, but until we need all these properties, let's make these entity defs as minimal as possible. We always want to do that in tests, as it makes the focus of test that much more clear.", "author": "rjrudin", "createdAt": "2020-12-23T02:32:05Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/entities/test-data/entities/Customer.entity.json", "diffHunk": "@@ -0,0 +1,86 @@\n+{\n+  \"info\": {\n+    \"title\": \"Customer\",\n+    \"version\": \"0.0.1\",\n+    \"baseUri\": \"http://example.org/\"\n+  },\n+  \"definitions\": {\n+    \"Customer\": {", "originalCommit": "e04ac6f14904915b897c77004d68bea6d2e4fbdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzgxMzIxNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5041#discussion_r547813216", "bodyText": "I have renamed the entity models and included minimal properties.", "author": "srinathgit", "createdAt": "2020-12-23T08:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNTkwOQ=="}], "type": "inlineReview"}, {"oid": "f52e6e22952864a192fd38e4f265c301e6cfefd8", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f52e6e22952864a192fd38e4f265c301e6cfefd8", "message": "DHFPROD-6149:Disable generation of TDE for entity models", "committedDate": "2020-12-23T08:39:24Z", "type": "commit"}, {"oid": "f52e6e22952864a192fd38e4f265c301e6cfefd8", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f52e6e22952864a192fd38e4f265c301e6cfefd8", "message": "DHFPROD-6149:Disable generation of TDE for entity models", "committedDate": "2020-12-23T08:39:24Z", "type": "forcePushed"}]}