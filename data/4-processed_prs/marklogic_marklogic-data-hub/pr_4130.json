{"pr_number": 4130, "pr_title": "DHFPROD-4998: Deploy custom steps, view them in HC", "pr_createdAt": "2020-06-23T17:38:14Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4130", "timeline": [{"oid": "cede6d42cf2c7f67cd4e3e1bc631d11ae0e05a12", "url": "https://github.com/marklogic/marklogic-data-hub/commit/cede6d42cf2c7f67cd4e3e1bc631d11ae0e05a12", "message": "DHFPROD-4998: Deploy custom steps, view them in HC", "committedDate": "2020-06-23T18:05:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxNjYwMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444416603", "bodyText": "Ryan's PR just got merged and hub-central-operator inherits hub-central-custom-reader and so available to hub-central-developer as well.", "author": "bsrikan", "createdAt": "2020-06-23T18:14:31Z", "path": "examples/reference-entity-model/src/main/ml-config/security/users/hub-developer.json", "diffHunk": "@@ -8,6 +8,7 @@\n     \"hub-central-entity-model-writer\",\n     \"hub-central-load-writer\",\n     \"hub-central-mapping-writer\",\n+    \"hub-central-custom-reader\",", "originalCommit": "cede6d42cf2c7f67cd4e3e1bc631d11ae0e05a12", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxODQ1MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444418450", "bodyText": "Should this be customData[0]?", "author": "bsrikan", "createdAt": "2020-06-23T18:18:03Z", "path": "marklogic-data-hub-central/ui/src/assets/mock-data/flows.data.ts", "diffHunk": "@@ -473,6 +474,18 @@ const loadSettings = {\"data\" :\n     \"status\" :200\n };\n \n+const customStepsWithEntity = {\"data\" :[{\n+        \"entityType\": \"Customer\",\n+        \"entityTypeId\": \"http://example.org/Customer-0.0.1/Customer\",\n+        \"artifacts\": [{...commonData.customData[0]}]\n+    }],\n+    \"status\" :200\n+}\n+\n+const customStepsWithoutEntity = {\"data\" :[{...commonData.customData[1]}],", "originalCommit": "cede6d42cf2c7f67cd4e3e1bc631d11ae0e05a12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxOTIyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444419226", "bodyText": "No, it should be customData[1] as it is not associated with any entity", "author": "srinathgit", "createdAt": "2020-06-23T18:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxODQ1MA=="}], "type": "inlineReview"}, {"oid": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "url": "https://github.com/marklogic/marklogic-data-hub/commit/06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "message": "DHFPROD-4998: Deploy custom steps, view them in HC", "committedDate": "2020-06-23T18:57:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwMzg3MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444503870", "bodyText": "Does this force the UI to make two calls? If so, I'd rather it be one call where the response is an object - e.g.:\n{\n  \"stepsWithoutEntity\": [...],\n  \"stepsWithEntity\": [\n    {\n      \"entityType\": \"Customer\",\n      \"steps\": [...]\n    }\n  ] \n}", "author": "rjrudin", "createdAt": "2020-06-23T20:57:02Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/CustomStepController.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.marklogic.hub.central.controllers.steps;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.hub.central.controllers.BaseController;\n+import com.marklogic.hub.central.schemas.StepSchema;\n+import com.marklogic.hub.dataservices.ArtifactService;\n+import com.marklogic.hub.dataservices.CustomService;\n+import io.swagger.annotations.ApiOperation;\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+\n+import java.util.ArrayList;\n+\n+@Controller\n+@RequestMapping(\"/api/steps/custom\")\n+public class CustomStepController extends BaseController {\n+    private final static String STEP_DEFINITION_TYPE = \"custom\";\n+\n+    @RequestMapping(method = RequestMethod.GET)\n+    @ApiOperation(value = \"Get custom steps associated with entity type, if the  optional boolean parameter 'withoutEntity' is set \" +\n+        \"to true, it returns custom steps not associated with any entity types \", response = CustomSteps.class)\n+    @Secured(\"ROLE_readCustom\")\n+    public ResponseEntity<JsonNode> getCustomStepsWithEntity(@RequestParam(required = false,value=\"withoutEntity\") Boolean withoutEntity) {\n+        if(BooleanUtils.isTrue(withoutEntity)){", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNTM3OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444505379", "bodyText": "This seems like something the backend should do. I feel a single DS endpoint should do all the work here - return the object structure I mentioned above, and do any sorting necessary.", "author": "rjrudin", "createdAt": "2020-06-23T21:00:00Z", "path": "marklogic-data-hub-central/ui/src/components/entities/entity-tiles.tsx", "diffHunk": "@@ -178,10 +196,35 @@ const EntityTiles = (props) => {\n           }\n     }\n \n-    const outputCards = (entityType, mappingCardData, matchingCardData) => {\n-        let output;\n+    const getCustomArtifacts = async () => {\n+        try {\n+            if(props.canReadCustom){\n+                let response = await axios.get('/api/steps/custom');\n+                if (response.status === 200) {\n+                    let entArt = response.data;\n+                    entArt.sort((a, b) => (a.entityType > b.entityType) ? 1 : -1)", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNjAzMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444506032", "bodyText": "These are technically passed as \"options\" to the custom step module, right? I don't think we should say \"parameters\" here, as that term is used in the context of a custom hook module, and it may lead to confusion.", "author": "rjrudin", "createdAt": "2020-06-23T21:01:11Z", "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "diffHunk": "@@ -50,6 +50,10 @@ const AdvMapTooltips = {\n     'provGranularity': 'The level of detail logged for provenance. Choose *coarse* for the default level or *off* for no provenance logging.',\n  }\n \n+const AdvCustomTooltips = {\n+    'additionalSettings': 'A JSON object containing key-value pairs to pass as parameters to the custom step module.',", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNjYxMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444506610", "bodyText": "I think this should really be \"CustomStepService\". While we have \"MappingService\", \"Mapping\" is able to be by itself and avoid confusion. But \"Custom\" by itself should be avoided unless we have no choice, as it could refer to a custom step, or a custom module, or a custom hook.", "author": "rjrudin", "createdAt": "2020-06-23T21:02:17Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dataservices/CustomService.java", "diffHunk": "@@ -0,0 +1,110 @@\n+package com.marklogic.hub.dataservices;\n+\n+// IMPORTANT: Do not edit. This file is generated.\n+\n+import com.marklogic.client.io.Format;\n+\n+\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.io.marker.JSONWriteHandle;\n+\n+import com.marklogic.client.impl.BaseProxy;\n+\n+/**\n+ * Provides a set of operations on the database server\n+ */\n+public interface CustomService {", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNzA5OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444507098", "bodyText": "Pinging @ryanjdew  - I think it's fine to do this for now, but before 5.3 goes out, I lean towards renaming all of these to be \"data-hub-(stepType)-step-writer\" for clarity.", "author": "rjrudin", "createdAt": "2020-06-23T21:03:15Z", "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/data-hub-custom-writer.json", "diffHunk": "@@ -0,0 +1,4 @@\n+{\n+  \"role-name\": \"data-hub-custom-writer\",", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyMzMzNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r445123335", "bodyText": "I can get behind that. We need to should have a separate ticket for that.", "author": "ryanjdew", "createdAt": "2020-06-24T19:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNzA5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNzUxMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444507513", "bodyText": "I think we need \"customStep\" and \"CustomStep\" here as well. \"Custom\" is just too vague by itself for the reason mentioned above (custom step, custom module, custom hook).", "author": "rjrudin", "createdAt": "2020-06-23T21:04:02Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/artifacts/core.sjs", "diffHunk": "@@ -33,7 +34,8 @@ const registeredArtifactTypes = {\n     flow: Flow,\n     stepDefinition: StepDef,\n     mapping: Mapping,\n-    matching: Matching\n+    matching: Matching,\n+    custom: Custom", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzMjgxMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444632813", "bodyText": "\"custom\" here refers to the step definition type. I have retained that. It is custom:CustomStep in the latest commit", "author": "srinathgit", "createdAt": "2020-06-24T04:06:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwNzUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwODY0MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444508641", "bodyText": "It doesn't seem like matchOptions and mergeOptions should really be here, because those are specific to concrete step types. Same with validateEntity (though technically that could be supported for other step types in the future, while it's just mapping today).\nI think this is also worth keeping specific to a custom step for now, and thus shouldn't be in \"artifacts/core.sjs\" which is starting to have a scope of \"anything that a user can persist\". I think this library needs to be focused on generic persistence functions as opposed to functions that are specific to a concrete type.", "author": "rjrudin", "createdAt": "2020-06-23T21:06:20Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/artifacts/core.sjs", "diffHunk": "@@ -345,6 +347,23 @@ function removeNullProperties(obj) {\n   return obj\n }\n \n+// Used in UI (currently only in custom step for showing 'Additional Settings' field)\n+function getStepWithAdditionalSettings(artifactType, artifactName) {\n+  let dataHubOptions = [\"sourceQuery\", \"sourceQueryIsScript\", \"constrainSourceQueryToJob\", \"provenanceGranularityLevel\", \"acceptsBatch\",", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwOTE5Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444509197", "bodyText": "Yeah let's just implement this in here for now until it can be reused for something outside the scope of a custom step. I really want to avoid artifacts/core.sjs becoming a kitchen sink with a very broad scope.", "author": "rjrudin", "createdAt": "2020-06-23T21:07:34Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/custom/getCustomStep.sjs", "diffHunk": "@@ -0,0 +1,21 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+var stepName;\n+require('/data-hub/5/artifacts/core.sjs').getStepWithAdditionalSettings(\"custom\", stepName)", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwOTU4Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444509583", "bodyText": "I think an exception should be thrown here if stepDefinitionName is null.", "author": "rjrudin", "createdAt": "2020-06-23T21:08:24Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/step/saveStep.sjs", "diffHunk": "@@ -43,7 +43,16 @@ if (existingStep) {\n \n   // For now, can assume the stepDefinitionName based on the type. Can add stepDefinitionType as a parameter once we need\n   // more flexibility.\n-  const stepDefinitionName = \"mapping\" === stepDefinitionType.toLowerCase() ? \"entity-services-mapping\" : \"default-ingestion\";\n+  let stepDefinitionName;\n+  if(\"mapping\" === stepDefinitionType){\n+    stepDefinitionName = \"entity-services-mapping\";\n+  }\n+  else if(\"ingestion\" === stepDefinitionType){\n+    stepDefinitionName = \"default-ingestion\";\n+  }\n+  else {\n+    stepDefinitionName = stepProperties.stepDefinitionName;", "originalCommit": "06985e9ab3eb80c1b0b2bc7de17bdd1207f14e25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxNDMxNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444514315", "bodyText": "In custom.sjs \"stepDefinitionName\" is a mandatory property and will throw an error if it is absent. Shouldn't that be sufficient ?", "author": "srinathgit", "createdAt": "2020-06-23T21:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwOTU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUxNjU0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4130#discussion_r444516547", "bodyText": "Good point, that works.", "author": "rjrudin", "createdAt": "2020-06-23T21:23:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwOTU4Mw=="}], "type": "inlineReview"}, {"oid": "b7f56a56e4e664aa7e6c6e5a3d949750bb93de9f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b7f56a56e4e664aa7e6c6e5a3d949750bb93de9f", "message": "DHFPROD-4998: Deploy custom steps, view them in HC", "committedDate": "2020-06-24T04:03:45Z", "type": "forcePushed"}, {"oid": "cfd4df914cbcf408d4dd5ada88067def23dd7390", "url": "https://github.com/marklogic/marklogic-data-hub/commit/cfd4df914cbcf408d4dd5ada88067def23dd7390", "message": "DHFPROD-4998: Deploy custom steps, view them in HC", "committedDate": "2020-06-24T18:57:03Z", "type": "commit"}, {"oid": "cfd4df914cbcf408d4dd5ada88067def23dd7390", "url": "https://github.com/marklogic/marklogic-data-hub/commit/cfd4df914cbcf408d4dd5ada88067def23dd7390", "message": "DHFPROD-4998: Deploy custom steps, view them in HC", "committedDate": "2020-06-24T18:57:03Z", "type": "forcePushed"}]}