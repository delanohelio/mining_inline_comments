{"pr_number": 4279, "pr_title": "DHFPROD-3577: Support sorting on export", "pr_createdAt": "2020-07-27T05:53:49Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4279", "timeline": [{"oid": "0cbcc698186ccd79f648aaad69da17cba48fb10a", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0cbcc698186ccd79f648aaad69da17cba48fb10a", "message": "DHFPROD-3577: Support sorting on export", "committedDate": "2020-07-30T20:56:14Z", "type": "forcePushed"}, {"oid": "b28e2fc1e7e779842607892b73b7cf725dcf83c7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b28e2fc1e7e779842607892b73b7cf725dcf83c7", "message": "DHFPROD-3577: Support sorting on export", "committedDate": "2020-07-31T21:12:12Z", "type": "forcePushed"}, {"oid": "a8143032d6544dd76a3380f57df25fecdb129ae3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a8143032d6544dd76a3380f57df25fecdb129ae3", "message": "DHFPROD-3577: Support sorting on export", "committedDate": "2020-07-31T22:31:42Z", "type": "commit"}, {"oid": "a8143032d6544dd76a3380f57df25fecdb129ae3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a8143032d6544dd76a3380f57df25fecdb129ae3", "message": "DHFPROD-3577: Support sorting on export", "committedDate": "2020-07-31T22:31:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyODcyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4279#discussion_r464128726", "bodyText": "@ryanjdew  @rahulvudutala  Are the names here based on property names in the entity model, or constraint names in search options?", "author": "rjrudin", "createdAt": "2020-08-02T22:03:20Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/getOpticPlanTest.sjs", "diffHunk": "@@ -0,0 +1,104 @@\n+const search = require('/MarkLogic/appservices/search/search');\n+const test = require(\"/test/test-helper.xqy\");\n+const hubTest = require(\"/test/data-hub-test-helper.sjs\");\n+const op = require('/MarkLogic/optic');\n+\n+const queryOptions = '<options xmlns=\"http://marklogic.com/appservices/search\"/>';\n+\n+function invokeOpticPlanService(schemaName, viewName, limit, structuredQuery, searchText, sortOrder, columns, retries=0) {\n+    try {\n+        // Need to clear the modules cache or unrelated error could be thrown. Investigating to file a bugtrack.\n+        if (retries === 0) {\n+            xdmp.moduleCacheClear();\n+        }\n+        return fn.head(xdmp.invoke(\n+            \"/data-hub/5/data-services/entitySearch/getOpticPlan.sjs\",\n+            {\n+                schemaName,\n+                viewName,\n+                limit,\n+                structuredQuery,\n+                searchText,\n+                queryOptions,\n+                sortOrder: xdmp.toJSON(sortOrder).root,\n+                columns: Sequence.from(columns)\n+            }\n+        ));\n+    } catch (e) {\n+        if (e.code === 'SQL-TABLEREINDEXING' || e.name === 'SQL-TABLEREINDEXING' && retries < 20) {\n+            if (retries === 0) {\n+                xdmp.sleep(1000);\n+            } else {\n+                xdmp.sleep(500);\n+            }\n+            xdmp.log(`Optic retry: ${retries}`);\n+            return invokeOpticPlanService(schemaName, viewName, limit, structuredQuery, searchText, sortOrder, columns, ++retries);\n+        } else {\n+            throw e;\n+        }\n+    }\n+}\n+\n+function testValidAscendingPlan() {\n+    const structuredQuery = xdmp.quote(search.parse(''));\n+    const plan = invokeOpticPlanService(\n+        'EntitySearchEntity',\n+        'EntitySearchEntity', 10,\n+        structuredQuery, '',\n+        [{'name':'searchEntityProp1', 'ascending':true}],", "originalCommit": "a8143032d6544dd76a3380f57df25fecdb129ae3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyOTAwOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4279#discussion_r464129008", "bodyText": "Nice, this is a lot simpler, having these in separate files.", "author": "rjrudin", "createdAt": "2020-08-02T22:06:00Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/suiteSetup.sjs", "diffHunk": "@@ -125,238 +131,17 @@ xdmp.documentInsert(\"/exp/doc2\",\n               }\n             ],\n             \"searchEntityProp2\": \"doc2SrchEntyProp2\",\n-            \"searchEntityProp1\": \"doc2SrchEntyProp1\"\n+            \"searchEntityProp1\": \"doc2SrchEntyProp1\",\n+            \"hyphenated-property\": \"doc2HyphenatedProp\"\n           }\n         }\n       }\n     },\n     {\n-      permissions: xdmp.defaultPermissions(),\n+      permissions: defaultPermissions,\n       collections: \"doc2\",\n       metadata: {\n         \"datahubCreatedInFlow\": \"my-flow-2\",\n         \"datahubCreatedByStep\": \"my-step-2\"\n       }\n-    });\n-\n-// Inserting entity model documents into final database\n-xdmp.documentInsert(\"/entities/NumericEntity.entity.json\",", "originalCommit": "a8143032d6544dd76a3380f57df25fecdb129ae3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyOTA5NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4279#discussion_r464129095", "bodyText": "@ryanjdew  @rahulvudutala Is the reason these documents are defined inline instead of in the \"./test-data/content\" folder because of the need to define metadata and collections for the documents? If so, I'll think about a way to define those in the test documents. I'm thinking we could do a custom JSON structure with properties of \"document\", \"metadata\", and \"collections.", "author": "rjrudin", "createdAt": "2020-08-02T22:07:02Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/suiteSetup.sjs", "diffHunk": "@@ -56,13 +61,14 @@ xdmp.documentInsert(\"/exp/doc1\",\n               }\n             ],\n             \"searchEntityProp2\": \"doc1SrchEntyProp2\",\n-            \"searchEntityProp1\": \"doc1SrchEntyProp1\"\n+            \"searchEntityProp1\": \"doc1SrchEntyProp1\",", "originalCommit": "a8143032d6544dd76a3380f57df25fecdb129ae3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}