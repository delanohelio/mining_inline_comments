{"pr_number": 3676, "pr_title": "DHFPROD-3854: sourceQuery can now be a script", "pr_createdAt": "2020-03-10T13:02:16Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3676", "timeline": [{"oid": "5f13734e4ece7ac44e9da660c022ab4b0bd15900", "url": "https://github.com/marklogic/marklogic-data-hub/commit/5f13734e4ece7ac44e9da660c022ab4b0bd15900", "message": "DHFPROD-3854: sourceQuery can now be a script\n\nStep option \"sourceQueryIsScript:true\" can be added so that the collector knows to evaluate the sourceQuery as a script instead of tossing it into a cts.uris call. \n\nDid some renaming of \"uris\" as a variable to \"items\". Unfortunately can't change e.g. \"uris\" in a Batch document, as that'd be a breaking change. \n\nFlowRunnerTest now depends on the indexes in the test final-database.json file, so I moved the setup of those indexes from RunMarkLogicUnitTestsTest into Installer.", "committedDate": "2020-03-10T13:22:57Z", "type": "forcePushed"}, {"oid": "4bb59bf24ded9637d3639485919adb74b78ef57c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4bb59bf24ded9637d3639485919adb74b78ef57c", "message": "DHFPROD-3854: sourceQuery can now be a script\n\nStep option \"sourceQueryIsScript:true\" can be added so that the collector knows to evaluate the sourceQuery as a script instead of tossing it into a cts.uris call. \n\nDid some renaming of \"uris\" as a variable to \"items\". Unfortunately can't change e.g. \"uris\" in a Batch document, as that'd be a breaking change. \n\nFlowRunnerTest now depends on the indexes in the test final-database.json file, so I moved the setup of those indexes from RunMarkLogicUnitTestsTest into Installer.", "committedDate": "2020-03-10T13:24:43Z", "type": "forcePushed"}, {"oid": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a", "url": "https://github.com/marklogic/marklogic-data-hub/commit/bfca39e6769f6bb28a21bf16fbbc1d0363615f3a", "message": "DHFPROD-3854: sourceQuery can now be a script\n\nStep option \"sourceQueryIsScript:true\" can be added so that the collector knows to evaluate the sourceQuery as a script instead of tossing it into a cts.uris call. \n\nDid some renaming of \"uris\" as a variable to \"items\". Unfortunately can't change e.g. \"uris\" in a Batch document, as that'd be a breaking change. \n\nFlowRunnerTest now depends on the indexes in the test final-database.json file, so I moved the setup of those indexes from RunMarkLogicUnitTestsTest into Installer.", "committedDate": "2020-03-10T17:34:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNDgyNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391324824", "bodyText": "if return from \"if\" code block, you do not need to use \"else if\", only \"if\" is enough.", "author": "hao1st", "createdAt": "2020-03-11T23:22:56Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collectorLib.sjs", "diffHunk": "@@ -19,13 +19,23 @@ const DataHub = require(\"/data-hub/5/datahub.sjs\");\n \n class CollectorLib {\n \n+  /**\n+   * Determine the sourceQuery from the given options and stepDefinition and then prepare it for evaluation by the\n+   * collector endpoint.\n+   *\n+   * @param combinedOptions\n+   * @param stepDefinition\n+   * @return {string|*}\n+   */\n   prepareSourceQuery(combinedOptions, stepDefinition) {\n     let sourceQuery = combinedOptions.sourceQuery;\n \n     let isMergingStep = stepDefinition.name === 'default-merging' && stepDefinition.type === 'merging';\n \n     if (isMergingStep) {\n-      sourceQuery = fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+      return fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+    } else if (combinedOptions.sourceQueryIsScript) {", "originalCommit": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1ODcyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391358720", "bodyText": "Good idea, I'll make the change.", "author": "rjrudin", "createdAt": "2020-03-12T01:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNDgyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyNzk2Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391627963", "bodyText": "Updated - definitely reads nicer now.", "author": "rjrudin", "createdAt": "2020-03-12T13:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNDgyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1NTU4NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391355584", "bodyText": "can we have a better variable name for \"javascript\" here?", "author": "hao1st", "createdAt": "2020-03-12T01:21:12Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collector.sjs", "diffHunk": "@@ -69,19 +69,18 @@ if (!query) {\n   fn.error(null, \"RESTAPI-SRVEXERR\", Sequence.from([404, \"Not Found\", \"The collector query was empty\"]));\n }\n \n-query = new CollectorLib().prepareSourceQuery(combinedOptions, stepDefinition);\n-\n+const javascript = new CollectorLib().prepareSourceQuery(combinedOptions, stepDefinition);", "originalCommit": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1ODY0MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391358640", "bodyText": "It's the same name as the argument for xdmp.eval - http://docs.marklogic.com/xdmp.eval .", "author": "rjrudin", "createdAt": "2020-03-12T01:35:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1NTU4NA=="}], "type": "inlineReview"}, {"oid": "08de9dec4b216901bd6788a41174eb8d71217105", "url": "https://github.com/marklogic/marklogic-data-hub/commit/08de9dec4b216901bd6788a41174eb8d71217105", "message": "DHFPROD-3854: sourceQuery can now be a script\n\nStep option \"sourceQueryIsScript:true\" can be added so that the collector knows to evaluate the sourceQuery as a script instead of tossing it into a cts.uris call. \n\nDid some renaming of \"uris\" as a variable to \"items\". Unfortunately can't change e.g. \"uris\" in a Batch document, as that'd be a breaking change. \n\nFlowRunnerTest now depends on the indexes in the test final-database.json file, so I moved the setup of those indexes from RunMarkLogicUnitTestsTest into Installer.", "committedDate": "2020-03-12T13:40:06Z", "type": "forcePushed"}, {"oid": "0da7f33c435573967a2a2855f41dba0761035121", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0da7f33c435573967a2a2855f41dba0761035121", "message": "DHFPROD-3854: sourceQuery can now be a script\n\nStep option \"sourceQueryIsScript:true\" can be added so that the collector knows to evaluate the sourceQuery as a script instead of tossing it into a cts.uris call. \n\nDid some renaming of \"uris\" as a variable to \"items\". Unfortunately can't change e.g. \"uris\" in a Batch document, as that'd be a breaking change.", "committedDate": "2020-03-13T13:14:57Z", "type": "forcePushed"}, {"oid": "0da7f33c435573967a2a2855f41dba0761035121", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0da7f33c435573967a2a2855f41dba0761035121", "message": "DHFPROD-3854: sourceQuery can now be a script\n\nStep option \"sourceQueryIsScript:true\" can be added so that the collector knows to evaluate the sourceQuery as a script instead of tossing it into a cts.uris call. \n\nDid some renaming of \"uris\" as a variable to \"items\". Unfortunately can't change e.g. \"uris\" in a Batch document, as that'd be a breaking change.", "committedDate": "2020-03-13T13:14:57Z", "type": "commit"}]}