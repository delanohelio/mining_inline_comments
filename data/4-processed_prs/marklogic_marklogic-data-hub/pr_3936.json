{"pr_number": 3936, "pr_title": "DHFPROD-4945: New endpoints for flows and ingestion/mapping steps", "pr_createdAt": "2020-05-12T15:02:46Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3936", "timeline": [{"oid": "1c5944c4d1fcb559050118c0eace9d9b98b27479", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1c5944c4d1fcb559050118c0eace9d9b98b27479", "message": "DHFPROD-4945: New endpoints for flows and ingestion/mapping steps\n\nLots of changes in here - these are the categories of changes:\n\n- New api/sjs files for the new flow/step DS endpoints\n- 3 new HC controllers for flows, ingestion steps, and mapping steps\n- Updates to our schemas and the classes generated from them\n- Lots of tests, including several new improvements to the test frameworks\n\nThe one thing I purposefully did not write a test for was running a referenced ingestion step, as we know that functionality is going to change soon so that it requires files to be uploaded when the step is run.", "committedDate": "2020-05-12T23:56:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxMDY4Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3936#discussion_r424210683", "bodyText": "The default collections for ingestion step should be the step name (current behavior) and for mapping step, it's the step name and the entity name(explorer requires that ).", "author": "srinathgit", "createdAt": "2020-05-13T06:54:31Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/step/saveStep.sjs", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+const Artifacts = require('/data-hub/5/artifacts/core.sjs');\n+const Step = require(\"/data-hub/5/impl/step.sjs\");\n+const consts = require(\"/data-hub/5/impl/consts.sjs\");\n+\n+var stepDefinitionType;\n+var stepProperties;\n+\n+stepProperties = stepProperties.toObject();\n+const stepName = stepProperties.name;\n+\n+xdmp.trace(consts.TRACE_STEP, `Saving step with name ${stepName} and type ${stepDefinitionType}`);\n+\n+let existingStep = fn.head(cts.search(cts.andQuery([\n+  cts.collectionQuery(\"http://marklogic.com/data-hub/steps\"),\n+  cts.jsonPropertyValueQuery(\"stepDefinitionType\", stepDefinitionType, \"case-insensitive\"),\n+  cts.jsonPropertyValueQuery(\"name\", stepName)\n+])));\n+\n+if (existingStep) {\n+  xdmp.trace(consts.TRACE_STEP, `Step with name ${stepName} and type ${stepDefinitionType} already exists, so will update`);\n+  let updatedStep = Object.assign(existingStep.toObject(), stepProperties);\n+  Artifacts.setArtifact(stepDefinitionType, stepName, updatedStep);\n+} else {\n+  xdmp.trace(consts.TRACE_STEP, `Step with name ${stepName} and type ${stepDefinitionType}  does not exist, so will create`);\n+\n+  // For now, can assume the stepDefinitionName based on the type. Can add stepDefinitionType as a parameter once we need\n+  // more flexibility.\n+  const stepDefinitionName = \"mapping\" === stepDefinitionType.toLowerCase() ? \"entity-services-mapping\" : \"default-ingestion\";\n+\n+  stepProperties.stepDefinitionName = stepDefinitionName;\n+  stepProperties.stepDefinitionType = stepDefinitionType;\n+  stepProperties.stepId = stepName + \"-\" + stepDefinitionType;\n+\n+  const stepDef = new Step().getStepByNameAndType(stepDefinitionName, stepDefinitionType);\n+  const stepDefOptions = stepDef.options;", "originalCommit": "1c5944c4d1fcb559050118c0eace9d9b98b27479", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM5MTEzNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3936#discussion_r424391137", "bodyText": "That logic still exists in the loadData/mapping artifact libraries.\nShould we not copy the default collections from the step definition? In which case - shouldn't we remove the default collections from the step definition? Do they serve any other purpose?\nPinging @ryanjdew  and @bsrikan  for insight.", "author": "rjrudin", "createdAt": "2020-05-13T12:18:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxMDY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNDkwOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3936#discussion_r424414909", "bodyText": "I think I see what to do - the default collections are currently applied in defaultArtifactSettings, which isn't called for step creation. I'll copy/paste that logic into defaultArtifact for mapping.sjs, and then I'll modify this to not pull the default collections from the step definition.", "author": "rjrudin", "createdAt": "2020-05-13T12:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxMDY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyMzM5MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3936#discussion_r424423391", "bodyText": "Thanks @srinathgit - I updated the tests (and added manageIngestionStep.sjs) so the assertions are on the step name and also the entity type for mapping steps.", "author": "rjrudin", "createdAt": "2020-05-13T13:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxMDY4Mw=="}], "type": "inlineReview"}, {"oid": "dce219ee89c670769219aab21ee3b7e7bf680880", "url": "https://github.com/marklogic/marklogic-data-hub/commit/dce219ee89c670769219aab21ee3b7e7bf680880", "message": "DHFPROD-4945: New endpoints for flows and ingestion/mapping steps\n\nLots of changes in here - these are the categories of changes:\n\n- New api/sjs files for the new flow/step DS endpoints\n- 3 new HC controllers for flows, ingestion steps, and mapping steps\n- Updates to our schemas and the classes generated from them\n- Lots of tests, including several new improvements to the test frameworks\n\nThe one thing I purposefully did not write a test for was running a referenced ingestion step, as we know that functionality is going to change soon so that it requires files to be uploaded when the step is run.", "committedDate": "2020-05-13T13:08:31Z", "type": "forcePushed"}, {"oid": "0ac47d282ad15276074a028d9ff088c245606d66", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0ac47d282ad15276074a028d9ff088c245606d66", "message": "DHFPROD-4945: New endpoints for flows and ingestion/mapping steps\n\nLots of changes in here - these are the categories of changes:\n\n- New api/sjs files for the new flow/step DS endpoints\n- 3 new HC controllers for flows, ingestion steps, and mapping steps\n- Updates to our schemas and the classes generated from them\n- Lots of tests, including several new improvements to the test frameworks\n\nThe one thing I purposefully did not write a test for was running a referenced ingestion step, as we know that functionality is going to change soon so that it requires files to be uploaded when the step is run.", "committedDate": "2020-05-13T13:16:38Z", "type": "commit"}, {"oid": "0ac47d282ad15276074a028d9ff088c245606d66", "url": "https://github.com/marklogic/marklogic-data-hub/commit/0ac47d282ad15276074a028d9ff088c245606d66", "message": "DHFPROD-4945: New endpoints for flows and ingestion/mapping steps\n\nLots of changes in here - these are the categories of changes:\n\n- New api/sjs files for the new flow/step DS endpoints\n- 3 new HC controllers for flows, ingestion steps, and mapping steps\n- Updates to our schemas and the classes generated from them\n- Lots of tests, including several new improvements to the test frameworks\n\nThe one thing I purposefully did not write a test for was running a referenced ingestion step, as we know that functionality is going to change soon so that it requires files to be uploaded when the step is run.", "committedDate": "2020-05-13T13:16:38Z", "type": "forcePushed"}]}