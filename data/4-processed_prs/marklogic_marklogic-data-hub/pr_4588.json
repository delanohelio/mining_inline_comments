{"pr_number": 4588, "pr_title": "DHFPROD-5940:If user can't read modules, return HTTP 403", "pr_createdAt": "2020-09-17T18:08:21Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4588", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MTI1MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r490471250", "bodyText": "I don't think you need to check for \"Not Found\" - I think just checking for 404 suffices. We expect the module to exist - we have tests to confirm that. So if a 404 is returned, we're 99.9% sure that's because the user cannot read the module, and thus we should treat it as a 403.", "author": "rjrudin", "createdAt": "2020-09-17T18:31:53Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/AuthenticationFilter.java", "diffHunk": "@@ -96,6 +96,10 @@ protected AuthenticationToken authenticateUser(String username, String password)\n                 if (\"Failed Auth\".equals(fre.getServerMessage()) || \"Failed Auth\".equals(fre.getServerStatus())) {\n                     throw new BadCredentialsException(\"Unauthorized\");\n                 }\n+                //In case user can't read the getAuthorities.sjs module\n+                if(fre.getServerStatusCode() == 404 && fre.getMessage() != null && fre.getMessage().contains(\"Not Found\")){", "originalCommit": "0ad518e4aa4bfdb2b1063d4f00c0268c15bf3605", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MzgzMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r490473832", "bodyText": "I believe \"AccessDeniedException\" is the correct Spring Security exception here. The javadocs for the Insufficient exception state \"credentials are not sufficiently trusted\", which isn't the case here - we don't trust the credentials at all, we just want to say \"Sorry, access denied\".", "author": "rjrudin", "createdAt": "2020-09-17T18:36:36Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/AuthenticationFilter.java", "diffHunk": "@@ -96,6 +96,10 @@ protected AuthenticationToken authenticateUser(String username, String password)\n                 if (\"Failed Auth\".equals(fre.getServerMessage()) || \"Failed Auth\".equals(fre.getServerStatus())) {\n                     throw new BadCredentialsException(\"Unauthorized\");\n                 }\n+                //In case user can't read the getAuthorities.sjs module\n+                if(fre.getServerStatusCode() == 404 && fre.getMessage() != null && fre.getMessage().contains(\"Not Found\")){\n+                    throw new InsufficientAuthenticationException(\"User doesn't have necessary privileges to access Hub Central\");", "originalCommit": "0ad518e4aa4bfdb2b1063d4f00c0268c15bf3605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NDY3MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r491154671", "bodyText": "@rjrudin ,\nCurrently, if a user logs in and doesn't have necessary authorities, we are throwing InsufficientAuthenticationException (line 110 AuthenticationFilter.java). That's why I did the same. Should that be changed as well ?", "author": "srinathgit", "createdAt": "2020-09-18T19:40:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1Njc3Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r491156777", "bodyText": "Yeah, I think AccessDeniedException is the natural exception to throw here. The Spring javadocs state that the Insufficient exception is intended for when the method of authentication used is not sufficient : \"AccessDecisionVoters will typically throw this exception if they are dissatisfied with the level of the authentication, such as if performed using a remember-me mechanism or anonymously. The ExceptionTranslationFilter will then typically cause the AuthenticationEntryPoint to be called, allowing the principal to authenticate with a stronger level of authentication.\"", "author": "rjrudin", "createdAt": "2020-09-18T19:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5NDM4MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r491794381", "bodyText": "I've changed it so that if a user who successfully logs in and doesn't have sufficient privileges,  we don't throw \"InsufficientAuthenticationException\".", "author": "srinathgit", "createdAt": "2020-09-21T05:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MzgzMg=="}], "type": "inlineReview"}, {"oid": "a8c3a695018aac72d12dd5663aed8c56222ac543", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a8c3a695018aac72d12dd5663aed8c56222ac543", "message": "DHFPROD-5940:If user can't read modules, return HTTP 403", "committedDate": "2020-09-20T08:40:47Z", "type": "commit"}, {"oid": "a8c3a695018aac72d12dd5663aed8c56222ac543", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a8c3a695018aac72d12dd5663aed8c56222ac543", "message": "DHFPROD-5940:If user can't read modules, return HTTP 403", "committedDate": "2020-09-20T08:40:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE2MzU1Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r492163556", "bodyText": "Can we authenticate in the AuthenticationFilter? My understanding of spring security is that all authentications should be performed in the authentication filters.\nSince spring performs a lot of stuff under the hood, have we analyzed the consequences of authenticating outside the filter chain in the onAuthenticationSuccess handler?\nOne thing I found is that spring security publishes an InteractiveAuthenticationSuccessEvent on successful authentication. As we authenticate in the onAuthenticationSuccess handler, from the spring security perspective, the authentication was successful so we might still be publishing this event, which would create issues if ever setup event listeners for this event.", "author": "akshaysonvane", "createdAt": "2020-09-21T15:44:25Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/LoginHandler.java", "diffHunk": "@@ -45,28 +43,45 @@\n     @Override\n     public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse httpResponse, Authentication authentication) throws IOException {\n         AuthenticationToken token = (AuthenticationToken) authentication;\n-\n+        Collection<GrantedAuthority> grantedAuthorities = token.getAuthorities();\n+        final boolean[] hasLoginAuthority = {false};\n         ObjectMapper mapper = new ObjectMapper();\n \n         ObjectNode jsonResponse = mapper.createObjectNode();\n \n         List<TextNode> authorities = new ArrayList<>();\n-        token.getAuthorities().forEach(auth -> {\n+\n+        grantedAuthorities.forEach(auth -> {\n             String authority = auth.getAuthority();\n             if (authority.length() > 5) { //trim prefix \"ROLE_\"\n-                authorities.add(new TextNode(auth.getAuthority().substring(5, authority.length())));\n+                String authorityName = authority.substring(5);\n+                hasLoginAuthority[0] = (\"loginToHubCentral\".equals(authorityName)) || hasLoginAuthority[0];\n+                authorities.add(new TextNode(authorityName));\n             }\n         });\n-        jsonResponse.putArray(\"authorities\").addAll(authorities);\n-\n-        clearAuthenticationAttributes(request);\n \n-        httpResponse.setContentType(\"application/json\");\n-        httpResponse.getOutputStream().write(mapper.writeValueAsBytes(jsonResponse));\n+        if (!hasLoginAuthority[0]) {\n+            sendUnauthorizedResponse(httpResponse);\n+        }", "originalCommit": "a8c3a695018aac72d12dd5663aed8c56222ac543", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4MjQ0MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4588#discussion_r492182440", "bodyText": "We are not authenticating here, only authorizing authenticated users. User who has reached here is already successfully authenticated. We were throwing \"InsufficientAuthenticationException\" for users who were successfully authenticated (and throwing 403 using onAuthenticationFailure handler) which as per the previous conversation in the PR is not the right exception to be thrown .", "author": "srinathgit", "createdAt": "2020-09-21T16:12:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE2MzU1Ng=="}], "type": "inlineReview"}]}