{"pr_number": 4745, "pr_title": "DHFPROD-4733: Get Record from database", "pr_createdAt": "2020-10-21T17:57:05Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4745", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5NTk0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4745#discussion_r510295947", "bodyText": "Should these be uncommented now? It doesn't appear that anything is being tested here.", "author": "ryanjdew", "createdAt": "2020-10-22T16:24:47Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/getRecordTest.sjs", "diffHunk": "@@ -0,0 +1,95 @@\n+const test = require(\"/test/test-helper.xqy\");\n+const entitySearchService = require(\"/test/suites/data-hub/5/data-services/lib/entitySearchService.sjs\");\n+\n+function getJsonRecordTest() {\n+  const docUri = \"/content/jane.json\";\n+  xdmp.invokeFunction(function() {\n+    declareUpdate();\n+    xdmp.documentSetMetadata(\"/content/jane.json\",\n+        {\n+          \"datahubCreatedByStep\": \"map-step\",\n+          \"datahubCreatedInFlow\": \"CurateCustomerJSON\",\n+          \"datahubCreatedOn\": \"2020-10-08T15:14:28.772612-07:00\"\n+        });\n+  });\n+\n+  const record = entitySearchService.getRecord(docUri);\n+  const expectedMetadata = JSON.stringify({\n+    \"datahubCreatedByStep\": \"map-step\",\n+    \"datahubCreatedInFlow\": \"CurateCustomerJSON\",\n+    \"datahubCreatedOn\": \"2020-10-08T15:14:28.772612-07:00\"\n+  });\n+\n+  return[\n+    test.assertEqual(fn.doc(docUri), record.data),\n+    test.assertEqual(expectedMetadata, JSON.stringify(record.recordMetadata)),\n+    test.assertEqual(true, record.isHubEntityInstance),\n+    test.assertEqual(\"json\", record.recordType)\n+  ];\n+}\n+\n+function getXmlRecordTest() {\n+  const docUri = \"/content/jane.xml\";\n+  xdmp.invokeFunction(function() {\n+    declareUpdate();\n+    xdmp.documentSetMetadata(\"/content/jane.xml\",\n+        {\n+          \"datahubCreatedByStep\": \"map-step\",\n+          \"datahubCreatedInFlow\": \"CurateCustomerXML\",\n+          \"datahubCreatedOn\": \"2020-10-08T15:14:28.772612-07:00\"\n+        });\n+  });\n+\n+  const record = entitySearchService.getRecord(docUri);\n+  const expectedMetadata = JSON.stringify({\n+    \"datahubCreatedByStep\": \"map-step\",\n+    \"datahubCreatedInFlow\": \"CurateCustomerXML\",\n+    \"datahubCreatedOn\": \"2020-10-08T15:14:28.772612-07:00\"\n+  });\n+\n+  return[\n+    test.assertEqual(fn.doc(docUri), record.data),\n+    test.assertEqual(expectedMetadata, JSON.stringify(record.recordMetadata)),\n+    test.assertEqual(true, record.isHubEntityInstance),\n+    test.assertEqual(\"xml\", record.recordType)\n+  ];\n+}\n+\n+function getTextRecordTest() {\n+  const docUri = \"/content/jane.txt\";\n+  xdmp.invokeFunction(function() {\n+    declareUpdate();\n+    xdmp.documentSetMetadata(\"/content/jane.txt\",\n+        {\n+          \"datahubCreatedByStep\": \"ingest-step\",\n+          \"datahubCreatedInFlow\": \"ingestText\",\n+          \"datahubCreatedOn\": \"2020-10-08T15:14:28.772612-07:00\"\n+        });\n+  });\n+\n+  const record = entitySearchService.getRecord(docUri);\n+  const expectedMetadata = JSON.stringify({\n+    \"datahubCreatedByStep\": \"ingest-step\",\n+    \"datahubCreatedInFlow\": \"ingestText\",\n+    \"datahubCreatedOn\": \"2020-10-08T15:14:28.772612-07:00\"\n+  });\n+\n+  return[\n+    test.assertEqual(fn.doc(docUri), record.data),\n+    test.assertEqual(expectedMetadata, JSON.stringify(record.recordMetadata)),\n+    test.assertEqual(false, record.isHubEntityInstance),\n+    test.assertEqual(\"text\", record.recordType)\n+  ];\n+}\n+\n+function getNonExistentRecordTest() {\n+  const docUri = \"/content/nonExistentRecord.json\";\n+  const record = entitySearchService.getRecord(docUri);\n+  console.log(record);\n+}\n+\n+[]", "originalCommit": "6f5fc255bb62af21daf67ccc3e662f30e06bb72c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMDU5NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4745#discussion_r510310594", "bodyText": "Thank you for noticing it. I updated it", "author": "rahulvudutala", "createdAt": "2020-10-22T16:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5NTk0Nw=="}], "type": "inlineReview"}, {"oid": "4fdd5ab6e42762c3739ed3881865075f501a4bba", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4fdd5ab6e42762c3739ed3881865075f501a4bba", "message": "DHFPROD-4733: Get Record from database", "committedDate": "2020-10-22T16:33:00Z", "type": "forcePushed"}, {"oid": "48da8e7be43b9748ab7f5161bb334a3ec371d3c0", "url": "https://github.com/marklogic/marklogic-data-hub/commit/48da8e7be43b9748ab7f5161bb334a3ec371d3c0", "message": "DHFPROD-4733: Get Record from database", "committedDate": "2020-10-22T20:46:52Z", "type": "commit"}, {"oid": "48da8e7be43b9748ab7f5161bb334a3ec371d3c0", "url": "https://github.com/marklogic/marklogic-data-hub/commit/48da8e7be43b9748ab7f5161bb334a3ec371d3c0", "message": "DHFPROD-4733: Get Record from database", "committedDate": "2020-10-22T20:46:52Z", "type": "forcePushed"}]}