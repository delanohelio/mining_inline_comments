{"pr_number": 4743, "pr_title": "DHFPROD-6038:Ensure HC mapping tool works when step reads from final db", "pr_createdAt": "2020-10-21T00:04:06Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4743", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkxNTEyOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r508915129", "bodyText": "Can you add a \"desc\" to this? I think \"Gets the document based on the given URI and the source database associated with the given step name\"", "author": "rjrudin", "createdAt": "2020-10-21T00:14:57Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getDocument.api", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+    \"functionName\": \"getDocument\",\n+    \"params\": [", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkxNTI0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r508915242", "bodyText": "I think you can just do \"string\" here", "author": "rjrudin", "createdAt": "2020-10-21T00:15:12Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getDocument.api", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+    \"functionName\": \"getDocument\",\n+    \"params\": [\n+        {\n+           \"name\": \"stepName\",\n+           \"datatype\": \"string\"\n+        },\n+        {\n+           \"name\": \"uri\",\n+           \"datatype\": \"string\"\n+        }\n+    ],\n+    \"return\": {\n+        \"datatype\": \"textDocument\",", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU0MjA4MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509542081", "bodyText": "If I had string, I see the format being set to JSON when I generated the interfaces. Hence, I had to make it \"textDocument\".", "author": "srinathgit", "createdAt": "2020-10-21T18:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkxNTI0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwNzE2Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509607162", "bodyText": "Yeah that's why I pinged @ehennum - curious if there's a better practice here for an endpoint that can return a JSON or XML document.", "author": "rjrudin", "createdAt": "2020-10-21T19:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkxNTI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkxNTg4Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r508915886", "bodyText": "Pinging @ehennum  on this - for a DS endpoint that can return a JSON or XML document, what's the preferred datatype?", "author": "rjrudin", "createdAt": "2020-10-21T00:17:32Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getDocument.api", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+    \"functionName\": \"getDocument\",\n+    \"params\": [\n+        {\n+           \"name\": \"stepName\",\n+           \"datatype\": \"string\"\n+        },\n+        {\n+           \"name\": \"uri\",\n+           \"datatype\": \"string\"\n+        }\n+    ],\n+    \"return\": {\n+        \"datatype\": \"textDocument\",", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2NjI3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509366276", "bodyText": "Same thing, add a \"desc\" here to explain what this is doing", "author": "rjrudin", "createdAt": "2020-10-21T15:03:43Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getUris.api", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+    \"functionName\": \"getUris\",\n+    \"params\": [", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2NjUwOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509366508", "bodyText": "I think this would benefit from a \"desc\" stating what the limit is if no value is provided", "author": "rjrudin", "createdAt": "2020-10-21T15:04:00Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getUris.api", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+    \"functionName\": \"getUris\",\n+    \"params\": [\n+        {\n+           \"name\": \"stepName\",\n+           \"datatype\": \"string\"\n+        },\n+        {\n+           \"name\": \"limit\",", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODM2NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509608364", "bodyText": "And make this \"int\" or \"integer\", whichever DS prefers.", "author": "rjrudin", "createdAt": "2020-10-21T19:27:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2NjUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2Njg1MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509366850", "bodyText": "Is \"limit\" required then? I think to make this safe, it should default to something like 10 if no value is provided.", "author": "rjrudin", "createdAt": "2020-10-21T15:04:24Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getUris.sjs", "diffHunk": "@@ -0,0 +1,21 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+ http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+const core = require('/data-hub/5/artifacts/core.sjs')\n+\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/read-mapping\", \"execute\");\n+\n+var stepName, limit;", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU0OTM1OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509549359", "bodyText": "\"limit\" is required parameter. Should we still have a default ?", "author": "srinathgit", "createdAt": "2020-10-21T18:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2Njg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODIxMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509608211", "bodyText": "It's defined as a string, which means null could be passed in. It should really be defined as an integer. DS will likely generate an Integer for it, in which case it can still be null. But yeah, if it's an Integer, then it seems fine for it to be required.", "author": "rjrudin", "createdAt": "2020-10-21T19:27:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2Njg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2ODcwNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509368705", "bodyText": "I think you can reuse the test-data/content concept here - the docs are written to \"raw-content\" by default, so you can use that as your collection to query on instead of \"finalCollection\".", "author": "rjrudin", "createdAt": "2020-10-21T15:06:47Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/mapping/getUrisAndDoc/suiteSetup.sjs", "diffHunk": "@@ -0,0 +1,32 @@\n+declareUpdate();", "originalCommit": "bb5e415c9464e484cf6b6a35e28e7ec55f5c0daa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f33117f3e514942a6aac5aa08afafed2189d4cfb", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f33117f3e514942a6aac5aa08afafed2189d4cfb", "message": "DHFPROD-6038:Ensure HC mapping tool works when step reads from final db", "committedDate": "2020-10-21T21:28:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTI2Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509815262", "bodyText": "Is it guaranteed that sourceDatabase will exist? I feel this needs to be a little more defensive - if sourceDatabase doesn't exist, I think it should just do a cts.doc(uri) on the current database (no eval).", "author": "rjrudin", "createdAt": "2020-10-22T00:46:22Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getDocument.sjs", "diffHunk": "@@ -0,0 +1,21 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+ http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+const core = require('/data-hub/5/artifacts/core.sjs')\n+\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/read-mapping\", \"execute\");\n+\n+var stepName, uri;\n+let mappingStep = core.getArtifact(\"mapping\", stepName);\n+fn.head(xdmp.eval(\"String(cts.doc('\" + uri + \"'))\", null, {database: xdmp.database(mappingStep.sourceDatabase)}));", "originalCommit": "f33117f3e514942a6aac5aa08afafed2189d4cfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTQ0MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509815441", "bodyText": "Also, if the mappingStep is not found, I think this should throw an error via ds-util - probably throwBadRequest.", "author": "rjrudin", "createdAt": "2020-10-22T00:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzMjg3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509832876", "bodyText": "core.getArtifact throws HTTP 404 if mapping step is not found", "author": "srinathgit", "createdAt": "2020-10-22T01:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTU5OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509815599", "bodyText": "Typo?", "author": "rjrudin", "createdAt": "2020-10-22T00:47:43Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getUris.sjs", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+ http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+const core = require('/data-hub/5/artifacts/core.sjs')\n+\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/read-mapping\", \"execute\");\n+\n+var stepName, limit;\n+let mappingStep = core.getArtifact(\"mapping\", stepName);\n+xdmp.eval(\"cts.uris(null, ['limit=\" + limit + \"'], \" + mappingStep.sourceQuery + \")\", null, {database: xdmp.database(mappingStep.sourceDatabase)}).toArray();\n+\n+pm", "originalCommit": "f33117f3e514942a6aac5aa08afafed2189d4cfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzMjk0Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509832943", "bodyText": "Yeah , will remove.", "author": "srinathgit", "createdAt": "2020-10-22T01:53:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNTcyNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4743#discussion_r509815724", "bodyText": "Same thing here, I think this needs to be more defensive. If sourceQuery doesn't exist, return an empty array. If the step doesn't exist, throw an error. If the sourceDatabase doesn't exist, don't do an eval.", "author": "rjrudin", "createdAt": "2020-10-22T00:48:08Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/mapping/getUris.sjs", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+ http://www.apache.org/licenses/LICENSE-2.0\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+const core = require('/data-hub/5/artifacts/core.sjs')\n+\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/read-mapping\", \"execute\");\n+\n+var stepName, limit;\n+let mappingStep = core.getArtifact(\"mapping\", stepName);", "originalCommit": "f33117f3e514942a6aac5aa08afafed2189d4cfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "06b31676f0647595b5ea304f1ae0751bf87103d7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/06b31676f0647595b5ea304f1ae0751bf87103d7", "message": "DHFPROD-6038:Ensure HC mapping tool works when step reads from final db", "committedDate": "2020-10-22T08:57:04Z", "type": "commit"}, {"oid": "06b31676f0647595b5ea304f1ae0751bf87103d7", "url": "https://github.com/marklogic/marklogic-data-hub/commit/06b31676f0647595b5ea304f1ae0751bf87103d7", "message": "DHFPROD-6038:Ensure HC mapping tool works when step reads from final db", "committedDate": "2020-10-22T08:57:04Z", "type": "forcePushed"}]}