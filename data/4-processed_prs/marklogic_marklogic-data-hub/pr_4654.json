{"pr_number": 4654, "pr_title": "DHFPROD-5865: Generate explorer search options w/o conflicting with entity-type name", "pr_createdAt": "2020-10-01T17:50:01Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4654", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMTI0OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4654#discussion_r498431248", "bodyText": "Pinging @fsnow  to confirm, as I'm forgetting xquery each day, but I'm pretty certain that since you have a node or an empty sequence here, you can just do this:\nif ($search-container-node)\n\nThough the more elegant approach would be this:\nlet $container := $n/search:container\nwhere fn:not($container)\nreturn ...\n\nI like let/where/return as a replacement for an if/else where either condition has empty sequence as a return value", "author": "rjrudin", "createdAt": "2020-10-01T18:15:30Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-entities.xqy", "diffHunk": "@@ -201,25 +201,30 @@ declare %private function hent:fix-options-for-explorer(\n           hent:fix-options-for-explorer($n/node(), $sortable-properties, $entity-namespace-map)\n         }\n       case element(search:constraint) return\n-        element { fn:node-name($n) } {\n-          $n/@*,\n-          let $path-expression := fix-path-expression(fn:string($n/search:range/search:path-index))\n-          let $search-range-node := $n/search:range\n-          let $is-sortable-only :=\n-            let $sort-info := map:get($sortable-properties, $path-expression)\n-            return\n-              if (fn:exists($sort-info)) then map:get($sort-info, \"is-sortable-only\") = fn:true()\n-              else fn:false()\n-          return\n-            if (fn:empty($search-range-node) or fn:not($is-sortable-only)) then\n-              hent:fix-options-for-explorer($n/node(), $sortable-properties, $entity-namespace-map)\n-            else\n-              element {fn:node-name($search-range-node)} {\n-                $search-range-node/attribute()[not(name()='facet')],\n-                attribute facet {\"false\"},\n-                hent:fix-options-for-explorer($search-range-node, $sortable-properties, $entity-namespace-map)/node()\n-              }\n-        }\n+        let $search-container-node := $n/search:container\n+        return\n+          if (fn:not(fn:empty($search-container-node))) then", "originalCommit": "e76307605abb2e57777706b04c37859c0c785e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMTYxNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4654#discussion_r498431617", "bodyText": "And to make it more self-documenting, you could do this:\nlet $container-for-entity-property-generated-by-es := $n/search:container", "author": "rjrudin", "createdAt": "2020-10-01T18:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMTI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4MjgxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4654#discussion_r499782814", "bodyText": "Updated to let/where/return", "author": "akshaysonvane", "createdAt": "2020-10-05T18:13:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMTI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMjcyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4654#discussion_r498432726", "bodyText": "These assertions should have a message explaining why we don't want these here - i.e. touch on the Collection constraint and the fact that Explorer doesn't need these container constraints.", "author": "rjrudin", "createdAt": "2020-10-01T18:18:15Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/impl/hub-entities/generateSearchOptions.sjs", "diffHunk": "@@ -359,6 +359,31 @@ function testHubCentralSupportedDatatypeMappingsForSort() {\n   return assertions;\n }\n \n+function generateExplorerOptionsWithoutContainerConstraint() {\n+  const input =\n+    [{\n+      \"info\": {\n+        \"title\": \"Book\"\n+      },\n+      \"definitions\": {\n+        \"Book\": {\n+          \"properties\": {\n+            \"publishedAtAddress\": {\"$ref\": \"#/definitions/Address\"}\n+          }\n+        },\n+        \"Address\": {\n+          \"properties\": {}\n+        }\n+      }\n+    }];\n+  const options = hent.dumpSearchOptions(input, true);\n+\n+  return [\n+    test.assertNotExists(options.xpath(\"/*:constraint[@name = 'Book']/*:container\")),", "originalCommit": "e76307605abb2e57777706b04c37859c0c785e0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d5ad9b99446cd5fad5f1b80d883e115a50a69f66", "url": "https://github.com/marklogic/marklogic-data-hub/commit/d5ad9b99446cd5fad5f1b80d883e115a50a69f66", "message": "DHFPROD-5865: Generate explorer search options w/o conflicting with entity-type name\nAlso removed exp-default.xml staging and final options that arent used anymore", "committedDate": "2020-10-05T18:11:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4OTUzOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4654#discussion_r499789538", "bodyText": "This is good, but the test needs to assert two more things - that the \"default\" options were written to src/main/entity-config in the project directory, and that they are not in the modules database because of the conflict between Collection constraints.", "author": "rjrudin", "createdAt": "2020-10-05T18:26:05Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/entity/EntityManagerTest.java", "diffHunk": "@@ -191,6 +194,33 @@ public void overrideExistingExplorerOptions() {\n         assertTrue(newStagingOptionsTimeStamp > oldStagingOptionsTimeStamp);\n     }\n \n+    @Test\n+    public void deployExplorerOptionsWithoutContainerConstraint() {\n+        Path entitiesDir = getHubProject().getHubEntitiesDir();\n+        if (!entitiesDir.toFile().exists()) {\n+            entitiesDir.toFile().mkdirs();\n+        }\n+        FileUtil.copy(getResourceStream(\"scaffolding-test/Collection.entity.json\"),\n+                entitiesDir.resolve(\"Collection.entity.json\").toFile());\n+\n+        runAsDataHubDeveloper();\n+        entityManager.deployQueryOptions();\n+\n+        runAsAdmin();\n+        Stream.of(HubConfig.DEFAULT_STAGING_NAME, HubConfig.DEFAULT_FINAL_NAME)\n+                .forEach(dbName -> assertNull(getModulesFile(\"/Default/\" + dbName + \"/rest-api/options/exp-default.xml\"), \"Did not expect exp-default.xml options file in \" + dbName + \"since we dont use it anymore.\"));\n+\n+        String stagingExplorerOptions = getModulesFile(\"/Default/\" + HubConfig.DEFAULT_STAGING_NAME + \"/rest-api/options/\" + HubConfig.EXP_STAGING_ENTITY_QUERY_OPTIONS_FILE);\n+        String finalExplorerOptions = getModulesFile(\"/Default/\" + HubConfig.DEFAULT_FINAL_NAME + \"/rest-api/options/\" + HubConfig.EXP_FINAL_ENTITY_QUERY_OPTIONS_FILE);\n+\n+        Stream.of(stagingExplorerOptions, finalExplorerOptions).forEach(option -> {", "originalCommit": "d5ad9b99446cd5fad5f1b80d883e115a50a69f66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxOTA3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4654#discussion_r499819076", "bodyText": "Updated the tests.", "author": "akshaysonvane", "createdAt": "2020-10-05T19:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4OTUzOA=="}], "type": "inlineReview"}, {"oid": "a7b5309be26f457770a2b2f168cce55363911a07", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a7b5309be26f457770a2b2f168cce55363911a07", "message": "DHFPROD-5865: Generate explorer search options w/o conflicting with entity-type name\nAlso removed exp-default.xml staging and final options that arent used anymore", "committedDate": "2020-10-05T19:20:02Z", "type": "commit"}, {"oid": "a7b5309be26f457770a2b2f168cce55363911a07", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a7b5309be26f457770a2b2f168cce55363911a07", "message": "DHFPROD-5865: Generate explorer search options w/o conflicting with entity-type name\nAlso removed exp-default.xml staging and final options that arent used anymore", "committedDate": "2020-10-05T19:20:02Z", "type": "forcePushed"}]}