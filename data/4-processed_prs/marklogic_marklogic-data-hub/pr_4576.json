{"pr_number": 4576, "pr_title": "DHFPROD-5608: Placement of new card in Load", "pr_createdAt": "2020-09-15T20:53:35Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4576", "timeline": [{"oid": "3b1fb3d196c93f2d2cff2817047edab0f5024123", "url": "https://github.com/marklogic/marklogic-data-hub/commit/3b1fb3d196c93f2d2cff2817047edab0f5024123", "message": "DHFPROD-5608: Placement of new card in Load", "committedDate": "2020-09-16T17:43:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489697400", "bodyText": "Is this the right place to add these assertions. Previous step is clicking on Yes to add to existing flow and redirected to run tile, so this is like breaking the chain of events. This scenario probably deserves to be a separate test. You could add it to this one before load step is added to a flow, but then you also would have to update the test description.", "author": "bsrikan", "createdAt": "2020-09-16T19:19:48Z", "path": "marklogic-data-hub-central/ui/src/components/load/load-card.test.tsx", "diffHunk": "@@ -67,6 +67,14 @@ describe('Load Card component', () => {\n     //Click on 'Yes' button\n     fireEvent.click(getByTestId('testLoadXML-to-FlowA-Confirm'));\n \n+    //verify Load cards are ordered by Last Updated", "originalCommit": "3b1fb3d196c93f2d2cff2817047edab0f5024123", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5OTcyNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489699725", "bodyText": "Okay, I will work on refactoring the test here in the same file then. Thanks!", "author": "briantang", "createdAt": "2020-09-16T19:21:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwMjgxMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489702812", "bodyText": "Is this the right place to add these assertions. Previous step is clicking on Yes to add to existing flow and redirected to run tile, so this is like breaking the chain of events. This scenario probably deserves to be a separate test. You could add it to this one before load step is added to a flow, but then you also would have to update the test description.\n\n@bsrikan but generally are we doing roundtrip data CRUD in the unit tests? Seems like when we test POSTs, we're just testing that the POST gets called and not going about checking the state of the existing payload for that view. I could be wrong. Is there an example similar to this? I will look...", "author": "wooldridge", "createdAt": "2020-09-16T19:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwMzgzMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489703831", "bodyText": "You can test for something like this:\n//before update\n    expect(loadCards[0]).toHaveTextContent('Add New');\n    expect(loadCards[1]).toHaveTextContent('testLoadXML');\n    expect(loadCards[2]).toHaveTextContent('testLoad123');\n    expect(loadCards[3]).toHaveTextContent('testLoad');\n\n//update timestamp for testLoadXML\ndata.loadData.data[1].lastUpdated = \"1990-04-15T14:22:54.057519-07:00\"\n\n//after update\n    expect(loadCards[0]).toHaveTextContent('Add New');\n    expect(loadCards[1]).toHaveTextContent('testLoad123');\n    expect(loadCards[2]).toHaveTextContent('testLoad');\n    expect(loadCards[3]).toHaveTextContent('testLoadXML');", "author": "bsrikan", "createdAt": "2020-09-16T19:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNDYzMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489704630", "bodyText": "good idea, thanks. Will work on that.", "author": "briantang", "createdAt": "2020-09-16T19:29:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNDg1Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489704852", "bodyText": "@bsrikan, nice. We can avoid mucking with the CRUD and just change the source data and see that the UI adjusts.", "author": "wooldridge", "createdAt": "2020-09-16T19:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNTQwOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489705408", "bodyText": "@briantang, I like @bsrikan's suggestion of making a separate test.", "author": "wooldridge", "createdAt": "2020-09-16T19:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTcwNTg0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489705847", "bodyText": "Noted, will do. Thanks all :)", "author": "briantang", "createdAt": "2020-09-16T19:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc1NjY3OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r489756678", "bodyText": "@wooldridge you are right about the roundtrip. For RTL unit tests, our mock data is setting up the response for POST request. So its like testing with the assumption that server responds as expected. Now its upto the UI to render that correctly. The same is tested with scenario above. We check for the order of load cards as is. Then update the timestamp, which is to mock the edit/save load configuration, when the timestamp is updated and verify the order of load cards again.\nThe only roundtrip from server for this ticket is the timestamp update on edit/save. But is it worth a Cypress test, probably not IMO. If a scenario comes up in the future where we edit the settings or step details, we could additionally test for placement based on last updated.", "author": "bsrikan", "createdAt": "2020-09-16T21:11:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUxMTM5Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4576#discussion_r490511392", "bodyText": "@wooldridge we were not able to test as suggested; rerender was not calling useEffect and so we were not able to verify the sort order after timestamp was updated within the test. Instead, the mock data itself has unordered list, so we verify that it renders the cards in the expected order.", "author": "bsrikan", "createdAt": "2020-09-17T19:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY5NzQwMA=="}], "type": "inlineReview"}, {"oid": "075b9368b98dfc3fe4c7b83ede7e7019ce97e737", "url": "https://github.com/marklogic/marklogic-data-hub/commit/075b9368b98dfc3fe4c7b83ede7e7019ce97e737", "message": "DHFPROD-5608: Placement of new card in Load", "committedDate": "2020-09-16T22:11:17Z", "type": "forcePushed"}, {"oid": "5fba107dc71fd1351cd79a9a3a17b499e45cff1e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/5fba107dc71fd1351cd79a9a3a17b499e45cff1e", "message": "DHFPROD-5608: Placement of new card in Load", "committedDate": "2020-09-17T18:05:15Z", "type": "commit"}, {"oid": "5fba107dc71fd1351cd79a9a3a17b499e45cff1e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/5fba107dc71fd1351cd79a9a3a17b499e45cff1e", "message": "DHFPROD-5608: Placement of new card in Load", "committedDate": "2020-09-17T18:05:15Z", "type": "forcePushed"}]}