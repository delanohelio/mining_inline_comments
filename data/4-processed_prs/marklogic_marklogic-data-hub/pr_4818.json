{"pr_number": 4818, "pr_title": "DHFPROD-5997: Fixing logic for determining step success", "pr_createdAt": "2020-11-03T15:58:48Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4818", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc3Njk5MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4818#discussion_r516776990", "bodyText": "Noticed this rogue log statement while testing, removed it.", "author": "rjrudin", "createdAt": "2020-11-03T16:00:10Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/bulk/fixCreatedByStep.sjs", "diffHunk": "@@ -90,7 +90,6 @@ if (uris.length == 0) {\n             {database: xdmp.database(config.JOBDATABASE)}\n           ));\n           if (influencedByTriple) {\n-            console.log(\"Using influencedBy!\");", "originalCommit": "949ea176b904b691be3303b0d6fb1013c467d811", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4MDczNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4818#discussion_r516780736", "bodyText": "I'm mostly wondering how safe this change is. When I first made it, the only test that failed was the one for an invalid sourceQuery. So I made the fix to CollectorImpl so that it throws an exception - its previous behavior for handling an error seemed incorrect.", "author": "rjrudin", "createdAt": "2020-11-03T16:05:29Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java", "diffHunk": "@@ -524,4 +513,23 @@ private RunStepResponse runHarmonizer(RunStepResponse runStepResponse, Collectio\n         runningThread.start();\n         return runStepResponse;\n     }\n+\n+    private String determineStepStatus(StepMetrics stepMetrics) {\n+        if (stepMetrics.getFailedEventsCount() > 0 && stopOnFailure) {\n+            return JobStatus.STOP_ON_ERROR_PREFIX + step;\n+        } else if( isStopped.get()){\n+            return JobStatus.CANCELED_PREFIX + step;\n+        } else if (stepMetrics.getFailedEventsCount() > 0 && stepMetrics.getSuccessfulEventsCount() > 0) {\n+            return JobStatus.COMPLETED_WITH_ERRORS_PREFIX + step;\n+        } else if (stepMetrics.getFailedEventsCount() == 0)  {\n+            // Based on DHFPROD-5997, it is possible for a step to complete successfully but not process anything.", "originalCommit": "949ea176b904b691be3303b0d6fb1013c467d811", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e36ffda201c79793b11dfc3a32c2bea3bad90bf9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e36ffda201c79793b11dfc3a32c2bea3bad90bf9", "message": "DHFPROD-5997: Fixing logic for determining step success\n\nThe problem was that CollectorImpl was not throwing an exception when the collector failed. It instead returned a single item - the error message (the serialized JSON object from the REST API). That was then processed by the step, which resulted in zero successful items - but also zero failed items. \n\nNow that the collector properly throws an error, QueryStepRunner can say that if there are no failed items, then the step completed successfully.", "committedDate": "2020-11-03T23:06:42Z", "type": "commit"}, {"oid": "e36ffda201c79793b11dfc3a32c2bea3bad90bf9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e36ffda201c79793b11dfc3a32c2bea3bad90bf9", "message": "DHFPROD-5997: Fixing logic for determining step success\n\nThe problem was that CollectorImpl was not throwing an exception when the collector failed. It instead returned a single item - the error message (the serialized JSON object from the REST API). That was then processed by the step, which resulted in zero successful items - but also zero failed items. \n\nNow that the collector properly throws an error, QueryStepRunner can say that if there are no failed items, then the step completed successfully.", "committedDate": "2020-11-03T23:06:42Z", "type": "forcePushed"}]}