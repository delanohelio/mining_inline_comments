{"pr_number": 4789, "pr_title": "DHFPROD-5858: Check ML version compatibility before running hubDeploy* tasks", "pr_createdAt": "2020-10-29T17:47:25Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4789", "timeline": [{"oid": "19fe53646263ccc573a667e0fe22b0c431738786", "url": "https://github.com/marklogic/marklogic-data-hub/commit/19fe53646263ccc573a667e0fe22b0c431738786", "message": "DHFPROD-5858: Check ML version compatibility before running hubDeploy* tasks", "committedDate": "2020-10-29T17:50:11Z", "type": "forcePushed"}, {"oid": "c3bd389bceb0a575cbd7107e6e696a3b7d62e9b2", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c3bd389bceb0a575cbd7107e6e696a3b7d62e9b2", "message": "DHFPROD-5858: Check ML version compatibility before running hubDeploy* tasks", "committedDate": "2020-10-29T20:59:43Z", "type": "forcePushed"}, {"oid": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "message": "DHFPROD-5858: Check ML version compatibility before running hubDeploy* tasks", "committedDate": "2020-10-29T21:41:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5Mzg4NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515093884", "bodyText": "I think we need a friendly try/catch on these too, in case this call fails - which could happen for a number of reasons, most often that the user's creds are incorrect.\nAlso, I think we can put that try/catch and the code in the MarkLogicVersion class. It should have a constructor for accepting a String version, which makes testing it easy. But it should also have a constructor that takes a ManageClient. It will then make this call itself, wrapping it in a try/catch. The message can be \"Unable to get version of MarkLogic; cause: \" + ex.getMessage()\nThat will avoid the duplication of getting the ML version too, which is also being done in DeployHubAmpsCommand.", "author": "rjrudin", "createdAt": "2020-10-30T13:25:08Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/DhsDeployer.java", "diffHunk": "@@ -48,13 +51,27 @@ public void deployAsDeveloper(HubConfigImpl hubConfig) {\n     }\n \n     public void deployAsSecurityAdmin(HubConfigImpl hubConfig) {\n+        throwExceptionIfMarkLogicVersionIsInvalid(hubConfig);\n         prepareAppConfigForDeployingToDhs(hubConfig);\n \n         HubAppDeployer dhsDeployer = new HubAppDeployer(hubConfig.getManageClient(), hubConfig.getAdminManager(), null, null);\n         dhsDeployer.setCommands(buildCommandsForSecurityAdmin());\n         dhsDeployer.deploy(hubConfig.getAppConfig());\n     }\n \n+    public void throwExceptionIfMarkLogicVersionIsInvalid(HubConfig hubConfig) {\n+        MarkLogicVersion mlVersion = new MarkLogicVersion(hubConfig.getManageClient()", "originalCommit": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5OTE2OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515399169", "bodyText": "Added the try/catch and moved the code to MarkLogicVersion class.", "author": "akshaysonvane", "createdAt": "2020-10-30T21:52:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5Mzg4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5NTQ4MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515095481", "bodyText": "The less we use Versions, the better - it's a confusing class because of its Spring dependencies.\nI think this should just be \"new MarkLogicVersion(hubConfig.getManageClient()).isVersionCompatiableWith520Roles()\".\nEssentially, all the actual logic in Versions for parsing version numbers should move into MarkLogicVersion, such that Versions becomes this thin class that is rarely used and only serves to create a MarkLogicVersion object.", "author": "rjrudin", "createdAt": "2020-10-30T13:27:39Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/CreateGranularPrivilegesCommand.java", "diffHunk": "@@ -117,10 +115,11 @@ public Integer getUndoSortOrder() {\n \n     @Override\n     public void execute(CommandContext context) {\n-        if (new Versions(hubConfig).isVersionCompatibleWith520Roles()) {\n+        if (new Versions(hubConfig).getMarkLogicVersion().isVersionCompatibleWith520Roles()) {", "originalCommit": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwMjU1MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515402550", "bodyText": "The Versions class still has getMarkLogicVersionString() (renamed from getMarkLogicVersion()) method which performs an eval using hubClient or hubConfig depending on what is present.\nThis method is useful for cases where the user does not have access to \"manage\".", "author": "akshaysonvane", "createdAt": "2020-10-30T22:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5NTQ4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5NzEwNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515097104", "bodyText": "I like this \"cannotUpdateAmps\" method - this is a good example of the benefit of having a class here, particularly in that it consolidates all of the logic that we have for checking the version number.\nPinging @anu3990  and @SameeraPriyathamTadikonda  and @srinathgit  about this - we'll soon add a method to the MarkLogicVersion class to determine if Optic rowIDs are supported - i.e. if ML is 10.0-5 or higher.\nWhich means MarkLogicVersion will likely make its way into the API project soon (that's out of scope for this ticket).", "author": "rjrudin", "createdAt": "2020-10-30T13:29:58Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java", "diffHunk": "@@ -58,18 +58,15 @@ public SaveReceipt updateResource(String payload, String resourceId) {\n             return receipt;\n         }\n \n-        private boolean cannotUpdateAmps(){\n-            try{\n-                Versions.MarkLogicVersion mlVersion = new Versions().getMLVersion(getManageClient().getXml(\"/manage\")\n-                    .getElementValue(\"/node()/c:version\"));\n-                // Users should be able to update amps on versions > 10.0-4.4\n-                return mlVersion.isNightly() == true ? false: (mlVersion.getMajor() == 10 && mlVersion.getMinor() == 404);\n+        private boolean cannotUpdateAmps() {\n+            try {\n+                return new MarkLogicVersion(getManageClient().getXml(\"/manage\")\n+                        .getElementValue(\"/node()/c:version\")).cannotUpdateAmps();", "originalCommit": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5Nzg2OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515097869", "bodyText": "Same thing here - dump Versions in favor of new MarkLogicVersion(getHubClient().getManageClient()).", "author": "rjrudin", "createdAt": "2020-10-30T13:31:10Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -40,7 +40,7 @@\n \n     @BeforeEach\n     void checkIfTestsCanBeRun(){\n-        Versions.MarkLogicVersion mlVersion = new Versions(getHubClient()).getMLVersion();\n+        MarkLogicVersion mlVersion = new Versions(getHubClient()).getMarkLogicVersion();", "originalCommit": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5OTAxOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515099019", "bodyText": "A testing tip here is that when you have to call the same method/constructor repeatedly in a test, it's a good idea to make a little private method that does that, and then have the test call that private method.\nThe benefit is that if I search on references for this constructor, I get dozens of them, which makes it harder to understand where the constructor is used. With a private method calling the constructor in the test, I'll just get a handful of them.", "author": "rjrudin", "createdAt": "2020-10-30T13:33:00Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/installer/command/CanInstallDhsCommandTest.java", "diffHunk": "@@ -1,53 +1,50 @@\n package com.marklogic.hub.dhs.installer.command;\n \n import com.fasterxml.jackson.databind.node.ObjectNode;\n-import com.marklogic.hub.AbstractHubCoreTest;\n-import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.impl.MarkLogicVersion;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n \n-class CanInstallDhsCommandTest extends AbstractHubCoreTest {\n+class CanInstallDhsCommandTest {\n \n-    private InstallIntoDhsCommand installIntoDhsCommand = new InstallIntoDhsCommand();\n-\n-    @Autowired\n-    Versions versions;\n+    private final InstallIntoDhsCommand installIntoDhsCommand = new InstallIntoDhsCommand();\n \n     @Test\n     void testCanInstallDhs() {\n-        canInstall(installIntoDhsCommand.canInstallDhs(\"5.0.2\", versions.getMLVersion(\"10.0-3\")));\n-        canInstall(installIntoDhsCommand.canInstallDhs(\"5.1.0\", versions.getMLVersion(\"10.0-4.2\")));\n-        canInstall(installIntoDhsCommand.canInstallDhs(\"5.2.0\", versions.getMLVersion(\"10.0-5\")));\n-        canInstall(installIntoDhsCommand.canInstallDhs(\"5.2.3\", versions.getMLVersion(\"10.0-3.1\")));\n-        canInstall(installIntoDhsCommand.canInstallDhs(\"5.0.0\", versions.getMLVersion(\"10.0-3\")));\n-\n-        cantInstallInvalidDhfVersion(installIntoDhsCommand.canInstallDhs(\"4.0.2\", versions.getMLVersion(\"10.0-3\")));\n-        cantInstallInvalidDhfVersion(installIntoDhsCommand.canInstallDhs(\"4.3.2\", versions.getMLVersion(\"10.0-4.2\")));\n-        cantInstallInvalidDhfVersion(installIntoDhsCommand.canInstallDhs(\"3.0.0\", versions.getMLVersion(\"10.0-5\")));\n-        cantInstallInvalidDhfVersion(installIntoDhsCommand.canInstallDhs(\"2.3.2\", versions.getMLVersion(\"9.0.0\")));\n-        cantInstallInvalidDhfVersion(installIntoDhsCommand.canInstallDhs(\"4.1.0\", versions.getMLVersion(\"9.0-12\")));\n-\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(\"5.0.2\", versions.getMLVersion(\"9.0-12\")));\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(\"5.1.0\", versions.getMLVersion(\"10.0-2.4\")));\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(\"5.2.0\", versions.getMLVersion(\"9.0-15\")));\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(\"5.2.3\", versions.getMLVersion(\"10.0-2\")));\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(\"5.0.0\", versions.getMLVersion(\"10.0-2.12\")));\n-\n-        canInstall(installIntoDhsCommand.canInstallDhs(null, versions.getMLVersion(\"10.0-3\")));\n-        canInstall(installIntoDhsCommand.canInstallDhs(null, versions.getMLVersion(\"11.0-1\")));\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(null, versions.getMLVersion(\"9.0.0\")));\n-        cantInstallInvalidServerVersion(installIntoDhsCommand.canInstallDhs(null, versions.getMLVersion(\"9.0-12\")));\n+        canInstall(installIntoDhsCommand.canInstallDhs(\"5.0.2\", new MarkLogicVersion(\"10.0-3\")));", "originalCommit": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5OTYxMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515399610", "bodyText": "Makes sense; added a private method for creating the object.", "author": "akshaysonvane", "createdAt": "2020-10-30T21:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA5OTAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwMDU5MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515100591", "bodyText": "Sorry, one more tweak here - in expectation of this class going into the API project, let's put it in \"com.marklogic.hub\". The feature provided by this class is generic to all of DHF, so I think that root package is justified here.", "author": "rjrudin", "createdAt": "2020-10-30T13:34:49Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/MarkLogicVersion.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright (c) 2020 MarkLogic Corporation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.marklogic.hub.impl;", "originalCommit": "841624a1c2a7a958dd16ce7d784d6593a51a8e9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5OTcwNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4789#discussion_r515399707", "bodyText": "Moved under com.marklogic.hub", "author": "akshaysonvane", "createdAt": "2020-10-30T21:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwMDU5MQ=="}], "type": "inlineReview"}, {"oid": "70098a5c458c72098e36ebc453e87861b7409892", "url": "https://github.com/marklogic/marklogic-data-hub/commit/70098a5c458c72098e36ebc453e87861b7409892", "message": "DHFPROD-5858: Check ML version compatibility before running hubDeploy* tasks", "committedDate": "2020-10-30T21:48:29Z", "type": "commit"}, {"oid": "70098a5c458c72098e36ebc453e87861b7409892", "url": "https://github.com/marklogic/marklogic-data-hub/commit/70098a5c458c72098e36ebc453e87861b7409892", "message": "DHFPROD-5858: Check ML version compatibility before running hubDeploy* tasks", "committedDate": "2020-10-30T21:48:29Z", "type": "forcePushed"}]}