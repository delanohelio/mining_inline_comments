{"pr_number": 3590, "pr_title": "DHFPROD-3581: And DHFPROD-3720 - Adding dataservice endpoints to search on facet values", "pr_createdAt": "2020-02-19T01:12:17Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3590", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyMjYxNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381322617", "bodyText": "I think this is a good example of where moving this code to a separate private method is a good way to document what it's doing - i.e. \"copyTestIndexesFileToProject\".", "author": "rjrudin", "createdAt": "2020-02-19T14:25:20Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "diffHunk": "@@ -40,6 +46,14 @@ public void bootstrapHub() {\n         }\n \n         if (!isInstalled) {\n+            try {", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyMzE5Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381323193", "bodyText": "If this file can't be copied, then the tests that depend on it are going to fail. Best to throw an exception now as opposed to letting the system be in a misconfigured state - e.g. throw new RuntimeException(\"Unable to copy test indexes file to project\", ioe);", "author": "rjrudin", "createdAt": "2020-02-19T14:26:11Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "diffHunk": "@@ -40,6 +46,14 @@ public void bootstrapHub() {\n         }\n \n         if (!isInstalled) {\n+            try {\n+                Path srcDir = Paths.get(\"src\", \"test\", \"ml-config\", \"databases\",\"final-database.json\");\n+                Path dstDir = Paths.get(adminHubConfig.getUserDatabaseDir().toString(), \"test-final-database.json\");\n+                FileUtils.copyFile(srcDir.toAbsolutePath().toFile(), dstDir.toAbsolutePath().toFile());\n+            } catch (IOException ioe) {\n+                ioe.printStackTrace();", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyNzE3OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381327178", "bodyText": "Pinging @ryanjdew - I think this is too fine-grained for an interface. We want interfaces that are broadly scoped against higher level features in DHF, and each method/endpoint can have a well-defined, narrow scope.\nBoth of these new endpoints pertain to searching entities. So let's call this service \"entitySearch\".\nNow let's name these methods more from a client perspective, as it's not clear what \"numericFacetValuesRange\" means (nor does it appear to be bound to numbers). The use case appears to be - get me the min and max values for an entity property. So let's call the method \"getMinAndMaxPropertyValues\". And let's rename \"facetName\" to \"properetyPath\" - this endpoint doesn't need to care about facets, it only cares about indexes.", "author": "rjrudin", "createdAt": "2020-02-19T14:31:49Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/numericFacetValuesRange/service.json", "diffHunk": "@@ -0,0 +1,4 @@\n+{\n+  \"endpointDirectory\": \"/data-hub/5/data-services/numericFacetValuesRange/\",\n+  \"$javaClass\": \"com.marklogic.hub.dataservices.NumericFacetValuesRange\"", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNDAyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381334020", "bodyText": "Should call this propertyPath as well", "author": "rjrudin", "createdAt": "2020-02-19T14:41:47Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNDU4Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381334587", "bodyText": "Let's call this \"pattern\", which is the same term that the underlying functions use - http://docs.marklogic.com/cts.valueMatch .", "author": "rjrudin", "createdAt": "2020-02-19T14:42:38Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;\n+var searchStr;", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNTYyNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381335625", "bodyText": "Looking at these conditionals, I'm thinking two things:\n\n\"indexType\" should be called \"referenceType\", as that's what we're figuring out here - what type of reference should we use?\nThe values should then correspond to the reference functions - e.g. \"element\" instead of \"elementRangeIndex\", \"field\" instead of \"fieldRangeIndex\", and then \"collection\".", "author": "rjrudin", "createdAt": "2020-02-19T14:44:10Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;\n+var searchStr;\n+var limit;\n+\n+var query;\n+\n+if(indexType === 'elementRangeIndex') {", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNzQwNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381337405", "bodyText": "Because this is using valueMatch, then from a client's perspective, the requirement appears to be - \"get me entity property values that match a pattern\". So the endpoint name could be \"getMatchingPropertyValues\".", "author": "rjrudin", "createdAt": "2020-02-19T14:46:50Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;\n+var searchStr;\n+var limit;\n+\n+var query;\n+\n+if(indexType === 'elementRangeIndex') {\n+  query = cts.elementReference(facetName);\n+} else if(indexType === 'fieldRangeIndex') {\n+  query = cts.fieldReference(facetName);\n+} else if(indexType === 'collection') {\n+  query = cts.collectionReference();\n+} else {\n+  query = cts.pathReference(\"//*:instance/\" + entityName + \"/\" + facetName);\n+}\n+\n+var facetValues = cts.valueMatch(query, searchStr + \"*\",", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0ODEwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381548106", "bodyText": "Should be able to derive this from the entity model so that the client doesn't have to pass it in or care about it", "author": "rjrudin", "createdAt": "2020-02-19T21:14:20Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/numericFacetValuesRange/numericFacetValuesRange.sjs", "diffHunk": "@@ -0,0 +1,22 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0ODYyNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381548625", "bodyText": "Should rename this test modules based on the proposed function names above.", "author": "rjrudin", "createdAt": "2020-02-19T21:15:34Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/searchFacetValues/numericFacetValuesRangeTest.sjs", "diffHunk": "@@ -0,0 +1,59 @@\n+const test = require(\"/test/test-helper.xqy\");", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0OTU4OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381549589", "bodyText": "Is there a scenario that tests the logic for performing an additional cts.valueMatch query based on a looser pattern? If so, add an assertion message to the test.assertEqual function that states that it's expecting a value based on that second search.", "author": "rjrudin", "createdAt": "2020-02-19T21:17:40Z", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/searchFacetValues/searchStringFacetValuesTest.sjs", "diffHunk": "@@ -0,0 +1,62 @@\n+const test = require(\"/test/test-helper.xqy\");\n+\n+function invokeService(entityName, facetName, indexType, searchStr, limit) {", "originalCommit": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90c233c821a377ea5619ae1dc6b0f488e4202d20", "url": "https://github.com/marklogic/marklogic-data-hub/commit/90c233c821a377ea5619ae1dc6b0f488e4202d20", "message": "DHFPROD-3581: Search within a specific facet of string datatype", "committedDate": "2020-02-27T15:44:00Z", "type": "commit"}, {"oid": "4490705bdcaec9d9c7ac84e29aa436b86eb50667", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4490705bdcaec9d9c7ac84e29aa436b86eb50667", "message": "DHFPROD-3720: Show range for facets based on numeric data type", "committedDate": "2020-02-27T15:44:00Z", "type": "commit"}, {"oid": "89a506da79ecd3575284d4408a5a0f8a1d135a8e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/89a506da79ecd3575284d4408a5a0f8a1d135a8e", "message": "DHFPROD-3581: Adding indexes to final-database.json and throwing error if file is not copied", "committedDate": "2020-02-27T15:52:17Z", "type": "commit"}, {"oid": "60ebe66ce78ae4250bb4aa04b571969fd639bcbb", "url": "https://github.com/marklogic/marklogic-data-hub/commit/60ebe66ce78ae4250bb4aa04b571969fd639bcbb", "message": "DHFPROD-3581: Adding hub entity services library and tests", "committedDate": "2020-02-27T16:02:18Z", "type": "commit"}, {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "url": "https://github.com/marklogic/marklogic-data-hub/commit/62e619c9ca3104dca7215b7264e895adee8a2fe8", "message": "DHFPROD-3581: Moving all ds endpoints related to entitySearch under EntitySearch Interface", "committedDate": "2020-02-27T16:12:56Z", "type": "commit"}, {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "url": "https://github.com/marklogic/marklogic-data-hub/commit/62e619c9ca3104dca7215b7264e895adee8a2fe8", "message": "DHFPROD-3581: Moving all ds endpoints related to entitySearch under EntitySearch Interface", "committedDate": "2020-02-27T16:12:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjczMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385242733", "bodyText": "For simplicity and consistency, the functionName should match the name of the endpoint file.", "author": "rjrudin", "createdAt": "2020-02-27T17:00:30Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMinAndMaxPropertyValues.api", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"functionName\": \"getNumericFacetsRange\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjkxNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385242917", "bodyText": "As long as this function name needs to be changed, let's change this name too - we know this will now be \"entityTypeId\".", "author": "rjrudin", "createdAt": "2020-02-27T17:00:49Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMinAndMaxPropertyValues.api", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"functionName\": \"getNumericFacetsRange\",\n+  \"params\": [\n+    {\n+      \"name\": \"entityIRI\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MzA3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385243076", "bodyText": "Change to entityTypeId", "author": "rjrudin", "createdAt": "2020-02-27T17:01:02Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMatchingPropertyValues.api", "diffHunk": "@@ -0,0 +1,29 @@\n+{\n+  \"functionName\": \"getMatchingPropertyValues\",\n+  \"params\": [\n+    {\n+      \"name\": \"entityIRI\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0Mzc2Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385243767", "bodyText": "@ryanjdew I think this is fine here for 5.2.0, I'm thinking we can combine this with entity-lib.sjs in my DHFPROD-4379 PR for 5.3.0.", "author": "rjrudin", "createdAt": "2020-02-27T17:02:16Z", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ Copyright 2012-2019 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+\n+'use strict';\n+const sem = require(\"/MarkLogic/semantics.xqy\");\n+\n+function getPropertyRangePath(entityIRI, propertyPath) {", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NDM1Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385244356", "bodyText": "Just do \"stringNameProp\"", "author": "rjrudin", "createdAt": "2020-02-27T17:03:10Z", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NDYxMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385244610", "bodyText": "\"stringCityProp\" and \"NumericStringEntity\"", "author": "rjrudin", "createdAt": "2020-02-27T17:03:35Z", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"srchEntyProp1\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    }\n+  ],\n+  \"range-path-index\": [\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumericEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"long\",\n+      \"path-expression\": \"//*:instance/NumericEntity/longProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"string\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/strCityProp\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NDc5Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385244793", "bodyText": "Since \"entitySearch\" is used above, let's do \"EntitySearchEntity\" here.", "author": "rjrudin", "createdAt": "2020-02-27T17:03:57Z", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"srchEntyProp1\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    }\n+  ],\n+  \"range-path-index\": [\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumericEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"long\",\n+      \"path-expression\": \"//*:instance/NumericEntity/longProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"string\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/strCityProp\",\n+      \"collation\": \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"string\",\n+      \"path-expression\": \"//*:instance/EntitiesSearchEntity/srchEntyProp2\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NjAyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385246021", "bodyText": "Let's not omit any letters in words, there's no benefit in doing that - just do \"searchEntityProp1\".", "author": "rjrudin", "createdAt": "2020-02-27T17:06:03Z", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"srchEntyProp1\",", "originalCommit": "62e619c9ca3104dca7215b7264e895adee8a2fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "29a949075af6111684504508f31beffeb5a7e370", "url": "https://github.com/marklogic/marklogic-data-hub/commit/29a949075af6111684504508f31beffeb5a7e370", "message": "DHFPROD-3581: Renaming properties to match ES naming conventions", "committedDate": "2020-02-27T17:57:34Z", "type": "commit"}, {"oid": "62d488df07e59842d1475605b4b35eda17510c8d", "url": "https://github.com/marklogic/marklogic-data-hub/commit/62d488df07e59842d1475605b4b35eda17510c8d", "message": "DHFPROD-3581: Renaming EntityModels for tests", "committedDate": "2020-02-27T18:51:16Z", "type": "commit"}, {"oid": "95a8728d693ad123c130b16b6a5749c886ea9844", "url": "https://github.com/marklogic/marklogic-data-hub/commit/95a8728d693ad123c130b16b6a5749c886ea9844", "message": "DHFPROD-3581: Fixing tests", "committedDate": "2020-02-27T21:37:10Z", "type": "commit"}]}