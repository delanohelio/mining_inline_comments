{"pr_number": 1713, "pr_title": "Allow basic authentication to authorize API access", "pr_createdAt": "2020-10-11T09:56:35Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1713", "timeline": [{"oid": "46b5c2b3c0bb014befc6792af98e033537c87e20", "url": "https://github.com/openhab/openhab-core/commit/46b5c2b3c0bb014befc6792af98e033537c87e20", "message": "Allow basic authentication to authorize API access\n\nCloses #1699.\n\nNote, this opens a minor security issue that allows an attacker\nto brute force passwords by making calls to the API - contrary to\nthe authorization page, the credentials parsing for the REST API\nis stateless & doesn't have a lock mechanism to lock user accounts\nafter too many failed login attempts.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-10-11T09:54:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEyMjkzNg==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r503122936", "bodyText": "A small suggestion here - it might be worth to use equalsIgnoreCase as some tools can send auth type lowercase.", "author": "splatch", "createdAt": "2020-10-12T08:26:37Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java", "diffHunk": "@@ -63,6 +71,25 @@ public void filter(ContainerRequestContext requestContext) throws IOException {\n                         Authentication auth = jwtHelper.verifyAndParseJwtAccessToken(authParts[1]);\n                         requestContext.setSecurityContext(new JwtSecurityContext(auth));\n                         return;\n+                    } else if (\"Basic\".equals(authParts[0])) {", "originalCommit": "46b5c2b3c0bb014befc6792af98e033537c87e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4Mjk4MQ==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r506982981", "bodyText": "@ghys This suggestion does not yet seem to be addressed.", "author": "kaikreuzer", "createdAt": "2020-10-17T20:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEyMjkzNg=="}], "type": "inlineReview"}, {"oid": "df00d2bc05ce33fecf7626f8e62e75e4ddf3dbf5", "url": "https://github.com/openhab/openhab-core/commit/df00d2bc05ce33fecf7626f8e62e75e4ddf3dbf5", "message": "Add configurable service/config description\n\nIntroduce a new AnonymousUserSecurityContext for unauthenticated\nusers that should be allowed the \"user\" role according to service\nconfiguration.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-10-16T21:27:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MzMyNQ==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r506983325", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\toption will require authentication for these operations. Warning: this will cause clients which don't\n          \n          \n            \n            \t\t\t\tsupport\n          \n          \n            \n            \t\t\t\tauthorization to break.</description>\n          \n          \n            \n            \t\t\t\toption will require authentication for these operations. Warning: This causes clients that do not\n          \n          \n            \n            \t\t\t\tsupport authentication to break.</description>", "author": "kaikreuzer", "createdAt": "2020-10-17T20:56:37Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/resources/OH-INF/config/config.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<config-description:config-descriptions\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n+\n+\t<config-description uri=\"system:restauth\">\n+\t\t<parameter name=\"allowBasicAuth\" type=\"boolean\" required=\"false\">\n+\t\t\t<label>Allow Basic Authentication</label>\n+\t\t\t<description>Allow the use of Basic authentication to access protected API resources.</description>\n+\t\t</parameter>\n+\t\t<parameter name=\"noUnauthenticatedUserRole\" type=\"boolean\" required=\"false\">\n+\t\t\t<advanced>true</advanced>\n+\t\t\t<label>Deny unauthenticated access to user operations</label>\n+\t\t\t<description>By default, operations requiring the \"user\" role are available when unauthenticated. Enabling this\n+\t\t\t\toption will require authentication for these operations. Warning: this will cause clients which don't\n+\t\t\t\tsupport\n+\t\t\t\tauthorization to break.</description>", "originalCommit": "df00d2bc05ce33fecf7626f8e62e75e4ddf3dbf5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MzQ3Mg==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r506983472", "bodyText": "Maybe add default=false here, just to make it clear what is used when not being set?", "author": "kaikreuzer", "createdAt": "2020-10-17T20:58:13Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/resources/OH-INF/config/config.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<config-description:config-descriptions\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n+\n+\t<config-description uri=\"system:restauth\">\n+\t\t<parameter name=\"allowBasicAuth\" type=\"boolean\" required=\"false\">\n+\t\t\t<label>Allow Basic Authentication</label>", "originalCommit": "df00d2bc05ce33fecf7626f8e62e75e4ddf3dbf5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MzQ4Mw==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r506983483", "bodyText": "Maybe add default=true here, just to make it clear what is used when not being set?", "author": "kaikreuzer", "createdAt": "2020-10-17T20:58:25Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/resources/OH-INF/config/config.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<config-description:config-descriptions\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n+\n+\t<config-description uri=\"system:restauth\">\n+\t\t<parameter name=\"allowBasicAuth\" type=\"boolean\" required=\"false\">\n+\t\t\t<label>Allow Basic Authentication</label>\n+\t\t\t<description>Allow the use of Basic authentication to access protected API resources.</description>\n+\t\t</parameter>\n+\t\t<parameter name=\"noUnauthenticatedUserRole\" type=\"boolean\" required=\"false\">\n+\t\t\t<advanced>true</advanced>", "originalCommit": "df00d2bc05ce33fecf7626f8e62e75e4ddf3dbf5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4Mzk3Ng==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r506983976", "bodyText": "Argh, I am really getting a knot in my brain here (German proverb) by this double negation. How about changing this parameter to something like \"enableAuthForUserResources\"?", "author": "kaikreuzer", "createdAt": "2020-10-17T21:04:09Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/AuthFilter.java", "diffHunk": "@@ -25,33 +27,72 @@\n import javax.ws.rs.core.SecurityContext;\n import javax.ws.rs.ext.Provider;\n \n+import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.auth.Authentication;\n+import org.openhab.core.auth.User;\n+import org.openhab.core.auth.UserRegistry;\n+import org.openhab.core.auth.UsernamePasswordCredentials;\n+import org.openhab.core.config.core.ConfigurableService;\n import org.openhab.core.io.rest.JSONResponse;\n import org.openhab.core.io.rest.RESTConstants;\n+import org.osgi.framework.Constants;\n+import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Modified;\n import org.osgi.service.component.annotations.Reference;\n import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsApplicationSelect;\n import org.osgi.service.jaxrs.whiteboard.propertytypes.JaxrsExtension;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n- * This filter is responsible for parsing a token provided with a request, and hydrating a {@link SecurityContext} from\n- * the claims contained in the token.\n+ * This filter is responsible for parsing credentials provided with a request, and hydrating a {@link SecurityContext}\n+ * from these credentials if they are valid.\n  *\n  * @author Yannick Schaus - initial contribution\n+ * @author Yannick Schaus - Allow basic authentication\n  */\n @PreMatching\n-@Component\n+@Component(configurationPid = \"org.openhab.restauth\", property = Constants.SERVICE_PID + \"=org.openhab.restauth\")\n+@ConfigurableService(category = \"system\", label = \"API Security\", description_uri = AuthFilter.CONFIG_URI)\n @JaxrsExtension\n @JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n @Priority(Priorities.AUTHENTICATION)\n @Provider\n public class AuthFilter implements ContainerRequestFilter {\n+    private final Logger logger = LoggerFactory.getLogger(AuthFilter.class);\n+\n     private static final String ALT_AUTH_HEADER = \"X-OPENHAB-TOKEN\";\n \n+    protected static final String CONFIG_URI = \"system:restauth\";\n+    private static final String CONFIG_ALLOW_BASIC_AUTH = \"allowBasicAuth\";\n+    private static final String CONFIG_NO_UNAUTHENTICATED_USER_ROLE = \"noUnauthenticatedUserRole\";\n+\n+    private boolean allowBasicAuth = false;\n+    private boolean noUnauthenticatedUserRole = false;\n+\n     @Reference\n     private JwtHelper jwtHelper;\n \n+    @Reference\n+    private UserRegistry userRegistry;\n+\n+    @Activate\n+    protected void activate(Map<String, Object> config) {\n+        modified(config);\n+    }\n+\n+    @Modified\n+    protected void modified(@Nullable Map<String, @Nullable Object> properties) {\n+        if (properties != null) {\n+            Object value = properties.get(CONFIG_ALLOW_BASIC_AUTH);\n+            allowBasicAuth = value != null && \"true\".equals(value.toString());\n+            value = properties.get(CONFIG_NO_UNAUTHENTICATED_USER_ROLE);\n+            noUnauthenticatedUserRole = value != null && \"true\".equals(value.toString());", "originalCommit": "df00d2bc05ce33fecf7626f8e62e75e4ddf3dbf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NDAwMg==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r507184002", "bodyText": "It was more to the tune of \"prevent unauthenticated requests from getting an implicit user role in the security context\", so I tried to rename it to \"noImplicitUserRole\" / \"No implicit user role for unauthenticated requests\", that's perhaps clearer. Still a double negation, so if you still disagree I'll change it to \"enableAuthForUserResources\" :)", "author": "ghys", "createdAt": "2020-10-18T16:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4Mzk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NDQ5MQ==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r507184491", "bodyText": "And if we change it to \"ImplicitUserRole\" and have default=true, knowing that on the long run our wish is to get the setting to OFF? It would be in line with the basic auth setting, i.e. enabling something means your system becomes less secure.", "author": "kaikreuzer", "createdAt": "2020-10-18T16:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4Mzk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NTg3OQ==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r507185879", "bodyText": "Good point, I insisted on having false as the default but that's not really a requirement.", "author": "ghys", "createdAt": "2020-10-18T16:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4Mzk3Ng=="}], "type": "inlineReview"}, {"oid": "c862a8ac1fe7a8d3d5e089545117c2b2ae6fa949", "url": "https://github.com/openhab/openhab-core/commit/c862a8ac1fe7a8d3d5e089545117c2b2ae6fa949", "message": "Rename config option, case insensitive scheme matching\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-10-18T16:29:42Z", "type": "commit"}, {"oid": "18818fe613955a1764cba9a4acec39bb8b2e5767", "url": "https://github.com/openhab/openhab-core/commit/18818fe613955a1764cba9a4acec39bb8b2e5767", "message": "Update bundles/org.openhab.core.io.rest.auth/src/main/resources/OH-INF/config/config.xml\r\n\r\nSigned-off-by: Yannick Schaus <github@schaus.net>\n\nCo-authored-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-10-18T16:30:57Z", "type": "commit"}, {"oid": "58f891027d6860f4f5beff1172fc74f703ad915f", "url": "https://github.com/openhab/openhab-core/commit/58f891027d6860f4f5beff1172fc74f703ad915f", "message": "Rename option to \"implicitUserRole\", enabled by default\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-10-18T17:12:21Z", "type": "commit"}, {"oid": "348677d2ccf7003d0c57fb9de760220f5dfd9c68", "url": "https://github.com/openhab/openhab-core/commit/348677d2ccf7003d0c57fb9de760220f5dfd9c68", "message": "Fix implicitUserRole value setting logic\n\nSigned-off-by: Yannick Schaus <github@schaus.net>", "committedDate": "2020-10-18T17:17:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5OTYyNA==", "url": "https://github.com/openhab/openhab-core/pull/1713#discussion_r507199624", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\toption will enforce authorization for these operations. Warning: this will cause clients which don't\n          \n          \n            \n            \t\t\t\tsupport\n          \n          \n            \n            \t\t\t\tauthorization to break.</description>\n          \n          \n            \n            \t\t\t\toption will enforce authorization for these operations. Warning: This causes clients that do not\n          \n          \n            \n            \t\t\t\tsupport authentication to break.</description>", "author": "kaikreuzer", "createdAt": "2020-10-18T18:58:52Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/resources/OH-INF/config/config.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<config-description:config-descriptions\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n+\n+\t<config-description uri=\"system:restauth\">\n+\t\t<parameter name=\"allowBasicAuth\" type=\"boolean\" required=\"false\">\n+\t\t\t<label>Allow Basic Authentication</label>\n+\t\t\t<default>false</default>\n+\t\t\t<description>Allow the use of Basic authentication to access protected API resources, in addition to access tokens\n+\t\t\t\tand API tokens.</description>\n+\t\t</parameter>\n+\t\t<parameter name=\"implicitUserRole\" type=\"boolean\" required=\"false\">\n+\t\t\t<advanced>true</advanced>\n+\t\t\t<label>Implicit user role for unauthenticated requests</label>\n+\t\t\t<default>true</default>\n+\t\t\t<description>By default, operations requiring the \"user\" role are available when unauthenticated. Disabling this\n+\t\t\t\toption will enforce authorization for these operations. Warning: this will cause clients which don't\n+\t\t\t\tsupport\n+\t\t\t\tauthorization to break.</description>", "originalCommit": "348677d2ccf7003d0c57fb9de760220f5dfd9c68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c9d04494645b41b45b09048d439c35c182f7fae", "url": "https://github.com/openhab/openhab-core/commit/0c9d04494645b41b45b09048d439c35c182f7fae", "message": "Update bundles/org.openhab.core.io.rest.auth/src/main/resources/OH-INF/config/config.xml", "committedDate": "2020-10-18T18:59:15Z", "type": "commit"}]}