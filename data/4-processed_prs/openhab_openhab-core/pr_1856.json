{"pr_number": 1856, "pr_title": "Prevent NPE on shutdown by making maps in DSLRuleProvider thread safe", "pr_createdAt": "2020-11-28T22:21:19Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1856", "timeline": [{"oid": "769f7c54d65004fa1a55eb58515f949f874031b3", "url": "https://github.com/openhab/openhab-core/commit/769f7c54d65004fa1a55eb58515f949f874031b3", "message": "Make maps thread safe\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-11-28T22:20:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwNDE4Ng==", "url": "https://github.com/openhab/openhab-core/pull/1856#discussion_r532204186", "bodyText": "@kaikreuzer does markers need to be thread safe as well?", "author": "robnielsen", "createdAt": "2020-11-29T12:40:11Z", "path": "bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java", "diffHunk": "@@ -88,9 +88,9 @@\n \n     private final Logger logger = LoggerFactory.getLogger(DSLRuleProvider.class);\n     private final Collection<ProviderChangeListener<Rule>> listeners = new ArrayList<>();\n-    private final Map<String, Rule> rules = new HashMap<>();\n-    private final Map<String, IEvaluationContext> contexts = new HashMap<>();\n-    private final Map<String, XExpression> xExpressions = new HashMap<>();\n+    private final Map<String, Rule> rules = new ConcurrentHashMap<>();\n+    private final Map<String, IEvaluationContext> contexts = new ConcurrentHashMap<>();\n+    private final Map<String, XExpression> xExpressions = new ConcurrentHashMap<>();\n     private int triggerId = 0;\n     private Set<String> markers = new HashSet<>();", "originalCommit": "769f7c54d65004fa1a55eb58515f949f874031b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxNjk2Nw==", "url": "https://github.com/openhab/openhab-core/pull/1856#discussion_r532216967", "bodyText": "No, afaik this method is called single threaded.", "author": "kaikreuzer", "createdAt": "2020-11-29T14:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwNDE4Ng=="}], "type": "inlineReview"}]}