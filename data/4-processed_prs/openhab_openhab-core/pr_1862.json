{"pr_number": 1862, "pr_title": "Disable AutoUpdateManager for GroupItems", "pr_createdAt": "2020-11-29T15:40:48Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1862", "timeline": [{"oid": "821647eb977f5088aca73e5c09006cebfe674045", "url": "https://github.com/openhab/openhab-core/commit/821647eb977f5088aca73e5c09006cebfe674045", "message": "Disable AutoUpdateManager for GroupItems\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-11-29T12:16:08Z", "type": "commit"}, {"oid": "4eadb074fc9d005b1d0e89150ac02e1900317e6b", "url": "https://github.com/openhab/openhab-core/commit/4eadb074fc9d005b1d0e89150ac02e1900317e6b", "message": "Clean up\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-11-29T15:39:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1MTk1Mg==", "url": "https://github.com/openhab/openhab-core/pull/1862#discussion_r532751952", "bodyText": "\ud83d\udc4d", "author": "cweitkamp", "createdAt": "2020-11-30T17:00:45Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/AutoUpdateManager.java", "diffHunk": "@@ -281,14 +289,19 @@ private boolean isAcceptedState(State newState, Item item) {\n             // Look for class hierarchy\n             for (Class<?> state : item.getAcceptedDataTypes()) {\n                 try {\n-                    if (!state.isEnum() && state.newInstance().getClass().isAssignableFrom(newState.getClass())) {\n+                    if (!state.isEnum() && state.getDeclaredConstructor().newInstance().getClass()", "originalCommit": "4eadb074fc9d005b1d0e89150ac02e1900317e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1MzAwOQ==", "url": "https://github.com/openhab/openhab-core/pull/1862#discussion_r532753009", "bodyText": "I guess we can shrink this block to be a one liner:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            } catch (InstantiationException e) {\n          \n          \n            \n                                logger.warn(\"InstantiationException on {}\", e.getMessage(), e); // Should never happen\n          \n          \n            \n                            } catch (IllegalAccessException e) {\n          \n          \n            \n                                logger.warn(\"IllegalAccessException on {}\", e.getMessage(), e); // Should never happen\n          \n          \n            \n                            } catch (NoSuchMethodException e) {\n          \n          \n            \n                                logger.warn(\"NoSuchMethodException on {}\", e.getMessage(), e); // Should never happen\n          \n          \n            \n                            } catch (InvocationTargetException e) {\n          \n          \n            \n                                logger.warn(\"InvocationTargetException on {}\", e.getMessage(), e); // Should never happen\n          \n          \n            \n                            } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n          \n          \n            \n                                logger.warn(\"Exception on {}\", e.getMessage(), e); // Should never happen", "author": "cweitkamp", "createdAt": "2020-11-30T17:02:13Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/AutoUpdateManager.java", "diffHunk": "@@ -281,14 +289,19 @@ private boolean isAcceptedState(State newState, Item item) {\n             // Look for class hierarchy\n             for (Class<?> state : item.getAcceptedDataTypes()) {\n                 try {\n-                    if (!state.isEnum() && state.newInstance().getClass().isAssignableFrom(newState.getClass())) {\n+                    if (!state.isEnum() && state.getDeclaredConstructor().newInstance().getClass()\n+                            .isAssignableFrom(newState.getClass())) {\n                         isAccepted = true;\n                         break;\n                     }\n                 } catch (InstantiationException e) {\n                     logger.warn(\"InstantiationException on {}\", e.getMessage(), e); // Should never happen\n                 } catch (IllegalAccessException e) {\n                     logger.warn(\"IllegalAccessException on {}\", e.getMessage(), e); // Should never happen\n+                } catch (NoSuchMethodException e) {\n+                    logger.warn(\"NoSuchMethodException on {}\", e.getMessage(), e); // Should never happen\n+                } catch (InvocationTargetException e) {\n+                    logger.warn(\"InvocationTargetException on {}\", e.getMessage(), e); // Should never happen", "originalCommit": "4eadb074fc9d005b1d0e89150ac02e1900317e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "853719ed7330eea0ef5d03b42cf6956b26811bda", "url": "https://github.com/openhab/openhab-core/commit/853719ed7330eea0ef5d03b42cf6956b26811bda", "message": "apply feedback\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-12-02T08:29:52Z", "type": "commit"}, {"oid": "853719ed7330eea0ef5d03b42cf6956b26811bda", "url": "https://github.com/openhab/openhab-core/commit/853719ed7330eea0ef5d03b42cf6956b26811bda", "message": "apply feedback\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-12-02T08:29:52Z", "type": "forcePushed"}]}