{"pr_number": 1411, "pr_title": "Added nullness annotations to 'ScriptExtensionProvider'", "pr_createdAt": "2020-04-06T10:58:46Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1411", "timeline": [{"oid": "35bcf8ac2fea08e2a7af4580dbf0b67c78740b8f", "url": "https://github.com/openhab/openhab-core/commit/35bcf8ac2fea08e2a7af4580dbf0b67c78740b8f", "message": "Added nullness annotations to ScriptExtensionProvider\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-06T10:42:11Z", "type": "commit"}, {"oid": "e31d8b2ddf25fd3b06cbe0e72150dcb2f87f730b", "url": "https://github.com/openhab/openhab-core/commit/e31d8b2ddf25fd3b06cbe0e72150dcb2f87f730b", "message": "Added nullness annotations to ScriptExtensionProvider\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-06T10:58:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwNDMyMQ==", "url": "https://github.com/openhab/openhab-core/pull/1411#discussion_r404004321", "bodyText": "I am not sure if this is a valid change but as all existing implementations do not take care about throwing IAEs I changed it ...", "author": "cweitkamp", "createdAt": "2020-04-06T11:00:03Z", "path": "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptExtensionProvider.java", "diffHunk": "@@ -15,46 +15,51 @@\n import java.util.Collection;\n import java.util.Map;\n \n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n /**\n  * A {@link ScriptExtensionProvider} can provide variable and types on ScriptEngine instance basis.\n  *\n  * @author Simon Merschjohann - Initial contribution\n  */\n+@NonNullByDefault\n public interface ScriptExtensionProvider {\n \n     /**\n      * These presets will always get injected into the ScriptEngine on instance creation.\n      *\n      * @return collection of presets\n      */\n-    public Collection<String> getDefaultPresets();\n+    Collection<String> getDefaultPresets();\n \n     /**\n      * Returns the provided Presets which are supported by this ScriptExtensionProvider.\n      * Presets define imports which will be injected into the ScriptEngine if called by \"importPreset\".\n      *\n      * @return provided presets\n      */\n-    public Collection<String> getPresets();\n+    Collection<String> getPresets();\n \n     /**\n      * Returns the supported types which can be received by the given ScriptExtensionProvider\n      *\n      * @return provided types\n      */\n-    public Collection<String> getTypes();\n+    Collection<String> getTypes();\n \n     /**\n      * This method should return an Object of the given type. Note: get can be called multiple times in the scripts use\n      * caching where appropriate.\n      *\n      * @param scriptIdentifier the identifier of the script that requests the given type\n      * @param type the type that is requested (must be part of the collection returned by the {@code #getTypes()} method\n-     * @return the requested type (non-null)\n+     * @return the requested type or null", "originalCommit": "e31d8b2ddf25fd3b06cbe0e72150dcb2f87f730b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMTU3Mw==", "url": "https://github.com/openhab/openhab-core/pull/1411#discussion_r404331573", "bodyText": "The changes makes sense to me.", "author": "wborn", "createdAt": "2020-04-06T19:22:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwNDMyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyODc5Mg==", "url": "https://github.com/openhab/openhab-core/pull/1411#discussion_r404328792", "bodyText": "They seem to be mandatory so I think constructor injection would make sense.", "author": "wborn", "createdAt": "2020-04-06T19:17:00Z", "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/RuleSupportScriptExtension.java", "diffHunk": "@@ -57,58 +59,61 @@\n  * @author Simon Merschjohann - Initial contribution\n  */\n @Component(immediate = true)\n+@NonNullByDefault\n public class RuleSupportScriptExtension implements ScriptExtensionProvider {\n+\n     private static final String RULE_SUPPORT = \"RuleSupport\";\n     private static final String RULE_REGISTRY = \"ruleRegistry\";\n     private static final String AUTOMATION_MANAGER = \"automationManager\";\n \n-    private static Map<String, Collection<String>> presets = new HashMap<>();\n-    private static Map<String, Object> staticTypes = new HashMap<>();\n-    private static Set<String> types = new HashSet<>();\n+    private static final Map<String, Collection<String>> PRESETS = new HashMap<>();\n+    private static final Map<String, Object> STATIC_TYPES = new HashMap<>();\n+    private static final Set<String> TYPES = new HashSet<>();\n+\n     private final Map<String, Map<String, Object>> objectCache = new ConcurrentHashMap<>();\n \n-    private RuleRegistry ruleRegistry;\n-    private ScriptedRuleProvider ruleProvider;\n-    private ScriptedCustomModuleHandlerFactory scriptedCustomModuleHandlerFactory;\n-    private ScriptedCustomModuleTypeProvider scriptedCustomModuleTypeProvider;\n-    private ScriptedPrivateModuleHandlerFactory scriptedPrivateModuleHandlerFactory;\n+    private @NonNullByDefault({}) RuleRegistry ruleRegistry;\n+    private @NonNullByDefault({}) ScriptedRuleProvider ruleProvider;\n+    private @NonNullByDefault({}) ScriptedCustomModuleHandlerFactory scriptedCustomModuleHandlerFactory;\n+    private @NonNullByDefault({}) ScriptedCustomModuleTypeProvider scriptedCustomModuleTypeProvider;\n+    private @NonNullByDefault({}) ScriptedPrivateModuleHandlerFactory scriptedPrivateModuleHandlerFactory;", "originalCommit": "e31d8b2ddf25fd3b06cbe0e72150dcb2f87f730b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU0OTQyOA==", "url": "https://github.com/openhab/openhab-core/pull/1411#discussion_r404549428", "bodyText": "Done.", "author": "cweitkamp", "createdAt": "2020-04-07T05:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyODc5Mg=="}], "type": "inlineReview"}, {"oid": "2eadf235deb5abba4758105908a266544ea85a9f", "url": "https://github.com/openhab/openhab-core/commit/2eadf235deb5abba4758105908a266544ea85a9f", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-07T05:19:19Z", "type": "commit"}]}