{"pr_number": 22833, "pr_title": "Update grammar of simple-const-expr according to 2020R1 specification", "pr_createdAt": "2020-04-22T08:32:06Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833", "timeline": [{"oid": "b3161b6ce00ad8bdec79eceb0eec2bb009ef3017", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3161b6ce00ad8bdec79eceb0eec2bb009ef3017", "message": "Update grammar of simple-const-expr", "committedDate": "2020-04-22T08:07:51Z", "type": "commit"}, {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80be3d975f2f043f4d165078494327eee8a2cc80", "message": "Add unit tests", "committedDate": "2020-04-22T08:07:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r412933990", "bodyText": "We usually try to do the testing on ballerina itself. And panic if not the intended result of the test.", "author": "dulvinw", "createdAt": "2020-04-22T12:23:27Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,21 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+    @Test()\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BInteger);\n+        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n+    }\n+    @Test()\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BFloat);\n+        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n+    }\n+", "originalCommit": "80be3d975f2f043f4d165078494327eee8a2cc80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMDUyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413100529", "bodyText": "+1", "author": "dulajdilshan", "createdAt": "2020-04-22T15:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5MTQ3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414091476", "bodyText": "Done", "author": "chiranSachintha", "createdAt": "2020-04-23T20:11:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA=="}], "type": "inlineReview"}, {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "message": "Fix review suggestions", "committedDate": "2020-04-22T20:07:55Z", "type": "commit"}, {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "message": "Fix review suggestions", "committedDate": "2020-04-22T20:07:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNzk4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413507988", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                :   (ADD|SUB)? integerLiteral\n          \n          \n            \n                :   (ADD | SUB)? integerLiteral", "author": "MaryamZi", "createdAt": "2020-04-23T04:54:47Z", "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -941,8 +941,8 @@ formalParameterList\n     ;\n \n simpleLiteral\n-    :   SUB? integerLiteral\n-    |   SUB? floatingPointLiteral\n+    :   (ADD|SUB)? integerLiteral", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODA0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508045", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                |   (ADD|SUB)? floatingPointLiteral\n          \n          \n            \n                |   (ADD | SUB)? floatingPointLiteral", "author": "MaryamZi", "createdAt": "2020-04-23T04:54:59Z", "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -941,8 +941,8 @@ formalParameterList\n     ;\n \n simpleLiteral\n-    :   SUB? integerLiteral\n-    |   SUB? floatingPointLiteral\n+    :   (ADD|SUB)? integerLiteral\n+    |   (ADD|SUB)? floatingPointLiteral", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODIyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508228", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:55:34Z", "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODMzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508339", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:55:58Z", "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODYxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508614", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:56:42Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODcwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508702", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "author": "MaryamZi", "createdAt": "2020-04-23T04:56:57Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTYwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413509604", "bodyText": "Shall we use different names for these types, for the new tests we are introducing? At least upper-case single letters?\nThe lower-case names kinda make them look like variable names.", "author": "MaryamZi", "createdAt": "2020-04-23T04:59:40Z", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3NDgwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414074800", "bodyText": "Fixed", "author": "chiranSachintha", "createdAt": "2020-04-23T19:43:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTY3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413509673", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (n != 5){\n          \n          \n            \n                if (n != 5) {", "author": "MaryamZi", "createdAt": "2020-04-23T04:59:57Z", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMDk0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413510947", "bodyText": "Best practices for errors\n\nas the error reason use meaningful simple strings with no spaces\nas the message field give additional details about what caused the error\n\nSee \n  \n    \n      ballerina-lang/tests/jballerina-bstring-unit-test/src/test/resources/test-src/expressions/listconstructor/list_constructor_infer_type.bal\n    \n    \n         Line 64\n      in\n      7fa2ee5\n    \n    \n    \n    \n\n        \n          \n           panic error(ASSERTION_ERROR_REASON, \n        \n    \n  \n\n for an example.", "author": "MaryamZi", "createdAt": "2020-04-23T05:03:40Z", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3NDU1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414074559", "bodyText": "Fixed", "author": "chiranSachintha", "createdAt": "2020-04-23T19:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMDk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMTAxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413511015", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (n != 1.5){\n          \n          \n            \n                if (n != 1.5) {", "author": "MaryamZi", "createdAt": "2020-04-23T05:03:54Z", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");\n+    }\n+}\n+\n+type f +1.2|+1.5;\n+\n+function testFiniteTypesWithPositiveFloats() {\n+    f n = +1.2;\n+    f comparator = +1.2;\n+    if (n == comparator) {\n+       n = +1.5;\n+    }\n+    if (n != 1.5){", "originalCommit": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "578c324fe775986125b42455243dcb706a306715", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/578c324fe775986125b42455243dcb706a306715", "message": "Fix review suggestions", "committedDate": "2020-04-23T19:53:49Z", "type": "commit"}, {"oid": "578c324fe775986125b42455243dcb706a306715", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/578c324fe775986125b42455243dcb706a306715", "message": "Fix review suggestions", "committedDate": "2020-04-23T19:53:49Z", "type": "forcePushed"}]}