{"pr_number": 23900, "pr_title": "Migrate stdlib modules to new table syntax", "pr_createdAt": "2020-06-10T19:40:22Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMTU2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438611565", "bodyText": "Why this test case is commented out?", "author": "daneshk", "createdAt": "2020-06-11T08:02:21Z", "path": "stdlib/http/src/test/resources/test-src/services/nativeimpl/cookie/cookie-native-function-negative.bal", "diffHunk": "@@ -248,7 +248,6 @@ function testAddPersistentCookieWithoutPersistentStore() returns @tainted http:C\n     }\n     return cookies;\n }\n-\n //TODO Table remove - Fix\n //function testRemovePersistentCookieFromCookieStore_1() returns @tainted http:Cookie[] {", "originalCommit": "e73e3a10a2a163be74dca8873643214010549606", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDM5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438740397", "bodyText": "This test case checked the error message when removing a non-existing cookie. However, with the new table syntax, it panics if we try to remove an entry from the table if the key does not exist hence the test case failed. Updated in 9a986a0 to assert the runtime exception.", "author": "MadhukaHarith92", "createdAt": "2020-06-11T12:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMTU2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMTg1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438611850", "bodyText": "Why TODO? Can we remove it", "author": "daneshk", "createdAt": "2020-06-11T08:02:56Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -157,6 +157,7 @@ public void testAddPersistentCookieWithoutPersistentStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n+    //TODO Table remove - Fix", "originalCommit": "e73e3a10a2a163be74dca8873643214010549606", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczOTIwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438739200", "bodyText": "Updated in 9a986a0", "author": "MadhukaHarith92", "createdAt": "2020-06-11T12:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMTg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNDIxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438624219", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public function getTable(typedesc<record {}> structType, public string[] tableKey = [])\n          \n          \n            \n                public function getTable(typedesc<record {}> structType, public string[] fieldNames = [])", "author": "daneshk", "createdAt": "2020-06-11T08:26:25Z", "path": "stdlib/io/src/main/ballerina/src/io/readable_csv_channel.bal", "diffHunk": "@@ -94,21 +96,23 @@ public type ReadableCSVChannel object {\n         return ();\n     }\n \n-//TODO Table remove - Fix\n-//# Returns a table, which corresponds to the CSV records.\n-//# ```ballerina\n-//# var tblResult = readableCSVChannel.getTable(Employee);\n-//# ```\n-//#\n-//# + structType - The object in which the CSV records should be deserialized\n-//# + return - Table, which represents the CSV records or else an `io:Error`\n-    //public function getTable(typedesc<record {}> structType) returns @tainted table<record {}>|Error {\n-    //    return getTableExtern(self, structType);\n-    //}\n+# Returns a table, which corresponds to the CSV records.\n+# ```ballerina\n+# var tblResult1 = readableCSVChannel.getTable(Employee);\n+# var tblResult2 = readableCSVChannel.getTable(Employee, [\"id\", \"name\"]);\n+# ```\n+#\n+# + structType - The object in which the CSV records should be deserialized\n+# + tableKey - The key of the table\n+# + return - Table, which represents the CSV records or else an `io:Error`\n+    public function getTable(typedesc<record {}> structType, public string[] tableKey = [])", "originalCommit": "e73e3a10a2a163be74dca8873643214010549606", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNDY4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438624684", "bodyText": "Shall we name it as fieldNames?", "author": "daneshk", "createdAt": "2020-06-11T08:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNDIxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNTM5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438625392", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + tableKey - The key of the table\n          \n          \n            \n            # + fieldNames - The names of the fields used as the (composite)key of the table.", "author": "daneshk", "createdAt": "2020-06-11T08:28:39Z", "path": "stdlib/io/src/main/ballerina/src/io/readable_csv_channel.bal", "diffHunk": "@@ -94,21 +96,23 @@ public type ReadableCSVChannel object {\n         return ();\n     }\n \n-//TODO Table remove - Fix\n-//# Returns a table, which corresponds to the CSV records.\n-//# ```ballerina\n-//# var tblResult = readableCSVChannel.getTable(Employee);\n-//# ```\n-//#\n-//# + structType - The object in which the CSV records should be deserialized\n-//# + return - Table, which represents the CSV records or else an `io:Error`\n-    //public function getTable(typedesc<record {}> structType) returns @tainted table<record {}>|Error {\n-    //    return getTableExtern(self, structType);\n-    //}\n+# Returns a table, which corresponds to the CSV records.\n+# ```ballerina\n+# var tblResult1 = readableCSVChannel.getTable(Employee);\n+# var tblResult2 = readableCSVChannel.getTable(Employee, [\"id\", \"name\"]);\n+# ```\n+#\n+# + structType - The object in which the CSV records should be deserialized\n+# + tableKey - The key of the table", "originalCommit": "e73e3a10a2a163be74dca8873643214010549606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0NDIwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438644209", "bodyText": "Why are we changing these test cases?", "author": "daneshk", "createdAt": "2020-06-11T09:01:27Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/string/bstring-table-test.bal", "diffHunk": "@@ -20,14 +20,11 @@ type Employee record {\n     float salary;\n };\n function testTableGeneration() returns int {\n-   table<Employee> tbEmployee = table {\n-           {key id, name, salary},\n-           [\n-               {1, \"Mary\ud83e\udd12\", 300.5},\n-               {2, \"John\ud83d\udc89\", 200.5},\n-               {3, \"Jim\", 330.5}\n-           ]\n-       };\n+   table<Employee> tbEmployee = table [\n+               {id: 1, name: \"Mary\", salary: 300.5},\n+               {id: 2, name: \"John\", salary: 200.5},\n+               {id: 3, name: \"Jim\", salary: 330.5}", "originalCommit": "e73e3a10a2a163be74dca8873643214010549606", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMTU4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438701581", "bodyText": "Test cases are the same. Syntax of initializing the table got changed.", "author": "MadhukaHarith92", "createdAt": "2020-06-11T10:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0NDIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxOTQyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r439219424", "bodyText": "\"\ud83e\udd12\", \"\ud83d\udc89\" are missing in the updated one", "author": "daneshk", "createdAt": "2020-06-12T05:49:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0NDIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIyMzkyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r439223927", "bodyText": "Didn't know they were intentionally added hence removed. Added back in 70e13a6 .", "author": "MadhukaHarith92", "createdAt": "2020-06-12T06:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0NDIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NDIwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r439154209", "bodyText": "Do we need to log this error here? As we are returning the error, anyway user will have to handle that.", "author": "Bhashinee", "createdAt": "2020-06-12T01:04:55Z", "path": "stdlib/io/src/main/java/org/ballerinalang/stdlib/io/nativeimpl/GetTable.java", "diffHunk": "@@ -35,69 +58,107 @@\n     private GetTable() {\n     }\n \n-    //TODO Table remove - Fix\n+    public static Object getTable(ObjectValue csvChannel, TypedescValue typedescValue, ArrayValue key) {\n+        try {\n+            final ObjectValue delimitedObj =\n+                    (ObjectValue) csvChannel.get(StringUtils.fromString(CSV_CHANNEL_DELIMITED_STRUCT_FIELD));\n+            DelimitedRecordChannel delimitedChannel = (DelimitedRecordChannel) delimitedObj\n+                    .getNativeData(IOConstants.TXT_RECORD_CHANNEL_NAME);\n+            if (delimitedChannel.hasReachedEnd()) {\n+                return IOUtils.createEoFError();\n+            }\n+            List<String[]> records = new ArrayList<>();\n+            while (delimitedChannel.hasNext()) {\n+                records.add(delimitedChannel.read());\n+            }\n+            return getTable(typedescValue, key, records);\n+        } catch (BallerinaIOException | BallerinaException e) {\n+            String msg = \"failed to process the delimited file: \" + e.getMessage();\n+            log.error(msg, e);", "originalCommit": "2f22aa2b56171e77d8490d6366e9f14276d4dfb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5MDAwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r439190004", "bodyText": "Updated in 4312c4f", "author": "MadhukaHarith92", "createdAt": "2020-06-12T03:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NDIwOQ=="}], "type": "inlineReview"}, {"oid": "cc22d67d16aaa7d24f842266bfc56bc93f711255", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc22d67d16aaa7d24f842266bfc56bc93f711255", "message": "Update io:csv with new table syntax", "committedDate": "2020-06-12T16:06:09Z", "type": "commit"}, {"oid": "809783c423d2ef71606849761db7879be58e565b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/809783c423d2ef71606849761db7879be58e565b", "message": "Update http:cookie with new table syntax", "committedDate": "2020-06-12T16:06:09Z", "type": "commit"}, {"oid": "9eb0f52b13170a97356c4ac8d6871896d8084e72", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9eb0f52b13170a97356c4ac8d6871896d8084e72", "message": "Enable io:csv test cases", "committedDate": "2020-06-12T16:06:09Z", "type": "commit"}, {"oid": "fedd4302446d6bc8051ac052527cad471902215b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fedd4302446d6bc8051ac052527cad471902215b", "message": "Fix review changes", "committedDate": "2020-06-12T16:06:10Z", "type": "commit"}]}