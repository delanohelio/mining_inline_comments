{"pr_number": 22841, "pr_title": "Refactor the type of the fields var in compile-time BRecordType", "pr_createdAt": "2020-04-22T19:54:24Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4MTgzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r416981834", "bodyText": "Wondering if we should iterate through the entries and you the name at L586. Applicable in several places here and in JvmValueGen.java.", "author": "MaryamZi", "createdAt": "2020-04-28T23:21:30Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmTypeGen.java", "diffHunk": "@@ -571,13 +572,13 @@ private static void createRecordType(MethodVisitor mv, BRecordType recordType, B\n      * @param mv     method visitor\n      * @param fields record fields to be added\n      */\n-    private static void addRecordFields(MethodVisitor mv, @Nilable List<BField> fields) {\n+    private static void addRecordFields(MethodVisitor mv, @Nilable Map<String, BField> fields) {\n         // Create the fields map\n         mv.visitTypeInsn(NEW, LINKED_HASH_MAP);\n         mv.visitInsn(DUP);\n         mv.visitMethodInsn(INVOKESPECIAL, LINKED_HASH_MAP, \"<init>\", \"()V\", false);\n \n-        for (BField optionalField : fields) {\n+        for (BField optionalField : fields.values()) {", "originalCommit": "6489eec7dbf8c580fa57810dd1291682feff59ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDY2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r419140665", "bodyText": "Used values() since the value contains all the info we need + if iterating through the entry set, will have to refer to the field as .value() each time", "author": "pubudu91", "createdAt": "2020-05-03T18:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4MTgzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4Mjc5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r416982795", "bodyText": "Can't we use fieldNameStr?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            fields.put(fieldName.value, new BField(fieldName, bindingPatternVariable.pos, fieldSymbol));\n          \n          \n            \n                            fields.put(fieldNameStr, new BField(fieldName, bindingPatternVariable.pos, fieldSymbol));", "author": "MaryamZi", "createdAt": "2020-04-28T23:24:02Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -5487,7 +5488,7 @@ private BType getStructuredBindingPatternType(BLangVariable bindingPatternVariab\n                         env.enclPkg.symbol.pkgID, fieldType, recordSymbol);\n \n                 //TODO check below field position\n-                fields.add(new BField(fieldName, bindingPatternVariable.pos, fieldSymbol));\n+                fields.put(fieldName.value, new BField(fieldName, bindingPatternVariable.pos, fieldSymbol));", "originalCommit": "6489eec7dbf8c580fa57810dd1291682feff59ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDE5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r419140195", "bodyText": "Can, but doesn't make much of a difference right? Used fieldName.value since fieldName is what is used when creating the field.", "author": "pubudu91", "createdAt": "2020-05-03T18:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4Mjc5NQ=="}], "type": "inlineReview"}, {"oid": "5ab55a48bbb75682fd63dc608326126b8e4e8448", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ab55a48bbb75682fd63dc608326126b8e4e8448", "message": "Fix checkstyle issues and test failures", "committedDate": "2020-05-03T18:19:02Z", "type": "forcePushed"}, {"oid": "46a12e9465cc83a81b746ba7f8d3f69c385805b6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46a12e9465cc83a81b746ba7f8d3f69c385805b6", "message": "Fix table member type inferring logic", "committedDate": "2020-05-05T12:10:02Z", "type": "forcePushed"}, {"oid": "65eb40dd2780a49be2d022240f17cbb978873071", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65eb40dd2780a49be2d022240f17cbb978873071", "message": "Fix table member type inferring logic", "committedDate": "2020-05-06T09:40:33Z", "type": "forcePushed"}, {"oid": "24e27696483e0e3c7dd71aa3b02bdc277e241488", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24e27696483e0e3c7dd71aa3b02bdc277e241488", "message": "Fix table member type inferring logic", "committedDate": "2020-05-11T07:17:00Z", "type": "forcePushed"}, {"oid": "1654495a58c33c6baae7c7467e2a80fb78d7a0f7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1654495a58c33c6baae7c7467e2a80fb78d7a0f7", "message": "Fix table member type inferring logic", "committedDate": "2020-05-13T05:21:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMzg5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424203893", "bodyText": "Formatting issue?", "author": "MaryamZi", "createdAt": "2020-05-13T06:38:24Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmValueGen.java", "diffHunk": "@@ -317,20 +317,20 @@ private void createLambdas(ClassWriter cw, LambdaMetadata lambdaGenMetadata) {\n         }\n     }\n \n-    private void createObjectFields(ClassWriter cw, List<BField> fields) {\n+        private void createObjectFields(ClassWriter cw, Map<String, BField> fields) {", "originalCommit": "1654495a58c33c6baae7c7467e2a80fb78d7a0f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNDM0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424204342", "bodyText": "Seems to be the case with multiple changes in this class.", "author": "MaryamZi", "createdAt": "2020-05-13T06:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMzg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NTg0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424485843", "bodyText": "Ah damn.. There were a lot of formatting changes when resolving a conflict. I think these were introduced when resolving them.", "author": "pubudu91", "createdAt": "2020-05-13T14:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMzg5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTMxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424205311", "bodyText": "The previous constants can be removed now right? Unused?", "author": "MaryamZi", "createdAt": "2020-05-13T06:41:43Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "diffHunk": "@@ -321,7 +321,7 @@ private void addAssignmentAndForEach(BLangFunction resourceNode, BLangSimpleVari\n         filterContextName.type = symTable.stringType;\n         filterContextName.pos = resourceNode.pos;\n \n-        BField filterContextVal = ((BObjectType) endpointVar.type).fields.get(FILTER_CONTEXT_FIELD_INDEX);", "originalCommit": "1654495a58c33c6baae7c7467e2a80fb78d7a0f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNjMzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424206339", "bodyText": "Can we fix this in this PR itself?", "author": "MaryamZi", "createdAt": "2020-05-13T06:44:23Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -1823,13 +1822,15 @@ private void checkRecordVarRefEquivalency(DiagnosticPos pos, BLangRecordVarRef l\n         BRecordType rhsRecordType = (BRecordType) rhsType;\n \n         // check if all fields in record var ref are found in rhs record type\n-        lhsVarRef.recordRefFields.stream()\n-                .filter(lhsField -> rhsRecordType.fields.stream()\n-                        .noneMatch(rhsField -> lhsField.variableName.value.equals(rhsField.name.toString())))\n-                .forEach(lhsField -> dlog.error(pos, DiagnosticCode.INVALID_FIELD_IN_RECORD_BINDING_PATTERN,\n-                        lhsField.variableName.value, rhsType));\n+        for (BLangRecordVarRefKeyValue lhsField : lhsVarRef.recordRefFields) {\n+            if (!rhsRecordType.fields.containsKey(lhsField.variableName.value)) {\n+                dlog.error(pos, DiagnosticCode.INVALID_FIELD_IN_RECORD_BINDING_PATTERN,\n+                           lhsField.variableName.value, rhsType);\n+            }\n+        }\n \n-        for (BField rhsField : rhsRecordType.fields) {\n+        for (BField rhsField : rhsRecordType.fields.values()) {\n+            // TOOD 22/04/2020: Refactor this. No need to do this in each iteration.", "originalCommit": "1654495a58c33c6baae7c7467e2a80fb78d7a0f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUxMzY2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424513665", "bodyText": "It looks like this is necessary. For example,\ntype Person record {\n    string name;\n    int age;\n    string country;\n};\n\n\npublic function main() {    \n    string firstName;\n    int personAge;\n    int personAge2;\n    map<anydata|error> otherDetails = {};\n\n    {name: firstName, age: personAge, age: personAge2, ...otherDetails} = getPerson();\n}\n\nfunction getPerson() returns Person {\n    Person person = {\n        name: \"Peter\",\n        age: 28,\n        country: \"Sri Lanka\",\n        \"occupation\": \"Software Engineer\"\n    };\n    return person;\n}\nI can't recall the reason for this comment, maybe I misread the code \ud83d\ude05  Will remove the comment", "author": "pubudu91", "createdAt": "2020-05-13T15:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNjMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwODA2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22841#discussion_r424208066", "bodyText": "Here and in the next change can't we just do\n            allFieldSet.addAll(((BRecordType) memType).fields.values());", "author": "MaryamZi", "createdAt": "2020-05-13T06:48:36Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -834,13 +838,13 @@ private BType inferTableMemberType(List<BType> memTypes, BLangTableConstructorEx\n         BLangTableKeySpecifier keySpecifier = tableConstructorExpr.tableKeySpecifier;\n         Set<BField> allFieldSet = new LinkedHashSet<>();\n         for (BType memType : memTypes) {\n-            List<BField> fields = ((BRecordType) memType).fields;\n+            Collection<BField> fields = ((BRecordType) memType).fields.values();\n             allFieldSet.addAll(fields);", "originalCommit": "1654495a58c33c6baae7c7467e2a80fb78d7a0f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "704fc41f421cc3c88dd6e3909ee33f0119cbbd2d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/704fc41f421cc3c88dd6e3909ee33f0119cbbd2d", "message": "Address the review comments", "committedDate": "2020-05-13T17:05:49Z", "type": "forcePushed"}, {"oid": "3fa6837be66c5941f0795634840ee2157192da84", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3fa6837be66c5941f0795634840ee2157192da84", "message": "Refactor the type of fields in record/object type to a map", "committedDate": "2020-05-13T18:58:14Z", "type": "commit"}, {"oid": "77bc0c259add9325bc0d2b90ad938efe8d92641b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77bc0c259add9325bc0d2b90ad938efe8d92641b", "message": "Fix broken record fields usages in tooling and std lib", "committedDate": "2020-05-13T18:58:18Z", "type": "commit"}, {"oid": "7f371ee4eee153a734701498add7b6317a1f4eb8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f371ee4eee153a734701498add7b6317a1f4eb8", "message": "Fix checkstyle issues and test failures", "committedDate": "2020-05-13T18:58:18Z", "type": "commit"}, {"oid": "0cdc8d3640af01baa0bcc4ba20e2abd918e35290", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0cdc8d3640af01baa0bcc4ba20e2abd918e35290", "message": "Fix compile error in Types", "committedDate": "2020-05-13T18:58:18Z", "type": "commit"}, {"oid": "2a6792f7d1b3287eae013ba5001fd77f9c27b913", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a6792f7d1b3287eae013ba5001fd77f9c27b913", "message": "Fix table member type inferring logic", "committedDate": "2020-05-13T18:58:19Z", "type": "commit"}, {"oid": "aece1718666688635685b4c6a7d7ade4eaf4f29c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aece1718666688635685b4c6a7d7ade4eaf4f29c", "message": "Fix formatting issues", "committedDate": "2020-05-13T18:58:19Z", "type": "commit"}, {"oid": "f11a1543ac96eed41a8b12e48e86422dc82f92e5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f11a1543ac96eed41a8b12e48e86422dc82f92e5", "message": "Address the review comments", "committedDate": "2020-05-13T18:58:20Z", "type": "commit"}, {"oid": "5331faffb4f9ab45c66a6a224213370369f7c04e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5331faffb4f9ab45c66a6a224213370369f7c04e", "message": "Fix compile errors due to conflicts", "committedDate": "2020-05-13T19:22:24Z", "type": "commit"}, {"oid": "819a1dca9adc2a6fd6013dba4fa8d66da117ac3c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/819a1dca9adc2a6fd6013dba4fa8d66da117ac3c", "message": "Disable node transformer tests", "committedDate": "2020-05-13T19:25:14Z", "type": "commit"}, {"oid": "819a1dca9adc2a6fd6013dba4fa8d66da117ac3c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/819a1dca9adc2a6fd6013dba4fa8d66da117ac3c", "message": "Disable node transformer tests", "committedDate": "2020-05-13T19:25:14Z", "type": "forcePushed"}, {"oid": "d5008f94fee4e5380c609b6a8b316fe700d0ba87", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5008f94fee4e5380c609b6a8b316fe700d0ba87", "message": "Fix checkstyle issues", "committedDate": "2020-05-13T19:29:27Z", "type": "commit"}]}