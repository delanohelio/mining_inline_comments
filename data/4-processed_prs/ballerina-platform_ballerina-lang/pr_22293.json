{"pr_number": 22293, "pr_title": "Add missing descriptions in JDBC API Docs(1.2.x)", "pr_createdAt": "2020-03-29T19:15:57Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293", "timeline": [{"oid": "629e23f6c4e622b13e24b5992cb9744c69244d41", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/629e23f6c4e622b13e24b5992cb9744c69244d41", "message": "Add missing descriptions in JDBC API Docs", "committedDate": "2020-03-29T19:14:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjQ3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922470", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # c - Client configuration for JDBC client\n          \n          \n            \n                # c - Client configuration for the JDBC client", "author": "praneesha", "createdAt": "2020-03-30T04:35:46Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -27,6 +27,8 @@ public type Client client object {\n     private boolean clientActive = true;\n \n     # Gets called when the JDBC client is instantiated.\n+    #\n+    # c - Client configuration for JDBC client", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjU2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922565", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Identifies the error originating from application-level causes.\n          \n          \n            \n            # Identifies the errors originating from application-level causes.", "author": "praneesha", "createdAt": "2020-03-30T04:36:23Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/error.bal", "diffHunk": "@@ -60,6 +62,7 @@ public type ApplicationErrorData record {|\n @deprecated\n public type DatabaseError error<DATABASE_ERROR_REASON, DatabaseErrorData>;\n \n+# Identifies the error originating from application-level causes.", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjU5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922598", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Small, variable-length character string\n          \n          \n            \n            # Small variable-length character string", "author": "praneesha", "createdAt": "2020-03-30T04:36:35Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjYyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922629", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Small, fixed-length character string\n          \n          \n            \n            # Small fixed-length character string", "author": "praneesha", "createdAt": "2020-03-30T04:36:43Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjY3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922670", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Large, variable-length character string\n          \n          \n            \n            # Large variable-length character string", "author": "praneesha", "createdAt": "2020-03-30T04:36:50Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjY4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922686", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Small, fixed-length character string with unicode support\n          \n          \n            \n            # Small fixed-length character string with Unicode support", "author": "praneesha", "createdAt": "2020-03-30T04:36:57Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjcwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922703", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Large, variable-length character string with Unicode support\n          \n          \n            \n            # Large variable-length character string with Unicode support", "author": "praneesha", "createdAt": "2020-03-30T04:37:06Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjc3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922777", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Large, variable-length character string with Unicode support\n          \n          \n            \n            # Large variable-length character string with Unicode support", "author": "praneesha", "createdAt": "2020-03-30T04:37:28Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjg1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922850", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Single bit value that can be zero or one, or nil\n          \n          \n            \n            # Single bit value, which can be zero, one, or nil", "author": "praneesha", "createdAt": "2020-03-30T04:37:51Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjkxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922918", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Boolean value either True or false\n          \n          \n            \n            # Boolean value being either True or false", "author": "praneesha", "createdAt": "2020-03-30T04:38:07Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjk0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922949", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # 8-bit integer value which may be unsigned or signed\n          \n          \n            \n            # 8-bit integer value, which may be unsigned or signed", "author": "praneesha", "createdAt": "2020-03-30T04:38:17Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjk2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922969", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # 16-bit signed integer value which may be unsigned or signed\n          \n          \n            \n            # 16-bit signed integer value, which may be unsigned or signed", "author": "praneesha", "createdAt": "2020-03-30T04:38:24Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMjk4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399922989", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # 32-bit signed integer value which may be unsigned or signed\n          \n          \n            \n            # 32-bit signed integer value, which may be unsigned or signed", "author": "praneesha", "createdAt": "2020-03-30T04:38:30Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzAzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923034", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # 64-bit signed integer value which may be unsigned or signed\n          \n          \n            \n            # 64-bit signed integer value, which may be unsigned or signed", "author": "praneesha", "createdAt": "2020-03-30T04:38:37Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzA4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923080", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Small, fixed-length binary value\n          \n          \n            \n            # Small fixed-length binary value", "author": "praneesha", "createdAt": "2020-03-30T04:38:51Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzEyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923121", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Large, variable-length binary value\n          \n          \n            \n            # Large variable-length binary value", "author": "praneesha", "createdAt": "2020-03-30T04:38:59Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzE1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923155", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Small, variable-length binary value\n          \n          \n            \n            # Small variable-length binary value", "author": "praneesha", "createdAt": "2020-03-30T04:39:08Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzE5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923191", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Character Large Object\n          \n          \n            \n            # Large Character object", "author": "praneesha", "createdAt": "2020-03-30T04:39:19Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzMyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923320", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Binary Large Object\n          \n          \n            \n            # Large Binary object", "author": "praneesha", "createdAt": "2020-03-30T04:39:56Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzU2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923568", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Character large objects in multibyte national character set\n          \n          \n            \n            # Large Character objects in a multibyte national character set", "author": "praneesha", "createdAt": "2020-03-30T04:41:17Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzYyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923625", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Both DATE and TIME with additional a nanosecond field\n          \n          \n            \n            # Both DATE and TIME with an additional nanosecond field", "author": "praneesha", "createdAt": "2020-03-30T04:41:37Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set\n public const TYPE_NCLOB = \"NCLOB\";\n+\n+# Both DATE and TIME with additional a nanosecond field", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzY3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923671", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Both DATE and TIME with additional a nanosecond field\n          \n          \n            \n            # Both DATE and TIME with an additional nanosecond field", "author": "praneesha", "createdAt": "2020-03-30T04:41:48Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set\n public const TYPE_NCLOB = \"NCLOB\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATE = \"DATE\";\n+\n+# Both DATE and TIME with additional a nanosecond field", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzcwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923702", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Both DATE and TIME with additional a nanosecond field\n          \n          \n            \n            # Both DATE and TIME with an additional nanosecond field", "author": "praneesha", "createdAt": "2020-03-30T04:41:57Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set\n public const TYPE_NCLOB = \"NCLOB\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATE = \"DATE\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_TIME = \"TIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzc0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923740", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Both DATE and TIME with additional a nanosecond field\n          \n          \n            \n            # Both DATE and TIME with an additional nanosecond field", "author": "praneesha", "createdAt": "2020-03-30T04:42:06Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set\n public const TYPE_NCLOB = \"NCLOB\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATE = \"DATE\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_TIME = \"TIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATETIME = \"DATETIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzc3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923776", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Composite data value that consists of zero or more elements of a specified data type\n          \n          \n            \n            # Composite data value, which consists of zero or more elements of a specified data type", "author": "praneesha", "createdAt": "2020-03-30T04:42:16Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set\n public const TYPE_NCLOB = \"NCLOB\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATE = \"DATE\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_TIME = \"TIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATETIME = \"DATETIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_TIMESTAMP = \"TIMESTAMP\";\n+\n+# Composite data value that consists of zero or more elements of a specified data type", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzgzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923830", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # User-defined structured type, consists of one or more attributes\n          \n          \n            \n            # User-defined structured type, which consists of one or more attributes", "author": "praneesha", "createdAt": "2020-03-30T04:42:27Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -171,35 +171,94 @@ TYPE_BOOLEAN|TYPE_TINYINT|TYPE_SMALLINT|TYPE_INTEGER|TYPE_BIGINT|TYPE_NUMERIC|TY\n TYPE_DOUBLE|TYPE_BINARY|TYPE_BLOB|TYPE_LONGVARBINARY|TYPE_VARBINARY|TYPE_CLOB|TYPE_NCLOB|TYPE_DATE|TYPE_TIME|\n TYPE_DATETIME|TYPE_TIMESTAMP|TYPE_ARRAY|TYPE_STRUCT|TYPE_REFCURSOR;\n \n+# Small, variable-length character string\n public const TYPE_VARCHAR = \"VARCHAR\";\n+\n+# Small, fixed-length character string\n public const TYPE_CHAR = \"CHAR\";\n+\n+# Large, variable-length character string\n public const TYPE_LONGVARCHAR = \"LONGVARCHAR\";\n+\n+# Small, fixed-length character string with unicode support\n public const TYPE_NCHAR = \"NCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_LONGNVARCHAR = \"LONGNVARCHAR\";\n+\n+# Large, variable-length character string with Unicode support\n public const TYPE_NVARCHAR = \"NVARCHAR\";\n+\n+# Single bit value that can be zero or one, or nil\n public const TYPE_BIT = \"BIT\";\n+\n+# Boolean value either True or false\n public const TYPE_BOOLEAN = \"BOOLEAN\";\n+\n+# 8-bit integer value which may be unsigned or signed\n public const TYPE_TINYINT = \"TINYINT\";\n+\n+# 16-bit signed integer value which may be unsigned or signed\n public const TYPE_SMALLINT = \"SMALLINT\";\n+\n+# 32-bit signed integer value which may be unsigned or signed\n public const TYPE_INTEGER = \"INTEGER\";\n+\n+# 64-bit signed integer value which may be unsigned or signed\n public const TYPE_BIGINT = \"BIGINT\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_NUMERIC = \"NUMERIC\";\n+\n+# Fixed-precision and scaled decimal values\n public const TYPE_DECIMAL = \"DECIMAL\";\n+\n+# Single precision floating point number\n public const TYPE_REAL = \"REAL\";\n+\n+# Double precision floating point number\n public const TYPE_FLOAT = \"FLOAT\";\n+\n+# Double precision floating point number\n public const TYPE_DOUBLE = \"DOUBLE\";\n+\n+# Small, fixed-length binary value\n public const TYPE_BINARY = \"BINARY\";\n+\n+# Binary Large Object\n public const TYPE_BLOB = \"BLOB\";\n+\n+# Large, variable-length binary value\n public const TYPE_LONGVARBINARY = \"LONGVARBINARY\";\n+\n+# Small, variable-length binary value\n public const TYPE_VARBINARY = \"VARBINARY\";\n+\n+# Character Large Object\n public const TYPE_CLOB = \"CLOB\";\n+\n+# Character large objects in multibyte national character set\n public const TYPE_NCLOB = \"NCLOB\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATE = \"DATE\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_TIME = \"TIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_DATETIME = \"DATETIME\";\n+\n+# Both DATE and TIME with additional a nanosecond field\n public const TYPE_TIMESTAMP = \"TIMESTAMP\";\n+\n+# Composite data value that consists of zero or more elements of a specified data type\n public const TYPE_ARRAY = \"ARRAY\";\n+\n+# User-defined structured type, consists of one or more attributes", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzg4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923883", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # IN parameters are used to send values to stored procedures\n          \n          \n            \n            # `IN` parameters are used to send values to stored procedures", "author": "praneesha", "createdAt": "2020-03-30T04:42:41Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -215,8 +274,13 @@ public const TYPE_REFCURSOR = \"REFCURSOR\";\n @deprecated\n public type Direction DIRECTION_IN|DIRECTION_OUT|DIRECTION_INOUT;\n \n+# IN parameters are used to send values to stored procedures", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMzkzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399923935", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # OUT parameters are used to get values from stored procedures\n          \n          \n            \n            # `OUT` parameters are used to get values from stored procedures", "author": "praneesha", "createdAt": "2020-03-30T04:42:49Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -215,8 +274,13 @@ public const TYPE_REFCURSOR = \"REFCURSOR\";\n @deprecated\n public type Direction DIRECTION_IN|DIRECTION_OUT|DIRECTION_INOUT;\n \n+# IN parameters are used to send values to stored procedures\n public const DIRECTION_IN = \"IN\";\n+\n+# OUT parameters are used to get values from stored procedures", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyNDAyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22293#discussion_r399924027", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # INOUT parameters are used to send values and get values from stored procedures\n          \n          \n            \n            # `INOUT` parameters are used to both send and get values to/from stored procedures", "author": "praneesha", "createdAt": "2020-03-30T04:43:16Z", "path": "stdlib/jdbc/src/main/ballerina/src/java.jdbc/types.bal", "diffHunk": "@@ -215,8 +274,13 @@ public const TYPE_REFCURSOR = \"REFCURSOR\";\n @deprecated\n public type Direction DIRECTION_IN|DIRECTION_OUT|DIRECTION_INOUT;\n \n+# IN parameters are used to send values to stored procedures\n public const DIRECTION_IN = \"IN\";\n+\n+# OUT parameters are used to get values from stored procedures\n public const DIRECTION_OUT = \"OUT\";\n+\n+# INOUT parameters are used to send values and get values from stored procedures", "originalCommit": "629e23f6c4e622b13e24b5992cb9744c69244d41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ab986766ded60673d0618b0e75531e987e6b9d5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ab986766ded60673d0618b0e75531e987e6b9d5", "message": "Apply suggestions from code review\r\n\r\nAdd review suggestions\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-03-31T12:54:04Z", "type": "commit"}]}