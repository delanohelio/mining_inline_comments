{"pr_number": 23533, "pr_title": "Add functionality to generate docs to/from json, move templates to directory and exclude index  [1.2.x]", "pr_createdAt": "2020-05-27T08:19:03Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533", "timeline": [{"oid": "52f946c458de450c552af58baaf192cb65e7d1ee", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/52f946c458de450c552af58baaf192cb65e7d1ee", "message": "Add to/from json", "committedDate": "2020-05-22T09:24:08Z", "type": "commit"}, {"oid": "6ce4a225f15df5a520a843c1e51938b501b96cc2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6ce4a225f15df5a520a843c1e51938b501b96cc2", "message": "Add to/from json", "committedDate": "2020-05-22T12:17:39Z", "type": "commit"}, {"oid": "f89920031d41947399d3cc6635ea224cf8e974ec", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f89920031d41947399d3cc6635ea224cf8e974ec", "message": "Add to/from json", "committedDate": "2020-05-27T07:15:28Z", "type": "commit"}, {"oid": "437d66e9aa31bc70c0e7e26747400ad2b26a6603", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/437d66e9aa31bc70c0e7e26747400ad2b26a6603", "message": "Add excludeIndex", "committedDate": "2020-05-27T08:12:47Z", "type": "commit"}, {"oid": "9006e3e994595b800b96ec6a6ef710b45e34bee9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9006e3e994595b800b96ec6a6ef710b45e34bee9", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into to-from-json-12x", "committedDate": "2020-05-27T09:13:20Z", "type": "commit"}, {"oid": "90e75d6d96f29f6f75292a3017319ffd57f42405", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90e75d6d96f29f6f75292a3017319ffd57f42405", "message": "Add to/from JSON", "committedDate": "2020-05-27T09:16:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTMzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431599332", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (null != this.jsonLoc) {\n          \n          \n            \n                    if (this.jsonLoc != null) {", "author": "suganyasuven", "createdAt": "2020-05-28T06:01:58Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/DocCommand.java", "diffHunk": "@@ -104,6 +118,38 @@ public void execute() {\n             CommandUtil.exitError(true);\n             return;\n         }\n+        Path sourcePath = null;\n+        Path targetPath;\n+        // validation and decide source root and source full path\n+        this.sourceRootPath = null != this.sourceRoot ?\n+                Paths.get(this.sourceRoot).toAbsolutePath() : this.sourceRootPath;\n+        // Generating API Docs through a JSON file\n+        if (null != this.jsonLoc) {", "originalCommit": "90e75d6d96f29f6f75292a3017319ffd57f42405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyOTIzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431629232", "bodyText": "Added the changes", "author": "shehan360", "createdAt": "2020-05-28T07:16:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTMzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTU3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431599570", "bodyText": "shall we remove this extra line?", "author": "suganyasuven", "createdAt": "2020-05-28T06:02:41Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/CreateDocsTask.java", "diffHunk": "@@ -41,29 +41,48 @@\n  */\n public class CreateDocsTask implements Task {\n \n+    private boolean excludeIndex;\n+    private boolean toJson;\n+    private Path jsonPath;\n \n-    public CreateDocsTask() { }\n+    public CreateDocsTask(boolean toJson, Path jsonPath, boolean excludeIndex) {\n+        this.excludeIndex = excludeIndex;\n+        this.toJson = toJson;\n+        this.jsonPath = jsonPath;\n+    }\n \n     @Override\n     public void execute(BuildContext buildContext) {\n         Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n         Path targetDir = buildContext.get(BuildContextField.TARGET_DIR);\n         Path outputPath = targetDir.resolve(TARGET_API_DOC_DIRECTORY);\n-        List<BLangPackage> modules = buildContext.getModules();\n         buildContext.out().println();\n-        buildContext.out().println(\"Generating API Documentation\");\n-        try {\n-            // disable deprecated verbose logs from docerina\n-            BallerinaDocGenerator.setPrintStream(new EmptyPrintStream());\n-            Map<String, ModuleDoc> moduleDocMap = BallerinaDocGenerator\n-                    .generateModuleDocsFromBLangPackages(sourceRootPath.toString(), modules);\n-            Files.createDirectories(outputPath);\n-            BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap,\n-                    outputPath.toString());\n+        if (jsonPath != null) {\n+            buildContext.out().println(\"Generating API Documentation using data in JSON\");\n+            BallerinaDocGenerator.writeAPIDocsForModulesFromJson(jsonPath, outputPath.toString(), excludeIndex);\n             buildContext.out().println(\"\\t\" + sourceRootPath.relativize(outputPath).toString());\n-        } catch (IOException e) {\n-            throw createLauncherException(\"Unable to generate API Documentation.\");\n+        } else {\n+            buildContext.out().println(\"Generating API Documentation\");\n+            List<BLangPackage> modules = buildContext.getModules();\n+            try {\n+                // disable deprecated verbose logs from docerina\n+                BallerinaDocGenerator.setPrintStream(new EmptyPrintStream());\n+                Map<String, ModuleDoc> moduleDocMap = BallerinaDocGenerator\n+                        .generateModuleDocsFromBLangPackages(sourceRootPath.toString(), modules);\n+                Files.createDirectories(outputPath);\n+                if (toJson) {\n+                    BallerinaDocGenerator.writeAPIDocsToJSON(moduleDocMap, outputPath.toString());\n+                    buildContext.out().println(\"\\t\" + \"data saved as a JSON in: \" +\n+                            sourceRootPath.relativize(outputPath).toString());\n+                } else {\n+                    BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, outputPath.toString(), excludeIndex);\n+                    buildContext.out().println(\"\\t\" + sourceRootPath.relativize(outputPath).toString());\n+                }\n+            } catch (IOException e) {\n+                throw createLauncherException(\"Unable to generate API Documentation.\");\n+            }\n         }\n+", "originalCommit": "90e75d6d96f29f6f75292a3017319ffd57f42405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyOTMwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431629301", "bodyText": "Added the changes", "author": "shehan360", "createdAt": "2020-05-28T07:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTg5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431599895", "bodyText": "Shall we remove this extra line?", "author": "suganyasuven", "createdAt": "2020-05-28T06:03:39Z", "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/docs/BallerinaDocGenerator.java", "diffHunk": "@@ -297,11 +344,37 @@ public static void writeAPIDocsForModules(Map<String, ModuleDoc> docsMap, String\n                 if (BallerinaDocUtils.isDebugEnabled()) {\n                     out.println(\"docerina: generated docs for module: \" + module.id);\n                 }\n+\n+", "originalCommit": "90e75d6d96f29f6f75292a3017319ffd57f42405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyOTM1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431629352", "bodyText": "Added the changes", "author": "shehan360", "createdAt": "2020-05-28T07:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU5OTg5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMDQ1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431600456", "bodyText": "Please include 'since' annotation", "author": "suganyasuven", "createdAt": "2020-05-28T06:05:29Z", "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/docs/utils/PathToJson.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.docgen.docs.utils;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.JsonPrimitive;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n+\n+import java.lang.reflect.Type;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Used to convert Path objects to JSON.\n+ */", "originalCommit": "90e75d6d96f29f6f75292a3017319ffd57f42405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyOTQyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431629427", "bodyText": "Addded the changes", "author": "shehan360", "createdAt": "2020-05-28T07:17:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMDQ1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMDg5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431600895", "bodyText": "Please remove this extra line", "author": "suganyasuven", "createdAt": "2020-05-28T06:06:57Z", "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/generator/model/Module.java", "diffHunk": "@@ -15,29 +15,49 @@\n  */\n package org.ballerinalang.docgen.generator.model;\n \n+import com.google.gson.annotations.Expose;\n+\n+import java.nio.file.Path;\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n  * Represents a Ballerina Module.\n  */\n public class Module {\n-\n+    @Expose\n     public String id;\n+    @Expose\n     public String summary;\n+    @Expose\n     public String description;\n+    @Expose\n     public String orgName;\n+    @Expose\n     public String version;\n \n     // constructs\n+    @Expose\n     public List<Record> records = new ArrayList<>();\n+    @Expose\n     public List<Object> objects = new ArrayList<>();\n+    @Expose\n     public List<Client> clients = new ArrayList<>();\n+    @Expose\n     public List<Listener> listeners = new ArrayList<>();\n+    @Expose\n     public List<Function> functions = new ArrayList<>();\n+    @Expose\n     public List<Constant> constants = new ArrayList<>();\n+    @Expose\n     public List<Annotation> annotations = new ArrayList<>();\n+    @Expose\n     public List<Error> errors = new ArrayList<>();\n+    @Expose\n     public List<FiniteType> finiteTypes = new ArrayList<>();\n+    @Expose\n     public List<UnionType> unionTypes = new ArrayList<>();\n+", "originalCommit": "90e75d6d96f29f6f75292a3017319ffd57f42405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyOTQ4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23533#discussion_r431629486", "bodyText": "Added the changes", "author": "shehan360", "createdAt": "2020-05-28T07:17:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMDg5NQ=="}], "type": "inlineReview"}, {"oid": "f67ced643c89a43340b5daff7c757ce0063db118", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f67ced643c89a43340b5daff7c757ce0063db118", "message": "Add to/from JSON", "committedDate": "2020-05-28T07:09:53Z", "type": "commit"}, {"oid": "4af096d822f6a60b6eddb2890577ea558c3b9f17", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4af096d822f6a60b6eddb2890577ea558c3b9f17", "message": "Add to/from JSON", "committedDate": "2020-05-28T07:14:38Z", "type": "commit"}, {"oid": "c4be3e6575fd6194cdf6c39860ef25bc84752401", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4be3e6575fd6194cdf6c39860ef25bc84752401", "message": "Add to/from JSON", "committedDate": "2020-05-28T07:49:44Z", "type": "commit"}]}