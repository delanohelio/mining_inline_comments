{"pr_number": 22577, "pr_title": "Update API docs and Module.md file in xmlutils module", "pr_createdAt": "2020-04-10T10:25:54Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577", "timeline": [{"oid": "acc889a593724360357db7047c55116c1275e2ab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acc889a593724360357db7047c55116c1275e2ab", "message": "Update API docs and Module.md file in xmlutils module", "committedDate": "2020-04-10T10:23:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzcyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r406703723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides utility functions to manipulate built-in `xml` data type. \n          \n          \n            \n            This module provides utility functions to manipulate the built-in `xml` data type.", "author": "praneesha", "createdAt": "2020-04-10T10:38:34Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/Module.md", "diffHunk": "@@ -2,50 +2,3 @@\n \n This module provides utility functions to manipulate built-in `xml` data type. ", "originalCommit": "acc889a593724360357db7047c55116c1275e2ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzc5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r406703796", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It provides APIs to convert a `json` to an `xml`, or convert a `table` to an `xml`.\n          \n          \n            \n            It provides APIs to convert a `json` to an `xml` or convert a `table` to an `xml`.", "author": "praneesha", "createdAt": "2020-04-10T10:38:44Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/Module.md", "diffHunk": "@@ -2,50 +2,3 @@\n \n This module provides utility functions to manipulate built-in `xml` data type. \n It provides APIs to convert a `json` to an `xml`, or convert a `table` to an `xml`.", "originalCommit": "acc889a593724360357db7047c55116c1275e2ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b84c10094bc551bacb27f5ea2d5703040824d6f", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-10T10:54:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyODY2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408628664", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + jsonValue - The json source\n          \n          \n            \n            # + jsonValue - The JSON source", "author": "praneesha", "createdAt": "2020-04-15T07:15:16Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source", "originalCommit": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyODczMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408628732", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + options - JsonOptions struct for JSON to XML conversion properties\n          \n          \n            \n            # + options - The `xmlutils:JsonOptions` record for JSON to XML conversion properties", "author": "praneesha", "createdAt": "2020-04-15T07:15:26Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties", "originalCommit": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyODg5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408628894", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - XML representation of the given JSON if successfully converted\n          \n          \n            \n            # + return - XML representation of the given JSON if the JSON is", "author": "praneesha", "createdAt": "2020-04-15T07:15:49Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted", "originalCommit": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTAyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408629027", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            the JSON or else an `error`\n          \n          \n            \n            #            successfully converted or else an `error`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "author": "praneesha", "createdAt": "2020-04-15T07:16:05Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`", "originalCommit": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTE2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408629162", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // This is a temporary fix until resolve the #19917\n          \n          \n            \n            // This is a temporary fix until #19917 is resolved.", "author": "praneesha", "createdAt": "2020-04-15T07:16:22Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`\n+public function fromJSON(json? jsonValue, JsonOptions options = {}) returns xml|error {\n+    return externFromJson(jsonValue, options);\n }\n \n // This is a temporary fix until resolve the #19917", "originalCommit": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzNTAyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408635020", "bodyText": "This is a developer comment, not an API doc comment. Don't need to change them. ;)", "author": "ThisaruGuruge", "createdAt": "2020-04-15T07:27:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTE2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzNjAyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408636021", "bodyText": "Ack.", "author": "praneesha", "createdAt": "2020-04-15T07:29:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTI2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408629262", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Converts a table to its xml representation.\n          \n          \n            \n            # Converts a table to its XML representation.", "author": "praneesha", "createdAt": "2020-04-15T07:16:33Z", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`\n+public function fromJSON(json? jsonValue, JsonOptions options = {}) returns xml|error {\n+    return externFromJson(jsonValue, options);\n }\n \n // This is a temporary fix until resolve the #19917\n-function externFromJson(json? j, JsonOptions options = {}) returns xml|error = @java:Method {\n+function externFromJson(json? jsonValue, JsonOptions options = {}) returns xml|error = @java:Method {\n     name: \"fromJSON\",\n     class: \"org.ballerinalang.stdlib.xmlutils.ConvertUtils\"\n } external;\n \n # Converts a table to its xml representation.", "originalCommit": "3b84c10094bc551bacb27f5ea2d5703040824d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c4493a95019731139fa5487a38026651663c716a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4493a95019731139fa5487a38026651663c716a", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-15T07:27:46Z", "type": "commit"}]}