{"pr_number": 23505, "pr_title": "Fix for NPE thrown at module stop failure due to module init failure", "pr_createdAt": "2020-05-26T10:57:55Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505", "timeline": [{"oid": "0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "message": "Modify log file name", "committedDate": "2020-05-27T03:49:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MDczMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430870730", "bodyText": "Shall we add license header to the test bal files?", "author": "riyafa", "createdAt": "2020-05-27T05:48:18Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/execution/proj9/src/c/main.bal", "diffHunk": "@@ -0,0 +1,14 @@\n+import a;", "originalCommit": "0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3OTU0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430879546", "bodyText": "The bal files in the previous test projects does not contain the license headers.\nproject 1\nIs it required?", "author": "HindujaB", "createdAt": "2020-05-27T06:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MDczMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MTA3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430871079", "bodyText": "can we have better names for modules for clarity instead of a and b?", "author": "riyafa", "createdAt": "2020-05-27T05:49:28Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/execution/proj10/src/c/main.bal", "diffHunk": "@@ -0,0 +1,14 @@\n+import a;", "originalCommit": "0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjEzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430872133", "bodyText": "Shall we add constant to java methods like moduleStartAttempted, moduleStartSuccess", "author": "warunalakshitha", "createdAt": "2020-05-27T05:52:40Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -780,12 +781,15 @@ private static String calculateModuleSpecialFuncName(PackageID id, String funcSu\n     }\n \n     private static void scheduleStopMethod(MethodVisitor mv, String initClass, String stopFuncName,\n-                                           int schedulerIndex, int futureIndex) {\n+                                           int schedulerIndex, int futureIndex, String moduleClass) {\n \n         String lambdaFuncName = \"$lambda$\" + stopFuncName;\n         // Create a schedular. A new schedular is used here, to make the stop function to not to\n         // depend/wait on whatever is being running on the background. eg: a busy loop in the main.\n \n+        mv.visitFieldInsn(GETSTATIC, moduleClass, \"moduleStartAttempted\", \"Z\");", "originalCommit": "0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MTU2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430891566", "bodyText": "Done in the latest commit", "author": "HindujaB", "createdAt": "2020-05-27T06:46:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjEzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjUxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430872513", "bodyText": "shall we check terminator.kind instead of instance of", "author": "warunalakshitha", "createdAt": "2020-05-27T05:53:56Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1908,6 +1924,13 @@ public void generateBasicBlocks(MethodVisitor mv, List<BIRBasicBlock> basicBlock\n                 mv.visitIntInsn(SIPUSH, caseIndex);\n                 mv.visitVarInsn(ISTORE, stateVarIndex);\n                 caseIndex += 1;\n+\n+                //set module start success to true for ___init class\n+                if (func == module.functions.get(1) && terminator instanceof Return) {", "originalCommit": "0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MTQyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430891422", "bodyText": "Done in the latest commit", "author": "HindujaB", "createdAt": "2020-05-27T06:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3NTczNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r430875735", "bodyText": "We can remove the .gitignore files", "author": "warunalakshitha", "createdAt": "2020-05-27T06:03:21Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/execution/proj10/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+target", "originalCommit": "0b3e7127192f8d4bfa45989a8172d2ccb80e8cd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "05c96d3aa8d78ea7ffc1de8e5ba7b553c24f4f03", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/05c96d3aa8d78ea7ffc1de8e5ba7b553c24f4f03", "message": "Add version value in  module class name calls", "committedDate": "2020-05-27T06:06:22Z", "type": "forcePushed"}, {"oid": "e228b490e522df2f25ef29fbba28ad58a90a0356", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e228b490e522df2f25ef29fbba28ad58a90a0356", "message": "Introduce constants for module level variables", "committedDate": "2020-05-27T06:44:22Z", "type": "forcePushed"}, {"oid": "9b428b86b6a817377113e2931b86d2d37ec0d5c9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b428b86b6a817377113e2931b86d2d37ec0d5c9", "message": "Modify unit tests", "committedDate": "2020-05-27T16:05:37Z", "type": "forcePushed"}, {"oid": "4094409db922c7a6f4cb8a491b7903a7662c27cd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4094409db922c7a6f4cb8a491b7903a7662c27cd", "message": "Add project for test case start and stop panic", "committedDate": "2020-05-28T03:42:55Z", "type": "forcePushed"}, {"oid": "7d1f09a5e14cc49cefd9bcf857fdead19fdb962a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d1f09a5e14cc49cefd9bcf857fdead19fdb962a", "message": "Add project for test case start and stop panic", "committedDate": "2020-05-28T06:38:46Z", "type": "forcePushed"}, {"oid": "847f2d77bd84468fa931ec1976a83aa5526d8cb6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/847f2d77bd84468fa931ec1976a83aa5526d8cb6", "message": "Add project for test case start and stop panic", "committedDate": "2020-05-28T12:06:42Z", "type": "forcePushed"}, {"oid": "2f5a12f7255182b637fb10d7038c516326979186", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f5a12f7255182b637fb10d7038c516326979186", "message": "Add project for test case start and stop panic", "committedDate": "2020-05-28T16:47:53Z", "type": "forcePushed"}, {"oid": "3c4bd68e7881a55b0b31b293f6274d48ad4962f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c4bd68e7881a55b0b31b293f6274d48ad4962f9", "message": "Add project for test case start and stop panic", "committedDate": "2020-05-29T02:41:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2MzA3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432263070", "bodyText": "Shall we have the called function after the calling method? This improves vertical readability", "author": "riyafa", "createdAt": "2020-05-29T05:29:00Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -752,6 +755,10 @@ private static boolean isModuleTestInitFunction(BIRPackage module, BIRFunction f\n         return func.name.value.equals(calculateModuleSpecialFuncName(packageToModuleId(module), \"<testinit>\"));\n     }\n \n+    private static boolean isModuleStartFunction(BIRPackage module, BIRFunction function) {\n+        return function == module.functions.get(1);\n+    }", "originalCommit": "1db52c79d70d73d07f2f1f0d2fef09ca48539ea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0MjY5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432342692", "bodyText": "check with user defined variable names", "author": "HindujaB", "createdAt": "2020-05-29T08:45:03Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmConstants.java", "diffHunk": "@@ -186,6 +186,8 @@\n     public static final String TYPEDESC_CLASS_PREFIX = \"$typedesc$\";\n     public static final String BALLERINA = \"ballerina\";\n     public static final String BUILT_IN_PACKAGE_NAME = \"lang.annotations\";\n+    public static final String MODULE_START_ATTEMPTED = \"moduleStartAttempted\";\n+    public static final String MODULE_START_SUCCESS = \"moduleStartSuccess\";", "originalCommit": "1db52c79d70d73d07f2f1f0d2fef09ca48539ea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NDkzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432344933", "bodyText": "check with start function name?", "author": "HindujaB", "createdAt": "2020-05-29T08:49:14Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -752,6 +755,10 @@ private static boolean isModuleTestInitFunction(BIRPackage module, BIRFunction f\n         return func.name.value.equals(calculateModuleSpecialFuncName(packageToModuleId(module), \"<testinit>\"));\n     }\n \n+    private static boolean isModuleStartFunction(BIRPackage module, BIRFunction function) {\n+        return function == module.functions.get(1);", "originalCommit": "1db52c79d70d73d07f2f1f0d2fef09ca48539ea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NjI3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432346279", "bodyText": "moduleStartSUccessful", "author": "HindujaB", "createdAt": "2020-05-29T08:51:33Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -780,12 +787,15 @@ private static String calculateModuleSpecialFuncName(PackageID id, String funcSu\n     }\n \n     private static void scheduleStopMethod(MethodVisitor mv, String initClass, String stopFuncName,\n-                                           int schedulerIndex, int futureIndex) {\n+                                           int schedulerIndex, int futureIndex, String moduleClass) {\n \n         String lambdaFuncName = \"$lambda$\" + stopFuncName;\n         // Create a schedular. A new schedular is used here, to make the stop function to not to\n         // depend/wait on whatever is being running on the background. eg: a busy loop in the main.\n \n+        mv.visitFieldInsn(GETSTATIC, moduleClass, MODULE_START_ATTEMPTED, \"Z\");", "originalCommit": "1db52c79d70d73d07f2f1f0d2fef09ca48539ea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1NTE0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432355142", "bodyText": "check for over checking per instruction", "author": "HindujaB", "createdAt": "2020-05-29T09:07:55Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1908,6 +1925,13 @@ public void generateBasicBlocks(MethodVisitor mv, List<BIRBasicBlock> basicBlock\n                 mv.visitIntInsn(SIPUSH, caseIndex);\n                 mv.visitVarInsn(ISTORE, stateVarIndex);\n                 caseIndex += 1;\n+\n+                //set module start success to true for ___init class\n+                if (isModuleStartFunction(module, func) && terminator.kind == InstructionKind.RETURN) {\n+                    mv.visitInsn(ICONST_1);", "originalCommit": "1db52c79d70d73d07f2f1f0d2fef09ca48539ea9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1NTM0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432355347", "bodyText": "check if we can move closer to return generation", "author": "HindujaB", "createdAt": "2020-05-29T09:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1NTE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM3NzM5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r432377394", "bodyText": "IMO better way is to use handleRuntimeErrors without Runtime.getRuntime().exit(1) and add a new method \"handleRuntimeErrorsAndExit\" which calls handleRuntimeErrors +  Runtime.getRuntime().exit(1). In  that case you need to change the current usages in handleRuntimeErrors and   HANDLE_THROWABLE_METHOD constant in jvmconstants", "author": "warunalakshitha", "createdAt": "2020-05-29T09:49:45Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/util/RuntimeUtils.java", "diffHunk": "@@ -137,6 +137,14 @@ public static void handleRuntimeErrors(Throwable throwable) {\n         Runtime.getRuntime().exit(1);\n     }\n \n+    public static void handleRuntimeErrorWithoutShutDown(Throwable throwable) {", "originalCommit": "1db52c79d70d73d07f2f1f0d2fef09ca48539ea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "840d86f260b305ec422f75bdaeae3607d97b4c88", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/840d86f260b305ec422f75bdaeae3607d97b4c88", "message": "Add modifications to variable names, method calls", "committedDate": "2020-05-29T11:55:59Z", "type": "forcePushed"}, {"oid": "e9f54c0aa3df0cff1f9a0064f50ce94c5a192ac2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e9f54c0aa3df0cff1f9a0064f50ce94c5a192ac2", "message": "Add modifications to variable names, method calls", "committedDate": "2020-05-29T16:34:59Z", "type": "forcePushed"}, {"oid": "cf3b5b34fb1814cdb6a24082309a0773026105a9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf3b5b34fb1814cdb6a24082309a0773026105a9", "message": "Add test cases to check init/start is called once per module", "committedDate": "2020-06-04T06:19:21Z", "type": "forcePushed"}, {"oid": "ff8804023bc4a748bdb420b16f410e6cfcbdad44", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff8804023bc4a748bdb420b16f410e6cfcbdad44", "message": "Add test cases to check init/start is called once per module", "committedDate": "2020-06-04T09:04:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI1MzU0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r435253545", "bodyText": "@warunalakshitha , can you check the naming used by @HindujaB here for org name and module names?", "author": "Kishanthan", "createdAt": "2020-06-04T13:29:19Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/execution/projectModuleDependencyChainForInit/Ballerina.toml", "diffHunk": "@@ -0,0 +1,5 @@\n+[project]\n+org-name= \"unit-tests\"", "originalCommit": "ff8804023bc4a748bdb420b16f410e6cfcbdad44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI2NDg1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r435264859", "bodyText": "We need to improve the module names based on coding best practices. Module names can contain alphanumeric characters including dots. Dots in a module name have no meaning other than the last segment after the final dot being used as a default alias within the source code. The underscore ( _ ) character and camel case are not allowed.\nEx: lang.string, auth - valid module names", "author": "warunalakshitha", "createdAt": "2020-06-04T13:42:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI1MzU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NDc5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r435344792", "bodyText": "Sorry. Fixed it in recent commit.", "author": "HindujaB", "createdAt": "2020-06-04T15:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI1MzU0NQ=="}], "type": "inlineReview"}, {"oid": "4f9e3501ee3e8009eaedd12c51d64174220fa6dc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f9e3501ee3e8009eaedd12c51d64174220fa6dc", "message": "Modify test project names", "committedDate": "2020-06-07T16:19:12Z", "type": "forcePushed"}, {"oid": "6b6ed4cb75b71529615d1a9b1e9fe33a940286e9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b6ed4cb75b71529615d1a9b1e9fe33a940286e9", "message": "Fix checkstyle error", "committedDate": "2020-06-08T02:56:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1OTg5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436459897", "bodyText": "is it correct to call exit here? then jvm would exit right?", "author": "Kishanthan", "createdAt": "2020-06-08T05:11:29Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/connector/AsyncFunctionCallBack.java", "diffHunk": "@@ -69,7 +69,7 @@ public void notifySuccess() {\n \n     @Override\n     public void notifyFailure(ErrorValue error) {\n-        RuntimeUtils.handleRuntimeErrors(error);\n+        RuntimeUtils.handleRuntimeErrorsAndExit(error);", "originalCommit": "6b6ed4cb75b71529615d1a9b1e9fe33a940286e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1OTk1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436459951", "bodyText": "@HindujaB @warunalakshitha", "author": "Kishanthan", "createdAt": "2020-06-08T05:11:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1OTg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3NzI5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436477295", "bodyText": "This seems bug. lets just put just \"handleRuntimeErrors\" without exit.", "author": "warunalakshitha", "createdAt": "2020-06-08T06:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1OTg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ4MzYwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436483603", "bodyText": "Modified them", "author": "HindujaB", "createdAt": "2020-06-08T06:39:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1OTg5Nw=="}], "type": "inlineReview"}, {"oid": "6dbc11bf18f0cb8d31da1bd6910f775c6abbb0b7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6dbc11bf18f0cb8d31da1bd6910f775c6abbb0b7", "message": "Fix runtime exit bug", "committedDate": "2020-06-08T06:38:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxODAwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436518001", "bodyText": "function name is already there in the enclosing method. lets use that.", "author": "Kishanthan", "createdAt": "2020-06-08T07:59:09Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1476,6 +1484,10 @@ public void genJMethodForBFunc(BIRFunction func,\n         LabelGenerator labelGen = new LabelGenerator();\n \n         mv.visitCode();\n+        if (isModuleStartFunction(module, func)) {", "originalCommit": "6dbc11bf18f0cb8d31da1bd6910f775c6abbb0b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5MDg1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436690858", "bodyText": "done in last commit", "author": "HindujaB", "createdAt": "2020-06-08T13:17:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxODAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUxODY0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436518649", "bodyText": "same here as well where the function name is already calculated.", "author": "Kishanthan", "createdAt": "2020-06-08T08:00:20Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1923,6 +1939,12 @@ public void generateBasicBlocks(MethodVisitor mv, List<BIRBasicBlock> basicBlock\n                     generateAnnotLoad(mv, module.typeDefs, getPackageName(module.org.value, module.name.value,\n                                                                           module.version.value));\n                 }\n+                //set module start success to true for ___init class\n+                if (isModuleStartFunction(module, func) && terminator.kind == InstructionKind.RETURN) {", "originalCommit": "6dbc11bf18f0cb8d31da1bd6910f775c6abbb0b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "27d3a2d651dfcb2d4b89e33939c003c2b47cde38", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27d3a2d651dfcb2d4b89e33939c003c2b47cde38", "message": "Add string values to constants", "committedDate": "2020-06-08T13:16:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkxNTE5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23505#discussion_r436915198", "bodyText": "This statement can be moved inside the body of the if condition added below as initClass will only be used when that if condition becomes true right?", "author": "Kishanthan", "createdAt": "2020-06-08T18:40:39Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1446,6 +1454,8 @@ public void genJMethodForBFunc(BIRFunction func,\n \n         String currentPackageName = getPackageName(module.org.value, module.name.value, module.version.value);\n         BIRVarToJVMIndexMap indexMap = new BIRVarToJVMIndexMap();\n+        String initClass = getModuleLevelClassName(module.org.value, module.name.value, module.version.value,\n+                MODULE_INIT_CLASS_NAME);", "originalCommit": "27d3a2d651dfcb2d4b89e33939c003c2b47cde38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a7d69e5da4b9a0b4a7e25920c9f81e2398d77816", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a7d69e5da4b9a0b4a7e25920c9f81e2398d77816", "message": "Modify module stop call for init failure", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "64f354ccc7a16c5aab8ce37c8e1173f5e90522d6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/64f354ccc7a16c5aab8ce37c8e1173f5e90522d6", "message": "Fix the module stop method considering init, start failure", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "94ca605661f2d7ce3ccb86776c858ca80076073f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94ca605661f2d7ce3ccb86776c858ca80076073f", "message": "Fix execution flow unit tests", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "a27edd8d60c6f4c2b67cb6b17a9ce2e87ce79240", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a27edd8d60c6f4c2b67cb6b17a9ce2e87ce79240", "message": "Move the moduleStartSuccess variable update to return statement", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "c0df2ac419523492824cea35285680515e89faad", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c0df2ac419523492824cea35285680515e89faad", "message": "Add new test cases for module stop failure", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "db045a08bb98866480e73d7fbdcfdd0d1f0cfaa3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db045a08bb98866480e73d7fbdcfdd0d1f0cfaa3", "message": "Fix checkstyle errors", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "2f0ad137dd575bdcae7bdad90ad364f8a5c63c6b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f0ad137dd575bdcae7bdad90ad364f8a5c63c6b", "message": "Modify log file name", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "4ab3ecac3f1c5690ec2a1d7d8e87aa79361f177b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4ab3ecac3f1c5690ec2a1d7d8e87aa79361f177b", "message": "Add version value in  module class name calls", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "de23fa7baddeb9b126255c656d84f09ead5b8768", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/de23fa7baddeb9b126255c656d84f09ead5b8768", "message": "Introduce constants for module level variables", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "6643256f50dc88f4ef90f9678a8352348dbbc3fa", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6643256f50dc88f4ef90f9678a8352348dbbc3fa", "message": "Modify unit tests", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "d5a6832e9eb7a3814213837f709a30ad0ae470ac", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5a6832e9eb7a3814213837f709a30ad0ae470ac", "message": "Add project for test case start and stop panic", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "bacbeb773068f11ad791b74612e2423fddf8bbbc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bacbeb773068f11ad791b74612e2423fddf8bbbc", "message": "Modify start function check", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "38a7382ed88dbc006f8216a7d9ef6896755509e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/38a7382ed88dbc006f8216a7d9ef6896755509e7", "message": "Add modifications to variable names, method calls", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "65546a82e33a48168b18f1fba2b6a5ac9f9665f8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65546a82e33a48168b18f1fba2b6a5ac9f9665f8", "message": "Add test cases to check init/start is called once per module", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "0557b22a240274cda979d1785fc716dba20e18a4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0557b22a240274cda979d1785fc716dba20e18a4", "message": "Modify module, org names according to specs", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "d192dfe9a516e8da92701524b02cf9b8ebd58604", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d192dfe9a516e8da92701524b02cf9b8ebd58604", "message": "Modify test project names", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "1c57d0dab8c509399d67fcdcd33f798023702682", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1c57d0dab8c509399d67fcdcd33f798023702682", "message": "Fix checkstyle error", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "4c860d9e340c0b9b14ae7169cd2e2d9537916146", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c860d9e340c0b9b14ae7169cd2e2d9537916146", "message": "Fix runtime exit bug", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "9a034df6a5584bf28c5f3c7ea689e50b5573a2e6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9a034df6a5584bf28c5f3c7ea689e50b5573a2e6", "message": "Add string values to constants", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "f27b9e8165883a53dcf1e4a0bbb76baf853e4c01", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f27b9e8165883a53dcf1e4a0bbb76baf853e4c01", "message": "Modify init class name call", "committedDate": "2020-06-09T00:04:13Z", "type": "commit"}, {"oid": "f27b9e8165883a53dcf1e4a0bbb76baf853e4c01", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f27b9e8165883a53dcf1e4a0bbb76baf853e4c01", "message": "Modify init class name call", "committedDate": "2020-06-09T00:04:13Z", "type": "forcePushed"}]}