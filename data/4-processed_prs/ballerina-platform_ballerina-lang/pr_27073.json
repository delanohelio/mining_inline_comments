{"pr_number": 27073, "pr_title": "Fix decimal to anydata cast error when using cloneWithType", "pr_createdAt": "2020-11-23T07:02:02Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073", "timeline": [{"oid": "0d41968e69b0eb4f035935fcbd57280145ddae32", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d41968e69b0eb4f035935fcbd57280145ddae32", "message": "Fix TypeConverter\n\n`resolveMatchingTypeForUnion` method didnt have a check for decimal type.\nAdded the check.", "committedDate": "2020-11-23T06:58:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODczMzk3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#discussion_r528733970", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(or is error) {\n          \n          \n            \n                if (or is error) {", "author": "MaryamZi", "createdAt": "2020-11-23T14:17:52Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/conversion/native-conversion-stampable-values.bal", "diffHunk": "@@ -66,3 +66,35 @@ function testConvertStampTupleToMap() returns [[string, Employee], [string, Empl\n     tupleValue[0] = \"Vinod\";\n     return [tupleValue, returnValue];\n }\n+\n+type OpenRecord record {\n+\n+};\n+\n+function testConvertMapJsonWithDecimalToOpenRecord() {\n+    map<json> mp = {\n+        name: \"foo\",\n+        factor: 1.23d\n+    };\n+\n+    var or = mp.cloneWithType(OpenRecord);\n+\n+    if(or is error) {", "originalCommit": "0d41968e69b0eb4f035935fcbd57280145ddae32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgzMTc5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#discussion_r528831798", "bodyText": "Fixed", "author": "dulvinw", "createdAt": "2020-11-23T16:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODczMzk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODczNDU5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#discussion_r528734599", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    error e = error(reason);\n          \n          \n            \n                    panic e;\n          \n          \n            \n                    panic error(reason);", "author": "MaryamZi", "createdAt": "2020-11-23T14:18:54Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/conversion/native-conversion-stampable-values.bal", "diffHunk": "@@ -66,3 +66,35 @@ function testConvertStampTupleToMap() returns [[string, Employee], [string, Empl\n     tupleValue[0] = \"Vinod\";\n     return [tupleValue, returnValue];\n }\n+\n+type OpenRecord record {\n+\n+};\n+\n+function testConvertMapJsonWithDecimalToOpenRecord() {\n+    map<json> mp = {\n+        name: \"foo\",\n+        factor: 1.23d\n+    };\n+\n+    var or = mp.cloneWithType(OpenRecord);\n+\n+    if(or is error) {\n+        panic error(\"Invalid Response\", detail = \"Invalid type `error` recieved from cloneWithType\");\n+    }\n+\n+    OpenRecord castedValue = <OpenRecord>or;\n+    assert(castedValue[\"factor\"], mp[\"factor\"]);\n+    assert(castedValue[\"name\"], mp[\"name\"]);\n+}\n+\n+function assert(anydata actual, anydata expected) {\n+    if (expected != actual) {\n+        typedesc<anydata> expT = typeof expected;\n+        typedesc<anydata> actT = typeof actual;\n+        string reason = \"expected [\" + expected.toString() + \"] of type [\" + expT.toString()\n+                            + \"], but found [\" + actual.toString() + \"] of type [\" + actT.toString() + \"]\";\n+        error e = error(reason);\n+        panic e;", "originalCommit": "0d41968e69b0eb4f035935fcbd57280145ddae32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgzMTkwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#discussion_r528831908", "bodyText": "Fixed", "author": "dulvinw", "createdAt": "2020-11-23T16:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODczNDU5OQ=="}], "type": "inlineReview"}, {"oid": "238303de327aa900336416731f0148dcb9b6aa78", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/238303de327aa900336416731f0148dcb9b6aa78", "message": "Add review suggestions", "committedDate": "2020-11-23T16:33:20Z", "type": "commit"}, {"oid": "238303de327aa900336416731f0148dcb9b6aa78", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/238303de327aa900336416731f0148dcb9b6aa78", "message": "Add review suggestions", "committedDate": "2020-11-23T16:33:20Z", "type": "forcePushed"}]}