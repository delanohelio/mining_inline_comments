{"pr_number": 22225, "pr_title": "Fix documentation issues of task and math module", "pr_createdAt": "2020-03-26T09:37:32Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225", "timeline": [{"oid": "273ef73281d2d5a1603492b779186274c328c90e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/273ef73281d2d5a1603492b779186274c328c90e", "message": "Add missing API docs for math module", "committedDate": "2020-03-26T05:57:58Z", "type": "commit"}, {"oid": "92e4a41c9bc47953986617d0d95a69731ea32915", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/92e4a41c9bc47953986617d0d95a69731ea32915", "message": "Update kafka examples to comply with the conventions and reflect features", "committedDate": "2020-03-26T08:46:06Z", "type": "commit"}, {"oid": "7e48500909cf8328f66219499f0f499372bbbf26", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7e48500909cf8328f66219499f0f499372bbbf26", "message": "Add missing API docs for task module", "committedDate": "2020-03-26T09:31:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MTE4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398441186", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `bootstrapServers` is the list of remote server endpoints of the Kafka\n          \n          \n            \n                // The `bootstrapServers` is the list of remote server endpoints of the Kafka", "author": "praneesha", "createdAt": "2020-03-26T09:50:27Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -1,22 +1,27 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MTMzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398441335", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Subscribes to the topic \"test-kafka-topic\".\n          \n          \n            \n                // Subscribes to the `test-kafka-topic`.", "author": "praneesha", "createdAt": "2020-03-26T09:50:38Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -1,22 +1,27 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n+    // Using two concurrent consumers to work as a group.\n     concurrentConsumers: 2,\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic\".", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MTUyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398441520", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // using default string deserializer to deserialize the kafka value.\n          \n          \n            \n                // Uses the default string deserializer to deserialize the Kafka value.", "author": "praneesha", "createdAt": "2020-03-26T09:50:56Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -1,22 +1,27 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n+    // Using two concurrent consumers to work as a group.\n     concurrentConsumers: 2,\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic\".\n     topics: [\"test-kafka-topic\"],\n-    pollingIntervalInMillis: 1000\n+    pollingIntervalInMillis: 1000,\n+    // using default string deserializer to deserialize the kafka value.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MTc1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398441751", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // This resource executes when a message or a set of messages published\n          \n          \n            \n                // This resource executes when a message or a set of messages are published", "author": "praneesha", "createdAt": "2020-03-26T09:51:16Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -1,22 +1,27 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n+    // Using two concurrent consumers to work as a group.\n     concurrentConsumers: 2,\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic\".\n     topics: [\"test-kafka-topic\"],\n-    pollingIntervalInMillis: 1000\n+    pollingIntervalInMillis: 1000,\n+    // using default string deserializer to deserialize the kafka value.\n+    valueDeserializerType: kafka:DES_STRING\n };\n \n listener kafka:Consumer consumer = new (consumerConfigs);\n \n service kafkaService on consumer {\n+    // This resource executes when a message or a set of messages published", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MTg0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398441841", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // to the subscribed topic / topics.\n          \n          \n            \n                // to the subscribed topic/topics.", "author": "praneesha", "createdAt": "2020-03-26T09:51:26Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -1,22 +1,27 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n+    // Using two concurrent consumers to work as a group.\n     concurrentConsumers: 2,\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic\".\n     topics: [\"test-kafka-topic\"],\n-    pollingIntervalInMillis: 1000\n+    pollingIntervalInMillis: 1000,\n+    // using default string deserializer to deserialize the kafka value.\n+    valueDeserializerType: kafka:DES_STRING\n };\n \n listener kafka:Consumer consumer = new (consumerConfigs);\n \n service kafkaService on consumer {\n+    // This resource executes when a message or a set of messages published\n+    // to the subscribed topic / topics.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MTk4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398441985", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Print the retrieved Kafka record.\n          \n          \n            \n                    // Prints the retrieved Kafka record.", "author": "praneesha", "createdAt": "2020-03-26T09:51:38Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -25,17 +30,13 @@ service kafkaService on consumer {\n }\n \n function processKafkaRecord(kafka:ConsumerRecord kafkaRecord) {\n-    anydata serializedMsg = kafkaRecord.value;\n-    if (serializedMsg is byte[]) {\n-        string|error msg = strings:fromBytes(serializedMsg);\n-        if (msg is string) {\n-            // Print the retrieved Kafka record.\n-            io:println(\"Topic: \", kafkaRecord.topic, \" Partition: \",\n-                kafkaRecord.partition.toString(), \" Received Message: \", msg);\n-        } else {\n-            log:printError(\"Error occurred while converting message data\", msg);\n-        }\n+    anydata message = kafkaRecord.value;\n+    if (message is string) {\n+        // Print the retrieved Kafka record.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MjEzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398442138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Here is an example of kafka consumer used as a listener to listen to a given\n          \n          \n            \n            // Here, is an example of a Kafka consumer used as a listener to listen to a given", "author": "praneesha", "createdAt": "2020-03-26T09:51:52Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.description", "diffHunk": "@@ -1,2 +1,4 @@\n-// Here is an example in which we create a Kafka consumer group/group\n-// of concurrent consumers within a service.\n+// Here is an example of kafka consumer used as a listener to listen to a given", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MjI5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398442296", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // topic / topics. The listener uses group of concurrent consumers within the\n          \n          \n            \n            // topic/topics. The listener uses a group of concurrent consumers within the", "author": "praneesha", "createdAt": "2020-03-26T09:52:06Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.description", "diffHunk": "@@ -1,2 +1,4 @@\n-// Here is an example in which we create a Kafka consumer group/group\n-// of concurrent consumers within a service.\n+// Here is an example of kafka consumer used as a listener to listen to a given\n+// topic / topics. The listener uses group of concurrent consumers within the", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MjUwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398442507", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To these example to work properly, an active kafka broker should be present.\n          \n          \n            \n            # For this example to work properly, an active Kafka broker should be present.", "author": "praneesha", "createdAt": "2020-03-26T09:52:28Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MjYzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398442632", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If the listener started successfully, following lines will be printed in the console.\n          \n          \n            \n            # If the listener started successfully, the following lines will be printed in the Console.", "author": "praneesha", "createdAt": "2020-03-26T09:52:40Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_consumer_group_service.bal\n+\n+# If the listener started successfully, following lines will be printed in the console.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0Mjc3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398442777", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `bootstrapServers` is the list of remote server endpoints of the Kafka\n          \n          \n            \n                // The `bootstrapServers` is the list of remote server endpoints of the Kafka", "author": "praneesha", "createdAt": "2020-03-26T09:52:52Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MjkwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398442901", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Subscribes to the topic \"test-kafka-topic.\n          \n          \n            \n                // Subscribes to the `test-kafka-topic`.", "author": "praneesha", "createdAt": "2020-03-26T09:53:04Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MzI3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398443272", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Using default int deserializer for the keys.\n          \n          \n            \n                // Using the default int deserializer for the keys.", "author": "praneesha", "createdAt": "2020-03-26T09:53:36Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"],\n     pollingIntervalInMillis: 1000,\n+    // Using default int deserializer for the keys.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MzQ2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398443467", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Using default string deserializer for the values.\n          \n          \n            \n                // Using the default string deserializer for the values.", "author": "praneesha", "createdAt": "2020-03-26T09:53:53Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"],\n     pollingIntervalInMillis: 1000,\n+    // Using default int deserializer for the keys.\n+    keyDeserializerType: kafka:DES_INT,\n+    // Using default string deserializer for the values.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MzYzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398443638", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Set auto.commit to false, so the records should be manually committed.\n          \n          \n            \n                // Set `auto.commit` to false so that the records should be committed manually.", "author": "praneesha", "createdAt": "2020-03-26T09:54:09Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"],\n     pollingIntervalInMillis: 1000,\n+    // Using default int deserializer for the keys.\n+    keyDeserializerType: kafka:DES_INT,\n+    // Using default string deserializer for the values.\n+    valueDeserializerType: kafka:DES_STRING,\n+    // Set auto.commit to false, so the records should be manually committed.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0Mzc0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398443748", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // subscribed topic / topics.\n          \n          \n            \n                // subscribed topic/topics.", "author": "praneesha", "createdAt": "2020-03-26T09:54:20Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"],\n     pollingIntervalInMillis: 1000,\n+    // Using default int deserializer for the keys.\n+    keyDeserializerType: kafka:DES_INT,\n+    // Using default string deserializer for the values.\n+    valueDeserializerType: kafka:DES_STRING,\n+    // Set auto.commit to false, so the records should be manually committed.\n     autoCommit: false\n };\n \n listener kafka:Consumer consumer = new (consumerConfigs);\n \n service kafkaService on consumer {\n-\n+    // This resource will be executed when a message is published to the\n+    // subscribed topic / topics.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0Mzg1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398443856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // The set of Kafka records dispatched to the service processed one by\n          \n          \n            \n                    // The set of Kafka records dispatched to the service are processed one by", "author": "praneesha", "createdAt": "2020-03-26T09:54:30Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"],\n     pollingIntervalInMillis: 1000,\n+    // Using default int deserializer for the keys.\n+    keyDeserializerType: kafka:DES_INT,\n+    // Using default string deserializer for the values.\n+    valueDeserializerType: kafka:DES_STRING,\n+    // Set auto.commit to false, so the records should be manually committed.\n     autoCommit: false\n };\n \n listener kafka:Consumer consumer = new (consumerConfigs);\n \n service kafkaService on consumer {\n-\n+    // This resource will be executed when a message is published to the\n+    // subscribed topic / topics.\n     resource function onMessage(kafka:Consumer kafkaConsumer,\n             kafka:ConsumerRecord[] records) {\n-        // The set of Kafka records dispatched to the service processed one by one.\n+        // The set of Kafka records dispatched to the service processed one by", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NDA1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398444058", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // The set of Kafka records dispatched to the service processed one by one.\n          \n          \n            \n                    // The set of Kafka records dispatched to the service are processed one by one.", "author": "praneesha", "createdAt": "2020-03-26T09:54:51Z", "path": "examples/kafka_message_consumer_group_service/kafka_message_consumer_group_service.bal", "diffHunk": "@@ -1,22 +1,27 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n+    // Using two concurrent consumers to work as a group.\n     concurrentConsumers: 2,\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic\".\n     topics: [\"test-kafka-topic\"],\n-    pollingIntervalInMillis: 1000\n+    pollingIntervalInMillis: 1000,\n+    // using default string deserializer to deserialize the kafka value.\n+    valueDeserializerType: kafka:DES_STRING\n };\n \n listener kafka:Consumer consumer = new (consumerConfigs);\n \n service kafkaService on consumer {\n+    // This resource executes when a message or a set of messages published\n+    // to the subscribed topic / topics.\n     resource function onMessage(kafka:Consumer kafkaConsumer,\n-            kafka:ConsumerRecord[] records) {\n+        kafka:ConsumerRecord[] records) {\n         // The set of Kafka records dispatched to the service processed one by one.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NDM0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398444346", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Commit offsets returned for returned records by marking them as\n          \n          \n            \n                    // Commit offsets are returned for returned records by marking them as", "author": "praneesha", "createdAt": "2020-03-26T09:55:17Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -1,28 +1,36 @@\n-import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n kafka:ConsumerConfiguration consumerConfigs = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"],\n     pollingIntervalInMillis: 1000,\n+    // Using default int deserializer for the keys.\n+    keyDeserializerType: kafka:DES_INT,\n+    // Using default string deserializer for the values.\n+    valueDeserializerType: kafka:DES_STRING,\n+    // Set auto.commit to false, so the records should be manually committed.\n     autoCommit: false\n };\n \n listener kafka:Consumer consumer = new (consumerConfigs);\n \n service kafkaService on consumer {\n-\n+    // This resource will be executed when a message is published to the\n+    // subscribed topic / topics.\n     resource function onMessage(kafka:Consumer kafkaConsumer,\n             kafka:ConsumerRecord[] records) {\n-        // The set of Kafka records dispatched to the service processed one by one.\n+        // The set of Kafka records dispatched to the service processed one by\n+        // one.\n         foreach var kafkaRecord in records {\n             processKafkaRecord(kafkaRecord);\n         }\n-        // Commit offsets returned for returned records by marking them as consumed.\n+        // Commit offsets returned for returned records by marking them as", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NTE0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398445148", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Value should be a `string`, since we use string deserializer sor value.\n          \n          \n            \n                // The value should be a `string` since a string deserializer is used for the value.", "author": "praneesha", "createdAt": "2020-03-26T09:56:25Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -32,17 +40,21 @@ service kafkaService on consumer {\n }\n \n function processKafkaRecord(kafka:ConsumerRecord kafkaRecord) {\n-    anydata serializedMsg = kafkaRecord.value;\n-    if (serializedMsg is byte[]) {\n-        string|error msg = strings:fromBytes(serializedMsg);\n-        if (msg is string) {\n-            // Print the retrieved Kafka record.\n-            io:println(\"Topic: \", kafkaRecord.topic, \" Partition: \",\n-                kafkaRecord.partition.toString(), \" Received Message: \", msg);\n+    anydata value = kafkaRecord.value;\n+    anydata key = kafkaRecord.key;\n+    // Value should be a `string`, since we use string deserializer sor value.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NTU5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398445596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Key should be an `int`, since we use int deserializer for key.\n          \n          \n            \n                    // The key should be an `int` since an int deserializer is used for the key.", "author": "praneesha", "createdAt": "2020-03-26T09:57:07Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -32,17 +40,21 @@ service kafkaService on consumer {\n }\n \n function processKafkaRecord(kafka:ConsumerRecord kafkaRecord) {\n-    anydata serializedMsg = kafkaRecord.value;\n-    if (serializedMsg is byte[]) {\n-        string|error msg = strings:fromBytes(serializedMsg);\n-        if (msg is string) {\n-            // Print the retrieved Kafka record.\n-            io:println(\"Topic: \", kafkaRecord.topic, \" Partition: \",\n-                kafkaRecord.partition.toString(), \" Received Message: \", msg);\n+    anydata value = kafkaRecord.value;\n+    anydata key = kafkaRecord.key;\n+    // Value should be a `string`, since we use string deserializer sor value.\n+    if (value is string) {\n+        // Key should be an `int`, since we use int deserializer for key.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NTcyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398445725", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Print the received kafka record\n          \n          \n            \n                        // Prints the received Kafka record.", "author": "praneesha", "createdAt": "2020-03-26T09:57:19Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.bal", "diffHunk": "@@ -32,17 +40,21 @@ service kafkaService on consumer {\n }\n \n function processKafkaRecord(kafka:ConsumerRecord kafkaRecord) {\n-    anydata serializedMsg = kafkaRecord.value;\n-    if (serializedMsg is byte[]) {\n-        string|error msg = strings:fromBytes(serializedMsg);\n-        if (msg is string) {\n-            // Print the retrieved Kafka record.\n-            io:println(\"Topic: \", kafkaRecord.topic, \" Partition: \",\n-                kafkaRecord.partition.toString(), \" Received Message: \", msg);\n+    anydata value = kafkaRecord.value;\n+    anydata key = kafkaRecord.key;\n+    // Value should be a `string`, since we use string deserializer sor value.\n+    if (value is string) {\n+        // Key should be an `int`, since we use int deserializer for key.\n+        if (key is int) {\n+            // Print the received kafka record", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NTg5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398445895", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Here is an example in which we create a Kafka consumer used as a listener\n          \n          \n            \n            // Here, is an example in which we create a Kafka consumer used as a listener", "author": "praneesha", "createdAt": "2020-03-26T09:57:34Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.description", "diffHunk": "@@ -1,2 +1,4 @@\n-// Here is an example in which we create a Kafka consumer service\n-// with manual offset commits.\n+// Here is an example in which we create a Kafka consumer used as a listener", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjAwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398446006", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // to a service, with manual offset commits.\n          \n          \n            \n            // to a service with manual offset commits.", "author": "praneesha", "createdAt": "2020-03-26T09:57:43Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.description", "diffHunk": "@@ -1,2 +1,4 @@\n-// Here is an example in which we create a Kafka consumer service\n-// with manual offset commits.\n+// Here is an example in which we create a Kafka consumer used as a listener\n+// to a service, with manual offset commits.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjEwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398446103", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // This consumer uses the builtin `int` deserializer for the keys, and the\n          \n          \n            \n            // This consumer uses the builtin `int` deserializer for the keys and the", "author": "praneesha", "createdAt": "2020-03-26T09:57:51Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.description", "diffHunk": "@@ -1,2 +1,4 @@\n-// Here is an example in which we create a Kafka consumer service\n-// with manual offset commits.\n+// Here is an example in which we create a Kafka consumer used as a listener\n+// to a service, with manual offset commits.\n+// This consumer uses the builtin `int` deserializer for the keys, and the", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjI2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398446265", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To these example to work properly, an active kafka broker should be present.\n          \n          \n            \n            # For this example to work properly, an active Kafka broker should be present.", "author": "praneesha", "createdAt": "2020-03-26T09:58:05Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjM2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398446366", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If the listener started successfully, following lines will be printed in the console.\n          \n          \n            \n            # If the listener started successfully, the following lines will be printed in the Console.", "author": "praneesha", "createdAt": "2020-03-26T09:58:14Z", "path": "examples/kafka_message_consumer_service/kafka_message_consumer_service.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_consumer_service.bal\n+\n+# If the listener started successfully, following lines will be printed in the console.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzODcyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398538727", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `bootstrapServers` is the list of remote server endpoints of the Kafka\n          \n          \n            \n                // The `bootstrapServers` is the list of remote server endpoints of the Kafka", "author": "praneesha", "createdAt": "2020-03-26T12:38:43Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.bal", "diffHunk": "@@ -1,38 +1,43 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n+import ballerina/lang.'string;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n-kafka:ConsumerConfiguration consumerConfigs = {\n+kafka:ConsumerConfiguration consumerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzODg5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398538893", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Subscribes to the topic \"test-kafka-topic.\n          \n          \n            \n                // Subscribes to the `test-kafka-topic`.", "author": "praneesha", "createdAt": "2020-03-26T12:38:55Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.bal", "diffHunk": "@@ -1,38 +1,43 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n+import ballerina/lang.'string;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n-kafka:ConsumerConfiguration consumerConfigs = {\n+kafka:ConsumerConfiguration consumerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n     offsetReset: \"earliest\",\n+    // Subscribes to the topic \"test-kafka-topic.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzODk1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398538953", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Convert byte[] to string.\n          \n          \n            \n                        // Converts byte[] to string.", "author": "praneesha", "createdAt": "2020-03-26T12:39:04Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.bal", "diffHunk": "@@ -1,38 +1,43 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n+import ballerina/lang.'string;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n-kafka:ConsumerConfiguration consumerConfigs = {\n+kafka:ConsumerConfiguration consumerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n     offsetReset: \"earliest\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"]\n };\n \n-kafka:Consumer consumer = new (consumerConfigs);\n+kafka:Consumer consumer = new (consumerConfiguration);\n \n public function main() {\n     // Poll the consumer for messages.\n     var results = consumer->poll(1000);\n     if (results is error) {\n         log:printError(\"Error occurred while polling \", results);\n-    } else {\n-        foreach var kafkaRecord in results {\n-            anydata serializedMsg = kafkaRecord.value;\n-            if (serializedMsg is byte[]) {\n-                // Convert byte[] to string.\n-                string|error msg = strings:fromBytes(serializedMsg);\n-                if (msg is string) {\n-                    // Print the retrieved Kafka record.\n-                    io:println(\"Topic: \", kafkaRecord.topic, \" Received Message: \", msg);\n-                } else {\n-                    log:printError(\"Error occurred while converting message data\", msg);\n-                }\n+    }\n+    kafka:ConsumerRecord[] records = <kafka:ConsumerRecord[]>results;\n+    foreach var kafkaRecord in records {\n+        anydata serializedMessage = kafkaRecord.value;\n+        if (serializedMessage is byte[]) {\n+            // Convert byte[] to string.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTAzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398539038", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // Print the retrieved Kafka record.\n          \n          \n            \n                            // Prints the retrieved Kafka record.", "author": "praneesha", "createdAt": "2020-03-26T12:39:11Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.bal", "diffHunk": "@@ -1,38 +1,43 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/lang.'string as strings;\n+import ballerina/lang.'string;\n import ballerina/log;\n \n-// `bootstrapServers` is the list of remote server endpoints of the Kafka brokers.\n-kafka:ConsumerConfiguration consumerConfigs = {\n+kafka:ConsumerConfiguration consumerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     groupId: \"group-id\",\n     offsetReset: \"earliest\",\n+    // Subscribes to the topic \"test-kafka-topic.\n     topics: [\"test-kafka-topic\"]\n };\n \n-kafka:Consumer consumer = new (consumerConfigs);\n+kafka:Consumer consumer = new (consumerConfiguration);\n \n public function main() {\n     // Poll the consumer for messages.\n     var results = consumer->poll(1000);\n     if (results is error) {\n         log:printError(\"Error occurred while polling \", results);\n-    } else {\n-        foreach var kafkaRecord in results {\n-            anydata serializedMsg = kafkaRecord.value;\n-            if (serializedMsg is byte[]) {\n-                // Convert byte[] to string.\n-                string|error msg = strings:fromBytes(serializedMsg);\n-                if (msg is string) {\n-                    // Print the retrieved Kafka record.\n-                    io:println(\"Topic: \", kafkaRecord.topic, \" Received Message: \", msg);\n-                } else {\n-                    log:printError(\"Error occurred while converting message data\", msg);\n-                }\n+    }\n+    kafka:ConsumerRecord[] records = <kafka:ConsumerRecord[]>results;\n+    foreach var kafkaRecord in records {\n+        anydata serializedMessage = kafkaRecord.value;\n+        if (serializedMessage is byte[]) {\n+            // Convert byte[] to string.\n+            string|error message = 'string:fromBytes(serializedMessage);\n+            if (message is string) {\n+                // Print the retrieved Kafka record.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTM0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398539342", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // consumer. Using the `poll()` function, the records from a subscribed topic\n          \n          \n            \n            // consumer. The records from a subscribed topic", "author": "praneesha", "createdAt": "2020-03-26T12:39:44Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.description", "diffHunk": "@@ -1 +1,5 @@\n-// Here is an example in which we create a Kafka consumer service.\n+// This is an example on how to use a `kafka:Consumer` as a simple record\n+// consumer. Using the `poll()` function, the records from a subscribed topic", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTQ2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398539468", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // can be retrieved.\n          \n          \n            \n            // can be retrieved by using the `poll()` function.", "author": "praneesha", "createdAt": "2020-03-26T12:39:57Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.description", "diffHunk": "@@ -1 +1,5 @@\n-// Here is an example in which we create a Kafka consumer service.\n+// This is an example on how to use a `kafka:Consumer` as a simple record\n+// consumer. Using the `poll()` function, the records from a subscribed topic\n+// can be retrieved.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTU5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398539598", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // This consumer uses builtin byte array deserializer for both the key and the\n          \n          \n            \n            // This consumer uses the builtin byte array deserializer for both the key and the", "author": "praneesha", "createdAt": "2020-03-26T12:40:11Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.description", "diffHunk": "@@ -1 +1,5 @@\n-// Here is an example in which we create a Kafka consumer service.\n+// This is an example on how to use a `kafka:Consumer` as a simple record\n+// consumer. Using the `poll()` function, the records from a subscribed topic\n+// can be retrieved.\n+// This consumer uses builtin byte array deserializer for both the key and the", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTY5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398539690", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // value, which is the default deserializer in `kafka:Consumer`.\n          \n          \n            \n            // value, which is the default deserializer in the `kafka:Consumer`.", "author": "praneesha", "createdAt": "2020-03-26T12:40:19Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.description", "diffHunk": "@@ -1 +1,5 @@\n-// Here is an example in which we create a Kafka consumer service.\n+// This is an example on how to use a `kafka:Consumer` as a simple record\n+// consumer. Using the `poll()` function, the records from a subscribed topic\n+// can be retrieved.\n+// This consumer uses builtin byte array deserializer for both the key and the\n+// value, which is the default deserializer in `kafka:Consumer`.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTg0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398539845", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To these example to work properly, an active kafka broker should be present.\n          \n          \n            \n            # For this example to work properly, an active Kafka broker should be present.", "author": "praneesha", "createdAt": "2020-03-26T12:40:35Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MDI2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398540264", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Then it will print the following lines to the console, and prints the\n          \n          \n            \n            # Then it will print the following lines in the Console and the", "author": "praneesha", "createdAt": "2020-03-26T12:41:19Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_consumer_simple.bal\n+\n+# Then it will print the following lines to the console, and prints the", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MDMzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398540333", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # received messages, if there's any.\n          \n          \n            \n            # received messages if there's any.", "author": "praneesha", "createdAt": "2020-03-26T12:41:26Z", "path": "examples/kafka_message_consumer_simple/kafka_message_consumer_simple.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_consumer_simple.bal\n+\n+# Then it will print the following lines to the console, and prints the\n+# received messages, if there's any.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MDUzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398540532", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `bootstrapServers` is the list of remote server endpoints of the Kafka\n          \n          \n            \n                // The `bootstrapServers` is the list of remote server endpoints of the Kafka", "author": "praneesha", "createdAt": "2020-03-26T12:41:45Z", "path": "examples/kafka_message_producer/kafka_message_producer.bal", "diffHunk": "@@ -1,30 +1,33 @@\n+import ballerina/io;\n import ballerina/kafka;\n-import ballerina/log;\n \n-kafka:ProducerConfiguration producerConfigs = {\n-    // Here, we create the configs of a producer with optional parameters.\n-    // client.id - used for broker-side logging.\n-    // `acks` - number of acknowledgments to complete the request.\n-    // `noRetries` - number of retries if record sending fails.\n-    // `bootstrapServers` is the list of remote server endpoints of\n-    // the Kafka brokers\n+kafka:ProducerConfiguration producerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MDY1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398540656", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Use builtin string serializer for the values.\n          \n          \n            \n                // Uses the builtin string serializer for the values.", "author": "praneesha", "createdAt": "2020-03-26T12:41:56Z", "path": "examples/kafka_message_producer/kafka_message_producer.bal", "diffHunk": "@@ -1,30 +1,33 @@\n+import ballerina/io;\n import ballerina/kafka;\n-import ballerina/log;\n \n-kafka:ProducerConfiguration producerConfigs = {\n-    // Here, we create the configs of a producer with optional parameters.\n-    // client.id - used for broker-side logging.\n-    // `acks` - number of acknowledgments to complete the request.\n-    // `noRetries` - number of retries if record sending fails.\n-    // `bootstrapServers` is the list of remote server endpoints of\n-    // the Kafka brokers\n+kafka:ProducerConfiguration producerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     clientId: \"basic-producer\",\n     acks: \"all\",\n-    retryCount: 3\n+    retryCount: 3,\n+    // Use builtin string serializer for the values.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MDcxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398540715", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Use builtin int serializer for the keys.\n          \n          \n            \n                // Use the builtin int serializer for the keys.", "author": "praneesha", "createdAt": "2020-03-26T12:42:03Z", "path": "examples/kafka_message_producer/kafka_message_producer.bal", "diffHunk": "@@ -1,30 +1,33 @@\n+import ballerina/io;\n import ballerina/kafka;\n-import ballerina/log;\n \n-kafka:ProducerConfiguration producerConfigs = {\n-    // Here, we create the configs of a producer with optional parameters.\n-    // client.id - used for broker-side logging.\n-    // `acks` - number of acknowledgments to complete the request.\n-    // `noRetries` - number of retries if record sending fails.\n-    // `bootstrapServers` is the list of remote server endpoints of\n-    // the Kafka brokers\n+kafka:ProducerConfiguration producerConfiguration = {\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     clientId: \"basic-producer\",\n     acks: \"all\",\n-    retryCount: 3\n+    retryCount: 3,\n+    // Use builtin string serializer for the values.\n+    valueSerializerType: kafka:SER_STRING,\n+    // Use builtin int serializer for the keys.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTE2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398541163", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To these example to work properly, an active kafka broker should be present.\n          \n          \n            \n            # For this example to work properly, an active Kafka broker should be present.", "author": "praneesha", "createdAt": "2020-03-26T12:42:47Z", "path": "examples/kafka_message_producer/kafka_message_producer.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTMzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398541338", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If the producer successfully sent the message, following will be printed in\n          \n          \n            \n            # If the producer successfully sent the message, the following will be printed in", "author": "praneesha", "createdAt": "2020-03-26T12:42:58Z", "path": "examples/kafka_message_producer/kafka_message_producer.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_producer_simple.bal\n+\n+# If the producer successfully sent the message, following will be printed in", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTQ0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398541443", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # the console.\n          \n          \n            \n            # the Console.", "author": "praneesha", "createdAt": "2020-03-26T12:43:08Z", "path": "examples/kafka_message_producer/kafka_message_producer.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_producer_simple.bal\n+\n+# If the producer successfully sent the message, following will be printed in\n+# the console.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTUyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398541520", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Message sent successfully\n          \n          \n            \n            Message sent successfully.", "author": "praneesha", "createdAt": "2020-03-26T12:43:14Z", "path": "examples/kafka_message_producer/kafka_message_producer.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_producer_simple.bal\n+\n+# If the producer successfully sent the message, following will be printed in\n+# the console.\n+Message sent successfully", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTY2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398541668", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Records been flushed successfully\n          \n          \n            \n            Records been flushed successfully\n          \n      \n    \n    \n  \n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Records been flushed successfully\n          \n          \n            \n            Records were flushed successfully.", "author": "praneesha", "createdAt": "2020-03-26T12:43:28Z", "path": "examples/kafka_message_producer/kafka_message_producer.out", "diffHunk": "@@ -1,3 +1,9 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run kafka_message_producer_simple.bal\n+\n+# If the producer successfully sent the message, following will be printed in\n+# the console.\n+Message sent successfully\n+Records been flushed successfully", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjA3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542079", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `bootstrapServers` is the list of remote server endpoints of the Kafka\n          \n          \n            \n                // The `bootstrapServers` is the list of remote server endpoints of the Kafka", "author": "praneesha", "createdAt": "2020-03-26T12:44:06Z", "path": "examples/kafka_message_producer_transactional/kafka_message_producer_transactional.bal", "diffHunk": "@@ -1,37 +1,38 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/log;\n \n kafka:ProducerConfiguration producerConfigs = {\n-    // Here, we create a producer config with optional parameters.\n-    // client.id - used for broker-side logging.\n-    // `acks` - number of acknowledgments to complete the request.\n-    // `noRetries` - number of retries if record sending fails.\n-    // `bootstrapServers` is the list of remote server endpoints of the Kafka brokers\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjIwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542202", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `enableIdempotence` should set to `true` to make a producer\n          \n          \n            \n                // The `enableIdempotence` should set to `true` to make a producer", "author": "praneesha", "createdAt": "2020-03-26T12:44:17Z", "path": "examples/kafka_message_producer_transactional/kafka_message_producer_transactional.bal", "diffHunk": "@@ -1,37 +1,38 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/log;\n \n kafka:ProducerConfiguration producerConfigs = {\n-    // Here, we create a producer config with optional parameters.\n-    // client.id - used for broker-side logging.\n-    // `acks` - number of acknowledgments to complete the request.\n-    // `noRetries` - number of retries if record sending fails.\n-    // `bootstrapServers` is the list of remote server endpoints of the Kafka brokers\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     clientId: \"basic-producer\",\n     acks: \"all\",\n     retryCount: 3,\n+    // `enableIdempotence` should set to `true` to make a producer", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjI5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542291", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // a `transactionalId` must be provided to make a producer transactional.\n          \n          \n            \n                // A `transactionalId` must be provided to make a producer transactional.", "author": "praneesha", "createdAt": "2020-03-26T12:44:26Z", "path": "examples/kafka_message_producer_transactional/kafka_message_producer_transactional.bal", "diffHunk": "@@ -1,37 +1,38 @@\n import ballerina/io;\n import ballerina/kafka;\n-import ballerina/log;\n \n kafka:ProducerConfiguration producerConfigs = {\n-    // Here, we create a producer config with optional parameters.\n-    // client.id - used for broker-side logging.\n-    // `acks` - number of acknowledgments to complete the request.\n-    // `noRetries` - number of retries if record sending fails.\n-    // `bootstrapServers` is the list of remote server endpoints of the Kafka brokers\n+    // `bootstrapServers` is the list of remote server endpoints of the Kafka\n+    // brokers.\n     bootstrapServers: \"localhost:9092\",\n     clientId: \"basic-producer\",\n     acks: \"all\",\n     retryCount: 3,\n+    // `enableIdempotence` should set to `true` to make a producer\n+    // transactional.\n     enableIdempotence: true,\n+    // a `transactionalId` must be provided to make a producer transactional.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjU1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542557", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To these example to work properly, an active kafka broker should be present.\n          \n          \n            \n            # For this example to work properly, an active Kafka broker should be present.", "author": "praneesha", "createdAt": "2020-03-26T12:44:48Z", "path": "examples/kafka_message_producer_transactional/kafka_message_producer_transactional.out", "diffHunk": "@@ -1,3 +1,10 @@\n+# To these example to work properly, an active kafka broker should be present.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjY2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542669", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If the producer successfully sent the message, following will be printed in\n          \n          \n            \n            # If the producer successfully sent the message, the following will be printed in", "author": "praneesha", "createdAt": "2020-03-26T12:44:57Z", "path": "examples/kafka_message_producer_transactional/kafka_message_producer_transactional.out", "diffHunk": "@@ -1,3 +1,10 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run --experimental kafka_message_producer_transactional.bal\n+\n+# If the producer successfully sent the message, following will be printed in", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjcyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542721", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # the console.\n          \n          \n            \n            # the Console.", "author": "praneesha", "createdAt": "2020-03-26T12:45:03Z", "path": "examples/kafka_message_producer_transactional/kafka_message_producer_transactional.out", "diffHunk": "@@ -1,3 +1,10 @@\n+# To these example to work properly, an active kafka broker should be present.\n # To run this sample, navigate to the directory that contains the\n # `.bal` file, and execute the `ballerina run` command.\n $ ballerina run --experimental kafka_message_producer_transactional.bal\n+\n+# If the producer successfully sent the message, following will be printed in\n+# the console.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MjgyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542822", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason string for the `math:Error`\n          \n          \n            \n            # Represents the reason string for the `math:Error`.", "author": "praneesha", "createdAt": "2020-03-26T12:45:13Z", "path": "stdlib/math/src/main/ballerina/src/math/math_errors.bal", "diffHunk": "@@ -23,6 +23,8 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason string for the `math:Error`", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0Mjk0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398542949", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents an error occurred in `math` operaion.\n          \n          \n            \n            # Represents an error occurred in the `math` operation.", "author": "praneesha", "createdAt": "2020-03-26T12:45:25Z", "path": "stdlib/math/src/main/ballerina/src/math/math_errors.bal", "diffHunk": "@@ -23,6 +23,8 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason string for the `math:Error`\n public const ARITHMETIC_ERROR = \"{ballerina/math}Error\";\n \n+# Represents an error occurred in `math` operaion.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MzE2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398543169", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + configurations - The `task:TimerConfiguration` or a `task:AppointmentConfiguration` record to define the\n          \n          \n            \n                # + configurations - A`task:TimerConfiguration` or `task:AppointmentConfiguration` record to define the", "author": "praneesha", "createdAt": "2020-03-26T12:45:47Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -24,19 +24,29 @@ public type Listener object {\n \n     private TimerConfiguration|AppointmentConfiguration listenerConfiguration;\n \n-    public function __init(TimerConfiguration|AppointmentConfiguration configs) {\n-        if (configs is TimerConfiguration) {\n-            if (configs[\"initialDelayInMillis\"] == ()) {\n-                configs.initialDelayInMillis = configs.intervalInMillis;\n+    # Initializes the `task:Listener` object. This may panic if the initialization is failed due to a configuration\n+    # error.\n+    #\n+    # + configurations - The `task:TimerConfiguration` or a `task:AppointmentConfiguration` record to define the", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MzI5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398543294", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Attaches the given `service` to the `task:Listener`. This may panic if the service attachment is failed.\n          \n          \n            \n                # Attaches the given `service` to the `task:Listener`. This may panic if the service attachment fails.", "author": "praneesha", "createdAt": "2020-03-26T12:46:01Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -24,19 +24,29 @@ public type Listener object {\n \n     private TimerConfiguration|AppointmentConfiguration listenerConfiguration;\n \n-    public function __init(TimerConfiguration|AppointmentConfiguration configs) {\n-        if (configs is TimerConfiguration) {\n-            if (configs[\"initialDelayInMillis\"] == ()) {\n-                configs.initialDelayInMillis = configs.intervalInMillis;\n+    # Initializes the `task:Listener` object. This may panic if the initialization is failed due to a configuration\n+    # error.\n+    #\n+    # + configurations - The `task:TimerConfiguration` or a `task:AppointmentConfiguration` record to define the\n+    # `task:Listener` behavior\n+    public function __init(TimerConfiguration|AppointmentConfiguration configurations) {\n+        if (configurations is TimerConfiguration) {\n+            if (configurations[\"initialDelayInMillis\"] == ()) {\n+                configurations.initialDelayInMillis = configurations.intervalInMillis;\n             }\n         }\n-        self.listenerConfiguration = configs;\n+        self.listenerConfiguration = configurations;\n         var result = initExternal(self);\n         if (result is ListenerError) {\n             panic result;\n         }\n     }\n \n+    # Attaches the given `service` to the `task:Listener`. This may panic if the service attachment is failed.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MzQzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398543433", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Returns nil, if the attaching the service is successfull\n          \n          \n            \n                # + return - Returns nil if the attaching the service is successful", "author": "praneesha", "createdAt": "2020-03-26T12:46:19Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -24,19 +24,29 @@ public type Listener object {\n \n     private TimerConfiguration|AppointmentConfiguration listenerConfiguration;\n \n-    public function __init(TimerConfiguration|AppointmentConfiguration configs) {\n-        if (configs is TimerConfiguration) {\n-            if (configs[\"initialDelayInMillis\"] == ()) {\n-                configs.initialDelayInMillis = configs.intervalInMillis;\n+    # Initializes the `task:Listener` object. This may panic if the initialization is failed due to a configuration\n+    # error.\n+    #\n+    # + configurations - The `task:TimerConfiguration` or a `task:AppointmentConfiguration` record to define the\n+    # `task:Listener` behavior\n+    public function __init(TimerConfiguration|AppointmentConfiguration configurations) {\n+        if (configurations is TimerConfiguration) {\n+            if (configurations[\"initialDelayInMillis\"] == ()) {\n+                configurations.initialDelayInMillis = configurations.intervalInMillis;\n             }\n         }\n-        self.listenerConfiguration = configs;\n+        self.listenerConfiguration = configurations;\n         var result = initExternal(self);\n         if (result is ListenerError) {\n             panic result;\n         }\n     }\n \n+    # Attaches the given `service` to the `task:Listener`. This may panic if the service attachment is failed.\n+    #\n+    # + s - Service to attach to the listener\n+    # + name - Name of the service\n+    # + return - Returns nil, if the attaching the service is successfull", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NDMxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398544317", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Return nil, if the detaching the service is successfull\n          \n          \n            \n                # + return - Return nil if the detaching the service is successful", "author": "praneesha", "createdAt": "2020-03-26T12:47:45Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -45,10 +55,18 @@ public type Listener object {\n         }\n     }\n \n+    # Detaches the given `service` from the `task:Listener`.\n+    #\n+    # + s - Service to be detached from the listener\n+    # + return - Return nil, if the detaching the service is successfull", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NDY0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398544643", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Returns nil, if the strating the services successfull\n          \n          \n            \n                # + return - Returns nil if starting the services is successful", "author": "praneesha", "createdAt": "2020-03-26T12:48:16Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -45,10 +55,18 @@ public type Listener object {\n         }\n     }\n \n+    # Detaches the given `service` from the `task:Listener`.\n+    #\n+    # + s - Service to be detached from the listener\n+    # + return - Return nil, if the detaching the service is successfull\n     public function __detach(service s) returns error? {\n         return detachExternal(self, s);\n     }\n \n+    # Starts dispatching the services attached to the `task:Listener`. This may panic if the service dispatching causes\n+    # any error.\n+    #\n+    # + return - Returns nil, if the strating the services successfull", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NDg1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398544853", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Returns nil, if the stopping the listener successfull\n          \n          \n            \n                # + return - Returns nil if stopping the listener is successful", "author": "praneesha", "createdAt": "2020-03-26T12:48:36Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -59,6 +77,10 @@ public type Listener object {\n         }\n     }\n \n+    # Gracefully stops the `task:Listener` and the attached services. It will wait if there are any tasks still to be\n+    # completed. This may panic if the stopping causes any error.\n+    #\n+    # + return - Returns nil, if the stopping the listener successfull", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTIwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398545202", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Immediately stops the `task:Listener` and the attached services. This will cancel any ongoing tasks. This may\n          \n          \n            \n                # Stops the `task:Listener` and the attached services immediately. This will cancel any ongoing tasks. This may", "author": "praneesha", "createdAt": "2020-03-26T12:49:07Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -69,6 +91,10 @@ public type Listener object {\n         }\n     }\n \n+    # Immediately stops the `task:Listener` and the attached services. This will cancel any ongoing tasks. This may", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTI4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398545288", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Returns nil, if the stopping the listener successfull\n          \n          \n            \n                # + return - Returns nil if the stopping the listener successful", "author": "praneesha", "createdAt": "2020-03-26T12:49:16Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -69,6 +91,10 @@ public type Listener object {\n         }\n     }\n \n+    # Immediately stops the `task:Listener` and the attached services. This will cancel any ongoing tasks. This may\n+    # panic if the stopping causes any error.\n+    #\n+    # + return - Returns nil, if the stopping the listener successfull", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTUwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398545508", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise\n          \n          \n            \n                # + return - Returns `task:ListenerError` if an error occurred while resuming or nil otherwise", "author": "praneesha", "createdAt": "2020-03-26T12:49:39Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -83,16 +109,16 @@ public type Listener object {\n         return self.started;\n     }\n \n-    # Pauses the task listener.\n+    # Pauses the `task:Listener` and the attached services.\n     #\n-    # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise.\n+    # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTYzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398545633", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Resumes a paused `task:Listener`. Calling this on already running `task:Listener` will not cause any error.\n          \n          \n            \n                # Resumes a paused `task:Listener`. Calling this on an already running `task:Listener` will not cause any error.", "author": "praneesha", "createdAt": "2020-03-26T12:49:50Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -83,16 +109,16 @@ public type Listener object {\n         return self.started;\n     }\n \n-    # Pauses the task listener.\n+    # Pauses the `task:Listener` and the attached services.\n     #\n-    # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise.\n+    # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise\n     public function pause() returns ListenerError? {\n         return pauseExternal(self);\n     }\n \n-    # Resumes a paused task listener.\n+    # Resumes a paused `task:Listener`. Calling this on already running `task:Listener` will not cause any error.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTgyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398545824", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Returns `task:ListenerError` when an error occurred while pausing, nil Otherwise\n          \n          \n            \n                # + return - Returns `task:ListenerError` when an error occurred while pausing or nil otherwise", "author": "praneesha", "createdAt": "2020-03-26T12:50:06Z", "path": "stdlib/task/src/main/ballerina/src/task/listener.bal", "diffHunk": "@@ -83,16 +109,16 @@ public type Listener object {\n         return self.started;\n     }\n \n-    # Pauses the task listener.\n+    # Pauses the `task:Listener` and the attached services.\n     #\n-    # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise.\n+    # + return - Returns `task:ListenerError` if an error is occurred while resuming, nil Otherwise\n     public function pause() returns ListenerError? {\n         return pauseExternal(self);\n     }\n \n-    # Resumes a paused task listener.\n+    # Resumes a paused `task:Listener`. Calling this on already running `task:Listener` will not cause any error.\n     #\n-    # + return - Returns `task:ListenerError` when an error occurred while pausing, nil Otherwise.\n+    # + return - Returns `task:ListenerError` when an error occurred while pausing, nil Otherwise", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NTk2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398545964", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Initializes a `task:Scheduler` object. This may panic if the initialization causes any error, due to\n          \n          \n            \n                # Initializes a `task:Scheduler` object. This may panic if the initialization causes any error due to", "author": "praneesha", "createdAt": "2020-03-26T12:50:19Z", "path": "stdlib/task/src/main/ballerina/src/task/scheduler.bal", "diffHunk": "@@ -18,8 +18,13 @@\n public type Scheduler object {\n     private Listener taskListener;\n \n-    public function __init(TimerConfiguration|AppointmentConfiguration configs) {\n-        self.taskListener = new(configs);\n+    # Initializes a `task:Scheduler` object. This may panic if the initialization causes any error, due to", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NjA0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398546040", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # configuration error.\n          \n          \n            \n                # a configuration error.", "author": "praneesha", "createdAt": "2020-03-26T12:50:27Z", "path": "stdlib/task/src/main/ballerina/src/task/scheduler.bal", "diffHunk": "@@ -18,8 +18,13 @@\n public type Scheduler object {\n     private Listener taskListener;\n \n-    public function __init(TimerConfiguration|AppointmentConfiguration configs) {\n-        self.taskListener = new(configs);\n+    # Initializes a `task:Scheduler` object. This may panic if the initialization causes any error, due to\n+    # configuration error.", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NjI0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22225#discussion_r398546248", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + configurations - The `task:TimerConfiguration` or a `task:AppointmentConfiguration` record to define the\n          \n          \n            \n                # + configurations - A `task:TimerConfiguration` or `task:AppointmentConfiguration` record to define the", "author": "praneesha", "createdAt": "2020-03-26T12:50:44Z", "path": "stdlib/task/src/main/ballerina/src/task/scheduler.bal", "diffHunk": "@@ -18,8 +18,13 @@\n public type Scheduler object {\n     private Listener taskListener;\n \n-    public function __init(TimerConfiguration|AppointmentConfiguration configs) {\n-        self.taskListener = new(configs);\n+    # Initializes a `task:Scheduler` object. This may panic if the initialization causes any error, due to\n+    # configuration error.\n+    #\n+    # + configurations - The `task:TimerConfiguration` or a `task:AppointmentConfiguration` record to define the", "originalCommit": "7e48500909cf8328f66219499f0f499372bbbf26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc5d7fe13831e5bf844867ecb37e34d77a1fe2de", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc5d7fe13831e5bf844867ecb37e34d77a1fe2de", "message": "Address the doc review suggestions", "committedDate": "2020-03-26T15:08:38Z", "type": "commit"}]}