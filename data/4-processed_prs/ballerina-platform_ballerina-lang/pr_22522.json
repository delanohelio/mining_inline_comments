{"pr_number": 22522, "pr_title": "Add caller actions for HTTP error status codes", "pr_createdAt": "2020-04-08T12:04:36Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22522", "timeline": [{"oid": "f1526684b85d2229b844551ee67051d47faf0df8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f1526684b85d2229b844551ee67051d47faf0df8", "message": "Add caller actions for HTTP error status codes", "committedDate": "2020-04-08T12:02:09Z", "type": "commit"}, {"oid": "d9be4ebdf4cd767e8986793fe2f83c994941384d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9be4ebdf4cd767e8986793fe2f83c994941384d", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into missed-actions", "committedDate": "2020-04-09T08:17:17Z", "type": "commit"}, {"oid": "d3430f802085132e0c0553d937f004b7e3b511fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3430f802085132e0c0553d937f004b7e3b511fc", "message": "Fix lang server test failure", "committedDate": "2020-04-09T12:09:37Z", "type": "commit"}, {"oid": "4fef8498cd76a9ca8fb2aa565c4b21679810e7bd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4fef8498cd76a9ca8fb2aa565c4b21679810e7bd", "message": "Fix docs with samples", "committedDate": "2020-04-15T06:03:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc5NjQ0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22522#discussion_r408796440", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `http:ListenerError` if failed to respond\n          \n          \n            \n            # + return - An `http:ListenerError` if failed to respond or else `()`", "author": "daneshk", "createdAt": "2020-04-15T12:16:52Z", "path": "stdlib/http/src/main/ballerina/src/http/http_connection.bal", "diffHunk": "@@ -172,6 +172,65 @@ public type Caller client object {\n         response.statusCode = STATUS_ACCEPTED;\n         return self->respond(response);\n     }\n+\n+# Sends the outbound response to the caller with the status 204 No Content. If the given response contains a body\n+# that will be removed.\n+# ```ballerina\n+# http:ListenerError? err = caller->noContent();\n+# ```\n+#\n+# + message - The outbound response, which is optional\n+# + return - An `http:ListenerError` if failed to respond", "originalCommit": "4fef8498cd76a9ca8fb2aa565c4b21679810e7bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc5NjkwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22522#discussion_r408796906", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `http:ListenerError` if failed to respond\n          \n          \n            \n            # + return - An `http:ListenerError` if failed to respond or else `()`", "author": "daneshk", "createdAt": "2020-04-15T12:17:43Z", "path": "stdlib/http/src/main/ballerina/src/http/http_connection.bal", "diffHunk": "@@ -172,6 +172,65 @@ public type Caller client object {\n         response.statusCode = STATUS_ACCEPTED;\n         return self->respond(response);\n     }\n+\n+# Sends the outbound response to the caller with the status 204 No Content. If the given response contains a body\n+# that will be removed.\n+# ```ballerina\n+# http:ListenerError? err = caller->noContent();\n+# ```\n+#\n+# + message - The outbound response, which is optional\n+# + return - An `http:ListenerError` if failed to respond\n+    public remote function noContent(Response? message = ()) returns ListenerError? {\n+        Response newResponse = new;\n+        if message is Response {\n+            newResponse = message;\n+        }\n+        newResponse.statusCode = STATUS_NO_CONTENT;\n+        return self->respond(newResponse);\n+    }\n+\n+# Sends the outbound response to the caller with the status 400 Bad Request.\n+# ```ballerina\n+# http:ListenerError? err = caller->badRequest();\n+# ```\n+#\n+# + message - The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `http:ListenerError` if failed to respond", "originalCommit": "4fef8498cd76a9ca8fb2aa565c4b21679810e7bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc5NzIyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22522#discussion_r408797224", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `http:ListenerError` if failed to respond\n          \n          \n            \n            # + return - An `http:ListenerError` if failed to respond or else `()`", "author": "daneshk", "createdAt": "2020-04-15T12:18:16Z", "path": "stdlib/http/src/main/ballerina/src/http/http_connection.bal", "diffHunk": "@@ -172,6 +172,65 @@ public type Caller client object {\n         response.statusCode = STATUS_ACCEPTED;\n         return self->respond(response);\n     }\n+\n+# Sends the outbound response to the caller with the status 204 No Content. If the given response contains a body\n+# that will be removed.\n+# ```ballerina\n+# http:ListenerError? err = caller->noContent();\n+# ```\n+#\n+# + message - The outbound response, which is optional\n+# + return - An `http:ListenerError` if failed to respond\n+    public remote function noContent(Response? message = ()) returns ListenerError? {\n+        Response newResponse = new;\n+        if message is Response {\n+            newResponse = message;\n+        }\n+        newResponse.statusCode = STATUS_NO_CONTENT;\n+        return self->respond(newResponse);\n+    }\n+\n+# Sends the outbound response to the caller with the status 400 Bad Request.\n+# ```ballerina\n+# http:ListenerError? err = caller->badRequest();\n+# ```\n+#\n+# + message - The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `http:ListenerError` if failed to respond\n+    public remote function badRequest(ResponseMessage message = ()) returns ListenerError? {\n+        Response response = buildResponse(message);\n+        response.statusCode = STATUS_BAD_REQUEST;\n+        return self->respond(response);\n+    }\n+\n+# Sends the outbound response to the caller with the status 404 Not Found.\n+# ```ballerina\n+# http:ListenerError? err = caller->notFound();\n+# ```\n+#\n+# + message - The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `http:ListenerError` if failed to respond\n+    public remote function notFound(ResponseMessage message = ()) returns ListenerError? {\n+        Response response = buildResponse(message);\n+        response.statusCode = STATUS_NOT_FOUND;\n+        return self->respond(response);\n+    }\n+\n+# Sends the outbound response to the caller with the status 500 Internal Server Error.\n+# ```ballerina\n+# http:ListenerError? err = caller->internalServerError();\n+# ```\n+#\n+# + message - The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `http:ListenerError` if failed to respond", "originalCommit": "4fef8498cd76a9ca8fb2aa565c4b21679810e7bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc5NzM3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22522#discussion_r408797372", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `http:ListenerError` if failed to respond\n          \n          \n            \n            # + return - An `http:ListenerError` if failed to respond or else `()`", "author": "daneshk", "createdAt": "2020-04-15T12:18:31Z", "path": "stdlib/http/src/main/ballerina/src/http/http_connection.bal", "diffHunk": "@@ -172,6 +172,65 @@ public type Caller client object {\n         response.statusCode = STATUS_ACCEPTED;\n         return self->respond(response);\n     }\n+\n+# Sends the outbound response to the caller with the status 204 No Content. If the given response contains a body\n+# that will be removed.\n+# ```ballerina\n+# http:ListenerError? err = caller->noContent();\n+# ```\n+#\n+# + message - The outbound response, which is optional\n+# + return - An `http:ListenerError` if failed to respond\n+    public remote function noContent(Response? message = ()) returns ListenerError? {\n+        Response newResponse = new;\n+        if message is Response {\n+            newResponse = message;\n+        }\n+        newResponse.statusCode = STATUS_NO_CONTENT;\n+        return self->respond(newResponse);\n+    }\n+\n+# Sends the outbound response to the caller with the status 400 Bad Request.\n+# ```ballerina\n+# http:ListenerError? err = caller->badRequest();\n+# ```\n+#\n+# + message - The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `http:ListenerError` if failed to respond\n+    public remote function badRequest(ResponseMessage message = ()) returns ListenerError? {\n+        Response response = buildResponse(message);\n+        response.statusCode = STATUS_BAD_REQUEST;\n+        return self->respond(response);\n+    }\n+\n+# Sends the outbound response to the caller with the status 404 Not Found.\n+# ```ballerina\n+# http:ListenerError? err = caller->notFound();\n+# ```\n+#\n+# + message - The outbound response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `http:ListenerError` if failed to respond", "originalCommit": "4fef8498cd76a9ca8fb2aa565c4b21679810e7bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "366d26481ee2207212454e9a68470ebc6a822665", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/366d26481ee2207212454e9a68470ebc6a822665", "message": "Fix docs with samples", "committedDate": "2020-04-15T15:16:03Z", "type": "commit"}, {"oid": "366d26481ee2207212454e9a68470ebc6a822665", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/366d26481ee2207212454e9a68470ebc6a822665", "message": "Fix docs with samples", "committedDate": "2020-04-15T15:16:03Z", "type": "forcePushed"}, {"oid": "ea0099bb854bb2466ae01280f9613b44f2d49c17", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea0099bb854bb2466ae01280f9613b44f2d49c17", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into missed-actions\n\n# Conflicts:\n#\tstdlib/http/src/main/ballerina/src/http/http_connection.bal", "committedDate": "2020-04-15T16:15:56Z", "type": "commit"}, {"oid": "5addb4373436d9fa84ac36ad158ebb02f588a176", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5addb4373436d9fa84ac36ad158ebb02f588a176", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into missed-actions\n\n# Conflicts:\n#\tstdlib/http/src/main/ballerina/src/http/http_connection.bal", "committedDate": "2020-04-15T16:21:51Z", "type": "commit"}, {"oid": "c1fe0e31dfaa7e6d6e59ff4f7afc79dd66f6c2a3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1fe0e31dfaa7e6d6e59ff4f7afc79dd66f6c2a3", "message": "Remove unwanted code", "committedDate": "2020-04-15T16:34:08Z", "type": "commit"}, {"oid": "c1fe0e31dfaa7e6d6e59ff4f7afc79dd66f6c2a3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1fe0e31dfaa7e6d6e59ff4f7afc79dd66f6c2a3", "message": "Remove unwanted code", "committedDate": "2020-04-15T16:34:08Z", "type": "forcePushed"}]}