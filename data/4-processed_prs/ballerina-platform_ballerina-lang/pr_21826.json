{"pr_number": 21826, "pr_title": "XML BBE fix: continuing #21796", "pr_createdAt": "2020-03-16T12:37:33Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826", "timeline": [{"oid": "449a1f43d068328d3588c3d48e418d654e9a199e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/449a1f43d068328d3588c3d48e418d654e9a199e", "message": "Add BBEs to broken list", "committedDate": "2020-03-16T09:45:22Z", "type": "commit"}, {"oid": "5909b775e9980df45cef5f52767667bd6f02e28c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5909b775e9980df45cef5f52767667bd6f02e28c", "message": "Merge branch 'stage' of github.com:ballerina-platform/ballerina-lang into xml-bbe\n\n\u0001 Conflicts:\n\u0001\texamples/xml-attributes/xml_attributes.out", "committedDate": "2020-03-16T12:06:10Z", "type": "commit"}, {"oid": "f97e58598d08e158a88a8d99c067f403bfbe8f6c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f97e58598d08e158a88a8d99c067f403bfbe8f6c", "message": "Fix and align xml functions BBEs", "committedDate": "2020-03-16T12:07:41Z", "type": "commit"}, {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cb2893240607f34e4e29b1db3549282cc17bfce2", "message": "Apply review suggestions", "committedDate": "2020-03-16T14:19:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5Njk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393096990", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // child elements conveniently using xml step expressions and XML filter expressions.\n          \n          \n            \n            // child elements conveniently using XML step expressions and XML filter expressions.", "author": "praneesha", "createdAt": "2020-03-16T15:10:30Z", "path": "examples/xml-access/xml_access.description", "diffHunk": "@@ -1,2 +1,2 @@\n // XML elements can contain child XML items. Ballerina allows you to access these\n-// child elements conveniently using xml step expressions and xml filter expressions.\n+// child elements conveniently using xml step expressions and XML filter expressions.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzA5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097093", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // It is possible to get all the attributes of a `xml` element.\n          \n          \n            \n                // It is possible to get all the attributes of an `xml` element.", "author": "praneesha", "createdAt": "2020-03-16T15:10:40Z", "path": "examples/xml-attributes/xml_attributes.bal", "diffHunk": "@@ -15,19 +15,19 @@ public function main() {\n     string|error count = x1.count;\n     io:println(count);\n \n-    // Returns an error when accessing non existing attribute.\n+    // Accessing a non-existent attribute will return an error.\n     string|error count2 = x1.count2;\n     io:println(count2 is error);\n \n-    // It is possible to get all the attributes of a xml element.\n+    // It is possible to get all the attributes of a `xml` element.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzIwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097205", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Updates an attribute by updating the attribute map of a `xml` element.\n          \n          \n            \n                // Update an attribute by updating the attribute map of an `xml` element.", "author": "praneesha", "createdAt": "2020-03-16T15:10:50Z", "path": "examples/xml-attributes/xml_attributes.bal", "diffHunk": "@@ -15,19 +15,19 @@ public function main() {\n     string|error count = x1.count;\n     io:println(count);\n \n-    // Returns an error when accessing non existing attribute.\n+    // Accessing a non-existent attribute will return an error.\n     string|error count2 = x1.count2;\n     io:println(count2 is error);\n \n-    // It is possible to get all the attributes of a xml element.\n+    // It is possible to get all the attributes of a `xml` element.\n     map<string> attributeMap = x1.getAttributes();\n     io:println(attributeMap);\n \n     // An attribute can also be accessed using the string representation of the qualified name from the attribute map.\n     string? s = attributeMap[\"{http://ballerina.com/aa}status\"];\n     io:println(s);\n \n-    // Updates an attribute by updating the attribute map of a xml element.\n+    // Updates an attribute by updating the attribute map of a `xml` element.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzM0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097349", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Concatenates xml and string values.\n          \n          \n            \n                // Concatenate XML and string values.", "author": "praneesha", "createdAt": "2020-03-16T15:11:03Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n-\n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n+    // Concatenates xml and string values.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzQzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097438", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Get the number of xml items in a sequence.\n          \n          \n            \n                // Get the number of XML items in a sequence.", "author": "praneesha", "createdAt": "2020-03-16T15:11:11Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n-\n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n+    // Concatenates xml and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n+    // Get the number of xml items in a sequence.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzU3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097575", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Strips the insignificant parts of the an xml value.\n          \n          \n            \n                // Strip the insignificant parts of an XML value.", "author": "praneesha", "createdAt": "2020-03-16T15:11:24Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -31,23 +29,12 @@ public function main() {\n     x = content.elements();\n     io:println(x);\n \n-    // Retrieves an XML element by its name.\n-    x = content.select(\"name\");\n-    io:println(x);\n-\n     // Sets the children elements of an XML element.\n     book.setChildren(content);\n     io:println(book);\n \n-    // Retrieves a particular child of an XML element by its name.\n-    x = book.selectDescendants(\"name\");\n-    io:println(x);\n-\n-    // Removes any text items from an XML sequence that are all whitespaces.\n+    // Strips the insignificant parts of the an xml value.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5Nzc5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097791", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Comment items, processing instruction items are considered insignificant.\n          \n          \n            \n                // Commented items and processing instruction items are considered insignificant.", "author": "praneesha", "createdAt": "2020-03-16T15:11:42Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -31,23 +29,12 @@ public function main() {\n     x = content.elements();\n     io:println(x);\n \n-    // Retrieves an XML element by its name.\n-    x = content.select(\"name\");\n-    io:println(x);\n-\n     // Sets the children elements of an XML element.\n     book.setChildren(content);\n     io:println(book);\n \n-    // Retrieves a particular child of an XML element by its name.\n-    x = book.selectDescendants(\"name\");\n-    io:println(x);\n-\n-    // Removes any text items from an XML sequence that are all whitespaces.\n+    // Strips the insignificant parts of the an xml value.\n+    // Comment items, processing instruction items are considered insignificant.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyMzY3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393123677", "bodyText": "Comment items are a thing in XML ()", "author": "rdhananjaya", "createdAt": "2020-03-16T15:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5Nzc5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1MDk2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393250962", "bodyText": "+1", "author": "praneesha", "createdAt": "2020-03-16T19:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5Nzc5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODAzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098033", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // You can access child XML items using xml step expressions.\n          \n          \n            \n                // You can access child XML items using XML step expressions.", "author": "praneesha", "createdAt": "2020-03-16T15:12:00Z", "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -17,13 +17,13 @@ public function main() {\n     // You can access child XML items using xml step expressions.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODIwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098202", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Select all children using bellow syntax.\n          \n          \n            \n                // Select all children using the bellow syntax.", "author": "praneesha", "createdAt": "2020-03-16T15:12:15Z", "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -17,13 +17,13 @@ public function main() {\n     // You can access child XML items using xml step expressions.\n     io:println(bookXML/<author>/<fname>);\n \n-    // Accessing a non-existing child will return empty xml sequence.\n+    // Accessing a non-existing child will return an empty `xml` sequence.\n     io:println(bookXML/<ISBN>/<code>);\n \n     // You can also retrieve attributes of the resulting child XML.\n     io:println(bookXML/<author>/<fname>.title);\n \n-    // You can match descendent elements using following steping access syntax.\n+    // You can match descendant elements using the following stepping access syntax.\n     io:println(bookXML/**/<fname>);\n \n     // Select all children using bellow syntax.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODM0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098346", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // And select all children elements using bellow syntax.\n          \n          \n            \n                // Select all children elements using the bellow syntax.", "author": "praneesha", "createdAt": "2020-03-16T15:12:27Z", "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -32,12 +32,12 @@ public function main() {\n     // And select all children elements using bellow syntax.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODUyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098521", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Invoking the main function\n          \n          \n            \n                // Invoking the main function.", "author": "praneesha", "createdAt": "2020-03-16T15:12:42Z", "path": "examples/xml-functions/tests/xml_functions_test.bal", "diffHunk": "@@ -17,29 +17,20 @@ function testFunc() {\n     // Invoking the main function", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODk3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098976", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Gets the name of an XML element.\n          \n          \n            \n                // Get the name of an XML element.", "author": "praneesha", "createdAt": "2020-03-16T15:13:26Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTE4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393099186", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Gets a subsequence of an XML sequence.\n          \n          \n            \n                // Get a subsequence of an XML sequence.", "author": "praneesha", "createdAt": "2020-03-16T15:13:45Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n-\n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n+    // Concatenates xml and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n+    // Get the number of xml items in a sequence.\n+    io:println(concat.length());\n \n     // Gets a subsequence of an XML sequence.", "originalCommit": "cb2893240607f34e4e29b1db3549282cc17bfce2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "36882070bad4d683204540601371d7efa7ed99e8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36882070bad4d683204540601371d7efa7ed99e8", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-03-16T15:48:11Z", "type": "commit"}, {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91b1b7609ba3044fa708f970f284e04705fe9b5d", "message": "Fix typo", "committedDate": "2020-03-16T15:58:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNjQ4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393426489", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Select all children using the bellow syntax.\n          \n          \n            \n                // Select all the children elements using the below syntax.", "author": "praneesha", "createdAt": "2020-03-17T03:31:32Z", "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -14,30 +14,30 @@ public function main() {\n                 <!--Price: $10-->\n                 </book>`;\n     \n-    // You can access child XML items using xml step expressions.\n+    // You can access child XML items using XML step expressions.\n     io:println(bookXML/<author>/<fname>);\n \n-    // Accessing a non-existing child will return empty xml sequence.\n+    // Accessing a non-existing child will return an empty `xml` sequence.\n     io:println(bookXML/<ISBN>/<code>);\n \n     // You can also retrieve attributes of the resulting child XML.\n     io:println(bookXML/<author>/<fname>.title);\n \n-    // You can match descendent elements using following steping access syntax.\n+    // You can match descendant elements using the following stepping access syntax.\n     io:println(bookXML/**/<fname>);\n \n-    // Select all children using bellow syntax.\n+    // Select all children using the bellow syntax.", "originalCommit": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNjU4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393426589", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Select all the children belonging to a specific namespace.\n          \n          \n            \n                // Select all the children elements belonging to a specific namespace.", "author": "praneesha", "createdAt": "2020-03-17T03:32:04Z", "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -14,30 +14,30 @@ public function main() {\n                 <!--Price: $10-->\n                 </book>`;\n     \n-    // You can access child XML items using xml step expressions.\n+    // You can access child XML items using XML step expressions.\n     io:println(bookXML/<author>/<fname>);\n \n-    // Accessing a non-existing child will return empty xml sequence.\n+    // Accessing a non-existing child will return an empty `xml` sequence.\n     io:println(bookXML/<ISBN>/<code>);\n \n     // You can also retrieve attributes of the resulting child XML.\n     io:println(bookXML/<author>/<fname>.title);\n \n-    // You can match descendent elements using following steping access syntax.\n+    // You can match descendant elements using the following stepping access syntax.\n     io:println(bookXML/**/<fname>);\n \n-    // Select all children using bellow syntax.\n+    // Select all children using the bellow syntax.\n     io:println(bookXML/*);\n \n-    // And select all children elements using bellow syntax.\n+    // Select all children elements using the bellow syntax.\n     io:println(bookXML/<*>);\n \n-    // Select all children belong to specific namespace.\n+    // Select all the children belonging to a specific namespace.", "originalCommit": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyODYzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393428633", "bodyText": "Children elements are selected using <*> syntax\nThis select 'elements' and non element items, hence we can omit the elements word right?", "author": "rdhananjaya", "createdAt": "2020-03-17T03:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNjU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyODkxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393428917", "bodyText": "+1", "author": "praneesha", "createdAt": "2020-03-17T03:42:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNjU4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzQ0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427446", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // XML attribute access in ballerina is lax typed similar\n          \n          \n            \n            // XML attribute access in Ballerina is lax-typed similar", "author": "praneesha", "createdAt": "2020-03-17T03:35:55Z", "path": "examples/xml-attributes/xml_attributes.description", "diffHunk": "@@ -3,5 +3,5 @@\n // In Ballerina, both of these types are treated the same. \n // XML attribute access in ballerina is lax typed similar", "originalCommit": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzU0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427545", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // attribute of a xml value.\n          \n          \n            \n            // attribute of an XML value.", "author": "praneesha", "createdAt": "2020-03-17T03:36:21Z", "path": "examples/xml-attributes/xml_attributes.description", "diffHunk": "@@ -3,5 +3,5 @@\n // In Ballerina, both of these types are treated the same. \n // XML attribute access in ballerina is lax typed similar\n // to `json`, we can use field access expression (`.`) and\n-// optional field access expressions (``?.`) to access teh\n-// field of a xml value.\n+// optional field access expressions (``?.`) to access the\n+// attribute of a xml value.", "originalCommit": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzYzNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427636", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Gets all the element-type items in an XML sequence.\n          \n          \n            \n                // Get all the element-type items in an XML sequence.", "author": "praneesha", "createdAt": "2020-03-17T03:36:41Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,53 +1,40 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    // Get the name of an XML element.\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n+    // Concatenate XML and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    // Get the number of XML items in a sequence.\n+    io:println(concat.length());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n-\n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n-\n-    // Gets a subsequence of an XML sequence.\n+    // Get a subsequence of an XML sequence.\n     xml x = content.slice(2, 3);\n     io:println(x);\n \n     // Gets all the element-type items in an XML sequence.", "originalCommit": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzY1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427659", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Sets the children elements of an XML element.\n          \n          \n            \n                // Set the children elements of an XML element.", "author": "praneesha", "createdAt": "2020-03-17T03:36:49Z", "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,53 +1,40 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    // Get the name of an XML element.\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n+    // Concatenate XML and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    // Get the number of XML items in a sequence.\n+    io:println(concat.length());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n-\n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n-\n-    // Gets a subsequence of an XML sequence.\n+    // Get a subsequence of an XML sequence.\n     xml x = content.slice(2, 3);\n     io:println(x);\n \n     // Gets all the element-type items in an XML sequence.\n     x = content.elements();\n     io:println(x);\n \n-    // Retrieves an XML element by its name.\n-    x = content.select(\"name\");\n-    io:println(x);\n-\n     // Sets the children elements of an XML element.", "originalCommit": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6ba7dca9821542b8abcaa561675c272a10df000", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a6ba7dca9821542b8abcaa561675c272a10df000", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-03-17T03:43:50Z", "type": "commit"}]}