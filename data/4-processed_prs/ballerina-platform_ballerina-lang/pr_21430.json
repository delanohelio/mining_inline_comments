{"pr_number": 21430, "pr_title": "Add lastIndexOf method", "pr_createdAt": "2020-03-03T08:49:49Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21430", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MzA2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21430#discussion_r387563068", "bodyText": "Shall we write the tests in Ballerina itself?", "author": "MaryamZi", "createdAt": "2020-03-04T10:04:53Z", "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/LangLibArrayTest.java", "diffHunk": "@@ -247,6 +247,23 @@ public void testIndexOf() {\n         assertNull(returns[1]);\n     }\n \n+    @Test\n+    public void testLastIndexOf() {\n+        BValue[] returns = BRunUtil.invoke(compileResult, \"testLastIndexOf\");", "originalCommit": "3344dfe9975e5cab5ecdcd78b71086081cd4ccf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2ODIwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21430#discussion_r388068203", "bodyText": "Added", "author": "KavinduZoysa", "createdAt": "2020-03-05T04:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MzA2OA=="}], "type": "inlineReview"}, {"oid": "da219ec75d0c55e55d6dd89d9e643cf3d698e3b7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/da219ec75d0c55e55d6dd89d9e643cf3d698e3b7", "message": "Move the tests to ballerina itself", "committedDate": "2020-03-05T03:57:20Z", "type": "forcePushed"}, {"oid": "9540a90b4ea3d1be5149160299f9983cf86c6f34", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9540a90b4ea3d1be5149160299f9983cf86c6f34", "message": "Add lastIndexOf method to array", "committedDate": "2020-03-05T05:19:20Z", "type": "commit"}, {"oid": "215588f9c5c00eb5c3526c2ecf32b6d619e42136", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/215588f9c5c00eb5c3526c2ecf32b6d619e42136", "message": "Add lastIndexOf method to string", "committedDate": "2020-03-05T05:19:20Z", "type": "commit"}, {"oid": "99ea5ad3023bbae077aca47ecc519290452f2c2e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/99ea5ad3023bbae077aca47ecc519290452f2c2e", "message": "Add lang-lib tests", "committedDate": "2020-03-05T05:19:20Z", "type": "commit"}, {"oid": "8b078aa6e9ca2d53dbf7b1b205765ac52738f403", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8b078aa6e9ca2d53dbf7b1b205765ac52738f403", "message": "Move the tests to ballerina itself", "committedDate": "2020-03-05T05:19:20Z", "type": "commit"}, {"oid": "0efae2a70bd8fd58d47c42226c086981f168e731", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0efae2a70bd8fd58d47c42226c086981f168e731", "message": "fix failing completion tests", "committedDate": "2020-03-05T05:19:20Z", "type": "commit"}, {"oid": "b023c4d132b93fb9a761fe9ce3095aa13ffbb48e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b023c4d132b93fb9a761fe9ce3095aa13ffbb48e", "message": "Change the test cases for string", "committedDate": "2020-03-05T05:19:20Z", "type": "commit"}, {"oid": "b023c4d132b93fb9a761fe9ce3095aa13ffbb48e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b023c4d132b93fb9a761fe9ce3095aa13ffbb48e", "message": "Change the test cases for string", "committedDate": "2020-03-05T05:19:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEwNjMzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21430#discussion_r388106330", "bodyText": "Do we need this null check? We should never be getting null values for string values here. If we do get, then it's a bug in either the runtime or the compiler.", "author": "pubudu91", "createdAt": "2020-03-05T06:52:25Z", "path": "langlib/lang.string/src/main/java/org/ballerinalang/langlib/string/LastIndexOf.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.string;\n+\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.util.exceptions.BLangExceptionHelper;\n+import org.ballerinalang.jvm.util.exceptions.RuntimeErrors;\n+import org.ballerinalang.langlib.string.utils.StringUtils;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.util.BLangConstants.STRING_LANG_LIB;\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.INDEX_OUT_OF_RANGE_ERROR_IDENTIFIER;\n+import static org.ballerinalang.jvm.util.exceptions.BallerinaErrorReasons.getModulePrefixedReason;\n+\n+/**\n+ * Extern function ballerina.model.strings:lastIndexOf.\n+ *\n+ * @since 1.2.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.string\",\n+        functionName = \"lastIndexOf\",\n+        args = {@Argument(name = \"s\", type = TypeKind.STRING),\n+                @Argument(name = \"substring\", type = TypeKind.STRING)},\n+        returnType = {@ReturnType(type = TypeKind.UNION)},\n+        isPublic = true\n+)\n+public class LastIndexOf {\n+    public static Object lastIndexOf(Strand strand, String value, String subString, long startIndex) {\n+        StringUtils.checkForNull(value, subString);", "originalCommit": "b023c4d132b93fb9a761fe9ce3095aa13ffbb48e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MzQxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21430#discussion_r388783418", "bodyText": "We should check or instead of and right?", "author": "MaryamZi", "createdAt": "2020-03-06T09:02:16Z", "path": "langlib/langlib-test/src/test/resources/test-src/arraylib_test.bal", "diffHunk": "@@ -150,6 +150,35 @@ function testIndexOf() returns [int?, int?] {\n     return [i1, i2];\n }\n \n+function testLastIndexOf() {\n+    anydata[] array = [10, 10, 10, \"foo\", \"foo\", \"foo\", 12.34, 12.34, true, true, <map<string>>{\"k\":\"Bar\"},\n+                       <map<string>>{\"k\":\"Bar\"}, [12, true], [12, true]];\n+    map<string> m1 = {\"k\":\"Bar\"};\n+    map<string> m2 = {\"k\":\"Foo\"};\n+    anydata[] arr1 = [12, true];\n+    anydata[] arr2 = [12, false];\n+\n+    int? i1 = array.lastIndexOf(10);\n+    int? i2 = array.lastIndexOf(\"foo\");\n+    int? i3 = array.lastIndexOf(12.34);\n+    int? i4 = array.lastIndexOf(true);\n+    int? i5 = array.lastIndexOf(m1);\n+    int? i6 = array.lastIndexOf(arr1);\n+\n+    int? i7 = array.lastIndexOf(11);\n+    int? i8 = array.lastIndexOf(\"Bar\");\n+    int? i9 = array.lastIndexOf(12.33);\n+    int? i10 = array.lastIndexOf(false);\n+    int? i11 = array.lastIndexOf(m2);\n+    int? i12 = array.lastIndexOf(arr2);\n+\n+    if (<int>i1 != 2 && <int>i2 != 5 && <int>i3 != 7 && <int>i4 != 9 && <int>i5 != 11 && <int>i6 != 13 &&", "originalCommit": "b023c4d132b93fb9a761fe9ce3095aa13ffbb48e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}