{"pr_number": 22913, "pr_title": "Fix create object value getting null strand passing", "pr_createdAt": "2020-04-27T09:22:30Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3MTUwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r415671509", "bodyText": "visitFrame should be automatically injected by asm, please try removing those.", "author": "manuranga", "createdAt": "2020-04-27T09:50:49Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmTypeGen.java", "diffHunk": "@@ -468,19 +472,33 @@ private static void generateObjectValueCreateMethod(ClassWriter cw, @Nilable Lis\n \n             int tempVarIndex = indexMap.getIndex(tempVar);\n             mv.visitVarInsn(ASTORE, tempVarIndex);\n+            BIRVariableDcl strandVar = new BIRVariableDcl(symbolTable.anyType, new Name(\"strandVar\"), VarScope.FUNCTION,\n+                    VarKind.LOCAL);\n+            int strandVarIndex = indexMap.getIndex(strandVar);\n \n+            mv.visitVarInsn(ALOAD, parentIndex);\n+            Label parentNonNullLabel = new Label();\n+            mv.visitJumpInsn(IFNONNULL, parentNonNullLabel);\n+            Label parentNullLabel = new Label();\n+            mv.visitLabel(parentNullLabel);\n             mv.visitTypeInsn(NEW, STRAND);\n             mv.visitInsn(DUP);\n             mv.visitVarInsn(ALOAD, schedulerIndex);\n             mv.visitVarInsn(ALOAD, parentIndex);\n             mv.visitVarInsn(ALOAD, propertiesIndex);\n             mv.visitMethodInsn(INVOKESPECIAL, STRAND, \"<init>\",\n                     String.format(\"(L%s;L%s;L%s;)V\", SCHEDULER, STRAND, MAP), false);\n-            BIRVariableDcl strandVar = new BIRVariableDcl(symbolTable.anyType, new Name(\"strandVar\"), VarScope.FUNCTION,\n-                    VarKind.LOCAL);\n-\n-            int strandVarIndex = indexMap.getIndex(strandVar);\n             mv.visitVarInsn(ASTORE, strandVarIndex);\n+            Label conditionLinkLabel = new Label();\n+            mv.visitLabel(conditionLinkLabel);\n+            Label endConditionLabel = new Label();\n+            mv.visitJumpInsn(GOTO, endConditionLabel);\n+            mv.visitLabel(parentNonNullLabel);\n+            mv.visitFrame(F_SAME, 0, null, 0, null);", "originalCommit": "082f7863c114735fb05c9d51891979ea0484c5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY5OTkzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r415699938", "bodyText": "don't think conditionLinkLabel is used, we can remove it.", "author": "manuranga", "createdAt": "2020-04-27T10:34:51Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmTypeGen.java", "diffHunk": "@@ -468,19 +472,33 @@ private static void generateObjectValueCreateMethod(ClassWriter cw, @Nilable Lis\n \n             int tempVarIndex = indexMap.getIndex(tempVar);\n             mv.visitVarInsn(ASTORE, tempVarIndex);\n+            BIRVariableDcl strandVar = new BIRVariableDcl(symbolTable.anyType, new Name(\"strandVar\"), VarScope.FUNCTION,\n+                    VarKind.LOCAL);\n+            int strandVarIndex = indexMap.getIndex(strandVar);\n \n+            mv.visitVarInsn(ALOAD, parentIndex);\n+            Label parentNonNullLabel = new Label();\n+            mv.visitJumpInsn(IFNONNULL, parentNonNullLabel);\n+            Label parentNullLabel = new Label();\n+            mv.visitLabel(parentNullLabel);\n             mv.visitTypeInsn(NEW, STRAND);\n             mv.visitInsn(DUP);\n             mv.visitVarInsn(ALOAD, schedulerIndex);\n             mv.visitVarInsn(ALOAD, parentIndex);\n             mv.visitVarInsn(ALOAD, propertiesIndex);\n             mv.visitMethodInsn(INVOKESPECIAL, STRAND, \"<init>\",\n                     String.format(\"(L%s;L%s;L%s;)V\", SCHEDULER, STRAND, MAP), false);\n-            BIRVariableDcl strandVar = new BIRVariableDcl(symbolTable.anyType, new Name(\"strandVar\"), VarScope.FUNCTION,\n-                    VarKind.LOCAL);\n-\n-            int strandVarIndex = indexMap.getIndex(strandVar);\n             mv.visitVarInsn(ASTORE, strandVarIndex);\n+            Label conditionLinkLabel = new Label();\n+            mv.visitLabel(conditionLinkLabel);", "originalCommit": "082f7863c114735fb05c9d51891979ea0484c5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcwMjk4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r415702983", "bodyText": "please remove getScheduler method, since Scheduler.getStrand() is costly (because it access a thread local) it should be called ones. assign the strand to a local var and access the scheduler form there.", "author": "manuranga", "createdAt": "2020-04-27T10:39:42Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -85,8 +87,41 @@ public static ObjectValue createObjectValue(BPackage packageId, String objectTyp\n             fields[j++] = fieldValues[i];\n             fields[j++] = true;\n         }\n-        //passing scheduler, strand and properties as null for the moment, but better to expose them via this method\n-        return valueCreator.createObjectValue(objectTypeName, null, null, null, fields);\n+        return valueCreator.createObjectValue(objectTypeName, getScheduler(), getStrand(), null, fields);", "originalCommit": "082f7863c114735fb05c9d51891979ea0484c5fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc4NzM1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r415787352", "bodyText": "I modified considering all suggestions in this", "author": "HindujaB", "createdAt": "2020-04-27T12:55:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcwMjk4Mw=="}], "type": "inlineReview"}, {"oid": "515f7fe10aadde5656b821ccb180e31abba89504", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/515f7fe10aadde5656b821ccb180e31abba89504", "message": "Remove unnecessary lines and get Scheduler method", "committedDate": "2020-04-27T12:50:38Z", "type": "forcePushed"}, {"oid": "6c3b21e701f86d2d886c637e99eacaff1053f84e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c3b21e701f86d2d886c637e99eacaff1053f84e", "message": "Fix checkstyle errors", "committedDate": "2020-04-27T15:30:54Z", "type": "forcePushed"}, {"oid": "2d5a37d02e2498c209c716ea0d95ccaa013144ca", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d5a37d02e2498c209c716ea0d95ccaa013144ca", "message": "Fix checkstyle errors", "committedDate": "2020-04-28T05:57:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDM3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r416474379", "bodyText": "when can an exception occur here?", "author": "Kishanthan", "createdAt": "2020-04-28T09:39:10Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -79,14 +81,46 @@\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n         ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n         Object[] fields = new Object[fieldValues.length * 2];\n+        Strand currentStrand = getStrand();\n+        // Adding boolean values for each arg\n+        for (int i = 0, j = 0; i < fieldValues.length; i++) {\n+            fields[j++] = fieldValues[i];\n+            fields[j++] = true;\n+        }\n+        return valueCreator.createObjectValue(objectTypeName, getScheduler(currentStrand), currentStrand, null, fields);\n+    }\n+\n+    public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Strand currentStrand,\n+                                                Object... fieldValues) {\n+        //This method duplicates the createObjectValue with referencing the issue in runtime API getting strand\n+        ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n+        Object[] fields = new Object[fieldValues.length * 2];\n \n         // Adding boolean values for each arg\n         for (int i = 0, j = 0; i < fieldValues.length; i++) {\n             fields[j++] = fieldValues[i];\n             fields[j++] = true;\n         }\n-        //passing scheduler, strand and properties as null for the moment, but better to expose them via this method\n-        return valueCreator.createObjectValue(objectTypeName, null, null, null, fields);\n+        //passing scheduler of current strand\n+        return valueCreator.createObjectValue(objectTypeName, currentStrand.scheduler, currentStrand,\n+                null, fields);\n+    }\n+\n+    private static Scheduler getScheduler(Strand currentStrand) {\n+        try {\n+            return currentStrand.scheduler;\n+        } catch (Exception ex) {\n+            return null;", "originalCommit": "2d5a37d02e2498c209c716ea0d95ccaa013144ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUxMjczNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r416512735", "bodyText": "Null pointer exception is thrown if the strand is null.", "author": "HindujaB", "createdAt": "2020-04-28T10:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU0MjIwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r416542207", "bodyText": "Caching Exception or any runtime exceptions like NullPointerExcption is not a best practice. Replace it with a null check.", "author": "manuranga", "createdAt": "2020-04-28T11:36:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NDM3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NTAxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r416475018", "bodyText": "can we link the created issue here ?", "author": "Kishanthan", "createdAt": "2020-04-28T09:40:15Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -79,14 +81,46 @@\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n         ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n         Object[] fields = new Object[fieldValues.length * 2];\n+        Strand currentStrand = getStrand();\n+        // Adding boolean values for each arg\n+        for (int i = 0, j = 0; i < fieldValues.length; i++) {\n+            fields[j++] = fieldValues[i];\n+            fields[j++] = true;\n+        }\n+        return valueCreator.createObjectValue(objectTypeName, getScheduler(currentStrand), currentStrand, null, fields);\n+    }\n+\n+    public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Strand currentStrand,\n+                                                Object... fieldValues) {\n+        //This method duplicates the createObjectValue with referencing the issue in runtime API getting strand\n+        ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n+        Object[] fields = new Object[fieldValues.length * 2];\n \n         // Adding boolean values for each arg\n         for (int i = 0, j = 0; i < fieldValues.length; i++) {\n             fields[j++] = fieldValues[i];\n             fields[j++] = true;\n         }\n-        //passing scheduler, strand and properties as null for the moment, but better to expose them via this method\n-        return valueCreator.createObjectValue(objectTypeName, null, null, null, fields);\n+        //passing scheduler of current strand\n+        return valueCreator.createObjectValue(objectTypeName, currentStrand.scheduler, currentStrand,\n+                null, fields);\n+    }\n+\n+    private static Scheduler getScheduler(Strand currentStrand) {\n+        try {\n+            return currentStrand.scheduler;\n+        } catch (Exception ex) {\n+            return null;\n+        }\n+    }\n+\n+    private static Strand getStrand() {\n+        try {\n+            return Scheduler.getStrand();\n+        } catch (Exception ex) {\n+            //ignore : isssue is opened to fix this", "originalCommit": "2d5a37d02e2498c209c716ea0d95ccaa013144ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExNjYwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r417116601", "bodyText": "Added issue reference in the latest commit", "author": "HindujaB", "createdAt": "2020-04-29T07:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3NTAxOA=="}], "type": "inlineReview"}, {"oid": "44f571ad17dd8fac053b785ea4a16a1d8d904d6e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/44f571ad17dd8fac053b785ea4a16a1d8d904d6e", "message": "Add issue reference to the code", "committedDate": "2020-04-29T07:25:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwMzQ3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r416503479", "bodyText": "no need to catch Exception for this, just do a null check. Caching Exception is a last resort solution, should try to avoid it when possible.", "author": "manuranga", "createdAt": "2020-04-28T10:26:18Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -79,14 +81,46 @@\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n         ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n         Object[] fields = new Object[fieldValues.length * 2];\n+        Strand currentStrand = getStrand();\n+        // Adding boolean values for each arg\n+        for (int i = 0, j = 0; i < fieldValues.length; i++) {\n+            fields[j++] = fieldValues[i];\n+            fields[j++] = true;\n+        }\n+        return valueCreator.createObjectValue(objectTypeName, getScheduler(currentStrand), currentStrand, null, fields);\n+    }\n+\n+    public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Strand currentStrand,\n+                                                Object... fieldValues) {\n+        //This method duplicates the createObjectValue with referencing the issue in runtime API getting strand\n+        ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n+        Object[] fields = new Object[fieldValues.length * 2];\n \n         // Adding boolean values for each arg\n         for (int i = 0, j = 0; i < fieldValues.length; i++) {\n             fields[j++] = fieldValues[i];\n             fields[j++] = true;\n         }\n-        //passing scheduler, strand and properties as null for the moment, but better to expose them via this method\n-        return valueCreator.createObjectValue(objectTypeName, null, null, null, fields);\n+        //passing scheduler of current strand\n+        return valueCreator.createObjectValue(objectTypeName, currentStrand.scheduler, currentStrand,\n+                null, fields);\n+    }\n+\n+    private static Scheduler getScheduler(Strand currentStrand) {\n+        try {\n+            return currentStrand.scheduler;\n+        } catch (Exception ex) {", "originalCommit": "2d5a37d02e2498c209c716ea0d95ccaa013144ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU0MTA0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r416541047", "bodyText": "Lets make this method call the other createObjectValue, that way we can remove most of the body in this method. see default parameter pattern here : https://www.baeldung.com/java-default-parameters-method-overloading", "author": "manuranga", "createdAt": "2020-04-28T11:34:22Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -79,14 +81,46 @@\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n         ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n         Object[] fields = new Object[fieldValues.length * 2];\n+        Strand currentStrand = getStrand();\n+        // Adding boolean values for each arg\n+        for (int i = 0, j = 0; i < fieldValues.length; i++) {\n+            fields[j++] = fieldValues[i];\n+            fields[j++] = true;\n+        }\n+        return valueCreator.createObjectValue(objectTypeName, getScheduler(currentStrand), currentStrand, null, fields);", "originalCommit": "2d5a37d02e2498c209c716ea0d95ccaa013144ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxOTkzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r417219934", "bodyText": "Changed in the latest commit", "author": "HindujaB", "createdAt": "2020-04-29T10:38:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU0MTA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NzQyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r417157429", "bodyText": "let's add a deprecated annotation here.", "author": "manuranga", "createdAt": "2020-04-29T08:43:53Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -79,14 +81,45 @@\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {", "originalCommit": "44f571ad17dd8fac053b785ea4a16a1d8d904d6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxNTU4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r417215584", "bodyText": "Did it in the last commit", "author": "HindujaB", "createdAt": "2020-04-29T10:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NzQyOQ=="}], "type": "inlineReview"}, {"oid": "356b2aa5f23294c8182cacbfd67c6f59c6596c6e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/356b2aa5f23294c8182cacbfd67c6f59c6596c6e", "message": "Modify method calls using default parameters", "committedDate": "2020-04-29T10:22:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxMDU0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r419310543", "bodyText": "Shall we wait for accumulator and assign to a field and assert?", "author": "riyafa", "createdAt": "2020-05-04T09:23:49Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/workers/wait-for-one-actions.bal", "diffHunk": "@@ -124,3 +124,18 @@ function add_panic(int i, int j) returns int {\n     }\n     return k;\n }\n+\n+type Student object {\n+    public string name;\n+    public function __init() {\n+        future<int> accumulator = start add(2, 4);", "originalCommit": "b92d828f9bbf170abe07100b405f3dd97a71403a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxMDgxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r419310816", "bodyText": "Shall we use a meaningful name for the testcase?", "author": "riyafa", "createdAt": "2020-05-04T09:24:15Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/worker/WaitForOneActionsTest.java", "diffHunk": "@@ -101,4 +101,9 @@ public void waitTest9() {\n         Assert.assertEquals(vals.length, 1);\n         Assert.assertEquals(vals[0], null);\n     }\n+\n+    @Test\n+    public void waitTest10() {", "originalCommit": "b92d828f9bbf170abe07100b405f3dd97a71403a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a9cc6a7bd1485abef8ea72be28eb60c1e9a83ff", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4a9cc6a7bd1485abef8ea72be28eb60c1e9a83ff", "message": "Change access modifier of createObjectValue", "committedDate": "2020-05-05T12:03:10Z", "type": "forcePushed"}, {"oid": "16554583f49aafabd27183cf2e0a27a4eee88c9e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16554583f49aafabd27183cf2e0a27a4eee88c9e", "message": "Rename test case", "committedDate": "2020-05-10T15:52:01Z", "type": "forcePushed"}, {"oid": "ce4d4f06be55dc9dcf925da763335332c3e1e341", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce4d4f06be55dc9dcf925da763335332c3e1e341", "message": "Fix async call to createObjectValue for test failure", "committedDate": "2020-05-14T07:43:33Z", "type": "forcePushed"}, {"oid": "e37c210da1c6b5afeafb3061f2cdce90758914b4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e37c210da1c6b5afeafb3061f2cdce90758914b4", "message": "Fix async call to createObjectValue for test failure", "committedDate": "2020-05-14T09:04:02Z", "type": "forcePushed"}, {"oid": "2c1456864720884766398843617f094bbc32df32", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c1456864720884766398843617f094bbc32df32", "message": "Fix async call to createObjectValue for test failure", "committedDate": "2020-05-14T12:29:15Z", "type": "forcePushed"}, {"oid": "19a97e466fb612177b092c12348a9466925887d0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/19a97e466fb612177b092c12348a9466925887d0", "message": "Move the Strand state check to object method call", "committedDate": "2020-05-18T09:39:07Z", "type": "forcePushed"}, {"oid": "38b651d6874ccf4c7384d1c4bfe2a7d014fd564c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/38b651d6874ccf4c7384d1c4bfe2a7d014fd564c", "message": "Move the Strand state check to object method call", "committedDate": "2020-05-19T02:56:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNjUzNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r427106536", "bodyText": "can we remove individual null checks and move it to the if block below (at line 104)", "author": "manuranga", "createdAt": "2020-05-19T08:04:00Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -76,17 +79,51 @@\n      * @param fieldValues values to be used for fields when creating the object value instance.\n      * @return value of the object.\n      */\n+    @Deprecated\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n+        return createObjectValue(packageId, objectTypeName, getStrand(), fieldValues);\n+    }\n+\n+    private static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Strand currentStrand,\n+                                                Object... fieldValues) {\n+        //This method duplicates the createObjectValue with referencing the issue in runtime API getting strand\n         ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n         Object[] fields = new Object[fieldValues.length * 2];\n+        Scheduler scheduler = currentStrand != null ? currentStrand.scheduler : null;", "originalCommit": "38b651d6874ccf4c7384d1c4bfe2a7d014fd564c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNzI4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r427107285", "bodyText": "Isn't it enough to check currentStrand != null why do we check currentStrand.getState() != State.RUNNABLE ?", "author": "manuranga", "createdAt": "2020-05-19T08:05:17Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -76,17 +79,51 @@\n      * @param fieldValues values to be used for fields when creating the object value instance.\n      * @return value of the object.\n      */\n+    @Deprecated\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n+        return createObjectValue(packageId, objectTypeName, getStrand(), fieldValues);\n+    }\n+\n+    private static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Strand currentStrand,\n+                                                Object... fieldValues) {\n+        //This method duplicates the createObjectValue with referencing the issue in runtime API getting strand\n         ValueCreator valueCreator = ValueCreator.getValueCreator(packageId.toString());\n         Object[] fields = new Object[fieldValues.length * 2];\n+        Scheduler scheduler = currentStrand != null ? currentStrand.scheduler : null;\n+        State prevState = currentStrand != null ? currentStrand.getState() : State.RUNNABLE;\n+        boolean prevBlockedOnExtern = currentStrand != null && currentStrand.blockedOnExtern;\n+        ObjectValue returnObjectValue;\n \n         // Adding boolean values for each arg\n         for (int i = 0, j = 0; i < fieldValues.length; i++) {\n             fields[j++] = fieldValues[i];\n             fields[j++] = true;\n         }\n-        //passing scheduler, strand and properties as null for the moment, but better to expose them via this method\n-        return valueCreator.createObjectValue(objectTypeName, null, null, null, fields);\n+        try {\n+            //Check for non-blocking call\n+            if (currentStrand != null && currentStrand.getState() != State.RUNNABLE) {", "originalCommit": "38b651d6874ccf4c7384d1c4bfe2a7d014fd564c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e07dff22a952cdc25932905e319e96a0f7a7474d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e07dff22a952cdc25932905e319e96a0f7a7474d", "message": "Modify redundant checks, unit test", "committedDate": "2020-05-19T10:19:00Z", "type": "forcePushed"}, {"oid": "480c929543fdad5fe5ce6766944ec28c78306419", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/480c929543fdad5fe5ce6766944ec28c78306419", "message": "Modify redundant checks, unit test", "committedDate": "2020-05-19T15:19:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2MjMyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22913#discussion_r427862329", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                            Object... fieldValues) {\n          \n          \n            \n                                                             Object... fieldValues) {", "author": "warunalakshitha", "createdAt": "2020-05-20T09:16:28Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaValues.java", "diffHunk": "@@ -76,17 +79,54 @@\n      * @param fieldValues values to be used for fields when creating the object value instance.\n      * @return value of the object.\n      */\n+    @Deprecated\n     public static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Object... fieldValues) {\n+        return createObjectValue(packageId, objectTypeName, getStrand(), fieldValues);\n+    }\n+\n+    private static ObjectValue createObjectValue(BPackage packageId, String objectTypeName, Strand currentStrand,\n+                                                Object... fieldValues) {", "originalCommit": "480c929543fdad5fe5ce6766944ec28c78306419", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db6ff302578c5bc5f6b339483404b4d4957bb322", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db6ff302578c5bc5f6b339483404b4d4957bb322", "message": "Modify code style errors and unit test", "committedDate": "2020-05-20T09:53:56Z", "type": "forcePushed"}, {"oid": "b6f7ceefd7f3dfcbc051074366774953143ddb20", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b6f7ceefd7f3dfcbc051074366774953143ddb20", "message": "Modify code style suggestions", "committedDate": "2020-05-22T08:49:57Z", "type": "forcePushed"}, {"oid": "05f6a295753ff39a3fc3d3bf7f4ff4c92a95b9cd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/05f6a295753ff39a3fc3d3bf7f4ff4c92a95b9cd", "message": "Fix the null strand and null scheduler passing in empty object creation\n\nThis commit relates to the issue #21018", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "9fb93485da20cecc1efb13507a208cf6043e80b7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fb93485da20cecc1efb13507a208cf6043e80b7", "message": "Add unit test case for the fix in empty object creation\n\nThis commit adds a test case related to the issue #21018", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "1554d1a27762ab49446476ac2ac8436f4e93a269", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1554d1a27762ab49446476ac2ac8436f4e93a269", "message": "Add issue references inside the get Strand method\n\nThis commit relates to the issue #21018", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "c8505aea965dc76ec20648ff6bff040d99f05e9c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c8505aea965dc76ec20648ff6bff040d99f05e9c", "message": "Add current strand parameter to the create object method", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "5ca37fc6794b1af258456ef078042477832a0ac5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ca37fc6794b1af258456ef078042477832a0ac5", "message": "Remove unnecessary lines and get Scheduler method", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "f5a74698259e76168f2114c06578d889ef4962f5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5a74698259e76168f2114c06578d889ef4962f5", "message": "Fix checkstyle errors", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "f7154a6ebcc71cb04b8147e2ab0e7af9ba33fa81", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f7154a6ebcc71cb04b8147e2ab0e7af9ba33fa81", "message": "Add issue reference to the code", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "2906adde09359a1b2b9736eac20d065034a3f965", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2906adde09359a1b2b9736eac20d065034a3f965", "message": "Modify method calls using default parameters", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "13664c670c8391d77ea92c34a79345c441d7facb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13664c670c8391d77ea92c34a79345c441d7facb", "message": "Change access modifier of createObjectValue", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "ade370c0d09446f0efd5496ca60e91d056bf8546", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ade370c0d09446f0efd5496ca60e91d056bf8546", "message": "Rename test case", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "fba2ba92935c80ae3be437d870a43b1bfe10b2dd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fba2ba92935c80ae3be437d870a43b1bfe10b2dd", "message": "Fix async call to createObjectValue for test failure", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "ec38cd9d273caebfbf00ec4f040a72287f2fb296", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ec38cd9d273caebfbf00ec4f040a72287f2fb296", "message": "Move the Strand state check to object method call", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "a78c010af5877e12ad1bf1782225a3bb84fe3b49", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a78c010af5877e12ad1bf1782225a3bb84fe3b49", "message": "Modify redundant checks, unit test", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "e8d57a7739006eb42a1f789c65ab0f81b8905a70", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e8d57a7739006eb42a1f789c65ab0f81b8905a70", "message": "Modify code style errors and unit test", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "62cdd2a52df7c305e6eb0b611f14c91d82ec5c22", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/62cdd2a52df7c305e6eb0b611f14c91d82ec5c22", "message": "Modify code style suggestions", "committedDate": "2020-05-22T11:58:51Z", "type": "commit"}, {"oid": "62cdd2a52df7c305e6eb0b611f14c91d82ec5c22", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/62cdd2a52df7c305e6eb0b611f14c91d82ec5c22", "message": "Modify code style suggestions", "committedDate": "2020-05-22T11:58:51Z", "type": "forcePushed"}]}