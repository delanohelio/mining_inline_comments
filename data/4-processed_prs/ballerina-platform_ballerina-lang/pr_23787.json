{"pr_number": 23787, "pr_title": "Fix missing param issue in interop pararmTypes constrain", "pr_createdAt": "2020-06-08T05:42:33Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23787", "timeline": [{"oid": "6b34da6fd47daa3cfc3f2ef51ff410861afabe94", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b34da6fd47daa3cfc3f2ef51ff410861afabe94", "message": "Skip further processing when constraint params are less in size\n\nWhen resolving method based on the param type constraint, we have\nto skip when the given constraint params are less than of the\nmethod's params", "committedDate": "2020-06-08T05:34:13Z", "type": "commit"}, {"oid": "05829945e678320d76adeafa5242eeef6ce734a3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/05829945e678320d76adeafa5242eeef6ce734a3", "message": "Add test cases to verify constraint param length", "committedDate": "2020-06-08T05:37:21Z", "type": "commit"}, {"oid": "0f31eb05feac8156c7626891a64172c9b15eea7c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0f31eb05feac8156c7626891a64172c9b15eea7c", "message": "Merge branch 'master' into fix-23488", "committedDate": "2020-06-08T05:37:45Z", "type": "commit"}, {"oid": "c32150468c0d81802447d537779b1e10730e4058", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c32150468c0d81802447d537779b1e10730e4058", "message": "Remove unwanted param constraint for hashCode native method", "committedDate": "2020-06-08T06:21:41Z", "type": "commit"}, {"oid": "860631b637ea0b1fbd361d4d024d2208be321d5e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/860631b637ea0b1fbd361d4d024d2208be321d5e", "message": "Skip if the given constraint params are not of the same size\n\nWe have to check both constraint and method params length and\nskip the processing if they are not the same.", "committedDate": "2020-06-08T06:22:51Z", "type": "commit"}, {"oid": "2b714fb13a142a8f6d172477e91adaf9a86c2b6a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b714fb13a142a8f6d172477e91adaf9a86c2b6a", "message": "Add more test cases with different constraint params", "committedDate": "2020-06-08T06:24:39Z", "type": "commit"}, {"oid": "7207b3f6b3731ae2c910f962bffae08d7d1a8a9c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7207b3f6b3731ae2c910f962bffae08d7d1a8a9c", "message": "Remove extra String param from constraint", "committedDate": "2020-06-08T09:39:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2Mjg2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23787#discussion_r437062863", "bodyText": "Shall we make  \"method_not_found6.bal\" a local variable?", "author": "riyafa", "createdAt": "2020-06-08T23:54:17Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/basic/NegativeValidationTest.java", "diffHunk": "@@ -118,6 +118,41 @@ public void testMethodNotFound5() {\n                 \"method_not_found5.bal\", 23, 1);\n     }\n \n+    @Test\n+    public void testMethodNotFound6() {\n+\n+        String path = \"test-src/javainterop/negative/method_not_found6.bal\";\n+\n+        CompileResult compileResult = BCompileUtil.compileInProc(path);\n+        compileResult.getDiagnostics();\n+        Assert.assertEquals(compileResult.getDiagnostics().length, 4);\n+        BAssertUtil.validateError(compileResult, 0,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getFuture' that matches with parameter \" +\n+                        \"types '(org.ballerinalang.jvm.values.api.BTypedesc)' found in class \" +\n+                        \"'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 3, 1);\n+\n+        BAssertUtil.validateError(compileResult, 1,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getTypeDesc' that matches with parameter \" +\n+                        \"types '(org.ballerinalang.jvm.values.api.BFuture)' found in class \" +\n+                        \"'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 9, 1);\n+\n+        BAssertUtil.validateError(compileResult, 2,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getFutureOnly' that \" +\n+                        \"matches with parameter types \" +\n+                        \"'(org.ballerinalang.jvm.values.api.BFuture,org.ballerinalang.jvm.values.api.BTypedesc)' \" +\n+                        \"found in class 'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 15, 1);\n+\n+        BAssertUtil.validateError(compileResult, 3,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getTypeDescOnly' that \" +\n+                        \"matches with parameter types \" +\n+                        \"'(org.ballerinalang.jvm.values.api.BTypedesc,org.ballerinalang.jvm.values.api.BFuture)' \" +\n+                        \"found in class 'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 21, 1);", "originalCommit": "7207b3f6b3731ae2c910f962bffae08d7d1a8a9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzNzMzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23787#discussion_r437237333", "bodyText": "ack", "author": "Kishanthan", "createdAt": "2020-06-09T08:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2Mjg2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2MzM1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23787#discussion_r437063359", "bodyText": "We can use a String formatter to plug in values for the method name and the  type instead of repeating it multipe time?\nString formatter =                 \"{ballerina/java}METHOD_NOT_FOUND 'No such public method '%s' that \" +\n                        \"matches with parameter types \" +\n                        \"'(%s)' \" +\n                        \"found in class 'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\"", "author": "riyafa", "createdAt": "2020-06-08T23:56:08Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/basic/NegativeValidationTest.java", "diffHunk": "@@ -118,6 +118,41 @@ public void testMethodNotFound5() {\n                 \"method_not_found5.bal\", 23, 1);\n     }\n \n+    @Test\n+    public void testMethodNotFound6() {\n+\n+        String path = \"test-src/javainterop/negative/method_not_found6.bal\";\n+\n+        CompileResult compileResult = BCompileUtil.compileInProc(path);\n+        compileResult.getDiagnostics();\n+        Assert.assertEquals(compileResult.getDiagnostics().length, 4);\n+        BAssertUtil.validateError(compileResult, 0,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getFuture' that matches with parameter \" +\n+                        \"types '(org.ballerinalang.jvm.values.api.BTypedesc)' found in class \" +\n+                        \"'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 3, 1);\n+\n+        BAssertUtil.validateError(compileResult, 1,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getTypeDesc' that matches with parameter \" +\n+                        \"types '(org.ballerinalang.jvm.values.api.BFuture)' found in class \" +\n+                        \"'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 9, 1);\n+\n+        BAssertUtil.validateError(compileResult, 2,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getFutureOnly' that \" +\n+                        \"matches with parameter types \" +\n+                        \"'(org.ballerinalang.jvm.values.api.BFuture,org.ballerinalang.jvm.values.api.BTypedesc)' \" +\n+                        \"found in class 'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",\n+                \"method_not_found6.bal\", 15, 1);\n+\n+        BAssertUtil.validateError(compileResult, 3,\n+                \"{ballerina/java}METHOD_NOT_FOUND 'No such public method 'getTypeDescOnly' that \" +\n+                        \"matches with parameter types \" +\n+                        \"'(org.ballerinalang.jvm.values.api.BTypedesc,org.ballerinalang.jvm.values.api.BFuture)' \" +\n+                        \"found in class 'class org.ballerinalang.nativeimpl.jvm.tests.StaticMethods''\",", "originalCommit": "7207b3f6b3731ae2c910f962bffae08d7d1a8a9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzNzM5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23787#discussion_r437237392", "bodyText": "ack", "author": "Kishanthan", "createdAt": "2020-06-09T08:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2MzM1OQ=="}], "type": "inlineReview"}, {"oid": "e0a325f258e61f6992f29f764c0840233dcbc0b5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0a325f258e61f6992f29f764c0840233dcbc0b5", "message": "Use string format as suggested in the review", "committedDate": "2020-06-09T08:41:28Z", "type": "commit"}, {"oid": "01888bf234ff9b302f0773be9a025d85ce54f125", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01888bf234ff9b302f0773be9a025d85ce54f125", "message": "Remove empty method bodies", "committedDate": "2020-06-11T06:46:17Z", "type": "commit"}, {"oid": "01888bf234ff9b302f0773be9a025d85ce54f125", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01888bf234ff9b302f0773be9a025d85ce54f125", "message": "Remove empty method bodies", "committedDate": "2020-06-11T06:46:17Z", "type": "forcePushed"}]}