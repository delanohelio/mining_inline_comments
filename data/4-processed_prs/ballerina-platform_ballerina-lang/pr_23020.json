{"pr_number": 23020, "pr_title": "Add support for block statement", "pr_createdAt": "2020-04-30T07:28:04Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020", "timeline": [{"oid": "8ee8e2e71b3a161d28b6c5d0c8526d02353c6d2e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ee8e2e71b3a161d28b6c5d0c8526d02353c6d2e", "message": "Add grammar for block-stmt", "committedDate": "2020-04-29T15:23:42Z", "type": "commit"}, {"oid": "f2c945a21904633e2db38c80b3c4a263285d553a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f2c945a21904633e2db38c80b3c4a263285d553a", "message": "Visit and analyze all phases related to block-stmt", "committedDate": "2020-04-29T20:27:36Z", "type": "commit"}, {"oid": "269edc722877285ebdd9e1f05fa026949f1a0ef8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/269edc722877285ebdd9e1f05fa026949f1a0ef8", "message": "Add block-stmt tests", "committedDate": "2020-04-30T07:04:07Z", "type": "commit"}, {"oid": "74c0feca982c9f82ede80b73068e5e91b60e6fe4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/74c0feca982c9f82ede80b73068e5e91b60e6fe4", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-22872\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java", "committedDate": "2020-04-30T08:00:38Z", "type": "commit"}, {"oid": "e18bf1b3999e27f28fee465e6f930493248ca190", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e18bf1b3999e27f28fee465e6f930493248ca190", "message": "Regenerate ballerina parser", "committedDate": "2020-04-30T13:59:24Z", "type": "commit"}, {"oid": "e18bf1b3999e27f28fee465e6f930493248ca190", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e18bf1b3999e27f28fee465e6f930493248ca190", "message": "Regenerate ballerina parser", "committedDate": "2020-04-30T13:59:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU5NDY4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r420594682", "bodyText": "Suggested change", "author": "dulajdilshan", "createdAt": "2020-05-06T07:30:01Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangBlock.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.ballerinalang.compiler.tree.statements;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.statements.BlockNode;\n+import org.ballerinalang.model.tree.statements.BlockStatementNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+/**\n+ * @since 0.94\n+ */\n+public class BLangBlock extends BLangStatement implements BlockNode {\n+\n+    public BLangBlockStmt body;\n+\n+    public BLangBlock() {\n+    }\n+\n+    public BLangBlock(BLangBlockStmt body) {\n+", "originalCommit": "e18bf1b3999e27f28fee465e6f930493248ca190", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MTU2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r423751562", "bodyText": "Changed", "author": "chiranSachintha", "createdAt": "2020-05-12T13:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU5NDY4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMTU4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r422811581", "bodyText": "Can we not use BLangBlockStmt, BlockStatementNode with some modifications instead of introducing new nodes? They are the same right? IMO, with this change we're introducing two ways to do the same thing.\n@pubudu91 thoughts?", "author": "MaryamZi", "createdAt": "2020-05-11T06:34:02Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangBlock.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.ballerinalang.compiler.tree.statements;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.statements.BlockNode;\n+import org.ballerinalang.model.tree.statements.BlockStatementNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+/**\n+ * @since 0.94\n+ */\n+public class BLangBlock extends BLangStatement implements BlockNode {", "originalCommit": "e18bf1b3999e27f28fee465e6f930493248ca190", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg0NzE5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r422847198", "bodyText": "The reason to add new node is to specialize block statement as one type of statement. I think when considering BLangBlockStmt it keeps all types of statements.", "author": "chiranSachintha", "createdAt": "2020-05-11T07:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMTU4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NjQyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r423756429", "bodyText": "Logic was changed according to available nodes.(BLangBlockStmt, BlockStatementNode)", "author": "chiranSachintha", "createdAt": "2020-05-12T13:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMTU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMjg4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r422812883", "bodyText": "Formatting seems off.", "author": "MaryamZi", "createdAt": "2020-05-11T06:37:18Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt.bal", "diffHunk": "@@ -102,3 +102,62 @@ function test3() returns string {\n     string a = foo(3.4);\n     return a;\n }\n+\n+function returnStmtLocation1InBlock() returns int {\n+    int a = 2;\n+    {\n+        a = 10;\n+    }\n+    return a;\n+}\n+\n+function returnStmtLocation2InBlock() returns int {\n+    int a = 2;\n+    {\n+        a = 10;\n+        return a;\n+    }\n+    return a;\n+}\n+\n+int a = 10;\n+function testScopeOfBlock() {\n+    {\n+        int a = 5;\n+    }\n+    assertEquality(10, a);\n+}\n+\n+function testStmtInBlock() {\n+    int a = 2;\n+    int b = 5;\n+    {\n+        while(a < 4) {\n+            a = a + 1;\n+            if (a == 3) {\n+                b = 8;\n+                }\n+            }", "originalCommit": "e18bf1b3999e27f28fee465e6f930493248ca190", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NjU4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r423756585", "bodyText": "Fixed", "author": "chiranSachintha", "createdAt": "2020-05-12T13:59:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMjg4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMzAyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r422813028", "bodyText": "Is this formatting correct?", "author": "MaryamZi", "createdAt": "2020-05-11T06:37:39Z", "path": "language-server/modules/langserver-core/src/test/resources/formatting/expected/expectedNegativeEOF.bal", "diffHunk": "@@ -65,8 +65,7 @@ function getData(json payload) returns [string, string]? {\n                 }\n             }\n         } else\n-    {\n+{}", "originalCommit": "e18bf1b3999e27f28fee465e6f930493248ca190", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg2NjAyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r422866020", "bodyText": "No, with this change, \"{ }\" can use as an empty block statement and it will change the format. I have mentioned this in tooling team too.", "author": "chiranSachintha", "createdAt": "2020-05-11T08:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMzAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODkwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424198904", "bodyText": "Can you create an issue to track this?", "author": "MaryamZi", "createdAt": "2020-05-13T06:25:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMzAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MzE1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424373153", "bodyText": "Sure I will", "author": "chiranSachintha", "createdAt": "2020-05-13T11:45:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgxMzAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTM1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r423435354", "bodyText": "wrong year", "author": "SupunS", "createdAt": "2020-05-12T03:07:10Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/statements/BlockNode.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "e18bf1b3999e27f28fee465e6f930493248ca190", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NjgxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r423756817", "bodyText": "Changed", "author": "chiranSachintha", "createdAt": "2020-05-12T14:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTcwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r423435703", "bodyText": "you can use a single line description, and then use <code> { statement* } </code> to represent the code", "author": "SupunS", "createdAt": "2020-05-12T03:08:43Z", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/statements/BlockNode.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.model.tree.statements;\n+\n+/**\n+ * {.\n+ *  body.\n+ * }.", "originalCommit": "e18bf1b3999e27f28fee465e6f930493248ca190", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4580a05ff04f3cd7cd3b5a8bdd221704e83507a4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4580a05ff04f3cd7cd3b5a8bdd221704e83507a4", "message": "Fix review suggestions", "committedDate": "2020-05-12T09:25:03Z", "type": "commit"}, {"oid": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "message": "Modify some block-stmt tests", "committedDate": "2020-05-12T11:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424198302", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(a == 3) {\n          \n          \n            \n                        if (a == 3) {", "author": "MaryamZi", "createdAt": "2020-05-13T06:23:46Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt.bal", "diffHunk": "@@ -102,3 +102,61 @@ function test3() returns string {\n     string a = foo(3.4);\n     return a;\n }\n+\n+function returnStmtLocation1InBlock() returns int {\n+    int a = 2;\n+    {\n+        a = 10;\n+    }\n+    return a;\n+}\n+\n+function returnStmtLocation2InBlock() returns int {\n+    int a = 2;\n+    {\n+        a = 10;\n+        return a;\n+    }\n+}\n+\n+int a = 10;\n+function testScopeOfBlock() {\n+    {\n+        int a = 5;\n+    }\n+    assertEquality(10, a);\n+}\n+\n+function testStmtInBlock() {\n+    int a = 2;\n+    int b = 5;\n+    {\n+        while(a < 4) {\n+            a = a + 1;\n+            if(a == 3) {", "originalCommit": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODY4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424198684", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while(a < 4) {\n          \n          \n            \n                    while (a < 4) {", "author": "MaryamZi", "createdAt": "2020-05-13T06:24:40Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt.bal", "diffHunk": "@@ -102,3 +102,61 @@ function test3() returns string {\n     string a = foo(3.4);\n     return a;\n }\n+\n+function returnStmtLocation1InBlock() returns int {\n+    int a = 2;\n+    {\n+        a = 10;\n+    }\n+    return a;\n+}\n+\n+function returnStmtLocation2InBlock() returns int {\n+    int a = 2;\n+    {\n+        a = 10;\n+        return a;\n+    }\n+}\n+\n+int a = 10;\n+function testScopeOfBlock() {\n+    {\n+        int a = 5;\n+    }\n+    assertEquality(10, a);\n+}\n+\n+function testStmtInBlock() {\n+    int a = 2;\n+    int b = 5;\n+    {\n+        while(a < 4) {", "originalCommit": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5OTA2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424199064", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function testRedeclareFunctionArgumentInBlockStmt (int value) returns (string) {\n          \n          \n            \n            function testRedeclareFunctionParameterInBlockStmt(int value) returns string {", "author": "MaryamZi", "createdAt": "2020-05-13T06:25:38Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt-semantics-negative.bal", "diffHunk": "@@ -13,3 +13,13 @@ function testRedeclareFunctionArgument (int value) returns (string) {\n     }\n     return \"done\";\n }\n+\n+function testRedeclareFunctionArgumentInBlockStmt (int value) returns (string) {", "originalCommit": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMDUyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424200527", "bodyText": "This logic isn't relevant to this test right?", "author": "MaryamZi", "createdAt": "2020-05-13T06:29:50Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt-semantics-negative.bal", "diffHunk": "@@ -13,3 +13,13 @@ function testRedeclareFunctionArgument (int value) returns (string) {\n     }\n     return \"done\";\n }\n+\n+function testRedeclareFunctionArgumentInBlockStmt (int value) returns (string) {\n+    {\n+        int value = 11;\n+        testError tError = {message: \"error\", cause: error(\"errorMsg\", code = \"test\")};\n+        return \"unreachable throw\";\n+        panic tError.cause;", "originalCommit": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMDY4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424200687", "bodyText": "Can we also add negative tests for something like\nfunction test() {\n    {\n        int i = 1;\n        \n        {\n            int i = 2;\n        }\n    }\n}", "author": "MaryamZi", "createdAt": "2020-05-13T06:30:12Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt-semantics-negative.bal", "diffHunk": "@@ -13,3 +13,13 @@ function testRedeclareFunctionArgument (int value) returns (string) {\n     }\n     return \"done\";\n }\n+\n+function testRedeclareFunctionArgumentInBlockStmt (int value) returns (string) {\n+    {\n+        int value = 11;\n+        testError tError = {message: \"error\", cause: error(\"errorMsg\", code = \"test\")};\n+        return \"unreachable throw\";\n+        panic tError.cause;\n+    }\n+    return \"done\";\n+}", "originalCommit": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMjI3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424202279", "bodyText": "And maybe uninitialized variable tests.\nfunction test() {\n    int i;\n    {\n        int j = i; // uninitialized i\n        \n        {\n            i += 2; // // uninitialized i\n        }\n    }\n}", "author": "MaryamZi", "createdAt": "2020-05-13T06:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMDY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI0MzM1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424243359", "bodyText": "And for closures as well. Both positive and negative", "author": "pubudu91", "createdAt": "2020-05-13T07:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMDY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2NTQyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424365429", "bodyText": "Done", "author": "chiranSachintha", "createdAt": "2020-05-13T11:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMDY4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNzIyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424237223", "bodyText": "Are we only just adding the block statement? What about the statements which make use of block statements? Or will that be fixed with the new parser?", "author": "pubudu91", "createdAt": "2020-05-13T07:45:43Z", "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -58,6 +58,10 @@ blockFunctionBody\n     :   LEFT_BRACE statement* (workerDeclaration+ statement*)? RIGHT_BRACE\n     ;\n \n+blockStatement", "originalCommit": "91d7aa61b0351cb94296b5ad5e0e7f4803090ceb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NTM4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424575382", "bodyText": "this is fixed with new parser", "author": "hasithaa", "createdAt": "2020-05-13T16:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNzIyMw=="}], "type": "inlineReview"}, {"oid": "44cb6a9972c8cf428fcb1adddcd3e50664b26f7d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/44cb6a9972c8cf428fcb1adddcd3e50664b26f7d", "message": "Fix review suggestions", "committedDate": "2020-05-13T08:02:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5NzA5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424297096", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(a > 10) {\n          \n          \n            \n                if (a > 10) {", "author": "MaryamZi", "createdAt": "2020-05-13T09:22:57Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/block/block-stmt-negative.bal", "diffHunk": "@@ -117,3 +117,15 @@ function testRedeclareFunctionArgument (int value) returns (string) {\n     }\n     return \"done\";\n }\n+\n+function testUnreachableStmtInBlock() {\n+    int a = 2;\n+    {\n+        string s1 = \"hello Block\";\n+        return;\n+        int i = 9;\n+    }\n+    if(a > 10) {", "originalCommit": "44cb6a9972c8cf428fcb1adddcd3e50664b26f7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2NTMwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23020#discussion_r424365307", "bodyText": "Fixed", "author": "chiranSachintha", "createdAt": "2020-05-13T11:29:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5NzA5Ng=="}], "type": "inlineReview"}, {"oid": "7c9823d814c21565b7ac3650b3228ee639999b5d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7c9823d814c21565b7ac3650b3228ee639999b5d", "message": "Fix review suggestions", "committedDate": "2020-05-13T11:28:09Z", "type": "commit"}, {"oid": "8e261302d663440ca5640c849479740e42d482b8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e261302d663440ca5640c849479740e42d482b8", "message": "Apply suggestions from code review\n\nCo-authored-by: Maryam Ziyad <maryamziyadm@gmail.com>", "committedDate": "2020-05-13T16:35:57Z", "type": "commit"}, {"oid": "75e550af801cdb1c4ecc3165c9a0705d71c3fbb9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/75e550af801cdb1c4ecc3165c9a0705d71c3fbb9", "message": "Fix failure tests", "committedDate": "2020-05-13T17:26:16Z", "type": "commit"}, {"oid": "3dd614a1fc2227030cf7ff3138567fcff0934547", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3dd614a1fc2227030cf7ff3138567fcff0934547", "message": "Merge branch 'issue-22872' of https://github.com/chiranSachintha/ballerina-lang into issue-22872", "committedDate": "2020-05-13T17:30:58Z", "type": "commit"}]}