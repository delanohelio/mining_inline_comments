{"pr_number": 22219, "pr_title": "Add missing docs in RabbitMQ and NATS modules", "pr_createdAt": "2020-03-26T08:34:31Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219", "timeline": [{"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f33f57f69602551e3c72048b9c9bdf66419150b4", "message": "Add missing docs in RabbitMQ and NATS modules", "committedDate": "2020-03-26T08:29:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxODcxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398418711", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Default URL for NATS conections\n          \n          \n            \n            # Default URL for NATS connections.", "author": "praneesha", "createdAt": "2020-03-26T09:15:26Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/commons.bal", "diffHunk": "@@ -14,8 +14,10 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+# Default URL for NATS conections", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxODk0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398418940", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Data types supported in publishing and consuming messages\n          \n          \n            \n            # Data types supported when publishing and consuming messages.", "author": "praneesha", "createdAt": "2020-03-26T09:15:49Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/commons.bal", "diffHunk": "@@ -14,8 +14,10 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+# Default URL for NATS conections\n public const string DEFAULT_URL = \"nats://localhost:4222\";\n \n+# Data types supported in publishing and consuming messages", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTA1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419058", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the NATS module related errors\n          \n          \n            \n            # Represents the reason for the NATS module related errors.", "author": "praneesha", "createdAt": "2020-03-26T09:16:00Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/error.bal", "diffHunk": "@@ -23,8 +23,10 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the NATS module related errors", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTE1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419152", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents NATS module related errors\n          \n          \n            \n            # Represents NATS module related errors.", "author": "praneesha", "createdAt": "2020-03-26T09:16:09Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/error.bal", "diffHunk": "@@ -23,8 +23,10 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the NATS module related errors\n public const NATS_ERROR = \"{ballerina/nats}Error\";\n \n+# Represents NATS module related errors", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTI5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with the messages, which are published after the subscription is created\n          \n          \n            \n            # Specifies that message delivery should start with the messages, which are published after the subscription is created.", "author": "praneesha", "createdAt": "2020-03-26T09:16:25Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTQyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419428", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with the last (most recent) message stored for this subject\n          \n          \n            \n            # Specifies that message delivery should start with the last (most recent) message stored for this subject.", "author": "praneesha", "createdAt": "2020-03-26T09:16:37Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTUxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419519", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should begin at the oldest available message for this subject\n          \n          \n            \n            # Specifies that message delivery should begin at the oldest available message for this subject.", "author": "praneesha", "createdAt": "2020-03-26T09:16:45Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTcwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419701", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The constant string value for the type `TimeDeltaStart`\n          \n          \n            \n            # The constant string value for the `TimeDeltaStart` type.", "author": "praneesha", "createdAt": "2020-03-26T09:17:04Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTkwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419902", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The constant string value for the type `SequenceNumber`\n          \n          \n            \n            # The constant string value for the `SequenceNumber` type.", "author": "praneesha", "createdAt": "2020-03-26T09:17:21Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDAwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420007", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with a given historical time delta (from now)\n          \n          \n            \n            # Specifies that message delivery should start with a given historical time delta (from now).", "author": "praneesha", "createdAt": "2020-03-26T09:17:28Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`\n public const SEQUENCE_NUMBER = \"SEQUENCE_NUMBER\";\n \n+# Specifies that message delivery should start with a given historical time delta (from now)", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDA3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420075", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start at the given sequence number\n          \n          \n            \n            # Specifies that message delivery should start at the given sequence number.", "author": "praneesha", "createdAt": "2020-03-26T09:17:36Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`\n public const SEQUENCE_NUMBER = \"SEQUENCE_NUMBER\";\n \n+# Specifies that message delivery should start with a given historical time delta (from now)\n public type TimeDeltaStart [TIME_DELTA_START, int];\n \n+# Specifies that message delivery should start at the given sequence number", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDE2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420166", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The position to start receiving messages\n          \n          \n            \n            # The position to start receiving messages.", "author": "praneesha", "createdAt": "2020-03-26T09:17:44Z", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`\n public const SEQUENCE_NUMBER = \"SEQUENCE_NUMBER\";\n \n+# Specifies that message delivery should start with a given historical time delta (from now)\n public type TimeDeltaStart [TIME_DELTA_START, int];\n \n+# Specifies that message delivery should start at the given sequence number\n public type SequenceNumber [SEQUENCE_NUMBER, int];\n \n-# The position to start receiving messages.\n-# NEW_ONLY - Specifies that message delivery should start with the messages, which are published after the subscription\n-# is created.\n-# LAST_RECEIVED - Specifies that message delivery should start with the last (most recent) message stored for\n-# this subject.\n-# TimeDeltaStart - Specifies that message delivery should start with a given historical time delta (from now).\n-# SequenceNumber - Specifies that message delivery should start at the given sequence number.\n-# FIRST - Specifies that message delivery should begin at the oldest available message for this subject.\n+# The position to start receiving messages", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDMyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420329", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Nil or error upon failure to close ChannelListener\n          \n          \n            \n                # + return - Nil or error upon failure to close the `ChannelListener`", "author": "praneesha", "createdAt": "2020-03-26T09:18:01Z", "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/listener.bal", "diffHunk": "@@ -67,6 +67,9 @@ public type Listener object {\n         return detach(self, s);\n     }\n \n+    # Stops consuming messages through all consumer services by terminating the connection and all its channels.\n+    #\n+    # + return - Nil or error upon failure to close ChannelListener", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDQyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420425", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the RabbitMQ module related errors\n          \n          \n            \n            # Represents the reason for the RabbitMQ module related errors.", "author": "praneesha", "createdAt": "2020-03-26T09:18:07Z", "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/rabbitmq_errors.bal", "diffHunk": "@@ -23,5 +23,8 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the RabbitMQ module related errors", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDU1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420556", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents RabbitMQ module related errors\n          \n          \n            \n            # Represents the RabbitMQ module related errors.", "author": "praneesha", "createdAt": "2020-03-26T09:18:18Z", "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/rabbitmq_errors.bal", "diffHunk": "@@ -23,5 +23,8 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the RabbitMQ module related errors\n public const RABBITMQ_ERROR = \"{ballerina/rabbitmq}Error\";\n+\n+# Represents RabbitMQ module related errors", "originalCommit": "f33f57f69602551e3c72048b9c9bdf66419150b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "71c8f8481159efbe709345aebd4c7d426c94800c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71c8f8481159efbe709345aebd4c7d426c94800c", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-03-26T11:35:14Z", "type": "commit"}]}