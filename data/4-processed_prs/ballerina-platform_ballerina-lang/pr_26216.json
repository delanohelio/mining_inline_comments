{"pr_number": 26216, "pr_title": "Map internal symbol flags to qualifiers in public symbol API", "pr_createdAt": "2020-10-05T19:18:15Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216", "timeline": [{"oid": "7464d1ec16c2f0e64d40f468d5cba9b6c7537a30", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7464d1ec16c2f0e64d40f468d5cba9b6c7537a30", "message": "Add test cases for symbol flags to qualifiers mapping", "committedDate": "2020-10-05T20:05:38Z", "type": "forcePushed"}, {"oid": "b3a156d2b7f4e580bda67e2bd9f5906953bcd636", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3a156d2b7f4e580bda67e2bd9f5906953bcd636", "message": "Add test cases for symbol flags to qualifiers mapping", "committedDate": "2020-10-05T20:17:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MTA0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500171049", "bodyText": "Won't this result in some incorrect line-numbers for service declarations?", "author": "SupunS", "createdAt": "2020-10-06T10:32:04Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1095,7 +1095,7 @@ private BLangNode createService(Node serviceNode, IdentifierToken serviceNameNod\n         // 1) Define type nodeDefinition for service type.\n         BLangClassDefinition classDef = (BLangClassDefinition) TreeBuilder.createClassDefNode();\n         BLangIdentifier serviceTypeID = createIdentifier(identifierPos, serviceTypeName);\n-        serviceTypeID.pos = pos;\n+        serviceTypeID.pos = symTable.builtinPos;", "originalCommit": "48a5e10bf282e039edf2b6407d2ae9b79e2b32a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MDEzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500190133", "bodyText": "Hmm.. Good point. Will check this and see. It looks like we are not skipping class defs generated for services. Will have to filter these in another way if that's the case.", "author": "pubudu91", "createdAt": "2020-10-06T11:08:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MTA0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MTU4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500171582", "bodyText": "Should this be sentence-case?", "author": "SupunS", "createdAt": "2020-10-06T10:33:06Z", "path": "compiler/ballerina-compiler-api/src/main/java/io/ballerina/compiler/api/symbols/FunctionSymbol.java", "diffHunk": "@@ -19,27 +19,26 @@\n \n import io.ballerina.compiler.api.types.BallerinaTypeDescriptor;\n \n-import java.util.List;\n import java.util.Optional;\n \n /**\n  * Represent Function Symbol.\n  *\n  * @since 2.0.0\n  */\n-public interface FunctionSymbol extends Symbol {\n+public interface FunctionSymbol extends Symbol, Qualifiable, Deprecatable {\n \n     /**\n-     * Get the list of qualifiers.\n+     * Get the Function Type Descriptor.", "originalCommit": "48a5e10bf282e039edf2b6407d2ae9b79e2b32a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4OTM0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500189347", "bodyText": "Yeah, should be. Will change.", "author": "pubudu91", "createdAt": "2020-10-06T11:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MTU4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MjYyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500172628", "bodyText": "Can the type-desc be null?", "author": "SupunS", "createdAt": "2020-10-06T10:35:08Z", "path": "compiler/ballerina-compiler-api/src/main/java/io/ballerina/compiler/api/symbols/FunctionSymbol.java", "diffHunk": "@@ -19,27 +19,26 @@\n \n import io.ballerina.compiler.api.types.BallerinaTypeDescriptor;\n \n-import java.util.List;\n import java.util.Optional;\n \n /**\n  * Represent Function Symbol.\n  *\n  * @since 2.0.0\n  */\n-public interface FunctionSymbol extends Symbol {\n+public interface FunctionSymbol extends Symbol, Qualifiable, Deprecatable {\n \n     /**\n-     * Get the list of qualifiers.\n+     * Get the Function Type Descriptor.\n      *\n-     * @return {@link List} of qualifiers\n+     * @return {@link BallerinaTypeDescriptor}\n      */\n-    List<Qualifier> qualifiers();\n+    Optional<BallerinaTypeDescriptor> typeDescriptor();", "originalCommit": "48a5e10bf282e039edf2b6407d2ae9b79e2b32a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MTE3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500191173", "bodyText": "Hmm. Can't think of a reason why it'd be. Will check with Nadeeshaan and see. All the typeDescriptor() methods seem to return Optional values.", "author": "pubudu91", "createdAt": "2020-10-06T11:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MjYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcwNjM5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500706396", "bodyText": "This was because the earlier BOperatorSymbols were converted into the InvokableSymbols and the type became null during the conversion, I think we can remove the optional here", "author": "nadeeshaan", "createdAt": "2020-10-07T02:47:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MjYyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3OTAzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500179035", "bodyText": "IIUC only the worker-symbol (may be not?) and xmlns-symbol doesn't have any qualifiers?\nSo can we move this method to the Symbol interface, and return an empty list for whoever doesn't have any qualifiers?\nThat would simplify the class hierarchy.. and can move this qualifiers in to the abstract BallerinaSymbol class as well in the implementation", "author": "SupunS", "createdAt": "2020-10-06T10:47:39Z", "path": "compiler/ballerina-compiler-api/src/main/java/io/ballerina/compiler/api/symbols/Qualifiable.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.ballerina.compiler.api.symbols;\n+\n+import java.util.Set;\n+\n+/**\n+ * An interface for symbols for which qualifiers apply.\n+ *\n+ * @since 2.0.0\n+ */\n+public interface Qualifiable {\n+\n+    /**\n+     * Gets the set of qualifiers the user has applied to a symbol.\n+     *\n+     * @return The set of qualifiers applied to the symbol\n+     */\n+    Set<Qualifier> qualifiers();", "originalCommit": "48a5e10bf282e039edf2b6407d2ae9b79e2b32a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5NDEwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500194109", "bodyText": "And module and service symbols as well though.", "author": "pubudu91", "createdAt": "2020-10-06T11:15:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3OTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcwNzY5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r500707691", "bodyText": "If the qualifiers are not allowed, shouldn't we avoid exposing the API as well?", "author": "nadeeshaan", "createdAt": "2020-10-07T02:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3OTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMwMzM1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26216#discussion_r502303353", "bodyText": "Yeah, that was my thought as well. Hence this approach", "author": "pubudu91", "createdAt": "2020-10-09T09:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3OTAzNQ=="}], "type": "inlineReview"}, {"oid": "ac19085908969f0c5926544ea67658052ccce1f5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac19085908969f0c5926544ea67658052ccce1f5", "message": "Add tests for flag to symbol kind mapping", "committedDate": "2020-10-09T09:27:05Z", "type": "forcePushed"}, {"oid": "d896e51e74ac3335bd9fc83922cf62547dcbb0ce", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d896e51e74ac3335bd9fc83922cf62547dcbb0ce", "message": "Modify the service class def skipping logic", "committedDate": "2020-10-11T19:30:01Z", "type": "forcePushed"}, {"oid": "f5e57ad759f4e787b32f74531f3d5aa291b18340", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5e57ad759f4e787b32f74531f3d5aa291b18340", "message": "Add missing qualifiers to symbols", "committedDate": "2020-10-12T04:48:17Z", "type": "commit"}, {"oid": "56af7f3a3eb46aa2414e302494630139a4c3dea7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/56af7f3a3eb46aa2414e302494630139a4c3dea7", "message": "Fix type symbol lookup", "committedDate": "2020-10-12T04:48:29Z", "type": "commit"}, {"oid": "f218000a8383e278c2b4925fda3180e9e7424b69", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f218000a8383e278c2b4925fda3180e9e7424b69", "message": "Introduce an interface for symbols which allows qualifiers", "committedDate": "2020-10-12T04:48:32Z", "type": "commit"}, {"oid": "002854719c6a25b979f0e261feb4b7ae5915d5e0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/002854719c6a25b979f0e261feb4b7ae5915d5e0", "message": "Add an API to check if a function is external", "committedDate": "2020-10-12T04:48:34Z", "type": "commit"}, {"oid": "6272fe43288580e890f6cbca913ce3f89f7fa342", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6272fe43288580e890f6cbca913ce3f89f7fa342", "message": "Add an API to check if the symbol is deprecated", "committedDate": "2020-10-12T04:48:36Z", "type": "commit"}, {"oid": "c1875277d969caa9d18df295b2ba5f2766e61029", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1875277d969caa9d18df295b2ba5f2766e61029", "message": "Add readonly() API to type symbol", "committedDate": "2020-10-12T04:48:37Z", "type": "commit"}, {"oid": "c900fdcfd067c1c2fbb5f54afb9a19e9576541cd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c900fdcfd067c1c2fbb5f54afb9a19e9576541cd", "message": "Add test cases for symbol flags to qualifiers mapping", "committedDate": "2020-10-12T04:48:38Z", "type": "commit"}, {"oid": "1404e94f7cbc1f359ae6249b1988afac5c6dc71a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1404e94f7cbc1f359ae6249b1988afac5c6dc71a", "message": "Fix position of implicit return type node", "committedDate": "2020-10-12T04:48:38Z", "type": "commit"}, {"oid": "43d34cd9bbe9ff05aa6cbcc3b9071a6d065bcd85", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/43d34cd9bbe9ff05aa6cbcc3b9071a6d065bcd85", "message": "Add service symbols to the symbol API", "committedDate": "2020-10-12T04:48:39Z", "type": "commit"}, {"oid": "88ad3edbde17ebb72904d725e487ce2c0df46029", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/88ad3edbde17ebb72904d725e487ce2c0df46029", "message": "Add tests for flag to symbol kind mapping", "committedDate": "2020-10-12T04:48:39Z", "type": "commit"}, {"oid": "f12d9a9cd8d57a0a5927e0cacc9c1f96fcc9bf6d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f12d9a9cd8d57a0a5927e0cacc9c1f96fcc9bf6d", "message": "Modify the service class def skipping logic", "committedDate": "2020-10-12T04:48:41Z", "type": "commit"}, {"oid": "9e2847b0191a3f1860dd630ca5cc90bba6e16730", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e2847b0191a3f1860dd630ca5cc90bba6e16730", "message": "Move Deprecatable and Qualifiable to ballerina-lang", "committedDate": "2020-10-12T04:54:53Z", "type": "commit"}, {"oid": "9e2847b0191a3f1860dd630ca5cc90bba6e16730", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e2847b0191a3f1860dd630ca5cc90bba6e16730", "message": "Move Deprecatable and Qualifiable to ballerina-lang", "committedDate": "2020-10-12T04:54:53Z", "type": "forcePushed"}, {"oid": "68ffacb0d6abd220fdb7976aad638758633fe065", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/68ffacb0d6abd220fdb7976aad638758633fe065", "message": "Move symbol mapping test to new test module", "committedDate": "2020-10-12T07:19:57Z", "type": "commit"}]}