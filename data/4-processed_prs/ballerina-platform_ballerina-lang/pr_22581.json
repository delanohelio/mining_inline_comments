{"pr_number": 22581, "pr_title": "Update API of Docs in module, Time", "pr_createdAt": "2020-04-10T11:10:26Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581", "timeline": [{"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2e9323c3c42c649edfbd391b2742eb436a6e3f47", "message": "Update API of Docs in module, Time", "committedDate": "2020-04-10T11:06:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjE2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846167", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operations, see [Time Example](https://ballerina.io/v1-2/learn/by-example/time.html).\n          \n          \n            \n            For information on the operations, which you can perform with this module, see the below **Functions**. For an example on the usage of the operations, see the [Time Example](https://ballerina.io/learn/by-example/time.html).", "author": "praneesha", "createdAt": "2020-04-10T16:55:59Z", "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -9,148 +7,9 @@ The module has two main types as [Time](records/Time.html) and [TimeZone](record\n * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss\n * Also `id` can be a region-based zone ID. The format is '{area}/{city}' eg: \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.\n \n-## Samples\n-\n-### Getting the current time/date\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() {\n-    time:Time time = time:currentTime();    // Create a record of type \u2018Time\u2019.\n-    io:println(time);\n-\n-    int timeValue = time.time;    // Time in milliseconds since January 1, 1970, 00:00:00 GMT. E.g., 1523513039.\n-    io:println(timeValue);\n-    int nanoTime = time:nanoTime();    // Time in nanoseconds since an arbitrary origin. Therefore, it should be used only to calculate durations. E.g., 2426115697486340.\n-    io:println(nanoTime);\n-    string zoneId = time.zone.id;    // Time zone as an identifier. E.g., \u201cAmerica/Panama\u201d.\n-    io:println(zoneId);\n-    int zoneoffset = time.zone.offset;    // Time zone as an offset. E.g., -05:00.\n-    io:println(zoneoffset);\n-\n-    // Get the current date and time upto milliseconds.\n-    int year = time:getYear(time);    // E.g., 2018\n-    io:println(year);\n-    int month = time:getMonth(time);    // E.g., 3\n-    io:println(month);\n-    int day = time:getDay(time);    // E.g., 1\n-    io:println(day);\n-    int hour = time:getHour(time);    // E.g., 18\n-    io:println(hour);\n-    int minute = time:getMinute(time);    // E.g., 56\n-    io:println(minute);\n-    int second = time:getSecond(time);    // E.g., 23\n-    io:println(second);\n-    int milliSecond = time:getMilliSecond(time);    // E.g., 555\n-    io:println(milliSecond);\n-    string weekday = time:getWeekday(time);// Day of the week. E.g., \u201cTUESDAY\u201d.\n-    io:println(weekday);\n-}\n-```\n-\n-### Creating a time/date record\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() {\n-    // Create a record of type \u2018Time\u2019 with time zone.\n-    time:TimeZone zoneIdValue = {id: \"America/Panama\"};\n-    time:Time time1 = {time: 1498488382000, zone: zoneIdValue};\n-    io:println(time1);\n-\n-    // Create a record of type \u2018Time\u2019 with the time zone offset.\n-    time:TimeZone zoneOffsetValue = {id: \"-05:00\"};\n-    time:Time time2 = {time: 1498488382000, zone: zoneOffsetValue};\n-    io:println(time2);\n-\n-    // Create a record of type \u2018Time\u2019 without the time zone.\n-    time:TimeZone noZoneValue = {id: \"\"};\n-    time:Time time3 = {time: 1498488382000, zone: noZoneValue};\n-    io:println(time3);\n-\n-    // Create a record of type \u2018Time\u2019 with time and date. E.g., 2018-03-28T23:42:45.554-05:00\n-    time:Time | error dateTime = time:createTime(2018, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n-    if (dateTime is time:Time) {\n-        io:println(dateTime);\n-    } else {\n-        io:println(\"An error occurred: \", dateTime);\n-    }\n-}\n-```\n-\n-\n-### Formatting a time/date to a string\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() returns error? {\n-    time:TimeZone zoneValue = {id: \"America/Panama\"};\n-    time:Time time = {time: 1498488382444, zone: zoneValue};\n-\n-    //Format a time to a string of a given pattern.\n-    string | error time1 = check time:format(time, \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");    //E.g., \u201c2017-06-26T09:46:22.444-0500\u201d.\n-    io:println(time1);\n-\n-    //Format a time to a string of the RFC-1123 format.\n-    string | error time2 = time:format(time, time:TIME_FORMAT_RFC_1123);    // E.g., \"Mon, 26 Jun 2017 09:46:22 -0500\u201d\n-    io:println(time2);\n-\n-    // Convert a time record to a string value.\n-    string time3 = time:toString(time);//\u201d2017-06-26T09:46:22.444-05:00\u201d\n-    io:println(time3);\n-}\n-```\n-\n-### Parsing a string to time/date\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() returns error? {\n-    // Parse a time string of a given format.\n-    time:Time | error time1 = time:parse(\"2017-06-26T09:46:22.444-0500\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");    // The \u2018Z\u2019 stands for the time zone.\n-    io:println(time1);\n-\n-    // Parse a time string of the RFC-1123 format.\n-    time:Time | error time2 = time:parse(\"Wed, 28 Mar 2018 11:56:23 +0530\", time:TIME_FORMAT_RFC_1123);\n-    io:println(time2);\n-}\n-```\n-\n-### Setting time durations\n-\n-```ballerina\n-import ballerina/time;\n-\n-public function main() {\n-    // Add a duration to a given time.\n-    time:Time | error time1 = time:parse(\"2017-06-26T09:46:22.444-0500\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n-    if (time1 is time:Time) {\n-        time1 = time:addDuration(time1, 1, 1, 1, 1, 1, 1, 1);\n-    // Adds 1 year, 1 month, 1 day, 1 hour, 1 minute, 1 second, and 1 millisecond.\n-    }\n-\n-    // Subtract a duration from a given time.\n-    time:Time | error time2 = time:parse(\"2016-03-01T09:46:22.444-0500\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n-    if (time2 is time:Time) {\n-        time2 = time:subtractDuration(time2, 1, 1, 1, 1, 1, 1, 1);\n-    // Subtracts 1 year, 1 month, 1 day, 1 hour, 1 minute, 1 second, and 1 millisecond.\n-    }\n+For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operations, see [Time Example](https://ballerina.io/v1-2/learn/by-example/time.html).", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjMxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846311", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specify the time error that occurs in the module.\n          \n          \n            \n            # Specifies the time error that occurs in the module.", "author": "praneesha", "createdAt": "2020-04-10T16:56:20Z", "path": "stdlib/time/src/main/ballerina/src/time/time_errors.bal", "diffHunk": "@@ -14,18 +14,18 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# Details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Error reason to specify the time error that occurs in the module\n+# Specify the time error that occurs in the module.", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjM3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846377", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents Time module related error.\n          \n          \n            \n            # Represents the Time module related error.", "author": "praneesha", "createdAt": "2020-04-10T16:56:28Z", "path": "stdlib/time/src/main/ballerina/src/time/time_errors.bal", "diffHunk": "@@ -14,18 +14,18 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# Details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Error reason to specify the time error that occurs in the module\n+# Specify the time error that occurs in the module.\n public const TIME_ERROR_REASON = \"{ballerina/time}TimeError\";\n-# Represents Time module related error\n+# Represents Time module related error.", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjQ3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846472", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns ISO 8601 string representation of the given time.\n          \n          \n            \n            # Returns the ISO 8601 string representation of the given time.", "author": "praneesha", "createdAt": "2020-04-10T16:56:43Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -41,6 +41,11 @@ public type Time record {|\n |};\n \n # Returns ISO 8601 string representation of the given time.", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjU2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846565", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns formatted string representation of the given time.\n          \n          \n            \n            # Returns the formatted string representation of the given time.", "author": "praneesha", "createdAt": "2020-04-10T16:56:55Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -59,10 +64,15 @@ function externToString(Time time) returns handle = @java:Method {\n } external;\n \n # Returns formatted string representation of the given time.", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjY1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846653", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + timeFormat - The format which is used to format the time represented by this object\n          \n          \n            \n            # + timeFormat - The format, which is used to format the time represented by this object", "author": "praneesha", "createdAt": "2020-04-10T16:57:03Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -59,10 +64,15 @@ function externToString(Time time) returns handle = @java:Method {\n } external;\n \n # Returns formatted string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string|error timeString = time:format(time, time:TIME_FORMAT_RFC_1123);\n+# ```\n #\n # + time - The Time record to be formatted\n # + timeFormat - The format which is used to format the time represented by this object", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjczNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846737", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The formatted string of the given time or an error if failed to format the time\n          \n          \n            \n            # + return - The formatted string of the given time or else an error if failed to format the time", "author": "praneesha", "createdAt": "2020-04-10T16:57:11Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -59,10 +64,15 @@ function externToString(Time time) returns handle = @java:Method {\n } external;\n \n # Returns formatted string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string|error timeString = time:format(time, time:TIME_FORMAT_RFC_1123);\n+# ```\n #\n # + time - The Time record to be formatted\n # + timeFormat - The format which is used to format the time represented by this object\n-# + return - The formatted string of the given time or an `time:Error` if failed to format the time\n+# + return - The formatted string of the given time or an error if failed to format the time", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Njg3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846879", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The month-of-year, from 1 (January) to 12 (December)\n          \n          \n            \n            # + return - The month-of-year from 1 (January) to 12 (December)", "author": "praneesha", "createdAt": "2020-04-10T16:57:29Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -96,6 +111,11 @@ function externGetYear(Time time) returns int = @java:Method {\n } external;\n \n # Returns the month representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int month = time:getMonth(time);\n+# ```\n #\n # + time - The Time record to get the month representation from\n # + return - The month-of-year, from 1 (January) to 12 (December)", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzIwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847204", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The year representation\n          \n          \n            \n            # + return - The year representation with", "author": "praneesha", "createdAt": "2020-04-10T16:58:18Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -192,11 +242,16 @@ function externGetMilliSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int] date = time:getDate(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n-# + return - The year representation.\n-#            The month-of-year, from 1 (January) to 12 (December).\n-#            The day-of-month, from 1 to 31.\n+# + time - The Time record to get the date representation\n+# + return - The year representation", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzMwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847309", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The month-of-year, from 1 (January) to 12 (December)\n          \n          \n            \n            #            the month-of-year from 1 (January) to 12 (December) and", "author": "praneesha", "createdAt": "2020-04-10T16:58:30Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -192,11 +242,16 @@ function externGetMilliSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int] date = time:getDate(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n-# + return - The year representation.\n-#            The month-of-year, from 1 (January) to 12 (December).\n-#            The day-of-month, from 1 to 31.\n+# + time - The Time record to get the date representation\n+# + return - The year representation\n+#            The month-of-year, from 1 (January) to 12 (December)", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzQyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847426", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The day-of-month, from 1 to 31\n          \n          \n            \n            #            the day-of-month from 1 to 31", "author": "praneesha", "createdAt": "2020-04-10T16:58:45Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -192,11 +242,16 @@ function externGetMilliSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int] date = time:getDate(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n-# + return - The year representation.\n-#            The month-of-year, from 1 (January) to 12 (December).\n-#            The day-of-month, from 1 to 31.\n+# + time - The Time record to get the date representation\n+# + return - The year representation\n+#            The month-of-year, from 1 (January) to 12 (December)\n+#            The day-of-month, from 1 to 31", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzU3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847571", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The hour-of-day, from 0 to 23\n          \n          \n            \n            # + return - The hour-of-day to represent from 0 to 23,", "author": "praneesha", "createdAt": "2020-04-10T16:59:03Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Nzc5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847794", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The minute-of-hour to represent, from 0 to 59\n          \n          \n            \n            #            the minute-of-hour to represent from 0 to 59,", "author": "praneesha", "createdAt": "2020-04-10T16:59:34Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23\n+#            The minute-of-hour to represent, from 0 to 59", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Nzg3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847874", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The second-of-minute, from 0 to 59\n          \n          \n            \n            #            the second-of-minute from 0 to 59,", "author": "praneesha", "createdAt": "2020-04-10T16:59:44Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23\n+#            The minute-of-hour to represent, from 0 to 59\n+#            The second-of-minute, from 0 to 59", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Nzk2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847964", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The milli-of-second, from 0 to 999\n          \n          \n            \n            #            and the milli-of-second from 0 to 999", "author": "praneesha", "createdAt": "2020-04-10T16:59:55Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23\n+#            The minute-of-hour to represent, from 0 to 59\n+#            The second-of-minute, from 0 to 59\n+#            The milli-of-second, from 0 to 999", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODExOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848118", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record of which the time-zone to be changed\n          \n          \n            \n            # + time - The Time record of which the time-zone is to be changed", "author": "praneesha", "createdAt": "2020-04-10T17:00:16Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODE2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848165", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + zoneId - The new time-zone id\n          \n          \n            \n            # + zoneId - The new time-zone ID", "author": "praneesha", "createdAt": "2020-04-10T17:00:22Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed\n # + zoneId - The new time-zone id", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODIzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848234", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing time and zone information after the conversion\n          \n          \n            \n            # + return - Time object containing the time and zone information after the conversion", "author": "praneesha", "createdAt": "2020-04-10T17:00:31Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed\n # + zoneId - The new time-zone id\n # + return - Time object containing time and zone information after the conversion", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODI4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848287", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or an error if failed to format the time\n          \n          \n            \n            #            or else an error if failed to format the time", "author": "praneesha", "createdAt": "2020-04-10T17:00:39Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed\n # + zoneId - The new time-zone id\n # + return - Time object containing time and zone information after the conversion\n-#            or an `time:Error` if failed to format the time\n+#            or an error if failed to format the time", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODQwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848406", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing the time and the zone information\n          \n          \n            \n            # + return - Time object containing the time and zone information", "author": "praneesha", "createdAt": "2020-04-10T17:00:55Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -282,8 +364,11 @@ function externToTimeZone(Time time, handle zoneId) returns Time|Error = @java:M\n } external;\n \n # Returns the current time value with the system default time-zone.\n+# ```ballerina\n+#  time:Time now = time:currentTime();\n+# ```\n #\n-# + return - Time object containing the time and zone information\n+# + return - Time object containing the time and the zone information", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkyMTIwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406921205", "bodyText": "Zone is a different type of information from time.", "author": "Maninda", "createdAt": "2020-04-10T20:07:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODQwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODUxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848514", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + month - The month-of-year to represent, from 1 (January) to 12 (December)\n          \n          \n            \n            # + month - The month-of-year to represent from 1 (January) to 12 (December)", "author": "praneesha", "createdAt": "2020-04-10T17:01:12Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,6 +394,9 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n # + month - The month-of-year to represent, from 1 (January) to 12 (December)", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODU3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848576", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + timeFormat - The format which is used to parse the given text\n          \n          \n            \n            # + timeFormat - The format, which is used to parse the given text", "author": "praneesha", "createdAt": "2020-04-10T17:01:24Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -328,10 +419,14 @@ function externCreateTime(int year, int month, int date, int hour, int minute, i\n } external;\n \n # Returns the time for the given string representation based on the given format string.\n+# ```ballerina\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error time = time:parse(\"2020-06-26T09:46:22.444-0500\", timeFormat);\n+# ```\n #\n # + data - The time text to parse\n # + timeFormat - The format which is used to parse the given text", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODY3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848678", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing time and zone information or an error if failed to parse the given string\n          \n          \n            \n            # + return - Time object containing the time and zone information or else an error if failed to parse the given string", "author": "praneesha", "createdAt": "2020-04-10T17:01:37Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -328,10 +419,14 @@ function externCreateTime(int year, int month, int date, int hour, int minute, i\n } external;\n \n # Returns the time for the given string representation based on the given format string.\n+# ```ballerina\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error time = time:parse(\"2020-06-26T09:46:22.444-0500\", timeFormat);\n+# ```\n #\n # + data - The time text to parse\n # + timeFormat - The format which is used to parse the given text\n-# + return - Time object containing time and zone information or an `time:Error` if failed to parse the given string\n+# + return - Time object containing time and zone information or an error if failed to parse the given string", "originalCommit": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/237fce81b7876462a60ff278bec1824cdc9de76b", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-10T20:08:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MTkwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407041904", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The module has two main types as [Time](records/Time.html) and [TimeZone](records/TimeZone.html). The type `Time` represents a time associated with a given time zone. It has `time` and `zone` as attributes. The type `TimeZone` represents the time zone associated with a given time. It has `id` and `offset` as attributes. An `id` can be one of the following:\n          \n          \n            \n            The module has two main types as [Time](records/Time.html) and [TimeZone](records/TimeZone.html). The `Time` type represents a time associated with a given time zone. It has `time` and `zone` as its attributes. The `TimeZone` type represents the time zone associated with a given time. It has `id` and `offset` as its attributes. An `id` can be one of the following:", "author": "praneesha", "createdAt": "2020-04-11T09:36:53Z", "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -1,5 +1,3 @@\n-## Module overview\n-\n This module provides implementations related to time, date, time zones, and durations. \n \n The module has two main types as [Time](records/Time.html) and [TimeZone](records/TimeZone.html). The type `Time` represents a time associated with a given time zone. It has `time` and `zone` as attributes. The type `TimeZone` represents the time zone associated with a given time. It has `id` and `offset` as attributes. An `id` can be one of the following:", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MTkyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407041923", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss\n          \n          \n            \n            * If `id` starts with '+' or '-', the ID is parsed as an offset. The offset can be specified in one of the following ways: +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss", "author": "praneesha", "createdAt": "2020-04-11T09:37:11Z", "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -9,148 +7,9 @@ The module has two main types as [Time](records/Time.html) and [TimeZone](record\n * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MTk0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407041948", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Also `id` can be a region-based zone ID. The format is '{area}/{city}' eg: \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.\n          \n          \n            \n            * Also, `id` can be a region-based zone ID. The format is '{area}/{city}' e.g., \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.", "author": "praneesha", "createdAt": "2020-04-11T09:37:23Z", "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -9,148 +7,9 @@ The module has two main types as [Time](records/Time.html) and [TimeZone](record\n * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss\n * Also `id` can be a region-based zone ID. The format is '{area}/{city}' eg: \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjAwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042004", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies the time error that occurs in the module.\n          \n          \n            \n            # Specifies the time error, which occurs in the module.", "author": "praneesha", "createdAt": "2020-04-11T09:37:51Z", "path": "stdlib/time/src/main/ballerina/src/time/time_errors.bal", "diffHunk": "@@ -14,18 +14,18 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# Details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Error reason to specify the time error that occurs in the module\n+# Specifies the time error that occurs in the module.", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjA5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042094", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The ISO 8601 formatted string of the given time\n          \n          \n            \n            # + return - The ISO 8601-formatted string of the given time", "author": "praneesha", "createdAt": "2020-04-11T09:38:45Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -40,7 +40,12 @@ public type Time record {|\n     TimeZone zone;\n |};\n \n-# Returns ISO 8601 string representation of the given time.\n+# Returns the ISO 8601 string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string timeString = time:toString(time);\n+# ```\n #\n # + time - The Time record to be converted to string\n # + return - The ISO 8601 formatted string of the given time", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjIxMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042212", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The formatted string of the given time or else an error if failed to format the time\n          \n          \n            \n            # + return - The formatted string of the given time or else a `time:Error` if failed to format the time\n          \n      \n    \n    \n  \n\nneed to specify the error type.", "author": "praneesha", "createdAt": "2020-04-11T09:39:55Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -58,11 +63,16 @@ function externToString(Time time) returns handle = @java:Method {\n     class: \"org.ballerinalang.stdlib.time.nativeimpl.ExternMethods\"\n } external;\n \n-# Returns formatted string representation of the given time.\n+# Returns the formatted string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string|error timeString = time:format(time, time:TIME_FORMAT_RFC_1123);\n+# ```\n #\n # + time - The Time record to be formatted\n-# + timeFormat - The format which is used to format the time represented by this object\n-# + return - The formatted string of the given time or an `time:Error` if failed to format the time\n+# + timeFormat - The format, which is used to format the time represented by this object\n+# + return - The formatted string of the given time or else an error if failed to format the time", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjI1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042256", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The day-of-month, from 1 to 31\n          \n          \n            \n            # + return - The day-of-month from 1 to 31", "author": "praneesha", "createdAt": "2020-04-11T09:40:28Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -109,8 +129,13 @@ function externGetMonth(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int day = time:getDay(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n+# + time - The Time record to get the date representation\n # + return - The day-of-month, from 1 to 31", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjI3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042275", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record to get the  hour representation\n          \n          \n            \n            # + time - The Time record to get the hour representation", "author": "praneesha", "createdAt": "2020-04-11T09:40:43Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -140,8 +170,13 @@ function externGetWeekday(Time time) returns handle = @java:Method {\n } external;\n \n # Returns the hour representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int hour = time:getHour(time);\n+# ```\n #\n-# + time - The Time record to get the  hour representation from\n+# + time - The Time record to get the  hour representation", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjI5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record to get the  minute representation\n          \n          \n            \n            # + time - The Time record to get the minute representation", "author": "praneesha", "createdAt": "2020-04-11T09:40:53Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -153,8 +188,13 @@ function externGetHour(Time time) returns int = @java:Method {\n } external;\n \n # Returns the minute representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int minute = time:getMinute(time);\n+# ```\n #\n-# + time - The Time record to get the  minute representation from\n+# + time - The Time record to get the  minute representation", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjMwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042302", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The hour-of-day, from 0 to 23\n          \n          \n            \n            # + return - The hour-of-day from 0 to 23", "author": "praneesha", "createdAt": "2020-04-11T09:41:01Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -140,8 +170,13 @@ function externGetWeekday(Time time) returns handle = @java:Method {\n } external;\n \n # Returns the hour representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int hour = time:getHour(time);\n+# ```\n #\n-# + time - The Time record to get the  hour representation from\n+# + time - The Time record to get the  hour representation\n # + return - The hour-of-day, from 0 to 23", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjMyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042325", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The minute-of-hour to represent, from 0 to 59\n          \n          \n            \n            # + return - The minute-of-hour to represent from 0 to 59", "author": "praneesha", "createdAt": "2020-04-11T09:41:22Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -153,8 +188,13 @@ function externGetHour(Time time) returns int = @java:Method {\n } external;\n \n # Returns the minute representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int minute = time:getMinute(time);\n+# ```\n #\n-# + time - The Time record to get the  minute representation from\n+# + time - The Time record to get the  minute representation\n # + return - The minute-of-hour to represent, from 0 to 59", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjM0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042348", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The milli-of-second, from 0 to 999\n          \n          \n            \n            # + return - The milli-of-second from 0 to 999", "author": "praneesha", "createdAt": "2020-04-11T09:41:37Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -179,8 +224,13 @@ function externGetSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the millisecond representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int milliSecond = time:getMilliSecond(time);\n+# ```\n #\n-# + time - The Time record to get the millisecond representation from\n+# + time - The Time record to get the millisecond representation\n # + return - The milli-of-second, from 0 to 999", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjM5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042390", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record to add the duration to\n          \n          \n            \n            # + time - The Time record to add the duration", "author": "praneesha", "createdAt": "2020-04-11T09:42:13Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -223,6 +283,14 @@ function externGetTime(Time time) returns [int, int, int, int] = @java:Method {\n } external;\n \n # Add specified durations to the given time value.\n+# ```ballerina\n+#  string timeText = \"2020-06-26T09:46:22.444-0500\";\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error originalTime = time:parse(timeText, timeFormat);\n+#  if (originalTime is time:Time) {\n+#      time:Time newTime = time:addDuration(originalTime, 1, 1, 1, 1, 1, 1, 1);\n+#  }\n+# ```\n #\n # + time - The Time record to add the duration to", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042426", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else an error if failed to format the time\n          \n          \n            \n            #            or else  a `time:Error` if failed to format the time", "author": "praneesha", "createdAt": "2020-04-11T09:42:42Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n-# + time - The Time record of which the time-zone to be changed\n-# + zoneId - The new time-zone id\n-# + return - Time object containing time and zone information after the conversion\n-#            or an `time:Error` if failed to format the time\n+# + time - The Time record of which the time-zone is to be changed\n+# + zoneId - The new time-zone ID\n+# + return - Time object containing the time and zone information after the conversion\n+#            or else an error if failed to format the time", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042479", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + date - The day-of-month to represent, from 1 to 31\n          \n          \n            \n            # + date - The day-of-month to represent from 1 to 31", "author": "praneesha", "createdAt": "2020-04-11T09:43:12Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042487", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + date - The day-of-month to represent, from 1 to 31\n          \n          \n            \n            # + date - The day-of-month to represent from 1 to 31", "author": "praneesha", "createdAt": "2020-04-11T09:43:20Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NDA2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407044065", "bodyText": "Already added.", "author": "Maninda", "createdAt": "2020-04-11T09:59:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042498", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + hour - The hour-of-day to represent, from 0 to 23\n          \n          \n            \n            # + hour - The hour-of-day to represent from 0 to 23", "author": "praneesha", "createdAt": "2020-04-11T09:43:27Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31\n # + hour - The hour-of-day to represent, from 0 to 23", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjUwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042504", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + minute - The minute-of-hour to represent, from 0 to 59\n          \n          \n            \n            # + minute - The minute-of-hour to represent from 0 to 59", "author": "praneesha", "createdAt": "2020-04-11T09:43:33Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31\n # + hour - The hour-of-day to represent, from 0 to 23\n # + minute - The minute-of-hour to represent, from 0 to 59", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjU2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042561", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing the time and zone information or else an error if failed to parse the given string\n          \n          \n            \n            # + return - Time object containing the time and zone information or else  a `time:Error` if failed to parse the given string", "author": "praneesha", "createdAt": "2020-04-11T09:43:47Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -328,10 +419,14 @@ function externCreateTime(int year, int month, int date, int hour, int minute, i\n } external;\n \n # Returns the time for the given string representation based on the given format string.\n+# ```ballerina\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error time = time:parse(\"2020-06-26T09:46:22.444-0500\", timeFormat);\n+# ```\n #\n # + data - The time text to parse\n-# + timeFormat - The format which is used to parse the given text\n-# + return - Time object containing time and zone information or an `time:Error` if failed to parse the given string\n+# + timeFormat - The format, which is used to parse the given text\n+# + return - Time object containing the time and zone information or else an error if failed to parse the given string", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjgxMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042810", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The second-of-minute, from 0 to 59\n          \n          \n            \n            # + return - The second-of-minute from 0 to 59", "author": "praneesha", "createdAt": "2020-04-11T09:46:28Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -166,8 +206,13 @@ function externGetMinute(Time time) returns int = @java:Method {\n } external;\n \n # Returns the second representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int second = time:getSecond(time);\n+# ```\n #\n-# + time - The Time record to get the second representation from\n+# + time - The Time record to get the second representation\n # + return - The second-of-minute, from 0 to 59", "originalCommit": "237fce81b7876462a60ff278bec1824cdc9de76b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ee98df6d0c533146b95846895007413dc99aa47e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee98df6d0c533146b95846895007413dc99aa47e", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-11T09:56:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NDQ0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407044449", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else  a `time:Error` if failed to format the time\n          \n          \n            \n            #            or else a `time:Error` if failed to format the time", "author": "praneesha", "createdAt": "2020-04-11T10:03:51Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n-# + time - The Time record of which the time-zone to be changed\n-# + zoneId - The new time-zone id\n-# + return - Time object containing time and zone information after the conversion\n-#            or an `time:Error` if failed to format the time\n+# + time - The Time record of which the time-zone is to be changed\n+# + zoneId - The new time-zone ID\n+# + return - Time object containing the time and zone information after the conversion\n+#            or else  a `time:Error` if failed to format the time", "originalCommit": "ee98df6d0c533146b95846895007413dc99aa47e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NDc4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407044780", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns the current time value with the system default time-zone.\n          \n          \n            \n            # Returns the current time value with the default system time-zone.", "author": "praneesha", "createdAt": "2020-04-11T10:07:47Z", "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -282,8 +364,11 @@ function externToTimeZone(Time time, handle zoneId) returns Time|Error = @java:M\n } external;\n \n # Returns the current time value with the system default time-zone.", "originalCommit": "ee98df6d0c533146b95846895007413dc99aa47e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a84eb6414d380f428dc3624af9b539bbcc6d053", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4a84eb6414d380f428dc3624af9b539bbcc6d053", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-11T10:08:56Z", "type": "commit"}]}