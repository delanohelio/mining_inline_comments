{"pr_number": 24955, "pr_title": "Fix CCE when using non-string literals as namespaceURI.", "pr_createdAt": "2020-07-27T08:40:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955", "timeline": [{"oid": "d3667a960a27149a7923b03dae329e765ac29162", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3667a960a27149a7923b03dae329e765ac29162", "message": "Fix CCE when using non-string literals as namespaceURI.", "committedDate": "2020-07-27T08:36:58Z", "type": "commit"}, {"oid": "79251066fd6228e442f292a7ea6b163941ba2551", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79251066fd6228e442f292a7ea6b163941ba2551", "message": "Add missing files", "committedDate": "2020-07-27T08:37:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460738326", "bodyText": "Trying to recover again can be expensive..\nSince we have already parsed the expression and knows that it is invalid, we can create a dummy literal/var-ref here and use that as the uri.", "author": "SupunS", "createdAt": "2020-07-27T08:46:10Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -8245,7 +8245,14 @@ private STNode parseFieldIdent() {\n     private STNode parseXMLNamespaceDeclaration(boolean isModuleVar) {\n         startContext(ParserRuleContext.XML_NAMESPACE_DECLARATION);\n         STNode xmlnsKeyword = parseXMLNSKeyword();\n-        STNode namespaceUri = parseXMLNamespaceUri();\n+\n+        STNode namespaceUri = parseSimpleConstExpr();\n+        while (!isValidXMLNameSpaceURI(namespaceUri)) {\n+            xmlnsKeyword = SyntaxErrors.cloneWithTrailingInvalidNodeMinutiae(xmlnsKeyword,\n+                    namespaceUri, DiagnosticErrorCode.ERROR_INVALID_XML_NAMESPACE_URI);\n+            namespaceUri = parseSimpleConstExpr();", "originalCommit": "79251066fd6228e442f292a7ea6b163941ba2551", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2Njg1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460766851", "bodyText": "Then while can be a if", "author": "SupunS", "createdAt": "2020-07-27T09:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2Nzk5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460767990", "bodyText": "but what if there is a valid uri next to it eg: xmlns 5 \"myxml\" as ns1; ?", "author": "rdulmina", "createdAt": "2020-07-27T09:37:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3MDIyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460770229", "bodyText": "I see your point.\n+1 for the current approach then.", "author": "SupunS", "createdAt": "2020-07-27T09:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg=="}], "type": "inlineReview"}]}