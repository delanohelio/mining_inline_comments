{"pr_number": 27347, "pr_title": "Add missing annotation support for service objects and improve listener", "pr_createdAt": "2020-12-05T09:41:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347", "timeline": [{"oid": "818cfedff9ddc766430526d6f5db376590c4c6de", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/818cfedff9ddc766430526d6f5db376590c4c6de", "message": "Allow listener to decide service path or literal", "committedDate": "2020-12-04T05:45:28Z", "type": "commit"}, {"oid": "0241f43cdead4c25c8be3ebe2028acf29406c15e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0241f43cdead4c25c8be3ebe2028acf29406c15e", "message": "Fix missing annotation population for services", "committedDate": "2020-12-05T09:37:11Z", "type": "commit"}, {"oid": "340e3e5082f1aa59a64425fb8da28fb14780c761", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/340e3e5082f1aa59a64425fb8da28fb14780c761", "message": "Fix check-style issue", "committedDate": "2020-12-05T09:46:57Z", "type": "commit"}, {"oid": "3bcf5ee0fcfcc82484fc21cfd1a76eccd444f22d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bcf5ee0fcfcc82484fc21cfd1a76eccd444f22d", "message": "Add annotation lambda func for services", "committedDate": "2020-12-06T06:39:32Z", "type": "commit"}, {"oid": "47d928be594fd0c4237fc0bfdd66f6f07983a276", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47d928be594fd0c4237fc0bfdd66f6f07983a276", "message": "Populate service annotations before attach method\n\nCodegen an populte annotation call just before\ndesugaring service-decl to listener.attach() method", "committedDate": "2020-12-06T10:41:01Z", "type": "commit"}, {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/217817f7468b711f07cddc3b82e2d5d1252904dc", "message": "Fix javaDoc checkstyle issue", "committedDate": "2020-12-06T10:58:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537249502", "bodyText": "processServiceAnnotations used to be codegen-ed separately for services to specifically recompute the annotations in services that are created within a function (via https://github.com/ballerina-platform/ballerina-lang/blob/v2.0.0-Preview7/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmInstructionGen.java#L1625).\nTo continue to support the same, IMO we need to do something similar.\nThe second annotation access in the following sample used to return {i: 202}, but now returns {i: 101}.\nannotation record {int i;} x on service;\n\nint globalInt = 101;\n\npublic function getService() returns service object {} {\n    return @x {i: globalInt} service object {\n        \n    };\n}\n\npublic function main() {\n    typedesc<service object {}> t = typeof getService();\n    var v = t.@x; // {\"i\":101}\n\n    globalInt = 202;\n    t = typeof getService();\n    v = t.@x; // used to be {\"i\":202}, now {\"i\":101}\n}\nWill we be fixing this anytime soon given that it's a breaking change?", "author": "MaryamZi", "createdAt": "2020-12-07T05:56:14Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/AnnotationUtils.java", "diffHunk": "@@ -43,12 +43,17 @@\n      * @param globalAnnotMap The global annotation map\n      * @param bType          The type for which annotations need to be set\n      */\n-    public static void processAnnotations(MapValue globalAnnotMap, Type bType) {\n+    public static void processAnnotations(MapValue globalAnnotMap, Type bType, Strand strand) {\n         if (!(bType instanceof BAnnotatableType)) {\n             return;\n         }\n \n         BAnnotatableType type = (BAnnotatableType) bType;\n+        if (type.getTag() == TypeTags.SERVICE_TAG) {\n+            processServiceAnnotations(globalAnnotMap, (BServiceType) bType, strand);", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxOTcyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537419720", "bodyText": "Could this be this issue, I mean this behavior #26838.\nEdit, no this is a different issue.", "author": "rdhananjaya", "createdAt": "2020-12-07T11:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyOTc3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537429774", "bodyText": "Issue to re-visit this annot impl: #27348\nI think we will have to consider object constructors for the above issue.", "author": "rdhananjaya", "createdAt": "2020-12-07T11:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDM2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537250367", "bodyText": "Should we call this hasAnnotations instead?", "author": "MaryamZi", "createdAt": "2020-12-07T05:59:03Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BServiceType.java", "diffHunk": "@@ -99,4 +93,8 @@ public void setResourceFunctions(ResourceFunctionType[] resourceFunctions) {\n     public int getTag() {\n         return TypeTags.SERVICE_TAG;\n     }\n+\n+    public boolean isAnnotationsAvailable() {", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyNTA2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537425063", "bodyText": "will update", "author": "rdhananjaya", "createdAt": "2020-12-07T11:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjQxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252419", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!types.isServiceObject((BObjectTypeSymbol) type.tsymbol)) {\n          \n          \n            \n                            return false;\n          \n          \n            \n                        }\n          \n          \n            \n                        return true;\n          \n          \n            \n                        return types.isServiceObject((BObjectTypeSymbol) type.tsymbol);", "author": "MaryamZi", "createdAt": "2020-12-07T06:05:25Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3798,18 +3796,25 @@ private boolean checkAttachMethod(BAttachedFunction func) {\n \n             // todo: change is unions are allowed as service type.\n             BType firstParamType = func.type.paramTypes.get(0);\n-            if (firstParamType.tag != TypeTags.OBJECT) {\n-                return false;\n-            }\n-\n-            if (!types.isServiceObject((BObjectTypeSymbol) firstParamType.tsymbol)) {\n+            if (!isServiceObject(firstParamType)) {\n                 return false;\n             }\n \n             BType secondParamType = func.type.paramTypes.get(1);\n-            boolean sameType = types.isSameType(this.serviceNameType, secondParamType);\n+            boolean sameType = types.isAssignable(secondParamType, this.serviceNameType);\n             return attachFound = sameType;\n \n         }\n+\n+        private boolean isServiceObject(BType type) {\n+            if (type.tag != TypeTags.OBJECT) {\n+                return false;\n+            }\n+\n+            if (!types.isServiceObject((BObjectTypeSymbol) type.tsymbol)) {\n+                return false;\n+            }\n+            return true;", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjU5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252599", "bodyText": "Will these be supported in the future?", "author": "MaryamZi", "createdAt": "2020-12-07T06:05:58Z", "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -775,6 +775,22 @@ error.invalid.listener.var=\\\n error.invalid.listener.attachment=\\\n   invalid listener attachment\n \n+error.service.absolute.path.or.literal.required.by.listener=\\\n+  service absolute path or literal is required by listener\n+\n+error.service.path.literal.is.not.supported.by.listener=\\\n+  service path literal is not supported by listener\n+\n+error.service.absolute.path.is.not.supported.by.listener=\\\n+  service absolute path is not supported by listener", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyNDk5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537424991", "bodyText": "No this is the expected behavior,\nif listener attach method is attach(service object s, string? path), then it's an error to have following:\nservice \\abs\\path on new http:Listener(4000) {\n\n}\n\nIt should be  either service \"name-literal\" on lsn { } or service on lsn { }", "author": "rdhananjaya", "createdAt": "2020-12-07T11:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjYyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252623", "bodyText": "Extra new line.", "author": "MaryamZi", "createdAt": "2020-12-07T06:06:06Z", "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -775,6 +775,22 @@ error.invalid.listener.var=\\\n error.invalid.listener.attachment=\\\n   invalid listener attachment\n \n+error.service.absolute.path.or.literal.required.by.listener=\\\n+  service absolute path or literal is required by listener\n+\n+error.service.path.literal.is.not.supported.by.listener=\\\n+  service path literal is not supported by listener\n+\n+error.service.absolute.path.is.not.supported.by.listener=\\\n+  service absolute path is not supported by listener\n+\n+error.service.path.literal.required.by.listener=\\\n+  service path literal is required by the listener\n+\n+error.service.absolute.path.required.by.listener=\\\n+  service absolute path is required by the listener\n+\n+", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a401819e669484416d318c78f79a84da5327b82a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a401819e669484416d318c78f79a84da5327b82a", "message": "Apply review suggestions", "committedDate": "2020-12-07T11:27:42Z", "type": "commit"}, {"oid": "fd669bbb594e7e320bbbb7b0817992c91c63dadd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd669bbb594e7e320bbbb7b0817992c91c63dadd", "message": "Improve annotation population for object ctors", "committedDate": "2020-12-08T05:02:03Z", "type": "commit"}, {"oid": "897984740a207f4b102986012bc6576acbc41926", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/897984740a207f4b102986012bc6576acbc41926", "message": "Fix annot_map pkg resolution\n\nand remove annot support lang.internal func", "committedDate": "2020-12-08T06:07:07Z", "type": "commit"}, {"oid": "482cbe79cd783483e16e5d206253ed45393a2506", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/482cbe79cd783483e16e5d206253ed45393a2506", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-typing-dhananjaya\n\n\u0001 Conflicts:\n\u0001\ttests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/TransactionalResourceFunctionTest.java\n\u0001\ttests/jballerina-unit-test/src/test/resources/test-src/functions/transactional_resource_functions.bal", "committedDate": "2020-12-08T06:15:57Z", "type": "commit"}, {"oid": "fcd9af3fb525a0af9e1d9c2feb1ca33566feee2b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fcd9af3fb525a0af9e1d9c2feb1ca33566feee2b", "message": "Remove unused imports", "committedDate": "2020-12-08T06:29:17Z", "type": "commit"}, {"oid": "01dfbf85c9b2a3af92b5f7129f56ec017090bdfe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01dfbf85c9b2a3af92b5f7129f56ec017090bdfe", "message": "Re-enable disabled test case", "committedDate": "2020-12-08T07:39:37Z", "type": "commit"}, {"oid": "af68453960e1ebdf050b5a2448a53a1003bea2c1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/af68453960e1ebdf050b5a2448a53a1003bea2c1", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-typing-dhananjaya\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/model/elements/Flag.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/util/Flags.java", "committedDate": "2020-12-09T11:49:43Z", "type": "commit"}]}