{"pr_number": 26370, "pr_title": "Introduce formatting env to hold the state-variables", "pr_createdAt": "2020-10-15T11:48:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370", "timeline": [{"oid": "9929c0507f7355a6faf476257f983f700c4a0ca4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9929c0507f7355a6faf476257f983f700c4a0ca4", "message": "Introduce formatting env to hold the state-variables", "committedDate": "2020-10-15T10:07:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MDE1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505480152", "bodyText": "Shall we change the default line length to 120? Since it is the limit specified in the current guide [1].\n[1] https://ballerina.io/swan-lake/learn/coding-conventions/#indentation-and-line-length", "author": "IrushiL", "createdAt": "2020-10-15T11:53:09Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingOptions.java", "diffHunk": "@@ -24,16 +24,19 @@\n     private int tabSize;\n \n     // Prefer spaces over tabs.\n-    private boolean insertSpaces;\n+    private String wsCharacter;\n+\n+    private int columnLimit;\n \n     FormattingOptions() {\n         this.tabSize = 4;\n-        this.insertSpaces = true;\n+        this.wsCharacter = \" \";\n+        this.columnLimit = 80;", "originalCommit": "6c89902f0b576fec637320575a176d01f9edb16d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4fba2bbd88b6f3a70dc90d310e421759712e70eb", "message": "Merge branch 'formatter-change' of https://github.com/ballerina-platform/ballerina-lang into formatter-change", "committedDate": "2020-10-15T12:05:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MTIxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505491216", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // If env node has a trailing new line, then the next immediate token\n          \n          \n            \n                    // If this node has a trailing new line, then the next immediate token", "author": "IrushiL", "createdAt": "2020-10-15T12:13:15Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3668,23 +3637,23 @@ public Token transform(Token token) {\n             return token;\n         }\n \n-        int prevTrailingNL = this.trailingNL;\n-        int prevTrailingWS = this.trailingWS;\n+        int prevTrailingNL = env.trailingNL;\n+        int prevTrailingWS = env.trailingWS;\n \n         // Trailing newlines can be at-most 1. Rest will go as newlines for the next token\n-        this.trailingNL = trailingNL > 0 ? 1 : 0;\n-        this.trailingWS = trailingWS;\n+        env.trailingNL = trailingNL > 0 ? 1 : 0;\n+        env.trailingWS = trailingWS;\n \n         token = formatTokenInternal(token);\n \n         // Set the leading newlines for the next token\n-        this.leadingNL = trailingNL > 0 ? trailingNL - 1 : 0;\n+        env.leadingNL = trailingNL > 0 ? trailingNL - 1 : 0;\n \n-        // If this node has a trailing new line, then the next immediate token\n+        // If env node has a trailing new line, then the next immediate token", "originalCommit": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MTM4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505491384", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // env is the last item of the list. Trailing WS and NL for the last item on the list\n          \n          \n            \n                            // This is the last item of the list. Trailing WS and NL for the last item on the list", "author": "IrushiL", "createdAt": "2020-10-15T12:13:34Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3736,16 +3705,16 @@ public Token transform(Token token) {\n         for (int index = 0; index < size; index++) {\n             T oldNode = nodeList.get(index);\n             T newNode;\n-            boolean prevPreserveNL = this.preserveNewlines;\n-            this.preserveNewlines = preserveNL;\n+            boolean prevPreserveNL = env.preserveNewlines;\n+            env.preserveNewlines = preserveNL;\n             if (index == size - 1) {\n-                // This is the last item of the list. Trailing WS and NL for the last item on the list\n+                // env is the last item of the list. Trailing WS and NL for the last item on the list", "originalCommit": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MjAxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505492018", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Format a delimited list of nodes. env method assumes the delimiters are followed by a single whitespace character\n          \n          \n            \n                 * Format a delimited list of nodes. This method assumes the delimiters are followed by a single whitespace character", "author": "IrushiL", "createdAt": "2020-10-15T12:14:46Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3761,8 +3730,8 @@ public Token transform(Token token) {\n     }\n \n     /**\n-     * Format a delimited list of nodes. This method assumes the delimiters are followed by a single whitespace\n-     * character only.\n+     * Format a delimited list of nodes. env method assumes the delimiters are followed by a single whitespace character", "originalCommit": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MjExMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505492113", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // env is the last item of the list. Trailing WS and NL for the last item on the list\n          \n          \n            \n                            // This is the last item of the list. Trailing WS and NL for the last item on the list", "author": "IrushiL", "createdAt": "2020-10-15T12:14:57Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3813,7 +3782,7 @@ public Token transform(Token token) {\n             T oldNode = nodeList.get(index);\n             T newNode;\n             if (index == size - 1) {\n-                // This is the last item of the list. Trailing WS and NL for the last item on the list\n+                // env is the last item of the list. Trailing WS and NL for the last item on the list", "originalCommit": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5MjY1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505492657", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Wrap the node. env is equivalent to adding a newline before the node and re-formatting the node. Wrapped content\n          \n          \n            \n                 * Wrap the node. This is equivalent to adding a newline before the node and re-formatting the node. Wrapped content", "author": "IrushiL", "createdAt": "2020-10-15T12:15:51Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3925,7 +3901,7 @@ private boolean shouldWrapLine(Node node) {\n     }\n \n     /**\n-     * Wrap the node. This is equivalent to adding a newline before the node and re-formatting the node. Wrapped content\n+     * Wrap the node. env is equivalent to adding a newline before the node and re-formatting the node. Wrapped content", "originalCommit": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ5Mjg2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26370#discussion_r505492862", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    // If there's a newline before env, then add padding to\n          \n          \n            \n                                    // If there's a newline before this, then add padding to", "author": "IrushiL", "createdAt": "2020-10-15T12:16:12Z", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3996,9 +3972,9 @@ private MinutiaeList getLeadingMinutiae(Token token) {\n                     break;\n                 case COMMENT_MINUTIAE:\n                     if (consecutiveNewlines > 0) {\n-                        // If there's a newline before this, then add padding to\n+                        // If there's a newline before env, then add padding to", "originalCommit": "4fba2bbd88b6f3a70dc90d310e421759712e70eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8ce20d493519dd0ddcccf2d46d457c7f8ab80059", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ce20d493519dd0ddcccf2d46d457c7f8ab80059", "message": "Merge branch 'formatter-change' of https://github.com/ballerina-platform/ballerina-lang into formatter-change", "committedDate": "2020-10-15T12:18:02Z", "type": "commit"}, {"oid": "8ce20d493519dd0ddcccf2d46d457c7f8ab80059", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ce20d493519dd0ddcccf2d46d457c7f8ab80059", "message": "Merge branch 'formatter-change' of https://github.com/ballerina-platform/ballerina-lang into formatter-change", "committedDate": "2020-10-15T12:18:02Z", "type": "forcePushed"}, {"oid": "5eb3f52e11534071781388c1469bbc8f10c6ba56", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5eb3f52e11534071781388c1469bbc8f10c6ba56", "message": "Fix line wrapping", "committedDate": "2020-10-15T13:46:47Z", "type": "commit"}, {"oid": "9d90dc0445860daab2258fe83b1930f96f62e81d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9d90dc0445860daab2258fe83b1930f96f62e81d", "message": "Add a line wrapping test", "committedDate": "2020-10-15T14:15:38Z", "type": "commit"}]}