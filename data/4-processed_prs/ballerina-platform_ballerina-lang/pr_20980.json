{"pr_number": 20980, "pr_title": "Improve reading array of values via config API", "pr_createdAt": "2020-02-11T09:20:17Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980", "timeline": [{"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "message": "Improve reading array of values via config API\n\nFixes https://github.com/ballerina-platform/ballerina-lang/issues/20857", "committedDate": "2020-02-11T09:18:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNTgxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378035818", "bodyText": "Was this annotation needed?", "author": "pubudu91", "createdAt": "2020-02-12T04:30:02Z", "path": "stdlib/config-api/src/main/java/org/ballerinalang/stdlib/config/GetConfig.java", "diffHunk": "@@ -65,16 +65,27 @@ public static Object get(String configKey, String type) {\n     @SuppressWarnings(\"unchecked\")\n     private static MapValue buildMapValue(Map<String, Object> section) {\n         MapValue map = new MapValueImpl<String, Object>();\n-\n-        section.forEach((key, val) -> {\n-            if (val instanceof String || val instanceof Long || val instanceof Double || val instanceof Boolean) {\n-                map.put(key, val);\n-            }\n-        });\n+        section.forEach((key, val) -> map.put(key, getConvertedValue(val)));\n         return map;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private static BArray buildArrayValue(List value) {\n-        return BValueCreator.createArrayValue(value.toArray(), new BArrayType(BTypes.typeAnydata));\n+        Object[] convertedValues = new Object[value.size()];\n+        value.forEach(convertedValue -> convertedValues[value.indexOf(convertedValue)] =\n+                getConvertedValue(convertedValue));\n+        return BValueCreator.createArrayValue(convertedValues, new BArrayType(BTypes.typeAnydata));\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODY4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378038681", "bodyText": "Shall we replace this with a normal for loop? We now avoid the use of these as much as possible and reverting the current usages back to normal loops", "author": "pubudu91", "createdAt": "2020-02-12T04:45:36Z", "path": "stdlib/config-api/src/main/java/org/ballerinalang/stdlib/config/GetConfig.java", "diffHunk": "@@ -65,16 +65,27 @@ public static Object get(String configKey, String type) {\n     @SuppressWarnings(\"unchecked\")\n     private static MapValue buildMapValue(Map<String, Object> section) {\n         MapValue map = new MapValueImpl<String, Object>();\n-\n-        section.forEach((key, val) -> {\n-            if (val instanceof String || val instanceof Long || val instanceof Double || val instanceof Boolean) {\n-                map.put(key, val);\n-            }\n-        });\n+        section.forEach((key, val) -> map.put(key, getConvertedValue(val)));", "originalCommit": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0MDkwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378040906", "bodyText": "+1.", "author": "aashikam", "createdAt": "2020-02-12T04:57:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0NDQxMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378044412", "bodyText": "Corrected.", "author": "aashikam", "createdAt": "2020-02-12T05:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODY4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODc0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378038749", "bodyText": "same comment as above regarding the use of .forEach()", "author": "pubudu91", "createdAt": "2020-02-12T04:46:00Z", "path": "stdlib/config-api/src/main/java/org/ballerinalang/stdlib/config/GetConfig.java", "diffHunk": "@@ -65,16 +65,27 @@ public static Object get(String configKey, String type) {\n     @SuppressWarnings(\"unchecked\")\n     private static MapValue buildMapValue(Map<String, Object> section) {\n         MapValue map = new MapValueImpl<String, Object>();\n-\n-        section.forEach((key, val) -> {\n-            if (val instanceof String || val instanceof Long || val instanceof Double || val instanceof Boolean) {\n-                map.put(key, val);\n-            }\n-        });\n+        section.forEach((key, val) -> map.put(key, getConvertedValue(val)));\n         return map;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private static BArray buildArrayValue(List value) {\n-        return BValueCreator.createArrayValue(value.toArray(), new BArrayType(BTypes.typeAnydata));\n+        Object[] convertedValues = new Object[value.size()];\n+        value.forEach(convertedValue -> convertedValues[value.indexOf(convertedValue)] =", "originalCommit": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0NDM3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378044376", "bodyText": "Corrected.", "author": "aashikam", "createdAt": "2020-02-12T05:16:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODc0OQ=="}], "type": "inlineReview"}, {"oid": "17a35ff055ab731ff5d08ee9040564a2d160ebd7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/17a35ff055ab731ff5d08ee9040564a2d160ebd7", "message": "Add changes from code review", "committedDate": "2020-02-12T05:14:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0OTcwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378049703", "bodyText": "Shall we add test cases for negative cases and multi dimensional arrays as well? See https://github.com/toml-lang/toml/tree/v0.4.0#array\nAlso a bit more complex case for arrays of table and a negative case as well: https://github.com/toml-lang/toml/tree/v0.4.0#array-of-tables", "author": "pubudu91", "createdAt": "2020-02-12T05:42:22Z", "path": "stdlib/config-api/src/test/resources/datafiles/default/ballerina.conf", "diffHunk": "@@ -52,3 +52,11 @@ World!!!\n [listenerConfig.keyStore]\n paths=[\"/etc\", \"/tmp\", \"/usr/lib/\"]\n ports=[9090, 9091, 9092]\n+\n+[[foo]]\n+a=1\n+b=2\n+\n+[[foo]]\n+a=3\n+b=4", "originalCommit": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5Mjc2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378192761", "bodyText": "Added more tests.", "author": "aashikam", "createdAt": "2020-02-12T11:26:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0OTcwMw=="}], "type": "inlineReview"}, {"oid": "c110eed6dac592c079919193e5c6b0e098ae3b7f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c110eed6dac592c079919193e5c6b0e098ae3b7f", "message": "Add more tests", "committedDate": "2020-02-12T11:24:22Z", "type": "commit"}]}