{"pr_number": 26542, "pr_title": "Refactor debug logs in transactions module", "pr_createdAt": "2020-10-22T18:53:19Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542", "timeline": [{"oid": "90353ad663990cddbf73db37a662dfba068d8e16", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90353ad663990cddbf73db37a662dfba068d8e16", "message": "Change debug logs", "committedDate": "2020-10-22T18:50:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjYyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510406628", "bodyText": "Shall we order the imports alphabetically?", "author": "MaryamZi", "createdAt": "2020-10-22T19:31:43Z", "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -15,6 +15,7 @@\n // under the License.\n \n import ballerina/log;\n+import ballerina/io;", "originalCommit": "90353ad663990cddbf73db37a662dfba068d8e16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1ODIzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510558232", "bodyText": "fixed", "author": "gimantha", "createdAt": "2020-10-23T02:22:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjYyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjY2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510406666", "bodyText": "Even with this approach, the argument is evaluated (new string is created), right? We need to pass a function pointer.\ne.g.,\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n          \n            \n                    log:printDebug(() => io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n      \n    \n    \n  \n\nor\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n          \n            \n                    log:printDebug(function () {\n          \n          \n            \n                        io:sprintf(\"Preparing remote participant: %s\", self.participantId)\n          \n          \n            \n                    });", "author": "MaryamZi", "createdAt": "2020-10-22T19:31:47Z", "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -96,27 +97,27 @@ type RemoteParticipant object {\n         // to prepare a participant\n         boolean successful = true;\n \n-        log:printDebug(\"Preparing remote participant: \" + self.participantId);\n+        log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));", "originalCommit": "90353ad663990cddbf73db37a662dfba068d8e16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1ODU0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510558543", "bodyText": "fixed", "author": "gimantha", "createdAt": "2020-10-23T02:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjY2Ng=="}], "type": "inlineReview"}, {"oid": "84f3f33e172f33ea29c101e2fce467e897c55337", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/84f3f33e172f33ea29c101e2fce467e897c55337", "message": "Add function pointer to printDebug", "committedDate": "2020-10-23T02:15:10Z", "type": "commit"}, {"oid": "c6eb15fb94883bf11d20d700e635935a532a34a5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6eb15fb94883bf11d20d700e635935a532a34a5", "message": "Assign index based access variables to simple variables", "committedDate": "2020-10-23T05:50:00Z", "type": "commit"}]}