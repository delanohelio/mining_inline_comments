{"pr_number": 22649, "pr_title": "Add array type descriptor support to new parser", "pr_createdAt": "2020-04-15T14:50:38Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649", "timeline": [{"oid": "76972bebab8feb8e89b0e6a64b1b4c09040ae42f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76972bebab8feb8e89b0e6a64b1b4c09040ae42f", "message": "Array type descriptor support to new parser", "committedDate": "2020-04-11T09:59:37Z", "type": "commit"}, {"oid": "7c8f84088e1ea7e1466b2ced3db1b5f03c3b717a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7c8f84088e1ea7e1466b2ced3db1b5f03c3b717a", "message": "Recovery logic and test cases for array type descriptor", "committedDate": "2020-04-15T11:00:24Z", "type": "commit"}, {"oid": "45f7ed84f0cf606cdeb98d609fbf09047e87c366", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/45f7ed84f0cf606cdeb98d609fbf09047e87c366", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser", "committedDate": "2020-04-15T13:17:57Z", "type": "commit"}, {"oid": "3f8a2103b5f1bd900d857d5097fb0158cdb8416c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f8a2103b5f1bd900d857d5097fb0158cdb8416c", "message": "Changed VAR_DECL to MODULE_VAR_DECL", "committedDate": "2020-04-15T13:24:21Z", "type": "commit"}, {"oid": "4a3baa4fb604f99090d05da6541f073f2eb81219", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4a3baa4fb604f99090d05da6541f073f2eb81219", "message": "Added metadata block to json files", "committedDate": "2020-04-15T14:33:13Z", "type": "commit"}, {"oid": "bef541689f68eef604d7d99f9290d36bc476c5c1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bef541689f68eef604d7d99f9290d36bc476c5c1", "message": "Reformat json files to four space indent", "committedDate": "2020-04-15T14:35:44Z", "type": "commit"}, {"oid": "7741f2993a33896c9526f38a3061c5c9d67a94f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7741f2993a33896c9526f38a3061c5c9d67a94f9", "message": "Removed unwanted space.", "committedDate": "2020-04-15T14:44:59Z", "type": "commit"}, {"oid": "829011162d984ea62960c2480dec9fb60e8cc421", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/829011162d984ea62960c2480dec9fb60e8cc421", "message": "Infinite dimension support for the array type descriptor.", "committedDate": "2020-04-15T19:33:36Z", "type": "commit"}, {"oid": "6705c81089f57e870904b604e890b509fbd17c8b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6705c81089f57e870904b604e890b509fbd17c8b", "message": "Added missing files", "committedDate": "2020-04-15T19:38:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NjY0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409246640", "bodyText": "Can this handle  a nilable-array or nil scenario:  i.e: int?[]? x;", "author": "SupunS", "createdAt": "2020-04-16T02:40:18Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1608,12 +1616,26 @@ private STNode parseTypeDescriptor() {\n         STNode type = parseTypeDescriptor(token.kind);\n         STToken nextToken = peek();\n         switch (nextToken.kind) {\n-            // If next token after a type descriptor is <code>?</code> then it is an Optional type descriptor\n+            //If next token after a type descriptor is <code>?</code> then it is an optional type descriptor\n             case QUESTION_MARK_TOKEN:\n-                return parseOptionalTypeDescriptor(type);\n+                type =  parseOptionalTypeDescriptor(type);\n+                break;\n+            //If next token after a type descriptor is <code>[</code> then it is an array type descriptor\n+            case OPEN_BRACKET_TOKEN:\n+                type =  parseArrayTypeDescriptor(type);\n+                break;\n             default:\n                 return type;\n         }\n+        //This part is to handle int?[] and int[]? type declarations\n+        nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.QUESTION_MARK_TOKEN && type.kind == SyntaxKind.ARRAY_TYPE) {\n+            return parseOptionalTypeDescriptor(type);\n+        } else if (nextToken.kind == SyntaxKind.OPEN_BRACKET_TOKEN && type.kind == SyntaxKind.OPTIONAL_TYPE) {\n+            return parseArrayTypeDescriptor(type);\n+        } else {\n+            return type;\n+        }", "originalCommit": "6705c81089f57e870904b604e890b509fbd17c8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NzM0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409247345", "bodyText": "Should we use recusrsion?", "author": "SupunS", "createdAt": "2020-04-16T02:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NjY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3MDY5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409270690", "bodyText": "Currently, it cannot handle it. Yes, recursion would be helpful, I'll fix that. Thank you.", "author": "rdulmina", "createdAt": "2020-04-16T04:13:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NjY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MTAyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409461021", "bodyText": "@SupunS I have fixed this. Please review.", "author": "rdulmina", "createdAt": "2020-04-16T10:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NjY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTIwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409249209", "bodyText": "I think the structure of the resulting tree is a bit different to the spec.\ne.g. for something like int[][][], this model group the tree nodes as (int) ([][][]).\nBut in the spec, it is: (((int)[])[])[].\nI feel recursion would solve this.", "author": "SupunS", "createdAt": "2020-04-16T02:49:15Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5209,6 +5235,88 @@ private boolean isUnaryOperator(SyntaxKind kind) {\n         }\n     }\n \n+    /**\n+     * Parse array type descriptor.\n+     * <p>\n+     * <code>\n+     * array-type-descriptor := member-type-descriptor [ [ array-length ] ]\n+     * member-type-descriptor := type-descriptor\n+     * array-length :=\n+     *    int-literal\n+     *    | constant-reference-expr\n+     *    | inferred-array-length\n+     * inferred-array-length := *\n+     * </code>\n+     * </p>\n+     * @param typeDescriptorNode\n+     * @return Parsed Node\n+     */\n+\n+    private STNode parseArrayTypeDescriptor(STNode typeDescriptorNode) {\n+        startContext(ParserRuleContext.ARRAY_TYPE_DESCRIPTOR);\n+        STNode dimensions = parseDimensions();\n+\n+        endContext();\n+        return STNodeFactory.createArrayTypeDescriptor(typeDescriptorNode, dimensions);", "originalCommit": "6705c81089f57e870904b604e890b509fbd17c8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3MDM3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409270379", "bodyText": "I'll fix that.", "author": "rdulmina", "createdAt": "2020-04-16T04:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MTEyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409461126", "bodyText": "@SupunS I have fixed this. Please review.", "author": "rdulmina", "createdAt": "2020-04-16T10:46:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTczNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409249737", "bodyText": "keep a newline between the description and the params/returns in doc comments.", "author": "SupunS", "createdAt": "2020-04-16T02:51:11Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5209,6 +5235,88 @@ private boolean isUnaryOperator(SyntaxKind kind) {\n         }\n     }\n \n+    /**\n+     * Parse array type descriptor.\n+     * <p>\n+     * <code>\n+     * array-type-descriptor := member-type-descriptor [ [ array-length ] ]\n+     * member-type-descriptor := type-descriptor\n+     * array-length :=\n+     *    int-literal\n+     *    | constant-reference-expr\n+     *    | inferred-array-length\n+     * inferred-array-length := *\n+     * </code>\n+     * </p>\n+     * @param typeDescriptorNode", "originalCommit": "6705c81089f57e870904b604e890b509fbd17c8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MDU5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409460599", "bodyText": "fixed", "author": "rdulmina", "createdAt": "2020-04-16T10:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTczNw=="}], "type": "inlineReview"}, {"oid": "6a90c15dca3c2c83f557a79ca3bb3d2e3b903421", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a90c15dca3c2c83f557a79ca3bb3d2e3b903421", "message": "Extend the array type descriptor support with optional type.\n\nChanged the structure of the array type descriptor. ie. changed (int) ([][][]) to (((int)[])[])[]. Extend the support with optional type desc eg. int?[]?, int[]?[] are now supported.", "committedDate": "2020-04-16T10:25:47Z", "type": "commit"}, {"oid": "ddb695aa938e3a2065dc5b0ae25a66c4c3e9c721", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ddb695aa938e3a2065dc5b0ae25a66c4c3e9c721", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser", "committedDate": "2020-04-16T10:44:00Z", "type": "commit"}, {"oid": "fb55a6ea4f84941f30f6bc371d42964a98574ab0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb55a6ea4f84941f30f6bc371d42964a98574ab0", "message": "fixed typo in a comment", "committedDate": "2020-04-16T11:01:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUzNzMwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409537307", "bodyText": "STATEMENT_START_IDENTIFIER should be replaced with VARIABLE_REF.\nBoth indeed refers to identifiers, but the contexts are different..", "author": "SupunS", "createdAt": "2020-04-16T13:02:22Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -198,6 +198,10 @@\n     private static final ParserRuleContext[] CONST_DECL_RHS =\n             { ParserRuleContext.STATEMENT_START_IDENTIFIER, ParserRuleContext.ASSIGN_OP };\n \n+    private static final ParserRuleContext[] ARRAY_LENGTH = { ParserRuleContext.CLOSE_BRACKET,\n+            ParserRuleContext.DECIMAL_INTEGER_LITERAL, ParserRuleContext.HEX_INTEGER_LITERAL,\n+            ParserRuleContext.ASTERISK, ParserRuleContext.STATEMENT_START_IDENTIFIER};", "originalCommit": "fb55a6ea4f84941f30f6bc371d42964a98574ab0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5MzE5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409993199", "bodyText": "Done :-)", "author": "rdulmina", "createdAt": "2020-04-17T04:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUzNzMwNw=="}], "type": "inlineReview"}, {"oid": "94b1a8d15995b5668f26a88b57b5e217db859245", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94b1a8d15995b5668f26a88b57b5e217db859245", "message": "Replaced STATEMENT_START_IDENTIFIER with VARIABLE_REF.", "committedDate": "2020-04-17T04:58:29Z", "type": "commit"}, {"oid": "310255bf66cd302812f31c1997126a34de9ecc81", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/310255bf66cd302812f31c1997126a34de9ecc81", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser", "committedDate": "2020-04-17T05:39:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMTIzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r410011233", "bodyText": "Naming pattern: ArrayTypeDescriptorNode", "author": "SupunS", "createdAt": "2020-04-17T06:10:51Z", "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -1449,6 +1449,40 @@\n                     \"type\": \"Node\"\n                 }\n             ]\n+        },\n+        {\n+            \"name\": \"ArrayTypeDescriptor\",", "originalCommit": "310255bf66cd302812f31c1997126a34de9ecc81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMTMxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r410011315", "bodyText": "Can we flattened this? i.e: make [, array-len and ] part of the ArrayTypeDescriptorNode", "author": "SupunS", "createdAt": "2020-04-17T06:11:09Z", "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -1449,6 +1449,40 @@\n                     \"type\": \"Node\"\n                 }\n             ]\n+        },\n+        {\n+            \"name\": \"ArrayTypeDescriptor\",\n+            \"base\": \"Node\",\n+            \"kind\": \"ARRAY_TYPE\",\n+            \"attributes\": [\n+                {\n+                    \"name\": \"typeDescriptorNode\",\n+                    \"type\": \"Node\"\n+                },\n+                {\n+                    \"name\": \"dimensions\",\n+                    \"type\": \"Node\"", "originalCommit": "310255bf66cd302812f31c1997126a34de9ecc81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMTI3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r410021274", "bodyText": "Yes, since we have changed the structure we can do it now. I'll change it.", "author": "rdulmina", "createdAt": "2020-04-17T06:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMTMxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0MDY3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r410040673", "bodyText": "@SupunS Done please review", "author": "rdulmina", "createdAt": "2020-04-17T07:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMTMxNQ=="}], "type": "inlineReview"}, {"oid": "55443685d15397fb5b803bc5afe5191bd800f8c5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/55443685d15397fb5b803bc5afe5191bd800f8c5", "message": "Flattened array dimension into the array type descriptor node.\n\nRemoved ArrayDimension.java and added open bracket, array length, close bracket subtrees into ArrayTypeDescriptorNode. Changed the test JSON files to match with the new node structure.", "committedDate": "2020-04-17T07:15:26Z", "type": "commit"}, {"oid": "f58223cd80a32fbcc4248932c871c928306d0634", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f58223cd80a32fbcc4248932c871c928306d0634", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser", "committedDate": "2020-04-17T07:25:35Z", "type": "commit"}]}