{"pr_number": 24583, "pr_title": "Implement setModuleLogLevel function in Log API", "pr_createdAt": "2020-07-03T13:34:40Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MDUwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450760509", "bodyText": "Why are we removing this function?", "author": "daneshk", "createdAt": "2020-07-07T10:19:19Z", "path": "bvm/ballerina-logging/src/main/java/org/ballerinalang/logging/BLogManager.java", "diffHunk": "@@ -118,15 +118,6 @@ public BLogLevel getPackageLogLevel(String pkg) {\n         return loggerLevels.containsKey(pkg) ? loggerLevels.get(pkg) : ballerinaUserLogLevel;\n     }\n \n-    /**\n-     * Get the global log level.\n-     *\n-     * @return ballerinaUserLogLevel\n-     */\n-    public BLogLevel getGlobalLogLevel() {\n-        return ballerinaUserLogLevel;\n-    }", "originalCommit": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NTIwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450765201", "bodyText": "This function is no longer used.", "author": "MadhukaHarith92", "createdAt": "2020-07-07T10:28:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MDUwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MjYwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450762601", "bodyText": "Shall we make the second param as nilable type public string? moduleName = ()", "author": "daneshk", "createdAt": "2020-07-07T10:23:14Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.\n+# Following log levels are allowed.\n+#\n+# ERROR - error log level\n+#\n+# WARN - warn log level\n+#\n+# INFO - info log level\n+#\n+# DEBUG - debug log level\n+#\n+# TRACE - trace log level\n+#\n+# OFF - turns off logging\n+#\n+# ALL - enables all the log levels\n+#\n+# ```ballerina\n+# log:setModuleLevelLog(log:DEBUG, moduleName=\u201calpha\u201d);\n+# log:setModuleLevelLog(log:WARN);\n+# ```\n+#\n+# + logLevel - Log level to be set\n+# + moduleName - Name of the module\n+public function setModuleLogLevel(LogLevel logLevel, public string moduleName = \"\") = @java:Method {", "originalCommit": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5MTcwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450991702", "bodyText": "Updated in 4bbc1b7", "author": "MadhukaHarith92", "createdAt": "2020-07-07T16:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MjYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NDQwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450764408", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log:setModuleLogLevel(log:WARN, \"logorg/alpha\");\n          \n          \n            \n                log:setModuleLogLevel(log:WARN, moduleName = \"logorg/alpha\");", "author": "daneshk", "createdAt": "2020-07-07T10:26:38Z", "path": "tests/jballerina-integration-test/src/test/resources/logging/log-project/src/hello/module_log_level.bal", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/log;\n+import logorg/alpha;\n+import logorg/beta;\n+\n+public function main() {\n+    log:setModuleLogLevel(log:WARN, \"logorg/alpha\");", "originalCommit": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5MTY0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450991646", "bodyText": "Updated in 4bbc1b7", "author": "MadhukaHarith92", "createdAt": "2020-07-07T16:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NDQwOA=="}], "type": "inlineReview"}, {"oid": "3fa1daab78d51fac48860f82bc09865c92837d36", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3fa1daab78d51fac48860f82bc09865c92837d36", "message": "Implement setModuleLogLevel function in Log API", "committedDate": "2020-07-08T11:39:58Z", "type": "commit"}, {"oid": "ee161eb12fa477b7437d37e4c196fac16d89e180", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee161eb12fa477b7437d37e4c196fac16d89e180", "message": "Fix review changes", "committedDate": "2020-07-08T11:39:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc0Mjg4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451742888", "bodyText": "Can you check and verify that in the generated API docs for the log module this gets rendered correctly?", "author": "pubudu91", "createdAt": "2020-07-08T18:25:12Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.\n+# Following log levels are allowed.\n+#\n+# ERROR - error log level\n+#\n+# WARN - warn log level\n+#\n+# INFO - info log level\n+#\n+# DEBUG - debug log level\n+#\n+# TRACE - trace log level\n+#\n+# OFF - turns off logging\n+#\n+# ALL - enables all the log levels\n+#\n+# ```ballerina\n+# log:setModuleLevelLog(log:DEBUG, moduleName=\u201calpha\u201d);\n+# log:setModuleLevelLog(log:WARN);\n+# ```\n+#\n+# + logLevel - Log level to be set\n+# + moduleName - Name of the module", "originalCommit": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5Mzk0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451993944", "bodyText": "Yes, I checked. It is rendered properly.", "author": "MadhukaHarith92", "createdAt": "2020-07-09T06:35:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc0Mjg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MTI1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451751252", "bodyText": "If the module is not defined -> If a module name is not specified", "author": "pubudu91", "createdAt": "2020-07-08T18:40:24Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.", "originalCommit": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NDY0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451754646", "bodyText": "Instead of this switch case, you can use the existing API provided for converting a string log level value to a BLogLevel enum.\nLOG_MANAGER.setModuleLogLevel(BLogLevel.toBLogLevel(level), module);", "author": "pubudu91", "createdAt": "2020-07-08T18:46:23Z", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -103,4 +112,36 @@ public static void printWarn(Object msg) {\n                     });\n         }\n     }\n+\n+    public static void setModuleLogLevel(BString logLevel, Object moduleName) {\n+        String module;\n+        if (moduleName == null) {\n+            module = getPackagePath();\n+        } else {\n+            module = moduleName.toString();\n+        }\n+        String level = logLevel.getValue();\n+        switch (level) {\n+            case debug:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.DEBUG, module);\n+                break;\n+            case error:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.ERROR, module);\n+                break;\n+            case info:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.INFO, module);\n+                break;\n+            case warn:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.WARN, module);\n+                break;\n+            case trace:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.TRACE, module);\n+                break;\n+            case off:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.OFF, module);\n+                break;\n+            default:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.ALL, module);", "originalCommit": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAyMzY2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452023660", "bodyText": "Updated in a15bfd2", "author": "MadhukaHarith92", "createdAt": "2020-07-09T07:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NDY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MzM3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451763375", "bodyText": "Can use an enum for this. See https://github.com/ballerina-platform/ballerina-distribution/pull/611/files for examples on how to use enums.", "author": "pubudu91", "createdAt": "2020-07-08T19:02:56Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -16,6 +16,30 @@\n \n import ballerina/java;\n \n+# Represents the debug log level.\n+public const DEBUG = \"DEBUG\";\n+\n+# Represents the error log level.\n+public const ERROR = \"ERROR\";\n+\n+# Represents the info log level.\n+public const INFO = \"INFO\";\n+\n+# Represents the trace log level.\n+public const TRACE = \"TRACE\";\n+\n+# Represents the warn log level.\n+public const WARN = \"WARN\";\n+\n+# Represents the all log level.\n+public const ALL = \"ALL\";\n+\n+# Represents the off log level.\n+public const OFF = \"OFF\";\n+\n+# Represents log level types.\n+public type LogLevel DEBUG | INFO | ERROR | WARN | TRACE | OFF | ALL;", "originalCommit": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAyMzU3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452023572", "bodyText": "Updated in a15bfd2", "author": "MadhukaHarith92", "createdAt": "2020-07-09T07:39:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MzM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3NDc4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452174787", "bodyText": "You don't need to say DEBUG = \"DEBUG\". Just DEBUG is enough. Only need to do so if you want to give a different string value to the enum value DEBUG", "author": "pubudu91", "createdAt": "2020-07-09T12:19:00Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -16,6 +16,17 @@\n \n import ballerina/java;\n \n+# Represents log level types.\n+public enum LogLevel {\n+    DEBUG = \"DEBUG\",", "originalCommit": "a15bfd2b9973b96ed19cea57b181b22c1652d975", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4MDYzNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452180635", "bodyText": "Ack. Updated in 472b7ca", "author": "MadhukaHarith92", "createdAt": "2020-07-09T12:29:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3NDc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNjQ4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452236481", "bodyText": "These are now unused right?", "author": "pubudu91", "createdAt": "2020-07-09T13:56:14Z", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -28,6 +29,14 @@\n  */\n public class Utils extends AbstractLogFunction {\n \n+    private static final String debug = \"DEBUG\";\n+    private static final String error = \"ERROR\";\n+    private static final String info = \"INFO\";\n+    private static final String warn = \"WARN\";\n+    private static final String trace = \"TRACE\";\n+    private static final String all = \"ALL\";\n+    private static final String off = \"OFF\";", "originalCommit": "472b7ca2c222a0c4055fb5ad0861df82a4592d07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1OTI0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452259249", "bodyText": "Yes, removed.", "author": "MadhukaHarith92", "createdAt": "2020-07-09T14:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNjQ4MQ=="}], "type": "inlineReview"}, {"oid": "265cf918167880f599638b344ed6c5a0eb3bb848", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/265cf918167880f599638b344ed6c5a0eb3bb848", "message": "Fix review changes", "committedDate": "2020-07-09T14:26:04Z", "type": "commit"}]}