{"pr_number": 25294, "pr_title": "Add functionality to rerun failed tests", "pr_createdAt": "2020-08-16T17:47:22Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIxOTIxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r471219218", "bodyText": "Shall we rename the flag to --rerun-failed?", "author": "azinneera", "createdAt": "2020-08-17T03:56:03Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -159,6 +159,9 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--old-parser\", description = \"Enable old parser.\", hidden = true)\n     private boolean useOldParser;\n \n+    @CommandLine.Option(names = \"--rerun-failedTests\", description = \"Rerun failed tests.\")", "originalCommit": "f7fea588df21afb4f4eae178c172651d8f10cb0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyMTYyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r471221626", "bodyText": "Ack. Will change to --rerun-failed", "author": "Ibaqu", "createdAt": "2020-08-17T04:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIxOTIxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNzI4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r471227288", "bodyText": "Can these comments can be removed?", "author": "azinneera", "createdAt": "2020-08-17T04:36:29Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/CleanTargetDirTask.java", "diffHunk": "@@ -58,8 +59,14 @@ public void execute(BuildContext buildContext) {\n                         + File.separator + ProjectDirConstants.BIN_DIR_NAME).toPath());\n                 deleteResource(new File(targetDir.toAbsolutePath().toString()\n                         + File.separator + ProjectDirConstants.TARGET_BALO_DIRECTORY).toPath());\n-                deleteResource(new File(targetDir.toAbsolutePath().toString()\n-                        + File.separator + ProjectDirConstants.CACHES_DIR_NAME).toPath());\n+//                deleteResource(new File(targetDir.toAbsolutePath().toString()", "originalCommit": "f7fea588df21afb4f4eae178c172651d8f10cb0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI0OTcyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r471249722", "bodyText": "removed changes to CleanTargetDirTask", "author": "Ibaqu", "createdAt": "2020-08-17T06:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNzI4OA=="}], "type": "inlineReview"}, {"oid": "a3455d1a95046f9f3821f93f47cb26994c6daf9f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a3455d1a95046f9f3821f93f47cb26994c6daf9f", "message": "Add functionality to rerun failed tests", "committedDate": "2020-08-17T05:57:26Z", "type": "forcePushed"}, {"oid": "657a803ffb52712361bf23c8a1e78956076ba096", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/657a803ffb52712361bf23c8a1e78956076ba096", "message": "Add functionality to rerun failed tests", "committedDate": "2020-08-17T06:14:58Z", "type": "forcePushed"}, {"oid": "5b9e8da33e3e9ae0d7ae4243eb286da3cdbac4c9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b9e8da33e3e9ae0d7ae4243eb286da3cdbac4c9", "message": "Add RerunfailedTest functionality unit tests", "committedDate": "2020-08-17T07:34:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0MTUxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r472041516", "bodyText": "Shall we correct the typo in \"retun_test.json\"", "author": "Dilhasha", "createdAt": "2020-08-18T09:24:15Z", "path": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/BTestRunner.java", "diffHunk": "@@ -404,6 +413,13 @@ private void executeFunction(Test test, TestSuite suite, String packageName, Cla\n                                  Scheduler scheduler, AtomicBoolean shouldSkip, AtomicBoolean shouldSkipTest,\n                                  List<String> failedOrSkippedTests, List<String> failedAfterFuncTests) {\n         TesterinaResult functionResult;\n+        Path sourceRootPath = Paths.get(suite.getSourceRootPath());\n+        Path jsonCacheDir = sourceRootPath.resolve(\"target\").resolve(\"caches\").resolve(\"json_cache\");\n+        Path rerunJson =\n+                jsonCacheDir.resolve(suite.getOrgName()).resolve(suite.getPackageID()).resolve(suite.getVersion());\n+        Path jsonPath = Paths.get(rerunJson.toString(), \"retun_test.json\");", "originalCommit": "5b9e8da33e3e9ae0d7ae4243eb286da3cdbac4c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE3NDYzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r472174638", "bodyText": "Corrected typo in all instances.", "author": "Ibaqu", "createdAt": "2020-08-18T13:07:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0MTUxNg=="}], "type": "inlineReview"}, {"oid": "213a778ae6221d7bd64b9461aac1f61fc6f196cb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/213a778ae6221d7bd64b9461aac1f61fc6f196cb", "message": "Add functionality to rerun failed tests", "committedDate": "2020-08-21T06:55:44Z", "type": "commit"}, {"oid": "7bb33ded9e3997a344fa38cceee38685ba4205f9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bb33ded9e3997a344fa38cceee38685ba4205f9", "message": "Add RerunfailedTest functionality unit tests", "committedDate": "2020-08-21T06:55:44Z", "type": "commit"}, {"oid": "ce647e52448f4b91556307e72865437e69995b64", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce647e52448f4b91556307e72865437e69995b64", "message": "Address PR review comments", "committedDate": "2020-08-21T06:55:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0Mzk1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r475343955", "bodyText": "Once the new package implementation is in place, we should allow running with the -a flag. Please create an issue to track this.", "author": "azinneera", "createdAt": "2020-08-24T05:01:54Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -204,6 +207,28 @@ public void execute() {\n             return;\n         }\n \n+        if (this.rerunTests) {\n+            // Cannot rerun failed tests using -a | -all flags\n+            if (this.buildAll) {\n+                CommandUtil.printError(this.errStream,\n+                                       \"Cannot specify --rerun-failed and -a | --all flags at the same time\",", "originalCommit": "ce647e52448f4b91556307e72865437e69995b64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NzA1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r475347057", "bodyText": "Ack. Created issue to track this : #25382", "author": "Ibaqu", "createdAt": "2020-08-24T05:14:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0Mzk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MTI3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r475351277", "bodyText": "We should catch the exception and close the BufferedReader. Lets wrap this with a try-with-resources block.", "author": "azinneera", "createdAt": "2020-08-24T05:31:05Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -432,4 +458,11 @@ private ModuleStatus loadModuleStatusFromFile(Path statusJsonPath) throws IOExce\n         BufferedReader bufferedReader = Files.newBufferedReader(statusJsonPath, StandardCharsets.UTF_8);\n         return gson.fromJson(bufferedReader, ModuleStatus.class);\n     }\n+\n+    private List<String> readFailedTestsFromFile(Path rerunTestJsonPath) throws IOException {\n+        Gson gson = new Gson();\n+        rerunTestJsonPath = Paths.get(rerunTestJsonPath.toString(), \"rerun_test.json\");\n+        BufferedReader bufferedReader = Files.newBufferedReader(rerunTestJsonPath, StandardCharsets.UTF_8);", "originalCommit": "ce647e52448f4b91556307e72865437e69995b64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4ODI2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r475388263", "bodyText": "Used try-with-resource block and handled exceptions within the function itself", "author": "Ibaqu", "createdAt": "2020-08-24T07:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MTI3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MTcwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r475351702", "bodyText": "Lets add a test case to verify the behavior when there are are no failed tests found.", "author": "azinneera", "createdAt": "2020-08-24T05:32:53Z", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/RerunFailedTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.testerina.test;\n+\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test class containting tests related to Rerun failed test functionality.\n+ */\n+public class RerunFailedTest extends BaseTestCase {\n+\n+    private BMainInstance balClient;\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() throws BallerinaTestException {\n+        balClient = new BMainInstance(balServer);\n+        projectPath = rerunFailedProjectPath.toString();\n+    }\n+\n+    @Test\n+    public void testFullTest() throws BallerinaTestException {\n+        String msg1 = \"2 passing\";\n+        String msg2 = \"2 failing\";\n+        LogLeecher clientLeecher1 = new LogLeecher(msg1);\n+        LogLeecher clientLeecher2 = new LogLeecher(msg2);\n+\n+        balClient.runMain(\"test\", new String[]{\"module_1\"}, null, new String[]{},\n+                new LogLeecher[]{clientLeecher1, clientLeecher2}, projectPath);\n+\n+        clientLeecher1.waitForText(20000);\n+        clientLeecher2.waitForText(20000);\n+    }\n+\n+    @Test (dependsOnMethods = \"testFullTest\")\n+    public void testRerunFailedTest() throws BallerinaTestException {\n+        String msg1 = \"0 passing\";\n+        String msg2 = \"2 failing\";\n+        LogLeecher clientLeecher1 = new LogLeecher(msg1);\n+        LogLeecher clientLeecher2 = new LogLeecher(msg2);\n+\n+        balClient.runMain(\"test\", new String[]{\"--rerun-failed\", \"module_1\"}, null, new String[]{},\n+                new LogLeecher[]{clientLeecher1, clientLeecher2}, projectPath);\n+\n+        clientLeecher1.waitForText(20000);\n+        clientLeecher2.waitForText(20000);\n+    }", "originalCommit": "ce647e52448f4b91556307e72865437e69995b64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4Nzg4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25294#discussion_r475387881", "bodyText": "Added testRerunWithNoFailedTests", "author": "Ibaqu", "createdAt": "2020-08-24T07:16:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MTcwMg=="}], "type": "inlineReview"}, {"oid": "47edfa7886fb2882e9819688b2345398e04569fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47edfa7886fb2882e9819688b2345398e04569fe", "message": "Address PR review comments", "committedDate": "2020-08-24T07:13:34Z", "type": "forcePushed"}, {"oid": "ea17e5f08ff8f2e6f2e3cc209838a349ba121d83", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea17e5f08ff8f2e6f2e3cc209838a349ba121d83", "message": "Address PR review comments", "committedDate": "2020-08-24T08:30:34Z", "type": "commit"}, {"oid": "ea17e5f08ff8f2e6f2e3cc209838a349ba121d83", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea17e5f08ff8f2e6f2e3cc209838a349ba121d83", "message": "Address PR review comments", "committedDate": "2020-08-24T08:30:34Z", "type": "forcePushed"}]}