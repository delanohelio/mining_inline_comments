{"pr_number": 21608, "pr_title": "Add support for iterator errors", "pr_createdAt": "2020-03-10T20:04:30Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21608", "timeline": [{"oid": "8290fb221f661c3a687abdaf3e27a2041190165d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8290fb221f661c3a687abdaf3e27a2041190165d", "message": "Add support for iterator errors", "committedDate": "2020-03-10T19:59:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTkyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21608#discussion_r390695923", "bodyText": "We can just pass the member types to BUnionType.create(null, foreach.resultType, foreach.errorType)\nlet's change that when you add the test cases..", "author": "rdhananjaya", "createdAt": "2020-03-11T01:11:16Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -2829,32 +2829,68 @@ private BLangBlockStmt desugarForeachToWhile(BLangForeach foreach, BLangSimpleVa\n                 getIteratorNextVariableDefinition(foreach, iteratorSymbol, resultSymbol);\n \n         // Note - $result$ != ()\n+        BLangType userDefineType;\n+        if (foreach.errorType != null) {\n+            userDefineType = getUserDefineTypeNode(BUnionType.create(null,", "originalCommit": "8290fb221f661c3a687abdaf3e27a2041190165d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczNjk2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21608#discussion_r390736961", "bodyText": "Fixed in 1e740aa", "author": "grainier", "createdAt": "2020-03-11T04:12:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTkyMw=="}], "type": "inlineReview"}]}