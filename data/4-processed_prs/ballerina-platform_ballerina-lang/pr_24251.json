{"pr_number": 24251, "pr_title": "Improve unit test cases for annotation with readonly types", "pr_createdAt": "2020-06-17T07:19:10Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251", "timeline": [{"oid": "b0a4ba8b78cd4f6edd9bc8e95e11ae980ac4ede0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b0a4ba8b78cd4f6edd9bc8e95e11ae980ac4ede0", "message": "Check tests runtime exceptions from Ballerina", "committedDate": "2020-06-17T06:43:18Z", "type": "commit"}, {"oid": "b3e15eebb751a3c45237b446fea1e7c48483183e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3e15eebb751a3c45237b446fea1e7c48483183e", "message": "Override getImmutableType for BFunctionType", "committedDate": "2020-06-17T07:15:56Z", "type": "commit"}, {"oid": "b6f42f2d3af6ebe1720c67ec5eb8bcb56fb68cd4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b6f42f2d3af6ebe1720c67ec5eb8bcb56fb68cd4", "message": "Add annotation readonly types test case", "committedDate": "2020-06-17T07:16:44Z", "type": "commit"}, {"oid": "b744315819a5e6b0b33e75f45c38aa4926fa9dc8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b744315819a5e6b0b33e75f45c38aa4926fa9dc8", "message": "Add FUNCTION_POINTER_TAG as inherently immutable", "committedDate": "2020-06-17T07:27:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0ODg4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441348888", "bodyText": "extra indentation?", "author": "rdhananjaya", "createdAt": "2020-06-17T07:48:14Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/annotations/annotation_access_negative.bal", "diffHunk": "@@ -35,11 +35,21 @@ public type T1 record {\n T1 a = { name: \"John\" };\n \n function testRecordTypeAnnotationReadonlyValueEdit()  {\n-    typedesc<any> t = typeof a;\n-    Annot? annot = t.@v1;\n-    if (annot is Annot) {\n-        annot.foo = \"EDITED\";\n-    }\n+    var fn = function() {\n+        typedesc<any> t = typeof a;\n+        Annot? annot = t.@v1;\n+        if (annot is Annot) {\n+            annot.foo = \"EDITED\";\n+        }\n+    };\n+\n+    error? res = trap fn();\n+        assertEquality(true, res is error);", "originalCommit": "b744315819a5e6b0b33e75f45c38aa4926fa9dc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0OTg4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441349886", "bodyText": "need to fix. Thanks", "author": "KRVPerera", "createdAt": "2020-06-17T07:49:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0ODg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1NTg1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441355859", "bodyText": "Fixed", "author": "KRVPerera", "createdAt": "2020-06-17T08:00:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0ODg4OA=="}], "type": "inlineReview"}, {"oid": "08560d977755e6b552e9d355d101f40a5fed4292", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/08560d977755e6b552e9d355d101f40a5fed4292", "message": "Fix indentation of annotation_access_negative.bal", "committedDate": "2020-06-17T07:58:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MDEzMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441370131", "bodyText": "Do we need this main function?", "author": "MaryamZi", "createdAt": "2020-06-17T08:23:48Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/annotations/annotation_access_negative.bal", "diffHunk": "@@ -65,9 +85,44 @@ function testAnnotationOnObjectTypeReadonlyValueEdit() {\n function funcWithAnnots() {}\n \n function testAnnotationOnFunctionTypeReadonlyValueEdit() {\n-    typedesc<any> t = typeof funcWithAnnots;\n-    Annot? annot = t.@v3;\n-    if (annot is Annot) {\n-        annot.foo = \"EDITED\";\n+    var fn = function() {\n+        typedesc<any> t = typeof funcWithAnnots;\n+        Annot? annot = t.@v3;\n+        if (annot is Annot) {\n+            annot.foo = \"EDITED\";\n+        }\n+    };\n+\n+    error? res = trap fn();\n+    assertTrue(res is error);\n+\n+    error resError = <error> res;\n+    assertEquality(\"{ballerina/lang.map}InvalidUpdate\", resError.message());\n+    assertEquality(\"Invalid update of record field: modification not allowed on readonly value\",\n+                   resError.detail()[\"message\"].toString());\n+}\n+\n+public function main() {", "originalCommit": "08560d977755e6b552e9d355d101f40a5fed4292", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3ODA4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441378080", "bodyText": "removed", "author": "KRVPerera", "createdAt": "2020-06-17T08:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MDEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MTU3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441371577", "bodyText": "Does this compile? Can't seem to find testTypeAnnotAccess1.\nWe don't need this main function anyway right?", "author": "MaryamZi", "createdAt": "2020-06-17T08:26:14Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/annotations/annotation_readonly_types.bal", "diffHunk": "@@ -0,0 +1,126 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/lang.'object as lang;\n+import ballerina/java;\n+\n+type Annot record {|\n+   service myService;\n+   object {} myObject;\n+   handle myHandle;\n+   typedesc myTypedesc;\n+   function () myFunction;\n+|};\n+\n+public annotation Annot v1 on type;\n+\n+string strValue = \"v1 value\";\n+\n+type Dummy abstract object {};\n+\n+type DummyImpl object {\n+    *Dummy;\n+};\n+\n+public function newArrayList() returns handle = @java:Constructor {\n+    class:\"java.util.ArrayList\"\n+} external;\n+\n+handle dummyHandle = newArrayList();\n+\n+typedesc<any> T = typeof strValue;\n+\n+var fn = function () {\n+    int x = 5;\n+    int y = 4;\n+};\n+\n+DummyImpl dummyImpl = new();\n+\n+@v1 {\n+    myService: ser,\n+    myObject: dummyImpl,\n+    myHandle: dummyHandle,\n+    myTypedesc: T,\n+    myFunction: fn\n+}\n+public type T1 record {\n+    string name;\n+};\n+\n+T1 a = { name: \"John\" };\n+\n+function testReadonlyTypeAnnotationAttachment()  {\n+    typedesc<any> t = typeof a;\n+    Annot? annot = t.@v1;\n+    assertTrue(annot is Annot);\n+}\n+\n+public function main() {\n+    testTypeAnnotAccess1();", "originalCommit": "08560d977755e6b552e9d355d101f40a5fed4292", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3NzkyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24251#discussion_r441377928", "bodyText": "No..I have run locally disabling the test suite.\nFixed: 5604d29", "author": "KRVPerera", "createdAt": "2020-06-17T08:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MTU3Nw=="}], "type": "inlineReview"}, {"oid": "5604d29b2fc131265541d30ea1335c316fb8fe82", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5604d29b2fc131265541d30ea1335c316fb8fe82", "message": "Fix unit test cases", "committedDate": "2020-06-17T08:34:54Z", "type": "commit"}, {"oid": "5604d29b2fc131265541d30ea1335c316fb8fe82", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5604d29b2fc131265541d30ea1335c316fb8fe82", "message": "Fix unit test cases", "committedDate": "2020-06-17T08:34:54Z", "type": "forcePushed"}, {"oid": "7a893b9a3da8b37aef0dc69f5698cf7fd491359c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7a893b9a3da8b37aef0dc69f5698cf7fd491359c", "message": "Fix code style", "committedDate": "2020-06-17T09:08:50Z", "type": "commit"}]}