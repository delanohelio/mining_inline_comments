{"pr_number": 24652, "pr_title": "Fix few issues in diagnostics related to `readonly` and mapping/list constructor expressions", "pr_createdAt": "2020-07-08T10:26:24Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652", "timeline": [{"oid": "2c5a7a8c010abc6c77253e09f42122239f4c2500", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c5a7a8c010abc6c77253e09f42122239f4c2500", "message": "Avoid logging incompatible types error for constructor exprs with invalid CETs", "committedDate": "2020-07-07T06:51:06Z", "type": "commit"}, {"oid": "4591f0d4f3693debfcde17173566743c3d2001d5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4591f0d4f3693debfcde17173566743c3d2001d5", "message": "Fix anon type name getting printed for immutable records/objects", "committedDate": "2020-07-07T16:47:12Z", "type": "commit"}, {"oid": "032313d6369891d73cd4db91d91b2099adf1e85d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/032313d6369891d73cd4db91d91b2099adf1e85d", "message": "Avoid logging errors for errored constrs/union CETs and add tests", "committedDate": "2020-07-08T09:28:38Z", "type": "commit"}, {"oid": "96b50367e3ee24eec4dc9fa9347bee55ec234af7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/96b50367e3ee24eec4dc9fa9347bee55ec234af7", "message": "Fix gRPC StubGeneratorTestCase", "committedDate": "2020-07-08T17:29:06Z", "type": "commit"}, {"oid": "29ffb803df71216442828a113cfe1493d41d9b7c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/29ffb803df71216442828a113cfe1493d41d9b7c", "message": "Resolve conflicts and merge master", "committedDate": "2020-07-16T06:51:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMDE3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455600171", "bodyText": "Just curious what this check does? \"($\"", "author": "KRVPerera", "createdAt": "2020-07-16T08:09:46Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BStructureType.java", "diffHunk": "@@ -49,4 +54,22 @@ public BStructureType(int tag, BTypeSymbol tSymbol, int flags) {\n     public void accept(TypeVisitor visitor) {\n         visitor.visit(this);\n     }\n+\n+    protected boolean shouldPrintShape(Name name) {\n+        if (name == null) {\n+            return false;\n+        }\n+\n+        String value = name.value;\n+\n+        if (value.isEmpty() || value.startsWith(DOLLAR)) {\n+            return true;\n+        }\n+\n+        if (!(Symbols.isFlagOn(this.tsymbol.flags, Flags.READONLY))) {\n+            return false;\n+        }\n+\n+        return value.startsWith(\"($\");", "originalCommit": "29ffb803df71216442828a113cfe1493d41d9b7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYzODg2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455638860", "bodyText": "For immutable record/object types the name is something like (T & readonly). So in the anonymous case it will be something like ($anonType$n & readonly).\nWe should clean this up in general though, to look at a flag maybe, instead of the name. #24471 tracks that.", "author": "MaryamZi", "createdAt": "2020-07-16T09:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMDE3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1Mzk0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455853946", "bodyText": "How can there be a semantic error in a union type?", "author": "pubudu91", "createdAt": "2020-07-16T15:00:14Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1280,7 +1280,16 @@ private BType checkListConstructorCompatibility(BType bType, BLangListConstructo\n             this.dlog.setNonConsoleDLog();\n \n             List<BType> compatibleTypes = new ArrayList<>();\n+            boolean erroredExpType = false;\n             for (BType memberType : ((BUnionType) bType).getMemberTypes()) {\n+                if (memberType == symTable.semanticError) {", "originalCommit": "29ffb803df71216442828a113cfe1493d41d9b7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4Mjk3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455882974", "bodyText": "One example is when there's a member type that is not defined.\npublic function main() {\n    Foo|int[] x = [1, 2];\n}\nWe seem to be logging an unknown type 'Foo' error, and using semantic error as the member type.", "author": "MaryamZi", "createdAt": "2020-07-16T15:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1Mzk0Ng=="}], "type": "inlineReview"}]}