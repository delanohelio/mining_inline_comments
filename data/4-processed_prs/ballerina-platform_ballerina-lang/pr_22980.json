{"pr_number": 22980, "pr_title": "fix an issue where anonymous toplevel nodes were not created for record types.", "pr_createdAt": "2020-04-29T15:05:17Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NDQ5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r417994498", "bodyText": "I think we can test the complete logic here when we set isAnonymous itself. This is to prevent setting the isAnonymous  again and again. Good call on creating a function. But it is better to move this logic inside to your function.\nCheck here also.\n\n  \n    \n      ballerina-lang/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java\n    \n    \n         Line 489\n      in\n      b9f51f0\n    \n    \n    \n    \n\n        \n          \n           boolean isAnonymous = !(ctx.parent.parent instanceof BallerinaParser.FiniteTypeUnitContext)", "author": "KRVPerera", "createdAt": "2020-04-30T13:06:27Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -866,9 +866,30 @@ public void exitInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTyp\n \n         boolean isAnonymous = !(ctx.parent.parent instanceof BallerinaParser.FiniteTypeUnitContext);", "originalCommit": "f811a3540bdc007e64159a6dea938b07bdc4da65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1NDMwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r418454305", "bodyText": "Yeah I too feel like should be moved to the function itself. I'll fix", "author": "dulvinw", "createdAt": "2020-05-01T08:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NDQ5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI5MDUyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r419290524", "bodyText": "Fixed in 6188bc7", "author": "dulvinw", "createdAt": "2020-05-04T08:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NDQ5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NTI2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r417995269", "bodyText": "Do we need to check the ctx type here?\nI feel like we are pretty sure about this from the places we call this function.", "author": "KRVPerera", "createdAt": "2020-04-30T13:07:40Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -866,9 +866,30 @@ public void exitInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTyp\n \n         boolean isAnonymous = !(ctx.parent.parent instanceof BallerinaParser.FiniteTypeUnitContext);\n \n+        // Validate type AB \"A\"| record { string f; };\n+        if (!isAnonymous) {\n+            isAnonymous = checkIfAnonymousInTypeDef(ctx);\n+        }\n+\n         this.pkgBuilder.addRecordType(getCurrentPos(ctx), getWS(ctx), isAnonymous, false, false);\n     }\n \n+    /**\n+     * Validate if this is a anonymous record type describe in union with a type descriptor.\n+     *\n+     * @param ctx the current context to be validated. can be InclusiveRecordTypeDescriptor or ExclusiveRecordTypeDes.\n+     * @return true if is part of a union type descriptor with on the fly definition\n+     */\n+    private boolean checkIfAnonymousInTypeDef(ParserRuleContext ctx) {\n+        if (!(ctx instanceof BallerinaParser.InclusiveRecordTypeDescriptorContext ||\n+            ctx instanceof BallerinaParser.ExclusiveRecordTypeDescriptorContext)) {\n+            return false;", "originalCommit": "f811a3540bdc007e64159a6dea938b07bdc4da65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1NDc5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r418454791", "bodyText": "Yes we are. Will remove it.", "author": "dulvinw", "createdAt": "2020-05-01T08:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NTI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI5MDQ3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r419290478", "bodyText": "Fixed in 6188bc7", "author": "dulvinw", "createdAt": "2020-05-04T08:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NTI2OQ=="}], "type": "inlineReview"}, {"oid": "4611afcfe3fec5e83f462df8179947275c164568", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4611afcfe3fec5e83f462df8179947275c164568", "message": "Fixed an issue where anonumous records were not getting created for type definitions", "committedDate": "2020-05-05T08:51:36Z", "type": "commit"}, {"oid": "06b65cd234b23069269ee65222cc24639971f2f5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06b65cd234b23069269ee65222cc24639971f2f5", "message": "Add testcases", "committedDate": "2020-05-05T08:51:36Z", "type": "commit"}, {"oid": "cc6e47c04095fb4e7944bcf7e3249f33b869424c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc6e47c04095fb4e7944bcf7e3249f33b869424c", "message": "Checkstyle Fixes", "committedDate": "2020-05-05T08:51:36Z", "type": "commit"}, {"oid": "8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "message": "Review Suggestions", "committedDate": "2020-05-05T08:51:36Z", "type": "commit"}, {"oid": "8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "message": "Review Suggestions", "committedDate": "2020-05-05T08:51:36Z", "type": "forcePushed"}]}