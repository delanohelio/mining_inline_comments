{"pr_number": 22292, "pr_title": "[master] Add support for map -> record assignment", "pr_createdAt": "2020-03-29T17:57:51Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22292", "timeline": [{"oid": "db4e13e0eacf4b50a0709ce0e59428b0a79b8001", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db4e13e0eacf4b50a0709ce0e59428b0a79b8001", "message": "Remove redundant condition for map -> record type checking", "committedDate": "2020-03-29T17:56:05Z", "type": "commit"}, {"oid": "919793a6297ce763e68e02b23909e71acdeabf31", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/919793a6297ce763e68e02b23909e71acdeabf31", "message": "Add support for assigning map -> record", "committedDate": "2020-03-29T17:56:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxODQyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22292#discussion_r399918429", "bodyText": "!(isOptional && isAsignable)\nShall we refactor this use use and instead of or", "author": "rdhananjaya", "createdAt": "2020-03-30T04:16:08Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -631,6 +627,21 @@ private boolean recordFieldsAssignableToMap(BRecordType recordType, BMapType tar\n         return recordType.fields.stream().allMatch(field -> isAssignable(field.type, targetMapType.constraint));\n     }\n \n+    private boolean isAssignableMapType(BMapType sourceMapType, BRecordType targetRecType) {\n+        if (targetRecType.sealed) {\n+            return false;\n+        }\n+\n+        for (BField field : targetRecType.fields) {\n+            if (!Symbols.isFlagOn(field.symbol.flags, Flags.OPTIONAL) ||", "originalCommit": "919793a6297ce763e68e02b23909e71acdeabf31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxOTEzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22292#discussion_r399919130", "bodyText": "missing new line", "author": "rdhananjaya", "createdAt": "2020-03-30T04:19:29Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/record/negative/map_to_record_negative.bal", "diffHunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+function testMapToRecordNegative() {\n+    map<int> mInt = {\"a\": 1, \"b\": 2};\n+    record {| string...; |} rInt = mInt;\n+\n+    map<any> mAny = {\"a\": 1, \"b\": \"Foo\"};\n+    record {} rAnydata = mAny;\n+\n+    map<string> m = {\"a\":\"aaa\", \"b\":\"bbb\"};\n+\n+    record {|\n+        string a; // Map assignment not allowed for record types with required fields\n+        string...;\n+    |} r = m;\n+}\n+\n+type Foo record {|\n+    int a;\n+    int...;\n+|};\n+\n+type Bar record {|\n+    int a;\n+|};\n+\n+type Baz record {|\n+    int a;\n+    int b?;\n+    int...;\n+|};\n+\n+function testSubtyping() {\n+    map<Foo> m1 = {\"bb\": {a: 10}};\n+\n+    record {|\n+        Bar...;\n+    |} r1 = m1;\n+\n+    map<Bar> m2 = {\"bb\": {a: 10}, \"x\": {a: 20}};\n+    record {|\n+        Baz x?;\n+        Foo...;\n+    |} r2 = m2;\n+}", "originalCommit": "919793a6297ce763e68e02b23909e71acdeabf31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9bed57484bd47f07ac5f100b12ec9434f290da6f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9bed57484bd47f07ac5f100b12ec9434f290da6f", "message": "Address comments from the reviews", "committedDate": "2020-03-30T12:21:39Z", "type": "commit"}]}