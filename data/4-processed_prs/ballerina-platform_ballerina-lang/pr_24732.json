{"pr_number": 24732, "pr_title": "Fix http cookie bug", "pr_createdAt": "2020-07-14T11:18:48Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732", "timeline": [{"oid": "d2f8528818b40f759a1d585b7f62871d7b0d35b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2f8528818b40f759a1d585b7f62871d7b0d35b0", "message": "Add the cookie field in the config", "committedDate": "2020-07-10T08:01:11Z", "type": "commit"}, {"oid": "89175bf7dfe631bc0950a4f907a3b502adb87928", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89175bf7dfe631bc0950a4f907a3b502adb87928", "message": "Add the new line", "committedDate": "2020-07-10T08:04:33Z", "type": "commit"}, {"oid": "81910335405de54f51c8fc5eea261263d2682f67", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81910335405de54f51c8fc5eea261263d2682f67", "message": "change the description", "committedDate": "2020-07-10T08:11:38Z", "type": "commit"}, {"oid": "d1b2a621c5f91d526ab50c63edc5072e923948d4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d1b2a621c5f91d526ab50c63edc5072e923948d4", "message": "Fix test failure", "committedDate": "2020-07-10T08:47:29Z", "type": "commit"}, {"oid": "4479dd208ae671deedbec5670878ba5f835a3622", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4479dd208ae671deedbec5670878ba5f835a3622", "message": "Merge with master", "committedDate": "2020-07-10T08:54:24Z", "type": "commit"}, {"oid": "c3fc6ae9a9a1c982d6e1212650b94b4e7cff7d89", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3fc6ae9a9a1c982d6e1212650b94b4e7cff7d89", "message": "Remove white spaces", "committedDate": "2020-07-10T09:11:47Z", "type": "commit"}, {"oid": "6c2e01e241ec533574f09edd023f1d4d1f0217b3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c2e01e241ec533574f09edd023f1d4d1f0217b3", "message": "Merge https://github.com/ballerina-platform/ballerina-lang", "committedDate": "2020-07-10T10:54:10Z", "type": "commit"}, {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca1b034c996bbfbe135ad4178aa813a05a5e950b", "message": "Fix server core test failures", "committedDate": "2020-07-10T11:48:36Z", "type": "commit"}, {"oid": "8c0fc1900e073a9899fe99d782fe4b5146428918", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c0fc1900e073a9899fe99d782fe4b5146428918", "message": "Merge https://github.com/ballerina-platform/ballerina-lang into cookie", "committedDate": "2020-07-14T07:48:45Z", "type": "commit"}, {"oid": "ac1795ae3ed56702396735155a009371a1f589e5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac1795ae3ed56702396735155a009371a1f589e5", "message": "Revert the changes", "committedDate": "2020-07-14T08:01:52Z", "type": "commit"}, {"oid": "4fcb4ebf506a1d90ecbfb0214d232ed81c91a210", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4fcb4ebf506a1d90ecbfb0214d232ed81c91a210", "message": "Fix bug in the http cookie", "committedDate": "2020-07-14T11:11:57Z", "type": "commit"}, {"oid": "c4e779a9413f235fd930cdedf16cf90b76b6f5d5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4e779a9413f235fd930cdedf16cf90b76b6f5d5", "message": "Improve the fix", "committedDate": "2020-07-14T11:58:21Z", "type": "commit"}, {"oid": "311a3d61fd449143e96340da71c5fb91e68126ef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/311a3d61fd449143e96340da71c5fb91e68126ef", "message": "Remove unwanted changes", "committedDate": "2020-07-14T12:13:40Z", "type": "commit"}, {"oid": "8abab44a84693159aee0803759267e27119f6795", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8abab44a84693159aee0803759267e27119f6795", "message": "Use the matches() instead of the contains()", "committedDate": "2020-07-14T14:15:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc3MTk0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r454771941", "bodyText": "Shall we add a test case?", "author": "chamil321", "createdAt": "2020-07-15T03:42:39Z", "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "diffHunk": "@@ -229,9 +230,18 @@ function parseCookieHeader(string cookieStringValue) returns Cookie[] {\n     string cookieValue = cookieStringValue;\n     string[] nameValuePairs = stringutils:split(cookieValue, SEMICOLON + SPACE);\n     foreach var item in nameValuePairs {\n-        string[] nameValue = stringutils:split(item, EQUALS);\n-        Cookie cookie = new (nameValue[0], nameValue[1]);\n-        cookiesInRequest.push(cookie);\n+        if (stringutils:matches(item, \"^([^=]+)=.*$\")) {\n+            string[] nameValue = stringutils:split(item, EQUALS);\n+            Cookie cookie;\n+            if (nameValue.length() > 1) {\n+                cookie = new (nameValue[0], nameValue[1]);\n+            } else {\n+                cookie = new (nameValue[0], \"\");\n+            }\n+            cookiesInRequest.push(cookie);\n+        } else {\n+            log:printError(\"Invalid cookie: \" + item + \", which must be in the format as [{name}=].\");", "originalCommit": "8abab44a84693159aee0803759267e27119f6795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxOTc5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r454919795", "bodyText": "Added in the c6932c6", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-15T09:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc3MTk0MQ=="}], "type": "inlineReview"}, {"oid": "c6932c65a03c963879c258a151fc0d06b40d957e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6932c65a03c963879c258a151fc0d06b40d957e", "message": "Add testcases", "committedDate": "2020-07-15T08:23:21Z", "type": "commit"}, {"oid": "795aa5269de71a7204182b938ef166fdaa0c59dd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/795aa5269de71a7204182b938ef166fdaa0c59dd", "message": "Remove unwanted changes", "committedDate": "2020-07-15T08:29:12Z", "type": "commit"}, {"oid": "79bad7407bd2cea5289c5862fc910c0a7e68c752", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79bad7407bd2cea5289c5862fc910c0a7e68c752", "message": "Remove the unused import", "committedDate": "2020-07-15T08:39:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwNjQyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r454906427", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    http:Cookie[] reqstCookies=req.getCookies();\n          \n          \n            \n                    http:Cookie[] reqstCookies = req.getCookies();", "author": "chamil321", "createdAt": "2020-07-15T09:09:08Z", "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/43_http_cookies.bal", "diffHunk": "@@ -258,4 +258,23 @@ service cookie on new http:Listener(9253) {\n             var result = caller->respond(res);\n         }\n     }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/cookieBackend_13\"\n+   }\n+    resource function validateCookie(http:Caller caller, http:Request req) {\n+        http:Cookie[] reqstCookies=req.getCookies();", "originalCommit": "79bad7407bd2cea5289c5862fc910c0a7e68c752", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwNjU5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r454906593", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    foreach http:Cookie cookie in  reqstCookies {\n          \n          \n            \n                    foreach http:Cookie cookie in reqstCookies {", "author": "chamil321", "createdAt": "2020-07-15T09:09:25Z", "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/43_http_cookies.bal", "diffHunk": "@@ -258,4 +258,23 @@ service cookie on new http:Listener(9253) {\n             var result = caller->respond(res);\n         }\n     }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/cookieBackend_13\"\n+   }\n+    resource function validateCookie(http:Caller caller, http:Request req) {\n+        http:Cookie[] reqstCookies=req.getCookies();\n+        string meesage = \"Valid cookies: \";\n+        foreach http:Cookie cookie in  reqstCookies {", "originalCommit": "79bad7407bd2cea5289c5862fc910c0a7e68c752", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwNzU3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r454907572", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    string meesage = \"Valid cookies: \";\n          \n          \n            \n                    string message = \"Valid cookies: \";", "author": "chamil321", "createdAt": "2020-07-15T09:11:08Z", "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/43_http_cookies.bal", "diffHunk": "@@ -258,4 +258,23 @@ service cookie on new http:Listener(9253) {\n             var result = caller->respond(res);\n         }\n     }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/cookieBackend_13\"\n+   }\n+    resource function validateCookie(http:Caller caller, http:Request req) {\n+        http:Cookie[] reqstCookies=req.getCookies();\n+        string meesage = \"Valid cookies: \";", "originalCommit": "79bad7407bd2cea5289c5862fc910c0a7e68c752", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4bfc08cd817aebc62e458a4007b0f32c33efd975", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4bfc08cd817aebc62e458a4007b0f32c33efd975", "message": "Fix suggested changes", "committedDate": "2020-07-15T09:20:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxNTMzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r454915339", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            message = meesage.concat(name, \"=\", value , \",\");\n          \n          \n            \n                            message = mesage.concat(name, \"=\", value , \",\");", "author": "chamil321", "createdAt": "2020-07-15T09:24:25Z", "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/43_http_cookies.bal", "diffHunk": "@@ -258,4 +258,23 @@ service cookie on new http:Listener(9253) {\n             var result = caller->respond(res);\n         }\n     }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/cookieBackend_13\"\n+   }\n+    resource function validateCookie(http:Caller caller, http:Request req) {\n+        http:Cookie[] reqstCookies = req.getCookies();\n+        string message = \"Valid cookies: \";\n+        foreach http:Cookie cookie in reqstCookies {\n+            var value = cookie.value;\n+            var name = cookie.name;\n+            if (value is string && name is string) {\n+                message = meesage.concat(name, \"=\", value , \",\");", "originalCommit": "4bfc08cd817aebc62e458a4007b0f32c33efd975", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "346ed62f7ebfe70b677c3bed56ddd8233ae7cd0f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/346ed62f7ebfe70b677c3bed56ddd8233ae7cd0f", "message": "Fixed", "committedDate": "2020-07-15T09:28:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxMzg0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r455013849", "bodyText": "Isn't this assertion already implied by the previous assertion ?", "author": "hemikak", "createdAt": "2020-07-15T12:30:02Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/request/RequestNativeFunctionSuccessTest.java", "diffHunk": "@@ -748,4 +748,16 @@ public void testGetCookies() {\n                            \"No cookie objects in the Return Values\");\n         Assert.assertTrue(returnVals.length == 1);\n     }\n+\n+    @Test\n+    public void testGetCookiesWithEmptyValue() {\n+        ObjectValue inRequest = createRequestObject();\n+        ObjectValue entity = createEntityObject();\n+        inRequest.set(REQUEST_ENTITY_FIELD, entity);\n+        BValue[] returnVals = BRunUtil.invoke(compileResult, \"testGetCookiesWithEmptyValue\",\n+                new Object[]{inRequest});\n+        Assert.assertFalse(returnVals.length == 0 || returnVals[0] == null,\n+                \"No cookie objects in the Return Values\");\n+        Assert.assertEquals(returnVals.length, 1);", "originalCommit": "346ed62f7ebfe70b677c3bed56ddd8233ae7cd0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNDc4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r455024788", "bodyText": "I think it is not implied by the previous assertion because here, we are checking the actual length of the output but the previous assertion is checking that the output and output's first value are not empty.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-07-15T12:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxMzg0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxNTExNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24732#discussion_r455015117", "bodyText": "We can use Paths.get() function here to create the path.", "author": "hemikak", "createdAt": "2020-07-15T12:32:17Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -169,4 +169,15 @@ public void testSendPersistentCookiesWithoutPersistentCookieHandler() throws Bal\n                 \"cookieClient_12.bal\"}, balFilePath);\n         Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n     }\n+\n+    @Test(description = \"Test the cookie validation when using the getCookies()\")\n+    public void testCookieValidation() throws BallerinaTestException {\n+        String balFilePath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +", "originalCommit": "346ed62f7ebfe70b677c3bed56ddd8233ae7cd0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "42957d7a52688892cb5b8d0d156ff1978355563d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42957d7a52688892cb5b8d0d156ff1978355563d", "message": "Fixed reviewed comments", "committedDate": "2020-07-15T13:35:17Z", "type": "commit"}]}