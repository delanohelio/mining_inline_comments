{"pr_number": 24112, "pr_title": "Enable jBallerina finite type test", "pr_createdAt": "2020-06-14T14:06:24Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112", "timeline": [{"oid": "1ce03c0a7f1815203ef3d1c9e800fee9260cc0e6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ce03c0a7f1815203ef3d1c9e800fee9260cc0e6", "message": "Enable finite type test cases.", "committedDate": "2020-06-14T13:23:41Z", "type": "commit"}, {"oid": "51b24cc13d623ab1c25c6271f5105b2a9f7e52a8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/51b24cc13d623ab1c25c6271f5105b2a9f7e52a8", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang", "committedDate": "2020-06-14T13:26:02Z", "type": "commit"}, {"oid": "06f20d2538f0e7f7141c4aed331c1c492513e39d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06f20d2538f0e7f7141c4aed331c1c492513e39d", "message": "Add whitespace.", "committedDate": "2020-06-14T13:28:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNjI1Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439836253", "bodyText": "no need to do replaceAll, which may be slower, also why are there , commas between chars.\n. replaceFirst(\"[fd]$\", \"\");", "author": "manuranga", "createdAt": "2020-06-14T14:36:10Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -3655,8 +3662,13 @@ private BLangLiteral createSimpleLiteral(Node literal, SyntaxKind sign) {\n         } else if (type == SyntaxKind.DECIMAL_FLOATING_POINT_LITERAL) {\n             //TODO: Check effect of mapping negative(-) numbers as unary-expr\n             typeTag = NumericLiteralSupport.isDecimalDiscriminated(textValue) ? TypeTags.DECIMAL : TypeTags.FLOAT;\n-            value = textValue;\n-            originalValue = textValue;\n+            if (isFiniteType) {\n+                value = textValue.replaceAll(\"[f,d,/+]\", \"\");", "originalCommit": "06f20d2538f0e7f7141c4aed331c1c492513e39d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNjQyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439836420", "bodyText": "Oh is this replacing the leading + as well? and what about / I though escaping is done by \\\\", "author": "manuranga", "createdAt": "2020-06-14T14:38:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNjI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjAwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439962004", "bodyText": "removed comma and /. :-)", "author": "rdulmina", "createdAt": "2020-06-15T06:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNjI1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNjcyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439836729", "bodyText": "Any reason for commenting out?", "author": "SupunS", "createdAt": "2020-06-14T14:42:04Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -362,11 +362,11 @@ public void testFiniteTypeWithDiscriminatedMembers() {\n         Assert.assertEquals(returns[1], new BDecimal(\"1.0\"));\n     }\n \n-    @Test(description = \"Test finite type where typename is espaed identifier\", groups = { \"brokenOnSpecDeviation\" })\n-    public void testEscapedTypeName() {\n-        BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n-        Assert.assertEquals(returns[0].stringValue(), \"-\");\n-    }\n+//    @Test(description = \"Test finite type where typename is espaed identifier\", groups = { \"brokenOnSpecDeviation\" })\n+//    public void testEscapedTypeName() {\n+//        BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n+//        Assert.assertEquals(returns[0].stringValue(), \"-\");\n+//    }", "originalCommit": "06f20d2538f0e7f7141c4aed331c1c492513e39d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjEyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439962123", "bodyText": "Uncommented", "author": "rdulmina", "createdAt": "2020-06-15T06:48:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNjcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNzAyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439837028", "bodyText": "I think this is already handled inside createSimpleLiteral() method?", "author": "SupunS", "createdAt": "2020-06-14T14:44:54Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -630,7 +630,14 @@ public BLangNode transform(UnionTypeDescriptorNode unionTypeDescriptorNode) {\n         BLangFiniteTypeNode bLangFiniteTypeNode = (BLangFiniteTypeNode) TreeBuilder.createFiniteTypeNode();\n         for (TypeDescriptorNode finiteTypeEl : finiteTypeElements) {\n             SingletonTypeDescriptorNode singletonTypeNode = (SingletonTypeDescriptorNode) finiteTypeEl;\n-            BLangLiteral literal = createSimpleLiteral(singletonTypeNode.simpleContExprNode());\n+            BLangLiteral literal;\n+            Node simpleContExprNode = singletonTypeNode.simpleContExprNode();\n+            if (simpleContExprNode.kind() == SyntaxKind.UNARY_EXPRESSION) {\n+                UnaryExpressionNode unaryExpr = (UnaryExpressionNode) simpleContExprNode;\n+                literal = createSimpleLiteral(unaryExpr.expression(), unaryExpr.unaryOperator().kind(), true);\n+            } else {\n+                literal = createSimpleLiteral(simpleContExprNode, SyntaxKind.NONE, true);", "originalCommit": "06f20d2538f0e7f7141c4aed331c1c492513e39d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjIwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24112#discussion_r439962209", "bodyText": "removed", "author": "rdulmina", "createdAt": "2020-06-15T06:49:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzNzAyOA=="}], "type": "inlineReview"}, {"oid": "ae980573197c0a6b4979927a4f332ef078dd6a8f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae980573197c0a6b4979927a4f332ef078dd6a8f", "message": "Uncomment commented test.", "committedDate": "2020-06-15T06:46:48Z", "type": "commit"}, {"oid": "aa6aa8257642b9a038fd5950c1002aaa63668b25", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa6aa8257642b9a038fd5950c1002aaa63668b25", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang", "committedDate": "2020-06-15T06:51:02Z", "type": "commit"}, {"oid": "d1a32f5c61066d3fa01c62905edb062be5211722", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d1a32f5c61066d3fa01c62905edb062be5211722", "message": "Removed unwanted code lines.", "committedDate": "2020-06-15T06:57:04Z", "type": "commit"}, {"oid": "2f4ef4aaf39f6b7fe88d27c0e3820d0f005ed0ea", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f4ef4aaf39f6b7fe88d27c0e3820d0f005ed0ea", "message": "Overload createSimpleLiteral method.", "committedDate": "2020-06-15T09:11:02Z", "type": "commit"}, {"oid": "ffd88dc5afe05a8e134c4ff0e20742c9ada835cd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ffd88dc5afe05a8e134c4ff0e20742c9ada835cd", "message": "Remove new line.", "committedDate": "2020-06-15T09:15:21Z", "type": "commit"}, {"oid": "1461e00044cff519082f495f1f8eea1555d4d5a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1461e00044cff519082f495f1f8eea1555d4d5a0", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang", "committedDate": "2020-06-15T11:09:20Z", "type": "commit"}, {"oid": "b5b4693cb1adbb7cb714e8b09acf52494d385346", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5b4693cb1adbb7cb714e8b09acf52494d385346", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang", "committedDate": "2020-06-15T15:41:47Z", "type": "commit"}]}