{"pr_number": 22586, "pr_title": "Fix API docs in LDAP module", "pr_createdAt": "2020-04-10T16:09:58Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586", "timeline": [{"oid": "d8e0281463d094cc51ecb56acb493fcc5de66c26", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d8e0281463d094cc51ecb56acb493fcc5de66c26", "message": "Remove exclusion of ldap module from api doc generation", "committedDate": "2020-04-09T16:13:26Z", "type": "commit"}, {"oid": "6c8a110a3e709cceb68aacc8038d591af9a52b7a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c8a110a3e709cceb68aacc8038d591af9a52b7a", "message": "Update API docs of LDAP module", "committedDate": "2020-04-10T11:50:59Z", "type": "commit"}, {"oid": "1f617bacfc17acb79e9034cf0a54ec5cb6388fc9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f617bacfc17acb79e9034cf0a54ec5cb6388fc9", "message": "Update module.md of ldap", "committedDate": "2020-04-10T12:23:30Z", "type": "commit"}, {"oid": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "message": "Add BBE for secured service with LDAP", "committedDate": "2020-04-10T16:04:26Z", "type": "commit"}, {"oid": "a7aba4c8c8429df97df9480684a17d351b95aaf5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a7aba4c8c8429df97df9480684a17d351b95aaf5", "message": "Fix a bug", "committedDate": "2020-04-10T16:17:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTI3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406835278", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Define LDAP connection configurations.\n          \n          \n            \n            // Defines the LDAP connection configurations.", "author": "praneesha", "createdAt": "2020-04-10T16:30:04Z", "path": "examples/secured-service-with-ldap/secured_service_with_ldap.bal", "diffHunk": "@@ -0,0 +1,61 @@\n+import ballerina/http;\n+import ballerina/config;\n+import ballerina/log;\n+import ballerina/ldap;\n+\n+// Define LDAP connection configurations.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTYzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406835637", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // The secure hello world sample uses HTTPS.\n          \n          \n            \n                // The secure hello world sample uses HTTPS.\n          \n      \n    \n    \n  \n\nDo we need to link this to the BBE. Can you check if its possible to link?", "author": "praneesha", "createdAt": "2020-04-10T16:30:54Z", "path": "examples/secured-service-with-ldap/secured_service_with_ldap.bal", "diffHunk": "@@ -0,0 +1,61 @@\n+import ballerina/http;\n+import ballerina/config;\n+import ballerina/log;\n+import ballerina/ldap;\n+\n+// Define LDAP connection configurations.\n+ldap:LdapConnectionConfig ldapConfig = {\n+    domainName: \"ballerina.io\",\n+    connectionURL: \"ldap://localhost:9095\",\n+    connectionName: \"uid=admin,ou=system\",\n+    connectionPassword: \"secret\",\n+    userSearchBase: \"ou=Users,dc=ballerina,dc=io\",\n+    userEntryObjectClass: \"identityPerson\",\n+    userNameAttribute: \"uid\",\n+    userNameSearchFilter: \"(&(objectClass=person)(uid=?))\",\n+    userNameListFilter: \"(objectClass=person)\",\n+    groupSearchBase: [\"ou=Groups,dc=ballerina,dc=io\"],\n+    groupEntryObjectClass: \"groupOfNames\",\n+    groupNameAttribute: \"cn\",\n+    groupNameSearchFilter: \"(&(objectClass=groupOfNames)(cn=?))\",\n+    groupNameListFilter: \"(objectClass=groupOfNames)\",\n+    membershipAttribute: \"member\",\n+    userRolesCacheEnabled: true,\n+    connectionPoolingEnabled: false,\n+    connectionTimeoutInMillis: 5000,\n+    readTimeoutInMillis: 60000,\n+    retryAttempts: 3\n+};\n+\n+// Creates an inbound LDAP authentication provider with the LDAP\n+// connection configurations.\n+ldap:InboundLdapAuthProvider ldapAuthProvider = new(ldapConfig, \"ldap01\");\n+\n+// Creates a Basic Auth handler with the created LDAP Auth provider.\n+http:BasicAuthHandler ldapAuthHandler = new(ldapAuthProvider);\n+\n+// The endpoint used here is the `http:Listener`. The LDAP Auth handler is\n+// set to this endpoint using the `authHandlers` attribute.\n+// It is optional to override the authentication and authorization at the\n+// service and resource levels.\n+listener http:Listener ep = new (9090, {\n+    auth: {\n+        authHandlers: [ldapAuthHandler]\n+    },\n+    // The secure hello world sample uses HTTPS.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1NzIyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406857222", "bodyText": "This lines describes about LDAP BBE. This is actually a secure hello world sample.", "author": "ldclakmal", "createdAt": "2020-04-10T17:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTYzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzA1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407027058", "bodyText": "Can we link to whichever BBE that is applicable?", "author": "praneesha", "createdAt": "2020-04-11T06:50:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTYzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyOTM4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407029380", "bodyText": "I don't think we need a link here. It actually describe about the same BBE, not an external BBE.", "author": "ldclakmal", "createdAt": "2020-04-11T07:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTYzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjE3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407032176", "bodyText": "+1", "author": "praneesha", "createdAt": "2020-04-11T07:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTYzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTc0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406835742", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Start the LDAP server and invoke the service using cURL. Note that,\n          \n          \n            \n            // Start the LDAP server and invoke the service using cURL.", "author": "praneesha", "createdAt": "2020-04-10T16:31:09Z", "path": "examples/secured-service-with-ldap/secured_service_with_ldap.client.out", "diffHunk": "@@ -0,0 +1,10 @@\n+// Start the LDAP server and invoke the service using cURL. Note that,", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTc5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406835790", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // it is required to provide the correct basic authentication header or\n          \n          \n            \n            // It is required to provide the correct basic authentication header or", "author": "praneesha", "createdAt": "2020-04-10T16:31:17Z", "path": "examples/secured-service-with-ldap/secured_service_with_ldap.client.out", "diffHunk": "@@ -0,0 +1,10 @@\n+// Start the LDAP server and invoke the service using cURL. Note that,\n+// it is required to provide the correct basic authentication header or", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNTk1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406835954", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides inbound LDAP authentication provider, which is used to authenticate using LDAP credentials.\n          \n          \n            \n            This module provides an inbound LDAP authentication provider, which is used to authenticate using LDAP credentials.", "author": "praneesha", "createdAt": "2020-04-10T16:31:47Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/Module.md", "diffHunk": "@@ -1,9 +1,5 @@\n-## Module Overview\n-\n-This module provides inbound LDAP authentication provider, which can be used to authenticate using LDAP credentials.\n+This module provides inbound LDAP authentication provider, which is used to authenticate using LDAP credentials.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjAzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836038", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents inbound LDAP auth provider.\n          \n          \n            \n            # Represents the inbound LDAP auth provider.", "author": "praneesha", "createdAt": "2020-04-10T16:31:59Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -18,10 +18,10 @@ import ballerina/auth;\n import ballerina/crypto;\n import ballerina/java;\n \n-# Represents Ballerina configuration for LDAP based auth provider.\n+# Represents inbound LDAP auth provider.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjEwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836107", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Create an LDAP auth store with the given configurations.\n          \n          \n            \n                # Creates an LDAP auth store with the given configurations.", "author": "praneesha", "createdAt": "2020-04-10T16:32:09Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -33,8 +33,8 @@ public type InboundLdapAuthProvider object {\n \n     # Create an LDAP auth store with the given configurations.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjE1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836156", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + ldapConnectionConfig - `ldap:LdapConnectionConfig` instance\n          \n          \n            \n                # + ldapConnectionConfig - The `ldap:LdapConnectionConfig` instance", "author": "praneesha", "createdAt": "2020-04-10T16:32:19Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -33,8 +33,8 @@ public type InboundLdapAuthProvider object {\n \n     # Create an LDAP auth store with the given configurations.\n     #\n-    # + ldapConnectionConfig - LDAP connection configurations\n-    # + instanceId - Endpoint instance id\n+    # + ldapConnectionConfig - `ldap:LdapConnectionConfig` instance", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjIxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836219", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Authenticates base64-encoded `username:password` credential.\n          \n          \n            \n                # Authenticates the base64-encoded `username:password` credential.", "author": "praneesha", "createdAt": "2020-04-10T16:32:30Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -46,10 +46,14 @@ public type InboundLdapAuthProvider object {\n         }\n     }\n \n-    # Authenticate with username and password.\n+    # Authenticates base64-encoded `username:password` credential.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjM4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836380", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - `true` if authentication is successful, `false` otherwise, or else `auth:Error` occurred while\n          \n          \n            \n                # + return - `true` if authentication is successful, `false` otherwise, or else an `auth:Error` occurred while", "author": "praneesha", "createdAt": "2020-04-10T16:32:54Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -46,10 +46,14 @@ public type InboundLdapAuthProvider object {\n         }\n     }\n \n-    # Authenticate with username and password.\n+    # Authenticates base64-encoded `username:password` credential.\n+    # ```ballerina\n+    # boolean|auth:Error result = inboundLdapAuthProvider.authenticate(\"<credential>\");\n+    # ```\n     #\n-    # + credential - Credential value\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` occurred while extracting credentials\n+    # + credential - Base64-encoded `username:password` value\n+    # + return - `true` if authentication is successful, `false` otherwise, or else `auth:Error` occurred while", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjQ2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836466", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + connectionPassword - The Password used to connect to the LDAP server\n          \n          \n            \n            # + connectionPassword - The password used to connect to the LDAP server", "author": "praneesha", "createdAt": "2020-04-10T16:33:06Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -81,7 +85,7 @@ public type InboundLdapAuthProvider object {\n # + domainName - Unique name to identify the user store\n # + connectionURL - Connection URL to the LDAP server\n # + connectionName - The username used to connect to the LDAP server\n-# + connectionPassword - Password for the ConnectionName user\n+# + connectionPassword - The Password used to connect to the LDAP server", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjU3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836577", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  communicate through LDAPs.\n          \n          \n            \n            #                  communicate through LDAPs", "author": "praneesha", "createdAt": "2020-04-10T16:33:22Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -96,10 +100,10 @@ public type InboundLdapAuthProvider object {\n # + userRolesCacheEnabled -  To indicate whether to cache the role list of a user\n # + connectionPoolingEnabled - Define whether LDAP connection pooling is enabled\n # + connectionTimeoutInMillis - Timeout in making the initial LDAP connection in milliseconds\n-# + readTimeoutInMillis - The value of this property is the read timeout in milliseconds for LDAP operations\n+# + readTimeoutInMillis - Read timeout in milliseconds for LDAP operations\n # + retryAttempts - Retry the authentication request if a timeout happened\n-# + secureSocket - The SSL configurations for the ldap client socket. This needs to be configured in order to\n-#                  communicate through ldaps.\n+# + secureSocket - The SSL configurations for the LDAP client socket. This needs to be configured in order to\n+#                  communicate through LDAPs.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjY2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836666", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + trustedCertFile - A file containing the certificate(s) that client trusts\n          \n          \n            \n            # + trustedCertFile - A file containing the certificate(s), which the client trusts", "author": "praneesha", "createdAt": "2020-04-10T16:33:35Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -127,20 +131,24 @@ public type LdapConnectionConfig record {|\n # Configures the SSL/TLS options to be used for LDAP communication.\n #\n # + trustStore - Configures the trust store to be used\n-# + trustedCertFile - A file containing a list of certificates or a single certificate that the client trusts\n+# + trustedCertFile - A file containing the certificate(s) that client trusts", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjc0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836745", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Retrievs the group(s) of the user related to provided username.\n          \n          \n            \n            # Retrieves the group(s) of the user related to the provided username.", "author": "praneesha", "createdAt": "2020-04-10T16:33:48Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -127,20 +131,24 @@ public type LdapConnectionConfig record {|\n # Configures the SSL/TLS options to be used for LDAP communication.\n #\n # + trustStore - Configures the trust store to be used\n-# + trustedCertFile - A file containing a list of certificates or a single certificate that the client trusts\n+# + trustedCertFile - A file containing the certificate(s) that client trusts\n public type SecureSocket record {|\n     crypto:TrustStore trustStore?;\n     string trustedCertFile?;\n |};\n \n+# Represets the LDAP connection.\n public type LdapConnection record {|\n |};\n \n-# Reads the scope(s) for the user with the given username.\n+# Retrievs the group(s) of the user related to provided username.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNjc5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406836790", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + ldapConnection - `ldap:LdapConnection` instance\n          \n          \n            \n            # + ldapConnection - The `ldap:LdapConnection` instance", "author": "praneesha", "createdAt": "2020-04-10T16:33:55Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -127,20 +131,24 @@ public type LdapConnectionConfig record {|\n # Configures the SSL/TLS options to be used for LDAP communication.\n #\n # + trustStore - Configures the trust store to be used\n-# + trustedCertFile - A file containing a list of certificates or a single certificate that the client trusts\n+# + trustedCertFile - A file containing the certificate(s) that client trusts\n public type SecureSocket record {|\n     crypto:TrustStore trustStore?;\n     string trustedCertFile?;\n |};\n \n+# Represets the LDAP connection.\n public type LdapConnection record {|\n |};\n \n-# Reads the scope(s) for the user with the given username.\n+# Retrievs the group(s) of the user related to provided username.\n+# ```ballerina\n+# string[]|ldap:Error groups = ldap:getGroups(ldapConnection, username);\n+# ```\n #\n-# + ldapConnection - `LdapConnection` instance\n-# + username - Username of the user to check the groups\n-# + return - Array of groups for the user denoted by the username or `Error` if error occurred\n+# + ldapConnection - `ldap:LdapConnection` instance", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzAwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837005", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Array of groups of the provided user or `ldap:Error` if error occurred\n          \n          \n            \n            # + return - Array of groups of the provided user or else an `ldap:Error` if it fails", "author": "praneesha", "createdAt": "2020-04-10T16:34:21Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -127,20 +131,24 @@ public type LdapConnectionConfig record {|\n # Configures the SSL/TLS options to be used for LDAP communication.\n #\n # + trustStore - Configures the trust store to be used\n-# + trustedCertFile - A file containing a list of certificates or a single certificate that the client trusts\n+# + trustedCertFile - A file containing the certificate(s) that client trusts\n public type SecureSocket record {|\n     crypto:TrustStore trustStore?;\n     string trustedCertFile?;\n |};\n \n+# Represets the LDAP connection.\n public type LdapConnection record {|\n |};\n \n-# Reads the scope(s) for the user with the given username.\n+# Retrievs the group(s) of the user related to provided username.\n+# ```ballerina\n+# string[]|ldap:Error groups = ldap:getGroups(ldapConnection, username);\n+# ```\n #\n-# + ldapConnection - `LdapConnection` instance\n-# + username - Username of the user to check the groups\n-# + return - Array of groups for the user denoted by the username or `Error` if error occurred\n+# + ldapConnection - `ldap:LdapConnection` instance\n+# + username - Username of the user to be checked for the groups\n+# + return - Array of groups of the provided user or `ldap:Error` if error occurred", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzA1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837056", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Authenticates with username and password.\n          \n          \n            \n            # Authenticates with the username and password.", "author": "praneesha", "createdAt": "2020-04-10T16:34:28Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -150,12 +158,15 @@ function externGetGroups(LdapConnection ldapConnection, handle username) returns\n     class: \"org.ballerinalang.stdlib.ldap.nativeimpl.GetGroups\"\n } external;\n \n-# Authenticate with username and password.\n+# Authenticates with username and password.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzA4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837088", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + ldapConnection - `ldap:LdapConnection` instance\n          \n          \n            \n            # + ldapConnection - The `ldap:LdapConnection` instance", "author": "praneesha", "createdAt": "2020-04-10T16:34:35Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -150,12 +158,15 @@ function externGetGroups(LdapConnection ldapConnection, handle username) returns\n     class: \"org.ballerinalang.stdlib.ldap.nativeimpl.GetGroups\"\n } external;\n \n-# Authenticate with username and password.\n+# Authenticates with username and password.\n+# ```ballerina\n+# boolean|ldap:Error result = ldap:doAuthenticate(ldapConnection, username, password);\n+# ```\n #\n-# + ldapConnection - `LdapConnection` instance\n+# + ldapConnection - `ldap:LdapConnection` instance", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzIwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837204", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `true` if authentication is a successful, `false` otherwise, or else `ldap:Error` if error occurred\n          \n          \n            \n            # + return - `true` if authentication is successful, `false` otherwise, or else an `ldap:Error` if an error occurred", "author": "praneesha", "createdAt": "2020-04-10T16:34:51Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -150,12 +158,15 @@ function externGetGroups(LdapConnection ldapConnection, handle username) returns\n     class: \"org.ballerinalang.stdlib.ldap.nativeimpl.GetGroups\"\n } external;\n \n-# Authenticate with username and password.\n+# Authenticates with username and password.\n+# ```ballerina\n+# boolean|ldap:Error result = ldap:doAuthenticate(ldapConnection, username, password);\n+# ```\n #\n-# + ldapConnection - `LdapConnection` instance\n+# + ldapConnection - `ldap:LdapConnection` instance\n # + username - Username of the user to be authenticated\n # + password - Password of the user to be authenticated\n-# + return - true if authentication is a success, else false or `Error` if error occurred\n+# + return - `true` if authentication is a successful, `false` otherwise, or else `ldap:Error` if error occurred", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzI2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837267", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Initailizes LDAP connection context.\n          \n          \n            \n            # Initailizes the LDAP connection context.", "author": "praneesha", "createdAt": "2020-04-10T16:34:59Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -167,10 +178,13 @@ public function externDoAuthenticate(LdapConnection ldapConnection, handle usern\n } external;\n \n # Initailizes LDAP connection context.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzMwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837304", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + ldapConnectionConfig - `ldap:LdapConnectionConfig` instance\n          \n          \n            \n            # + ldapConnectionConfig - The `ldap:LdapConnectionConfig` instance", "author": "praneesha", "createdAt": "2020-04-10T16:35:06Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -167,10 +178,13 @@ public function externDoAuthenticate(LdapConnection ldapConnection, handle usern\n } external;\n \n # Initailizes LDAP connection context.\n+# ```ballerina\n+# ldap:LdapConnection|ldap:Error connection = ldap:initLdapConnectionContext(ldapConnectionConfig, instanceId);\n+# ```\n #\n-# + ldapConnectionConfig - `LdapConnectionConfig` instance\n-# + instanceId - Unique id generated to identify an endpoint\n-# + return - `LdapConnection` instance, or `Error` if error occurred\n+# + ldapConnectionConfig - `ldap:LdapConnectionConfig` instance", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzQxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837418", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `ldap:LdapConnection` instance or else `ldap:Error` if error occurred\n          \n          \n            \n            # + return - The `ldap:LdapConnection` instance or else an `ldap:Error` if an error occurred", "author": "praneesha", "createdAt": "2020-04-10T16:35:24Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -167,10 +178,13 @@ public function externDoAuthenticate(LdapConnection ldapConnection, handle usern\n } external;\n \n # Initailizes LDAP connection context.\n+# ```ballerina\n+# ldap:LdapConnection|ldap:Error connection = ldap:initLdapConnectionContext(ldapConnectionConfig, instanceId);\n+# ```\n #\n-# + ldapConnectionConfig - `LdapConnectionConfig` instance\n-# + instanceId - Unique id generated to identify an endpoint\n-# + return - `LdapConnection` instance, or `Error` if error occurred\n+# + ldapConnectionConfig - `ldap:LdapConnectionConfig` instance\n+# + instanceId - Instance ID of the endpoint\n+# + return - `ldap:LdapConnection` instance or else `ldap:Error` if error occurred", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzQ2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r406837462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs and prepares the `error` as a `auth:Error`.\n          \n          \n            \n            # Logs and prepares the `error` as an `auth:Error`.", "author": "praneesha", "createdAt": "2020-04-10T16:35:32Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/ldap_errors.bal", "diffHunk": "@@ -28,9 +28,9 @@ public const LDAP_ERROR = \"{ballerina/ldap}Error\";\n # Represents the LDAP error type with details.\n public type Error error<LDAP_ERROR, Detail>;\n \n-# Log and prepare `error` as a `auth:Error`.\n+# Logs and prepares the `error` as a `auth:Error`.", "originalCommit": "3d1abf94c022c0dc9765085cb67c0e2d9455f7e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "15517712256b08a850e086fa36b30b0310b64990", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/15517712256b08a850e086fa36b30b0310b64990", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-10T17:24:05Z", "type": "commit"}, {"oid": "d331939f32133956f1a489ab3c4de72979105b19", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d331939f32133956f1a489ab3c4de72979105b19", "message": "Fix BBE line length", "committedDate": "2020-04-11T05:47:58Z", "type": "commit"}, {"oid": "6439bd64aebb93a2ed8cc2e2b51967b44c3eadd3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6439bd64aebb93a2ed8cc2e2b51967b44c3eadd3", "message": "Merge branch 'fix-ldap-1.2.x' of https://github.com/ldclakmal/ballerina-lang into fix-ldap-1.2.x", "committedDate": "2020-04-11T05:50:33Z", "type": "commit"}, {"oid": "f809e4ceeeb3ee4f576010a2716bd2fc10b83540", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f809e4ceeeb3ee4f576010a2716bd2fc10b83540", "message": "Move module.md content into relevant objects", "committedDate": "2020-04-11T06:29:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzEyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407027122", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `true` if authentication is successful, `false` otherwise, or else `auth:Error` occurred while\n          \n          \n            \n            # + return - `true` if authentication is successful, `false` otherwise, or else an `auth:Error` occurred while", "author": "praneesha", "createdAt": "2020-04-11T06:51:12Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -46,10 +51,14 @@ public type InboundLdapAuthProvider object {\n         }\n     }\n \n-    # Authenticate with username and password.\n-    #\n-    # + credential - Credential value\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` occurred while extracting credentials\n+# Authenticates base64-encoded `username:password` credential.\n+# ```ballerina\n+# boolean|auth:Error result = inboundLdapAuthProvider.authenticate(\"<credential>\");\n+# ```\n+#\n+# + credential - Base64-encoded `username:password` value\n+# + return - `true` if authentication is successful, `false` otherwise, or else `auth:Error` occurred while", "originalCommit": "f809e4ceeeb3ee4f576010a2716bd2fc10b83540", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzE3Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407027173", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + connectionTimeoutInMillis - Timeout in making the initial LDAP connection in milliseconds\n          \n          \n            \n            # + connectionTimeoutInMillis - Timeout (in milliseconds) in making the initial LDAP connection", "author": "praneesha", "createdAt": "2020-04-11T06:51:43Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -96,10 +105,10 @@ public type InboundLdapAuthProvider object {\n # + userRolesCacheEnabled -  To indicate whether to cache the role list of a user\n # + connectionPoolingEnabled - Define whether LDAP connection pooling is enabled\n # + connectionTimeoutInMillis - Timeout in making the initial LDAP connection in milliseconds", "originalCommit": "f809e4ceeeb3ee4f576010a2716bd2fc10b83540", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1153c7fae91098832ac260181915a2649138de09", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1153c7fae91098832ac260181915a2649138de09", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-11T07:17:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjIyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407032224", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To run the service, execute the below command by passing Ballerina home path\n          \n          \n            \n            # To run the service, execute the below command by passing the Ballerina home path", "author": "praneesha", "createdAt": "2020-04-11T07:51:01Z", "path": "examples/secured-service-with-ldap/secured_service_with_ldap.server.out", "diffHunk": "@@ -0,0 +1,4 @@\n+# To run the service, execute the below command by passing Ballerina home path", "originalCommit": "1153c7fae91098832ac260181915a2649138de09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjI3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407032275", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Authenticates base64-encoded `username:password` credential.\n          \n          \n            \n            # Authenticates the base64-encoded `username:password` credentials.", "author": "praneesha", "createdAt": "2020-04-11T07:51:39Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -46,10 +51,14 @@ public type InboundLdapAuthProvider object {\n         }\n     }\n \n-    # Authenticate with username and password.\n-    #\n-    # + credential - Credential value\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` occurred while extracting credentials\n+# Authenticates base64-encoded `username:password` credential.", "originalCommit": "1153c7fae91098832ac260181915a2649138de09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjMyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407032328", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + connectionURL - Connection URL to the LDAP server\n          \n          \n            \n            # + connectionURL - Connection URL of the LDAP server", "author": "praneesha", "createdAt": "2020-04-11T07:51:59Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -81,7 +90,7 @@ public type InboundLdapAuthProvider object {\n # + domainName - Unique name to identify the user store\n # + connectionURL - Connection URL to the LDAP server", "originalCommit": "1153c7fae91098832ac260181915a2649138de09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjM2OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407032369", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + membershipAttribute - Define the attribute that contains the distinguished names (DN) of user objects that are in a group\n          \n          \n            \n            # + membershipAttribute - Define the attribute, which contains the distinguished names (DN) of user objects that are there in a group", "author": "praneesha", "createdAt": "2020-04-11T07:52:30Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -95,11 +104,11 @@ public type InboundLdapAuthProvider object {\n # + membershipAttribute - Define the attribute that contains the distinguished names (DN) of user objects that are in a group", "originalCommit": "1153c7fae91098832ac260181915a2649138de09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjQwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407032407", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + readTimeoutInMillis - Read timeout in milliseconds for LDAP operations\n          \n          \n            \n            # + readTimeoutInMillis - Reading timeout in milliseconds for LDAP operations", "author": "praneesha", "createdAt": "2020-04-11T07:52:48Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -95,11 +104,11 @@ public type InboundLdapAuthProvider object {\n # + membershipAttribute - Define the attribute that contains the distinguished names (DN) of user objects that are in a group\n # + userRolesCacheEnabled -  To indicate whether to cache the role list of a user\n # + connectionPoolingEnabled - Define whether LDAP connection pooling is enabled\n-# + connectionTimeoutInMillis - Timeout in making the initial LDAP connection in milliseconds\n-# + readTimeoutInMillis - The value of this property is the read timeout in milliseconds for LDAP operations\n+# + connectionTimeoutInMillis - Timeout (in milliseconds) in making the initial LDAP connection \n+# + readTimeoutInMillis - Read timeout in milliseconds for LDAP operations", "originalCommit": "1153c7fae91098832ac260181915a2649138de09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "be25c4e84ffbc8ba4e07119367c80f103c924f7e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/be25c4e84ffbc8ba4e07119367c80f103c924f7e", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-11T07:55:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTE3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407051174", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // `<username>:<password>` with `-u` parameter with the cURL command.\n          \n          \n            \n            // `<username>:<password>` with the `-u` parameter and the cURL command.", "author": "praneesha", "createdAt": "2020-04-11T11:14:04Z", "path": "examples/secured-service-with-ldap/secured_service_with_ldap.client.out", "diffHunk": "@@ -0,0 +1,10 @@\n+// Start the LDAP server and invoke the service using cURL. \n+// It is required to provide the correct basic authentication header or\n+// `<username>:<password>` with `-u` parameter with the cURL command.", "originalCommit": "be25c4e84ffbc8ba4e07119367c80f103c924f7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTI4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22586#discussion_r407051281", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents configurations that required for LDAP auth store.\n          \n          \n            \n            # Represents the configurations that are required for an LDAP auth store.", "author": "praneesha", "createdAt": "2020-04-11T11:15:11Z", "path": "stdlib/ldap/src/main/ballerina/src/ldap/inbound_ldap_auth_provider.bal", "diffHunk": "@@ -79,9 +88,9 @@ public type InboundLdapAuthProvider object {\n # Represents configurations that required for LDAP auth store.", "originalCommit": "be25c4e84ffbc8ba4e07119367c80f103c924f7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "406e42080b7ae53e26d0623d216a94609c471c32", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/406e42080b7ae53e26d0623d216a94609c471c32", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>", "committedDate": "2020-04-11T12:11:35Z", "type": "commit"}]}