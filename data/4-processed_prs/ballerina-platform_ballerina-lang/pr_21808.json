{"pr_number": 21808, "pr_title": "Add BBEs for shift expressions and binary bitwise expressions", "pr_createdAt": "2020-03-16T08:50:59Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808", "timeline": [{"oid": "26029c22df2fa74a09f76f1086d71e679a607836", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/26029c22df2fa74a09f76f1086d71e679a607836", "message": "Add a BBE for shift expressions", "committedDate": "2020-03-16T07:57:58Z", "type": "commit"}, {"oid": "5f82fb3aecae43015b9c4b15143dc00e0feb3316", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5f82fb3aecae43015b9c4b15143dc00e0feb3316", "message": "Add a BBE for binary bitwise expressions", "committedDate": "2020-03-16T08:50:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2Mzg5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392863898", "bodyText": "Thought we weren't using aliases for lang libs in examples?", "author": "pubudu91", "createdAt": "2020-03-16T08:53:30Z", "path": "examples/binary-bitwise-expressions/binary_bitwise_expressions.bal", "diffHunk": "@@ -0,0 +1,38 @@\n+import ballerina/io;\n+import ballerina/lang.'int as ints;", "originalCommit": "5f82fb3aecae43015b9c4b15143dc00e0feb3316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3MDY3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392870672", "bodyText": "We weren't?\nDid a quick search for \"import ballerina/lang\" and we seem to be using aliases in all the examples?", "author": "MaryamZi", "createdAt": "2020-03-16T09:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2Mzg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkwNDUzMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392904531", "bodyText": "Removed the alias as discussed.", "author": "MaryamZi", "createdAt": "2020-03-16T10:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2Mzg5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392864385", "bodyText": "Isn't & actually an operator?", "author": "pubudu91", "createdAt": "2020-03-16T08:54:28Z", "path": "examples/binary-bitwise-expressions/binary_bitwise_expressions.bal", "diffHunk": "@@ -0,0 +1,38 @@\n+import ballerina/io;\n+import ballerina/lang.'int as ints;\n+\n+public function main() {\n+    int a = 385;\n+    ints:Unsigned8 b = 128;\n+    // For a bitwise AND (`&`) expression, if the type of either operand is a subtype of", "originalCommit": "5f82fb3aecae43015b9c4b15143dc00e0feb3316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDY1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392864656", "bodyText": "The expression itself is is a binary expression", "author": "pubudu91", "createdAt": "2020-03-16T08:54:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3MzkyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392873928", "bodyText": "The spec mentions these as bitwise-and-expr, bitwise-or-expr, etc. Hence used the same.", "author": "MaryamZi", "createdAt": "2020-03-16T09:13:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MTE1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393041156", "bodyText": "Then shall we first properly define what we mean by \"bitwise AND expression\" etc.? Because when referring to AND or &, what we immediately think of is the operator. The term \"bitwise AND expression\" sounds a bit alien.", "author": "pubudu91", "createdAt": "2020-03-16T13:58:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExODExOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393118118", "bodyText": "Any suggestions? Wanted to highlight the & operator along with AND.\nDo we need to \"define\" what a \"bitwise AND expression\" is? IMO, it's clear even though the terms aren't familiar.", "author": "MaryamZi", "createdAt": "2020-03-16T15:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0MTE5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393141198", "bodyText": "I'm ok with using the term bitwise AND expression. But using & within parenthesis like here is kinda misleading. It's why I assumed you meant the & operator when I first saw this.", "author": "pubudu91", "createdAt": "2020-03-16T16:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0MTk3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393141974", "bodyText": "No need for a lengthy definition. Can expand the description you've given in the .description file to make it clear what a bitwise AND expression is", "author": "pubudu91", "createdAt": "2020-03-16T16:13:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0NTg5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393145896", "bodyText": "Any suggestions?", "author": "MaryamZi", "createdAt": "2020-03-16T16:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0ODIzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393148232", "bodyText": "Can you recheck after the changes btw.\nI've said\nFor a bitwise \"AND\" (&) expression,\nemphasizing \"AND\" and the having the operator within parentheses. Is it still not clear?", "author": "MaryamZi", "createdAt": "2020-03-16T16:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NDM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzU4NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392867585", "bodyText": "Same comment as above re: referencing to bitwise AND as an expression. Can see in other places too", "author": "pubudu91", "createdAt": "2020-03-16T09:00:42Z", "path": "examples/binary-bitwise-expressions/binary_bitwise_expressions.bal", "diffHunk": "@@ -0,0 +1,38 @@\n+import ballerina/io;\n+import ballerina/lang.'int as ints;\n+\n+public function main() {\n+    int a = 385;\n+    ints:Unsigned8 b = 128;\n+    // For a bitwise AND (`&`) expression, if the type of either operand is a subtype of\n+    // `int:UnsignedK` when K is 8, 16 or 32, then the type of the result is `int:UnsignedN`\n+    // where N is the smallest such K.\n+    ints:Unsigned8 res1 = a & b;\n+    io:println(\"`int` 385 & `ints:Unsigned8` 128: \", res1);\n+\n+    ints:Signed16 c = -32700;\n+    int d = 249;\n+    // Else, if neither operand is of a type that is a subtype of an unsigned `int` type,\n+    // the type of the result for a bitwise AND expression is `int`.", "originalCommit": "5f82fb3aecae43015b9c4b15143dc00e0feb3316", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3Mjc0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392872747", "bodyText": "The second sentence is not exactly clear. Do you mean that the vacated bit positions are filled using 0?", "author": "pubudu91", "createdAt": "2020-03-16T09:11:11Z", "path": "examples/shift-expressions/shift_expressions.bal", "diffHunk": "@@ -0,0 +1,42 @@\n+import ballerina/io;\n+import ballerina/lang.'int as ints;\n+\n+public function main() {\n+    int a = 1;\n+    // `<<` performs a left shift. The bits shifted in on the right are `0`.", "originalCommit": "5f82fb3aecae43015b9c4b15143dc00e0feb3316", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3NTE2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r392875166", "bodyText": "This again is from the spec. Do we need to mention something like \"vacated\".\nWe just shift the bits to the left, adding in 0s at the right. We don't have to go into details about how shift works right?", "author": "MaryamZi", "createdAt": "2020-03-16T09:15:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3Mjc0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzODYyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393038625", "bodyText": "Yeah, I noticed the definition in the spec later. The thing was, it took me a little while to get what it meant. Isn't there an easier/clearer way to say it?", "author": "pubudu91", "createdAt": "2020-03-16T13:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3Mjc0Nw=="}], "type": "inlineReview"}, {"oid": "efa8f3af8409d6b99cfd08aceff362ceaf2dd264", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/efa8f3af8409d6b99cfd08aceff362ceaf2dd264", "message": "Avoid using aliases for langlib imports", "committedDate": "2020-03-16T10:05:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDU3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393090574", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `<<` performs a left shift. The bits shifted in on the right are `0`.\n          \n          \n            \n                // `<<` performs a left shift. The bits shifted to the right are `0`.", "author": "praneesha", "createdAt": "2020-03-16T15:01:27Z", "path": "examples/shift-expressions/shift_expressions.bal", "diffHunk": "@@ -0,0 +1,42 @@\n+import ballerina/io;\n+import ballerina/lang.'int;\n+\n+public function main() {\n+    int a = 1;\n+    // `<<` performs a left shift. The bits shifted in on the right are `0`.", "originalCommit": "efa8f3af8409d6b99cfd08aceff362ceaf2dd264", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODkwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393108902", "bodyText": "IMO, saying \"bits shifted to the right\" kinda implies that the existing bits are shifted to the right. But that is not the case.\nThe existing bits are shifted to the left, while 0s are shifted in from the right.", "author": "MaryamZi", "createdAt": "2020-03-16T15:27:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDg5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21808#discussion_r393090896", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // `>>` performs a signed right shift. The bits shifted in on the left\n          \n          \n            \n                // `>>` performs a signed right shift. The bits shifted to the left", "author": "praneesha", "createdAt": "2020-03-16T15:01:51Z", "path": "examples/shift-expressions/shift_expressions.bal", "diffHunk": "@@ -0,0 +1,42 @@\n+import ballerina/io;\n+import ballerina/lang.'int;\n+\n+public function main() {\n+    int a = 1;\n+    // `<<` performs a left shift. The bits shifted in on the right are `0`.\n+    // The type of the result of a left shift is always `int`.\n+    int res1 = a << 2;\n+    io:println(\"`int` 1 << 2: \", res1);\n+\n+    'int:Unsigned8 b = 128;\n+    int res2 = b << 3;\n+    io:println(\"`int:Unsigned8` 128 << 3: \", res2);\n+\n+    // `>>` performs a signed right shift. The bits shifted in on the left", "originalCommit": "efa8f3af8409d6b99cfd08aceff362ceaf2dd264", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "58b4a3e5f6a52a7827f2c3aa0bd6b682a30ba823", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/58b4a3e5f6a52a7827f2c3aa0bd6b682a30ba823", "message": "Merge branch 'stage' of https://github.com/ballerina-lang/ballerina into add-int-subtype-op-bbes", "committedDate": "2020-03-16T15:34:24Z", "type": "commit"}, {"oid": "7710085caf5f2907aa2cae5cafb28669da1a5a94", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7710085caf5f2907aa2cae5cafb28669da1a5a94", "message": "Rephrase some comments/descriptions", "committedDate": "2020-03-16T16:04:56Z", "type": "commit"}]}