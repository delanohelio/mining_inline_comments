{"pr_number": 27319, "pr_title": "Fix context stack of complex type descriptor", "pr_createdAt": "2020-12-03T07:30:28Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319", "timeline": [{"oid": "5d7a48912bb362d67c386b41d286982ae6ad85e0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d7a48912bb362d67c386b41d286982ae6ad85e0", "message": "Fix extra wrapper being inserted to parser-ctx-stack with complex-type", "committedDate": "2020-12-03T07:32:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMjkzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r543312939", "bodyText": "Should we add a test for the union scenario too?", "author": "MaryamZi", "createdAt": "2020-12-15T12:47:44Z", "path": "compiler/ballerina-parser/src/test/resources/declarations/record-type-def/record_type_def_source_26.bal", "diffHunk": "@@ -0,0 +1,3 @@\n+type Foo3 record {|\n+    *int&;", "originalCommit": "5d7a48912bb362d67c386b41d286982ae6ad85e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aaaded8ed108fc3859ff80b3384a1c107fb1f8d1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aaaded8ed108fc3859ff80b3384a1c107fb1f8d1", "message": "Fix context stack of complex type descriptor", "committedDate": "2020-12-17T08:06:37Z", "type": "commit"}, {"oid": "b747452f77b0892794cfdd7b96585cf5a0945518", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b747452f77b0892794cfdd7b96585cf5a0945518", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2020-12-17T08:08:09Z", "type": "commit"}, {"oid": "b747452f77b0892794cfdd7b96585cf5a0945518", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b747452f77b0892794cfdd7b96585cf5a0945518", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2020-12-17T08:08:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3MjY2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r547872667", "bodyText": "Why we remove early return?", "author": "rdulmina", "createdAt": "2020-12-23T09:53:23Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -2212,17 +2206,20 @@ private STNode parseTypeDescriptorInternal(List<STNode> qualifiers, ParserRuleCo\n             typeDesc = STNodeFactory.createSimpleNameReferenceNode(missingToken);\n         }\n \n-        return parseComplexTypeDescriptor(typeDesc, context, isTypedBindingPattern);\n+        typeDesc = parseComplexTypeDescriptor(typeDesc, context, isTypedBindingPattern);\n+        return typeDesc;", "originalCommit": "b747452f77b0892794cfdd7b96585cf5a0945518", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg5NjQxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r547896416", "bodyText": "We will lose the original context if we end the context before we complete parsing the complete type descriptor.\neg type myint int[5; error handler will look for expression after recovering ] where it should look for the semicolon.", "author": "rdulmina", "createdAt": "2020-12-23T10:47:57Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -2193,14 +2193,8 @@ private STNode parseTypeDescriptor(ParserRuleContext context, boolean isTypedBin\n     private STNode parseTypeDescriptor(List<STNode> qualifiers, ParserRuleContext context,\n                                        boolean isTypedBindingPattern, boolean isInConditionalExpr) {\n         startContext(context);\n-        STNode typeDesc = parseTypeDescriptorInternal(qualifiers, context, isTypedBindingPattern, isInConditionalExpr);\n-        endContext();\n-        return typeDesc;\n-    }\n-\n-    private STNode parseTypeDescriptorInternal(List<STNode> qualifiers, ParserRuleContext context,\n-                                               boolean isTypedBindingPattern, boolean isInConditionalExpr) {\n         STNode typeDesc = parseTypeDescriptorInternal(qualifiers, context, isInConditionalExpr);\n+        endContext();", "originalCommit": "b747452f77b0892794cfdd7b96585cf5a0945518", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ba4aa0ad66971cd55e9bf46aa211c4fc467bd077", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba4aa0ad66971cd55e9bf46aa211c4fc467bd077", "message": "Fix complex type context stack", "committedDate": "2021-01-04T05:57:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc2ODAyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r551768026", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    testTopLevelNode(\"array-type/array_type_assert_05.bal\", \"array-type/array_type_assert_20.json\");\n          \n          \n            \n                    testTopLevelNode(\"array-type/array_type_assert_20.bal\", \"array-type/array_type_assert_20.json\");\n          \n          \n            \n                  \n          \n      \n    \n    \n  \n\nCan we sync bal file and assert file. It would be better if we can change the existing ones as well.", "author": "rdulmina", "createdAt": "2021-01-05T07:55:15Z", "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/types/ArrayTypeTest.java", "diffHunk": "@@ -104,6 +104,11 @@ public void testInvalidArrayTypeWithArrayLengthMissingCloseBracket() {\n         test(\"int[5 a;\", \"array-type/array_type_assert_11.json\");\n     }\n \n+    @Test\n+    public void testTopLevelArrayTypeWithMissingCloseBracket() {\n+        testTopLevelNode(\"array-type/array_type_assert_05.bal\", \"array-type/array_type_assert_20.json\");", "originalCommit": "ba4aa0ad66971cd55e9bf46aa211c4fc467bd077", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4Nzk1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r551787951", "bodyText": "array_type_source_20.bal :P", "author": "lochana-chathura", "createdAt": "2021-01-05T08:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc2ODAyNg=="}], "type": "inlineReview"}, {"oid": "3903174012d0df14a044559e37cfc7b892474033", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3903174012d0df14a044559e37cfc7b892474033", "message": "Fix ArrayTypeTest file names", "committedDate": "2021-01-05T08:38:13Z", "type": "commit"}, {"oid": "cf896643e53c74463302a9790151f1f2a0cec1fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf896643e53c74463302a9790151f1f2a0cec1fc", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2021-01-05T10:35:57Z", "type": "commit"}, {"oid": "ae29951f895020f1ecedb35fa3654e2677972b78", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae29951f895020f1ecedb35fa3654e2677972b78", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2021-01-05T12:07:31Z", "type": "commit"}]}