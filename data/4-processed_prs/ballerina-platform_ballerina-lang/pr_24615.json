{"pr_number": 24615, "pr_title": "[master] Use the original caller request as the cached-response validation request", "pr_createdAt": "2020-07-06T20:39:23Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24615", "timeline": [{"oid": "7aad6648346cb537001234435ec4de3b423f5c04", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7aad6648346cb537001234435ec4de3b423f5c04", "message": "Refactor HTTP caching client logic", "committedDate": "2020-07-07T05:58:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0MjYzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24615#discussion_r450642637", "bodyText": "With this refactoring shall we structure the test services into few listeners? Because all of them have common configurations and each consists of only a single resource. I think it's possible that we can have two listeners, one for passthrough service which does the client call, and one for the backend. Use a descriptive resource path instead of basePath.\nFollowing files can be refactored :\n37_no_cache_service.bal\n38_max_age_cache_service.bal\n39_must_revalidate_cache_service.bal\n47_cache_validation_request_header_preservation.bal", "author": "chamil321", "createdAt": "2020-07-07T06:41:51Z", "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/47_cache_validation_request_header_preservation.bal", "diffHunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/http;\n+\n+http:Client cachingEP4 = new(\"http://localhost:9260\", { cache: { isShared: true } });", "originalCommit": "7aad6648346cb537001234435ec4de3b423f5c04", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0MzE3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24615#discussion_r450643172", "bodyText": "Shall we do early return here by checking the negation to avoid nested if clauses?", "author": "chamil321", "createdAt": "2020-07-07T06:43:11Z", "path": "stdlib/http/src/main/ballerina/src/http/caching/freshness_lifetime_calculation.bal", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/time;\n+\n+function isFreshResponse(Response cachedResponse, boolean isSharedCache) returns @tainted boolean {\n+    int currentAge = getResponseAge(cachedResponse);\n+    int freshnessLifetime = getFreshnessLifetime(cachedResponse, isSharedCache);\n+    return freshnessLifetime > currentAge;\n+}\n+\n+// Based on https://tools.ietf.org/html/rfc7234#section-4.2.1\n+function getFreshnessLifetime(Response cachedResponse, boolean isSharedCache) returns int {\n+    // TODO: Ensure that duplicate directives are not counted towards freshness lifetime.\n+    var responseCacheControl = cachedResponse.cacheControl;\n+    if (responseCacheControl is ResponseCacheControl) {\n+        if (isSharedCache && responseCacheControl.sMaxAge >= 0) {\n+            return responseCacheControl.sMaxAge;\n+        }\n+\n+        if (responseCacheControl.maxAge >= 0) {\n+            return responseCacheControl.maxAge;\n+        }\n+    }\n+\n+    // At this point, there should be exactly one Expires header to calculate the freshness lifetime.\n+    // When adding heuristic calculations, the condition would change to >1.\n+    if (cachedResponse.hasHeader(EXPIRES)) {", "originalCommit": "7aad6648346cb537001234435ec4de3b423f5c04", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "30a5bd96504f40c3fc2331dc342e5e9f37fc4abc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30a5bd96504f40c3fc2331dc342e5e9f37fc4abc", "message": "Update stale response checks", "committedDate": "2020-07-07T14:03:10Z", "type": "forcePushed"}, {"oid": "50264a7d02db63fd97b3dcb0836b0d1113a7508f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/50264a7d02db63fd97b3dcb0836b0d1113a7508f", "message": "Update stale response checks", "committedDate": "2020-07-07T14:05:59Z", "type": "forcePushed"}, {"oid": "3df279c2a16fcf5d2b8656c3b601a113d80f86bc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3df279c2a16fcf5d2b8656c3b601a113d80f86bc", "message": "Refactor debug log stmts to use arrow functions", "committedDate": "2020-07-07T14:28:56Z", "type": "forcePushed"}, {"oid": "b841ca8540f4c0305edbb1cc42721cd05bdf74ba", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b841ca8540f4c0305edbb1cc42721cd05bdf74ba", "message": "Use original caller request as the cache validation request", "committedDate": "2020-08-07T06:05:28Z", "type": "commit"}, {"oid": "f122aa619eec5944db93663755281d967fe6029c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f122aa619eec5944db93663755281d967fe6029c", "message": "Refactor HTTP caching client logic", "committedDate": "2020-08-07T06:12:55Z", "type": "commit"}, {"oid": "7de8766aa166c96bb70bb451bd7b94eb3aa38cbb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7de8766aa166c96bb70bb451bd7b94eb3aa38cbb", "message": "Update stale response checks", "committedDate": "2020-08-07T06:12:56Z", "type": "commit"}, {"oid": "24dbf47a877456b475ca7e0b2ba82adaa815c3a0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24dbf47a877456b475ca7e0b2ba82adaa815c3a0", "message": "Refactor debug log stmts to use arrow functions", "committedDate": "2020-08-07T06:12:56Z", "type": "commit"}, {"oid": "bbd6560de9b360e14f01baaf340c7cd30c5b1876", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bbd6560de9b360e14f01baaf340c7cd30c5b1876", "message": "Refactor nested if conditions in freshness lifetime calculation", "committedDate": "2020-08-07T06:12:56Z", "type": "commit"}, {"oid": "8668fe8abe247044b27a99fd024654a62a978ca4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8668fe8abe247044b27a99fd024654a62a978ca4", "message": "Remove redundant HTTP method constants", "committedDate": "2020-08-07T06:12:57Z", "type": "commit"}, {"oid": "e43a37b00dba1394d9df0d21e7928c9b65cfefcd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e43a37b00dba1394d9df0d21e7928c9b65cfefcd", "message": "Fix conflict in getWarningAgent()", "committedDate": "2020-08-07T07:17:30Z", "type": "commit"}, {"oid": "76c744872b429eeb14b7952716d4c4c281611f92", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76c744872b429eeb14b7952716d4c4c281611f92", "message": "Refactor HTTP caching tests to use common listeners", "committedDate": "2020-08-07T07:18:01Z", "type": "commit"}, {"oid": "76c744872b429eeb14b7952716d4c4c281611f92", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76c744872b429eeb14b7952716d4c4c281611f92", "message": "Refactor HTTP caching tests to use common listeners", "committedDate": "2020-08-07T07:18:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTY1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24615#discussion_r468325651", "bodyText": "Shall we remove unused ports from the port array as well?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9248, 9249, 9250,\n          \n          \n            \n                            9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9249, 9250,", "author": "chamil321", "createdAt": "2020-08-11T04:54:05Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/HttpBaseTest.java", "diffHunk": "@@ -40,7 +40,7 @@ public void start() throws BallerinaTestException {\n                 9102, 9103, 9104, 9105, 9106, 9107, 9108, 9109, 9110, 9111, 9112, 9113, 9114, 9115, 9116, 9117, 9118,\n                 9119, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233,\n                 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9248, 9249, 9250,", "originalCommit": "76c744872b429eeb14b7952716d4c4c281611f92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTc0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24615#discussion_r468325746", "bodyText": "Do we need these additional ports? 9259, 9260", "author": "chamil321", "createdAt": "2020-08-11T04:54:28Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/HttpBaseTest.java", "diffHunk": "@@ -40,7 +40,7 @@ public void start() throws BallerinaTestException {\n                 9102, 9103, 9104, 9105, 9106, 9107, 9108, 9109, 9110, 9111, 9112, 9113, 9114, 9115, 9116, 9117, 9118,\n                 9119, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233,\n                 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9248, 9249, 9250,\n-                9251, 9252, 9253, 9254, 9255, 9256, 9257, 9258};\n+                9251, 9252, 9253, 9254, 9255, 9256, 9257, 9258, 9259, 9260};", "originalCommit": "76c744872b429eeb14b7952716d4c4c281611f92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6358671d8634c8ddbd80cda72a5202eff1150ece", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6358671d8634c8ddbd80cda72a5202eff1150ece", "message": "Remove unused ports", "committedDate": "2020-08-11T05:08:49Z", "type": "commit"}]}