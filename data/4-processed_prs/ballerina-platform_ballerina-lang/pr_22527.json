{"pr_number": 22527, "pr_title": "Refactor log api docs", "pr_createdAt": "2020-04-08T16:23:15Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527", "timeline": [{"oid": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "message": "Update log api docs", "committedDate": "2020-04-08T16:20:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzMxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977315", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Suppose there is a module named `foo`. We can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:\n          \n          \n            \n            If there is a module named `foo`, we can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:\n          \n      \n    \n    \n  \n\nCheck if it is ok to use names like \"foo\".", "author": "praneesha", "createdAt": "2020-04-09T06:14:15Z", "path": "stdlib/log-api/src/main/ballerina/src/log/Module.md", "diffHunk": "@@ -34,29 +32,7 @@ $ ballerina run program.bal --b7a.log.level=<LOG_LEVEL>\n \n Log levels can be configured for modules either through a configuration file as `<MODULE_NAME>.loglevel=\"<LOG_LEVEL>\"` or through a CLI parameter as `<MODULE_NAME>.loglevel=<LOG_LEVEL>`.\n \n-The following code snippet depicts the usage of all the functions in the log API.\n-```ballerina\n-// Logs the message at ERROR level\n-log:printError(\"error log\");\n-\n-// Logs the message at ERROR level, along with an error record\n-error e = error(\"error occurred\");\n-log:printError(\"error log with cause\", err = e);\n-\n-// Logs the message at WARN level\n-log:printWarn(\"warn log\");\n-\n-// Logs the message at INFO level\n-log:printInfo(\"info log\");\n-\n-// Logs the message at DEBUG level\n-log:printDebug(\"debug log\");\n-\n-// Logs the message at TRACE level\n-log:printTrace(\"trace log\");\n-```\n-\n-Suppose that the above code snippet resides in a module named `foo`. We can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:\n+Suppose there is a module named `foo`. We can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:", "originalCommit": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzQ3NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977475", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at ERROR level.\n          \n          \n            \n            # Logs the specified message at the ERROR level.", "author": "praneesha", "createdAt": "2020-04-09T06:14:43Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.", "originalCommit": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzUxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977514", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at INFO level.\n          \n          \n            \n            # Logs the specified message at the INFO level.", "author": "praneesha", "createdAt": "2020-04-09T06:14:52Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.\n-#\n+# ```ballerina\n+# error e = error(\"error occurred\");\n+# log:printError(\"error log with cause\", err = e);\n+# ```\n+# \n # + msg - The message to be logged\n # + err - The error struct to be logged\n-public function printError(string | (function() returns (string)) msg, public error? err = ()) =\n-@java:Method {\n+public function printError(string|(function () returns (string)) msg, public error? err = ()) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at INFO level.", "originalCommit": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzU1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977550", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at TRACE level.\n          \n          \n            \n            # Logs the specified message at the TRACE level.", "author": "praneesha", "createdAt": "2020-04-09T06:15:00Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.\n-#\n+# ```ballerina\n+# error e = error(\"error occurred\");\n+# log:printError(\"error log with cause\", err = e);\n+# ```\n+# \n # + msg - The message to be logged\n # + err - The error struct to be logged\n-public function printError(string | (function() returns (string)) msg, public error? err = ()) =\n-@java:Method {\n+public function printError(string|(function () returns (string)) msg, public error? err = ()) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at INFO level.\n-#\n+# ```ballerina\n+# log:printInfo(\"info log\");\n+# ```\n+# \n # + msg - The message to be logged\n-public function printInfo(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printInfo(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at TRACE level.", "originalCommit": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzYwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977603", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at WARN level.\n          \n          \n            \n            # Logs the specified message at the WARN level.", "author": "praneesha", "createdAt": "2020-04-09T06:15:08Z", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.\n-#\n+# ```ballerina\n+# error e = error(\"error occurred\");\n+# log:printError(\"error log with cause\", err = e);\n+# ```\n+# \n # + msg - The message to be logged\n # + err - The error struct to be logged\n-public function printError(string | (function() returns (string)) msg, public error? err = ()) =\n-@java:Method {\n+public function printError(string|(function () returns (string)) msg, public error? err = ()) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at INFO level.\n-#\n+# ```ballerina\n+# log:printInfo(\"info log\");\n+# ```\n+# \n # + msg - The message to be logged\n-public function printInfo(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printInfo(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at TRACE level.\n-#\n+# ```ballerina\n+# log:printTrace(\"trace log\");\n+# ```\n+# \n # + msg - The message to be logged\n-public function printTrace(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printTrace(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at WARN level.", "originalCommit": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8c245285eaefb715e76f65a1e167fcca936409b0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c245285eaefb715e76f65a1e167fcca936409b0", "message": "Update BBE url", "committedDate": "2020-04-10T11:19:50Z", "type": "commit"}]}