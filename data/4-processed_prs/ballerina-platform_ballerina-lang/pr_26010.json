{"pr_number": 26010, "pr_title": "Add Balo Writer", "pr_createdAt": "2020-09-22T12:13:23Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010", "timeline": [{"oid": "e42f8b667afe9c8ef54c036abb940f6461e54283", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e42f8b667afe9c8ef54c036abb940f6461e54283", "message": "Add Balo Writer", "committedDate": "2020-09-22T12:10:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5NTY2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r493195663", "bodyText": "Shall we not have the packagePath in package model. It should be a derived value from project path using project API.", "author": "hevayo", "createdAt": "2020-09-23T04:51:18Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/Package.java", "diffHunk": "@@ -100,7 +109,7 @@ public void resolveDependencies() {\n         return packageContext.packageDependencies();\n     }\n \n-//    public BallerinaToml ballerinaToml() {\n-//        return this.packageContext.ballerinaToml();\n-//    }\n+    public Path packagePath() {\n+        return packageContext.packagePath();", "originalCommit": "e42f8b667afe9c8ef54c036abb940f6461e54283", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMxMjU2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r493312565", "bodyText": "Added Project instead of Package as a parameter to Balo write method in 47a602a", "author": "pramodya1994", "createdAt": "2020-09-23T08:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5NTY2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwMzQ1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r493203454", "bodyText": "Can we move this to util since this will be needed in other places.", "author": "hevayo", "createdAt": "2020-09-23T05:20:17Z", "path": "project-api/ballerina-projects/src/main/java/io/ballerina/projects/writers/BaloWriter.java", "diffHunk": "@@ -0,0 +1,390 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package io.ballerina.projects.writers;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import io.ballerina.projects.Package;\n+import io.ballerina.projects.model.BaloJson;\n+import io.ballerina.projects.model.PackageJson;\n+import io.ballerina.projects.model.adaptors.JsonCollectionsAdaptor;\n+import io.ballerina.projects.model.adaptors.JsonStringsAdaptor;\n+import io.ballerina.projects.utils.ProjectConstants;\n+import org.ballerinalang.compiler.BLangCompilerException;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.charset.Charset;\n+import java.nio.file.AccessDeniedException;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.StandardCopyOption;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * {@code BaloWriter} writes a package to balo format.\n+ *\n+ * @since 2.0.0\n+ */\n+public class BaloWriter {\n+\n+    private BaloWriter() {}\n+\n+    /**\n+     * Write a package to a .balo and return the created .balo path.\n+     *\n+     * @param pkg  Package to be written as a .balo.\n+     * @param path Directory where the .balo should be created.\n+     * @return Newly created balo path\n+     */\n+    public static Path write(Package pkg, Path path) throws AccessDeniedException {\n+        // todo check if the given package is compiled properly\n+\n+        // Check if the path is a directory\n+        if (!path.toFile().isDirectory()) {\n+            throw new RuntimeException(\"Given path is not a directory: \" + path);\n+        }\n+\n+        if (!path.toFile().canWrite()) {\n+            throw new AccessDeniedException(\"No write access to create balo:\" + path);\n+        }\n+\n+        Path balo = path.resolve(\n+                getBaloName(pkg.packageOrg().toString(), pkg.packageName().toString(), pkg.packageVersion().toString(),\n+                        null));\n+\n+        // Create the archive over write if exists\n+        try (FileSystem baloFS = createBaloArchive(balo)) {\n+            // Now lets put stuff in\n+            populateBaloArchive(baloFS, pkg);\n+        } catch (IOException e) {\n+            throw new BLangCompilerException(\"Failed to create balo :\" + e.getMessage(), e);\n+        } catch (BLangCompilerException be) {\n+            // clean up if an error occur\n+            try {\n+                Files.delete(balo);\n+            } catch (IOException e) {\n+                // We ignore this error and throw out the original blang compiler error to the user\n+            }\n+            throw be;\n+        }\n+        return balo;\n+    }\n+\n+    private static String getBaloName(String org, String pkgName, String version, String platform) {", "originalCommit": "e42f8b667afe9c8ef54c036abb940f6461e54283", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMxMjY3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r493312677", "bodyText": "Added in 47a602a", "author": "pramodya1994", "createdAt": "2020-09-23T08:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwMzQ1NA=="}], "type": "inlineReview"}, {"oid": "47a602a13dcd3c359d13d5fb7b731527dc77f530", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47a602a13dcd3c359d13d5fb7b731527dc77f530", "message": "Address PR comments", "committedDate": "2020-09-23T08:29:13Z", "type": "commit"}, {"oid": "dd3cf2c13b7a5a928d42ed404f8d27175aa12c73", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dd3cf2c13b7a5a928d42ed404f8d27175aa12c73", "message": "Merge branch 'prj_api_module_refactor' of https://github.com/ballerina-platform/ballerina-lang into add-balo-loader-prj_refactor", "committedDate": "2020-09-25T09:11:47Z", "type": "commit"}, {"oid": "f0955f9f22ec1cb7d792a16494ef034985a86db3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0955f9f22ec1cb7d792a16494ef034985a86db3", "message": "Modify balo writer", "committedDate": "2020-09-25T10:48:51Z", "type": "commit"}, {"oid": "10d07f7ffbb94303c372d6b7515b2610153b9606", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10d07f7ffbb94303c372d6b7515b2610153b9606", "message": "Fix bugs in BaloWriter & checkstyles", "committedDate": "2020-09-29T10:03:06Z", "type": "forcePushed"}, {"oid": "a0727e5b4cfa1579dc587550d600abaaf8613019", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a0727e5b4cfa1579dc587550d600abaaf8613019", "message": "Fix bugs in BaloWriter & checkstyles", "committedDate": "2020-09-29T11:46:26Z", "type": "forcePushed"}, {"oid": "f3981eafa18a14a68434a5602a50ab74c6222970", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f3981eafa18a14a68434a5602a50ab74c6222970", "message": "Fix bugs in BaloWriter & checkstyles", "committedDate": "2020-09-29T12:46:08Z", "type": "commit"}, {"oid": "f3981eafa18a14a68434a5602a50ab74c6222970", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f3981eafa18a14a68434a5602a50ab74c6222970", "message": "Fix bugs in BaloWriter & checkstyles", "committedDate": "2020-09-29T12:46:08Z", "type": "forcePushed"}, {"oid": "8aceb66c7ef7bb54f0789362c27064f64a93f41b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8aceb66c7ef7bb54f0789362c27064f64a93f41b", "message": "Fix bugs in BaloWriter & checkstyles", "committedDate": "2020-09-29T18:56:14Z", "type": "commit"}, {"oid": "8aceb66c7ef7bb54f0789362c27064f64a93f41b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8aceb66c7ef7bb54f0789362c27064f64a93f41b", "message": "Fix bugs in BaloWriter & checkstyles", "committedDate": "2020-09-29T18:56:14Z", "type": "forcePushed"}, {"oid": "5233efcbe757717aee4929da72afe277425a762c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5233efcbe757717aee4929da72afe277425a762c", "message": "Fix some checkstyle issues in tests", "committedDate": "2020-09-29T19:05:23Z", "type": "commit"}, {"oid": "f9cb445a1ed18f136d7f88c18e89e7f055f1811a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9cb445a1ed18f136d7f88c18e89e7f055f1811a", "message": "Add apache commons compress library to create balo\n\nFixes https://github.com/ballerina-platform/ballerina-lang/issues/26154", "committedDate": "2020-09-30T15:04:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY3MTAxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r497671013", "bodyText": "We shouldn't be exposing the packageContext from the API. We should keep this package-private.", "author": "azinneera", "createdAt": "2020-09-30T17:11:11Z", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/Package.java", "diffHunk": "@@ -40,10 +40,14 @@ static Package from(Project project, PackageConfig packageConfig) {\n         return new Package(packageContext, project);\n     }\n \n-    PackageContext packageContext() {\n+    public PackageContext packageContext() {", "originalCommit": "f9cb445a1ed18f136d7f88c18e89e7f055f1811a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1MTkyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r498451929", "bodyText": "Made it package private", "author": "pramodya1994", "createdAt": "2020-10-01T18:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY3MTAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY3OTA4MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r497679081", "bodyText": "There is already a constant defined for \".balo\" in ProjectDirConstants. Lets copy that to ProjectConstants and use it.", "author": "azinneera", "createdAt": "2020-09-30T17:22:57Z", "path": "project-api/ballerina-projects/src/main/java/io/ballerina/projects/utils/ProjectUtils.java", "diffHunk": "@@ -108,5 +108,14 @@ static Path createTargetDirectoryStructure(Path sourceRoot) throws IOException {\n \n         return targetDir;\n     }\n+\n+    public static String getBaloName(String org, String pkgName, String version, String platform) {\n+        // <orgname>-<packagename>-<platform>-<version>.balo\n+        if (platform == null || \"\".equals(platform)) {\n+            platform = \"any\";\n+        }\n+        return org + \"-\" + pkgName + \"-\" + platform + \"-\" + version + \".balo\";", "originalCommit": "f9cb445a1ed18f136d7f88c18e89e7f055f1811a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ1MjA4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26010#discussion_r498452080", "bodyText": "Used constant", "author": "pramodya1994", "createdAt": "2020-10-01T18:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY3OTA4MQ=="}], "type": "inlineReview"}, {"oid": "e88a2b826ef2b14812bf1b26572f68dee0d13e79", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e88a2b826ef2b14812bf1b26572f68dee0d13e79", "message": "Add changes for review comments", "committedDate": "2020-10-01T18:54:00Z", "type": "commit"}]}