{"pr_number": 22126, "pr_title": "Improve xml readOnly operation", "pr_createdAt": "2020-03-24T06:32:55Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126", "timeline": [{"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e4ca4ff6b259ececa1595afa42987f7ec362a8bd", "message": "Improve xml readOnly operation", "committedDate": "2020-03-24T06:24:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTE1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399245158", "bodyText": "This logic only applies to XMLText.java now right? Shall we remove this implementation and implement copy() XMLText.java instead?", "author": "MaryamZi", "createdAt": "2020-03-27T12:58:29Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLNonElementItem.java", "diffHunk": "@@ -137,7 +138,6 @@ public XMLValue getItem(int index) {\n \n     @Override\n     public Object copy(Map<Object, Object> refs) {\n-        // XMLContentHolderItem is immutable\n         return this;\n     }", "originalCommit": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4MzYwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399783604", "bodyText": "+1", "author": "rdhananjaya", "createdAt": "2020-03-29T11:26:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTYwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399245604", "bodyText": "Shall we move these assertions to the bal file instead?", "author": "MaryamZi", "createdAt": "2020-03-27T12:59:12Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/builtinfunctions/FreezeAndIsFrozenTest.java", "diffHunk": "@@ -436,6 +436,16 @@ public void testFrozenValueUpdatePanicWithCheckTrap() {\n                             \"failed to set element to json: message=modification not allowed on readonly value\");\n     }\n \n+    @Test\n+    public void testXMLItemsCloneReadOnly() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testXMLItemsCloneReadOnly\", new BValue[0]);\n+        Assert.assertTrue(((BBoolean) returns[0]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[1]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[2]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[3]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[4]).booleanValue());", "originalCommit": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMTMyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399811322", "bodyText": "Moved", "author": "rdhananjaya", "createdAt": "2020-03-29T15:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTYwNA=="}], "type": "inlineReview"}, {"oid": "6a3b60433823fe13098f2a503b63c7f9773598c3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a3b60433823fe13098f2a503b63c7f9773598c3", "message": "Move copy and frozenCopy methods down to XMLText", "committedDate": "2020-03-29T14:01:17Z", "type": "commit"}, {"oid": "6a3b60433823fe13098f2a503b63c7f9773598c3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a3b60433823fe13098f2a503b63c7f9773598c3", "message": "Move copy and frozenCopy methods down to XMLText", "committedDate": "2020-03-29T14:01:17Z", "type": "forcePushed"}, {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "message": "Move test assertions to .bal files", "committedDate": "2020-03-29T15:01:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917430", "bodyText": "IIUC, a sequence cannot be updated. So if all the children are read-only that indirectly makes the sequence also read-only?\nIf that is the case, if the following check evaluates to true, can't we set the frozen flag to true here? That way in the read-only scenario, we can avoid going through all the children over and over again?", "author": "MaryamZi", "createdAt": "2020-03-30T04:11:15Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -551,6 +551,16 @@ public void freezeDirect() {\n         }\n     }\n \n+    @Override\n+    public synchronized boolean isFrozen() {", "originalCommit": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxOTkwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399919906", "bodyText": "Membership of the sequence is unmodifiable but each individual xml item is not.", "author": "rdhananjaya", "createdAt": "2020-03-30T04:23:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyNjkwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399926907", "bodyText": "Yeah, but if this evaluates to true once, it will always be true after that right?", "author": "MaryamZi", "createdAt": "2020-03-30T04:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzNTcxMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399935710", "bodyText": "Ah yes, I miss that on your first comment.", "author": "rdhananjaya", "createdAt": "2020-03-30T05:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917667", "bodyText": "Shouldn't we override attemptFreeze(), freezeDirect() and freeze() too?", "author": "MaryamZi", "createdAt": "2020-03-30T04:12:22Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "originalCommit": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMTIzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399921238", "bodyText": "We can re-use the super class methods without any ill efect IMO", "author": "rdhananjaya", "createdAt": "2020-03-30T04:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyNzEzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399927132", "bodyText": "Aren't they unnecessary though?", "author": "MaryamZi", "createdAt": "2020-03-30T04:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzNDMwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399934304", "bodyText": "They are sitting high in the hierarchy, providing expected behavior.\nIn my view, overriding them with empty methods are unnecessary.", "author": "rdhananjaya", "createdAt": "2020-03-30T05:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1NjI4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399956287", "bodyText": "freezeDirect() is OK.\nBut for attemptFreeze() if (by the slightest chance) there is an attempt to freeze the same value concurrently there is a chance it'll panic. https://github.com/ballerina-platform/ballerina-lang/blob/master/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/freeze/FreezeUtils.java#L45 unless we set the frozen flag when creating the value itself.\nThis IMO is unnecessary since it's making it read-only is always possible.\nAnd for freeze() I think we can remove freezeDirect() call.\n    @Override\n    public Object freeze() {\n        // freezeDirect(); we can remove this\n        return this;\n    }", "author": "MaryamZi", "createdAt": "2020-03-30T06:37:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyNzExOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r400027119", "bodyText": "If I'm not mistaken freeze action could only be initiated from a cloneReadOnly operation, which means there couldn't be any concurrent invocations", "author": "rdhananjaya", "createdAt": "2020-03-30T08:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYzMjMxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r400632315", "bodyText": "I guess it'll work since we seem to be checking isFrozen() on  copy() results before attempting freezing and  .cloneReadOnly() seems to be calling freezeDirect().", "author": "MaryamZi", "createdAt": "2020-03-31T04:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzkwOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917909", "bodyText": "Can we add some false tests too?", "author": "MaryamZi", "createdAt": "2020-03-30T04:13:33Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -251,6 +251,20 @@ function testFrozenXmlSetChildrenDeep() {\n     authorEm.setChildren(x2);\n }\n \n+function testXMLItemsCloneReadOnly() {\n+    xml x0 = xmllib:concat(xml `<hello>world</hello>`,\n+                        xml `<!-- comment text -->`,\n+                        xml `<?PIT data?>`,\n+                        xml `<item><child>String Content <sub></sub>More Str</child><child></child></item>`);\n+\n+    xml x1 = x0.cloneReadOnly();\n+    assertTrue((x1.<hello>).isReadOnly());\n+    assertTrue((x1.<hello>/*).isReadOnly());\n+    assertTrue(x1[1].isReadOnly());\n+    assertTrue(x1[2].isReadOnly());\n+    assertTrue((x1/**/<child>/*)[0].isReadOnly());", "originalCommit": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMTMwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399921308", "bodyText": "Will do", "author": "rdhananjaya", "createdAt": "2020-03-30T04:30:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzkwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxODA3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399918070", "bodyText": "Shall we use a reason without spaces?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n          \n          \n            \n                    panic e;\n          \n          \n            \n                    error e = panic error(\"AssertionError\", message = \"expected: true, found: \" + value.toString());", "author": "MaryamZi", "createdAt": "2020-03-30T04:14:19Z", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -489,3 +503,10 @@ type FreezeAllowedDepartment record {|\n     string head;\n     (int)...;\n |};\n+\n+function assertTrue(boolean value) {\n+    if !(value) {\n+        error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n+        panic e;", "originalCommit": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMTUwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399921501", "bodyText": "+1, I blindly copied it from some other code will change", "author": "rdhananjaya", "createdAt": "2020-03-30T04:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxODA3MA=="}], "type": "inlineReview"}, {"oid": "e13a2c86297ed55743bad6e962841a3fe02f1f9c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e13a2c86297ed55743bad6e962841a3fe02f1f9c", "message": "Cache freezeStatus of xml sequence", "committedDate": "2020-03-30T05:57:24Z", "type": "commit"}]}