{"pr_number": 769, "pr_title": "Shutdown the producer on IllegalStateException as Kafka's bounded flush method wraps flush exceptions into this type", "pr_createdAt": "2020-10-19T23:18:44Z", "pr_url": "https://github.com/linkedin/brooklin/pull/769", "timeline": [{"oid": "042fd916a7cf89a37068af690ed26c9ccaefc044", "url": "https://github.com/linkedin/brooklin/commit/042fd916a7cf89a37068af690ed26c9ccaefc044", "message": "Shutdown the producer on IllegalStateException as Kafka's bounded flush method wraps flush exceptions into this type", "committedDate": "2020-10-19T23:15:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1ODUzOA==", "url": "https://github.com/linkedin/brooklin/pull/769#discussion_r508158538", "bodyText": "* This method waits up to <code>timeout</code> for the producer to send out all the buffered records.\n     * @param timeout The maximum time to wait for producer to complete. The value should be non-negative.\n     * @param unit The time unit for the <code>timeout</code>\n     * @throws TimeoutException If producer fail to finish in time\n     * @throws InterruptException If the thread is interrupted while blocked\n     * @throws IllegalArgumentException If the <code>timeout</code> is negative.\n     */\n    @Override\n    public void flush(long timeout, TimeUnit unit) {`\n\nAccording to the Javadocs, IllegalArgumentException should only come for negative timeout value. Is this Javadoc comment stale?", "author": "vmaheshw", "createdAt": "2020-10-20T01:43:57Z", "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaProducerWrapper.java", "diffHunk": "@@ -372,15 +372,16 @@ void flush() {\n     if (producer != null) {\n       try {\n         producer.flush(_producerFlushTimeoutMs, TimeUnit.MILLISECONDS);\n-      } catch (InterruptException | TimeoutException e) {\n-        // The KafkaProducer object should not be reused on an interrupted flush\n+      } catch (InterruptException | TimeoutException | IllegalStateException e) {", "originalCommit": "042fd916a7cf89a37068af690ed26c9ccaefc044", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2MTEzNw==", "url": "https://github.com/linkedin/brooklin/pull/769#discussion_r508761137", "bodyText": "It is definitely stale since what Sonam is now catching is IllegalStateException which is not even on that list.", "author": "DEEPTHIKORAT", "createdAt": "2020-10-20T18:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1ODUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc3MDcyMQ==", "url": "https://github.com/linkedin/brooklin/pull/769#discussion_r508770721", "bodyText": "It's not outdated. That's open source Kafka documentation. This flush with timeout API is part of LinkedIn's open source Kafka repo. They handle exceptions differently (they wrap the actual exception in other exceptions)", "author": "somandal", "createdAt": "2020-10-20T19:03:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1ODUzOA=="}], "type": "inlineReview"}, {"oid": "40467ef2cf1150bc26cef0d24e7c5bcf179b4a6c", "url": "https://github.com/linkedin/brooklin/commit/40467ef2cf1150bc26cef0d24e7c5bcf179b4a6c", "message": "Close the producer on any exception", "committedDate": "2020-10-20T19:12:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4NzA5Mw==", "url": "https://github.com/linkedin/brooklin/pull/769#discussion_r508787093", "bodyText": "Nitpick. Only concern I have here is we are masking all exceptions to a generic exception. There could be exceptions which are unexpected and we do not want to handle them? https://www.infoworld.com/article/2073800/beware-the-dangers-of-generic-exceptions.html", "author": "vishwajith-s", "createdAt": "2020-10-20T19:33:30Z", "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaProducerWrapper.java", "diffHunk": "@@ -372,15 +371,16 @@ void flush() {\n     if (producer != null) {\n       try {\n         producer.flush(_producerFlushTimeoutMs, TimeUnit.MILLISECONDS);\n-      } catch (InterruptException | TimeoutException e) {\n-        // The KafkaProducer object should not be reused on an interrupted flush\n+      } catch (Exception e) {", "originalCommit": "40467ef2cf1150bc26cef0d24e7c5bcf179b4a6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4OTUwNA==", "url": "https://github.com/linkedin/brooklin/pull/769#discussion_r508789504", "bodyText": "Discussed with Vish offline. Here we are just closing the producer and then throwing the exception as is. So the callers should get notified of all exceptions and react accordingly. In general though, yes it's bad practice to catch generic 'Exception'.", "author": "somandal", "createdAt": "2020-10-20T19:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4NzA5Mw=="}], "type": "inlineReview"}]}