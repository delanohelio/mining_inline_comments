{"pr_number": 1219, "pr_title": "Full-Trie Mark in Parallel", "pr_createdAt": "2020-07-14T18:16:54Z", "pr_url": "https://github.com/hyperledger/besu/pull/1219", "timeline": [{"oid": "1102f1228dc2106c284adbb8190b03ceba94359b", "url": "https://github.com/hyperledger/besu/commit/1102f1228dc2106c284adbb8190b03ceba94359b", "message": "commit marks only on block boundary\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "fc9976164f540269fa5d42981201f89657e7a0f0", "url": "https://github.com/hyperledger/besu/commit/fc9976164f540269fa5d42981201f89657e7a0f0", "message": "test changes\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "655e571fd19cf232b415c823cdc3576ffbd29b03", "url": "https://github.com/hyperledger/besu/commit/655e571fd19cf232b415c823cdc3576ffbd29b03", "message": "truer in order verification for case where transaction size isn't 1\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "8f6cfaa1692f21433475d6af42780501de75da21", "url": "https://github.com/hyperledger/besu/commit/8f6cfaa1692f21433475d6af42780501de75da21", "message": "flatmap\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "e3e749eec3442e0572699a54ec1b8038f50e0957", "url": "https://github.com/hyperledger/besu/commit/e3e749eec3442e0572699a54ec1b8038f50e0957", "message": "simplify test\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "1cf490ab5103eaa590839c4ba5fb3c209a8bfa2e", "url": "https://github.com/hyperledger/besu/commit/1cf490ab5103eaa590839c4ba5fb3c209a8bfa2e", "message": "switch back to old sweepBefore\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "6dae00c570393c146f8cbc7e7e16ba744699ff4a", "url": "https://github.com/hyperledger/besu/commit/6dae00c570393c146f8cbc7e7e16ba744699ff4a", "message": "remove mentions to tx\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "50247e08a659ed81883390cef4c78f5baa0c25ca", "url": "https://github.com/hyperledger/besu/commit/50247e08a659ed81883390cef4c78f5baa0c25ca", "message": "logging and timing and exiting\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "6a43c1b9b652384d64233a3d57e60699137e1d85", "url": "https://github.com/hyperledger/besu/commit/6a43c1b9b652384d64233a3d57e60699137e1d85", "message": "ignore failure and logging\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "3b866b2bc0fac77314f79853163b719fc38d680d", "url": "https://github.com/hyperledger/besu/commit/3b866b2bc0fac77314f79853163b719fc38d680d", "message": "retry on most errors, fail on a MerkleTrieException\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "785c287c13f2161c9072e256b38c98da2bf04edc", "url": "https://github.com/hyperledger/besu/commit/785c287c13f2161c9072e256b38c98da2bf04edc", "message": "add ops per transaction back to integration test\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "e24e38473ebf63ad112440d7814721dfa39451ca", "url": "https://github.com/hyperledger/besu/commit/e24e38473ebf63ad112440d7814721dfa39451ca", "message": "spotless\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "29e409cbc595d7abb799a522139c0a8c657920ad", "url": "https://github.com/hyperledger/besu/commit/29e409cbc595d7abb799a522139c0a8c657920ad", "message": "medium tx\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "27b5843c099e2cdeb31ed23f6b6175f40c9265bf", "url": "https://github.com/hyperledger/besu/commit/27b5843c099e2cdeb31ed23f6b6175f40c9265bf", "message": "visit all nodes in parallel\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "ba521ff75783c5879ccade6503140b0fb69ac561", "url": "https://github.com/hyperledger/besu/commit/ba521ff75783c5879ccade6503140b0fb69ac561", "message": "moving some stuff around\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "a56881b2f56856aae191c295426355a6ddc3c091", "url": "https://github.com/hyperledger/besu/commit/a56881b2f56856aae191c295426355a6ddc3c091", "message": "change to CompletableFuture and wait on them\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "c4dbca0c42aed001a4353842867ba268ab4165b2", "url": "https://github.com/hyperledger/besu/commit/c4dbca0c42aed001a4353842867ba268ab4165b2", "message": "unlock pending marks once the marks have been added to the tx\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "7e5ab650318ca50f14c297c76e265b5736defaaa", "url": "https://github.com/hyperledger/besu/commit/7e5ab650318ca50f14c297c76e265b5736defaaa", "message": "use fixed thread pool\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "6d41c2b281b6cd98359ca375509a873b52662c5c", "url": "https://github.com/hyperledger/besu/commit/6d41c2b281b6cd98359ca375509a873b52662c5c", "message": "join instead of get\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "190afb3a3ff1470e0cc5d9c611695e8364bbe6d0", "url": "https://github.com/hyperledger/besu/commit/190afb3a3ff1470e0cc5d9c611695e8364bbe6d0", "message": "make single threaded visitAll return void\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "9b3d8bc707a6c7c61f8aafde8ae9134f427953b1", "url": "https://github.com/hyperledger/besu/commit/9b3d8bc707a6c7c61f8aafde8ae9134f427953b1", "message": "report when mark work items finish\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "9900b926180e420225c0095e3caeed25cc7b737c", "url": "https://github.com/hyperledger/besu/commit/9900b926180e420225c0095e3caeed25cc7b737c", "message": "debug -> info\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "c34ea60a3ab500f8826715ecdc2fcda45f9b4f9b", "url": "https://github.com/hyperledger/besu/commit/c34ea60a3ab500f8826715ecdc2fcda45f9b4f9b", "message": "markNodes directly to disk\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "6a4964912528d379ebbb34549d579a6cab95b5ea", "url": "https://github.com/hyperledger/besu/commit/6a4964912528d379ebbb34549d579a6cab95b5ea", "message": "ReadWriteLock for adding nodes during full trie marking\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:50Z", "type": "commit"}, {"oid": "2c2fe05d7c67a8218c604280a3f725cd5ea5df3d", "url": "https://github.com/hyperledger/besu/commit/2c2fe05d7c67a8218c604280a3f725cd5ea5df3d", "message": "make markNode and markNodes both use the same locking mechanism\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:45:51Z", "type": "forcePushed"}, {"oid": "63a744d787b6a5ead3f1835b4b98533ef16ed63c", "url": "https://github.com/hyperledger/besu/commit/63a744d787b6a5ead3f1835b4b98533ef16ed63c", "message": "make markNode and markNodes both use the same locking mechanism\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T21:52:50Z", "type": "forcePushed"}, {"oid": "d5cd282980523767e943e5f31344a8057ce39895", "url": "https://github.com/hyperledger/besu/commit/d5cd282980523767e943e5f31344a8057ce39895", "message": "make markNode and markNodes both use the same locking mechanism\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-07T22:04:39Z", "type": "commit"}, {"oid": "cb228e0f5ca35e208b0baa72d435d8653ae9cde0", "url": "https://github.com/hyperledger/besu/commit/cb228e0f5ca35e208b0baa72d435d8653ae9cde0", "message": "typo\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-10T14:24:42Z", "type": "commit"}, {"oid": "0a252f465173d9ba1ae851872b5fcf1dab22a84d", "url": "https://github.com/hyperledger/besu/commit/0a252f465173d9ba1ae851872b5fcf1dab22a84d", "message": "parallelize *storage* marking instead of whole account subtries\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-26T16:41:57Z", "type": "commit"}, {"oid": "0a252f465173d9ba1ae851872b5fcf1dab22a84d", "url": "https://github.com/hyperledger/besu/commit/0a252f465173d9ba1ae851872b5fcf1dab22a84d", "message": "parallelize *storage* marking instead of whole account subtries\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-26T16:41:57Z", "type": "forcePushed"}, {"oid": "784aa234e2a55dbcdc170eabd4943a47ba3684cb", "url": "https://github.com/hyperledger/besu/commit/784aa234e2a55dbcdc170eabd4943a47ba3684cb", "message": "mark storage tries while visiting state trie\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-08-31T16:30:54Z", "type": "commit"}, {"oid": "0572790cf46647fa6fc53a5a291c8618039f1bdf", "url": "https://github.com/hyperledger/besu/commit/0572790cf46647fa6fc53a5a291c8618039f1bdf", "message": "Merge branch 'master' into pruning-parallel", "committedDate": "2020-09-03T19:19:08Z", "type": "commit"}, {"oid": "224168f3a76ae04a189a2a5a6f30e2138f6af538", "url": "https://github.com/hyperledger/besu/commit/224168f3a76ae04a189a2a5a6f30e2138f6af538", "message": "caller runs if max capacity\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-09-08T16:56:28Z", "type": "commit"}, {"oid": "68de7c084f2b604bd88e38e9427883f6de5c639e", "url": "https://github.com/hyperledger/besu/commit/68de7c084f2b604bd88e38e9427883f6de5c639e", "message": "bring back multiple task generators\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-09-17T23:13:49Z", "type": "commit"}, {"oid": "182f6abe6d70ed854e20864cf8f329bb186fe5e0", "url": "https://github.com/hyperledger/besu/commit/182f6abe6d70ed854e20864cf8f329bb186fe5e0", "message": "Merge remote-tracking branch 'upstream/master' into pruning-parallel", "committedDate": "2020-10-05T14:38:04Z", "type": "commit"}, {"oid": "26f6f8b86ab0714548f6371d9d2a035cff3cb60a", "url": "https://github.com/hyperledger/besu/commit/26f6f8b86ab0714548f6371d9d2a035cff3cb60a", "message": "Merge remote-tracking branch 'upstream/master' into pruning-parallel", "committedDate": "2020-10-21T14:40:59Z", "type": "commit"}, {"oid": "3b21749cfc3948201cc8aa8e6bfbffaa90b12fdf", "url": "https://github.com/hyperledger/besu/commit/3b21749cfc3948201cc8aa8e6bfbffaa90b12fdf", "message": "rename\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:24:48Z", "type": "commit"}, {"oid": "6dbcea78782e1ba71309041b58b1402c78996756", "url": "https://github.com/hyperledger/besu/commit/6dbcea78782e1ba71309041b58b1402c78996756", "message": "documentation\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:34:20Z", "type": "commit"}, {"oid": "f549a4c4bba5bb64e6a46af231814b5c1f6ab380", "url": "https://github.com/hyperledger/besu/commit/f549a4c4bba5bb64e6a46af231814b5c1f6ab380", "message": "static\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:45:15Z", "type": "commit"}, {"oid": "457d469aba4f61000b179884a551c2dce1661303", "url": "https://github.com/hyperledger/besu/commit/457d469aba4f61000b179884a551c2dce1661303", "message": "move constants\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:45:56Z", "type": "commit"}, {"oid": "51abfaa79180b86953121d884cf5564631c93d95", "url": "https://github.com/hyperledger/besu/commit/51abfaa79180b86953121d884cf5564631c93d95", "message": "undo some testing changes\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:47:48Z", "type": "commit"}, {"oid": "e52d809b067a51495ecd5d4b67333efa62cec79e", "url": "https://github.com/hyperledger/besu/commit/e52d809b067a51495ecd5d4b67333efa62cec79e", "message": "thread pool holds 16 tasks\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:51:14Z", "type": "commit"}, {"oid": "0f8dba7899329ab8a63a69dca4c35f212dc23d56", "url": "https://github.com/hyperledger/besu/commit/0f8dba7899329ab8a63a69dca4c35f212dc23d56", "message": "comment fixup\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:52:45Z", "type": "commit"}, {"oid": "9aa005f332c137fd778611691fd94715269e8ebe", "url": "https://github.com/hyperledger/besu/commit/9aa005f332c137fd778611691fd94715269e8ebe", "message": "remove comment\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:54:18Z", "type": "commit"}, {"oid": "6d22d3e01d491fb1e8540102977307e6a3298483", "url": "https://github.com/hyperledger/besu/commit/6d22d3e01d491fb1e8540102977307e6a3298483", "message": "param\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T15:58:40Z", "type": "commit"}, {"oid": "3b91245b00d4b3c3b909cbb2031b24a27251d5fc", "url": "https://github.com/hyperledger/besu/commit/3b91245b00d4b3c3b909cbb2031b24a27251d5fc", "message": "log messages\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T16:11:32Z", "type": "commit"}, {"oid": "08adbb3a470c6509f6bf5ddbde8ed559e09f8f57", "url": "https://github.com/hyperledger/besu/commit/08adbb3a470c6509f6bf5ddbde8ed559e09f8f57", "message": "rename lock\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T16:13:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQyMjYxNA==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r509422614", "bodyText": "Experimentally determined a while ago. Since the rocks db default lock timeout is 1000ms, I aimed for a flush size that was as big as possible that completes in under 500ms", "author": "RatanRSur", "createdAt": "2020-10-21T16:17:43Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/MarkSweepPruner.java", "diffHunk": "@@ -29,23 +29,31 @@\n import java.util.Collections;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.LinkedBlockingDeque;\n+import java.util.concurrent.ThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.locks.ReentrantLock;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReadWriteLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n import java.util.function.Function;\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Stopwatch;\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n \n public class MarkSweepPruner {\n \n-  private static final int DEFAULT_OPS_PER_TRANSACTION = 1000;\n   private static final Logger LOG = LogManager.getLogger();\n   private static final byte[] IN_USE = Bytes.of(1).toArrayUnsafe();\n \n+  private static final int DEFAULT_OPS_PER_TRANSACTION = 50_000;", "originalCommit": "08adbb3a470c6509f6bf5ddbde8ed559e09f8f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYxMDM4Ng==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r509610386", "bodyText": "I see the metrics bug here.", "author": "RatanRSur", "createdAt": "2020-10-21T19:31:16Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/MarkSweepPruner.java", "diffHunk": "@@ -199,52 +253,57 @@ private boolean isMarked(final byte[] key) {\n         Function.identity());\n   }\n \n-  private void processAccountState(final Bytes value) {\n+  private void processAccountState(final Bytes value, final ExecutorService executorService) {\n     final StateTrieAccountValue accountValue = StateTrieAccountValue.readFrom(RLP.input(value));\n     markNode(accountValue.getCodeHash());\n \n     createStorageTrie(accountValue.getStorageRoot())\n-        .visitAll(storageNode -> markNode(storageNode.getHash()));\n+        .visitAll(storageNode -> markNode(storageNode.getHash()), executorService);\n   }\n \n   @VisibleForTesting\n   void markNode(final Bytes32 hash) {\n-    markedNodesCounter.inc();\n-    markLock.lock();\n-    try {\n-      pendingMarks.add(hash);\n-      maybeFlushPendingMarks();\n-    } finally {\n-      markLock.unlock();\n-    }\n+    markThenMaybeFlush(() -> pendingMarks.add(hash));\n   }\n \n   private void markNodes(final Collection<Bytes32> nodeHashes) {\n-    markedNodesCounter.inc(nodeHashes.size());\n-    markLock.lock();\n+    markThenMaybeFlush(() -> pendingMarks.addAll(nodeHashes));\n+  }\n+\n+  private void markThenMaybeFlush(final Runnable nodeMarker) {\n+    // We use the read lock here because pendingMarks is threadsafe and we want to allow all the\n+    // marking threads access simultaneously.\n+    final Lock addLock = pendingMarkLock.readLock();\n+    addLock.lock();\n     try {\n-      pendingMarks.addAll(nodeHashes);\n-      maybeFlushPendingMarks();\n+      nodeMarker.run();\n     } finally {\n-      markLock.unlock();\n+      addLock.unlock();\n     }\n-  }\n+    markedNodesCounter.inc();", "originalCommit": "08adbb3a470c6509f6bf5ddbde8ed559e09f8f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "33d74dd83b6d991571f791700dcd51d5d044980b", "url": "https://github.com/hyperledger/besu/commit/33d74dd83b6d991571f791700dcd51d5d044980b", "message": "fix metrics bug\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T19:37:10Z", "type": "commit"}, {"oid": "bd2b55b6d5160b8df65af1685a013503d67d3670", "url": "https://github.com/hyperledger/besu/commit/bd2b55b6d5160b8df65af1685a013503d67d3670", "message": "rename locks\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-21T19:38:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4Nzg3OQ==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510187879", "bodyText": "(nit) Do you need this?", "author": "mbaxter", "createdAt": "2020-10-22T14:03:05Z", "path": "ethereum/trie/src/main/java/org/hyperledger/besu/ethereum/trie/StoredMerklePatriciaTrie.java", "diffHunk": "@@ -33,6 +38,9 @@\n  * @param <V> The type of values stored by this trie.\n  */\n public class StoredMerklePatriciaTrie<K extends Bytes, V> implements MerklePatriciaTrie<K, V> {\n+  @SuppressWarnings(\"UnusedVariable\")\n+  private static final Logger LOG = LogManager.getLogger();", "originalCommit": "bd2b55b6d5160b8df65af1685a013503d67d3670", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0NDE5MA==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510244190", "bodyText": "Curious about this - is it really very advantageous to bundle up changes into large transactions?  Versus just picking a reasonable size and committing more frequently?  I also wonder if the node were under heavy load if its possible we might hit the timeout.", "author": "mbaxter", "createdAt": "2020-10-22T15:14:17Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/MarkSweepPruner.java", "diffHunk": "@@ -29,23 +29,31 @@\n import java.util.Collections;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.LinkedBlockingDeque;\n+import java.util.concurrent.ThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.locks.ReentrantLock;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReadWriteLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n import java.util.function.Function;\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.Stopwatch;\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n \n public class MarkSweepPruner {\n \n-  private static final int DEFAULT_OPS_PER_TRANSACTION = 1000;\n   private static final Logger LOG = LogManager.getLogger();\n   private static final byte[] IN_USE = Bytes.of(1).toArrayUnsafe();\n \n+  private static final int DEFAULT_OPS_PER_TRANSACTION = 50_000;", "originalCommit": "bd2b55b6d5160b8df65af1685a013503d67d3670", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk5NzI0OA==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510997248", "bodyText": "Sounds reasonable to me, I'll lower it to 10k. Let me know if you think it should go lower.", "author": "RatanRSur", "createdAt": "2020-10-23T16:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0NDE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0ODk0OA==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510248948", "bodyText": "Seems a bit suboptimal to dedicate a thread to just sit and wait for all of this processing to finish.   But may not be worth the rework right now since testing takes so much time.", "author": "mbaxter", "createdAt": "2020-10-22T15:20:35Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/MarkSweepPruner.java", "diffHunk": "@@ -115,20 +125,64 @@ public void prepare() {\n     nodeAddedListenerId = worldStateStorage.addNodeAddedListener(this::markNodes);\n   }\n \n+  /**\n+   * This is a parallel mark implementation.\n+   *\n+   * <p>The parallel task production is by sub-trie, so calling `visitAll` on a root node will\n+   * eventually spawn up to 16 tasks (for a hexary trie).\n+   *\n+   * <p>If we marked each sub-trie in its own thread, with no common queue of tasks, our mark speed\n+   * would be limited by the sub-trie with the maximum number of nodes. In practice for the Ethereum\n+   * mainnet, we see a large imbalance in sub-trie size so without a common task pool the time in\n+   * which there is only 1 thread left marking its big sub-trie would be substantial.\n+   *\n+   * <p>If we were to leave all threads to produce mark tasks before starting to mark, we would run\n+   * out of memory quickly.\n+   *\n+   * <p>If we were to have a constant number of threads producing the mark threads with the others\n+   * consuming them, we would have to optimize the production/consumption balance.\n+   *\n+   * <p>To get the best of both worlds, the marking executor has a {@link\n+   * ThreadPoolExecutor.CallerRunsPolicy} which causes the producing tasks to essentially consume\n+   * their own mark task immediately when the thread pool is full. The resulting behavior is threads\n+   * that mark their own sub-trie until they finish that sub-trie, at which point they switch to\n+   * marking the sub-trie tasks produced by another thread.\n+   *\n+   * @param rootHash The root hash of the whole state trie. Roots of storage tries will be\n+   *     discovered though traversal.\n+   */\n   public void mark(final Hash rootHash) {\n     markOperationCounter.inc();\n     markStopwatch.start();\n+    final ExecutorService markingExecutorService =\n+        new ThreadPoolExecutor(\n+            0,\n+            MAX_MARKING_THREAD_POOL_SIZE,\n+            5L,\n+            TimeUnit.SECONDS,\n+            new LinkedBlockingDeque<>(16),\n+            new ThreadFactoryBuilder()\n+                .setDaemon(true)\n+                .setPriority(Thread.MIN_PRIORITY)\n+                .setNameFormat(this.getClass().getSimpleName() + \"-%d\")\n+                .build(),\n+            new ThreadPoolExecutor.CallerRunsPolicy());\n     createStateTrie(rootHash)\n         .visitAll(\n             node -> {\n-              if (Thread.interrupted()) {\n-                // Since we don't expect to abort marking ourselves,\n-                // our abort process consists only of handling interrupts\n-                throw new RuntimeException(\"Interrupted while marking\");\n-              }\n               markNode(node.getHash());\n-              node.getValue().ifPresent(this::processAccountState);\n-            });\n+              node.getValue()\n+                  .ifPresent(value -> processAccountState(value, markingExecutorService));\n+            },\n+            markingExecutorService)\n+        .join() /* This will block on all the marking tasks to be _produced_ but doesn't guarantee that the marking tasks have been completed. */;", "originalCommit": "bd2b55b6d5160b8df65af1685a013503d67d3670", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2OTU5NQ==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510269595", "bodyText": "Trying to rework to be non-blocking now", "author": "RatanRSur", "createdAt": "2020-10-22T15:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0ODk0OA=="}], "type": "inlineReview"}, {"oid": "97110e9a54a626bf8f1c9cdce48b78b32bde8a19", "url": "https://github.com/hyperledger/besu/commit/97110e9a54a626bf8f1c9cdce48b78b32bde8a19", "message": "typo\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-22T15:35:35Z", "type": "commit"}, {"oid": "26ec13898c21091f704d5ab13b6411eefbbf8fd0", "url": "https://github.com/hyperledger/besu/commit/26ec13898c21091f704d5ab13b6411eefbbf8fd0", "message": "switch to non-blocking code\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-22T16:23:30Z", "type": "commit"}, {"oid": "5700395e0a9ae5fc29c01eb920747d1885539c68", "url": "https://github.com/hyperledger/besu/commit/5700395e0a9ae5fc29c01eb920747d1885539c68", "message": "comment\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-22T16:30:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0NTE0OQ==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510945149", "bodyText": "It seems unexpected that the root node would be processed in the calling thread - this should probably happen in the executor.", "author": "mbaxter", "createdAt": "2020-10-23T14:59:57Z", "path": "ethereum/trie/src/main/java/org/hyperledger/besu/ethereum/trie/SimpleMerklePatriciaTrie.java", "diffHunk": "@@ -99,8 +101,22 @@ public void commit(final NodeUpdater nodeUpdater) {\n   }\n \n   @Override\n-  public void visitAll(final Consumer<Node<V>> visitor) {\n-    root.accept(new AllNodesVisitor<>(visitor));\n+  public void visitAll(final Consumer<Node<V>> nodeConsumer) {\n+    root.accept(new AllNodesVisitor<>(nodeConsumer));\n+  }\n+\n+  @Override\n+  public CompletableFuture<Void> visitAll(\n+      final Consumer<Node<V>> nodeConsumer, final ExecutorService executorService) {\n+    nodeConsumer.accept(root);", "originalCommit": "5700395e0a9ae5fc29c01eb920747d1885539c68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0Njg5MA==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510946890", "bodyText": "Same comment here - the root node should be processed in the executor.", "author": "mbaxter", "createdAt": "2020-10-23T15:02:22Z", "path": "ethereum/trie/src/main/java/org/hyperledger/besu/ethereum/trie/StoredMerklePatriciaTrie.java", "diffHunk": "@@ -125,8 +133,23 @@ public void commit(final NodeUpdater nodeUpdater) {\n   }\n \n   @Override\n-  public void visitAll(final Consumer<Node<V>> visitor) {\n-    root.accept(new AllNodesVisitor<>(visitor));\n+  public void visitAll(final Consumer<Node<V>> nodeConsumer) {\n+    root.accept(new AllNodesVisitor<>(nodeConsumer));\n+  }\n+\n+  @Override\n+  public CompletableFuture<Void> visitAll(\n+      final Consumer<Node<V>> nodeConsumer, final ExecutorService executorService) {\n+    nodeConsumer.accept(root);", "originalCommit": "5700395e0a9ae5fc29c01eb920747d1885539c68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0OTAxNg==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r510949016", "bodyText": "Alternatively, I'd be tempted to just expose getRoot() on the Trie interface, and move this logic into the Pruner...", "author": "mbaxter", "createdAt": "2020-10-23T15:05:37Z", "path": "ethereum/trie/src/main/java/org/hyperledger/besu/ethereum/trie/SimpleMerklePatriciaTrie.java", "diffHunk": "@@ -99,8 +101,22 @@ public void commit(final NodeUpdater nodeUpdater) {\n   }\n \n   @Override\n-  public void visitAll(final Consumer<Node<V>> visitor) {\n-    root.accept(new AllNodesVisitor<>(visitor));\n+  public void visitAll(final Consumer<Node<V>> nodeConsumer) {\n+    root.accept(new AllNodesVisitor<>(nodeConsumer));\n+  }\n+\n+  @Override\n+  public CompletableFuture<Void> visitAll(\n+      final Consumer<Node<V>> nodeConsumer, final ExecutorService executorService) {\n+    nodeConsumer.accept(root);", "originalCommit": "5700395e0a9ae5fc29c01eb920747d1885539c68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwNDY2NA==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r511004664", "bodyText": "I kinda like it being on the Trie because we're adding other traversal methods there. It becomes one place to look various types of trie iteration. Not sure if I understood what you were suggesting so does that make sense?", "author": "RatanRSur", "createdAt": "2020-10-23T16:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0OTAxNg=="}], "type": "inlineReview"}, {"oid": "76367cc80d9eb621d5123775fa59cbb27fc4a74d", "url": "https://github.com/hyperledger/besu/commit/76367cc80d9eb621d5123775fa59cbb27fc4a74d", "message": "Revert \"switch to non-blocking code\"\n\nThis reverts commit 26ec13898c21091f704d5ab13b6411eefbbf8fd0.\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-23T15:45:23Z", "type": "commit"}, {"oid": "e1d15adf489b6fd419d7ad2b84b80950d07f0e31", "url": "https://github.com/hyperledger/besu/commit/e1d15adf489b6fd419d7ad2b84b80950d07f0e31", "message": "Revert \"comment\"\n\nThis reverts commit 5700395e0a9ae5fc29c01eb920747d1885539c68.\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-23T15:45:58Z", "type": "commit"}, {"oid": "40de52a1770d8063d2901edd1b2a46abe3e5cab3", "url": "https://github.com/hyperledger/besu/commit/40de52a1770d8063d2901edd1b2a46abe3e5cab3", "message": "remove unused var\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-23T15:46:32Z", "type": "commit"}, {"oid": "5fb2372059538870abe1130fc4749d19364b0038", "url": "https://github.com/hyperledger/besu/commit/5fb2372059538870abe1130fc4749d19364b0038", "message": "process root node in executor\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-23T15:48:46Z", "type": "commit"}, {"oid": "e48fe7ec86d0af3c5543f870552cf6d247bb2806", "url": "https://github.com/hyperledger/besu/commit/e48fe7ec86d0af3c5543f870552cf6d247bb2806", "message": "lower ops per tx\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-23T16:21:33Z", "type": "commit"}, {"oid": "4d3bd8bd9d7e4bd7052ac3c8da1fde193a6317d3", "url": "https://github.com/hyperledger/besu/commit/4d3bd8bd9d7e4bd7052ac3c8da1fde193a6317d3", "message": "Merge remote-tracking branch 'upstream/master' into pruning-parallel", "committedDate": "2020-10-23T16:21:56Z", "type": "commit"}, {"oid": "aa15d98ec424f7907b2874e0cba2aad02de30031", "url": "https://github.com/hyperledger/besu/commit/aa15d98ec424f7907b2874e0cba2aad02de30031", "message": "errata\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-23T16:48:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0MDgxNg==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r511140816", "bodyText": "For this change, I think you need to bump up your queue size to 17 in the Pruner.  This is part of why I suggested moving this logic to the Pruner - it feels a bit tightly coupled in terms of how the traversal is happening and the required queue size, etc.", "author": "mbaxter", "createdAt": "2020-10-23T20:29:27Z", "path": "ethereum/trie/src/main/java/org/hyperledger/besu/ethereum/trie/SimpleMerklePatriciaTrie.java", "diffHunk": "@@ -108,14 +110,17 @@ public void visitAll(final Consumer<Node<V>> nodeConsumer) {\n   @Override\n   public CompletableFuture<Void> visitAll(\n       final Consumer<Node<V>> nodeConsumer, final ExecutorService executorService) {\n-    nodeConsumer.accept(root);\n     return CompletableFuture.allOf(\n-        root.getChildren().stream()\n-            .map(\n-                rootChild ->\n-                    CompletableFuture.runAsync(\n-                        () -> rootChild.accept(new AllNodesVisitor<>(nodeConsumer)),\n-                        executorService))\n+        Stream.concat(\n+                Stream.of(\n+                    CompletableFuture.runAsync(() -> nodeConsumer.accept(root), executorService)),", "originalCommit": "5fb2372059538870abe1130fc4749d19364b0038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5ODYyNg==", "url": "https://github.com/hyperledger/besu/pull/1219#discussion_r511998626", "bodyText": "Maybe this is wrong but in my mental model, the 16 never mattered too much. It could very well be 2, or 7, or whatever. The reason being that the main thing we're expecting to do is to start marking sub-tries almost immediately through the CallerRuns policy.", "author": "RatanRSur", "createdAt": "2020-10-26T14:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0MDgxNg=="}], "type": "inlineReview"}]}