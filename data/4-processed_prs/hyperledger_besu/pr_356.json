{"pr_number": 356, "pr_title": "Validate private transaction before sending to enclave", "pr_createdAt": "2020-02-03T01:12:11Z", "pr_url": "https://github.com/hyperledger/besu/pull/356", "timeline": [{"oid": "70c61003b62e74dbad9093e0fc87b6f310899eb6", "url": "https://github.com/hyperledger/besu/commit/70c61003b62e74dbad9093e0fc87b6f310899eb6", "message": "validate private transactions before sending to enclave\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-24T04:19:18Z", "type": "commit"}, {"oid": "0269a171153f8f2ce11966a4bb95b64542ac5b0a", "url": "https://github.com/hyperledger/besu/commit/0269a171153f8f2ce11966a4bb95b64542ac5b0a", "message": "spotless\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-24T04:42:35Z", "type": "commit"}, {"oid": "c7eeeccd8268ead09cb5e6228b5c3941dae6577e", "url": "https://github.com/hyperledger/besu/commit/c7eeeccd8268ead09cb5e6228b5c3941dae6577e", "message": "fix PrivDistributeRawTransaction UT\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-24T05:16:09Z", "type": "commit"}, {"oid": "06f02f5132984ed2925f3bdbd1fce257230cd544", "url": "https://github.com/hyperledger/besu/commit/06f02f5132984ed2925f3bdbd1fce257230cd544", "message": "wip\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-28T04:30:51Z", "type": "commit"}, {"oid": "08f8fb3ca93247332725922e0a2cf8404290e024", "url": "https://github.com/hyperledger/besu/commit/08f8fb3ca93247332725922e0a2cf8404290e024", "message": "unit tests\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-30T05:44:48Z", "type": "commit"}, {"oid": "2f3ee18c9a6af1e9a2f7926351e3bae8a3f2e990", "url": "https://github.com/hyperledger/besu/commit/2f3ee18c9a6af1e9a2f7926351e3bae8a3f2e990", "message": "Merge branch 'master' into validate_private_tx_before_enclave", "committedDate": "2020-01-30T06:53:08Z", "type": "commit"}, {"oid": "d6b7217d9a2a47f8fd1753a1f7c415b5b56480a3", "url": "https://github.com/hyperledger/besu/commit/d6b7217d9a2a47f8fd1753a1f7c415b5b56480a3", "message": "small refactoring changes\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-30T07:13:19Z", "type": "commit"}, {"oid": "e8129dfeb9a9d446fa3995ec886176a94c891813", "url": "https://github.com/hyperledger/besu/commit/e8129dfeb9a9d446fa3995ec886176a94c891813", "message": "privateTransactionValidator tests\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-30T23:09:19Z", "type": "commit"}, {"oid": "f9e321fbae9b8ebf71ac631e675aeb23ad95f3b5", "url": "https://github.com/hyperledger/besu/commit/f9e321fbae9b8ebf71ac631e675aeb23ad95f3b5", "message": "renaming some methods\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-01-30T23:09:36Z", "type": "commit"}, {"oid": "8aa4f991ea46339c76dae9a235bdc62c16e01133", "url": "https://github.com/hyperledger/besu/commit/8aa4f991ea46339c76dae9a235bdc62c16e01133", "message": "private send tx ut\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-03T00:51:55Z", "type": "commit"}, {"oid": "c0f0b586c897da17b70d02df1dfe259a8836a626", "url": "https://github.com/hyperledger/besu/commit/c0f0b586c897da17b70d02df1dfe259a8836a626", "message": "cleanup ut\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-03T00:56:25Z", "type": "commit"}, {"oid": "e2c4c8b92f9456e5dc9be753696a76906b608bb0", "url": "https://github.com/hyperledger/besu/commit/e2c4c8b92f9456e5dc9be753696a76906b608bb0", "message": "rename uts\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-03T01:05:20Z", "type": "commit"}, {"oid": "ffb913130b01f6e2af1a528b8e481c3c3855da18", "url": "https://github.com/hyperledger/besu/commit/ffb913130b01f6e2af1a528b8e481c3c3855da18", "message": "Merge branch 'master' into validate_private_tx_before_enclave", "committedDate": "2020-02-03T01:12:37Z", "type": "commit"}, {"oid": "15d0c9b30dde7473b284e7244b71cf2b78cc568a", "url": "https://github.com/hyperledger/besu/commit/15d0c9b30dde7473b284e7244b71cf2b78cc568a", "message": "add license header\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-03T01:17:58Z", "type": "commit"}, {"oid": "21376201ce7641d552741dad807aa5c9a33f6645", "url": "https://github.com/hyperledger/besu/commit/21376201ce7641d552741dad807aa5c9a33f6645", "message": "fix ut: wip\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-03T01:48:36Z", "type": "commit"}, {"oid": "265b38a76b2dbd3567180aa8c5d9a1e630b3cf5d", "url": "https://github.com/hyperledger/besu/commit/265b38a76b2dbd3567180aa8c5d9a1e630b3cf5d", "message": "fix ut\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-03T01:55:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwNDcxNA==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r373904714", "bodyText": "nit: Should besu proper depend upon web3j?", "author": "rain-on", "createdAt": "2020-02-03T02:51:59Z", "path": "ethereum/api/build.gradle", "diffHunk": "@@ -59,6 +59,7 @@ dependencies {\n   implementation 'org.apache.tuweni:tuweni-units'\n   implementation 'org.bouncycastle:bcprov-jdk15on'\n   implementation 'org.springframework.security:spring-security-crypto'\n+  implementation 'org.web3j:besu:4.5.11'", "originalCommit": "265b38a76b2dbd3567180aa8c5d9a1e630b3cf5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzMTA2OQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r373931069", "bodyText": "not sure, we could add the privacy group calculation to Tuweni use that from both Orion and Besu?", "author": "jframe", "createdAt": "2020-02-03T05:52:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwNDcxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwNDg3NQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r373904875", "bodyText": "you can move this into the try block - then you don't need the privateTransaction variable", "author": "rain-on", "createdAt": "2020-02-03T02:53:16Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/PrivacySendTransaction.java", "diffHunk": "@@ -46,48 +54,57 @@ public PrivacySendTransaction(\n     this.enclavePublicKeyProvider = enclavePublicKeyProvider;\n   }\n \n-  public PrivateTransaction validateAndDecodeRequest(final JsonRpcRequestContext request)\n+  public PrivateTransaction decode(final JsonRpcRequestContext request)\n       throws ErrorResponseException {\n     if (request.getRequest().getParamLength() != 1) {\n       throw new ErrorResponseException(\n-          new JsonRpcErrorResponse(request.getRequest().getId(), JsonRpcError.INVALID_PARAMS));\n+          new JsonRpcErrorResponse(request.getRequest().getId(), INVALID_PARAMS));\n     }\n     final String rawPrivateTransaction = request.getRequiredParameter(0, String.class);\n     final PrivateTransaction privateTransaction;\n     try {\n       privateTransaction = decodeRawTransaction(rawPrivateTransaction);\n     } catch (final InvalidJsonRpcRequestException e) {\n       throw new ErrorResponseException(\n-          new JsonRpcErrorResponse(request.getRequest().getId(), JsonRpcError.DECODE_ERROR));\n+          new JsonRpcErrorResponse(request.getRequest().getId(), DECODE_ERROR));\n     }\n-    if (!privateTransaction.getValue().isZero()) {\n+    return privateTransaction;", "originalCommit": "265b38a76b2dbd3567180aa8c5d9a1e630b3cf5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwNjA2MQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r373906061", "bodyText": "nit: Could/shoud this take just a JsonRpcRequest - rather than the whole context?\nHaving said that this is a funny class - it takes Json input, and produces outputs business objects, just not sure what that means right now", "author": "rain-on", "createdAt": "2020-02-03T03:00:51Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/PrivacySendTransaction.java", "diffHunk": "@@ -46,48 +54,57 @@ public PrivacySendTransaction(\n     this.enclavePublicKeyProvider = enclavePublicKeyProvider;\n   }\n \n-  public PrivateTransaction validateAndDecodeRequest(final JsonRpcRequestContext request)\n+  public PrivateTransaction decode(final JsonRpcRequestContext request)", "originalCommit": "265b38a76b2dbd3567180aa8c5d9a1e630b3cf5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e18b95eaf1d86ec6818c5d233185d69dd03ad6a", "url": "https://github.com/hyperledger/besu/commit/7e18b95eaf1d86ec6818c5d233185d69dd03ad6a", "message": "remove privacy send transaction helper class\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-04T02:31:42Z", "type": "commit"}, {"oid": "237b109ed067338b3621d1148743818c1363784c", "url": "https://github.com/hyperledger/besu/commit/237b109ed067338b3621d1148743818c1363784c", "message": "spotless\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-04T02:49:00Z", "type": "commit"}, {"oid": "3c481bdf02d13f8758b9530d784c44021d02a26e", "url": "https://github.com/hyperledger/besu/commit/3c481bdf02d13f8758b9530d784c44021d02a26e", "message": "fix unit test\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-04T04:00:55Z", "type": "commit"}, {"oid": "c1379814ef914cfe454c18eb2f2703f9d4db0a71", "url": "https://github.com/hyperledger/besu/commit/c1379814ef914cfe454c18eb2f2703f9d4db0a71", "message": "besu implementation of eea privacy group generation\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-04T05:37:39Z", "type": "commit"}, {"oid": "9fe45d50c254c657afd50282f692710709c5968b", "url": "https://github.com/hyperledger/besu/commit/9fe45d50c254c657afd50282f692710709c5968b", "message": "license header & finals\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-04T05:40:51Z", "type": "commit"}, {"oid": "9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "url": "https://github.com/hyperledger/besu/commit/9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "message": "fix bug in privacy group duplicate handling\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-04T06:04:22Z", "type": "commit"}, {"oid": "c886a63b32682c77510efe9cdbab18f9708842f4", "url": "https://github.com/hyperledger/besu/commit/c886a63b32682c77510efe9cdbab18f9708842f4", "message": "rename method\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-05T23:09:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyMzgxNg==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375623816", "bodyText": "nit: is it worth moving this to the top of the function so you can use it for the JsonRpcErrorResponse (line 78)?", "author": "rain-on", "createdAt": "2020-02-06T03:24:11Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/eea/EeaSendRawTransaction.java", "diffHunk": "@@ -63,45 +63,42 @@ public String getName() {\n \n   @Override\n   public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n-    final PrivateTransaction privateTransaction;\n-    try {\n-      privateTransaction = privacySendTransaction.validateAndDecodeRequest(requestContext);\n-    } catch (final ErrorResponseException e) {\n-      return e.getResponse();\n-    }\n+    final String rawPrivateTransaction = requestContext.getRequiredParameter(0, String.class);\n \n-    final SendTransactionResponse sendTransactionResponse;\n     try {\n-      sendTransactionResponse =\n-          privacyController.sendTransaction(\n-              privateTransaction, enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser()));\n+      final PrivateTransaction privateTransaction =\n+          PrivateTransaction.readFrom(RLP.input(Bytes.fromHexString(rawPrivateTransaction)));\n+\n+      final String enclavePublicKey =\n+          enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser());\n+      final ValidationResult<TransactionInvalidReason> validationResult =\n+          privacyController.validatePrivateTransaction(privateTransaction, enclavePublicKey);\n+      if (!validationResult.isValid()) {\n+        return new JsonRpcErrorResponse(\n+            requestContext.getRequest().getId(),\n+            convertTransactionInvalidReason(validationResult.getInvalidReason()));\n+      }\n+\n+      final String enclaveKey =\n+          privacyController.sendTransaction(privateTransaction, enclavePublicKey);\n+      final Transaction privacyMarkerTransaction =\n+          privacyController.createPrivacyMarkerTransaction(enclaveKey, privateTransaction);\n+\n+      final Object id = requestContext.getRequest().getId();", "originalCommit": "9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzNDE4OA==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375634188", "bodyText": "done", "author": "jframe", "createdAt": "2020-02-06T04:21:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyMzgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNDAwNw==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375624007", "bodyText": "nit: any word if we need to validate on distribute? Seems better, but that said, its validity now does not reflect its validity when mined.", "author": "rain-on", "createdAt": "2020-02-06T03:25:18Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivDistributeRawTransaction.java", "diffHunk": "@@ -60,35 +60,38 @@ public String getName() {\n \n   @Override\n   public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n-    final PrivateTransaction privateTransaction;\n-    try {\n-      privateTransaction = privacySendTransaction.validateAndDecodeRequest(requestContext);\n-    } catch (ErrorResponseException e) {\n-      return e.getResponse();\n-    }\n+    final String rawPrivateTransaction = requestContext.getRequiredParameter(0, String.class);\n \n-    final SendTransactionResponse sendTransactionResponse;\n     try {\n-      sendTransactionResponse =\n-          privacyController.sendTransaction(\n-              privateTransaction, enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser()));\n+      final PrivateTransaction privateTransaction =\n+          PrivateTransaction.readFrom(RLP.input(Bytes.fromHexString(rawPrivateTransaction)));\n+\n+      final String enclavePublicKey =\n+          enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser());\n+      final ValidationResult<TransactionInvalidReason> validationResult =", "originalCommit": "9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzNDYzNQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375634635", "bodyText": "Not sure. But it was doing validate before, I haven't changed this behaviour.", "author": "jframe", "createdAt": "2020-02-06T04:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNDAwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNDc2NQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375624765", "bodyText": "Is the API meant to return a hex string? Or a Base64 String? I suppose it depends - what goes into the PMT? Hex or Base64?", "author": "rain-on", "createdAt": "2020-02-06T03:28:59Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivDistributeRawTransaction.java", "diffHunk": "@@ -60,35 +60,38 @@ public String getName() {\n \n   @Override\n   public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n-    final PrivateTransaction privateTransaction;\n-    try {\n-      privateTransaction = privacySendTransaction.validateAndDecodeRequest(requestContext);\n-    } catch (ErrorResponseException e) {\n-      return e.getResponse();\n-    }\n+    final String rawPrivateTransaction = requestContext.getRequiredParameter(0, String.class);\n \n-    final SendTransactionResponse sendTransactionResponse;\n     try {\n-      sendTransactionResponse =\n-          privacyController.sendTransaction(\n-              privateTransaction, enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser()));\n+      final PrivateTransaction privateTransaction =\n+          PrivateTransaction.readFrom(RLP.input(Bytes.fromHexString(rawPrivateTransaction)));\n+\n+      final String enclavePublicKey =\n+          enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser());\n+      final ValidationResult<TransactionInvalidReason> validationResult =\n+          privacyController.validatePrivateTransaction(privateTransaction, enclavePublicKey);\n+      if (!validationResult.isValid()) {\n+        return new JsonRpcErrorResponse(\n+            requestContext.getRequest().getId(),\n+            convertTransactionInvalidReason(validationResult.getInvalidReason()));\n+      }\n+\n+      final String enclaveKey =\n+          privacyController.sendTransaction(privateTransaction, enclavePublicKey);\n+      return new JsonRpcSuccessResponse(\n+          requestContext.getRequest().getId(), hexEncodeEnclaveKey(enclaveKey));\n     } catch (final MultiTenancyValidationException e) {\n       LOG.error(\"Unauthorized privacy multi-tenancy rpc request. {}\", e.getMessage());\n       return new JsonRpcErrorResponse(requestContext.getRequest().getId(), ENCLAVE_ERROR);\n+    } catch (final IllegalArgumentException | RLPException e) {\n+      return new JsonRpcErrorResponse(requestContext.getRequest().getId(), DECODE_ERROR);\n     } catch (final Exception e) {\n       return new JsonRpcErrorResponse(\n-          requestContext.getRequest().getId(),\n-          JsonRpcEnclaveErrorConverter.convertEnclaveInvalidReason(e.getMessage()));\n+          requestContext.getRequest().getId(), convertEnclaveInvalidReason(e.getMessage()));\n     }\n+  }\n \n-    return privacySendTransaction.validateAndExecute(\n-        requestContext,\n-        privateTransaction,\n-        sendTransactionResponse.getPrivacyGroupId(),\n-        () ->\n-            new JsonRpcSuccessResponse(\n-                requestContext.getRequest().getId(),\n-                Bytes.wrap(Base64.getDecoder().decode(sendTransactionResponse.getEnclaveKey()))\n-                    .toHexString()));\n+  private String hexEncodeEnclaveKey(final String enclaveKey) {", "originalCommit": "9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzNTIyMg==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375635222", "bodyText": "It's base64 string in the PMT. Why this returns hex don't know, this is what is what already doing. Presumably because values are normally hex encoded in Ethereum RPCs.", "author": "jframe", "createdAt": "2020-02-06T04:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNDc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNTI3OQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375625279", "bodyText": "is there a reason this isn't a function on privateTransaction?", "author": "rain-on", "createdAt": "2020-02-06T03:31:31Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/DefaultPrivacyController.java", "diffHunk": "@@ -235,13 +226,14 @@ private SendResponse sendRequest(\n     }\n   }\n \n-  private String getPrivacyGroupId(final String key, final String privateFrom) {\n-    LOG.debug(\"Getting privacy group for key {} and privateFrom {}\", key, privateFrom);\n-    try {\n-      return enclave.receive(key, privateFrom).getPrivacyGroupId();\n-    } catch (final RuntimeException e) {\n-      LOG.error(\"Failed to retrieve private transaction in enclave\", e);\n-      throw e;\n+  private String privacyGroupId(final PrivateTransaction privateTransaction) {", "originalCommit": "9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzNjk3Mg==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375636972", "bodyText": "done", "author": "jframe", "createdAt": "2020-02-06T04:37:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNTI3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNTU5NQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375625595", "bodyText": "wondering if this could be a more useful log msg if it included the transaction id (if such thing exists?)", "author": "rain-on", "createdAt": "2020-02-06T03:33:15Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "diffHunk": "@@ -35,6 +36,15 @@ public PrivateTransactionValidator(final Optional<BigInteger> chainId) {\n \n   public ValidationResult<TransactionValidator.TransactionInvalidReason> validate(\n       final PrivateTransaction transaction, final Long accountNonce) {\n+    LOG.debug(\"Validating private transaction fields\");", "originalCommit": "9d3fec5127cb6982efbbd4648bd3469bf4d77de4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzNjA4OQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r375636089", "bodyText": "done. including the transaction hash on logs", "author": "jframe", "createdAt": "2020-02-06T04:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNTU5NQ=="}], "type": "inlineReview"}, {"oid": "3dc38aaff1c2a3c550e8fd8ae2142f4a397e956b", "url": "https://github.com/hyperledger/besu/commit/3dc38aaff1c2a3c550e8fd8ae2142f4a397e956b", "message": "rename test variables\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-06T04:11:10Z", "type": "commit"}, {"oid": "7714111983e706ed1775e8e7f06c2bfe805b8e2f", "url": "https://github.com/hyperledger/besu/commit/7714111983e706ed1775e8e7f06c2bfe805b8e2f", "message": "reuse request id in rpcs\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-06T04:29:09Z", "type": "commit"}, {"oid": "e8a978d055e8c89fe39ece7d4e8341798307f921", "url": "https://github.com/hyperledger/besu/commit/e8a978d055e8c89fe39ece7d4e8341798307f921", "message": "include transaction hash on debug logs\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-06T04:32:28Z", "type": "commit"}, {"oid": "cbd1c218960ff1571f3f194dc8ad04e072086e22", "url": "https://github.com/hyperledger/besu/commit/cbd1c218960ff1571f3f194dc8ad04e072086e22", "message": "move privacyGroup calculation onto PrivateTransaction\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-06T04:40:09Z", "type": "commit"}, {"oid": "adfdc6c8dc062275dcdc979d0b933435cc1d4f56", "url": "https://github.com/hyperledger/besu/commit/adfdc6c8dc062275dcdc979d0b933435cc1d4f56", "message": "Merge branch 'master' into validate_private_tx_before_enclave", "committedDate": "2020-02-07T02:59:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNDI2Ng==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r376214266", "bodyText": "generate does not sound right for me. Maybe calculateEeaPrivacyGroupId?", "author": "pinges", "createdAt": "2020-02-07T04:55:22Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivacyGroupUtil.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.privacy;\n+\n+import org.hyperledger.besu.crypto.Hash;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class PrivacyGroupUtil {\n+\n+  public static String generateEeaPrivacyGroupId(", "originalCommit": "adfdc6c8dc062275dcdc979d0b933435cc1d4f56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIzMzE3MQ==", "url": "https://github.com/hyperledger/besu/pull/356#discussion_r376233171", "bodyText": "done", "author": "jframe", "createdAt": "2020-02-07T06:32:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNDI2Ng=="}], "type": "inlineReview"}, {"oid": "3ede57d5de5aad4073d9926c1ccd7172b94bff65", "url": "https://github.com/hyperledger/besu/commit/3ede57d5de5aad4073d9926c1ccd7172b94bff65", "message": "rename generateEeaPrivacyGroupId -> calculateEeaPrivacyGroupId\n\nSigned-off-by: Jason Frame <jasonwframe@gmail.com>", "committedDate": "2020-02-07T06:32:33Z", "type": "commit"}, {"oid": "10534ee1ec71774547f9a8693ce3abc1586b4b5e", "url": "https://github.com/hyperledger/besu/commit/10534ee1ec71774547f9a8693ce3abc1586b4b5e", "message": "Merge branch 'master' into validate_private_tx_before_enclave", "committedDate": "2020-02-10T00:00:42Z", "type": "commit"}]}