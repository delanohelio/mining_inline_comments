{"pr_number": 964, "pr_title": "Eip-2537 - BLS12-381 precompiles", "pr_createdAt": "2020-05-20T20:13:00Z", "pr_url": "https://github.com/hyperledger/besu/pull/964", "timeline": [{"oid": "2129920eac67ce38bec952e81b21afcd96ad9e48", "url": "https://github.com/hyperledger/besu/commit/2129920eac67ce38bec952e81b21afcd96ad9e48", "message": "BLS12-381 precompiled contract support\n\ninitial binding onto eth_parings via JNA, with test cases\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:07Z", "type": "commit"}, {"oid": "e73e7d318a74ea502eeb4f87f2a33f04c3bdc327", "url": "https://github.com/hyperledger/besu/commit/e73e7d318a74ea502eeb4f87f2a33f04c3bdc327", "message": "update to besu-native library, update testcases\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "c754532f6e9df1a37c10ffd870c2da67f70c414a", "url": "https://github.com/hyperledger/besu/commit/c754532f6e9df1a37c10ffd870c2da67f70c414a", "message": "presumptive addresses for BLS precompiles\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "2a8b83af6e7dc51b8882693d783b961b0a6c88ab", "url": "https://github.com/hyperledger/besu/commit/2a8b83af6e7dc51b8882693d783b961b0a6c88ab", "message": "spotless and errorprone\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "7a405e8dde046c803c10accc32b6222b66dff08d", "url": "https://github.com/hyperledger/besu/commit/7a405e8dde046c803c10accc32b6222b66dff08d", "message": "use released libraries\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "8c823ff1fca12e88049d86fe503cde765c8feddd", "url": "https://github.com/hyperledger/besu/commit/8c823ff1fca12e88049d86fe503cde765c8feddd", "message": "wire contracts into precompile registry and test via registration.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "e4e305bf22ba70baae2c064b0891f4d04f304915", "url": "https://github.com/hyperledger/besu/commit/e4e305bf22ba70baae2c064b0891f4d04f304915", "message": "undo unneeded changes.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "efe9130f9d12dc5ac7265a1bbd0d0aaa8eea7b04", "url": "https://github.com/hyperledger/besu/commit/efe9130f9d12dc5ac7265a1bbd0d0aaa8eea7b04", "message": "undo unneeded changes.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "7cd36f872a76334a694c2cce10eaa84d189955d9", "url": "https://github.com/hyperledger/besu/commit/7cd36f872a76334a694c2cce10eaa84d189955d9", "message": "LGTM.com fixes, integer overflows\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "commit"}, {"oid": "7cd36f872a76334a694c2cce10eaa84d189955d9", "url": "https://github.com/hyperledger/besu/commit/7cd36f872a76334a694c2cce10eaa84d189955d9", "message": "LGTM.com fixes, integer overflows\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:13:16Z", "type": "forcePushed"}, {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823", "url": "https://github.com/hyperledger/besu/commit/ddf2b9411fab61a3da4f9e283ef49dcc7f249823", "message": "missed contract registration location\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-20T21:38:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjE2NQ==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428576165", "bodyText": "do we need to perform additional checks if input is null?", "author": "usmansaleem", "createdAt": "2020-05-21T10:39:15Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12G1MultiExpPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12G1MultiExpPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12G1MultiExpPrecompiledContract() {\n+    super(\"BLS12_G1MULTIEXP\", LibEthPairings.BLS12_G1MULTIEXP_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {", "originalCommit": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczMjU2MQ==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428732561", "bodyText": "none of the other precompiles null check, and I would expect one of our tests to induce a npe if it were possible.", "author": "shemnon", "createdAt": "2020-05-21T15:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3Njc5OQ==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428576799", "bodyText": "nit: 110_000", "author": "usmansaleem", "createdAt": "2020-05-21T10:40:48Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12MapFp2ToG2PrecompiledContract.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12MapFp2ToG2PrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12MapFp2ToG2PrecompiledContract() {\n+    super(\"BLS12_MAP_FIELD_TO_CURVE\", LibEthPairings.BLS12_MAP_FP2_TO_G2_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    return Gas.of(110000);", "originalCommit": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNDU0Mg==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428734542", "bodyText": "fixed, and a some other places in BLS contracts.", "author": "shemnon", "createdAt": "2020-05-21T15:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3Njc5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NzE2OA==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428577168", "bodyText": "why considering 23_000 as large?", "author": "usmansaleem", "createdAt": "2020-05-21T10:41:45Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12PairingPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12PairingPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12PairingPrecompiledContract() {\n+    super(\"BLS12_PAIRING\", LibEthPairings.BLS12_PAIR_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    final int k = input.size() / 384;\n+    return Gas.of(23_000L * k + 115_000);", "originalCommit": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczMDE5Nw==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428730197", "bodyText": "Integer overflow.  LGTM.com will complain that we are doing integer math then casting it to a long and that there may be a surprising loss in precision.  By starting out with a long constant the whole string of math is done at Long width.  It would take an amazingly large k value to overflow a 32 bit int, but it keeps the automated checkers happy.", "author": "shemnon", "createdAt": "2020-05-21T15:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NzE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODk2Ng==", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428968966", "bodyText": "\ud83d\udc4d", "author": "usmansaleem", "createdAt": "2020-05-21T23:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NzE2OA=="}], "type": "inlineReview"}, {"oid": "ed65043914e636e800ca6bae9e5b1df804c8bb80", "url": "https://github.com/hyperledger/besu/commit/ed65043914e636e800ca6bae9e5b1df804c8bb80", "message": "use thousands separator on all BLS12 precompiles.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-05-21T15:37:41Z", "type": "commit"}, {"oid": "b50414450f1b981b5326c1b85f8b7f9b72b381e2", "url": "https://github.com/hyperledger/besu/commit/b50414450f1b981b5326c1b85f8b7f9b72b381e2", "message": "Merge branch 'master' into eip2537", "committedDate": "2020-05-21T15:42:41Z", "type": "commit"}, {"oid": "6285ee8adb84bbd8e3487b4ef38a6e28c4b0c6bc", "url": "https://github.com/hyperledger/besu/commit/6285ee8adb84bbd8e3487b4ef38a6e28c4b0c6bc", "message": "Merge branch 'master' into eip2537", "committedDate": "2020-05-22T14:28:37Z", "type": "commit"}]}