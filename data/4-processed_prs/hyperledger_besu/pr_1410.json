{"pr_number": 1410, "pr_title": "Tracing", "pr_createdAt": "2020-09-30T23:45:34Z", "pr_url": "https://github.com/hyperledger/besu/pull/1410", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNzc4Ng==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r498427786", "bodyText": "This is a giant red flag for me.  Downloading from a random github url rather than a central repository like maven or jcenter, or at least an open-telemetry bintray is not long-term maintainable and circumvents some of our licensing and security checks.", "author": "shemnon", "createdAt": "2020-10-01T18:08:47Z", "path": "build.gradle", "diffHunk": "@@ -509,9 +520,26 @@ startScripts {\n   }\n }\n \n+task downloadOLTPJavaAgent(){\n+  def f = new File('build/opentelemetry-javaagent-all.jar')\n+  if (!f.exists()) {\n+    if (!f.getParentFile().exists()) {\n+      f.getParentFile().mkdirs()\n+    }\n+    new URL('https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v0.8.0/opentelemetry-javaagent-all.jar').withInputStream{ i -> f.withOutputStream{ it << i }}", "originalCommit": "61093c9e73498b403a0745daed2fb6e946ce359c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwOTY3Nw==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r498509677", "bodyText": "Completely agree. I filed a ticket for this with the open-telemetry team last night: open-telemetry/opentelemetry-java-instrumentation#1293\nPlease feel free to upvote. I'll look for workarounds.", "author": "atoulme", "createdAt": "2020-10-01T20:58:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNzc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NzM5MA==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r500497390", "bodyText": "It turns out they publish to bintray, it's not documented nor a complete Maven artifact, but gradle is able to resolve the jar. So I simplified the dependency and download.", "author": "atoulme", "createdAt": "2020-10-06T18:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyNzc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTUzNw==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r500485537", "bodyText": "What is the overhead cost of adding this agent and not using opentelemetry?  My concern is I don't want to impose a universal performance penalty.", "author": "shemnon", "createdAt": "2020-10-06T17:49:30Z", "path": "build.gradle", "diffHunk": "@@ -481,9 +483,12 @@ applicationDefaultJvmArgs = [\n   \"java.base/java.nio=ALL-UNNAMED\"\n ]\n \n+\n run {\n   args project.hasProperty(\"besu.run.args\") ? project.property(\"besu.run.args\").toString().split(\"\\\\s+\") : []\n   doFirst {\n+    applicationDefaultJvmArgs.add(0, \"-Dotel.resource.attributes=service.name=besu-dev\")\n+    applicationDefaultJvmArgs.add(0, \"-javaagent:\"+ configurations.javaAgent.singleFile.toPath() + \"\")", "originalCommit": "ff90b0f416b67d3a1a188f91528ecc5f1d9f296b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5Mzk1NA==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r500493954", "bodyText": "Perhaps a separate besu-tracing start script could address the agent overhead for non-tracing instances?\nhttps://stackoverflow.com/a/59724219/8020", "author": "shemnon", "createdAt": "2020-10-06T18:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NjczMA==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r500496730", "bodyText": "\ud83d\udc4d Sounds good to me. I'll address that in a bit.\nOK with using tracing with ./gradlew run by default?", "author": "atoulme", "createdAt": "2020-10-06T18:07:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNDc2NA==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r500524764", "bodyText": "Sure.  I don't know of anyone who needs raw performance from a local build.", "author": "shemnon", "createdAt": "2020-10-06T18:53:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzMDE4NQ==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503430185", "bodyText": "Talked some more on rocket.chat - I am offering that we use an env var \"TRACING\", that if set, will trigger tracing to be enabled. I am afraid otherwise of explaining away why we have 2 executable scripts to the casual user.", "author": "atoulme", "createdAt": "2020-10-12T17:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NTUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3MzMzMg==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503673332", "bodyText": "Mostly style and doc nits.  We use def more than actual types in the build scripts, especially for basic types.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String agentFileName = configurations.javaAgent.singleFile.toPath().getFileName()\n          \n          \n            \n                String unixRegex = $/exec \"$$JAVACMD\" /$\n          \n          \n            \n                String forwardSlash = \"/\"\n          \n          \n            \n                String unixReplacement = $/if [ -n \"$$TRACING\" ];then\n          \n          \n            \n             TRACING_AGENT=\"-javaagent:$$APP_HOME/agent${forwardSlash}${agentFileName}\"\n          \n          \n            \n            fi\n          \n          \n            \n            exec \"$$JAVACMD\" $$TRACING_AGENT /$\n          \n          \n            \n                unixScript.text = unixScript.text.replace(unixRegex, unixReplacement)\n          \n          \n            \n                String windowsRegex = $/\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS%/$\n          \n          \n            \n                String windowsReplacement = $/if Defined TRACING (TRACING_AGENT=\"-javaagent:\"%APP_HOME%\\agent\\/$ + agentFileName + '\")\\r\\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %TRACING_AGENT%'\n          \n          \n            \n                windowsScript.text = windowsScript.text.replace(windowsRegex, windowsReplacement)\n          \n          \n            \n                // OpenTelemetry Wiring for unix scripts\n          \n          \n            \n                def agentFileName = configurations.javaAgent.singleFile.toPath().getFileName()\n          \n          \n            \n                def unixRegex = $/exec \"$$JAVACMD\" /$\n          \n          \n            \n                def forwardSlash = \"/\"\n          \n          \n            \n                def unixReplacement = $/if [ -n \"$$TRACING\" ];then\n          \n          \n            \n             TRACING_AGENT=\"-javaagent:$$APP_HOME/agent${forwardSlash}${agentFileName}\"\n          \n          \n            \n            fi\n          \n          \n            \n            exec \"$$JAVACMD\" $$TRACING_AGENT /$\n          \n          \n            \n                unixScript.text = unixScript.text.replace(unixRegex, unixReplacement)\n          \n          \n            \n                \n          \n          \n            \n                // OpenTelemetry Wiring for windows scripts\n          \n          \n            \n                def windowsRegex = $/\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS%/$\n          \n          \n            \n                def windowsReplacement = $/if Defined TRACING (TRACING_AGENT=\"-javaagent:\"%APP_HOME%\\agent\\/$ + agentFileName + '\")\\r\\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %TRACING_AGENT%'\n          \n          \n            \n                windowsScript.text = windowsScript.text.replace(windowsRegex, windowsReplacement)", "author": "shemnon", "createdAt": "2020-10-13T05:21:31Z", "path": "build.gradle", "diffHunk": "@@ -499,6 +504,17 @@ startScripts {\n   doLast {\n     unixScript.text = unixScript.text.replace('BESU_HOME', '\\$APP_HOME')\n     windowsScript.text = windowsScript.text.replace('BESU_HOME', '%~dp0..')\n+    String agentFileName = configurations.javaAgent.singleFile.toPath().getFileName()\n+    String unixRegex = $/exec \"$$JAVACMD\" /$\n+    String forwardSlash = \"/\"\n+    String unixReplacement = $/if [ -n \"$$TRACING\" ];then\n+ TRACING_AGENT=\"-javaagent:$$APP_HOME/agent${forwardSlash}${agentFileName}\"\n+fi\n+exec \"$$JAVACMD\" $$TRACING_AGENT /$\n+    unixScript.text = unixScript.text.replace(unixRegex, unixReplacement)\n+    String windowsRegex = $/\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS%/$\n+    String windowsReplacement = $/if Defined TRACING (TRACING_AGENT=\"-javaagent:\"%APP_HOME%\\agent\\/$ + agentFileName + '\")\\r\\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %TRACING_AGENT%'\n+    windowsScript.text = windowsScript.text.replace(windowsRegex, windowsReplacement)", "originalCommit": "953f7aceb24e4d651ac81f3b2965f549bfab9127", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3MzcxNg==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503673716", "bodyText": "Set it to what?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To enable tracing, set the environment variable TRACING.\n          \n          \n            \n            # To enable tracing, uncomment next line\n          \n          \n            \n            #ENV TRACING=ENABLED", "author": "shemnon", "createdAt": "2020-10-13T05:23:00Z", "path": "docker/graalvm/Dockerfile", "diffHunk": "@@ -21,6 +21,11 @@ ENV BESU_RPC_HTTP_HOST 0.0.0.0\n ENV BESU_RPC_WS_HOST 0.0.0.0\n ENV BESU_GRAPHQL_HTTP_HOST 0.0.0.0\n ENV BESU_PID_PATH \"/tmp/pid\"\n+# Tracing defaults\n+# To enable tracing, set the environment variable TRACING.", "originalCommit": "953f7aceb24e4d651ac81f3b2965f549bfab9127", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3Mzc5Mg==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503673792", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To enable tracing, set the environment variable TRACING.\n          \n          \n            \n            # To enable tracing, uncomment next line\n          \n          \n            \n            #ENV TRACING=ENABLED", "author": "shemnon", "createdAt": "2020-10-13T05:23:13Z", "path": "docker/openjdk-11/Dockerfile", "diffHunk": "@@ -21,6 +21,11 @@ ENV BESU_RPC_HTTP_HOST 0.0.0.0\n ENV BESU_RPC_WS_HOST 0.0.0.0\n ENV BESU_GRAPHQL_HTTP_HOST 0.0.0.0\n ENV BESU_PID_PATH \"/tmp/pid\"\n+# Tracing defaults\n+# To enable tracing, set the environment variable TRACING.", "originalCommit": "953f7aceb24e4d651ac81f3b2965f549bfab9127", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3Mzg2MQ==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503673861", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # To enable tracing, set the environment variable TRACING.\n          \n          \n            \n            # To enable tracing, uncomment next line\n          \n          \n            \n            #ENV TRACING=ENABLED", "author": "shemnon", "createdAt": "2020-10-13T05:23:28Z", "path": "docker/openjdk-latest/Dockerfile", "diffHunk": "@@ -21,6 +21,11 @@ ENV BESU_RPC_HTTP_HOST 0.0.0.0\n ENV BESU_RPC_WS_HOST 0.0.0.0\n ENV BESU_GRAPHQL_HTTP_HOST 0.0.0.0\n ENV BESU_PID_PATH \"/tmp/pid\"\n+# Tracing defaults\n+# To enable tracing, set the environment variable TRACING.", "originalCommit": "953f7aceb24e4d651ac81f3b2965f549bfab9127", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3NDY3Ng==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503674676", "bodyText": "Would docs/tracing be a better home for these?  Or at least the README as docs/open-telemetry.md?  I'm concerned that this may get overlooked as just another module.  Weakly held opinion.", "author": "shemnon", "createdAt": "2020-10-13T05:26:12Z", "path": "tracing/README.md", "diffHunk": "@@ -0,0 +1,21 @@\n+# Tracing", "originalCommit": "953f7aceb24e4d651ac81f3b2965f549bfab9127", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3NTE0NA==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r503675144", "bodyText": "This should go to the RC-2 section on line 29.", "author": "shemnon", "createdAt": "2020-10-13T05:27:45Z", "path": "CHANGELOG.md", "diffHunk": "@@ -42,6 +42,7 @@ Hyperledger Besu is moving its versioning scheme to [CalVer](https://calver.org/\n * Added support for multi-tenancy when using the early access feature of [onchain privacy group management](https://besu.hyperledger.org/en/stable/Concepts/Privacy/Onchain-PrivacyGroups/) \n * Fixed memory leak in eth/65 subprotocol behavior. It is now enabled by default. [\\#1420](https://github.com/hyperledger/besu/pull/1420), [#1348](https://github.com/hyperledger/besu/pull/1348), [#1321](https://github.com/hyperledger/besu/pull/1321)\n * Added `--privacy-flexible-groups-enabled` as an alternative for `--privacy-onchain-groups-enabled` CLI option\n+* Added the Open Telemetry Java agent to report traces to a remote backend. Added an example to showcase the trace reporting capabilities.", "originalCommit": "953f7aceb24e4d651ac81f3b2965f549bfab9127", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI5ODE1Mw==", "url": "https://github.com/hyperledger/besu/pull/1410#discussion_r504298153", "bodyText": "Moved", "author": "atoulme", "createdAt": "2020-10-13T22:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3NTE0NA=="}], "type": "inlineReview"}, {"oid": "88508fb92b7178eb068c2b6d46d450b69450d379", "url": "https://github.com/hyperledger/besu/commit/88508fb92b7178eb068c2b6d46d450b69450d379", "message": "Add tracing agent to the build and default parameters in Dockerfiles\n\nSigned-off-by: Antoine Toulme <antoine@lunar-ocean.com>", "committedDate": "2020-10-13T22:37:07Z", "type": "forcePushed"}, {"oid": "4b98d5fb82c0c8701a3252f445f0b360df772312", "url": "https://github.com/hyperledger/besu/commit/4b98d5fb82c0c8701a3252f445f0b360df772312", "message": "Add tracing agent to the build and default parameters in Dockerfiles\n\nSigned-off-by: Antoine Toulme <antoine@lunar-ocean.com>", "committedDate": "2020-10-13T22:39:46Z", "type": "commit"}, {"oid": "4b98d5fb82c0c8701a3252f445f0b360df772312", "url": "https://github.com/hyperledger/besu/commit/4b98d5fb82c0c8701a3252f445f0b360df772312", "message": "Add tracing agent to the build and default parameters in Dockerfiles\n\nSigned-off-by: Antoine Toulme <antoine@lunar-ocean.com>", "committedDate": "2020-10-13T22:39:46Z", "type": "forcePushed"}]}