{"pr_number": 831, "pr_title": "Ibft now handles failing sign operations", "pr_createdAt": "2020-05-03T23:48:04Z", "pr_url": "https://github.com/hyperledger/besu/pull/831", "timeline": [{"oid": "baecdd932f5dcf6ce3a551437b0fa5317c2422db", "url": "https://github.com/hyperledger/besu/commit/baecdd932f5dcf6ce3a551437b0fa5317c2422db", "message": "Ibft now handles failing sign operations\n\nTests are not yet written, however IbftRound has been updated to\naccept Signing errors (eg no signature supplier available) and\ncontinue operating if possible.\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-05-04T00:21:56Z", "type": "forcePushed"}, {"oid": "75fcd7272d29335a13789ad7765ce85863b7da9a", "url": "https://github.com/hyperledger/besu/commit/75fcd7272d29335a13789ad7765ce85863b7da9a", "message": "fix spotless\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-05-04T02:13:54Z", "type": "forcePushed"}, {"oid": "b8e917bfe926485be70342b4c2e7679723d7fcda", "url": "https://github.com/hyperledger/besu/commit/b8e917bfe926485be70342b4c2e7679723d7fcda", "message": "Handle Crytpo failures in Ibft, Clique, discovery and Handshaking\n\nTests are not yet written, however IbftRound has been updated to\naccept Signing errors (eg no signature supplier available) and\ncontinue operating if possible.\n\nThis also catches failures in signing and ECDH Key agreement\ncreation during discovery and handshaking.\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-05-04T05:08:06Z", "type": "forcePushed"}, {"oid": "00b7f809004a5e512eab35297a6d839c2d79feac", "url": "https://github.com/hyperledger/besu/commit/00b7f809004a5e512eab35297a6d839c2d79feac", "message": "Handle Crytpo failures in Ibft, Clique, discovery and Handshaking\n\nTests are not yet written, however IbftRound has been updated to\naccept Signing errors (eg no signature supplier available) and\ncontinue operating if possible.\n\nThis also catches failures in signing and ECDH Key agreement\ncreation during discovery and handshaking.\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-05-04T05:22:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc5NTk4MQ==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r419795981", "bodyText": "you have changed the operations order from previous logic? i.e. Previously it was multiCastPrepare then peerIsPrepared. Now it is peerIsPrepared then multicastPrepare? Is that by mistake or it doesn't matter?", "author": "usmansaleem", "createdAt": "2020-05-04T23:59:04Z", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/statemachine/IbftRound.java", "diffHunk": "@@ -132,11 +138,15 @@ public void handleProposalMessage(final Proposal msg) {\n \n     if (updateStateWithProposedBlock(msg)) {\n       LOG.debug(\"Sending prepare message. round={}\", roundState.getRoundIdentifier());\n-      final Prepare localPrepareMessage =\n-          messageFactory.createPrepare(getRoundIdentifier(), block.getHash());\n-      transmitter.multicastPrepare(\n-          localPrepareMessage.getRoundIdentifier(), localPrepareMessage.getDigest());\n-      peerIsPrepared(localPrepareMessage);\n+      try {\n+        final Prepare localPrepareMessage =\n+            messageFactory.createPrepare(getRoundIdentifier(), block.getHash());\n+        peerIsPrepared(localPrepareMessage);\n+        transmitter.multicastPrepare(", "originalCommit": "00b7f809004a5e512eab35297a6d839c2d79feac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1NTc3Mg==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r420555772", "bodyText": "that shouldn't matter in this instance.", "author": "rain-on", "createdAt": "2020-05-06T05:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc5NTk4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1NzkxMg==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r419857912", "bodyText": "The try/catch only needs to be around the messageFactory.create method", "author": "jframe", "createdAt": "2020-05-05T04:32:07Z", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/network/IbftMessageTransmitter.java", "diffHunk": "@@ -47,42 +53,57 @@ public void multicastProposal(\n       final ConsensusRoundIdentifier roundIdentifier,\n       final Block block,\n       final Optional<RoundChangeCertificate> roundChangeCertificate) {\n-    final Proposal data =\n-        messageFactory.createProposal(roundIdentifier, block, roundChangeCertificate);\n+    try {\n+      final Proposal data =\n+          messageFactory.createProposal(roundIdentifier, block, roundChangeCertificate);\n \n-    final ProposalMessageData message = ProposalMessageData.create(data);\n+      final ProposalMessageData message = ProposalMessageData.create(data);", "originalCommit": "00b7f809004a5e512eab35297a6d839c2d79feac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1NTU1Nw==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r420555557", "bodyText": "It could be thinner, but didn't seem to add a lot of value to do so.", "author": "rain-on", "createdAt": "2020-05-06T05:40:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1NzkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1ODA0Ng==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r419858046", "bodyText": "Same as above for the all the other messages in the message transmitter", "author": "jframe", "createdAt": "2020-05-05T04:32:52Z", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/network/IbftMessageTransmitter.java", "diffHunk": "@@ -47,42 +53,57 @@ public void multicastProposal(\n       final ConsensusRoundIdentifier roundIdentifier,\n       final Block block,\n       final Optional<RoundChangeCertificate> roundChangeCertificate) {\n-    final Proposal data =\n-        messageFactory.createProposal(roundIdentifier, block, roundChangeCertificate);\n+    try {\n+      final Proposal data =\n+          messageFactory.createProposal(roundIdentifier, block, roundChangeCertificate);\n \n-    final ProposalMessageData message = ProposalMessageData.create(data);\n+      final ProposalMessageData message = ProposalMessageData.create(data);\n \n-    multicaster.send(message);\n+      multicaster.send(message);\n+    } catch (final SecurityModuleException e) {\n+      LOG.warn(\"Failed to generate signature for Proposal (not sent): {} \", e.getMessage());\n+    }\n   }\n \n   public void multicastPrepare(final ConsensusRoundIdentifier roundIdentifier, final Hash digest) {\n-    final Prepare data = messageFactory.createPrepare(roundIdentifier, digest);\n+    try {\n+      final Prepare data = messageFactory.createPrepare(roundIdentifier, digest);", "originalCommit": "00b7f809004a5e512eab35297a6d839c2d79feac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1NTY1Nw==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r420555657", "bodyText": "agreed - but so long as we don't transmit, then we've done what we need to.", "author": "rain-on", "createdAt": "2020-05-06T05:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1ODA0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1ODk5Nw==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r419858997", "bodyText": "Is it only the createPrepare that can fail with a SecurityModuleException? Don't think this try/catch needs to be around the peerIsPrepared or multicastPrepare", "author": "jframe", "createdAt": "2020-05-05T04:37:24Z", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/statemachine/IbftRound.java", "diffHunk": "@@ -132,11 +138,15 @@ public void handleProposalMessage(final Proposal msg) {\n \n     if (updateStateWithProposedBlock(msg)) {\n       LOG.debug(\"Sending prepare message. round={}\", roundState.getRoundIdentifier());\n-      final Prepare localPrepareMessage =\n-          messageFactory.createPrepare(getRoundIdentifier(), block.getHash());\n-      transmitter.multicastPrepare(\n-          localPrepareMessage.getRoundIdentifier(), localPrepareMessage.getDigest());\n-      peerIsPrepared(localPrepareMessage);\n+      try {\n+        final Prepare localPrepareMessage =", "originalCommit": "00b7f809004a5e512eab35297a6d839c2d79feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg2Mzg0MA==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r419863840", "bodyText": "Should we be returning true in this case, as this will result in a prepare message being created?", "author": "jframe", "createdAt": "2020-05-05T04:59:20Z", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/statemachine/IbftRound.java", "diffHunk": "@@ -158,23 +168,41 @@ private boolean updateStateWithProposedBlock(final Proposal msg) {\n     final boolean wasPrepared = roundState.isPrepared();\n     final boolean wasCommitted = roundState.isCommitted();\n     final boolean blockAccepted = roundState.setProposedBlock(msg);\n+\n     if (blockAccepted) {\n+      final Block block = roundState.getProposedBlock().get();\n+\n+      final Signature commitSeal;\n+      try {\n+        commitSeal = createCommitSeal(block);\n+      } catch (final SecurityModuleException e) {\n+        LOG.warn(\"Failed to construct commit seal; {}\", e.getMessage());\n+        return blockAccepted;\n+      }\n+\n       // There are times handling a proposed block is enough to enter prepared.\n       if (wasPrepared != roundState.isPrepared()) {\n         LOG.debug(\"Sending commit message. round={}\", roundState.getRoundIdentifier());\n-        final Block block = roundState.getProposedBlock().get();\n-        transmitter.multicastCommit(getRoundIdentifier(), block.getHash(), createCommitSeal(block));\n+        transmitter.multicastCommit(getRoundIdentifier(), block.getHash(), commitSeal);\n+      }\n+\n+      // can automatically add _our_ commit message to the roundState\n+      // cannot create a prepare message here, as it may be _our_ proposal, and thus we cannot also\n+      // prepare\n+      try {\n+        final Commit localCommitMessage =\n+            messageFactory.createCommit(\n+                roundState.getRoundIdentifier(), msg.getBlock().getHash(), commitSeal);\n+        roundState.addCommitMessage(localCommitMessage);\n+      } catch (final SecurityModuleException e) {\n+        LOG.warn(\"Failed to create signed Commit message; {}\", e.getMessage());\n+        return blockAccepted;", "originalCommit": "00b7f809004a5e512eab35297a6d839c2d79feac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1NjI5Mg==", "url": "https://github.com/hyperledger/besu/pull/831#discussion_r420556292", "bodyText": "From where this is called - the return value implies the block is good, and that this node should try and send a prepare message - which, regardless of this failure, is still true.", "author": "rain-on", "createdAt": "2020-05-06T05:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg2Mzg0MA=="}], "type": "inlineReview"}, {"oid": "e3b7a5069ad22aeb248134bf44c65387a8e1bcdb", "url": "https://github.com/hyperledger/besu/commit/e3b7a5069ad22aeb248134bf44c65387a8e1bcdb", "message": "Handle Crytpo failures in Ibft, Clique, discovery and Handshaking\n\nTests are not yet written, however IbftRound has been updated to\naccept Signing errors (eg no signature supplier available) and\ncontinue operating if possible.\n\nThis also catches failures in signing and ECDH Key agreement\ncreation during discovery and handshaking.\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-05-06T06:05:18Z", "type": "commit"}, {"oid": "e3b7a5069ad22aeb248134bf44c65387a8e1bcdb", "url": "https://github.com/hyperledger/besu/commit/e3b7a5069ad22aeb248134bf44c65387a8e1bcdb", "message": "Handle Crytpo failures in Ibft, Clique, discovery and Handshaking\n\nTests are not yet written, however IbftRound has been updated to\naccept Signing errors (eg no signature supplier available) and\ncontinue operating if possible.\n\nThis also catches failures in signing and ECDH Key agreement\ncreation during discovery and handshaking.\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-05-06T06:05:18Z", "type": "forcePushed"}]}