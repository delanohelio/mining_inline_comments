{"pr_number": 327, "pr_title": "Fix zip building", "pr_createdAt": "2020-01-25T20:55:46Z", "pr_url": "https://github.com/hyperledger/besu/pull/327", "timeline": [{"oid": "c7828d7904021f24031559f813808dd3c652bdd0", "url": "https://github.com/hyperledger/besu/commit/c7828d7904021f24031559f813808dd3c652bdd0", "message": "Fix zip build\n\nCurrently building from a non-git checkout, such as a zip file, does not\nwork because of the way we calculate the git commit hash.  Add a catch\nclause to return 8 \"x\"s in case the calculation fails.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-01-25T20:55:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NjIyMg==", "url": "https://github.com/hyperledger/besu/pull/327#discussion_r370956222", "bodyText": "It would be worth printing a message here so that if an unexpected exception is thrown in the normal code there\u2019s some info about why.", "author": "ajsutton", "createdAt": "2020-01-25T21:08:06Z", "path": "build.gradle", "diffHunk": "@@ -646,25 +646,29 @@ def calculateVersion() {\n }\n \n def getCheckedOutGitCommitHash() {\n-  def gitFolder = \"$projectDir/.git/\"\n-  if (!file(gitFolder).isDirectory()) {\n-    // We are in a submodule.  The file's contents are `gitdir: <gitFolder>\\n`.\n-    // Read the file, cut off the front, and trim the whitespace.\n-    gitFolder = file(gitFolder).text.substring(8).trim() + \"/\"\n+  try {\n+    def gitFolder = \"$projectDir/.git/\"\n+    if (!file(gitFolder).isDirectory()) {\n+      // We are in a submodule.  The file's contents are `gitdir: <gitFolder>\\n`.\n+      // Read the file, cut off the front, and trim the whitespace.\n+      gitFolder = file(gitFolder).text.substring(8).trim() + \"/\"\n+    }\n+    def takeFromHash = 8\n+    /*\n+     * '.git/HEAD' contains either\n+     *      in case of detached head: the currently checked out commit hash\n+     *      otherwise: a reference to a file containing the current commit hash\n+     */\n+    def head = new File(gitFolder + \"HEAD\").text.split(\":\") // .git/HEAD\n+    def isCommit = head.length == 1 // e5a7c79edabbf7dd39888442df081b1c9d8e88fd\n+\n+    if (isCommit) return head[0].trim().take(takeFromHash) // e5a7c79edabb\n+\n+    def refHead = new File(gitFolder + head[1].trim()) // .git/refs/heads/master\n+    refHead.text.trim().take takeFromHash\n+  } catch (Exception e) {\n+    return \"xxxxxxxx\"", "originalCommit": "c7828d7904021f24031559f813808dd3c652bdd0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MTE3Mw==", "url": "https://github.com/hyperledger/besu/pull/327#discussion_r370961173", "bodyText": "The stack trace is 257 lines long, so I hid the stack trace at \"info\" level, notified at \"warn\" level, and memoized the execution so you get it only twice not 20+ times.", "author": "shemnon", "createdAt": "2020-01-25T22:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NjIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTI3MQ==", "url": "https://github.com/hyperledger/besu/pull/327#discussion_r370969271", "bodyText": "+1 seems like a good trade off.", "author": "ajsutton", "createdAt": "2020-01-26T02:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NjIyMg=="}], "type": "inlineReview"}, {"oid": "69865de03ad032ad8ae8d2fd701331a79d98fff7", "url": "https://github.com/hyperledger/besu/commit/69865de03ad032ad8ae8d2fd701331a79d98fff7", "message": "let the user know retrievial failed\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-01-25T22:57:45Z", "type": "commit"}, {"oid": "d6456afe43ed33ca2a48cd0e44d60993416442dc", "url": "https://github.com/hyperledger/besu/commit/d6456afe43ed33ca2a48cd0e44d60993416442dc", "message": "left in debugging code tripping the error\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-01-25T22:58:31Z", "type": "commit"}, {"oid": "80d75c3839bb481018d617cbb0c18ffde998765d", "url": "https://github.com/hyperledger/besu/commit/80d75c3839bb481018d617cbb0c18ffde998765d", "message": "Merge branch 'master' into gitversion", "committedDate": "2020-01-27T08:31:58Z", "type": "commit"}]}