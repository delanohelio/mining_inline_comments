{"pr_number": 675, "pr_title": "Use native secp256k1 and altbn128 if present", "pr_createdAt": "2020-04-07T23:05:14Z", "pr_url": "https://github.com/hyperledger/besu/pull/675", "timeline": [{"oid": "19d4a3c298ae9b7d2f40e435fbf67f7c65109b82", "url": "https://github.com/hyperledger/besu/commit/19d4a3c298ae9b7d2f40e435fbf67f7c65109b82", "message": "Use native secp256k1 if present\n\nVia JNA use the native scep256k1 library if it is present.  Because we\ndepend on an optional module (recovery) we validate that the needed\nfunctions are present before enabling the library.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-07T23:04:05Z", "type": "commit"}, {"oid": "57cb9233eb162cc23e42ee2a4289155e86400aad", "url": "https://github.com/hyperledger/besu/commit/57cb9233eb162cc23e42ee2a4289155e86400aad", "message": "clean up some old code\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-08T04:44:02Z", "type": "commit"}, {"oid": "6714639cbe251cadaac994784a78b071da073622", "url": "https://github.com/hyperledger/besu/commit/6714639cbe251cadaac994784a78b071da073622", "message": "missed a final\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-08T04:54:35Z", "type": "commit"}, {"oid": "b1642862b86fa7718f408bf0c7d30df4cf04aff1", "url": "https://github.com/hyperledger/besu/commit/b1642862b86fa7718f408bf0c7d30df4cf04aff1", "message": "license check\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-08T05:10:48Z", "type": "commit"}, {"oid": "b28f6d5b8cf35dd77898c09b33a020f9cfabb13b", "url": "https://github.com/hyperledger/besu/commit/b28f6d5b8cf35dd77898c09b33a020f9cfabb13b", "message": "javadoc api\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-08T05:18:51Z", "type": "commit"}, {"oid": "ed35bb743ec25a50538d4f0dcb1e93ab4b05ff26", "url": "https://github.com/hyperledger/besu/commit/ed35bb743ec25a50538d4f0dcb1e93ab4b05ff26", "message": "Merge branch 'master' of github.com:hyperledger/besu into native_secp256k1\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>\n\n# Conflicts:\n#\tcrypto/src/main/java/org/hyperledger/besu/crypto/SECP256K1.java", "committedDate": "2020-04-08T05:59:31Z", "type": "commit"}, {"oid": "d544dcac4aa8c0278cc3147b991fdaa85221abb5", "url": "https://github.com/hyperledger/besu/commit/d544dcac4aa8c0278cc3147b991fdaa85221abb5", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-08T06:05:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwMzM5Mg==", "url": "https://github.com/hyperledger/besu/pull/675#discussion_r406003392", "bodyText": "Maybe an info or debug log statement in findInstance() would make sense, to let the user know that either native is or is not being used?", "author": "CjHare", "createdAt": "2020-04-09T07:18:40Z", "path": "crypto/src/main/java/org/hyperledger/besu/crypto/LibSecp256k1.java", "diffHunk": "@@ -0,0 +1,364 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import java.nio.ByteBuffer;\n+\n+import com.sun.jna.Callback;\n+import com.sun.jna.Library;\n+import com.sun.jna.Native;\n+import com.sun.jna.Pointer;\n+import com.sun.jna.Structure;\n+import com.sun.jna.Structure.FieldOrder;\n+import com.sun.jna.ptr.IntByReference;\n+import com.sun.jna.ptr.LongByReference;\n+import com.sun.jna.ptr.PointerByReference;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt256;\n+\n+public interface LibSecp256k1 extends Library {\n+\n+  /* Flags to pass to secp256k1_context_create */\n+  public static final int SECP256K1_CONTEXT_VERIFY = 0x0101;\n+  public static final int SECP256K1_CONTEXT_SIGN = 0x0201;\n+\n+  /* Flag to pass to secp256k1_ec_pubkey_serialize. */\n+  public static final int SECP256K1_EC_UNCOMPRESSED = 0x0002;\n+\n+  static final LibSecp256k1 INSTANCE = findInstance();\n+  static final PointerByReference CONTEXT = createContext();\n+\n+  private static LibSecp256k1 findInstance() {", "originalCommit": "d544dcac4aa8c0278cc3147b991fdaa85221abb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "98de29c569da70edaf054b3b304fc2570227617c", "url": "https://github.com/hyperledger/besu/commit/98de29c569da70edaf054b3b304fc2570227617c", "message": "Throw exceptions\n\nInstead of using return values (optional.empty, false) we should throw\nexceptions when things are invalid.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-13T16:00:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5NDY1NA==", "url": "https://github.com/hyperledger/besu/pull/675#discussion_r408294654", "bodyText": "Will this always return a present Optional? It seems like our implementation can return an empty Optional.", "author": "RatanRSur", "createdAt": "2020-04-14T17:02:22Z", "path": "crypto/src/main/java/org/hyperledger/besu/crypto/SECP256K1.java", "diffHunk": "@@ -308,6 +336,99 @@ public static Bytes calculateECIESKeyAgreement(final PrivateKey privKey, final P\n     return Bytes.wrap(BigIntegers.asUnsignedByteArray(agree.getFieldSize(), z));\n   }\n \n+  private static Signature signNative(final Bytes32 dataHash, final KeyPair keyPair) {\n+    final LibSecp256k1.secp256k1_ecdsa_recoverable_signature signature =\n+        new secp256k1_ecdsa_recoverable_signature();\n+    // sign in internal form\n+    if (LibSecp256k1.INSTANCE.secp256k1_ecdsa_sign_recoverable(\n+            LibSecp256k1.CONTEXT,\n+            signature,\n+            dataHash.toArrayUnsafe(),\n+            keyPair.privateKey.getEncoded(),\n+            null,\n+            null)\n+        == 0) {\n+      throw new RuntimeException(\n+          \"Could not natively sign. Private Key is invalid or default nonce generation failed.\");\n+    }\n+\n+    // encode to compact form\n+    final ByteBuffer compactSig = ByteBuffer.allocate(64);\n+    final IntByReference recId = new IntByReference(0);\n+    LibSecp256k1.INSTANCE.secp256k1_ecdsa_recoverable_signature_serialize_compact(\n+        LibSecp256k1.CONTEXT, compactSig, recId, signature);\n+    compactSig.flip();\n+    final byte[] sig = compactSig.array();\n+\n+    // wrap in signature object\n+    final Bytes32 r = Bytes32.wrap(sig, 0);\n+    final Bytes32 s = Bytes32.wrap(sig, 32);\n+    return Signature.create(\n+        r.toUnsignedBigInteger(), s.toUnsignedBigInteger(), (byte) recId.getValue());\n+  }\n+\n+  private static boolean verifyNative(\n+      final Bytes data, final Signature signature, final PublicKey pub) {\n+\n+    // translate signature\n+    final LibSecp256k1.secp256k1_ecdsa_signature _signature = new secp256k1_ecdsa_signature();\n+    if (LibSecp256k1.INSTANCE.secp256k1_ecdsa_signature_parse_compact(\n+            LibSecp256k1.CONTEXT, _signature, signature.encodedBytes().toArrayUnsafe())\n+        == 0) {\n+      throw new IllegalArgumentException(\"Could not parse signature\");\n+    }\n+\n+    // translate key\n+    final LibSecp256k1.secp256k1_pubkey _pub = new secp256k1_pubkey();\n+    final Bytes encodedPubKey = Bytes.concatenate(Bytes.of(0x04), pub.getEncodedBytes());\n+    if (LibSecp256k1.INSTANCE.secp256k1_ec_pubkey_parse(\n+            LibSecp256k1.CONTEXT, _pub, encodedPubKey.toArrayUnsafe(), encodedPubKey.size())\n+        == 0) {\n+      throw new IllegalArgumentException(\"Could not parse public key\");\n+    }\n+\n+    return LibSecp256k1.INSTANCE.secp256k1_ecdsa_verify(\n+            LibSecp256k1.CONTEXT, _signature, data.toArrayUnsafe(), _pub)\n+        != 0;\n+  }\n+\n+  private static Optional<PublicKey> recoverFromSignatureNative(\n+      final Bytes32 dataHash, final Signature signature) {\n+\n+    // parse the sig\n+    final LibSecp256k1.secp256k1_ecdsa_recoverable_signature parsedSignature =\n+        new LibSecp256k1.secp256k1_ecdsa_recoverable_signature();\n+    final Bytes encodedSig = signature.encodedBytes();\n+    if (LibSecp256k1.INSTANCE.secp256k1_ecdsa_recoverable_signature_parse_compact(\n+            LibSecp256k1.CONTEXT,\n+            parsedSignature,\n+            encodedSig.slice(0, 64).toArrayUnsafe(),\n+            encodedSig.get(64))\n+        == 0) {\n+      throw new IllegalArgumentException(\"Could not parse signature\");\n+    }\n+\n+    // recover the key\n+    final LibSecp256k1.secp256k1_pubkey newPubKey = new LibSecp256k1.secp256k1_pubkey();\n+    if (LibSecp256k1.INSTANCE.secp256k1_ecdsa_recover(\n+            LibSecp256k1.CONTEXT, newPubKey, parsedSignature, dataHash.toArrayUnsafe())\n+        == 0) {\n+      throw new IllegalArgumentException(\"Could not recover public key\");\n+    }\n+\n+    // parse the key\n+    final ByteBuffer recoveredKey = ByteBuffer.allocate(65);\n+    final LongByReference keySize = new LongByReference(recoveredKey.limit());\n+    LibSecp256k1.INSTANCE.secp256k1_ec_pubkey_serialize(\n+        LibSecp256k1.CONTEXT,\n+        recoveredKey,\n+        keySize,\n+        newPubKey,\n+        LibSecp256k1.SECP256K1_EC_UNCOMPRESSED);\n+\n+    return Optional.of(PublicKey.create(Bytes.wrapByteBuffer(recoveredKey).slice(1)));", "originalCommit": "98de29c569da70edaf054b3b304fc2570227617c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3NjE1NQ==", "url": "https://github.com/hyperledger/besu/pull/675#discussion_r409276155", "bodyText": "Legacy APIs.  The old java method had a way to return emptys, but when I try and return empty from any of the methods that return error I get reference tests that break.  I'm not sure why the java method gets away with it.", "author": "shemnon", "createdAt": "2020-04-16T04:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5NDY1NA=="}], "type": "inlineReview"}, {"oid": "1002f749fd5f7b89aeb360a4b14679ce895697dc", "url": "https://github.com/hyperledger/besu/commit/1002f749fd5f7b89aeb360a4b14679ce895697dc", "message": "Merge branch 'master' of github.com:hyperledger/besu into native_secp256k1\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>\n\n# Conflicts:\n#\tcrypto/src/main/java/org/hyperledger/besu/crypto/SECP256K1.java", "committedDate": "2020-04-15T16:30:47Z", "type": "commit"}, {"oid": "81b8cfb5eef786b01990e7dcfdec188d676ded0e", "url": "https://github.com/hyperledger/besu/commit/81b8cfb5eef786b01990e7dcfdec188d676ded0e", "message": "switch to direct mapping.  Add a benchmark\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-15T16:59:31Z", "type": "commit"}, {"oid": "70d5123b91dc5c7af3b6dc986fde4f0aa705460d", "url": "https://github.com/hyperledger/besu/commit/70d5123b91dc5c7af3b6dc986fde4f0aa705460d", "message": "use bintray published library\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-16T01:43:37Z", "type": "commit"}, {"oid": "6949e6676fbcaa2c652ab363ff8fbeeb84aba0f0", "url": "https://github.com/hyperledger/besu/commit/6949e6676fbcaa2c652ab363ff8fbeeb84aba0f0", "message": "remove interna JNA lib\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-16T01:52:02Z", "type": "commit"}, {"oid": "9c0645aa5a67f028fab1a2b3f03533677f736097", "url": "https://github.com/hyperledger/besu/commit/9c0645aa5a67f028fab1a2b3f03533677f736097", "message": "remove benchmark\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-16T03:25:40Z", "type": "commit"}, {"oid": "fd09f29ec4d1f3be30197064d1d512518cb041a9", "url": "https://github.com/hyperledger/besu/commit/fd09f29ec4d1f3be30197064d1d512518cb041a9", "message": "Merge branch 'master' of github.com:hyperledger/besu into native_secp256k1\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-20T19:40:56Z", "type": "commit"}, {"oid": "95038068ebf5339835b3088e8274708aee7453af", "url": "https://github.com/hyperledger/besu/commit/95038068ebf5339835b3088e8274708aee7453af", "message": "altbn128\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-21T01:05:35Z", "type": "commit"}, {"oid": "bb46e10892ba779a40434e4730398a1cdf259f96", "url": "https://github.com/hyperledger/besu/commit/bb46e10892ba779a40434e4730398a1cdf259f96", "message": "log native vs java use of library\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-21T19:05:29Z", "type": "commit"}, {"oid": "f80a2b704a104360efc20a0315141565dec132ce", "url": "https://github.com/hyperledger/besu/commit/f80a2b704a104360efc20a0315141565dec132ce", "message": "Merge branch 'master' of github.com:hyperledger/besu into native_secp256k1\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>\n\n# Conflicts:\n#\tbuild.gradle", "committedDate": "2020-04-21T19:13:00Z", "type": "commit"}, {"oid": "06154931c35a9e3b9cf9f6c37c2e91069ed49292", "url": "https://github.com/hyperledger/besu/commit/06154931c35a9e3b9cf9f6c37c2e91069ed49292", "message": "use publised versions\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-21T22:22:41Z", "type": "commit"}, {"oid": "b2a052c4a1d1efda789b02310f58c66b6dd700f0", "url": "https://github.com/hyperledger/besu/commit/b2a052c4a1d1efda789b02310f58c66b6dd700f0", "message": "Merge branch 'master' into native_secp256k1", "committedDate": "2020-04-21T22:29:26Z", "type": "commit"}, {"oid": "62b509ef4924b7dc17d0c79dbf4f43c43861b544", "url": "https://github.com/hyperledger/besu/commit/62b509ef4924b7dc17d0c79dbf4f43c43861b544", "message": "Merge branch 'master' into native_secp256k1", "committedDate": "2020-04-22T04:18:40Z", "type": "commit"}, {"oid": "e1fb59d4e65033f587653b52877bed0f3860aeda", "url": "https://github.com/hyperledger/besu/commit/e1fb59d4e65033f587653b52877bed0f3860aeda", "message": "Merge branch 'master' into native_secp256k1", "committedDate": "2020-04-22T09:50:36Z", "type": "commit"}, {"oid": "b1e18627818da176ccd9f0a2b894e9100f7903ec", "url": "https://github.com/hyperledger/besu/commit/b1e18627818da176ccd9f0a2b894e9100f7903ec", "message": "Merge branch 'master' of github.com:hyperledger/besu into native_secp256k1\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-22T15:44:11Z", "type": "commit"}, {"oid": "8d83a8e8dfc40d2b67164590fb71226d28c9fc27", "url": "https://github.com/hyperledger/besu/commit/8d83a8e8dfc40d2b67164590fb71226d28c9fc27", "message": "Add Feature Flag\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-22T15:59:04Z", "type": "commit"}, {"oid": "a9220d4286d4e903edaa822de0868ff7ec8999b6", "url": "https://github.com/hyperledger/besu/commit/a9220d4286d4e903edaa822de0868ff7ec8999b6", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-22T16:03:56Z", "type": "commit"}, {"oid": "f2b85cac9d9a7fc04d969c785434f93437a78026", "url": "https://github.com/hyperledger/besu/commit/f2b85cac9d9a7fc04d969c785434f93437a78026", "message": "Stronger feature flag (always off unless enabled), and fix options test\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>", "committedDate": "2020-04-22T16:24:29Z", "type": "commit"}]}