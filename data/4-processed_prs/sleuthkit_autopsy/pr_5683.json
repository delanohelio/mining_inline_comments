{"pr_number": 5683, "pr_title": "6020 viber parser produces an illegal argument exception from comm helper", "pr_createdAt": "2020-03-05T21:46:21Z", "pr_url": "https://github.com/sleuthkit/autopsy/pull/5683", "timeline": [{"oid": "bd5f846d246aa015919dc435c6292ea75c928c4f", "url": "https://github.com/sleuthkit/autopsy/commit/bd5f846d246aa015919dc435c6292ea75c928c4f", "message": "Update viber.py\n\nAdded the coalesce sqlite function to the sql statement, this function will return the first column included in it that does not contain a null value.", "committedDate": "2020-03-02T16:08:29Z", "type": "commit"}, {"oid": "64d73e04348572539f174820c5888450b8015787", "url": "https://github.com/sleuthkit/autopsy/commit/64d73e04348572539f174820c5888450b8015787", "message": "Update viber.py\n\nIf contact does not have an email or phone number then create a TSK_Contact artifact outside of comms helper so we do not loose the contact.", "committedDate": "2020-03-05T21:44:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NzU0OA==", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r389747548", "bodyText": "If this value is a String, I think we should check for blankness too. Blankness can be described as the following conditions:\nis_blank(None) //True\nis_blank(\"\") //True\nis_blank(\"   \") //True", "author": "dannysmyda", "createdAt": "2020-03-09T15:00:39Z", "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,28 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if contacts_parser.get_phone() is not None:", "originalCommit": "64d73e04348572539f174820c5888450b8015787", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzQxMA==", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r391043410", "bodyText": "using isspace() to check for \"\", \" \", and special characters as well as None", "author": "markmckinnon", "createdAt": "2020-03-11T15:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NzU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0ODc5Ng==", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r389748796", "bodyText": "I think this should check for blankness as well.\nelif not is_blank(contacts_parser.get_contact_name())", "author": "dannysmyda", "createdAt": "2020-03-09T15:02:24Z", "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,28 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if contacts_parser.get_phone() is not None:\n+                    helper.addContact( \n+                        contacts_parser.get_contact_name(), \n+                        contacts_parser.get_phone(),\n+                        contacts_parser.get_home_phone(),\n+                        contacts_parser.get_mobile_phone(),\n+                        contacts_parser.get_email()\n+                    )\n+                else:", "originalCommit": "64d73e04348572539f174820c5888450b8015787", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzUxNw==", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r391043517", "bodyText": "using isspace() to check for \"\", \" \", and special characters as well as None", "author": "markmckinnon", "createdAt": "2020-03-11T15:11:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0ODc5Ng=="}], "type": "inlineReview"}, {"oid": "d6bc88d0d4ca5a8fc5cc17814aefd0e420c473ba", "url": "https://github.com/sleuthkit/autopsy/commit/d6bc88d0d4ca5a8fc5cc17814aefd0e420c473ba", "message": "Merge branch 'develop' into 6020-Viber-Parser-produces-an-IllegalArgumentException-from-CommHelper", "committedDate": "2020-03-11T13:53:26Z", "type": "commit"}, {"oid": "276242d3192a029064869020b91a35fcb1c42e33", "url": "https://github.com/sleuthkit/autopsy/commit/276242d3192a029064869020b91a35fcb1c42e33", "message": "Update viber.py\n\nAdded check for only spaces, blanks and special characters.", "committedDate": "2020-03-11T15:10:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNTkwNg==", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r392705906", "bodyText": "I think we should use the catch block around the while loop or, in other words, just omit the block here.", "author": "dannysmyda", "createdAt": "2020-03-15T19:46:54Z", "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,29 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if (not(not contacts_parser.get_phone() or contacts_parser.get_phone().isspace())):\n+                    helper.addContact( \n+                        contacts_parser.get_contact_name(), \n+                        contacts_parser.get_phone(),\n+                        contacts_parser.get_home_phone(),\n+                        contacts_parser.get_mobile_phone(),\n+                        contacts_parser.get_email()\n+                    )\n+                # Check if contact_name is blank and if it is not create a TSK_CONTACT otherwise ignore as not Contact Info\n+                elif (not(not contacts_parser.get_contact_name() or contacts_parser.get_contact_name().isspace())):\n+                    current_case = Case.getCurrentCase().getSleuthkitCase()\n+                    attributes = ArrayList()\n+                    artifact = contacts_db.getDBFile().newArtifact(BlackboardArtifact.ARTIFACT_TYPE.TSK_CONTACT)\n+                    attributes.add(BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), self._PARSER_NAME, contacts_parser.get_contact_name()))\n+                    artifact.addAttributes(attributes)\n+                    \n+                    try:\n+                    # Post the artifact to blackboard\n+                       current_case.getBlackboard().postArtifact(artifact, self._PARSER_NAME)\n+                    except Blackboard.BlackboardException as e:", "originalCommit": "276242d3192a029064869020b91a35fcb1c42e33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczNjQyNw==", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r392736427", "bodyText": "Removed inner try block.", "author": "markmckinnon", "createdAt": "2020-03-16T01:08:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNTkwNg=="}], "type": "inlineReview"}, {"oid": "af2842925f7263024587de2f64c7733af6f2bd3b", "url": "https://github.com/sleuthkit/autopsy/commit/af2842925f7263024587de2f64c7733af6f2bd3b", "message": "Update viber.py\n\nAddress comments, remove inner try block.", "committedDate": "2020-03-16T01:07:08Z", "type": "commit"}]}