{"pr_number": 1189, "pr_title": "RDM-9587 FTs for the Conditional Post States", "pr_createdAt": "2020-10-28T20:12:32Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1189", "timeline": [{"oid": "ecf30ead74948821656af920663b93b4c7af2997", "url": "https://github.com/hmcts/ccd-data-store-api/commit/ecf30ead74948821656af920663b93b4c7af2997", "message": "RDM-9587 FTA's for Conditional Event Post States", "committedDate": "2020-10-28T20:09:47Z", "type": "commit"}, {"oid": "77543b66cb14038a6fe82fe416032b0340005591", "url": "https://github.com/hmcts/ccd-data-store-api/commit/77543b66cb14038a6fe82fe416032b0340005591", "message": "RDM-9587 FTA's for Conditional Event Post States. All ACs", "committedDate": "2020-10-28T20:09:47Z", "type": "commit"}, {"oid": "290e803f16e5e785f9c368aa72ac59fbf42b90c6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/290e803f16e5e785f9c368aa72ac59fbf42b90c6", "message": "RDM-9587 FTA's for Conditional Event Post States - complex types.", "committedDate": "2020-10-28T20:09:47Z", "type": "commit"}, {"oid": "498fa1996b457dc5fb0c5742ccc9328f06343888", "url": "https://github.com/hmcts/ccd-data-store-api/commit/498fa1996b457dc5fb0c5742ccc9328f06343888", "message": "RDM-9587 Added pre-released befta-fw: 5.19.0-RDM-9587", "committedDate": "2020-10-28T20:10:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzNTA5Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1189#discussion_r514135096", "bodyText": "I think we can just do this, instead of calling data-store again:\n\"${[scenarioContext][parentContext][childContexts][S-122-GetToken_CaseCreate][testData][actualResponse][body][token]}\"\nThis applies to all call like this", "author": "kiran-yenigala-hmcts", "createdAt": "2020-10-29T09:56:49Z", "path": "src/aat/resources/features/F-122 - Conditional Event Post States/F-122.feature", "diffHunk": "@@ -0,0 +1,150 @@\n+#==============================================\n+@F-122 @focus\n+Feature: F-122: Conditional Event Post States\n+#==============================================\n+#  Tests 1-3 use updateCase event with the post state condition:\n+#  CaseCreated -> CaseUpdated(TextField=\"updated\" AND EmailField=\"*\"):1;CaseAmended(TextField=\"amended\" AND EmailField=\"*\"):2;CaseRevoked(AddressField.AddressLine1=\"revoked\" AND EmailField=\"*\"):3;CaseDeleted\n+#\n+#  Tests 4-7 use updateCase2 event with the post state condition:\n+#  CaseCreated -> CaseUpdated2(TextField=\"updated2\" OR EmailField=\"*\"):1;CaseAmended2(TextField=\"amended2\" OR EmailField=\"matched@test.com\"):2;*(TextField=\"keepstate\"):3;CaseRevoked2(EmailField!=\"\"):4;CaseDeleted\n+\n+  Background: Load test data for the scenario\n+    Given an appropriate test context as detailed in the test data source\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.1\n+  Scenario: Defaults the state when none of the post state conditions resolves using AND operator (End state: CaseDeleted)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],\n+\n+    When a request is prepared with appropriate values,\n+    And the request [contains a case Id that has just been created],\n+    And the request [contains Update token created as in S-122-GetToken_UpdateCase],\n+    And it is submitted to call the [submit updateCase event with TextField and EmailField values] operation of [CCD data store],\n+\n+    Then a positive response is received,\n+    And the response [contains state: CaseDeleted, updated values for TextField, EmailField along with an HTTP-201 Created],\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.2\n+  Scenario: Sets the state defined with a matching post state condition using AND operator (End state: CaseAmended)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],\n+\n+    When a request is prepared with appropriate values,\n+    And the request [contains a case Id that has just been created],\n+    And the request [contains Update token created as in S-122-GetToken_UpdateCase],\n+    And it is submitted to call the [submit updateCase event with TextField and EmailField values] operation of [CCD data store],\n+\n+    Then a positive response is received,\n+    And the response [contains state: CaseAmended, updated values for TextField, EmailField along with an HTTP-201 Created],\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.3\n+  Scenario: EmailField=\"*\" operator should not match when field is not defined (End state: CaseDeleted)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],\n+\n+    When a request is prepared with appropriate values,\n+    And the request [contains a case Id that has just been created],\n+    And the request [contains Update token created as in S-122-GetToken_UpdateCase],\n+    And it is submitted to call the [submit updateCase event with TextField and EmailField values] operation of [CCD data store],\n+\n+    Then a positive response is received,\n+    And the response [contains state: CaseDeleted, updated values for TextField, EmailField along with an HTTP-201 Created],\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.4\n+  Scenario: Sets the state defined with a matching post state condition using a complex field (End state: CaseRevoked)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],\n+\n+    When a request is prepared with appropriate values,\n+    And the request [contains a case Id that has just been created],\n+    And the request [contains Update token created as in S-122-GetToken_UpdateCase],\n+    And it is submitted to call the [submit updateCase event with AddressField.AddressLine1 and EmailField values] operation of [CCD data store],\n+\n+    Then a positive response is received,\n+    And the response [contains state: CaseRevoked, updated values for AddressField.AddressLine1, EmailField along with an HTTP-201 Created],\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.5\n+  Scenario: Ordering should take precedence when both conditions resolve (End state: CaseUpdated2)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],\n+\n+    When a request is prepared with appropriate values,\n+    And the request [contains a case Id that has just been created],\n+    And the request [contains Update token created as in S-122-GetToken_UpdateCase],\n+    And it is submitted to call the [submit updateCase2 event with TextField and EmailField values] operation of [CCD data store],\n+\n+    Then a positive response is received,\n+    And the response [contains state: CaseUpdated2, updated values for TextField, EmailField along with an HTTP-201 Created],\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.6\n+  Scenario: Sets the state defined with a matching post state condition using OR operator (End state: CaseAmended2)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],\n+\n+    When a request is prepared with appropriate values,\n+    And the request [contains a case Id that has just been created],\n+    And the request [contains Update token created as in S-122-GetToken_UpdateCase],\n+    And it is submitted to call the [submit updateCase2 event with TextField and EmailField values] operation of [CCD data store],\n+\n+    Then a positive response is received,\n+    And the response [contains state: CaseAmended2, updated values for TextField, EmailField along with an HTTP-201 Created],\n+\n+#-----------------------------------------------------------------------------------------------------------------------\n+  @S-122.7\n+  Scenario: *(FieldA) will keep the state as is (End state: CaseCretated)\n+\n+    Given a user with [an active profile in CCD],\n+    And a successful call [to create a token for case creation] as in [S-122-GetToken_CaseCreate],\n+    And a successful call [to create a case] as in [FT_ConditionalPostState_Create_Case],\n+    And a successful call [to get an event token for the case just created] as in [S-122-GetToken_UpdateCase],", "originalCommit": "498fa1996b457dc5fb0c5742ccc9328f06343888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5MTY2NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1189#discussion_r514191664", "bodyText": "Sorry, Please ignore this, as this is a new update event, we need to generate the event_token again", "author": "kiran-yenigala-hmcts", "createdAt": "2020-10-29T11:36:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzNTA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5MTY3Mw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1189#discussion_r514191673", "bodyText": "Sorry, Please ignore this, as this is a new update event, we need to generate the event_token again", "author": "kiran-yenigala-hmcts", "createdAt": "2020-10-29T11:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzNTA5Ng=="}], "type": "inlineReview"}, {"oid": "0c1a18b333220855bb7b6964f86246576af3e5ed", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0c1a18b333220855bb7b6964f86246576af3e5ed", "message": "RDM-9587 pre-release befta-fw: 5.19.0-RDM-9893-RDM-9587", "committedDate": "2020-10-29T10:40:35Z", "type": "commit"}, {"oid": "4e2318188570d2e4b81d1bc4af7fffe20b857f55", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4e2318188570d2e4b81d1bc4af7fffe20b857f55", "message": "RDM-9587 remove focus tag", "committedDate": "2020-10-29T11:34:24Z", "type": "commit"}, {"oid": "5ecdf368c9dfa34956dbf048cba78ece18a96e2e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5ecdf368c9dfa34956dbf048cba78ece18a96e2e", "message": "RDM-9587 Fix assertion steps, update to befta-fw 5.19.0-RDM-9587.1", "committedDate": "2020-10-29T14:38:30Z", "type": "commit"}, {"oid": "2f4e861ce1549f0b2160baff56c643001b619505", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2f4e861ce1549f0b2160baff56c643001b619505", "message": "Updated to latest befta-fw", "committedDate": "2020-10-30T09:26:53Z", "type": "commit"}]}