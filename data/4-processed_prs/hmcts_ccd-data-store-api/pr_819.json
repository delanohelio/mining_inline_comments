{"pr_number": 819, "pr_title": "Rdm 7162", "pr_createdAt": "2020-02-21T11:57:47Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/819", "timeline": [{"oid": "55f329e8b3016d3fcb41171f4fd268715dd2c093", "url": "https://github.com/hmcts/ccd-data-store-api/commit/55f329e8b3016d3fcb41171f4fd268715dd2c093", "message": "RDM-7162: Automate Jurisdiction assignment \u2013 tactical solution\n\n    \u00a0\u00a0[RDM-7162] (https://tools.hmcts.net/jira/browse/RDM-7162).", "committedDate": "2020-02-18T14:47:56Z", "type": "commit"}, {"oid": "38f18e5774f32a88e52b4fa1e5001d3498d327a3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/38f18e5774f32a88e52b4fa1e5001d3498d327a3", "message": "Merge branch 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-7162", "committedDate": "2020-02-18T14:48:32Z", "type": "commit"}, {"oid": "1362733ac7f52c9305de6d64257609a66b4d231c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1362733ac7f52c9305de6d64257609a66b4d231c", "message": "RDM-7416: CCD throws NoHttpResponse when calling available services.\n\n    \u00a0\u00a0[RDM-7416] (https://tools.hmcts.net/jira/browse/RDM-7416).", "committedDate": "2020-02-20T12:43:36Z", "type": "commit"}, {"oid": "9b3c829bfc5d9b630b251fc69a55c56ffb3e67cd", "url": "https://github.com/hmcts/ccd-data-store-api/commit/9b3c829bfc5d9b630b251fc69a55c56ffb3e67cd", "message": "RDM-7162: Automate Jurisdiction assignment \u2013 tactical solution\n\n    \u00a0\u00a0[RDM-7162] (https://tools.hmcts.net/jira/browse/RDM-7162).", "committedDate": "2020-02-21T11:57:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NTUxMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383785512", "bodyText": "this method interface signature should be more generic. The fact that jurisdictions are retrieved from Idam is a detail of one of the interface implementations. Other implementation might retrieve jurisdiction not from Idam but from other places for example user profile. Same for the parameter. It's specific of the implementation and should not appear here. We should rename to:\ngetJurisdictions()", "author": "mario-paniccia", "createdAt": "2020-02-25T10:20:12Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/user/JurisdictionsResolver.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package uk.gov.hmcts.ccd.data.user;\n+\n+import java.util.List;\n+\n+public interface JurisdictionsResolver {\n+\n+    List<String> getJurisdictionsFromIdam(String[] roles);", "originalCommit": "9b3c829bfc5d9b630b251fc69a55c56ffb3e67cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxOTAyMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383919021", "bodyText": "addressed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NTUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NjMxNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383786315", "bodyText": "rather than passing roles this implementation should inject\nCachedUserRepository and call\nuserRepository.getUserDetails() internally. This way we can make the interface generic with the following signature:\ngetJurisdictions()", "author": "mario-paniccia", "createdAt": "2020-02-25T10:21:31Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/user/JurisdictionsResolverFromIdam.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package uk.gov.hmcts.ccd.data.user;\n+\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Service\n+@Qualifier(JurisdictionsResolverFromIdam.QUALIFIER)\n+@RequestScope\n+public class JurisdictionsResolverFromIdam implements JurisdictionsResolver {\n+\n+    public static final String QUALIFIER = \"default\";\n+\n+    @Override\n+    public List<String> getJurisdictionsFromIdam(String[] roles) {", "originalCommit": "9b3c829bfc5d9b630b251fc69a55c56ffb3e67cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgwNzQwMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383807402", "bodyText": "remove this empty line please", "author": "mario-paniccia", "createdAt": "2020-02-25T10:58:42Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/user/JurisdictionsResolverFromIdam.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package uk.gov.hmcts.ccd.data.user;\n+\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Service\n+@Qualifier(JurisdictionsResolverFromIdam.QUALIFIER)\n+@RequestScope\n+public class JurisdictionsResolverFromIdam implements JurisdictionsResolver {\n+\n+    public static final String QUALIFIER = \"default\";\n+\n+    @Override\n+    public List<String> getJurisdictionsFromIdam(String[] roles) {\n+\n+        return Arrays.stream(roles).map(role ->  role.split(\"-\"))\n+                .filter(array -> array.length >= 2)\n+            .map(element -> element[1])\n+            .distinct()\n+            .collect(Collectors.toList());\n+", "originalCommit": "9b3c829bfc5d9b630b251fc69a55c56ffb3e67cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxODgwMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383918801", "bodyText": "addressed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgwNzQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgwODA3MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383808070", "bodyText": "add a test for citizen please", "author": "mario-paniccia", "createdAt": "2020-02-25T11:00:03Z", "path": "src/test/java/uk/gov/hmcts/ccd/data/user/JurisdictionsResolverFromIdamTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+package uk.gov.hmcts.ccd.data.user;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.List;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+\n+public class JurisdictionsResolverFromIdamTest {\n+\n+    private final JurisdictionsResolver jurisdictionsResolver = new JurisdictionsResolverFromIdam();\n+\n+\n+    @BeforeEach\n+    void setUp() {\n+    }\n+\n+    @Nested\n+    @DisplayName(\"JurisdictionsResolverFromIdam\")\n+    class GetUserId {\n+\n+        @Test\n+        @DisplayName(\"It should retrieve one user jurisdiction from idam.\")\n+        void shouldRetrieveOneUserJurisdictionIdam() {\n+\n+            final String[] roles = new String[] { \"caseworker\", \"caseworker-autotest1\",\n+                \"caseworker-autotest1-solicitor\", \"caseworker-autotest1-private\", \"caseworker-autotest1-senior\" };\n+\n+            final List<String> result = jurisdictionsResolver.getJurisdictionsFromIdam(roles);\n+\n+            assertAll(\n+                () -> assertThat(result.size(), is(1)),\n+                () -> assertThat(result.get(0), is(\"autotest1\"))\n+            );\n+        }\n+\n+        @Test\n+        @DisplayName(\"It should retrieve all user jurisdictions from idam.\")\n+        void shouldRetrieveAllUserJurisdictionIdam() {\n+\n+            final String[] roles = new String[] {\n+                \"caseworker\",\n+                \"caseworker-autotest1\",\n+                \"caseworker-autotest1-solicitor\",\n+                \"caseworker-autotest1-private\",\n+                \"caseworker-autotest1-senior\",\n+                \"caseworker-autotest2\",\n+                \"caseworker-autotest2-solicitor\",\n+                \"caseworker-autotest2-private\",\n+                \"caseworker-autotest2-senior\"\n+            };\n+\n+            final List<String> result = jurisdictionsResolver.getJurisdictionsFromIdam(roles);\n+\n+            assertAll(\n+                () -> assertThat(result.size(), is(2)),\n+                () -> assertThat(result.get(0), is(\"autotest1\")),\n+                () -> assertThat(result.get(1), is(\"autotest2\"))\n+            );\n+        }\n+\n+        @Test\n+        @DisplayName(\"It should retrieve all user jurisdictions from idam with no visibilities settings.\")\n+        void shouldRetrieveAllUserJurisdictionIdamWithNoVisibilities() {\n+\n+            final String[] roles = new String[] {\n+                \"caseworker\",\n+                \"caseworker-autotest1\",\n+                \"caseworker-autotest2\",\n+                \"caseworker-autotest3\"\n+            };\n+\n+            final List<String> result = jurisdictionsResolver.getJurisdictionsFromIdam(roles);\n+\n+            assertAll(\n+                () -> assertThat(result.size(), is(3)),\n+                () -> assertThat(result.get(0), is(\"autotest1\")),\n+                () -> assertThat(result.get(1), is(\"autotest2\")),\n+                () -> assertThat(result.get(2), is(\"autotest3\"))\n+            );\n+        }\n+\n+        @Test\n+        @DisplayName(\"It should retrieve all user jurisdictions for a user with many roles.\")\n+        void shouldRetrieveAllUserJurisdictionIdamUserWithManyRoles() {\n+\n+            final String[] roles = new String[] {\n+                \"caseworker\",\n+                \"caseworker-autotest1\",\n+                \"caseworker-autotest2\",\n+                \"otherRole\",\n+                \"otherRole-autotest1\",\n+                \"otherRole-autotest2\"\n+            };\n+\n+            final List<String> result = jurisdictionsResolver.getJurisdictionsFromIdam(roles);", "originalCommit": "9b3c829bfc5d9b630b251fc69a55c56ffb3e67cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxODg4MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r383918880", "bodyText": "addressed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-02-25T14:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgwODA3MA=="}], "type": "inlineReview"}, {"oid": "99b4400320f563da22905c418cf03b373307a8e6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/99b4400320f563da22905c418cf03b373307a8e6", "message": "RDM-7162: Automate Jurisdiction assignment \u2013 tactical solution", "committedDate": "2020-02-25T14:33:53Z", "type": "commit"}, {"oid": "fe06fce9e123154f90e519c7ff9f8d0de627ec3b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/fe06fce9e123154f90e519c7ff9f8d0de627ec3b", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-02T15:15:09Z", "type": "commit"}, {"oid": "1d1d70518c9899174cf6e61393e6ab3953149f9e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1d1d70518c9899174cf6e61393e6ab3953149f9e", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-10T06:21:56Z", "type": "commit"}, {"oid": "edb6ee43c9353ebf9c78cf44c185edf0e606ca89", "url": "https://github.com/hmcts/ccd-data-store-api/commit/edb6ee43c9353ebf9c78cf44c185edf0e606ca89", "message": "RDM-7162: Automate Jurisdiction assignment \u2013 tactical solution\nFixed UserProfile throwing exception when user doesn't exist on ccd", "committedDate": "2020-03-11T19:57:15Z", "type": "commit"}, {"oid": "818e62a67fb1b661f11abf453b908a33425c4995", "url": "https://github.com/hmcts/ccd-data-store-api/commit/818e62a67fb1b661f11abf453b908a33425c4995", "message": "RDM-7162: fixed failing test cases", "committedDate": "2020-03-11T22:55:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU3ODc4OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r391578789", "bodyText": "ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/data/user/DefaultUserRepository.java\n    \n    \n         Line 134\n      in\n      24ef266\n    \n    \n    \n    \n\n        \n          \n           throw new BadRequestException(message); \n        \n    \n  \n\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (ApiException ae) {\n          \n          \n            \n                    } catch (ResourceNotFoundException ae) {\n          \n      \n    \n    \n  \n\notherwise we would be handling also a generic BadRequestException or any other future subclasses of ApiException as a profile not existing?", "author": "mario-paniccia", "createdAt": "2020-03-12T12:12:37Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/user/UserService.java", "diffHunk": "@@ -58,22 +55,26 @@ public UserProfile getUserProfile() {\n             }\n         });\n \n-        return createUserProfile(idamProperties, userDefault, jurisdictions);\n+        return createUserProfile(idamProperties, userId, jurisdictions);\n     }\n \n-    private UserProfile createUserProfile(IDAMProperties idamProperties, UserDefault userDefault, List<Jurisdiction> jurisdictionsDefinition) {\n+    private UserProfile createUserProfile(IDAMProperties idamProperties, String userId, List<Jurisdiction> jurisdictionsDefinition) {\n \n         JurisdictionDisplayProperties[] resultJurisdictions = toResponse(jurisdictionsDefinition);\n \n-        WorkbasketDefault workbasketDefault = new WorkbasketDefault();\n-        workbasketDefault.setJurisdictionId(userDefault.getWorkBasketDefaultJurisdiction());\n-        workbasketDefault.setCaseTypeId(userDefault.getWorkBasketDefaultCaseType());\n-        workbasketDefault.setStateId(userDefault.getWorkBasketDefaultState());\n-\n         UserProfile userProfile = new UserProfile();\n         userProfile.setJurisdictions(resultJurisdictions);\n         userProfile.getUser().setIdamProperties(idamProperties);\n-        userProfile.getDefaultSettings().setWorkbasketDefault(workbasketDefault);\n+        try {\n+            UserDefault userDefault = userRepository.getUserDefaultSettings(userId);\n+            WorkbasketDefault workbasketDefault = new WorkbasketDefault();\n+            workbasketDefault.setJurisdictionId(userDefault.getWorkBasketDefaultJurisdiction());\n+            workbasketDefault.setCaseTypeId(userDefault.getWorkBasketDefaultCaseType());\n+            workbasketDefault.setStateId(userDefault.getWorkBasketDefaultState());\n+            userProfile.getDefaultSettings().setWorkbasketDefault(workbasketDefault);\n+        } catch (ApiException ae) {", "originalCommit": "edb6ee43c9353ebf9c78cf44c185edf0e606ca89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU4OTE5Mg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/819#discussion_r391589192", "bodyText": "agreed... Changed", "author": "kiran-yenigala-hmcts", "createdAt": "2020-03-12T12:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU3ODc4OQ=="}], "type": "inlineReview"}, {"oid": "962e02631c27ce4559d8e5c7a8d87d5f1b665337", "url": "https://github.com/hmcts/ccd-data-store-api/commit/962e02631c27ce4559d8e5c7a8d87d5f1b665337", "message": "RDM-7162: Changed exception handling logic", "committedDate": "2020-03-12T12:36:07Z", "type": "commit"}, {"oid": "3bbcecbe84305d7a54968728b3cd4c13d1136020", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3bbcecbe84305d7a54968728b3cd4c13d1136020", "message": "RDM-7162: fixed checkstyle issues (unused imports)", "committedDate": "2020-03-13T09:15:47Z", "type": "commit"}, {"oid": "5e441a9a629eaa1dfa02d6d8cfc215a2831e2297", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5e441a9a629eaa1dfa02d6d8cfc215a2831e2297", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-13T13:32:15Z", "type": "commit"}, {"oid": "37a30b672a70373c1be6e840ccdabea54fc19aba", "url": "https://github.com/hmcts/ccd-data-store-api/commit/37a30b672a70373c1be6e840ccdabea54fc19aba", "message": "Merge branch 'RDM-7162' of git@github.com:hmcts/ccd-data-store-api.git into RDM-7162", "committedDate": "2020-03-13T13:32:22Z", "type": "commit"}, {"oid": "0c318e002723fa5629a3c087da442abae6d4e9fe", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0c318e002723fa5629a3c087da442abae6d4e9fe", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-19T09:44:33Z", "type": "commit"}, {"oid": "17165c3f68e9e5c4230900361c94061c914cfa64", "url": "https://github.com/hmcts/ccd-data-store-api/commit/17165c3f68e9e5c4230900361c94061c914cfa64", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-20T09:44:11Z", "type": "commit"}, {"oid": "edbde84acf4cfd8d2cbc234405118ebf7f87309f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/edbde84acf4cfd8d2cbc234405118ebf7f87309f", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-23T10:19:14Z", "type": "commit"}, {"oid": "e63cf7791809a15a85de562394b23e83983f1962", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e63cf7791809a15a85de562394b23e83983f1962", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-24T12:02:24Z", "type": "commit"}, {"oid": "d2d26adf2188a88ac09e0f113621a7e1d6a4d403", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d2d26adf2188a88ac09e0f113621a7e1d6a4d403", "message": "suppress temporarily", "committedDate": "2020-03-24T12:04:25Z", "type": "commit"}, {"oid": "22a8802ee887b39883bcf957736936e1a1fca822", "url": "https://github.com/hmcts/ccd-data-store-api/commit/22a8802ee887b39883bcf957736936e1a1fca822", "message": "Enable debug logging level to test RDM-7162 issue", "committedDate": "2020-03-24T12:35:52Z", "type": "commit"}, {"oid": "1da1751b5d415e881b60dfb162936de7c9227860", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1da1751b5d415e881b60dfb162936de7c9227860", "message": "RDM-7162: Removed CVE supressions and debug logging", "committedDate": "2020-03-24T16:56:12Z", "type": "commit"}, {"oid": "62e863040bd2dcfb5408f6326389cf33ef920910", "url": "https://github.com/hmcts/ccd-data-store-api/commit/62e863040bd2dcfb5408f6326389cf33ef920910", "message": "Merge branch 'develop' into RDM-7162", "committedDate": "2020-03-25T09:24:20Z", "type": "commit"}]}