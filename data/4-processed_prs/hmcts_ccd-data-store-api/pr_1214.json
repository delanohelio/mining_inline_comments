{"pr_number": 1214, "pr_title": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB", "pr_createdAt": "2020-11-16T10:50:09Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1214", "timeline": [{"oid": "3a301bdc6dea79a9e74f7f9561a115c1ce83778d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3a301bdc6dea79a9e74f7f9561a115c1ce83778d", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB", "committedDate": "2020-11-16T10:48:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2MjM5OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1214#discussion_r524262398", "bodyText": "Did we check dropping of these indexes with respective service teams?\nAt least we should inform that to find out why these indexes are not in actual use though they once have got them created.", "author": "MSancaktutar", "createdAt": "2020-11-16T13:21:25Z", "path": "src/main/resources/db/changelog/db.changelog-RDM-10141.xml", "diffHunk": "@@ -0,0 +1,65 @@\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd\">\n+\n+\n+<changeSet id=\"rdm-10141\" author=\"sita.kandala@hmcts.net\">\n+    <sql dbms=\"postgresql\"\n+         endDelimiter=\"\\nGO\"\n+         splitStatements=\"true\"\n+         stripComments=\"true\">\n+\n+        CREATE INDEX IF NOT EXISTS idx_case_data_pl_familyManCaseNumber ON public.case_data USING btree (btrim(upper((data #>> '{familyManCaseNumber}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_pl_dateAndTimeSubmitted ON public.case_data USING btree (btrim(upper((data #>> '{dateAndTimeSubmitted}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_pr_journeyClassification ON public.case_data USING btree (btrim(upper((data #>> '{journeyClassification}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_pr_caseType ON public.case_data USING btree (btrim(upper((data #>> '{caseType}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_pr_casePrinted ON public.case_data USING btree (btrim(upper((data #>> '{casePrinted}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_pr_expiryDate ON public.case_data USING btree (btrim(upper((data #>> '{expiryDate}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_user_user_id ON case_users (user_id);\n+\n+        CREATE INDEX IF NOT EXISTS idx_case_data_cmc_submitterEmail ON public.case_data USING btree (btrim(upper((data #>> '{submitterEmail}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_ApplyForDecreeAbsolute ON public.case_data USING btree (btrim(upper((data #>> '{ApplyForDecreeAbsolute}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_D8MarriagePetitionerName ON public.case_data USING btree (btrim(upper((data #>> '{D8MarriagePetitionerName}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_D8MarriageRespondentName ON public.case_data USING btree (btrim(upper((data #>> '{D8MarriageRespondentName}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_D8RespondentLastName ON public.case_data USING btree (btrim(upper((data #>> '{D8RespondentLastName}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_D8RespondentFirstName ON public.case_data USING btree (btrim(upper((data #>> '{D8RespondentFirstName}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_divorceCaseNumber ON public.case_data USING btree (btrim(upper((data #>> '{divorceCaseNumber}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_DnOutcomeCase ON public.case_data USING btree (btrim(upper((data #>> '{DnOutcomeCase}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_D8HelpWithFeesNeedHelp ON public.case_data USING btree (btrim(upper((data #>> '{D8HelpWithFeesNeedHelp}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_SolPaymentHowToPay ON public.case_data USING btree (btrim(upper((data #>> '{SolPaymentHowToPay}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_solicitorReference ON public.case_data USING btree (btrim(upper((data #>> '{solicitorReference}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_regionList ON public.case_data USING btree (btrim(upper((data #>> '{regionList}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_divorce_midlandsFRCList ON public.case_data USING btree (btrim(upper((data #>> '{midlandsFRCList}'::text[]))));\n+\n+        CREATE INDEX IF NOT EXISTS idx_case_data_IA_appealReferenceNumber ON public.case_data USING btree (btrim(upper((data #>> '{appealReferenceNumber}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_IA_appellantDateOfBirth ON public.case_data USING btree (btrim(upper((data #>> '{appellantDateOfBirth}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_IA_appellantNameForDisplay ON public.case_data USING btree (btrim(upper((data #>> '{appellantNameForDisplay}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_IA_searchPostcode ON public.case_data USING btree (btrim(upper((data #>> '{searchPostcode}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_IA_legalRepReferenceNumber ON public.case_data USING btree (btrim(upper((data #>> '{legalRepReferenceNumber}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_IA_homeOfficeReferenceNumber ON public.case_data USING btree (btrim(upper((data #>> '{homeOfficeReferenceNumber}'::text[]))));\n+\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_appellant_dob ON public.case_data USING btree (btrim(upper((data #>> '{appeal,appellant,identity,dob}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_attachToCaseReference ON public.case_data USING btree (btrim(upper((data #>> '{attachToCaseReference}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_dateSentToDwp ON public.case_data USING btree (btrim(upper((data #>> '{dateSentToDwp}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_directionDueDate ON public.case_data USING btree (btrim(upper((data #>> '{directionDueDate}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_appeal_hearingType ON public.case_data USING btree (btrim(upper((data #>> '{appeal,hearingType}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_surname ON public.case_data USING btree (btrim(upper((data #>> '{surname}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_urgentCase ON public.case_data USING btree (btrim(upper((data #>> '{urgentCase}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_createdInGapsFrom ON public.case_data USING btree (btrim(upper((data #>> '{createdInGapsFrom}'::text[]))));\n+        CREATE INDEX IF NOT EXISTS idx_case_data_last_state_modified_date ON case_data (last_state_modified_date);\n+\n+        CREATE INDEX IF NOT EXISTS idx_case_data_sscs_subscriptionsjp_tya ON public.case_data USING btree (btrim(upper((data #>> '{subscriptions,jointPartySubscription,tya}'::text[]))));\n+\n+        CREATE INDEX IF NOT EXISTS idx_case_data_last_state_modified_date ON case_data (last_state_modified_date);\n+        CREATE INDEX IF NOT EXISTS idx_case_user_user_id ON case_users (user_id);\n+\n+        DROP INDEX IF EXISTS idx_case_data_generated_surname;\n+        DROP INDEX IF EXISTS idx_case_data_welsh_dnoutcomecase_solhowtopay_applyforda  ;\n+        DROP INDEX IF EXISTS idx_case_data_welsh_dnout_d8_sol_apply;\n+        DROP INDEX IF EXISTS idx_case_data_interlocreferraldate;\n+        DROP INDEX IF EXISTS idx_case_data_isscottishcase ;\n+        DROP INDEX IF EXISTS idx_case_data_application_type;", "originalCommit": "3a301bdc6dea79a9e74f7f9561a115c1ce83778d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4e0b413015ce1e51fc81e0aad78712b32ca3be5f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4e0b413015ce1e51fc81e0aad78712b32ca3be5f", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB", "committedDate": "2020-11-16T17:47:54Z", "type": "commit"}, {"oid": "5c9101662f39440f181f6d239475c399c22ef36b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5c9101662f39440f181f6d239475c399c22ef36b", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB", "committedDate": "2020-11-16T17:58:20Z", "type": "commit"}, {"oid": "d4e50411cd4f542cadc10672e88b32615b09994d", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d4e50411cd4f542cadc10672e88b32615b09994d", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB part 2", "committedDate": "2020-11-16T18:33:34Z", "type": "commit"}, {"oid": "bbadda58d1285b790088447c404049e29e0b7be2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/bbadda58d1285b790088447c404049e29e0b7be2", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB part 2", "committedDate": "2020-11-16T18:37:43Z", "type": "commit"}, {"oid": "cd5540d952a5c786102b67db6d0933aa1a3db88f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cd5540d952a5c786102b67db6d0933aa1a3db88f", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on DB part 3", "committedDate": "2020-11-16T18:55:14Z", "type": "commit"}, {"oid": "a756dfe6becc9eb5f01cbe1cef28d78e6e7243b5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a756dfe6becc9eb5f01cbe1cef28d78e6e7243b5", "message": "RDM-10141 Remediate API Calls Running Expensive Select Queries on added runInTransaction is false", "committedDate": "2020-11-17T10:56:46Z", "type": "commit"}, {"oid": "8584e34bbe7dad7d3bac273968c5034f131dbc1b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8584e34bbe7dad7d3bac273968c5034f131dbc1b", "message": "Merge branches 'RDM-10141' and 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-10141", "committedDate": "2020-11-25T16:40:13Z", "type": "commit"}, {"oid": "37970578751560df479458cd5d01067b7281bfcd", "url": "https://github.com/hmcts/ccd-data-store-api/commit/37970578751560df479458cd5d01067b7281bfcd", "message": "RDM-10340 [Second Round] Create Indexes on DB to Remediate Expensive Queries", "committedDate": "2020-11-25T17:00:14Z", "type": "commit"}, {"oid": "29de9fcea167dc5bd12c5e5bde831cf1521b72c8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/29de9fcea167dc5bd12c5e5bde831cf1521b72c8", "message": "RDM-10340 [Second Round] Create Indexes on DB to Remediate Expensive Queries", "committedDate": "2020-11-25T17:01:28Z", "type": "commit"}, {"oid": "76406ad9243deb8f2822a01dba94c6dc72971e81", "url": "https://github.com/hmcts/ccd-data-store-api/commit/76406ad9243deb8f2822a01dba94c6dc72971e81", "message": "RDM-10340 [Second Round] Create Indexes on DB to Remediate Expensive Queries", "committedDate": "2020-11-25T17:04:21Z", "type": "commit"}, {"oid": "5c138453ab94781052549b231091eeada5a589ec", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5c138453ab94781052549b231091eeada5a589ec", "message": "RDM-10340 [Second Round] Create Indexes on DB to Remediate Expensive Queries incorporated Alliu's suggestion", "committedDate": "2020-11-27T18:29:08Z", "type": "commit"}, {"oid": "e28f6835e6df540a19f624282ca8a92f329ecd50", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e28f6835e6df540a19f624282ca8a92f329ecd50", "message": "Merge branches 'RDM-10141' and 'develop' of https://github.com/hmcts/ccd-data-store-api into RDM-10141\n\n\u0001 Conflicts:\n\u0001\tsrc/main/resources/db/changelog/db.changelog-master.xml", "committedDate": "2020-11-27T18:30:27Z", "type": "commit"}, {"oid": "7b5f09c12d082c55a8a9677a0e5cf705c5558527", "url": "https://github.com/hmcts/ccd-data-store-api/commit/7b5f09c12d082c55a8a9677a0e5cf705c5558527", "message": "RDM-10340 [Second Round] Create Indexes on DB to Remediate Expensive Queries incorporated Alliu's suggestion", "committedDate": "2020-11-27T18:48:52Z", "type": "commit"}, {"oid": "bf2f7e6e609475b291b61cb245000b1d43488215", "url": "https://github.com/hmcts/ccd-data-store-api/commit/bf2f7e6e609475b291b61cb245000b1d43488215", "message": "Trigger notification", "committedDate": "2020-11-28T09:19:44Z", "type": "commit"}, {"oid": "7c7d9fb3d61e2b3196adcc4f1448caacffc50692", "url": "https://github.com/hmcts/ccd-data-store-api/commit/7c7d9fb3d61e2b3196adcc4f1448caacffc50692", "message": "Trigger notification", "committedDate": "2020-11-30T09:59:28Z", "type": "commit"}]}