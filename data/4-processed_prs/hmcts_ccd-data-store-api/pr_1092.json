{"pr_number": 1092, "pr_title": "RDM-9374 - Enhance search APIs to return supplementary data", "pr_createdAt": "2020-09-02T09:57:50Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1092", "timeline": [{"oid": "9b244daa549150f478377648872835426f449533", "url": "https://github.com/hmcts/ccd-data-store-api/commit/9b244daa549150f478377648872835426f449533", "message": "RDM-9374 - Enhance search APIs to return supplementary data", "committedDate": "2020-09-02T09:27:40Z", "type": "commit"}, {"oid": "17c926d4f37e884099207e87302228e9707b6098", "url": "https://github.com/hmcts/ccd-data-store-api/commit/17c926d4f37e884099207e87302228e9707b6098", "message": "RDM-9374 - Checkstyle", "committedDate": "2020-09-02T09:56:58Z", "type": "commit"}, {"oid": "daa69916168f912075dcf3740464cef86df66c15", "url": "https://github.com/hmcts/ccd-data-store-api/commit/daa69916168f912075dcf3740464cef86df66c15", "message": "RDM-9374 - Fix broken tests", "committedDate": "2020-09-02T11:21:18Z", "type": "commit"}, {"oid": "cad04a2e234374e0d9b152a97f7b51dea0fbe0b8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cad04a2e234374e0d9b152a97f7b51dea0fbe0b8", "message": "supress sonar", "committedDate": "2020-09-02T15:53:37Z", "type": "commit"}, {"oid": "3b47e8d49a3114806166f9cde647a6593c1893c2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3b47e8d49a3114806166f9cde647a6593c1893c2", "message": "RDM-9374 - Add supplementary_data unit test", "committedDate": "2020-09-02T15:54:27Z", "type": "commit"}, {"oid": "e3bb8519485b426a19f51ba39d429864a1733ae8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e3bb8519485b426a19f51ba39d429864a1733ae8", "message": "Sonar suppression for unrelated code", "committedDate": "2020-09-02T15:59:14Z", "type": "commit"}, {"oid": "e05394b1c8512e37aaff24b63cd2c297b36bda7f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e05394b1c8512e37aaff24b63cd2c297b36bda7f", "message": "Sonar suppression for unrelated code", "committedDate": "2020-09-02T16:39:22Z", "type": "commit"}, {"oid": "3af8b1f68b299bdf8a0cba6f6586176bc55496e3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3af8b1f68b299bdf8a0cba6f6586176bc55496e3", "message": "RDM-9374 - Cleanup and tests", "committedDate": "2020-09-03T12:14:48Z", "type": "commit"}, {"oid": "fee1d03f8c4f21eb5f7d7a3f3fbda1e77cbb93d5", "url": "https://github.com/hmcts/ccd-data-store-api/commit/fee1d03f8c4f21eb5f7d7a3f3fbda1e77cbb93d5", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-03T12:15:01Z", "type": "commit"}, {"oid": "7add1405a0f6b06018a100f2f4d8615de0055ed3", "url": "https://github.com/hmcts/ccd-data-store-api/commit/7add1405a0f6b06018a100f2f4d8615de0055ed3", "message": "RDM-9374 - Revert temporary changes", "committedDate": "2020-09-03T12:30:11Z", "type": "commit"}, {"oid": "33b28c41eb4e923664408390b5a54be7b6bc5f60", "url": "https://github.com/hmcts/ccd-data-store-api/commit/33b28c41eb4e923664408390b5a54be7b6bc5f60", "message": "Update BEFTA smoke test data", "committedDate": "2020-09-03T13:21:27Z", "type": "commit"}, {"oid": "fc1efd9b190cb149589e60b55f6bdb3a1397a7e1", "url": "https://github.com/hmcts/ccd-data-store-api/commit/fc1efd9b190cb149589e60b55f6bdb3a1397a7e1", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-03T14:24:54Z", "type": "commit"}, {"oid": "a3b8c71de888baa011f181cad2ad9dc07fb3939a", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a3b8c71de888baa011f181cad2ad9dc07fb3939a", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-03T14:30:35Z", "type": "commit"}, {"oid": "cb0169b1d3e3705a65f52be725e9d8e25c6d3ac7", "url": "https://github.com/hmcts/ccd-data-store-api/commit/cb0169b1d3e3705a65f52be725e9d8e25c6d3ac7", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-03T18:55:33Z", "type": "commit"}, {"oid": "57eb19a7d6a6997b4ed63e5bb6a02cbea36206d6", "url": "https://github.com/hmcts/ccd-data-store-api/commit/57eb19a7d6a6997b4ed63e5bb6a02cbea36206d6", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-03T19:04:54Z", "type": "commit"}, {"oid": "1ff71d3e13363f0b3a0438f299b507a30b370362", "url": "https://github.com/hmcts/ccd-data-store-api/commit/1ff71d3e13363f0b3a0438f299b507a30b370362", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-04T09:06:11Z", "type": "commit"}, {"oid": "0a36f522bd324357bea309987825fd4638f072e0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/0a36f522bd324357bea309987825fd4638f072e0", "message": "Suppressions", "committedDate": "2020-09-04T09:06:44Z", "type": "commit"}, {"oid": "052e359f40ce7998cd2888b3a5329e5f9e50d24f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/052e359f40ce7998cd2888b3a5329e5f9e50d24f", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-04T09:41:10Z", "type": "commit"}, {"oid": "eb7445a1ead4b71d4cc446c6ff82870734b8c532", "url": "https://github.com/hmcts/ccd-data-store-api/commit/eb7445a1ead4b71d4cc446c6ff82870734b8c532", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-04T10:15:08Z", "type": "commit"}, {"oid": "f0705d5dfda1e4ac1f7a3655bd646e505dfc4e45", "url": "https://github.com/hmcts/ccd-data-store-api/commit/f0705d5dfda1e4ac1f7a3655bd646e505dfc4e45", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-04T10:50:45Z", "type": "commit"}, {"oid": "3f6e4dce87b81bd806de055941380471657e0a7f", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3f6e4dce87b81bd806de055941380471657e0a7f", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-04T11:26:38Z", "type": "commit"}, {"oid": "2c41aa211043e64e78eea007ce254180bb0433d0", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2c41aa211043e64e78eea007ce254180bb0433d0", "message": "RDM-9374 - Update BEFTA test data for supplementary_data", "committedDate": "2020-09-04T11:52:45Z", "type": "commit"}, {"oid": "e516f329d46bffb79a3a25d7af04ba5d36d57dd9", "url": "https://github.com/hmcts/ccd-data-store-api/commit/e516f329d46bffb79a3a25d7af04ba5d36d57dd9", "message": "Revert suppressions file to develop", "committedDate": "2020-09-04T12:51:30Z", "type": "commit"}, {"oid": "a2d43780b3c274c497983718b25db216da06d4f4", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a2d43780b3c274c497983718b25db216da06d4f4", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-04T13:04:34Z", "type": "commit"}, {"oid": "04228f87f74399524667048ad80833f2f49c0170", "url": "https://github.com/hmcts/ccd-data-store-api/commit/04228f87f74399524667048ad80833f2f49c0170", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-04T14:49:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzNTkzNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484335935", "bodyText": "in theory the column is nullable:\n\n  \n    \n      ccd-data-store-api/src/main/resources/db/changelog/db.changelog-RDM-8747.xml\n    \n    \n         Line 8\n      in\n      95a9061\n    \n    \n    \n    \n\n        \n          \n           <constraints nullable=\"true\"/>", "author": "mario-paniccia", "createdAt": "2020-09-07T10:13:49Z", "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/CaseDetailsEntity.java", "diffHunk": "@@ -95,6 +96,9 @@\n     @Column(name = DATA_CLASSIFICATION_COL, nullable = false)\n     @Convert(converter = JsonDataConverter.class)\n     private JsonNode dataClassification;\n+    @Column(name = SUPPLEMENTARY_DATA_COL, nullable = false)", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MTQwMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484341400", "bodyText": "maybe a method MetaData.getColumnNames()? I'd also suggest using a foreach loop, much simpler to understand:\nfor (String metadata : MetaData.getColumnNames()) {\n     METADATA_FIELDS.add(new TextNode(metadata));\n}", "author": "mario-paniccia", "createdAt": "2020-09-07T10:24:24Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -4,39 +4,73 @@\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.BooleanNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n import lombok.Data;\n import lombok.NonNull;\n import uk.gov.hmcts.ccd.data.casedetails.search.MetaData;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.BadSearchRequest;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n-import java.util.stream.Collectors;\n import java.util.stream.StreamSupport;\n \n+import static java.util.stream.Collectors.toList;\n+import static uk.gov.hmcts.ccd.config.JacksonUtils.MAPPER;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_CLASSIFICATION_COL;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_COL;\n+\n @Data\n public class ElasticsearchRequest {\n \n     public static final String SORT = \"sort\";\n     public static final String SOURCE = \"_source\";\n     public static final String QUERY = \"query\";\n+    public static final String NATIVE_ES_QUERY = \"native_es_query\";\n+    public static final String SUPPLEMENTARY_DATA = \"supplementary_data\";\n     public static final String CASE_DATA_PREFIX = \"data.\";\n+    public static final String SUPPLEMENTARY_DATA_PREFIX = \"supplementary_data.\";\n     public static final String COLLECTION_VALUE_SUFFIX = \".value\";\n     public static final String WILDCARD = \"*\";\n+    public static final ArrayNode METADATA_FIELDS;\n+\n+    private JsonNode nativeSearchRequest;\n+    private ArrayNode supplementaryData;\n+\n+    static {\n+        METADATA_FIELDS = MAPPER.createArrayNode();\n+        Arrays.stream(MetaData.CaseField.values())\n+            .map(field -> new TextNode(field.getDbColumnName()))", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0Mzk4MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484343981", "bodyText": "furthermore, can't this be part of the constructor? how come a static block?", "author": "mario-paniccia", "createdAt": "2020-09-07T10:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1Mzg0NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484353845", "bodyText": "It could have been part of the constructor, but chose not to since a new ElasticsearchRequest instance will be created every time a search is conducted but the metadata fields won't change - just to save all the unnecessary repeated processing!", "author": "danlysiak", "createdAt": "2020-09-07T10:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0MTQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0NjA3Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484346076", "bodyText": "do we need this if check? if supplementary_data is not in the request it will be set to null right?", "author": "mario-paniccia", "createdAt": "2020-09-07T10:34:05Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -4,39 +4,73 @@\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.BooleanNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n import lombok.Data;\n import lombok.NonNull;\n import uk.gov.hmcts.ccd.data.casedetails.search.MetaData;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.BadSearchRequest;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n-import java.util.stream.Collectors;\n import java.util.stream.StreamSupport;\n \n+import static java.util.stream.Collectors.toList;\n+import static uk.gov.hmcts.ccd.config.JacksonUtils.MAPPER;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_CLASSIFICATION_COL;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_COL;\n+\n @Data\n public class ElasticsearchRequest {\n \n     public static final String SORT = \"sort\";\n     public static final String SOURCE = \"_source\";\n     public static final String QUERY = \"query\";\n+    public static final String NATIVE_ES_QUERY = \"native_es_query\";\n+    public static final String SUPPLEMENTARY_DATA = \"supplementary_data\";\n     public static final String CASE_DATA_PREFIX = \"data.\";\n+    public static final String SUPPLEMENTARY_DATA_PREFIX = \"supplementary_data.\";\n     public static final String COLLECTION_VALUE_SUFFIX = \".value\";\n     public static final String WILDCARD = \"*\";\n+    public static final ArrayNode METADATA_FIELDS;\n+\n+    private JsonNode nativeSearchRequest;\n+    private ArrayNode supplementaryData;\n+\n+    static {\n+        METADATA_FIELDS = MAPPER.createArrayNode();\n+        Arrays.stream(MetaData.CaseField.values())\n+            .map(field -> new TextNode(field.getDbColumnName()))\n+            .forEach(METADATA_FIELDS::add);\n+        METADATA_FIELDS.add(new TextNode(DATA_CLASSIFICATION_COL));\n+    }\n \n-    @NonNull\n-    private JsonNode searchRequest;\n+    public ElasticsearchRequest(@NonNull JsonNode searchRequest) {\n+        initRequest(searchRequest);\n+    }\n+\n+    private void initRequest(JsonNode searchRequest) {\n+        if (searchRequest.has(NATIVE_ES_QUERY)) {\n+            setNativeSearchRequest(searchRequest.get(NATIVE_ES_QUERY));\n+            if (searchRequest.has(SUPPLEMENTARY_DATA)) {", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgwMDY0Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484800646", "bodyText": "No longer required following other review changes \ud83d\udc4d", "author": "danlysiak", "createdAt": "2020-09-08T10:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0NjA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NTg1NA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484355854", "bodyText": "rather than adding checks in multiple places checking if supp data is an array, we could validate that once at the controller level where we check the validity of the request:\n\n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/domain/service/search/elasticsearch/ElasticsearchQueryHelper.java\n    \n    \n         Line 31\n      in\n      17f3cbe\n    \n    \n    \n    \n\n        \n          \n           public ElasticsearchRequest validateAndConvertRequest(String jsonSearchRequest) { \n        \n    \n  \n\n\nand then assume it's an array here. We should also document in Swagger that it has to be an array if we haven't done it yet", "author": "mario-paniccia", "createdAt": "2020-09-07T10:53:01Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -59,22 +93,64 @@ public JsonNode getSource() {\n                 .map(JsonNode::asText)\n                 .map(this::getFieldId)\n                 .filter(Objects::nonNull)\n-                .collect(Collectors.toList());\n+                .collect(toList());\n         }\n \n         return Collections.emptyList();\n     }\n \n     public boolean hasQuery() {\n-        return searchRequest.has(QUERY);\n+        return nativeSearchRequest.has(QUERY);\n     }\n \n     public JsonNode getQuery() {\n-        return searchRequest.get(QUERY);\n+        return nativeSearchRequest.get(QUERY);\n+    }\n+\n+    public boolean hasSupplementaryData() {\n+        return supplementaryData != null && supplementaryData.isArray();", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NzQ1Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484357456", "bodyText": "this is part of the request validation, so it would be better here probably?\n\n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/domain/service/search/elasticsearch/ElasticsearchQueryHelper.java\n    \n    \n         Line 31\n      in\n      17f3cbe\n    \n    \n    \n    \n\n        \n          \n           public ElasticsearchRequest validateAndConvertRequest(String jsonSearchRequest) {", "author": "mario-paniccia", "createdAt": "2020-09-07T10:56:18Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -88,4 +164,9 @@ private String getFieldId(String fieldSourceName) {\n             }\n         }\n     }\n+\n+    private boolean arrayContainsOnlyText(ArrayNode node) {\n+        return StreamSupport.stream(node.spliterator(), false)\n+            .allMatch(JsonNode::isTextual);\n+    }", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1ODc0Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484358746", "bodyText": "better move this to:\n\n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/domain/service/search/elasticsearch/ElasticsearchQueryHelper.java\n    \n    \n         Line 31\n      in\n      17f3cbe\n    \n    \n    \n    \n\n        \n          \n           public ElasticsearchRequest validateAndConvertRequest(String jsonSearchRequest) {", "author": "mario-paniccia", "createdAt": "2020-09-07T10:59:04Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -59,22 +93,64 @@ public JsonNode getSource() {\n                 .map(JsonNode::asText)\n                 .map(this::getFieldId)\n                 .filter(Objects::nonNull)\n-                .collect(Collectors.toList());\n+                .collect(toList());\n         }\n \n         return Collections.emptyList();\n     }\n \n     public boolean hasQuery() {\n-        return searchRequest.has(QUERY);\n+        return nativeSearchRequest.has(QUERY);\n     }\n \n     public JsonNode getQuery() {\n-        return searchRequest.get(QUERY);\n+        return nativeSearchRequest.get(QUERY);\n+    }\n+\n+    public boolean hasSupplementaryData() {\n+        return supplementaryData != null && supplementaryData.isArray();\n+    }\n+\n+    public JsonNode getSupplementaryData() {\n+        return supplementaryData;\n+    }\n+\n+    public void setSupplementaryData(JsonNode node) {\n+        if (node.isArray() && arrayContainsOnlyText((ArrayNode) node)) {\n+            this.supplementaryData = (ArrayNode) node;\n+        } else {\n+            throw new BadSearchRequest(\"Provided supplementary_data must be an array of text fields.\");\n+        }", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1OTAyMg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484359022", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new BadSearchRequest(\"Provided supplementary_data must be an array of text fields.\");\n          \n          \n            \n                        throw new BadSearchRequest(\"Requested supplementary_data must be an array of text fields.\");", "author": "mario-paniccia", "createdAt": "2020-09-07T10:59:38Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -59,22 +93,64 @@ public JsonNode getSource() {\n                 .map(JsonNode::asText)\n                 .map(this::getFieldId)\n                 .filter(Objects::nonNull)\n-                .collect(Collectors.toList());\n+                .collect(toList());\n         }\n \n         return Collections.emptyList();\n     }\n \n     public boolean hasQuery() {\n-        return searchRequest.has(QUERY);\n+        return nativeSearchRequest.has(QUERY);\n     }\n \n     public JsonNode getQuery() {\n-        return searchRequest.get(QUERY);\n+        return nativeSearchRequest.get(QUERY);\n+    }\n+\n+    public boolean hasSupplementaryData() {\n+        return supplementaryData != null && supplementaryData.isArray();\n+    }\n+\n+    public JsonNode getSupplementaryData() {\n+        return supplementaryData;\n+    }\n+\n+    public void setSupplementaryData(JsonNode node) {\n+        if (node.isArray() && arrayContainsOnlyText((ArrayNode) node)) {\n+            this.supplementaryData = (ArrayNode) node;\n+        } else {\n+            throw new BadSearchRequest(\"Provided supplementary_data must be an array of text fields.\");", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1OTI1Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484359256", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ArrayNode supplementaryData;\n          \n          \n            \n                private ArrayNode requestedSupplementaryData;", "author": "mario-paniccia", "createdAt": "2020-09-07T11:00:03Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -4,39 +4,73 @@\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.BooleanNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n import lombok.Data;\n import lombok.NonNull;\n import uk.gov.hmcts.ccd.data.casedetails.search.MetaData;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.BadSearchRequest;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n-import java.util.stream.Collectors;\n import java.util.stream.StreamSupport;\n \n+import static java.util.stream.Collectors.toList;\n+import static uk.gov.hmcts.ccd.config.JacksonUtils.MAPPER;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_CLASSIFICATION_COL;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_COL;\n+\n @Data\n public class ElasticsearchRequest {\n \n     public static final String SORT = \"sort\";\n     public static final String SOURCE = \"_source\";\n     public static final String QUERY = \"query\";\n+    public static final String NATIVE_ES_QUERY = \"native_es_query\";\n+    public static final String SUPPLEMENTARY_DATA = \"supplementary_data\";\n     public static final String CASE_DATA_PREFIX = \"data.\";\n+    public static final String SUPPLEMENTARY_DATA_PREFIX = \"supplementary_data.\";\n     public static final String COLLECTION_VALUE_SUFFIX = \".value\";\n     public static final String WILDCARD = \"*\";\n+    public static final ArrayNode METADATA_FIELDS;\n+\n+    private JsonNode nativeSearchRequest;\n+    private ArrayNode supplementaryData;", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM3MTU1Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r484371556", "bodyText": "this is now doing more than simply converting to Json. Shall we rename to:\ntoFinalRequest() or sim?", "author": "mario-paniccia", "createdAt": "2020-09-07T11:26:11Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -59,22 +93,64 @@ public JsonNode getSource() {\n                 .map(JsonNode::asText)\n                 .map(this::getFieldId)\n                 .filter(Objects::nonNull)\n-                .collect(Collectors.toList());\n+                .collect(toList());\n         }\n \n         return Collections.emptyList();\n     }\n \n     public boolean hasQuery() {\n-        return searchRequest.has(QUERY);\n+        return nativeSearchRequest.has(QUERY);\n     }\n \n     public JsonNode getQuery() {\n-        return searchRequest.get(QUERY);\n+        return nativeSearchRequest.get(QUERY);\n+    }\n+\n+    public boolean hasSupplementaryData() {\n+        return supplementaryData != null && supplementaryData.isArray();\n+    }\n+\n+    public JsonNode getSupplementaryData() {\n+        return supplementaryData;\n+    }\n+\n+    public void setSupplementaryData(JsonNode node) {\n+        if (node.isArray() && arrayContainsOnlyText((ArrayNode) node)) {\n+            this.supplementaryData = (ArrayNode) node;\n+        } else {\n+            throw new BadSearchRequest(\"Provided supplementary_data must be an array of text fields.\");\n+        }\n     }\n \n+    /**\n+     * Creates a JSON string representing the Elasticsearch request object.\n+     * Custom properties supported by CCD will be merged appropriately to generate a native Elasticsearch request.\n+     * @return JSON string representing the Elasticsearch request object.\n+     */\n     public String toJson() {", "originalCommit": "04228f87f74399524667048ad80833f2f49c0170", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fa39b0b0fa76c03664723b9b51d707797679d4ba", "url": "https://github.com/hmcts/ccd-data-store-api/commit/fa39b0b0fa76c03664723b9b51d707797679d4ba", "message": "RDM-9374 - Review comments", "committedDate": "2020-09-08T10:08:35Z", "type": "commit"}, {"oid": "96144abc8f4bd370ee1092dd9b48080a08f49592", "url": "https://github.com/hmcts/ccd-data-store-api/commit/96144abc8f4bd370ee1092dd9b48080a08f49592", "message": "pmd suppression", "committedDate": "2020-09-08T10:19:20Z", "type": "commit"}, {"oid": "a7b83f4e96c0b7d0c2bf29194318cc0ca5464903", "url": "https://github.com/hmcts/ccd-data-store-api/commit/a7b83f4e96c0b7d0c2bf29194318cc0ca5464903", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-08T10:21:49Z", "type": "commit"}, {"oid": "b0b5cc2092dd43cd741313c65473fad38da335bf", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b0b5cc2092dd43cd741313c65473fad38da335bf", "message": "RDM-9374 - Return supplementary data by default for standard requests", "committedDate": "2020-09-09T12:57:42Z", "type": "commit"}, {"oid": "4d4241f6c86f6eceee6bfcd597a0f8242f5da17b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/4d4241f6c86f6eceee6bfcd597a0f8242f5da17b", "message": "Add supplementary_data to modelToEntity", "committedDate": "2020-09-09T14:51:48Z", "type": "commit"}, {"oid": "efeb818d33eaf5ec53d0685d5e8828a9636ad6df", "url": "https://github.com/hmcts/ccd-data-store-api/commit/efeb818d33eaf5ec53d0685d5e8828a9636ad6df", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-09T15:38:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxODE3Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r485718177", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .forEach(field -> sourceFields.add(new TextNode(SUPPLEMENTARY_DATA_PREFIX + field.asText())));\n          \n          \n            \n                            .forEach(sd -> sourceFields.add(new TextNode(SUPPLEMENTARY_DATA_PREFIX + sd.asText())));", "author": "mario-paniccia", "createdAt": "2020-09-09T15:49:39Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -59,22 +89,63 @@ public JsonNode getSource() {\n                 .map(JsonNode::asText)\n                 .map(this::getFieldId)\n                 .filter(Objects::nonNull)\n-                .collect(Collectors.toList());\n+                .collect(toList());\n         }\n \n         return Collections.emptyList();\n     }\n \n     public boolean hasQuery() {\n-        return searchRequest.has(QUERY);\n+        return nativeSearchRequest.has(QUERY);\n     }\n \n     public JsonNode getQuery() {\n-        return searchRequest.get(QUERY);\n+        return nativeSearchRequest.get(QUERY);\n+    }\n+\n+    public boolean hasRequestedSupplementaryData() {\n+        return requestedSupplementaryData != null;\n+    }\n+\n+    public void setRequestedSupplementaryData(ArrayNode requestedSupplementaryData) {\n+        this.requestedSupplementaryData = requestedSupplementaryData;\n     }\n \n-    public String toJson() {\n-        return searchRequest.toString();\n+    public void setRequestedSupplementaryData(String... requestedSupplementaryDataFields) {\n+        requestedSupplementaryData = MAPPER.createArrayNode();\n+        for (String field : requestedSupplementaryDataFields) {\n+            requestedSupplementaryData.add(new TextNode(field));\n+        }\n+    }\n+\n+    /**\n+     * Creates a JSON string representing the Elasticsearch request object.\n+     * Custom properties supported by CCD will be merged appropriately to generate a native Elasticsearch request.\n+     * @return JSON string representing the Elasticsearch request object.\n+     */\n+    public String toFinalRequest() {\n+        JsonNode mergedRequest = nativeSearchRequest.deepCopy();\n+\n+        ((ObjectNode) mergedRequest).set(SOURCE, mergedSourceFields());\n+\n+        return mergedRequest.toString();\n+    }\n+\n+    private ArrayNode mergedSourceFields() {\n+        ArrayNode sourceFields = METADATA_FIELDS.deepCopy();\n+\n+        if (hasSourceFields()) {\n+            sourceFields.addAll((ArrayNode) getSource());\n+        } else {\n+            sourceFields.add(new TextNode(DATA_COL));\n+        }\n+\n+        if (hasRequestedSupplementaryData()) {\n+            StreamSupport.stream(getRequestedSupplementaryData().spliterator(), false)\n+                .forEach(field -> sourceFields.add(new TextNode(SUPPLEMENTARY_DATA_PREFIX + field.asText())));", "originalCommit": "efeb818d33eaf5ec53d0685d5e8828a9636ad6df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxOTI4Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r485719287", "bodyText": "not 100% sure but would it make the code simpler to have this as an List<String>? so that clients don't have to work with the cumbersome Jakson API", "author": "mario-paniccia", "createdAt": "2020-09-09T15:51:17Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -4,39 +4,69 @@\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.BooleanNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n import lombok.Data;\n import lombok.NonNull;\n import uk.gov.hmcts.ccd.data.casedetails.search.MetaData;\n \n import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n-import java.util.stream.Collectors;\n import java.util.stream.StreamSupport;\n \n+import static java.util.stream.Collectors.toList;\n+import static uk.gov.hmcts.ccd.config.JacksonUtils.MAPPER;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_CLASSIFICATION_COL;\n+import static uk.gov.hmcts.ccd.data.casedetails.CaseDetailsEntity.DATA_COL;\n+\n @Data\n public class ElasticsearchRequest {\n \n     public static final String SORT = \"sort\";\n     public static final String SOURCE = \"_source\";\n     public static final String QUERY = \"query\";\n+    public static final String NATIVE_ES_QUERY = \"native_es_query\";\n+    public static final String SUPPLEMENTARY_DATA = \"supplementary_data\";\n     public static final String CASE_DATA_PREFIX = \"data.\";\n+    public static final String SUPPLEMENTARY_DATA_PREFIX = \"supplementary_data.\";\n     public static final String COLLECTION_VALUE_SUFFIX = \".value\";\n     public static final String WILDCARD = \"*\";\n+    public static final ArrayNode METADATA_FIELDS;\n+\n+    private JsonNode nativeSearchRequest;\n+    private ArrayNode requestedSupplementaryData;", "originalCommit": "efeb818d33eaf5ec53d0685d5e8828a9636ad6df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyNTIwNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r485825205", "bodyText": "Hmm, the searchRequest coming into the constructor is already a JsonNode that we extract supplementary data out of. Unless we have to start doing any more complex intermediate processing in this class on the object it might be better to keep as is - otherwise it will be coming in as an ArrayNode, converting to List<String> then converting back to ArrayNode to create the \"final\" request?", "author": "danlysiak", "createdAt": "2020-09-09T18:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxOTI4Nw=="}], "type": "inlineReview"}, {"oid": "6a4ed8de329bfd3e72cc3285b9f65bb9c08fe42e", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6a4ed8de329bfd3e72cc3285b9f65bb9c08fe42e", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-09T16:23:23Z", "type": "commit"}, {"oid": "6b99e00f0d171a2085d51187b87a3cc8e11bf4d8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/6b99e00f0d171a2085d51187b87a3cc8e11bf4d8", "message": "RDM-9374 - Review comment renaming\n\nCo-authored-by: Mario Paniccia <mario.paniccia@hmcts.net>", "committedDate": "2020-09-09T18:18:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE4MjE4OA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1092#discussion_r486182188", "bodyText": "Contrary to before, all requests DataStore generates to ES now will have the _source field right?\nWhereas before only when:\nelasticsearchRequest.hasSourceFields()\nwondering whether _source will make searches performance worse \ud83e\udd14", "author": "mario-paniccia", "createdAt": "2020-09-10T09:04:41Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/search/elasticsearch/ElasticsearchRequest.java", "diffHunk": "@@ -59,22 +89,63 @@ public JsonNode getSource() {\n                 .map(JsonNode::asText)\n                 .map(this::getFieldId)\n                 .filter(Objects::nonNull)\n-                .collect(Collectors.toList());\n+                .collect(toList());\n         }\n \n         return Collections.emptyList();\n     }\n \n     public boolean hasQuery() {\n-        return searchRequest.has(QUERY);\n+        return nativeSearchRequest.has(QUERY);\n     }\n \n     public JsonNode getQuery() {\n-        return searchRequest.get(QUERY);\n+        return nativeSearchRequest.get(QUERY);\n+    }\n+\n+    public boolean hasRequestedSupplementaryData() {\n+        return requestedSupplementaryData != null;\n+    }\n+\n+    public void setRequestedSupplementaryData(ArrayNode requestedSupplementaryData) {\n+        this.requestedSupplementaryData = requestedSupplementaryData;\n     }\n \n-    public String toJson() {\n-        return searchRequest.toString();\n+    public void setRequestedSupplementaryData(String... requestedSupplementaryDataFields) {\n+        requestedSupplementaryData = MAPPER.createArrayNode();\n+        for (String field : requestedSupplementaryDataFields) {\n+            requestedSupplementaryData.add(new TextNode(field));\n+        }\n+    }\n+\n+    /**\n+     * Creates a JSON string representing the Elasticsearch request object.\n+     * Custom properties supported by CCD will be merged appropriately to generate a native Elasticsearch request.\n+     * @return JSON string representing the Elasticsearch request object.\n+     */\n+    public String toFinalRequest() {\n+        JsonNode mergedRequest = nativeSearchRequest.deepCopy();\n+\n+        ((ObjectNode) mergedRequest).set(SOURCE, mergedSourceFields());", "originalCommit": "6b99e00f0d171a2085d51187b87a3cc8e11bf4d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c2cc26799c9267ce9f004417ed239afb557256ae", "url": "https://github.com/hmcts/ccd-data-store-api/commit/c2cc26799c9267ce9f004417ed239afb557256ae", "message": "Merge branch 'develop' into RDM-9374", "committedDate": "2020-09-10T12:45:46Z", "type": "commit"}, {"oid": "623aae53d613dae06bd5416100a0139ebfa41c8c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/623aae53d613dae06bd5416100a0139ebfa41c8c", "message": "RDM-9374 - Update new FT", "committedDate": "2020-09-11T09:21:24Z", "type": "commit"}, {"oid": "19704ab6396a2818a4708688dc2d7ac8d1d5be8b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/19704ab6396a2818a4708688dc2d7ac8d1d5be8b", "message": "tests for ES supp data (#1122)\n\n* tests for ES supp data\r\n\r\n* delete data file\r\n\r\n* run es test on preview\r\n\r\n* wire to new def store\r\n\r\n* enable es\r\n\r\n* revert es test run configs", "committedDate": "2020-09-21T15:33:20Z", "type": "commit"}]}