{"pr_number": 971, "pr_title": "Update to Vert.x 4.0.0 Beta 2 OKAPI-889", "pr_createdAt": "2020-09-12T07:42:27Z", "pr_url": "https://github.com/folio-org/okapi/pull/971", "timeline": [{"oid": "8080a5e7fd442ce4346889b276664ead697ba30d", "url": "https://github.com/folio-org/okapi/commit/8080a5e7fd442ce4346889b276664ead697ba30d", "message": "Update to Vert.x 4.0.0 Beta 2 OKAPI-889\n\nAlso netty to 4.1.52.Final. There are code changes due to the\nmethods that have been removed from HttpClient.", "committedDate": "2020-09-12T07:40:37Z", "type": "commit"}, {"oid": "b013ae6996f0ca0532a5c3dcf8ff0ee37606faab", "url": "https://github.com/folio-org/okapi/commit/b013ae6996f0ca0532a5c3dcf8ff0ee37606faab", "message": "Merge branch 'master' into okapi-889-vertx-4-0-0-beta2", "committedDate": "2020-09-12T07:58:35Z", "type": "commit"}, {"oid": "caa04a821cd3a32ef401d9f4278ba2527315ee1a", "url": "https://github.com/folio-org/okapi/commit/caa04a821cd3a32ef401d9f4278ba2527315ee1a", "message": "Refactor a bit", "committedDate": "2020-09-13T15:03:12Z", "type": "commit"}, {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb", "url": "https://github.com/folio-org/okapi/commit/bb4f4c32ec15fdda2064a3838311035bc853c3cb", "message": "Reformat", "committedDate": "2020-09-14T05:56:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxNDE4MQ==", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r487814181", "bodyText": "x should be renamed to e and the fail method been used.", "author": "julianladisch", "createdAt": "2020-09-14T10:36:15Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/DiscoveryManager.java", "diffHunk": "@@ -578,23 +587,28 @@ void health(DeploymentDescriptor md,\n       fut.handle(new Success<>(hd));\n       return;\n     }\n-    httpClient.get(new RequestOptions().setAbsoluteURI(url), res1 -> {\n-      if (res1.failed()) {\n-        hd.setHealthMessage(\"Fail: \" + res1.cause().getMessage());\n-        hd.setHealthStatus(false);\n-        fut.handle(new Success<>(hd));\n+    httpClient.request(new RequestOptions().setAbsoluteURI(url).setMethod(HttpMethod.GET), req -> {\n+      if (req.failed()) {\n+        fail(req.cause(), hd, fut);\n         return;\n       }\n-      HttpClientResponse response = res1.result();\n-      response.endHandler(res -> {\n-        hd.setHealthMessage(\"OK\");\n-        hd.setHealthStatus(true);\n-        fut.handle(new Success<>(hd));\n-      });\n-      response.exceptionHandler(res -> {\n-        hd.setHealthMessage(\"Fail: \" + res.getMessage());\n-        hd.setHealthStatus(false);\n-        fut.handle(new Success<>(hd));\n+      req.result().end();\n+      req.result().onComplete(res -> {\n+        if (res.failed()) {\n+          fail(res.cause(), hd, fut);\n+          return;\n+        }\n+        HttpClientResponse response = res.result();\n+        response.endHandler(x -> {\n+          hd.setHealthMessage(\"OK\");\n+          hd.setHealthStatus(true);\n+          fut.handle(new Success<>(hd));\n+        });\n+        response.exceptionHandler(x -> {\n+          hd.setHealthMessage(\"Fail: \" + x.getMessage());\n+          hd.setHealthStatus(false);\n+          fut.handle(new Success<>(hd));", "originalCommit": "bb4f4c32ec15fdda2064a3838311035bc853c3cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0NDYwNg==", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r488544606", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-09-15T10:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxNDE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjIxNQ==", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r487822215", "bodyText": "This is a more natural way because it also checks that closing vertx succeeds:\nhttpClient.close();\nvertx.close(context.asyncAssertSuccess());\nasync.complete();", "author": "julianladisch", "createdAt": "2020-09-14T10:51:42Z", "path": "okapi-core/src/test/java/org/folio/okapi/MultiTenantTest.java", "diffHunk": "@@ -142,15 +143,19 @@ private void td(TestContext context, Async async) {\n   public void tearDown(TestContext context) {\n     Async async = context.async();\n     HttpClient httpClient = vertx.createHttpClient();\n-\n-    httpClient.delete(port, \"localhost\",\n-      \"/_/discovery/modules\", context.asyncAssertSuccess(response -> {\n-      context.assertEquals(204, response.statusCode());\n-      response.endHandler(x -> {\n-        httpClient.close();\n-        td(context, async);\n-      });\n-    }));\n+    httpClient.request(HttpMethod.DELETE, port,\n+        \"localhost\", \"/_/discovery/modules\", context.asyncAssertSuccess(request -> {\n+          request.end();\n+          request.onComplete(context.asyncAssertSuccess(response -> {\n+            context.assertEquals(204, response.statusCode());\n+            response.endHandler(x -> {\n+              httpClient.close();\n+              vertx.close(y -> {\n+                async.complete();\n+              });", "originalCommit": "bb4f4c32ec15fdda2064a3838311035bc853c3cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0NDU2NQ==", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r488544565", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-09-15T10:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjIxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjQ1MA==", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r487826450", "bodyText": "Remove x -> otherwise this will be called after the test has finished and will therefore not check whether vertx close has failed.", "author": "julianladisch", "createdAt": "2020-09-14T11:00:10Z", "path": "okapi-core/src/test/java/org/folio/okapi/OkapiPerformance.java", "diffHunk": "@@ -55,53 +56,11 @@ public void setUp(TestContext context) {\n   @After\n   public void tearDown(TestContext context) {\n     async = context.async();\n-    td(context);\n-  }\n-\n-  public void td(TestContext context) {\n-    if (locationAuth != null) {\n-      httpClient.delete(port, \"localhost\", locationAuth, context.asyncAssertSuccess(response -> {\n-            context.assertEquals(204, response.statusCode());\n-            response.endHandler(x -> {\n-              locationAuth = null;\n-              td(context);\n-            });\n-          }));\n-      return;\n-    }\n-    if (locationSample != null) {\n-      httpClient.delete(port, \"localhost\", locationSample, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    if (locationSample2 != null) {\n-      httpClient.delete(port, \"localhost\", locationSample2, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample2 = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    if (locationSample3 != null) {\n-      httpClient.delete(port, \"localhost\", locationSample3, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample3 = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    vertx.close(x -> {\n-      async.complete();\n-    });\n+    httpClient.request(HttpMethod.DELETE, port, \"localhost\", \"/_/discovery/modules\")\n+        .onComplete(context.asyncAssertSuccess(res -> {\n+          vertx.close(x -> context.asyncAssertSuccess());", "originalCommit": "bb4f4c32ec15fdda2064a3838311035bc853c3cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0NDUyMw==", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r488544523", "bodyText": "good catch", "author": "adamdickmeiss", "createdAt": "2020-09-15T10:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjQ1MA=="}], "type": "inlineReview"}, {"oid": "7eca4aacb8f40803eb3c3c20eb3b550a6285ef1d", "url": "https://github.com/folio-org/okapi/commit/7eca4aacb8f40803eb3c3c20eb3b550a6285ef1d", "message": "Reuse fail method", "committedDate": "2020-09-15T10:09:28Z", "type": "commit"}, {"oid": "8190c40586368c66927707277a3ab4a50eefc5ae", "url": "https://github.com/folio-org/okapi/commit/8190c40586368c66927707277a3ab4a50eefc5ae", "message": "Unused method", "committedDate": "2020-09-15T10:09:38Z", "type": "commit"}, {"oid": "6a0b47a253b43c475ed90c3a7dbad4b20c34d30c", "url": "https://github.com/folio-org/okapi/commit/6a0b47a253b43c475ed90c3a7dbad4b20c34d30c", "message": "Simplify", "committedDate": "2020-09-15T10:09:57Z", "type": "commit"}, {"oid": "2b743a0ad303e31443fb5a924b463ff3da09e356", "url": "https://github.com/folio-org/okapi/commit/2b743a0ad303e31443fb5a924b463ff3da09e356", "message": "Fix wait for vertx.close", "committedDate": "2020-09-15T10:10:32Z", "type": "commit"}, {"oid": "7346873c12e28df49754c3bac5abce07796a7f13", "url": "https://github.com/folio-org/okapi/commit/7346873c12e28df49754c3bac5abce07796a7f13", "message": "Fix DockerTest (not fully waiting for modules to shut down)", "committedDate": "2020-09-15T11:08:25Z", "type": "commit"}, {"oid": "275352885fdf9c0d84b9be6eeaeb36949622e0d7", "url": "https://github.com/folio-org/okapi/commit/275352885fdf9c0d84b9be6eeaeb36949622e0d7", "message": "Harmize tearDown; check for vertx.close", "committedDate": "2020-09-15T11:08:54Z", "type": "commit"}]}