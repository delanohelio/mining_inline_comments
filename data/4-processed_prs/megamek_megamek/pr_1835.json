{"pr_number": 1835, "pr_title": "Turntimer", "pr_createdAt": "2020-04-10T00:26:07Z", "pr_url": "https://github.com/MegaMek/megamek/pull/1835", "timeline": [{"oid": "86a2b4c6df5fc6161c070a160713b271f7167e90", "url": "https://github.com/MegaMek/megamek/commit/86a2b4c6df5fc6161c070a160713b271f7167e90", "message": "Added a turn time limit option, which is currently working on movement and firing phase. If no turn time limit is set in basic game options, the timer is disabled.\nIf timer is set, on turn start a small display is shown, with a count down timer. If time is up, end turn event is fired.\nIf turn is done before timer elapses, timer is reset.", "committedDate": "2020-04-10T00:05:44Z", "type": "commit"}, {"oid": "3382aca5d49d19e2997facb84d7d57e2f914483a", "url": "https://github.com/MegaMek/megamek/commit/3382aca5d49d19e2997facb84d7d57e2f914483a", "message": "Added a turn time limit option, which is currently working on movement and firing phase. If no turn time limit is set in basic game options, the timer is disabled.\nIf timer is set, on turn start a small display is shown, with a count down timer. If time is up, end turn event is fired.\nIf turn is done before timer elapses, timer is reset.", "committedDate": "2020-04-10T00:06:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4MjM3OQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406582379", "bodyText": "The description should say what the number means. From reading the rest of the code and testing I know it's the number of seconds, but there's nothing that tells this to the user.", "author": "neoancient", "createdAt": "2020-04-10T03:07:40Z", "path": "megamek/i18n/megamek/common/options/messages.properties", "diffHunk": "@@ -1,6 +1,8 @@\n GameOptionsInfo.group.basic.displayableName=Basic Options\n GameOptionsInfo.option.friendly_fire.displayableName=Friendly fire\n GameOptionsInfo.option.friendly_fire.description=If checked,\\nthe game will allow attacks against friendly units,\\ncontrary to the rules.\\nUnchecked by default.\n+GameOptionsInfo.option.turn_timer.displayableName=Turn timer\n+GameOptionsInfo.option.turn_timer.description=If value is greater 0,\\n the game will end a players current action turn after the time is up.\\n deactivated by 0 value by default.", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNzc5Mw==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406617793", "bodyText": "Yes, it should better be in minutes and say so in the description. Will change it that way in next version.\nAs for the Style-Guide, you are right too ...", "author": "Graysho", "createdAt": "2020-04-10T06:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4MjM3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4MzEwOQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406583109", "bodyText": "Wie oben", "author": "neoancient", "createdAt": "2020-04-10T03:11:26Z", "path": "megamek/i18n/megamek/common/options/messages_de.properties", "diffHunk": "@@ -1,6 +1,8 @@\n GameOptionsInfo.group.base.displayableName=Grundoptionen\n GameOptionsInfo.option.friendly_fire.displayableName=Friendly fire\n GameOptionsInfo.option.friendly_fire.description=Diese Option deaktivieren,\\num bei Verwendung der Schaltfl\u00e4che 'n\u00e4chstes Ziel' eigene Einheiten zu \u00fcberspringen.\\nVoreinstellung: Deaktiviert.\n+GameOptionsInfo.option.turn_timer.displayableName=Zug Zeitbegrenzung\n+GameOptionsInfo.option.turn_timer.description=Ist der Wert gr\u00f6\u00dfer als 0,\\n wird das Spiel die aktuelle Aktionsphase des Spielers beenden, sobald die Zeit abgelaufen ist.\\n Wert 0 standardm\u00e4\u00dfig deaktiviert.", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4Mzc3Mg==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406583772", "bodyText": "I would prefer newer options go at the bottom, unless there are similar options for it to be grouped with. People get used to looking in a given option in a certain place.", "author": "neoancient", "createdAt": "2020-04-10T03:14:54Z", "path": "megamek/src/megamek/common/options/GameOptions.java", "diffHunk": "@@ -55,6 +55,7 @@ public GameOptions() {\n     public synchronized void initialize() {\n         IBasicOptionGroup base = addGroup(\"basic\"); //$NON-NLS-1$\n         addOption(base, OptionsConstants.BASE_FRIENDLY_FIRE, false); //$NON-NLS-1$\n+        addOption(base, OptionsConstants.BASE_TURN_TIMER, 0); //$NON-NLS-1$", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxOTY0OA==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406619648", "bodyText": "ok, will put new stuff to bottom in future, thanks for the advise.", "author": "Graysho", "createdAt": "2020-04-10T06:18:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4Mzc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDE1MQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406584151", "bodyText": "Comparing a boolean expression to a boolean constant is superfluous.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (timerShouldStart(client)==true){\n          \n          \n            \n                    if (timerShouldStart(client)) {", "author": "neoancient", "createdAt": "2020-04-10T03:16:52Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);\n+                display.setAlwaysOnTop(true);\n+                display.setModal(false);\n+                //display.setUndecorated(true);\n+                display.setVisible(true);\n+\n+            }\n+        });\n+    }\n+    public void stopTimer() {\n+        display.setVisible(false);\n+        display.dispose();\n+        timer.stop();\n+    }\n+    public boolean isRunning(){\n+        return timer.isRunning();\n+    }\n+    public void resetTimer(){\n+        progressBar.setValue(timeLimit);\n+        display.setVisible(true);\n+\n+    }\n+\n+\n+    public static TurnTimer init(AbstractPhaseDisplay phaseDisplay, Client client){\n+\n+        //check if there should be a turn timer running\n+        if (timerShouldStart(client)==true){", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDE5Nw==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406584197", "bodyText": "Indentation is inconsistent.", "author": "neoancient", "createdAt": "2020-04-10T03:17:16Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);\n+                display.setAlwaysOnTop(true);\n+                display.setModal(false);\n+                //display.setUndecorated(true);\n+                display.setVisible(true);\n+\n+            }\n+        });\n+    }\n+    public void stopTimer() {\n+        display.setVisible(false);\n+        display.dispose();\n+        timer.stop();\n+    }\n+    public boolean isRunning(){\n+        return timer.isRunning();\n+    }\n+    public void resetTimer(){\n+        progressBar.setValue(timeLimit);\n+        display.setVisible(true);\n+\n+    }\n+\n+\n+    public static TurnTimer init(AbstractPhaseDisplay phaseDisplay, Client client){\n+\n+        //check if there should be a turn timer running\n+        if (timerShouldStart(client)==true){\n+            Option timer = (Option) client.getGame().getOptions().getOption(\"turn_timer\");\n+           TurnTimer tt = new TurnTimer(timer.intValue(), phaseDisplay);", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDUyNg==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406584526", "bodyText": "This is a bit narrow for the text in the label. Instead of setting an absolute size, try calling pack() to set the container dimensions to what is required by its child components.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            display.setSize(50,100);\n          \n          \n            \n                            display.pack();", "author": "neoancient", "createdAt": "2020-04-10T03:18:50Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDgxMw==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406584813", "bodyText": "Since this is only used by the client, it should go somewhere in megamek.client rather than megamek.common.", "author": "neoancient", "createdAt": "2020-04-10T03:20:23Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYzODkyOA==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406638928", "bodyText": "moved it into client.swing.util", "author": "Graysho", "createdAt": "2020-04-10T07:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDgxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDk1NA==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406584954", "bodyText": "Every file needs a copyright header.", "author": "neoancient", "createdAt": "2020-04-10T03:21:08Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYzODk3NQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406638975", "bodyText": "done", "author": "Graysho", "createdAt": "2020-04-10T07:26:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NDk1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NTM2NQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406585365", "bodyText": "String#valueOf is redundant in string concatenation.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    progressBar.setString(String.valueOf(timeLimit)+\"s\");\n          \n          \n            \n                    progressBar.setString(timeLimit + \"s\");", "author": "neoancient", "createdAt": "2020-04-10T03:23:23Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NTczOA==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406585738", "bodyText": "Use the specific enum class.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Enum phase = client.getGame().getPhase();\n          \n          \n            \n                        IGame.Phase phase = client.getGame().getPhase();", "author": "neoancient", "createdAt": "2020-04-10T03:25:02Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);\n+                display.setAlwaysOnTop(true);\n+                display.setModal(false);\n+                //display.setUndecorated(true);\n+                display.setVisible(true);\n+\n+            }\n+        });\n+    }\n+    public void stopTimer() {\n+        display.setVisible(false);\n+        display.dispose();\n+        timer.stop();\n+    }\n+    public boolean isRunning(){\n+        return timer.isRunning();\n+    }\n+    public void resetTimer(){\n+        progressBar.setValue(timeLimit);\n+        display.setVisible(true);\n+\n+    }\n+\n+\n+    public static TurnTimer init(AbstractPhaseDisplay phaseDisplay, Client client){\n+\n+        //check if there should be a turn timer running\n+        if (timerShouldStart(client)==true){\n+            Option timer = (Option) client.getGame().getOptions().getOption(\"turn_timer\");\n+           TurnTimer tt = new TurnTimer(timer.intValue(), phaseDisplay);\n+            tt.startTimer();\n+            return tt;\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Checks if a turn time limit is set in options\n+     * limit is only imposed on movement, firing\n+     *  @todo: add timer to physical and targeting phase currently it is only in movement and fire\n+     */\n+    private static boolean timerShouldStart(Client client) {\n+        // check if there is a timer set\n+        Option timer = (Option) client.getGame().getOptions().getOption(\"turn_timer\");\n+        // if timer is set to 0 in options, it is disabled so we only create one if a limit is set in options\n+        if (timer.intValue() > 0 ) {\n+            Enum phase = client.getGame().getPhase();", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NTk2Nw==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406585967", "bodyText": "This can be simplified:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (phase == IGame.Phase.PHASE_MOVEMENT || phase == IGame.Phase.PHASE_FIRING || phase == IGame.Phase.PHASE_PHYSICAL || phase == IGame.Phase.PHASE_TARGETING)\n          \n          \n            \n                          return true;\n          \n          \n            \n                        return phase == IGame.Phase.PHASE_MOVEMENT || phase == IGame.Phase.PHASE_FIRING || phase == IGame.Phase.PHASE_PHYSICAL || phase == IGame.Phase.PHASE_TARGETING;", "author": "neoancient", "createdAt": "2020-04-10T03:26:16Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);\n+                display.setAlwaysOnTop(true);\n+                display.setModal(false);\n+                //display.setUndecorated(true);\n+                display.setVisible(true);\n+\n+            }\n+        });\n+    }\n+    public void stopTimer() {\n+        display.setVisible(false);\n+        display.dispose();\n+        timer.stop();\n+    }\n+    public boolean isRunning(){\n+        return timer.isRunning();\n+    }\n+    public void resetTimer(){\n+        progressBar.setValue(timeLimit);\n+        display.setVisible(true);\n+\n+    }\n+\n+\n+    public static TurnTimer init(AbstractPhaseDisplay phaseDisplay, Client client){\n+\n+        //check if there should be a turn timer running\n+        if (timerShouldStart(client)==true){\n+            Option timer = (Option) client.getGame().getOptions().getOption(\"turn_timer\");\n+           TurnTimer tt = new TurnTimer(timer.intValue(), phaseDisplay);\n+            tt.startTimer();\n+            return tt;\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Checks if a turn time limit is set in options\n+     * limit is only imposed on movement, firing\n+     *  @todo: add timer to physical and targeting phase currently it is only in movement and fire\n+     */\n+    private static boolean timerShouldStart(Client client) {\n+        // check if there is a timer set\n+        Option timer = (Option) client.getGame().getOptions().getOption(\"turn_timer\");\n+        // if timer is set to 0 in options, it is disabled so we only create one if a limit is set in options\n+        if (timer.intValue() > 0 ) {\n+            Enum phase = client.getGame().getPhase();\n+\n+            // turn timer should only kick in on firing, targeting, movement and physical attack phase\n+            if (phase == IGame.Phase.PHASE_MOVEMENT || phase == IGame.Phase.PHASE_FIRING || phase == IGame.Phase.PHASE_PHYSICAL || phase == IGame.Phase.PHASE_TARGETING)\n+              return true;", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NjQ3Mg==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406586472", "bodyText": "@todo is not a JavaDoc tag. This should be outside the JavaDoc block.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Checks if a turn time limit is set in options\n          \n          \n            \n                 * limit is only imposed on movement, firing\n          \n          \n            \n                 *  @todo: add timer to physical and targeting phase currently it is only in movement and fire\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Checks if a turn time limit is set in options\n          \n          \n            \n                 * limit is only imposed on movement, firing\n          \n          \n            \n                 */\n          \n          \n            \n                //TODO: add timer to physical and targeting phase currently it is only in movement and fire", "author": "neoancient", "createdAt": "2020-04-10T03:28:47Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);\n+                display.setAlwaysOnTop(true);\n+                display.setModal(false);\n+                //display.setUndecorated(true);\n+                display.setVisible(true);\n+\n+            }\n+        });\n+    }\n+    public void stopTimer() {\n+        display.setVisible(false);\n+        display.dispose();\n+        timer.stop();\n+    }\n+    public boolean isRunning(){\n+        return timer.isRunning();\n+    }\n+    public void resetTimer(){\n+        progressBar.setValue(timeLimit);\n+        display.setVisible(true);\n+\n+    }\n+\n+\n+    public static TurnTimer init(AbstractPhaseDisplay phaseDisplay, Client client){\n+\n+        //check if there should be a turn timer running\n+        if (timerShouldStart(client)==true){\n+            Option timer = (Option) client.getGame().getOptions().getOption(\"turn_timer\");\n+           TurnTimer tt = new TurnTimer(timer.intValue(), phaseDisplay);\n+            tt.startTimer();\n+            return tt;\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Checks if a turn time limit is set in options\n+     * limit is only imposed on movement, firing\n+     *  @todo: add timer to physical and targeting phase currently it is only in movement and fire\n+     */", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4Njg3NA==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406586874", "bodyText": "Redundant call to String#valueOf in concatenation.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            progressBar.setString(String.valueOf(counter)+\"s\");\n          \n          \n            \n                            progressBar.setString(counter + \"s\");", "author": "neoancient", "createdAt": "2020-04-10T03:30:49Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4ODIwNQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406588205", "bodyText": "This method is never used. Did you intend to use it somewhere, or is it included because it might be useful in the future?", "author": "neoancient", "createdAt": "2020-04-10T03:38:07Z", "path": "megamek/src/megamek/common/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package megamek.common.util;\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JDialog display;\n+    private int timeLimit ;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay phaseDisplay) {\n+\n+        timeLimit = limit;\n+        display = new JDialog();\n+        progressBar = new JProgressBar(JProgressBar.VERTICAL, 0, limit);\n+        progressBar.setValue(limit);\n+        progressBar.setString(String.valueOf(timeLimit)+\"s\");\n+\n+        listener = new ActionListener() {\n+            int counter = limit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                remaining.setText(counter+\" sec\");\n+                progressBar.setValue(counter);\n+                progressBar.setString(String.valueOf(counter)+\"s\");\n+                if (counter<1) {\n+                    phaseDisplay.ready();\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                timer.start();\n+                display.setLayout(new BorderLayout());\n+                display.getContentPane().add(remaining, BorderLayout.NORTH);\n+                display.getContentPane().add(progressBar, BorderLayout.CENTER);\n+                display.setSize(50,100);\n+                display.setAlwaysOnTop(true);\n+                display.setModal(false);\n+                //display.setUndecorated(true);\n+                display.setVisible(true);\n+\n+            }\n+        });\n+    }\n+    public void stopTimer() {\n+        display.setVisible(false);\n+        display.dispose();\n+        timer.stop();\n+    }\n+    public boolean isRunning(){\n+        return timer.isRunning();\n+    }\n+    public void resetTimer(){", "originalCommit": "3382aca5d49d19e2997facb84d7d57e2f914483a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxOTM3Mg==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r406619372", "bodyText": "No, if all other phases work like movement and firing did, It won't be needed. Need to dig into other game phases, if I dont need it. Then it can be removed.", "author": "Graysho", "createdAt": "2020-04-10T06:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4ODIwNQ=="}], "type": "inlineReview"}, {"oid": "4810c329ebea291460ea4a544469d89637589e31", "url": "https://github.com/MegaMek/megamek/commit/4810c329ebea291460ea4a544469d89637589e31", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:13:16Z", "type": "commit"}, {"oid": "5becb7ea0009ddb1812c3b5c33624550cd40b5bb", "url": "https://github.com/MegaMek/megamek/commit/5becb7ea0009ddb1812c3b5c33624550cd40b5bb", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:13:44Z", "type": "commit"}, {"oid": "08903cbf8abd560f699c92d593cd85c5406e0a7d", "url": "https://github.com/MegaMek/megamek/commit/08903cbf8abd560f699c92d593cd85c5406e0a7d", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:13:55Z", "type": "commit"}, {"oid": "80824904d46d68321108435c08f3ffa52c8f2724", "url": "https://github.com/MegaMek/megamek/commit/80824904d46d68321108435c08f3ffa52c8f2724", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:14:09Z", "type": "commit"}, {"oid": "11557047f3ff8928ce3945c89292178d498071d4", "url": "https://github.com/MegaMek/megamek/commit/11557047f3ff8928ce3945c89292178d498071d4", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:14:39Z", "type": "commit"}, {"oid": "df92f3dd819f555515c60ded26f713032679f487", "url": "https://github.com/MegaMek/megamek/commit/df92f3dd819f555515c60ded26f713032679f487", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:36:25Z", "type": "commit"}, {"oid": "5093ff2ba7470f10ba6cd3418e61bd42d4d2372d", "url": "https://github.com/MegaMek/megamek/commit/5093ff2ba7470f10ba6cd3418e61bd42d4d2372d", "message": "Update megamek/src/megamek/common/util/TurnTimer.java\n\nCo-Authored-By: neoancient <neoancient@megamek.org>", "committedDate": "2020-04-10T06:40:01Z", "type": "commit"}, {"oid": "4570a514a94dab53a37a24511b7a341af6c6f40d", "url": "https://github.com/MegaMek/megamek/commit/4570a514a94dab53a37a24511b7a341af6c6f40d", "message": "changed time limit to be minutes, moved turntimer to client.ui.swing.util", "committedDate": "2020-04-10T07:21:34Z", "type": "commit"}, {"oid": "98a876816b69c77073a375f2ccbde676ab06b982", "url": "https://github.com/MegaMek/megamek/commit/98a876816b69c77073a375f2ccbde676ab06b982", "message": "switch CommonSettingsDialog.nagForNoAction off to prevent time limit break by user", "committedDate": "2020-04-10T12:00:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTQzNw==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r407081437", "bodyText": "This is a global setting that persists across sessions and should not be changed by the settings for a particular game. Even within the same game, it will cause it not to show if the user clicks done before the timer runs out, and it should show for that. The best solution I can think of is to add a boolean parameter to AbstractPhaseDisplay#ready that can be used to disable the nag popup.", "author": "neoancient", "createdAt": "2020-04-11T16:14:52Z", "path": "megamek/src/megamek/client/ui/swing/util/TurnTimer.java", "diffHunk": "@@ -60,6 +62,8 @@ public void actionPerformed(ActionEvent ae) {\n                 remaining.setText(minutes+\":\"+seconds);\n                 progressBar.setValue(counter);\n                 if (counter<1) {\n+                    // prevent the popup dialog from breaking time limit\n+                    GUIPreferences.getInstance().setNagForNoAction(false);", "originalCommit": "98a876816b69c77073a375f2ccbde676ab06b982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5OTg5Ng==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r407099896", "bodyText": "Well, or I could disable it, call ready() and enable it again, if it was enabled before\nWhichever you prefer", "author": "Graysho", "createdAt": "2020-04-11T19:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTQzNw=="}], "type": "inlineReview"}, {"oid": "500dd5eb56f3b54ec7ae53b87eb9fc5314d715e4", "url": "https://github.com/MegaMek/megamek/commit/500dd5eb56f3b54ec7ae53b87eb9fc5314d715e4", "message": "switch CommonSettingsDialog.nagForNoAction off to prevent time limit break by user\nAnd set it back to the original value for not disrupting user experience", "committedDate": "2020-04-12T10:41:32Z", "type": "commit"}, {"oid": "724209a21b9658a9d1caddf69c20a053a4e3bcdf", "url": "https://github.com/MegaMek/megamek/commit/724209a21b9658a9d1caddf69c20a053a4e3bcdf", "message": "correct indentation", "committedDate": "2020-04-12T10:42:28Z", "type": "commit"}, {"oid": "a2cc7c0c8a717f4c0125148952dcb2aa03de852d", "url": "https://github.com/MegaMek/megamek/commit/a2cc7c0c8a717f4c0125148952dcb2aa03de852d", "message": "Made the Timer display a panel, temporary added to Menu bar.\nGets removed once turn ends.", "committedDate": "2020-04-12T11:15:21Z", "type": "commit"}, {"oid": "860a86f4b777f61dab2621ed3a0426a910c8e214", "url": "https://github.com/MegaMek/megamek/commit/860a86f4b777f61dab2621ed3a0426a910c8e214", "message": "resolved conflicts with master", "committedDate": "2020-04-17T23:30:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMzU3Ng==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r410713576", "bodyText": "There's no need to rebuild the timer panel each time it's displayed. It should be initialized once in the constructor and just set to visible or invisible as needed.", "author": "neoancient", "createdAt": "2020-04-18T15:39:40Z", "path": "megamek/src/megamek/client/ui/swing/util/TurnTimer.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * MegaMek - Copyright (C) 2000,2001,2002,2003,2004,2005 Ben Mazur\n+ * (bmazur@sev.org)\n+ *\n+ * This program is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU General Public License as published by the Free Software\n+ * Foundation; either version 2 of the License, or (at your option) any later\n+ * version.\n+ *\n+ * This program is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n+ * details.\n+ */\n+package megamek.client.ui.swing.util;\n+\n+\n+import megamek.client.Client;\n+import megamek.client.ui.swing.AbstractPhaseDisplay;\n+import megamek.client.ui.swing.GUIPreferences;\n+import megamek.common.IGame;\n+import megamek.common.options.Option;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+/**\n+ * This class takes a time limit, which is to be set in Basic Options and counts down to zero\n+ * When zero is reached, the ready() method of the given {@link AbstractPhaseDisplay} is called\n+ * to end the users current turn.\n+ *\n+ */\n+public class TurnTimer {\n+\n+    private Timer timer;\n+    private JProgressBar progressBar;\n+    private ActionListener listener;\n+    private JLabel remaining;\n+    private JPanel display;\n+    private int timeLimit;\n+    private AbstractPhaseDisplay phaseDisplay;\n+\n+\n+    public TurnTimer(int limit, AbstractPhaseDisplay pD) {\n+\n+        phaseDisplay = pD;\n+        // make it minutes here.\n+        timeLimit = limit*60;\n+\n+        display = new JPanel();\n+        progressBar = new JProgressBar(JProgressBar.HORIZONTAL, 0, timeLimit);\n+        progressBar.setValue(timeLimit);\n+\n+\n+        listener = new ActionListener() {\n+            int counter = timeLimit;\n+            public void actionPerformed(ActionEvent ae) {\n+                counter--;\n+                int seconds =counter % 60;\n+                int minutes = counter/60;\n+                remaining.setText(minutes+\":\"+seconds);\n+                progressBar.setValue(counter);\n+\n+                if (counter<1) {\n+                    // get the NagForNoAction setting here\n+                    boolean nagSet =   GUIPreferences.getInstance().getNagForNoAction();\n+                    // prevent the popup dialog from breaking time limit\n+                    GUIPreferences.getInstance().setNagForNoAction(false);\n+                    phaseDisplay.ready();\n+                    // reset NagForNoAction to the value it was before to preserve the user experience\n+                    // for use cases outside the timer\n+                    GUIPreferences.getInstance().setNagForNoAction(nagSet);\n+                    timer.stop();\n+                    display.setVisible(false);\n+                    phaseDisplay.getClientgui().getMenuBar().remove(display);\n+                   // display.dispose();\n+                }\n+            }\n+        };\n+\n+    }\n+\n+    public void startTimer() {\n+\n+        SwingUtilities.invokeLater( new Runnable() {\n+            public void run() {\n+                remaining = new JLabel(timeLimit+\" sec\");\n+                timer = new Timer(1000, listener);\n+                phaseDisplay.getClientgui().getMenuBar().add(display);\n+                timer.start();\n+                display.setLayout(new FlowLayout());\n+                display.add(remaining);\n+                display.add(progressBar);\n+                display.setVisible(true);", "originalCommit": "860a86f4b777f61dab2621ed3a0426a910c8e214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMzYzOQ==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r410713639", "bodyText": "I'm sorry it's taking me so long to get back to you. I have so little time these days.", "author": "neoancient", "createdAt": "2020-04-18T15:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMzU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3Nzk2Ng==", "url": "https://github.com/MegaMek/megamek/pull/1835#discussion_r410977966", "bodyText": "done", "author": "Graysho", "createdAt": "2020-04-19T19:51:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMzU3Ng=="}], "type": "inlineReview"}, {"oid": "1bcc7b9b61579d14ca9e335d93c3060d0f6f4bda", "url": "https://github.com/MegaMek/megamek/commit/1bcc7b9b61579d14ca9e335d93c3060d0f6f4bda", "message": "moved display initialization to constructor", "committedDate": "2020-04-19T19:50:09Z", "type": "commit"}]}