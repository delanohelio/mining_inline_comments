{"pr_number": 1702, "pr_title": "Refactoring and Code Cleanup In Server.java", "pr_createdAt": "2020-02-20T20:23:48Z", "pr_url": "https://github.com/MegaMek/megamek/pull/1702", "timeline": [{"oid": "ab433a668252ed8b2ab73e0c1334a6efa128268b", "url": "https://github.com/MegaMek/megamek/commit/ab433a668252ed8b2ab73e0c1334a6efa128268b", "message": "Refactoring in server.java", "committedDate": "2020-02-20T03:48:00Z", "type": "commit"}, {"oid": "eac617217480ac7777be5736a9d719f92ddd7743", "url": "https://github.com/MegaMek/megamek/commit/eac617217480ac7777be5736a9d719f92ddd7743", "message": "Further refactoring in server.java", "committedDate": "2020-02-20T05:17:55Z", "type": "commit"}, {"oid": "922d50997c780e9450989c823c71157a8cc5cd8f", "url": "https://github.com/MegaMek/megamek/commit/922d50997c780e9450989c823c71157a8cc5cd8f", "message": "Further fixes and refactoring in server.java", "committedDate": "2020-02-20T14:33:38Z", "type": "commit"}, {"oid": "4048c0570905aea689dac0cb465c38cc19114f60", "url": "https://github.com/MegaMek/megamek/commit/4048c0570905aea689dac0cb465c38cc19114f60", "message": "Further refactoring in Server.java", "committedDate": "2020-02-20T20:20:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzODE2Mw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382238163", "bodyText": "Can we remove this area of commented out code?", "author": "Windchild292", "createdAt": "2020-02-20T20:24:47Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -1095,6 +1080,7 @@ private IPlayer addNewPlayer(int connId, String name) {\n     public void validatePlayerInfo(int playerId) {\n         final IPlayer player = getPlayer(playerId);\n \n+        // TODO : Windchild can this be removed?\n         // maybe this isn't actually useful\n         // // replace characters we don't like with \"X\"\n         // StringBuffer nameBuff = new StringBuffer(player.getName());", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzNzUyMQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382937521", "bodyText": "This was commented out over ten years ago. I'm going to go out on a limb and say it's safe to get rid of it.", "author": "neoancient", "createdAt": "2020-02-22T20:00:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzODE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzODkyNw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382238927", "bodyText": "Is this change correct or was it a bug that it was identical to the next Phase?", "author": "Windchild292", "createdAt": "2020-02-20T20:26:26Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -2887,9 +2832,7 @@ private void endCurrentPhase() {\n                 changePhase(IGame.Phase.PHASE_EXCHANGE);\n                 break;\n             case PHASE_EXCHANGE:\n-                game.addReports(vPhaseReport);\n-                changePhase(IGame.Phase.PHASE_SET_ARTYAUTOHITHEXES);\n-                break;\n+                // TODO : Windchild this might have been a bug", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzNzA0Ng==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382937046", "bodyText": "This is correct. In a regular game, PHASE_SET_ARTYAUTOHITHEXES comes after PHASE_EXCHANGE. In a scenario it comes after PHASE_STARTING_SCENARIO.", "author": "neoancient", "createdAt": "2020-02-22T19:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzODkyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzOTEzNg==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382239136", "bodyText": "Thoughts on this change?", "author": "Windchild292", "createdAt": "2020-02-20T20:26:51Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -3233,55 +3166,53 @@ private void receiveForwardIni(Packet packet, int connid) {\n             return;\n         }\n         // get the next player from the team this player is on.\n-        Team currentteam = game.getTeamForPlayer(current);\n-        IPlayer next = currentteam.getNextValidPlayer(current, game);\n-        // if the choosen player is a valid player, we change the turn order and\n+        IPlayer next = game.getTeamForPlayer(current).getNextValidPlayer(current, game);\n+        // if the chosen player is a valid player, we change the turn order and\n         // inform the clients.\n         if ((next != null) && (game.getEntitiesOwnedBy(next) != 0)\n-            && (game.getTurnForPlayer(next.getId()) != null)) {\n+                && (game.getTurnForPlayer(next.getId()) != null)) {\n \n-            int currentturnindex = game.getTurnIndex();\n-            // now look for the next occurence of player next in the turn order\n+            int currentTurnIndex = game.getTurnIndex();\n+            // now look for the next occurrence of player next in the turn order\n             List<GameTurn> turns = game.getTurnVector();\n             GameTurn turn = game.getTurn();\n             // not entirely necessary. As we will also check this for the\n             // activity of the button but to be sure do it on the server too.\n-            boolean isGeneralMoveTurn = (!(turn instanceof GameTurn.SpecificEntityTurn)\n-                                         && !(turn instanceof GameTurn.UnitNumberTurn)\n-                                         && !(turn instanceof GameTurn.UnloadStrandedTurn)\n-                                         && !(turn instanceof GameTurn.TriggerBPodTurn) && !(turn instanceof GameTurn\n-                    .TriggerAPPodTurn));\n+            boolean isGeneralMoveTurn = !(turn instanceof GameTurn.SpecificEntityTurn)\n+                    && !(turn instanceof GameTurn.UnitNumberTurn)\n+                    && !(turn instanceof GameTurn.UnloadStrandedTurn)\n+                    && !(turn instanceof GameTurn.TriggerBPodTurn)\n+                    && !(turn instanceof GameTurn.TriggerAPPodTurn);\n+            // TODO : Windchild my IDE has noticed that GameTurn.TriggerBPodTurn\n+            // TODO : and GameTurn.TriggerAPPodTurn are always false, and can probably be removed", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzOTQ1Mg==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382239452", "bodyText": "Can this commented out code be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:27:15Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -4277,25 +4138,24 @@ private void applyDropshipProximityDamage(Coords centralPos,\n         // ok now I need to look at the damage rings - start at 2 and go to 7\n         for (int i = 2; i < 8; i++) {\n             int damageDice = (8 - i) * 2;\n-            ArrayList<Coords> ring = Compute.coordsAtRange(centralPos, i);\n+            List<Coords> ring = Compute.coordsAtRange(centralPos, i);\n             for (Coords pos : ring) {\n-                if (rearArc\n-                    && !Compute.isInArc(centralPos, facing, pos,\n-                                        Compute.ARC_AFT)) {\n+                if (rearArc && !Compute.isInArc(centralPos, facing, pos, Compute.ARC_AFT)) {\n                     continue;\n                 }\n \n-                alreadyHit = artilleryDamageHex(pos, centralPos, damageDice,\n-                                                null, killer.getId(), killer, null, false, 0,\n-                                                vPhaseReport, false, alreadyHit, true);\n+                alreadyHit = artilleryDamageHex(pos, centralPos, damageDice, null, killer.getId(),\n+                        killer, null, false, 0, vPhaseReport, false,\n+                        alreadyHit, true);\n \n+                // TODO : Windchild can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzODQ4MA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382938480", "bodyText": "I'm not sure what was going on here, but it's been like that for over six years. Let's get rid of it.", "author": "neoancient", "createdAt": "2020-02-22T20:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzOTQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzOTcyOQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382239729", "bodyText": "I'm pretty sure this is a bug, but wanted to check that the missing break wasn't on purpose.", "author": "Windchild292", "createdAt": "2020-02-20T20:27:48Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -6297,36 +6057,36 @@ private void doVehicleFlipDamage(Tank entity, int damage, boolean startRight, in\n \n         int index = flipCount % 4;\n         // If there is no turret, we do side-side-bottom\n-        if (((Tank)entity).hasNoTurret()) {\n+        if (entity.hasNoTurret()) {\n             index = flipCount % 3;\n             if (index > 0) {\n                 index++;\n             }\n         }\n         switch (index) {\n-        case 0:\n-            hit = new HitData(startRight? Tank.LOC_RIGHT : Tank.LOC_LEFT);\n-            break;\n-        case 1:\n-            hit = new HitData(Tank.LOC_TURRET);\n-        case 2:\n-            hit = new HitData(startRight? Tank.LOC_LEFT : Tank.LOC_RIGHT);\n-            break;\n-        default:\n-            hit = null; //Motive damage instead\n+            case 0:\n+                hit = new HitData(startRight ? Tank.LOC_RIGHT : Tank.LOC_LEFT);\n+                break;\n+            case 1:\n+                hit = new HitData(Tank.LOC_TURRET);\n+                break; //TODO : Windchild Ensure this change is correct", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzMTk0OA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382931948", "bodyText": "Yes, that's a bug.", "author": "neoancient", "createdAt": "2020-02-22T18:31:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzOTcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDEwOQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382240109", "bodyText": "Why is this being updated if the update is never being used?", "author": "Windchild292", "createdAt": "2020-02-20T20:28:40Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -10058,6 +9670,7 @@ private void processTrailerMovement(Entity tractor, List<Coords> trainPath) {\n                 } else if (tractor.isSuperHeavy()) {\n                     // If the tractor is superheavy, we can put two trailers in each hex\n                     // starting trailer 0 in the hex behind the tractor\n+                    // TODO : Windchild the update to trailerPositionOffset is never used?\n                     trailerPositionOffset = (Math.ceil((trailerPositionOffset /= 2.0)) + 1);", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDMxNQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382240315", "bodyText": "Same as above, why is this being updated if the update is never being used.", "author": "Windchild292", "createdAt": "2020-02-20T20:29:11Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -10069,6 +9682,7 @@ private void processTrailerMovement(Entity tractor, List<Coords> trainPath) {\n                     // Otherwise, we can put two trailers in each hex\n                     // starting trailer 1 in the hex behind the tractor\n                     trailerPositionOffset ++;\n+                    // TODO : Windchild the update to trailerPositionOffset is never used?\n                     trailerPositionOffset = Math.ceil((trailerPositionOffset /= 2.0));", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDU3OA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382240578", "bodyText": "Can this commented out method be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:29:43Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -12125,6 +11660,7 @@ private boolean checkVibrabombs(Entity entity, Coords coords,\n      * @param coords\n      *            The <code>Coords</code> from which to remove minefields\n      */\n+    // TODO : Windchild Can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzODg0MQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382938841", "bodyText": "That's been commented out for over ten years. Dump it.", "author": "neoancient", "createdAt": "2020-02-22T20:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDgwNw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382240807", "bodyText": "can this commented out code be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:30:14Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -15888,13 +15303,9 @@ private void removeDuplicateAttacks(int entityId) {\n         if (null != en) {\n             allowed = en.getAllowedPhysicalAttacks();\n         }\n-        Vector<EntityAction> toKeep = new Vector<EntityAction>(/*\n-                                                                * game.actionsSize\n-                                                                * ()\n-                                                                */);\n+        Vector<EntityAction> toKeep = new Vector<>(/*game.actionsSize()*/); //TODO : Windchild Can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MDcwOA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382960708", "bodyText": "I don't see any point to it.", "author": "neoancient", "createdAt": "2020-02-23T03:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MDgwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MTEyNQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382241125", "bodyText": "My IDE suggests this is a bug, as it is always false. Is it supposed to be ||, not &&?", "author": "Windchild292", "createdAt": "2020-02-20T20:30:54Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -17783,11 +17118,11 @@ private void resolveClubAttack(PhysicalResult pr, int lastEntityId) {\n             }\n         }\n \n-        if (((MiscType) caa.getClub().getType())\n-                    .hasSubType(MiscType.S_WRECKING_BALL)\n-            && (ae instanceof SupportTank) && (te instanceof Mech)) {\n+        if (caa.getClub().getType().hasSubType(MiscType.S_WRECKING_BALL)\n+                && (ae instanceof SupportTank) && (te instanceof Mech)) {\n             // forces a PSR like a charge\n             if (ae instanceof LandAirMech && ae.isAirborneVTOLorWIGE()) {", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MTEzOA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382961138", "bodyText": "It is a bug. It should be te instanceof LandAirMech. When an airborne LAM in AirMech mode is the target of a successful charge attack, it makes a control roll instead of a PSR. I don't know why it's restricting the attacker to a support vehicle, though. I also can't find a rule that says a successful hit is like a charge. The physical attacks table on TW, p. 214 says that on a hit roll of 2, the attacker deals damage to itself and has to make a PSR. I think this whole block may be wrong but it needs a more thorough rules check.", "author": "neoancient", "createdAt": "2020-02-23T03:43:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MTEyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MTgwNA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382241804", "bodyText": "I'm pretty sure this should be fixed, as it is integer division in floating point context. (can't remember why I wrote it as a comment, probably because it is a variable option)", "author": "Windchild292", "createdAt": "2020-02-20T20:32:27Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -23913,6 +23053,8 @@ private void resolveShutdownCrashes() {\n                             / game.getOptions().intOption(\n                                     OptionsConstants.ADVCOMBAT_VEHICLES_THRESHOLD_DIVISOR));\n \n+                    // TODO : Windchild fix integer division in floating point context", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MTk2NA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382241964", "bodyText": "The above is never used, so can it be removed or is it a bug?", "author": "Windchild292", "createdAt": "2020-02-20T20:32:52Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -24823,6 +23938,7 @@ private void resolveShutdownCrashes() {\n                 impactArmor = (te instanceof Mech)\n                         && (te.getArmorType(hit.getLocation()) == EquipmentType.T_ARMOR_IMPACT_RESISTANT);\n                 bar5 = te.getBARRating(hit.getLocation()) <= 5;\n+                // TODO : Windchild the above is never used?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MTcwNg==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382941706", "bodyText": "As near as I can tell with a method that's nearly 2k lines long, This is here to deal with the possibility of a different armor type when excess damage transfers to another location and was copied from the code that deals with the original hit. The only place it makes a difference is in the case of an acid warhead. I don't know the rules off the top of my head, but from what's in the code it does extra damage to some types of armor, including BAR <= 5, but the extra damage does not transfer. If that's correct, then it's not a bug and this line can be removed.", "author": "neoancient", "createdAt": "2020-02-22T21:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MTk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MjQ4NA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382242484", "bodyText": "Can this be simplified? - en instance of QuadMech is always false, as is  en instanceof BipedMech according to my IDE", "author": "Windchild292", "createdAt": "2020-02-20T20:33:59Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -25064,11 +24169,12 @@ private int damageExternalPassenger(Entity te, HitData hit, int damage,\n      * @return <code>true</code> if the unit's engine exploded,\n      * <code>false</code> if not.\n      */\n-    private boolean checkEngineExplosion(Entity en, Vector<Report> vDesc,\n-            int hits) {\n-        if(!(en instanceof Mech) && !(en instanceof QuadMech)\n-            && !(en instanceof BipedMech) && !(en instanceof Aero)\n-            && !(en instanceof Tank)) {\n+    private boolean checkEngineExplosion(Entity en, Vector<Report> vDesc, int hits) {\n+        // TODO : Windchild can I be simplified? - en instance of QuadMech is always false, as is\n+        // TODO : en instanceof BipedMech according to my IDE\n+        if (!(en instanceof Mech) && !(en instanceof QuadMech)\n+                && !(en instanceof BipedMech) && !(en instanceof Aero)\n+                && !(en instanceof Tank)) {", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzNzE3Mw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382937173", "bodyText": "Yes, the quad and biped checks are redundant, as well as discriminatory toward TripodMech.", "author": "neoancient", "createdAt": "2020-02-22T19:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MjQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzODQzMQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382938431", "bodyText": "There are Tripod Mechs? That's a new one for me", "author": "Windchild292", "createdAt": "2020-02-22T20:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MjQ4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MjY0Mg==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382242642", "bodyText": "Can this be removed? It is never called", "author": "Windchild292", "createdAt": "2020-02-20T20:34:20Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -27786,49 +26771,46 @@ private void applyCargoCritical(Aero aero, int damageCaused, Vector<Report> repo\n      * Rolls and resolves critical hits with a die roll modifier.\n      */\n \n-    public Vector<Report> criticalEntity(Entity en, int loc, boolean isRear,\n-                                         int critMod, int damage) {\n+    public Vector<Report> criticalEntity(Entity en, int loc, boolean isRear, int critMod, int damage) {\n         return criticalEntity(en, loc, isRear, critMod, true, false, damage);\n     }\n \n     /**\n      * Rolls and resolves critical hits with a die roll modifier.\n      */\n \n-    public Vector<Report> criticalEntity(Entity en, int loc, boolean isRear,\n-                                         int critMod, int damage, boolean damagedByFire) {\n+    public Vector<Report> criticalEntity(Entity en, int loc, boolean isRear, int critMod, int damage,\n+                                         boolean damagedByFire) {\n         return criticalEntity(en, loc, isRear, critMod, true, false, damage, damagedByFire);\n     }\n \n     /**\n      * Rolls one critical hit\n      */\n-    public Vector<Report> oneCriticalEntity(Entity en, int loc,\n-                                             boolean isRear, int damage) {\n+    public Vector<Report> oneCriticalEntity(Entity en, int loc, boolean isRear, int damage) {\n         return criticalEntity(en, loc, isRear, 0, false, false, damage);\n     }\n \n     /**\n      * Rolls one critical hit\n      */\n-    public Vector<Report> oneCriticalEntity(Entity en, int loc,\n-                                             boolean isRear, int damage, boolean damagedByFire) {\n+    // TODO : Windchild can this be removed? - never called\n+    public Vector<Report> oneCriticalEntity(Entity en, int loc, boolean isRear, int damage,", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MTc3NA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382941774", "bodyText": "I don't see any need to maintain unused versions of overloaded methods.", "author": "neoancient", "createdAt": "2020-02-22T21:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MjY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzIzMA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382243230", "bodyText": "We were doing some math then overwriting it. Should be the math.max, or the SmokeCloud.SMOKE_HEAVY?", "author": "Windchild292", "createdAt": "2020-02-20T20:35:43Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -30588,35 +29482,26 @@ public void addSmoke(ArrayList<Coords> coords, int windDir, boolean bInferno) {\n             // Have to check if it's inferno smoke or from a heavy/hardened\n             // building\n             // - heavy smoke from those\n-            if (bInferno\n-                || (Building.MEDIUM < smokeHex\n-                    .terrainLevel(Terrains.FUEL_TANK))\n-                || (Building.MEDIUM < smokeHex\n-                    .terrainLevel(Terrains.BUILDING))) {\n-                if (smokeHex.terrainLevel(Terrains.SMOKE)\n-                    == SmokeCloud.SMOKE_HEAVY) {\n+            if (bInferno || (Building.MEDIUM < smokeHex.terrainLevel(Terrains.FUEL_TANK))\n+                    || (Building.MEDIUM < smokeHex.terrainLevel(Terrains.BUILDING))) {\n+                if (smokeHex.terrainLevel(Terrains.SMOKE) == SmokeCloud.SMOKE_HEAVY) {\n                     // heavy smoke fills hex\n                     r = new Report(5180, Report.PUBLIC);\n-                    r.add(smokeCoords.getBoardNum());\n-                    addReport(r);\n                     smokeLevel = SmokeCloud.SMOKE_HEAVY;\n                 } else {\n-                    smokeLevel = Math.max(smokeLevel, SmokeCloud.SMOKE_HEAVY);\n                     r = new Report(5185, Report.PUBLIC);\n-                    r.add(smokeCoords.getBoardNum());\n-                    addReport(r);\n-                    smokeLevel = SmokeCloud.SMOKE_HEAVY;\n+                    smokeLevel = Math.max(smokeLevel, SmokeCloud.SMOKE_HEAVY); // TODO : Windchild verify this change is correct", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MTkyOA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382961928", "bodyText": "I don't know what the Math.max line is there for. We get to this block if there is a fire that generates heavy smoke and there is not already heavy smoke in that hex. So smokeLevel = SmokeCloud.SMOKE_HEAVY is correct.", "author": "neoancient", "createdAt": "2020-02-23T04:02:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzMzMA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382243330", "bodyText": "Can this be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:35:57Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33107,16 +31912,15 @@ public void run() {\n         final String METHOD_NAME = \"run()\";\n         Thread currentThread = Thread.currentThread();\n         getLogger().info(getClass(), METHOD_NAME, \"s: listening for clients...\");\n-        // HashSet<IConnection> toUpdate = new HashSet<IConnection>();\n+        // HashSet<IConnection> toUpdate = new HashSet<IConnection>(); // TODO : Windchild Can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MTk5NQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382961995", "bodyText": "That looks like it goes with the block of commented out code at the end of the method, so it can go with it.", "author": "neoancient", "createdAt": "2020-02-23T04:04:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzQ5NQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382243495", "bodyText": "There's a bunch of commented out code below, can that be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:36:19Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33129,11 +31933,11 @@ public void run() {\n                     ConnectionWatchdog w = new ConnectionWatchdog(this, id);\n                     watchdogTimer.schedule(w, 1000, 500);\n                 }\n-            } catch (InterruptedIOException iioe) {\n+            } catch (InterruptedIOException ignored) {\n                 // ignore , just SOTimeout blowing..\n-            } catch (IOException ex) {\n+            } catch (IOException ignored) { }\n \n-            }\n+            // TODO : Windchild Can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzOTk1Nw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382939957", "bodyText": "yes", "author": "neoancient", "createdAt": "2020-02-22T20:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzQ5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0Mzk4Nw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382243987", "bodyText": "This is never used, so can it be removed or is it a bug?", "author": "Windchild292", "createdAt": "2020-02-20T20:37:23Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33527,7 +32315,8 @@ private boolean checkBuildingCollapseWhileMoving(Building bldg,\n         int toInf = Math.round(damage * percent);\n \n         // some buildings scale remaining damage\n-        // TODO: this isn't quite right for castles brian\n+        // TODO : this isn't quite right for castles brian\n+        // TODO : Windchild this is never used?\n         damage = (int) Math.floor(bldg.getDamageToScale() * toInf);", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MjA2NQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382942065", "bodyText": "I think this may be a bug. I suspect it should be changing the value of toInf. I don't know the rules involved off the top of my head.", "author": "neoancient", "createdAt": "2020-02-22T21:15:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0Mzk4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAxMjA4OQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r383012089", "bodyText": "It is a bug, it should be scaling toInf.", "author": "Windchild292", "createdAt": "2020-02-23T15:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0Mzk4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NDI2Mw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382244263", "bodyText": "This is always false according to my IDE, is that meant to have happened or is it a bug?", "author": "Windchild292", "createdAt": "2020-02-20T20:38:04Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33592,12 +32377,11 @@ private boolean checkBuildingCollapseWhileMoving(Building bldg,\n         } // Handle the next entity\n \n         // If we found any infantry, add a line to the phase report.\n-        if (foundInfantry) {\n+        if (foundInfantry) { // TODO : Windchild this is always false?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MjI2OQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382962269", "bodyText": "My guess is that it should be set to true just after the Compute#isInBuilding check, which leads to reports generated. On the other hand, there's a new line added after the damage report if the infantry takes damage, and I don't think we need two blank lines. But there's no blank line between units if one of them takes no damage. So it's not too consistent. I would put a blank line in at the end if the block that starts with if (Compute.isInBuilding... and remove foundInfantry.", "author": "neoancient", "createdAt": "2020-02-23T04:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NDI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NDYyMQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382244621", "bodyText": "The recheck loop here all register as unused by my IDE. Is that a bug or just old code?", "author": "Windchild292", "createdAt": "2020-02-20T20:38:52Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33784,6 +32561,8 @@ public boolean checkForCollapse(Building bldg,\n                 recheckLoop = false;\n                 // recheck if the basement collapsed since the basement falls\n                 // might trigger a greater collapse.\n+\n+                // TODO : Windchild the recheck loop in this region all register as issues on my IDE", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MjUxMA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382962510", "bodyText": "The two if statements that follow the for loop should be inside it.", "author": "neoancient", "createdAt": "2020-02-23T04:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NDYyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NDg0MA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382244840", "bodyText": "Do we still need this method given it has zero usages?", "author": "Windchild292", "createdAt": "2020-02-20T20:39:20Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -37272,35 +35915,35 @@ private void handleAttacks(boolean pointblankShot) {\n     }\n \n     /**\n-     * @return\n+     * @return the current server instance\n      */\n     public static Server getServerInstance() {\n         return serverInstance;\n     }\n \n     /**\n-     * create a <code>SmokeCloud object and add it to the server list</code>\n+     * create a <code>SmokeCloud</code> object and add it to the server list\n      *\n-     * @param coords\n+     * @param coords the location to create the cloud\n      */\n-    public void createSmoke(Coords coords) {\n+    public void createSmoke(Coords coords) { // TODO : Windchild is this needed? No usages", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MjU0OA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382962548", "bodyText": "Unused versions of overloaded methods. They can go.", "author": "neoancient", "createdAt": "2020-02-23T04:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NDg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTAzNg==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382245036", "bodyText": "Is this needed? No usages", "author": "Windchild292", "createdAt": "2020-02-20T20:39:49Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -37272,35 +35915,35 @@ private void handleAttacks(boolean pointblankShot) {\n     }\n \n     /**\n-     * @return\n+     * @return the current server instance\n      */\n     public static Server getServerInstance() {\n         return serverInstance;\n     }\n \n     /**\n-     * create a <code>SmokeCloud object and add it to the server list</code>\n+     * create a <code>SmokeCloud</code> object and add it to the server list\n      *\n-     * @param coords\n+     * @param coords the location to create the cloud\n      */\n-    public void createSmoke(Coords coords) {\n+    public void createSmoke(Coords coords) { // TODO : Windchild is this needed? No usages\n         createSmoke(coords, 1, 0);\n     }\n \n     /**\n-     * create a <code>SmokeCloud object and add it to the server list</code>\n+     * create a <code>SmokeCloud</code> object and add it to the server list\n      *\n-     * @param coords\n-     * @param level  1=Light 2=Heavy Smoke\n+     * @param coords the location to create the smoke\n+     * @param level  1=Light 2=Heavy Smoke 3:light LI smoke 4: Heavy LI smoke\n      */\n-    public void createSmoke(Coords coords, int level) {\n+    public void createSmoke(Coords coords, int level) { // TODO : Windchild is this needed? No usages", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MjU1OA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382962558", "bodyText": "Unused versions of overloaded methods. They can go.", "author": "neoancient", "createdAt": "2020-02-23T04:18:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTI2MQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382245261", "bodyText": "This does nothing, can it just be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:40:20Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -37490,20 +36129,22 @@ private void registerWithServerBrowser(boolean register, String urlString) {\n                     }\n                 }\n             } else {\n+                // TODO : Windchild Can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MDQyNA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382940424", "bodyText": "That looks like old debugging code. I don't see any reason to keep it.", "author": "neoancient", "createdAt": "2020-02-22T20:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MTQ0OQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382941449", "bodyText": "Found a few other places with obvious commented out debugging code, removed them too.", "author": "Windchild292", "createdAt": "2020-02-22T21:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTM4MQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382245381", "bodyText": "This is never called, can it be removed?", "author": "Windchild292", "createdAt": "2020-02-20T20:40:36Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -37490,20 +36129,22 @@ private void registerWithServerBrowser(boolean register, String urlString) {\n                     }\n                 }\n             } else {\n+                // TODO : Windchild Can this be removed?\n                 while ((line = rd.readLine()) != null) {\n                     // System.out.println(line);\n                 }\n             }\n             rd.close();\n             printout.close();\n-        } catch (Exception e) {\n+        } catch (Exception ignored) {\n         }\n     }\n \n     public Set<Coords> getHexUpdateSet() {\n         return hexUpdateSet;\n     }\n \n+    // TODO : Windchild can this be removed?", "originalCommit": "4048c0570905aea689dac0cb465c38cc19114f60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MjY3Nw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382962677", "bodyText": "Looking at how it's used, I don't think there should be a setter for this.", "author": "neoancient", "createdAt": "2020-02-23T04:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTM4MQ=="}], "type": "inlineReview"}, {"oid": "ff02f2b48887cea8774a870cbd9dde946a283959", "url": "https://github.com/MegaMek/megamek/commit/ff02f2b48887cea8774a870cbd9dde946a283959", "message": "Fixing a few LGTM alerts in server", "committedDate": "2020-02-20T21:27:57Z", "type": "commit"}, {"oid": "526691eaf4e44024b86910d269782268c12184f6", "url": "https://github.com/MegaMek/megamek/commit/526691eaf4e44024b86910d269782268c12184f6", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Server", "committedDate": "2020-02-22T20:22:38Z", "type": "commit"}, {"oid": "082fd911f1fef357c26905c4483a3ce54368ef88", "url": "https://github.com/MegaMek/megamek/commit/082fd911f1fef357c26905c4483a3ce54368ef88", "message": "1702: Applying review changes, part 1", "committedDate": "2020-02-22T21:03:24Z", "type": "commit"}, {"oid": "ffd2c8fb2aefd2e30eb263637f2241944165fc23", "url": "https://github.com/MegaMek/megamek/commit/ffd2c8fb2aefd2e30eb263637f2241944165fc23", "message": "1702: Changes from review, part 2", "committedDate": "2020-02-22T21:16:42Z", "type": "commit"}, {"oid": "340343bfe97b352d2aff57f3575a6096de55f60e", "url": "https://github.com/MegaMek/megamek/commit/340343bfe97b352d2aff57f3575a6096de55f60e", "message": "Fixing spacing in server", "committedDate": "2020-02-22T22:38:26Z", "type": "commit"}, {"oid": "9f5fab3407aadc4ff2ea04383215acb9292070bd", "url": "https://github.com/MegaMek/megamek/commit/9f5fab3407aadc4ff2ea04383215acb9292070bd", "message": "1702: Applying review changes, part 3", "committedDate": "2020-02-23T04:36:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NDA1MA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382964050", "bodyText": "You can declare multiple resources in a try-with-resources block. Using a typical try/catch block means they don't get closed if an exception is thrown.", "author": "neoancient", "createdAt": "2020-02-23T04:52:04Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -1379,22 +1350,22 @@ public boolean loadGame(File f) {\n      *            Determines whether the connections should be updated with\n      *            current info. This may be false if some reconnection remapping\n      *            needs to be done first.\n-     * @return A <code>boolean</code> value wether or not the loading was\n-     *         successfull\n+     * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n         final String METHOD_NAME = \"loadGame(File,boolean)\";\n         getLogger().info(getClass(), METHOD_NAME, \"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n \n         IGame newGame;\n-        try(InputStream is = new GZIPInputStream(new FileInputStream(f))) {\n+        try {", "originalCommit": "9f5fab3407aadc4ff2ea04383215acb9292070bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAwODMzNA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r383008334", "bodyText": "Fixed this so it actually closes properly with a resources try-catch. My apologies, I forgot to update following comments on my LGTM PR for MekHQ.\nI found pair of other locations that could use the same implementation, so I fixed them too.", "author": "Windchild292", "createdAt": "2020-02-23T14:23:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NDA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NDMxOA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382964318", "bodyText": "Adding 0.5 to a floating point number then coercing it to an int rounds it. If you're going to use Math.round, don't add the 0.5 because that's the equivalent of Math.ceil instead.", "author": "neoancient", "createdAt": "2020-02-23T04:58:23Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -3885,32 +3766,31 @@ public boolean accept(Entity entity) {\n                 // If there's only one team moving, we don't need to bother\n                 // with the evenTracker, just make sure the even turns are\n                 // evenly distributed\n-                numEven += (teamEvenTurns / min) + 0.5;\n+                numEven += (int) Math.round((teamEvenTurns / min) + 0.5);", "originalCommit": "9f5fab3407aadc4ff2ea04383215acb9292070bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAwNzE5Mw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r383007193", "bodyText": "Good to know, removed the addition and swapped to Math.ceil\nI also found a place where we are using Math.round(Math.ceil(division)), so I removed the outer rounding.", "author": "Windchild292", "createdAt": "2020-02-23T14:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NDMxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NDUxOA==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r382964518", "bodyText": "I double checked the rules on this. Acid damage to conventional infantry is rounded up.", "author": "neoancient", "createdAt": "2020-02-23T05:02:51Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -23396,14 +22468,14 @@ private void resolveShutdownCrashes() {\n                     if (te.getArmor(hit) <= 0) {\n                         break; // hitting IS, not acid-affected armor\n                     }\n-                    damage = te.getArmor(hit) >= 3 ? 3 : te.getArmor(hit);\n+                    damage = Math.min(te.getArmor(hit), 3);\n                     r = new Report(6061);\n                     r.subject = te_n;\n                     r.indent(2);\n                     r.add(damage);\n                     vDesc.addElement(r);\n                 } else if (isPlatoon) {\n-                    damage *= 1.5;\n+                    damage = (int) Math.round(damage * 1.5);", "originalCommit": "9f5fab3407aadc4ff2ea04383215acb9292070bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c1cd39f0834335ed55a67b3e483a6e1dffcd3f58", "url": "https://github.com/MegaMek/megamek/commit/c1cd39f0834335ed55a67b3e483a6e1dffcd3f58", "message": "1702: Applying review changes, part 4", "committedDate": "2020-02-23T14:37:20Z", "type": "commit"}, {"oid": "500f2fb9abe71c2fd2198da493b0a699bfcab9b2", "url": "https://github.com/MegaMek/megamek/commit/500f2fb9abe71c2fd2198da493b0a699bfcab9b2", "message": "1702: Changes from review, part 5", "committedDate": "2020-02-23T15:12:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQzMTgxNQ==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r383431815", "bodyText": "What I was trying to say is that what was originally here (teamEvenTurns / min + 0.5) is the equivalent of (int) Math.round(teamEvenTurns / min). Changing it to (int) Math.round((teamEvenTurns / min) + 0.5) is the equivalent of (int) Math.ceil(teamEvenTurns / min), which changes the logic. Unless the original logic is wrong, this should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            numEven += (int) Math.ceil(teamEvenTurns / min);\n          \n          \n            \n                            numEven += (int) Math.round(teamEvenTurns / min);", "author": "neoancient", "createdAt": "2020-02-24T18:18:55Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -3766,7 +3745,7 @@ public boolean accept(Entity entity) {\n                 // If there's only one team moving, we don't need to bother\n                 // with the evenTracker, just make sure the even turns are\n                 // evenly distributed\n-                numEven += (int) Math.round((teamEvenTurns / min) + 0.5);\n+                numEven += (int) Math.ceil(teamEvenTurns / min);", "originalCommit": "c1cd39f0834335ed55a67b3e483a6e1dffcd3f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQzNzAxMw==", "url": "https://github.com/MegaMek/megamek/pull/1702#discussion_r383437013", "bodyText": "Nope, I just did a late night change that doesn't make sense to me either. Fixing in the next few min.", "author": "Windchild292", "createdAt": "2020-02-24T18:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQzMTgxNQ=="}], "type": "inlineReview"}, {"oid": "48fce1a95d3de51346bb70e4c90b32417ee720b8", "url": "https://github.com/MegaMek/megamek/commit/48fce1a95d3de51346bb70e4c90b32417ee720b8", "message": "1702: Changes from Review, part 6", "committedDate": "2020-02-24T18:46:59Z", "type": "commit"}]}