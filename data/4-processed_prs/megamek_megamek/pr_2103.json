{"pr_number": 2103, "pr_title": "Wreckage graphical improvement", "pr_createdAt": "2020-08-03T06:05:48Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2103", "timeline": [{"oid": "ac35c938a7dad466db0fb1b07fdf07a410ca7474", "url": "https://github.com/MegaMek/megamek/commit/ac35c938a7dad466db0fb1b07fdf07a410ca7474", "message": "initial work", "committedDate": "2020-08-03T02:24:39Z", "type": "commit"}, {"oid": "becd26d9484ee509d745f3bc1cb13097fccd0d0a", "url": "https://github.com/MegaMek/megamek/commit/becd26d9484ee509d745f3bc1cb13097fccd0d0a", "message": "polish", "committedDate": "2020-08-03T05:41:36Z", "type": "commit"}, {"oid": "4a68f77d5c9ca9430575c6b5668ea16eddc416fd", "url": "https://github.com/MegaMek/megamek/commit/4a68f77d5c9ca9430575c6b5668ea16eddc416fd", "message": "apply wreck decals to all unit types", "committedDate": "2020-08-03T05:51:08Z", "type": "commit"}, {"oid": "f7f79c9970e54a9dd09dfcc2316bd6bef8c8caa1", "url": "https://github.com/MegaMek/megamek/commit/f7f79c9970e54a9dd09dfcc2316bd6bef8c8caa1", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-03T18:51:31Z", "type": "commit"}, {"oid": "8026aa3fce28ad9e0db0bcef03f043857b8853c1", "url": "https://github.com/MegaMek/megamek/commit/8026aa3fce28ad9e0db0bcef03f043857b8853c1", "message": "further polish", "committedDate": "2020-08-04T02:20:29Z", "type": "commit"}, {"oid": "e53fdbadbb579d01b0f42e53abb4902ea5e3dadd", "url": "https://github.com/MegaMek/megamek/commit/e53fdbadbb579d01b0f42e53abb4902ea5e3dadd", "message": "Merge branch 'master' into wreckage_ui_improvement", "committedDate": "2020-08-05T02:44:09Z", "type": "commit"}, {"oid": "5fc2e5a369d53896ce94be9c82cc8e6455449104", "url": "https://github.com/MegaMek/megamek/commit/5fc2e5a369d53896ce94be9c82cc8e6455449104", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-05T16:29:24Z", "type": "commit"}, {"oid": "2968325e7800f9eb7f9f06df8f89f7895d8915a4", "url": "https://github.com/MegaMek/megamek/commit/2968325e7800f9eb7f9f06df8f89f7895d8915a4", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-06T02:47:28Z", "type": "commit"}, {"oid": "cde828ab43577251cde4cd0da01adc6e0b6d04bb", "url": "https://github.com/MegaMek/megamek/commit/cde828ab43577251cde4cd0da01adc6e0b6d04bb", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-06T14:54:29Z", "type": "commit"}, {"oid": "a83175ac0f766d0582a6564f4e05e00c1ff09d1e", "url": "https://github.com/MegaMek/megamek/commit/a83175ac0f766d0582a6564f4e05e00c1ff09d1e", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-07T18:58:24Z", "type": "commit"}, {"oid": "437194fdbd97c8076617acd2a59191f2a6d26b1a", "url": "https://github.com/MegaMek/megamek/commit/437194fdbd97c8076617acd2a59191f2a6d26b1a", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-09T02:48:50Z", "type": "commit"}, {"oid": "bdaa92a599101b3c2406f25aa329ae75d0a0641f", "url": "https://github.com/MegaMek/megamek/commit/bdaa92a599101b3c2406f25aa329ae75d0a0641f", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-10T14:50:52Z", "type": "commit"}, {"oid": "751fbae46c6aefd6d12f2d709c8852739f64d3e6", "url": "https://github.com/MegaMek/megamek/commit/751fbae46c6aefd6d12f2d709c8852739f64d3e6", "message": "bug fixes and refinements", "committedDate": "2020-08-13T04:10:48Z", "type": "commit"}, {"oid": "faeede8544124f7cab0ba290bcef13a68af32139", "url": "https://github.com/MegaMek/megamek/commit/faeede8544124f7cab0ba290bcef13a68af32139", "message": "cleanup", "committedDate": "2020-08-13T04:15:19Z", "type": "commit"}, {"oid": "bc36e462d54037ff44c604aeaabd8e3e049bcf3b", "url": "https://github.com/MegaMek/megamek/commit/bc36e462d54037ff44c604aeaabd8e3e049bcf3b", "message": "fix disappearing dropship hexes", "committedDate": "2020-08-13T04:20:16Z", "type": "commit"}, {"oid": "f52028743a8568d4b97150967a6f1472e8ff6653", "url": "https://github.com/MegaMek/megamek/commit/f52028743a8568d4b97150967a6f1472e8ff6653", "message": "no craters for space combat", "committedDate": "2020-08-13T04:40:02Z", "type": "commit"}, {"oid": "73497e6c4200ef5d9936d7b3444a357244affe90", "url": "https://github.com/MegaMek/megamek/commit/73497e6c4200ef5d9936d7b3444a357244affe90", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-13T04:41:51Z", "type": "commit"}, {"oid": "4d33086cb93d3d4478c1e3e00646b9aba2d5d04f", "url": "https://github.com/MegaMek/megamek/commit/4d33086cb93d3d4478c1e3e00646b9aba2d5d04f", "message": "prevent destroyed mechs from swaying gently in the wind", "committedDate": "2020-08-18T04:24:04Z", "type": "commit"}, {"oid": "f583dca1a048ebad0fc6b8f2972160d72a793b4b", "url": "https://github.com/MegaMek/megamek/commit/f583dca1a048ebad0fc6b8f2972160d72a793b4b", "message": "Merge branch 'wreckage_ui_improvement' of https://github.com/NickAragua/megamek into wreckage_ui_improvement", "committedDate": "2020-08-19T03:15:49Z", "type": "commit"}, {"oid": "109c214583da1ca32bb35e859e05f4c38f14b97a", "url": "https://github.com/MegaMek/megamek/commit/109c214583da1ca32bb35e859e05f4c38f14b97a", "message": "Merge branch 'master' of https://github.com/MegaMek/megamek into wreckage_ui_improvement", "committedDate": "2020-08-19T03:16:00Z", "type": "commit"}, {"oid": "1dafe2775ea96c4e3c0aa10e5a7e22ca3f34e17a", "url": "https://github.com/MegaMek/megamek/commit/1dafe2775ea96c4e3c0aa10e5a7e22ca3f34e17a", "message": "add doubles to list of allowed things to serialize", "committedDate": "2020-08-19T16:10:36Z", "type": "commit"}, {"oid": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "url": "https://github.com/MegaMek/megamek/commit/0082aca784f7965b37bc3a140ea0e62ed9a9b083", "message": "fix decal naming", "committedDate": "2020-08-20T01:08:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNTMzOA==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475105338", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    bounds = new Rectangle(0,0,bv.hex_size.width, bv.hex_size.height);\n          \n          \n            \n                    bounds = new Rectangle(0, 0, bv.hex_size.width, bv.hex_size.height);", "author": "sixlettervariables", "createdAt": "2020-08-22T16:13:01Z", "path": "megamek/src/megamek/client/ui/swing/boardview/AbstractWreckSprite.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it\n+ *  under the terms of the GNU General Public License as published by the Free\n+ *  Software Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ *  for more details.\n+ */\n+\n+package megamek.client.ui.swing.boardview;\n+\n+import java.awt.AlphaComposite;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+\n+import megamek.client.ui.swing.GUIPreferences;\n+import megamek.client.ui.swing.util.EntityWreckHelper;\n+import megamek.common.Entity;\n+import megamek.common.Terrains;\n+import megamek.common.util.ImageUtil;\n+\n+/**\n+ * Contains common functionality for wreck sprites (currently isometric and regular)\n+ * @author NickAragua\n+ *\n+ */\n+public abstract class AbstractWreckSprite extends Sprite {\n+    protected Entity entity;\n+\n+    protected Rectangle modelRect;\n+\n+    protected int secondaryPos;\n+    \n+    public AbstractWreckSprite(BoardView1 boardView1) {\n+        super(boardView1);\n+    }\n+    \n+    @Override\n+    public Rectangle getBounds() {\n+        // Start with the hex and add the label\n+        bounds = new Rectangle(0,0,bv.hex_size.width, bv.hex_size.height);", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNTM5OA==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475105398", "bodyText": "Future proofing I guess:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (secondaryPos == -1) {\n          \n          \n            \n                    if (secondaryPos < 0 || secondaryPos >= entity.getSecondaryPositions().size()) {", "author": "sixlettervariables", "createdAt": "2020-08-22T16:13:41Z", "path": "megamek/src/megamek/client/ui/swing/boardview/AbstractWreckSprite.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it\n+ *  under the terms of the GNU General Public License as published by the Free\n+ *  Software Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ *  for more details.\n+ */\n+\n+package megamek.client.ui.swing.boardview;\n+\n+import java.awt.AlphaComposite;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+\n+import megamek.client.ui.swing.GUIPreferences;\n+import megamek.client.ui.swing.util.EntityWreckHelper;\n+import megamek.common.Entity;\n+import megamek.common.Terrains;\n+import megamek.common.util.ImageUtil;\n+\n+/**\n+ * Contains common functionality for wreck sprites (currently isometric and regular)\n+ * @author NickAragua\n+ *\n+ */\n+public abstract class AbstractWreckSprite extends Sprite {\n+    protected Entity entity;\n+\n+    protected Rectangle modelRect;\n+\n+    protected int secondaryPos;\n+    \n+    public AbstractWreckSprite(BoardView1 boardView1) {\n+        super(boardView1);\n+    }\n+    \n+    @Override\n+    public Rectangle getBounds() {\n+        // Start with the hex and add the label\n+        bounds = new Rectangle(0,0,bv.hex_size.width, bv.hex_size.height);\n+        \n+        // Move to board position, save this origin for correct drawing\n+        Point hexOrigin = bounds.getLocation();\n+        Point ePos;\n+        if (secondaryPos == -1) {", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNTU0OQ==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475105549", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if ((secondaryPos == -1) && GUIPreferences.getInstance()\n          \n          \n            \n                    if ((secondaryPos < 0) && GUIPreferences.getInstance()", "author": "sixlettervariables", "createdAt": "2020-08-22T16:15:24Z", "path": "megamek/src/megamek/client/ui/swing/boardview/AbstractWreckSprite.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it\n+ *  under the terms of the GNU General Public License as published by the Free\n+ *  Software Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ *  for more details.\n+ */\n+\n+package megamek.client.ui.swing.boardview;\n+\n+import java.awt.AlphaComposite;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+\n+import megamek.client.ui.swing.GUIPreferences;\n+import megamek.client.ui.swing.util.EntityWreckHelper;\n+import megamek.common.Entity;\n+import megamek.common.Terrains;\n+import megamek.common.util.ImageUtil;\n+\n+/**\n+ * Contains common functionality for wreck sprites (currently isometric and regular)\n+ * @author NickAragua\n+ *\n+ */\n+public abstract class AbstractWreckSprite extends Sprite {\n+    protected Entity entity;\n+\n+    protected Rectangle modelRect;\n+\n+    protected int secondaryPos;\n+    \n+    public AbstractWreckSprite(BoardView1 boardView1) {\n+        super(boardView1);\n+    }\n+    \n+    @Override\n+    public Rectangle getBounds() {\n+        // Start with the hex and add the label\n+        bounds = new Rectangle(0,0,bv.hex_size.width, bv.hex_size.height);\n+        \n+        // Move to board position, save this origin for correct drawing\n+        Point hexOrigin = bounds.getLocation();\n+        Point ePos;\n+        if (secondaryPos == -1) {\n+            ePos = bv.getHexLocation(entity.getPosition());\n+        } else {\n+            ePos = bv.getHexLocation(entity.getSecondaryPositions().get(secondaryPos));\n+        }\n+        bounds.setLocation(hexOrigin.x + ePos.x, hexOrigin.y + ePos.y);\n+\n+        return bounds;\n+    }\n+\n+    /**\n+     * Creates the sprite for this entity. It is an extra pain to create\n+     * transparent images in AWT.\n+     */\n+    @Override\n+    public void prepare() {\n+        // figure out size\n+        String shortName = entity.getShortName();\n+        Font font = new Font(\"SansSerif\", Font.PLAIN, 10); //$NON-NLS-1$\n+        Rectangle tempRect = new Rectangle(47, 55, bv.getFontMetrics(font)\n+                .stringWidth(shortName) + 1, bv.getFontMetrics(font)\n+                .getAscent());\n+\n+        // create image for buffer\n+        image = ImageUtil.createAcceleratedImage(bounds.width, bounds.height);\n+        Graphics2D graph = (Graphics2D) image.getGraphics();\n+        \n+        // if the entity is underwater or would sink underwater, we want to make the wreckage translucent\n+        // so it looks like it sunk\n+        boolean entityIsUnderwater = (entity.relHeight() < 0) ||\n+                ((entity.relHeight() >= 0) && entity.getGame().getBoard().getHex(entity.getPosition()).containsTerrain(Terrains.WATER)) &&\n+                !EntityWreckHelper.entityOnBridge(entity);\n+        \n+        if(entityIsUnderwater) {\n+            graph.setComposite(AlphaComposite.getInstance(\n+                    AlphaComposite.SRC_OVER, 0.35f));\n+        }\n+\n+        // draw the 'destroyed decal' where appropriate\n+        boolean displayDestroyedDecal = EntityWreckHelper.displayDestroyedDecal(entity);\n+        \n+        if(displayDestroyedDecal) {\n+            Image destroyed = bv.tileManager.bottomLayerWreckMarkerFor(entity, 0);\n+            if (null != destroyed) {\n+                graph.drawImage(destroyed, 0, 0, this);\n+            }\n+        }\n+        \n+        // draw the 'fuel leak' decal where appropriate\n+        boolean drawFuelLeak = EntityWreckHelper.displayFuelLeak(entity);\n+        \n+        if(drawFuelLeak) {\n+            Image fuelLeak = bv.tileManager.bottomLayerFuelLeakMarkerFor(entity);\n+            if (null != fuelLeak) {\n+                graph.drawImage(fuelLeak, 0, 0, this);\n+            }\n+        }\n+        \n+        // draw the 'tires' or 'tracks' decal where appropriate\n+        boolean drawMotiveWreckage = EntityWreckHelper.displayMotiveDamage(entity);\n+        \n+        if(drawMotiveWreckage) {\n+            Image motiveWreckage = bv.tileManager.bottomLayerMotiveMarkerFor(entity);\n+            if (null != motiveWreckage) {\n+                graph.drawImage(motiveWreckage, 0, 0, this);\n+            }\n+        }\n+        \n+        // Draw wreck image, if we've got one.\n+        Image wreck = null;\n+        \n+        if(EntityWreckHelper.displayDevastation(entity)) {\n+            // objects in space should not have craters\n+            wreck = entity.getGame().getBoard().inSpace() ?\n+                    bv.tileManager.wreckMarkerFor(entity, secondaryPos) :\n+                    bv.tileManager.getCraterFor(entity, secondaryPos);\n+        } else {\n+            wreck = EntityWreckHelper.useExplicitWreckImage(entity) ? \n+                        bv.tileManager.wreckMarkerFor(entity, secondaryPos) :\n+                        bv.tileManager.imageFor(entity, secondaryPos);\n+        }\n+\n+        if (null != wreck) {\n+            graph.drawImage(wreck, 0, 0, this);\n+        }\n+        \n+        if(entityIsUnderwater) {\n+            graph.setComposite(AlphaComposite.getInstance(\n+                    AlphaComposite.SRC_OVER, 1.0f));\n+        }\n+        \n+        if ((secondaryPos == -1) && GUIPreferences.getInstance()", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNTY4OQ==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475105689", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (secondaryPos == -1) {\n          \n          \n            \n                    if (secondaryPos < 0 || secondaryPos >= entity.getSecondaryPositions().size()) {", "author": "sixlettervariables", "createdAt": "2020-08-22T16:16:54Z", "path": "megamek/src/megamek/client/ui/swing/boardview/IsometricWreckSprite.java", "diffHunk": "@@ -96,61 +73,12 @@ public void drawOnto(Graphics g, int x, int y, ImageObserver observer,\n     public Entity getEntity() {\n         return entity;\n     }\n-\n-    /**\n-     * Creates the sprite for this entity. It is an extra pain to create\n-     * transparent images in AWT.\n-     */\n-    @Override\n-    public void prepare() {\n-        // figure out size\n-        String shortName = entity.getShortName();\n-        Font font = new Font(\"SansSerif\", Font.PLAIN, 10); //$NON-NLS-1$\n-        Rectangle tempRect = new Rectangle(47, 55, bv.getFontMetrics(font)\n-                .stringWidth(shortName) + 1, bv.getFontMetrics(font)\n-                .getAscent());\n-\n-        // create image for buffer\n-        image = ImageUtil.createAcceleratedImage(bounds.width, bounds.height);\n-        Graphics graph = image.getGraphics();\n-\n-        // Draw wreck image,if we've got one.\n-        Image wreck = bv.tileManager.wreckMarkerFor(entity, -1);\n-        if (null != wreck) {\n-            graph.drawImage(wreck, 0, 0, this);\n-        }\n-\n-        if ((secondaryPos == -1) && GUIPreferences.getInstance()\n-                .getBoolean(GUIPreferences.ADVANCED_DRAW_ENTITY_LABEL)) {\n-            // draw box with shortName\n-            Color text = Color.lightGray;\n-            Color bkgd = Color.darkGray;\n-            Color bord = Color.black;\n-\n-            graph.setFont(font);\n-            graph.setColor(bord);\n-            graph.fillRect(tempRect.x, tempRect.y, tempRect.width,\n-                    tempRect.height);\n-            tempRect.translate(-1, -1);\n-            graph.setColor(bkgd);\n-            graph.fillRect(tempRect.x, tempRect.y, tempRect.width,\n-                    tempRect.height);\n-            graph.setColor(text);\n-            graph.drawString(shortName, tempRect.x + 1,\n-                    (tempRect.y + tempRect.height) - 1);\n+    \n+    public Coords getPosition() {\n+        if (secondaryPos == -1) {", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjA4OQ==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106089", "bodyText": "Floating point math is weird, is this always going to be 1.0?", "author": "sixlettervariables", "createdAt": "2020-08-22T16:20:58Z", "path": "megamek/src/megamek/client/ui/swing/tileset/EntityImage.java", "diffHunk": "@@ -132,17 +134,49 @@ public EntityImage(Image base, Image wreck, int tint, Image camo,\n         this.camo = camo;\r\n         parent = comp;\r\n         this.wreck = wreck;\r\n-        this.dmgLevel = entity.getDamageLevel();\r\n-        this.weight = entity.getWeight();\r\n+        this.dmgLevel = calculateDamageLevel(entity);\r\n+        // hack: gun emplacements are pretty beefy but have weight 0\r\n+        this.weight = entity instanceof GunEmplacement ?\r\n+                SMOKE_THREE + 1 : entity.getWeight();\r\n         isInfantry = entity instanceof Infantry;\r\n+        isTank = entity instanceof Tank;\r\n         isPreview = preview;\r\n-        isSlim = entity instanceof Tank || entity instanceof Aero;\r\n+        isSlim = (isTank && !(entity instanceof GunEmplacement));\r\n         isVerySlim = entity instanceof VTOL;\r\n         pos = secondaryPos;\r\n         isSingleHex = secondaryPos == -1;\r\n         decal = getDamageDecal(entity, secondaryPos);\r\n         smoke = getSmokeImage(entity, secondaryPos);\r\n     }\r\n+    \r\n+    /**\r\n+     * Worker function that calculates the entity's damage level for the purposes of displaying damage \r\n+     * to avoid particularly dumb-looking situations\r\n+     */\r\n+    private int calculateDamageLevel(Entity entity) {\r\n+        // gun emplacements don't show up as crippled when destroyed, which leads to them looking pristine\r\n+        if((entity instanceof GunEmplacement) && entity.isDestroyed()) {\r\n+            return Entity.DMG_CRIPPLED;\r\n+        }\r\n+        \r\n+        // aerospace fighters where the pilot ejects look pretty dumb without any damage decals\r\n+        // so let's give them at least some damage\r\n+        if(entity.isAirborne() && entity.getCrew().isEjected()) {\r\n+            return Math.max(Entity.DMG_HEAVY, entity.getDamageLevel(false));\r\n+        }\r\n+        \r\n+        int calculatedDamageLevel = entity.getDamageLevel();\r\n+        \r\n+        // crippled entities may be \"crippled\" due to harmless weapon jams or being out of ammo but \r\n+        // not having taken any actual damage\r\n+        if(calculatedDamageLevel == Entity.DMG_CRIPPLED) {\r\n+            if(entity.getArmorRemainingPercent() == 1.0) {\r", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjYzMQ==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106631", "bodyText": "Double check your logic here and below, you're mixing fractions and percents.", "author": "sixlettervariables", "createdAt": "2020-08-22T16:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMDA0OA==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475110048", "bodyText": "I can see a theoretical possibility that it'll come out higher than 1, but if it's below 1 we can consider it damaged.", "author": "NickAragua", "createdAt": "2020-08-22T17:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjA4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjEzNw==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106137", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<EntityImage> mechImageList = new ArrayList<EntityImage>();\n          \n          \n            \n                private Map<ArrayList<Integer>, EntityImage> mechImages = new HashMap<ArrayList<Integer>, EntityImage>();\n          \n          \n            \n                private List<EntityImage> mechImageList = new ArrayList<>();\n          \n          \n            \n                private Map<ArrayList<Integer>, EntityImage> mechImages = new HashMap<>();", "author": "sixlettervariables", "createdAt": "2020-08-22T16:21:37Z", "path": "megamek/src/megamek/client/ui/swing/tileset/TilesetManager.java", "diffHunk": "@@ -78,8 +88,10 @@\n     private MechTileset mechTileset = new MechTileset(Configuration.unitImagesDir());\n     private MechTileset wreckTileset = new MechTileset(\n             new MegaMekFile(Configuration.unitImagesDir(), DIR_NAME_WRECKS).getFile());\n-    private ArrayList<EntityImage> mechImageList = new ArrayList<EntityImage>();\n-    private HashMap<ArrayList<Integer>, EntityImage> mechImages = new HashMap<ArrayList<Integer>, EntityImage>();\n+    private List<EntityImage> mechImageList = new ArrayList<EntityImage>();\n+    private Map<ArrayList<Integer>, EntityImage> mechImages = new HashMap<ArrayList<Integer>, EntityImage>();", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjE3MQ==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106171", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Map<Color, Image> ecmStaticImages = new HashMap<Color, Image>();\n          \n          \n            \n                private Map<Color, Image> ecmStaticImages = new HashMap<>();", "author": "sixlettervariables", "createdAt": "2020-08-22T16:21:49Z", "path": "megamek/src/megamek/client/ui/swing/tileset/TilesetManager.java", "diffHunk": "@@ -100,7 +112,7 @@\n      * images for various colors (for Players, and possibly multiple players\n      * in the same hex).\n      */\n-    private HashMap<Color, Image> ecmStaticImages = new HashMap<Color, Image>();\n+    private Map<Color, Image> ecmStaticImages = new HashMap<Color, Image>();", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjI5OA==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106298", "bodyText": "What's the magic with 4?", "author": "sixlettervariables", "createdAt": "2020-08-22T16:23:24Z", "path": "megamek/src/megamek/client/ui/swing/tileset/TilesetManager.java", "diffHunk": "@@ -179,6 +217,107 @@ public Image wreckMarkerFor(Entity entity, int secondaryPos) {\n         }\n         return entityImage.getWreckFacing(entity.getFacing());\n     }\n+    \n+    /** Retrieves the \"devastated\" decoration for the given entity */\n+    public Image getCraterFor(Entity entity, int secondaryPos) {\n+        Image marker = null;\n+        \n+        String suffix = EntityWreckHelper.getWeightSuffix(entity);\n+        String filename = String.format(\"crater_decal_%s.png\", suffix);\n+        String path = String.format(\"%s/%s\", DIR_NAME_WRECKS, DIR_NAME_BOTTOM_DECALS);\n+        \n+        if(wreckageDecals.containsKey(filename)) {\n+            marker = wreckageDecals.get(filename);\n+        } else {\n+            marker = TilesetManager.LoadSpecificImage(new File(Configuration.unitImagesDir(), path), filename);\n+            wreckageDecals.put(filename, marker);\n+        }\n+        \n+        return marker;\n+    }\n+    \n+    /** Retrieves the \"destroyed\" decoration for the given entity */\n+    public Image bottomLayerWreckMarkerFor(Entity entity, int secondaryPos) {\n+        Image marker = null;\n+\n+        // wreck filenames are in the format destroyed_decal_x_weightsuffix, where x is 1 through however many bottom splats we have\n+        // in the directory. To make sure we don't swap splats between entities, we make it depend on entity ID        \n+        String suffix = EntityWreckHelper.getWeightSuffix(entity);\n+        int wreckNum = (entity.getId() % this.wreckageDecalCount.get(suffix)) + 1;\n+        String filename = String.format(\"%s%d_%s.png\", FILENAME_PREFIX_WRECKS, wreckNum, suffix);\n+        String path = String.format(\"%s/%s\", DIR_NAME_WRECKS, DIR_NAME_BOTTOM_DECALS);\n+        \n+        if(wreckageDecals.containsKey(filename)) {\n+            marker = wreckageDecals.get(filename);\n+        } else {\n+            marker = TilesetManager.LoadSpecificImage(new File(Configuration.unitImagesDir(), path), filename);\n+            wreckageDecals.put(filename, marker);\n+        }\n+        \n+        return marker;\n+    }\n+    \n+    /** Retrieves the \"destroyed\" decoration for the given entity */\n+    public Image bottomLayerFuelLeakMarkerFor(Entity entity) {\n+        Image marker = null;\n+        \n+        String suffix = EntityWreckHelper.getWeightSuffix(entity);\n+        String filename = String.format(\"fuelleak_decal_%s.png\", suffix);\n+        String path = String.format(\"%s/%s\", DIR_NAME_WRECKS, DIR_NAME_BOTTOM_DECALS);\n+        \n+        int rotationKey = entity.getId() % 4;\n+        String imageKey = String.format(\"%s%s\", filename, rotationKey);\n+        \n+        if(!wreckageDecals.containsKey(imageKey)) {\n+            Image baseImage = TilesetManager.LoadSpecificImage(new File(Configuration.unitImagesDir(), path), filename);\n+            \n+            for(double x = 0; x < 4; x++) {\n+                RotateFilter rf = new RotateFilter(x * 90);\n+                String newImageKey = String.format(\"%s%s\", filename, (int) x);\n+                \n+                ImageProducer ip = new FilteredImageSource(baseImage.getSource(), rf);\n+                Image resultImage = Toolkit.getDefaultToolkit().createImage(ip);\n+                wreckageDecals.put(newImageKey, resultImage);\n+            }\n+        }\n+        \n+        marker = wreckageDecals.get(imageKey);\n+        \n+        return marker;\n+    }\n+    \n+    /** Retrieves the \"destroyed\" decoration for the given entity */\n+    public Image bottomLayerMotiveMarkerFor(Entity entity) {\n+        Image marker = null;\n+        \n+        String weightSuffix = EntityWreckHelper.getWeightSuffix(entity);\n+        String motivePrefix = EntityWreckHelper.getMotivePrefix(entity);\n+        \n+        if(motivePrefix != null) {\n+            String filename = String.format(\"%s_decal_%s.png\", motivePrefix, weightSuffix);\n+            String path = String.format(\"%s/%s\", DIR_NAME_WRECKS, DIR_NAME_BOTTOM_DECALS);\n+            \n+            int rotationKey = entity.getId() % 4;", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTQxOA==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475109418", "bodyText": "I only made one of each \"motive damage\" decals, but I wanted a little variety, so I rotate them in 90 degree increments. Will turn the magic number into a constant.", "author": "NickAragua", "createdAt": "2020-08-22T16:58:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjQ3Mg==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106472", "bodyText": "Does this handle entities that have moved offboard? I know we've had some issues with that in the past.", "author": "sixlettervariables", "createdAt": "2020-08-22T16:25:18Z", "path": "megamek/src/megamek/client/ui/swing/util/EntityWreckHelper.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * MegaMek - Copyright (C) 2020 - The MegaMek Team\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it\n+ *  under the terms of the GNU General Public License as published by the Free\n+ *  Software Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but\n+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ *  for more details.\n+ */\n+\n+package megamek.client.ui.swing.util;\n+\n+import megamek.client.ui.swing.tileset.TilesetManager;\n+import megamek.common.Engine;\n+import megamek.common.Entity;\n+import megamek.common.EntityMovementMode;\n+import megamek.common.EntityWeightClass;\n+import megamek.common.GunEmplacement;\n+import megamek.common.IEntityRemovalConditions;\n+import megamek.common.IHex;\n+import megamek.common.Infantry;\n+import megamek.common.Mech;\n+import megamek.common.Tank;\n+import megamek.common.Terrains;\n+\n+/**\n+ * This class handles logic for displaying various kinds of damage and destruction decals\n+ * @author NickAragua\n+ * \n+ */\n+public class EntityWreckHelper {    \n+    /**\n+     * Logic that determines if we should be display \"destroyed\" decals below the destroyed entity.\n+     * Assumes that the entity is destroyed.\n+     */\n+    public static boolean displayDestroyedDecal(Entity entity) {\n+        // don't display \"generic\" destroyed decals in the following situations:\n+        //  in space (looks weird)\n+        //  for mechs/infantry/VTOLs (needs specialized icons) \n+        //  for units that were destroyed by ejection rather than unit destruction\n+        //  for units on top of a bridge (looks kind of stupid)\n+        \n+        if(entity.getGame().getBoard().inSpace() ||\n+                (entity instanceof Mech) ||\n+                (entity instanceof Infantry) ||\n+                (entity instanceof GunEmplacement) ||\n+                !entity.getSecondaryPositions().isEmpty() ||\n+                entityOnBridge(entity)) {\n+            return false;\n+        }\n+        \n+        return true;\n+    }\n+    \n+    public static boolean useExplicitWreckImage(Entity entity) {\n+        return entity instanceof Mech;\n+    }\n+    \n+    /**\n+     * Logic that determines whether we should display a 'fuel leak' for the given entity.\n+     */\n+    public static boolean displayFuelLeak(Entity entity) {\n+        return (entity instanceof Tank) &&\n+                (entity.getMovementMode() != EntityMovementMode.VTOL) && \n+                (entity.getEngine().getEngineType() == Engine.COMBUSTION_ENGINE) &&\n+                entity.isPermanentlyImmobilized(false) &&\n+                !entity.getGame().getBoard().inSpace() &&\n+                !entityOnBridge(entity);\n+    }\n+    \n+    /**\n+     * Whether we should display 'motive damage' for the given entity, meaning loose treads and such\n+     */\n+    public static boolean displayMotiveDamage(Entity entity) {\n+        return entity.isPermanentlyImmobilized(false) && \n+                ((entity.getMovementMode() == EntityMovementMode.WHEELED) ||\n+                (entity.getMovementMode() == EntityMovementMode.TRACKED)) && \n+                entity.getSecondaryPositions().isEmpty() &&\n+                !entity.getGame().getBoard().inSpace() &&\n+                !entityOnBridge(entity);\n+    }\n+    \n+    /**\n+     * Whether a given entity should display a crater instead of its standard wreckage marker.\n+     */\n+    public static boolean displayDevastation(Entity entity) {\n+        return (entity.getRemovalCondition() == IEntityRemovalConditions.REMOVE_DEVASTATED);\n+    }\n+    \n+    /**\n+     * Gets the prefix used to retrieve image files for motive-damaged entities\n+     */\n+    public static String getMotivePrefix(Entity entity) {\n+        if(!displayMotiveDamage(entity)) {\n+            return null;\n+        }\n+        \n+        switch(entity.getMovementMode()) {\n+        case WHEELED:\n+            return \"wheels\";\n+        case TRACKED:\n+            return \"treads\";\n+        default:\n+            return null;\n+        }\n+    }\n+    \n+    /**\n+     * Gets the weight class suffix for destruction decals for the given entity\n+     */\n+    public static String getWeightSuffix(Entity entity) {\n+        switch(entity.getWeightClass()) {\n+        case EntityWeightClass.WEIGHT_ULTRA_LIGHT:\n+            return TilesetManager.FILENAME_SUFFIX_WRECKS_ULTRALIGHT;\n+        case EntityWeightClass.WEIGHT_LIGHT:\n+            // this is a \"hack\" as some units < 20 tons are classified as 'light'\n+            // additionally, gun emplacements are \"light\" but should really have a little more debris.\n+            if ((entity.getWeight() > 0) && (entity.getWeight() < 20)) {\n+               return TilesetManager.FILENAME_SUFFIX_WRECKS_ULTRALIGHT; \n+            } else {\n+                return TilesetManager.FILENAME_SUFFIX_WRECKS_ASSAULTPLUS;\n+            }\n+        default:\n+            return TilesetManager.FILENAME_SUFFIX_WRECKS_ASSAULTPLUS;\n+        }\n+    }\n+    \n+    /**\n+     * Utility function that determines if the entity is on a bridge\n+     */\n+    public static boolean entityOnBridge(Entity entity) {   \n+        IHex hex = entity.getGame().getBoard().getHex(entity.getPosition());", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTQ2Nw==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475109467", "bodyText": "Yeah, in that case, the hex comes back as null and the null check below catches it.", "author": "NickAragua", "createdAt": "2020-08-22T16:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjUxMg==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106512", "bodyText": "Do these need to be public?", "author": "sixlettervariables", "createdAt": "2020-08-22T16:25:46Z", "path": "megamek/src/megamek/common/GunEmplacement.java", "diffHunk": "@@ -51,6 +51,9 @@\n             .setTechRating(RATING_A).setAvailability(RATING_A, RATING_A, RATING_A, RATING_A)\n             .setStaticTechLevel(SimpleTechLevel.INTRO);\n     \n+    public int initialBuildingCF;", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTU0MQ==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475109541", "bodyText": "Nope.", "author": "NickAragua", "createdAt": "2020-08-22T16:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjU2MA==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475106560", "bodyText": "The logic in a previous file used 1.0 as if percent was a fraction. This seems to insinuate we're using percents.", "author": "sixlettervariables", "createdAt": "2020-08-22T16:26:30Z", "path": "megamek/src/megamek/common/GunEmplacement.java", "diffHunk": "@@ -585,4 +588,42 @@ public int getArmorType(int loc) {\n     public boolean hasStealth() {\n         return false;\n     }\n+    \n+    /**\n+     * Sets the deployed flag. \n+     * Has the side effect of initializing building CF if deployed\n+     */\n+    @Override\n+    public void setDeployed(boolean deployed) {\n+        super.setDeployed(deployed);\n+        \n+        if(deployed) {\n+            Building occupiedStructure = getGame().getBoard().getBuildingAt(getPosition());\n+            \n+            initialBuildingCF = occupiedStructure.getCurrentCF(getPosition());\n+            initialBuildingArmor = occupiedStructure.getArmor(getPosition());\n+        } else {\n+            initialBuildingCF = initialBuildingArmor = 0;\n+        }\n+    }\n+    \n+    /**\n+     * How much more damage, percentage-wise, the gun emplacement's building can take\n+     */\n+    @Override\n+    public double getArmorRemainingPercent() {", "originalCommit": "0082aca784f7965b37bc3a140ea0e62ed9a9b083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwOTY5Nw==", "url": "https://github.com/MegaMek/megamek/pull/2103#discussion_r475109697", "bodyText": "Adjusted to be consistent with the other entity getArmorRemainingPercent() calculation.", "author": "NickAragua", "createdAt": "2020-08-22T17:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwNjU2MA=="}], "type": "inlineReview"}, {"oid": "83c1592bf6b0984f431725a49b44e3fb7c07a78c", "url": "https://github.com/MegaMek/megamek/commit/83c1592bf6b0984f431725a49b44e3fb7c07a78c", "message": "Apply suggestions from code review\n\nCo-authored-by: Christopher Watford <christopher.watford@gmail.com>", "committedDate": "2020-08-22T16:53:37Z", "type": "commit"}, {"oid": "9487f286deacd815099c37b6a9179d54c17b86fc", "url": "https://github.com/MegaMek/megamek/commit/9487f286deacd815099c37b6a9179d54c17b86fc", "message": "apply code review suggestions", "committedDate": "2020-08-22T17:13:41Z", "type": "commit"}]}