{"pr_number": 2956, "pr_title": "[DOC] Cruise Control: rebalance procedures and overview of goals and proposals", "pr_createdAt": "2020-05-05T10:45:55Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956", "timeline": [{"oid": "eb88535d1d96ea342f318bfcb9b244966132ddcf", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/eb88535d1d96ea342f318bfcb9b244966132ddcf", "message": "Update documentation/modules/cruise-control/proc-fixing-problems-with-kafkarebalance.adoc\n\nCo-authored-by: Tom Bentley <tombentley@users.noreply.github.com>\nSigned-off-by: Paolo Patierno <ppatierno@live.com>", "committedDate": "2020-05-20T13:34:06Z", "type": "commit"}, {"oid": "a3395ac2256a5a7c6b9be54c61de77a2b1ada130", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a3395ac2256a5a7c6b9be54c61de77a2b1ada130", "message": "Deleted the two empty procedures\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-04-30T13:35:54Z", "type": "commit"}, {"oid": "14e83eb50f65428196cb3196e770b44bf1ac9ed7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/14e83eb50f65428196cb3196e770b44bf1ac9ed7", "message": "Added goals concept and 2 procedures\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-04-30T14:07:53Z", "type": "commit"}, {"oid": "ff558c9b1035d1bfe2bf66a36f71e089ff2a8e5d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ff558c9b1035d1bfe2bf66a36f71e089ff2a8e5d", "message": "Goals overview content\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-01T12:58:19Z", "type": "commit"}, {"oid": "11e2d1d22e929b1e603358c8455d13c70982709a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/11e2d1d22e929b1e603358c8455d13c70982709a", "message": "More content\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-01T16:56:13Z", "type": "commit"}, {"oid": "d0a63f1a27e007ac57b12b2114900e91581fbb60", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d0a63f1a27e007ac57b12b2114900e91581fbb60", "message": "Further edits\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-04T10:15:00Z", "type": "commit"}, {"oid": "6b94a02f0e4d7c4d467cfc3c13321a4f6b79fd8b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6b94a02f0e4d7c4d467cfc3c13321a4f6b79fd8b", "message": "Content on rebalance proposals\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-04T14:32:12Z", "type": "commit"}, {"oid": "3e3bd839e4914296d112c0ca76a239f706b1b9d6", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3e3bd839e4914296d112c0ca76a239f706b1b9d6", "message": "Further edits\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-04T17:03:21Z", "type": "commit"}, {"oid": "5053b8124da124a19a976f79126a8ce070bcb49c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5053b8124da124a19a976f79126a8ce070bcb49c", "message": "Changes to existing CC docs\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-05T10:06:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MzA3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420563078", "bodyText": "What does it mean \"...supports the same goals as the Kafka Cruise Control\"? Strimzi is using Kafka Cruise Control! Thinking on this, if the CC community names them \"optimization goals\" why we should change to \"rebalance goals\"? Isn't it better having consistency?", "author": "ppatierno", "createdAt": "2020-05-06T06:07:11Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0Mzg5OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420643898", "bodyText": "I was under the impression that Strimzi will not support all of the CC optimization goals. Is that not the case?\nRe. \"rebalance goals\" vs \"optimization goals\", the integration with Cruise Control is for cluster rebalancing, not the other CC features such as Anomaly Detection, Topic Replication Factor, etc. Therefore, we felt that \"rebalance goals\" was a better name.\nBut I'm happy to rename to \"optimization goals\" -  @tomncooper, do you have any strong opinions? I'm happy to change. Consistency is the most important thing!", "author": "laidan6000", "createdAt": "2020-05-06T09:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1MDQzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420650431", "bodyText": "Yes, optimization goals is a better name, not least because eventually we may well support most of the CC features.", "author": "tomncooper", "createdAt": "2020-05-06T09:15:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4MDYzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421380630", "bodyText": "Good point. Time to Find and Replace... ;)\n\nChanged rebalance goals to optimization goals throughout.\nRephrased line 17 as highlighted by Paolo.", "author": "laidan6000", "createdAt": "2020-05-07T09:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MzA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MzU4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420563584", "bodyText": "I would swap the order between this line and the NOTE above.", "author": "ppatierno", "createdAt": "2020-05-06T06:08:57Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDAxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420564013", "bodyText": "because we are talking about soft goals, can we swap the order in this sentence, something like ...\" A rebalance proposal that violates one or more soft goals but satisfies all hard goals is valid\"", "author": "ppatierno", "createdAt": "2020-05-06T06:10:23Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0ODEzNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420648137", "bodyText": "Nice suggestion, thanks.", "author": "laidan6000", "createdAt": "2020-05-06T09:10:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDM5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420564399", "bodyText": "even if in a rebalance proposal request you can set a flag like \"skip hard goals check\" and in this case, should we mention it here? wdyt @tomncooper @kyguy ?", "author": "ppatierno", "createdAt": "2020-05-06T06:11:39Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1Mjk3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420652972", "bodyText": "Yes and link to the custom goals documentation?", "author": "tomncooper", "createdAt": "2020-05-06T09:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzODA5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420838094", "bodyText": "Even though we don't support custom goals?", "author": "kyguy", "createdAt": "2020-05-06T14:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg0MzQzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420843431", "bodyText": "Ah you mean the goal shipped with CC, not write your own goals [1]\n[1] https://github.com/linkedin/cruise-control/wiki/Write-your-own-goals", "author": "kyguy", "createdAt": "2020-05-06T14:37:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNzY1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421407657", "bodyText": "Rephrased as follows:\n\"Hard goals must be satisfied in rebalance proposals unless the skip_hard_goal_check option is specified.\"\n@tomncooper - I can't find any suitable information in the Cruise Control wiki.", "author": "laidan6000", "createdAt": "2020-05-07T10:38:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDU0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420564546", "bodyText": "\"are defined in the cruise control deployment configuration\"", "author": "ppatierno", "createdAt": "2020-05-06T06:12:12Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDk0OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420564949", "bodyText": "now the resource is KafkaRebalance. Didn't we decide to not use the word \"custom\" here because it conflicts with the custom goal classes that a developer can write by himself?", "author": "ppatierno", "createdAt": "2020-05-06T06:13:35Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjczOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420666738", "bodyText": "Will update to KafkaRebalance throughout.\nI thought we decided using \"custom goals\" was OK! IMHO, we need to use a qualifier to help readers understand how they differ from default goals. Suggestions:\n\nPer operation goals\nPer rebalance goals\nAd hoc goals\nOperation-specific goals\nRebalance-specific goals\nUser goals", "author": "laidan6000", "createdAt": "2020-05-06T09:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2ODYyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420668627", "bodyText": "I am for \"user-provided goals\" (where provided means that they are provided through a KafkaRebalance resource)", "author": "ppatierno", "createdAt": "2020-05-06T09:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NTc4OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421385788", "bodyText": "I might be getting a bit confused. If there are default, user-provided and custom goals, we need to make sure that the reader understands what each mean up front.", "author": "PaulRMellor", "createdAt": "2020-05-07T09:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDk0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQyMjIwMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421422202", "bodyText": "Happy to use \"user-provided goals\", which I think makes sense in context.\n@PaulRMellor - I'll have another think about how to introduce the information. There are two types of goals -- default and user-provided -- that can be configured to include hard and soft goals.", "author": "laidan6000", "createdAt": "2020-05-07T11:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NDk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTA1Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565053", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:13:54Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. \n+If no custom rebalance goals are set, the default rebalance goals are used.\n+\n+Use custom rebalance goals to generate a rebalance proposal that addresses a particular optimization scenario. \n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering other goals, such as disk or CPU usage. \n+So, you create a `KafkaClusterRebalance` resource containing a custom rebalance goal for leader replica distribution only.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTI4MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565280", "bodyText": "Again you can set a skip hard goals check flag in the KafkaRebalace custom resource.", "author": "ppatierno", "createdAt": "2020-05-06T06:14:36Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. \n+If no custom rebalance goals are set, the default rebalance goals are used.\n+\n+Use custom rebalance goals to generate a rebalance proposal that addresses a particular optimization scenario. \n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering other goals, such as disk or CPU usage. \n+So, you create a `KafkaClusterRebalance` resource containing a custom rebalance goal for leader replica distribution only.\n+\n+Using custom rebalance goals often returns a rebalance proposal faster than the default rebalance goals. \n+They must always be a subset of the default rebalance goals.\n+\n+For more information on setting custom rebalance goals, see xref:proc-generating-rebalance-proposals-{context}[].\n+\n+[discrete]\n+== Rebalance proposals\n+\n+A _rebalance proposal_ is a summary of proposed changes from Cruise Control that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly across the brokers. \n+Each rebalance proposal is based on the set of rebalance goals (either default goals or custom goals) that were used to generate it.\n+\n+Rebalance proposals always satisfy all the supplied hard goals, though not necessarily all the supplied soft goals.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTQ4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565482", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:15:15Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTUzOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565538", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:15:29Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTU4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565582", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:15:38Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:\n+\n+.. To use the default rebalance goals defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTY2Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565663", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:15:55Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:\n+\n+.. To use the default rebalance goals defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+.. To use one or more custom rebalance goals instead of the default goals, edit the `spec.goals` property.\n+In the following example, rack awareness and replica capacity are set as custom goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTcyNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565725", "bodyText": "The FQDN is not needed, just the classes names.", "author": "ppatierno", "createdAt": "2020-05-06T06:16:08Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:\n+\n+.. To use the default rebalance goals defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+.. To use one or more custom rebalance goals instead of the default goals, edit the `spec.goals` property.\n+In the following example, rack awareness and replica capacity are set as custom goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NTgzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420565830", "bodyText": "kafkarebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:16:24Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:\n+\n+.. To use the default rebalance goals defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+.. To use one or more custom rebalance goals instead of the default goals, edit the `spec.goals` property.\n+In the following example, rack awareness and replica capacity are set as custom goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the rebalance proposal from the Cruise Control server.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjAzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566035", "bodyText": "no, there is no action to take by the user in a few minutes. The rebalance operator is polling the cruise control API to check when the proposal is ready.", "author": "ppatierno", "createdAt": "2020-05-06T06:17:04Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:\n+\n+.. To use the default rebalance goals defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+.. To use one or more custom rebalance goals instead of the default goals, edit the `spec.goals` property.\n+In the following example, rack awareness and replica capacity are set as custom goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the rebalance proposal from the Cruise Control server.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance proposal is not yet ready; try again after a few minutes.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjIwNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566204", "bodyText": "we should be clear where this summary here, providing a full example of the status in the ``KafkaRebalance` resource.", "author": "ppatierno", "createdAt": "2020-05-06T06:17:36Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+.Procedure\n+\n+. Create a `KafkaClusterRebalance` resource:\n+\n+.. To use the default rebalance goals defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+.. To use one or more custom rebalance goals instead of the default goals, edit the `spec.goals` property.\n+In the following example, rack awareness and replica capacity are set as custom goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaClusterRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+      com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the rebalance proposal from the Cruise Control server.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance proposal is not yet ready; try again after a few minutes.\n+\n+** `ProposalReady`: The rebalance proposal is ready for you to review and implement, if desired.\n+The status is followed by the JSON rebalance proposal.\n+\n+. Review the rebalance proposal. \n+For example:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+\"summary\": {\n+  \"numIntraBrokerReplicaMovements\":0,\n+  \"excludedBrokersForLeadership\":[],\n+  \"numReplicaMovements\":31,\n+  \"onDemandBalancednessScoreAfter\":84.08179174145127,\n+  \"onDemandBalancednessScoreBefore\":79.74705957325753,\n+  \"intraBrokerDataToMoveMB\":0,\n+  \"recentWindows\":1,\n+  \"dataToMoveMB\":0,\n+  \"monitoredPartitionsPercentage\":100.0,\n+  \"excludedTopics\":[],\n+  \"numLeaderMovements\":12,\n+  \"excludedBrokersForReplicaMove\":[]\n+}", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2MzQ1Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420663456", "bodyText": "Yeah, this should be replaced with an actual copy of a rebalance status", "author": "tomncooper", "createdAt": "2020-05-06T09:38:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4ODEyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420688122", "bodyText": "Yes, good point. I'll need someone to check I've used the right formatting for the status.\nTo improve usability, I suggest renaming summary to rebalanceproposalsummary in the status response.", "author": "laidan6000", "createdAt": "2020-05-06T10:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzNjI4Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421536286", "bodyText": "TO DO: Review the formatting of the rebalance status.", "author": "laidan6000", "createdAt": "2020-05-07T14:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjIwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjI1Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566256", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:17:45Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjU4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566584", "bodyText": "no. when the proposal is in ProposalReady state, the user has to apply strimzi.io/rebalance=approve annotation to trigger the actual rebalancing.", "author": "ppatierno", "createdAt": "2020-05-06T06:18:42Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjY1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566658", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:18:53Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2Njg4OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566888", "bodyText": "we should be clear why the user should refresh so if after having the proposal ready, he doesn't execute it for long time and it becomes stale.", "author": "ppatierno", "createdAt": "2020-05-06T06:19:35Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NjkxNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566916", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:19:39Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2Njk3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420566973", "bodyText": "kafkarebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:19:49Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzAwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567008", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:19:56Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzA1OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567059", "bodyText": "kafkarebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:20:04Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzA5Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567092", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:20:11Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the rebalance proposal that you want to implement.\n++\n+Annotate the `KafkaClusterRebalance` resource in Kubernetes:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzEzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567135", "bodyText": "kafkarebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:20:19Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the rebalance proposal that you want to implement.\n++\n+Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=approved", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzIzNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567234", "bodyText": "no. the rebalancing process starts immediately when the \"approve\" annotation is applied.", "author": "ppatierno", "createdAt": "2020-05-06T06:20:39Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the rebalance proposal that you want to implement.\n++\n+Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=approved\n+----\n+\n+. Wait for the next reconciliation to occur (every two minutes by default).", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzMwOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567309", "bodyText": "no. see above.", "author": "ppatierno", "createdAt": "2020-05-06T06:20:54Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the rebalance proposal that you want to implement.\n++\n+Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=approved\n+----\n+\n+. Wait for the next reconciliation to occur (every two minutes by default).\n++\n+At the next reconciliation, the Cluster Operator detects the annotated resource and instructs Cruise Control to rebalance the Kafka cluster.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzMyMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567323", "bodyText": "KafkaRebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:20:57Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the rebalance proposal that you want to implement.\n++\n+Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=approved\n+----\n+\n+. Wait for the next reconciliation to occur (every two minutes by default).\n++\n+At the next reconciliation, the Cluster Operator detects the annotated resource and instructs Cruise Control to rebalance the Kafka cluster.\n+\n+. Check the status of the `KafkaClusterRebalance` resource:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2NzM2OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420567368", "bodyText": "kafkarebalance", "author": "ppatierno", "createdAt": "2020-05-06T06:21:06Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. \n+Review the rebalance proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-rebalance-proposals-{context}[generated a rebalance proposal].\n+\n+* The rebalance proposal is ready to implement (the `KafkaClusterRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+. (Optional) Refresh the rebalance proposal that you want to implement:\n+\n+.. Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the rebalance proposal that you want to implement.\n++\n+Annotate the `KafkaClusterRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkaclusterrebalance _cluster-name_-kafka strimzi.io/rebalance=approved\n+----\n+\n+. Wait for the next reconciliation to occur (every two minutes by default).\n++\n+At the next reconciliation, the Cluster Operator detects the annotated resource and instructs Cruise Control to rebalance the Kafka cluster.\n+\n+. Check the status of the `KafkaClusterRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkaclusterrebalance -o jsonpath='{.status}'", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0ODI2OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420648268", "bodyText": "So this is a nit, but the goals are not strictly \"rebalance\" goals, they are \"optimization\" goals.", "author": "tomncooper", "createdAt": "2020-05-06T09:11:12Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2MTk4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421561984", "bodyText": "Changed to \"optimization goals\" throughout.", "author": "laidan6000", "createdAt": "2020-05-07T14:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0ODI2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0ODk2NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420648965", "bodyText": "Optimization Goals would be a better (more accurate) name", "author": "tomncooper", "createdAt": "2020-05-06T09:12:26Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0OTM4Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420649386", "bodyText": "We are not redistributing resources (we are not moving CPUs and RAM) we are redistributing load.", "author": "tomncooper", "createdAt": "2020-05-06T09:13:12Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2MzQ0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421563446", "bodyText": "Good point. I've updated to \"workload redistribution\".", "author": "laidan6000", "createdAt": "2020-05-07T14:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0OTM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NDQ5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420654494", "bodyText": "Can we call them optimization proposals rather than rebalance proposals.", "author": "tomncooper", "createdAt": "2020-05-06T09:22:27Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NTU5NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420655595", "bodyText": "Well, you can have as many soft goals as you like but you must include all the configured hard.goals or include skip_hard_goal_check=true. Else the rebalance request will fail.", "author": "tomncooper", "createdAt": "2020-05-06T09:24:25Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA1OTkxNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422059915", "bodyText": "I've attempted to re-word this. This is meant to be a brief summary, with the details coming later in the table.\nPlease re-read this section after I push up the changes.", "author": "laidan6000", "createdAt": "2020-05-08T10:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NTU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NjE2MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420656161", "bodyText": "Unless you set custom rebalance goals, in the KafakRebalance custom resource,...", "author": "tomncooper", "createdAt": "2020-05-06T09:25:22Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NzI3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420657274", "bodyText": "The cached proposal is generated every 15 min by default using the default.goals specified in Kafka spec. If no default goals are specified in the Kafka spec then the default.goals=goals.", "author": "tomncooper", "createdAt": "2020-05-06T09:27:18Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA2NDk4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422064982", "bodyText": "Added a note:\n\nIf no default optimization goals are specified, the cached proposal is generated using the master goals (specified in Kafka.spec.cruiseControl.config.goals).\n\nYou've raised a good point here. So far, I haven't even mentioned the goals list, which I think of as the \"master goals\".", "author": "laidan6000", "createdAt": "2020-05-08T10:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NzI3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1ODg0Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420658842", "bodyText": "We do need to clearly document that if they specify a list of goals in the KafkaRebalance resource that does not include all the configured hard.goals they will get an error. In that case they need to set skiphardgoalscheck: true in the resource.", "author": "tomncooper", "createdAt": "2020-05-06T09:30:02Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. \n+If no custom rebalance goals are set, the default rebalance goals are used.\n+\n+Use custom rebalance goals to generate a rebalance proposal that addresses a particular optimization scenario. \n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering other goals, such as disk or CPU usage. \n+So, you create a `KafkaClusterRebalance` resource containing a custom rebalance goal for leader replica distribution only.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA2NTM3OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422065379", "bodyText": "In which section of the resource? Please can you give an example configuration.", "author": "laidan6000", "createdAt": "2020-05-08T10:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1ODg0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1OTU4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420659587", "bodyText": "I don't know where you got that idea but it is not true.", "author": "tomncooper", "createdAt": "2020-05-06T09:31:21Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. \n+If no custom rebalance goals are set, the default rebalance goals are used.\n+\n+Use custom rebalance goals to generate a rebalance proposal that addresses a particular optimization scenario. \n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering other goals, such as disk or CPU usage. \n+So, you create a `KafkaClusterRebalance` resource containing a custom rebalance goal for leader replica distribution only.\n+\n+Using custom rebalance goals often returns a rebalance proposal faster than the default rebalance goals. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1OTg0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420659847", "bodyText": "This is kinda true, they must be a subset of the goals list.", "author": "tomncooper", "createdAt": "2020-05-06T09:31:49Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. \n+If no custom rebalance goals are set, the default rebalance goals are used.\n+\n+Use custom rebalance goals to generate a rebalance proposal that addresses a particular optimization scenario. \n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering other goals, such as disk or CPU usage. \n+So, you create a `KafkaClusterRebalance` resource containing a custom rebalance goal for leader replica distribution only.\n+\n+Using custom rebalance goals often returns a rebalance proposal faster than the default rebalance goals. \n+They must always be a subset of the default rebalance goals.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA2NTk1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422065950", "bodyText": "True. Again, this highlights a lack of any information on the goals list (I'm calling these the master goals).", "author": "laidan6000", "createdAt": "2020-05-08T10:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1OTg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2MDg3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420660872", "bodyText": "I will find some time to update the explainer docs with definitions of what the terms mean.", "author": "tomncooper", "createdAt": "2020-05-06T09:33:44Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. \n+Both types of rebalance goal can be configured to include hard goals as well as soft goals.  \n+\n+*Default rebalance goals and cached proposal*\n+\n+The default rebalance goals are set in the `Kafka` custom resource. \n+You specify a list of goals in `spec.cruiseControl.config.default.goals`.\n+\n+Unless you set custom rebalance goals, the default rebalance goals are used by Cruise Control to return a _cached rebalance proposal_. \n+The cached proposal reflects the current state of the Kafka cluster and is updated every 15 minutes by default. \n+\n+To review the list of default goals, see link:https://github.com/linkedin/cruise-control/wiki/Configurations#analyzer-configurations[Analyzer Configurations^] in the Cruise Control Wiki.\n+\n+For more information on setting the default rebalance goals, see xref:ref-cruise-control-configuration-{context}[]. \n+\n+*Custom rebalance goals* \n+\n+Custom rebalance goals are set in the `spec.goals` section of a `KafkaClusterRebalance` resource and override the default rebalance goals. \n+If no custom rebalance goals are set, the default rebalance goals are used.\n+\n+Use custom rebalance goals to generate a rebalance proposal that addresses a particular optimization scenario. \n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering other goals, such as disk or CPU usage. \n+So, you create a `KafkaClusterRebalance` resource containing a custom rebalance goal for leader replica distribution only.\n+\n+Using custom rebalance goals often returns a rebalance proposal faster than the default rebalance goals. \n+They must always be a subset of the default rebalance goals.\n+\n+For more information on setting custom rebalance goals, see xref:proc-generating-rebalance-proposals-{context}[].\n+\n+[discrete]\n+== Rebalance proposals\n+\n+A _rebalance proposal_ is a summary of proposed changes from Cruise Control that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly across the brokers. \n+Each rebalance proposal is based on the set of rebalance goals (either default goals or custom goals) that were used to generate it.\n+\n+Rebalance proposals always satisfy all the supplied hard goals, though not necessarily all the supplied soft goals.\n+\n+A rebalance proposal provides the following information in JSON:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the rebalance goals. \n+\n+All rebalance proposals are dry runs. You cannot implement a cluster rebalance without first generating a rebalance proposal. \n+There is no limit to the number of rebalance proposals that can be generated.\n+\n+The following table lists the properties contained in a rebalance proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2MjEwMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420662103", "bodyText": "So it is not just partitions to brokers, it also proposes changes to partition replica leaders.", "author": "tomncooper", "createdAt": "2020-05-06T09:35:49Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA2ODc5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422068794", "bodyText": "Reformatted as a bulleted list.", "author": "laidan6000", "createdAt": "2020-05-08T10:29:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2MjEwMw=="}], "type": "inlineReview"}, {"oid": "20d4df5aea4f3ce383a45f1c8fb2e8274e5d6b6f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/20d4df5aea4f3ce383a45f1c8fb2e8274e5d6b6f", "message": "Review comments PP round one\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-06T13:23:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTA1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420831058", "bodyText": "There is still some outstanding work needed to support the CPU capacity,  CPU utilization distribution,  Intra-broker disk capacity, and Intra-broker disk usage distribution goals, so those can be removed from this list", "author": "kyguy", "createdAt": "2020-05-06T14:22:04Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4NzkzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421587930", "bodyText": "OK. I've commented out those goals from the list.", "author": "laidan6000", "createdAt": "2020-05-07T15:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTA1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNTgxMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422025812", "bodyText": "At the start, we state that CC is used for:\n\"Monitoring the CPU, disk, and network load of Kafka brokers.\"\nCan that stay? @kyguy", "author": "laidan6000", "createdAt": "2020-05-08T08:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTA1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNzUyMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r422127520", "bodyText": "I think we can leave it as it is as a summary for CC. CC will still monitor CPU when running on k8s, it's just the values will not be accurate in all situations (at least until we get the metric reporter patch in)", "author": "kyguy", "createdAt": "2020-05-08T12:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg0MTI2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420841264", "bodyText": "Should we be mentioning custom goals when we don't support the addition of them?", "author": "kyguy", "createdAt": "2020-05-06T14:35:09Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. \n+However, they are included in rebalance calculations. \n+A rebalance proposal that satisfies _all_ hard goals but violates one or more soft goals is valid.\n+\n+Rebalance goals are treated as soft goals, unless designated as hard goals\n+\n+\u00a6Attempt to distribute a topic's replicas evenly across the cluster (topic replica distribution goal). \n+Ignore this goal if doing so will enable all hard goals to be met.\n+\n+\u00a6Hard goals\n+\n+\u00a6Hard goals _must_ be satisfied in rebalance proposals. \n+In other words, a rebalance proposal that does _not_ satisfy all the designated hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Designating hard goals is optional.\n+\u00a6All brokers in the cluster must have fewer than 3 replicas (replica capacity goal).\n+\n+|===\n+\n+[discrete]\n+=== Default and custom rebalance goals\n+\n+When interacting with Cruise Control to generate rebalance proposals, you can use the _default rebalance goals_, which are defined on deployment, or set ad hoc _custom rebalance goals_. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2Mjc3OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r420862779", "bodyText": "Ah I understand, you mean the user-specified goals, not the write-your-own-goals", "author": "kyguy", "createdAt": "2020-05-06T15:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg0MTI2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NDY5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421364699", "bodyText": "alongside? In the same Kubernetes cluster?", "author": "PaulRMellor", "createdAt": "2020-05-07T09:24:03Z", "path": "documentation/modules/cruise-control/con-cruise-control-overview.adoc", "diffHunk": "@@ -11,12 +11,19 @@\n \n Brokers in a Kafka cluster can become unevenly loaded for many reasons.\n For example, partitions that handle large amounts of message traffic can be unevenly distributed across the available brokers.\n-Monitoring broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n-Cruise Control is a tool for automating the monitoring and rebalancing of partitions across a Kafka cluster.\n+Monitoring this broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n+\n+Cruise Control helps to automate the monitoring and rebalancing of partitions across a Kafka cluster.\n When deployed alongside a Kafka cluster, Cruise Control can perform the following cluster balancing tasks:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4NTAzOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421585038", "bodyText": "Yes. Changed the wording to: \"When deployed to a Kubernetes cluster that contains a Kafka cluster\".\nFeels a bit clumsy -- further suggestions are welcome!", "author": "laidan6000", "createdAt": "2020-05-07T15:15:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NDY5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NjUyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421366528", "bodyText": "can perform? Or performs? Is this by default, automatic or depending on how its configured?", "author": "PaulRMellor", "createdAt": "2020-05-07T09:26:56Z", "path": "documentation/modules/cruise-control/con-cruise-control-overview.adoc", "diffHunk": "@@ -11,12 +11,19 @@\n \n Brokers in a Kafka cluster can become unevenly loaded for many reasons.\n For example, partitions that handle large amounts of message traffic can be unevenly distributed across the available brokers.\n-Monitoring broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n-Cruise Control is a tool for automating the monitoring and rebalancing of partitions across a Kafka cluster.\n+Monitoring this broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n+\n+Cruise Control helps to automate the monitoring and rebalancing of partitions across a Kafka cluster.\n When deployed alongside a Kafka cluster, Cruise Control can perform the following cluster balancing tasks:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4MzI4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421583287", "bodyText": "Performs works better here. Thanks.\nThe monitoring part is automatic; the rest relies on user input.", "author": "laidan6000", "createdAt": "2020-05-07T15:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NjUyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2ODkwNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421368905", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Following are the supported goals, which you can reorder in priority, enable, or disable:\n          \n          \n            \n            Following are the supported goals, which you can reorder in terms of priority, and enable or disable:", "author": "PaulRMellor", "createdAt": "2020-05-07T09:30:50Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3MTQ3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421371474", "bodyText": "\"best effort\" -- I tend to only italics (best effort) to emphasize terms", "author": "PaulRMellor", "createdAt": "2020-05-07T09:34:52Z", "path": "documentation/modules/cruise-control/con-rebalance-goals-proposals.adoc", "diffHunk": "@@ -0,0 +1,180 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-rebalance-goals-proposals-{context}']\n+= Rebalance goals and proposals\n+\n+To rebalance a Kafka cluster, Cruise Control uses _rebalance goals_ to generate _rebalance proposals_. \n+\n+[discrete]\n+== Rebalance goals\n+\n+Rebalance goals specify targets for resource distribution and utilization across a Kafka cluster. \n+They are organized in a customizable hierarchy, from high priority goals to low priority goals. \n+You can designate certain rebalance goals as _hard goals_ that must be satisfied--for more information, see link:#soft-hard-goals[Soft goals and hard goals].\n+\n+With a few exceptions, cluster rebalancing in {ProductName} supports the same goals as the Kafka Cruise Control project (where the term \"optimization goals\" is used). \n+Following are the supported goals, which you can reorder in priority, enable, or disable:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity\n+.. Disk capacity\n+.. Network inbound capacity\n+.. Network outbound capacity\n+.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution\n+.. Disk utilization distribution\n+.. Network inbound utilization distribution\n+.. Network outbound utilization distribution\n+.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+. Intra-broker disk capacity\n+. Intra-broker disk usage distribution    \n+\n+NOTE: \"Write your own\" goals, Kafka assigner goals, and Anomaly Detector are not supported in {ProductName}.\n+\n+For detailed information on each rebalance goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki. \n+\n+[id=\"soft-hard-goals\"]\n+[discrete]\n+=== Soft goals and hard goals\n+\n+The following table explains the differences between soft and hard goals in cluster rebalance calculations:\n+\n+[cols=\"3*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+\u00a6Rebalance goal type\n+\u00a6Description\n+\u00a6Example\n+\n+\u00a6Soft goals\n+\n+\u00a6Also known as \"best effort\" goals, soft goals do _not_ need to be satisfied in rebalance proposals. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3OTg1NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421579855", "bodyText": "Changed to italics. Don't know why I used quotation marks!", "author": "laidan6000", "createdAt": "2020-05-07T15:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM3MTQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4ODc1NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421388755", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.\n          \n          \n            \n            This summarizes an optimal mapping of partitions to brokers for the Kafka cluster, based on the rebalance goals that were used, along with statistics on the cluster rebalance.", "author": "PaulRMellor", "createdAt": "2020-05-07T10:03:37Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,98 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-rebalance-proposals-{context}']\n+= Generating rebalance proposals \n+\n+When you create or update a `KafkaClusterRebalance` resource, Cruise Control generates a _rebalance proposal_ in JSON.\n+This summarizes an optimal mapping of partitions to brokers for the Kafka cluster based on the rebalance goals that were used along with statistics on the cluster rebalance.", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ecfa072eb7f1d6cc72dd3aea3bf06278e8d15a47", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ecfa072eb7f1d6cc72dd3aea3bf06278e8d15a47", "message": "rebalance goals to optimization goals\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-07T10:07:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM5NTYzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421395630", "bodyText": "Is dry run universally understood?", "author": "PaulRMellor", "createdAt": "2020-05-07T10:15:46Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,74 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-rebalance-proposal-{context}']\n+= Implementing a rebalance proposal\n+\n+If you are satisfied with a rebalance proposal, you can implement it by annotating the corresponding `KafkaClusterRebalance` resource. \n+\n+At the next reconciliation, the Cluster Operator will instruct Cruise Control to rebalance the Kafka cluster. \n+Cruise Control then reassigns partitions to brokers as summarized in the rebalance proposal.\n+\n+WARNING: This is not a dry run. ", "originalCommit": "5053b8124da124a19a976f79126a8ce070bcb49c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3ODA4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r421578087", "bodyText": "Yes, I think it's OK from a style perspective. I searched some other docs for reference.", "author": "laidan6000", "createdAt": "2020-05-07T15:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM5NTYzMA=="}], "type": "inlineReview"}, {"oid": "8d2d711c633488c9f1f6727f1044959420de8a7c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8d2d711c633488c9f1f6727f1044959420de8a7c", "message": "Review edits PP, PM, KL\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-07T15:20:43Z", "type": "commit"}, {"oid": "ba2a1256c4ddc54c4a5b33c8a3f749df253ba834", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ba2a1256c4ddc54c4a5b33c8a3f749df253ba834", "message": "Review edits TC, round one\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-08T11:07:43Z", "type": "commit"}, {"oid": "3adceb814a1bce9faf40a4032dd9879a694d1149", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3adceb814a1bce9faf40a4032dd9879a694d1149", "message": "Further edits\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-11T16:18:52Z", "type": "commit"}, {"oid": "d2735071386662e99ddfe58fd316e212a126cc3a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d2735071386662e99ddfe58fd316e212a126cc3a", "message": "File renaming\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-12T14:05:46Z", "type": "commit"}, {"oid": "0f4f3309595697ac1f54ee29a0400f9f617f7250", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0f4f3309595697ac1f54ee29a0400f9f617f7250", "message": "Edits from eng docs sync\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-12T15:18:28Z", "type": "commit"}, {"oid": "449e197f4929fb091266022e98c58b1ded018e98", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/449e197f4929fb091266022e98c58b1ded018e98", "message": "Completed edits from TC\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-13T16:22:32Z", "type": "commit"}, {"oid": "70aa2d9d9fc22e530783df0072882645e464234a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/70aa2d9d9fc22e530783df0072882645e464234a", "message": "Edits for consistency\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-14T10:33:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MTk3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425051978", "bodyText": "This is contradicted in the \"Deploying Cruise Control\" procedure, which has a list of goals in the CC deployment configuration.\nconfig: (2)\n      default.goals: >\n         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n         # ...\n      goals: >\n         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n         # ...\n\nShould I change it to an empty value in that procedure?", "author": "laidan6000", "createdAt": "2020-05-14T11:01:44Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIzNjAzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425236036", "bodyText": "Yes it should be empty. Or better yet not included at all if they are happy with the defalt master goals list.", "author": "tomncooper", "createdAt": "2020-05-14T15:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MTk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIzNzc5NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425237795", "bodyText": "Not sure I would be as definitive as \"we recommend\". I would approach this like the master goals above. By default the default.goal list will = the goals list. If however you are only concerned with a certain set of optimization goals then set them here.", "author": "tomncooper", "createdAt": "2020-05-14T15:43:03Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI3MTQzMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427271433", "bodyText": "We do not recommend this. Can we take this line out but mention that they can be customised.", "author": "tomncooper", "createdAt": "2020-05-19T12:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIzNzc5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0NTkzOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425245938", "bodyText": "Dunno if it is worth mentioning that this can be altered by setting the proposal.expiration.ms setting in the Kafka CR CC config? More often is better for fast changing clusters but will put more load on CC server.", "author": "tomncooper", "createdAt": "2020-05-14T15:54:11Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.\n+You can include any or all of the master optimization goals in the default optimization goals.\n+\n+Default optimization goals are set in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.default.goals`\n+\n+The default optimization goals generate the _cached optimization proposal_ from the workload model (unless you set user-provided optimization goals in a `KafkaRebalance` custom resource). \n+This is updated to reflect the current state of the Kafka cluster every 15 minutes by default. ", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0MzMzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425843331", "bodyText": "Yes, I think so.\nI've moved all this info to the optimization proposals concept module, and included reference to the proposal.expiration.ms setting.", "author": "laidan6000", "createdAt": "2020-05-15T14:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0NTkzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0ODc5Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425248797", "bodyText": "So that option will not exclude the hard.goal, it will just mean that CC does not complain if you miss any of the hard goals out of the user supplied rebalance goals.\nThis should probably read something like: \"If, for some reason, you want to rebalance based on a list of goals that do not include all the configured hard.goals then add the skiphardgoalscheck: true....\"", "author": "tomncooper", "createdAt": "2020-05-14T15:58:05Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.\n+You can include any or all of the master optimization goals in the default optimization goals.\n+\n+Default optimization goals are set in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.default.goals`\n+\n+The default optimization goals generate the _cached optimization proposal_ from the workload model (unless you set user-provided optimization goals in a `KafkaRebalance` custom resource). \n+This is updated to reflect the current state of the Kafka cluster every 15 minutes by default. \n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured hard goals, or an error will occur\n+* Be a subset of the master optimization goals\n+\n+To exclude the configured hard goals from an optimization proposal, add the `skiphardgoalscheck: true` option to the `KafkaRebalance` custom resource.", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NjEzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425586135", "bodyText": "the field is skipHardGoalCheck", "author": "ppatierno", "createdAt": "2020-05-15T06:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0ODc5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1MDk3MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425250970", "bodyText": "Again, as with goals and default.goals you can just leave them out of the config altogether.", "author": "tomncooper", "createdAt": "2020-05-14T16:00:46Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.\n+You can include any or all of the master optimization goals in the default optimization goals.\n+\n+Default optimization goals are set in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.default.goals`\n+\n+The default optimization goals generate the _cached optimization proposal_ from the workload model (unless you set user-provided optimization goals in a `KafkaRebalance` custom resource). \n+This is updated to reflect the current state of the Kafka cluster every 15 minutes by default. \n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured hard goals, or an error will occur\n+* Be a subset of the master optimization goals\n+\n+To exclude the configured hard goals from an optimization proposal, add the `skiphardgoalscheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+All configured hard goals _must_ be satisfied in optimization proposals (unless `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource).\n+In other words, an optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Hard goals are controlled in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.hard.goals`\n+\n+* To inherit the six preset hard goals from Cruise Control, specify an empty value for the `hard.goals` configuration option.", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1Mzc3MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425253771", "bodyText": "This number indicates how many partitions will have their leader switched to another replica from the current one. This is a \"cheap\" operation (a config change in Zookeeper).", "author": "tomncooper", "createdAt": "2020-05-14T16:04:53Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description\n+\n+m\u00a6recentWindows\n+\u00a6Description\n+\n+m\u00a6dataToMoveMB\n+\u00a6Description\n+\n+m\u00a6monitoredPartitionsPercentage\n+\u00a6Description\n+\n+m\u00a6excludedTopics\n+\u00a6Description\n+\n+m\u00a6numLeaderMovements\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1NDc4MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425254780", "bodyText": "This is a list of topics that will be excluded for partition reassignments. Topic exclusion is not yet supported so this list will be empty.", "author": "tomncooper", "createdAt": "2020-05-14T16:06:15Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description\n+\n+m\u00a6recentWindows\n+\u00a6Description\n+\n+m\u00a6dataToMoveMB\n+\u00a6Description\n+\n+m\u00a6monitoredPartitionsPercentage\n+\u00a6Description\n+\n+m\u00a6excludedTopics\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1NzMxNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425257316", "bodyText": "Some CC rebalance options allow for brokers to be excluded from the optimization proposals. These options are not currently supported so this list will be empty.", "author": "tomncooper", "createdAt": "2020-05-14T16:09:59Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description\n+\n+m\u00a6recentWindows\n+\u00a6Description\n+\n+m\u00a6dataToMoveMB\n+\u00a6Description\n+\n+m\u00a6monitoredPartitionsPercentage\n+\u00a6Description\n+\n+m\u00a6excludedTopics\n+\u00a6Description\n+\n+m\u00a6numLeaderMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForReplicaMove\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1Nzk4Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425257983", "bodyText": "This indicates how many partition replicas in total will be transferred between the brokers in the Kafka Cluster.", "author": "tomncooper", "createdAt": "2020-05-14T16:10:55Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5MDE5Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425290193", "bodyText": "I think this is \"how many partition replicas in total will be transferred between the disks of an individual brokers, since it is \"intra\"  instead \"inter\", at least that is how the goals define the meaning, but I could be mistaken! I concede to you\nIf this is between disks then this isn't supported as I never added the auto configuration for JBOD!", "author": "kyguy", "createdAt": "2020-05-14T16:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1Nzk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5NTUwMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425295501", "bodyText": "Oh good point! Got my definitions mixed up, thanks for checking Kyle.", "author": "tomncooper", "createdAt": "2020-05-14T17:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1Nzk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1ODg2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425258864", "bodyText": "Some CC rebalance options allow brokers to be excluded from hosting partition leaders. These options are not currently supported so this list will be empty.", "author": "tomncooper", "createdAt": "2020-05-14T16:12:13Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1OTQ0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425259443", "bodyText": "This number indicates how many partition replicas will be moved, including possibly between disks within the same broker.", "author": "tomncooper", "createdAt": "2020-05-14T16:13:05Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5ODEyOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425298129", "bodyText": "Correction: This number indicates how many partition replicas will be moved between seperate brokers.", "author": "tomncooper", "createdAt": "2020-05-14T17:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1OTQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDI5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425260299", "bodyText": "This value is derived by summing the size of each partition replica to be moved to a separate broker (see numIntraBrokerReplicaMovements).", "author": "tomncooper", "createdAt": "2020-05-14T16:14:17Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5MDUwOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425290509", "bodyText": "Relates to our comments above", "author": "kyguy", "createdAt": "2020-05-14T16:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5OTg0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425299843", "bodyText": "Correction: This value is derived by summing the size of each partition replica to be moved between disks on the same broker (see numReplicaMovements).", "author": "tomncooper", "createdAt": "2020-05-14T17:11:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDI5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDk1MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425260951", "bodyText": "This value is derived by summing the size of each partition replica to be moved including, possibly, between disks on the same broker (see numReplicaMovements).", "author": "tomncooper", "createdAt": "2020-05-14T16:15:13Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description\n+\n+m\u00a6recentWindows\n+\u00a6Description\n+\n+m\u00a6dataToMoveMB\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5OTY4OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425299689", "bodyText": "Correction: This value is derived by summing the size of each partition replica to be moved to a separate broker (see numIntraBrokerReplicaMovements).", "author": "tomncooper", "createdAt": "2020-05-14T17:11:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MDk1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MjE2OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425262168", "bodyText": "The % of partitions across the whole monitored cluster that this proposal covers (this will be effected by the number of excludedTopics).", "author": "tomncooper", "createdAt": "2020-05-14T16:16:47Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description\n+\n+m\u00a6recentWindows\n+\u00a6Description\n+\n+m\u00a6dataToMoveMB\n+\u00a6Description\n+\n+m\u00a6monitoredPartitionsPercentage\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2Njg1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425266858", "bodyText": "The onDemandBalancednessScore is CC's measure of the overall \"balancedness\" of a Kafka Cluster. It is equal to 100 minus the sum of the Balancedness Score of each violated (soft) goal. The Balancedness Score of a goal is based on several factors including its prioirty (position in the default.goals or custom goals list).\nFor the after score this is based on the optimization proposal.", "author": "tomncooper", "createdAt": "2020-05-14T16:23:18Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3MTQyMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425271420", "bodyText": "The code for calculating the balancedness score of each goal is here: https://github.com/linkedin/cruise-control/blob/30f89251a54317fe723edcfb06450ffae65d97e4/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java#L517\nAFAIK it is not covered in the docs?", "author": "tomncooper", "createdAt": "2020-05-14T16:28:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2Njg1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNzQ3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r426527473", "bodyText": "No, it's not covered in the docs.", "author": "laidan6000", "createdAt": "2020-05-18T10:30:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2Njg1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2NzI5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425267291", "bodyText": "The onDemandBalancednessScore is CC's measure of the overall \"balancedness\" of a Kafka Cluster. It is equal to 100 minus the sum of the Balancedness Score of each violated (soft) goal. The Balancedness Score of a goal is based on several factors including its prioirty (position in the default.goals or custom goals list).\nFor the before score this is based on the current cluster configuration.", "author": "tomncooper", "createdAt": "2020-05-14T16:23:42Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3MjAwNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425272006", "bodyText": "The number of metrics windows that this proposal is based on.", "author": "tomncooper", "createdAt": "2020-05-14T16:28:58Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers, generated by the Analyzer component of Cruise Control\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+You can use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6Description\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Description\n+\n+m\u00a6numReplicaMovements\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreAfter\n+\u00a6Description\n+\n+m\u00a6onDemandBalancednessScoreBefore\n+\u00a6Description\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6Description\n+\n+m\u00a6recentWindows\n+\u00a6Description", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3MzQ5MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425273490", "bodyText": "The KafkaRebalance CR contains the optimization proposal", "author": "tomncooper", "createdAt": "2020-05-14T16:31:07Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,119 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `spec.goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      RackAwareGoal,\n+      ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n++\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance operator is polling the Cruise Control API to check if the optimization proposal is ready.\n+\n+** `ProposalReady`: The optimization proposal is ready for you to review and implement, if desired.\n+The status is followed by the JSON optimization proposal.", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425275967", "bodyText": "@laidan6000 It might be worth you running this proceedure yourself on minikube/minishift etc. Just to get a feel for it and to add an example output which has changed slightly from above. For example the condition type and status fields have swapped. Also the docs refer to the OpProp summary as \"JSON format\" when the above is yaml fromat. I am not sure if K8s (or some client) is converting the JSON we give it to YAML so you should double check.", "author": "tomncooper", "createdAt": "2020-05-14T16:34:59Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,119 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `spec.goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      RackAwareGoal,\n+      ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n++\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance operator is polling the Cruise Control API to check if the optimization proposal is ready.\n+\n+** `ProposalReady`: The optimization proposal is ready for you to review and implement, if desired.\n+The status is followed by the JSON optimization proposal.\n+\n+. Review the JSON optimization proposal in the `status.summary` property of the `KafkaRebalance` resource.\n++\n+Here is an example proposal:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:\n+  # ...\n+status:\n+  conditions:\n+  - lastTransitionTime: 2020-05-23T23:46:57+0000\n+    status: \"True\"\n+    type: Ready\n+  observedGeneration: 4\n+  summary: CHECK THE FORMATTING IS CORRECT\n+  - numIntraBrokerReplicaMovements:0,\n+  - excludedBrokersForLeadership:[],\n+  - numReplicaMovements:31,\n+  - onDemandBalancednessScoreAfter:84.08179174145127,\n+  - onDemandBalancednessScoreBefore:79.74705957325753,\n+  - intraBrokerDataToMoveMB:0,\n+  - recentWindows:1,\n+  - dataToMoveMB:0,\n+  - monitoredPartitionsPercentage:100.0,\n+  - excludedTopics:[],\n+  - numLeaderMovements:12,\n+  - excludedBrokersForReplicaMove:[]\n+# ...", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0MTE1Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r426541153", "bodyText": "OK", "author": "laidan6000", "createdAt": "2020-05-18T10:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMjIxNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427232216", "bodyText": "I have not been able to verify that the output is correct.", "author": "laidan6000", "createdAt": "2020-05-19T11:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMzU5Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427233597", "bodyText": "What do you mean? You couldn't get a rebalance working or that the output doesn't look like that?", "author": "tomncooper", "createdAt": "2020-05-19T11:37:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1NDgwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427254800", "bodyText": "I didn't have time to test this out.", "author": "laidan6000", "createdAt": "2020-05-19T12:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyNDg2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427324866", "bodyText": "So if you use the kubectl describe kafkarebalance <rebalance-name> you get a status that looks like this:\nStatus:\n  Conditions:\n    Last Transition Time:  2020-05-19T13:50:12.533Z\n    Status:                ProposalReady\n    Type:                  State\n  Observed Generation:     1\n  Optimization Result:\n    Data To Move MB:  0\n    Excluded Brokers For Leadership:\n    Excluded Brokers For Replica Move:\n    Excluded Topics:\n    Intra Broker Data To Move MB:         0\n    Monitored Partitions Percentage:      100\n    Num Intra Broker Replica Movements:   0\n    Num Leader Movements:                 0\n    Num Replica Movements:                26\n    On Demand Balancedness Score After:   81.8666802863978\n    On Demand Balancedness Score Before:  78.01176356230222\n    Recent Windows:                       1\n  Session Id:                             05539377-ca7b-45ef-b359-e13564f1458c", "author": "tomncooper", "createdAt": "2020-05-19T14:01:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMDY4OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427420689", "bodyText": "Thanks - I've added the status above.\nBoth the steps now use the describe command:\nkubectl describe kafkarebalance _rebalance-name_", "author": "laidan6000", "createdAt": "2020-05-19T16:05:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTk2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NjYwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425276600", "bodyText": "Should we add the command to do this in here?\nkubectl describe kafkarebalance.kafka.strimzi.io -n <namespace> <rebalance-cr-name>", "author": "tomncooper", "createdAt": "2020-05-14T16:36:00Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,119 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `spec.goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      RackAwareGoal,\n+      ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n++\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance operator is polling the Cruise Control API to check if the optimization proposal is ready.\n+\n+** `ProposalReady`: The optimization proposal is ready for you to review and implement, if desired.\n+The status is followed by the JSON optimization proposal.\n+\n+. Review the JSON optimization proposal in the `status.summary` property of the `KafkaRebalance` resource.", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1Njg2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r426556862", "bodyText": "Sure. I didn't realise another command was needed.", "author": "laidan6000", "createdAt": "2020-05-18T11:28:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NjYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3ODU0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425278546", "bodyText": "We should add a prominent NOTE: to this with some more explanation:\nNOTE: If the KafkaRebalance status has been in the ProposalReady state for some time, then that proposal may no longer be applicable to the current state of the Kafka Cluster. In this case you can refresh the optimization proposal to make sure it uses the latest cluster metrics.", "author": "tomncooper", "createdAt": "2020-05-14T16:39:06Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,73 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an optimization proposal with a status of `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers as summarized in the optimization proposal.\n+\n+WARNING: This is not a dry run. \n+Review the optimization proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, refresh the optimization proposal in case it has become out of date:", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NzAzOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r426557039", "bodyText": "Good idea.", "author": "laidan6000", "createdAt": "2020-05-18T11:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3ODU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3OTY3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425279673", "bodyText": "Well you can ask for a new optimization proposal which should contain little or no changes? There is no direct way to check though.", "author": "tomncooper", "createdAt": "2020-05-14T16:40:47Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,73 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an optimization proposal with a status of `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers as summarized in the optimization proposal.\n+\n+WARNING: This is not a dry run. \n+Review the optimization proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, refresh the optimization proposal in case it has become out of date:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the optimization proposal that you want to implement.\n++\n+Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=approved\n+----\n+\n+. The Cluster Operator detects the annotated resource and instructs Cruise Control to rebalance the Kafka cluster.\n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n+\n+. Cruise Control returns one of three statuses:\n+\n+** Rebalancing: The cluster rebalance operation is in progress. \n+\n+** Ready: The cluster rebalancing operation completed successfully.\n+\n+** NotReady: An error occurred. \n+\n+//Is there a way to verify the rebalance?", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4ODc0Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425588742", "bodyText": "I think we should also explain how to \"fix\" a KafkaRebalance when an error occurs and how to move it from NotReady to ask for a new proposal.", "author": "ppatierno", "createdAt": "2020-05-15T06:18:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3OTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NTM0MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r426755340", "bodyText": "OK. I'd prefer to document the \"fix\" procedure in a separate PR after this one.", "author": "laidan6000", "createdAt": "2020-05-18T16:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3OTY3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MDI1Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425280252", "bodyText": "I may have missed it, but where is the procedure for stopping an ongoing rebalance?", "author": "tomncooper", "createdAt": "2020-05-14T16:41:39Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,73 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an optimization proposal with a status of `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers as summarized in the optimization proposal.\n+\n+WARNING: This is not a dry run. \n+Review the optimization proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, refresh the optimization proposal in case it has become out of date:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the optimization proposal that you want to implement.\n++\n+Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=approved\n+----\n+\n+. The Cluster Operator detects the annotated resource and instructs Cruise Control to rebalance the Kafka cluster.\n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n+\n+. Cruise Control returns one of three statuses:\n+\n+** Rebalancing: The cluster rebalance operation is in progress. ", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1MDUzOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425650538", "bodyText": "I decided to leave that out because it seemed like an edge case. Should I add one?", "author": "laidan6000", "createdAt": "2020-05-15T08:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MDI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY3MDIxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425670219", "bodyText": "Yes definitely! Rebalances can go on for hours and seriously effect a cluster's performance. A user may mis-configure a rebalance request and not be paying attention to the summary and only realise they have made a mistake once it has begun. We need to give them an escape hatch!", "author": "tomncooper", "createdAt": "2020-05-15T09:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MDI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDE3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425584177", "bodyText": "what are this line witn \"//\" ? this list is not clear to me. Are there titles and topics?", "author": "ppatierno", "createdAt": "2020-05-15T06:04:17Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   ", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1MTEyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425651122", "bodyText": "// is comment notation in Asciidoc. These goals are not supported, as confirmed by @kyguy. I decided to comment them out rather than delete.", "author": "laidan6000", "createdAt": "2020-05-15T08:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDE3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425584778", "bodyText": "from where \"Master\" comes from?", "author": "ppatierno", "createdAt": "2020-05-15T06:06:11Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY0OTY5Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425649697", "bodyText": "That's my choice of term. Otherwise we have goals, default goals, and user-provided goals, which are all different types of goals!", "author": "laidan6000", "createdAt": "2020-05-15T08:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1MjA2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425652066", "bodyText": "Why not just using the CC community terms. If they are called goals, default goals, user-provided goals .. we have to take them not using something different tbh. @tomncooper @kyguy ?", "author": "ppatierno", "createdAt": "2020-05-15T08:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1NTIxMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425655210", "bodyText": "\"User-provided goals\" is also our choice of term.", "author": "laidan6000", "createdAt": "2020-05-15T08:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1ODg3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425658878", "bodyText": "but user-provided is just related to the fact that the user is providing them through our technology ... the KafkaRebalance resource, so I think that it's right.", "author": "ppatierno", "createdAt": "2020-05-15T08:51:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY3NTE0MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425675141", "bodyText": "personally I am happy with the \"master goals list\" it conveys better what they are. If a goal is not in the master goal list it is not available for any CC function.", "author": "tomncooper", "createdAt": "2020-05-15T09:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc0NjAzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425746035", "bodyText": "but user-provided is just related to the fact that the user is providing them through our technology ... the KafkaRebalance resource, so I think that it's right.\n\nRight, I see what you mean. It's more of a description than an actual term.", "author": "laidan6000", "createdAt": "2020-05-15T11:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NTY1Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425585652", "bodyText": "I think that this notation in this case is confusing. As we are using this notation it means:\nspec:\n  cruiseControl:\n     config:\n        default:\n            goals:\nwhich is of course wrong because the right field is default.goals (so it's a field as a whole not goals under default).\nFor this reason I would say default.goals under Kafka.spec.cruiseControl.config.", "author": "ppatierno", "createdAt": "2020-05-15T06:08:47Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.\n+You can include any or all of the master optimization goals in the default optimization goals.\n+\n+Default optimization goals are set in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.default.goals`", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxOTg4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427219887", "bodyText": "Good suggestion, thanks.", "author": "laidan6000", "createdAt": "2020-05-19T11:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NTY1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NjQ0NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425586444", "bodyText": "skipHardGoalCheck", "author": "ppatierno", "createdAt": "2020-05-15T06:11:20Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.\n+You can include any or all of the master optimization goals in the default optimization goals.\n+\n+Default optimization goals are set in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.default.goals`\n+\n+The default optimization goals generate the _cached optimization proposal_ from the workload model (unless you set user-provided optimization goals in a `KafkaRebalance` custom resource). \n+This is updated to reflect the current state of the Kafka cluster every 15 minutes by default. \n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured hard goals, or an error will occur\n+* Be a subset of the master optimization goals\n+\n+To exclude the configured hard goals from an optimization proposal, add the `skiphardgoalscheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+All configured hard goals _must_ be satisfied in optimization proposals (unless `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource).", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NjY1MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425586651", "bodyText": "the same as before, hard.goals is a property as a whole, we should clarify as I already mentioned for default.goals", "author": "ppatierno", "createdAt": "2020-05-15T06:12:02Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,133 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the default optimization goals (see below).\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, specify an empty value for the `goals` configuration option:\n++\n+[source=yaml]\n+----\n+goals: {}\n+----\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+We recommend that you always set _default optimization goals_ for the Kafka cluster.\n+You can include any or all of the master optimization goals in the default optimization goals.\n+\n+Default optimization goals are set in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.default.goals`\n+\n+The default optimization goals generate the _cached optimization proposal_ from the workload model (unless you set user-provided optimization goals in a `KafkaRebalance` custom resource). \n+This is updated to reflect the current state of the Kafka cluster every 15 minutes by default. \n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured hard goals, or an error will occur\n+* Be a subset of the master optimization goals\n+\n+To exclude the configured hard goals from an optimization proposal, add the `skiphardgoalscheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+All configured hard goals _must_ be satisfied in optimization proposals (unless `skip_hard_goal_check: true` is specified in the `KafkaRebalance` custom resource).\n+In other words, an optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Hard goals are controlled in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.hard.goals`", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NzgwNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425587807", "bodyText": "kubectl", "author": "ppatierno", "createdAt": "2020-05-15T06:15:28Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,119 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `spec.goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      RackAwareGoal,\n+      ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4ODE0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r425588146", "bodyText": "it's changed, now type: State (is always in this way) and status: Ready", "author": "ppatierno", "createdAt": "2020-05-15T06:16:24Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,119 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `spec.goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+    goals: >\n+      RackAwareGoal,\n+      ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+oc apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n++\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance operator is polling the Cruise Control API to check if the optimization proposal is ready.\n+\n+** `ProposalReady`: The optimization proposal is ready for you to review and implement, if desired.\n+The status is followed by the JSON optimization proposal.\n+\n+. Review the JSON optimization proposal in the `status.summary` property of the `KafkaRebalance` resource.\n++\n+Here is an example proposal:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:\n+  # ...\n+status:\n+  conditions:\n+  - lastTransitionTime: 2020-05-23T23:46:57+0000\n+    status: \"True\"\n+    type: Ready", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "edf3a4c07840e21ce8e79a3d5bfed716ef486750", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/edf3a4c07840e21ce8e79a3d5bfed716ef486750", "message": "TC edits 15 May\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-15T14:54:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NjQxNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r426196416", "bodyText": "The name of the KafkaRebalance resources AFAIU can be anything. So the example commands like this should not use the _cluster-name_-kafka as a name. They should use something generic like _kafka-rebalance-name_ instead. Otherwise this would be misleading given the other namesfor example in example do not follow this pattern anyway. (this is not just here but on more places)", "author": "scholzj", "createdAt": "2020-05-16T22:23:36Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,73 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an optimization proposal with a status of `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers as summarized in the optimization proposal.\n+\n+WARNING: This is not a dry run. \n+Review the optimization proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, refresh the optimization proposal in case it has become out of date:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=refresh", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIxMjIwNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427212205", "bodyText": "Good point. I'll change the variable to _cluster-rebalance-name_ throughout.", "author": "laidan6000", "createdAt": "2020-05-19T10:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NjQxNg=="}], "type": "inlineReview"}, {"oid": "7d1cac6649b5003b8075d8e77752131f716e35ca", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7d1cac6649b5003b8075d8e77752131f716e35ca", "message": "Review comments 18 May\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-18T16:36:46Z", "type": "commit"}, {"oid": "42324060dd42928c84279216329d0ed8608c3964", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/42324060dd42928c84279216329d0ed8608c3964", "message": "Fixed unrelated error in docs\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-19T08:04:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE3NTc3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427175773", "bodyText": "it's approve not approved", "author": "tombentley", "createdAt": "2020-05-19T09:52:14Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,73 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an optimization proposal with a status of `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers as summarized in the optimization proposal.\n+\n+WARNING: This is not a dry run. \n+Review the optimization proposal before you implement it.\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, refresh the optimization proposal in case it has become out of date:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the optimization proposal that you want to implement.\n++\n+Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-name_-kafka strimzi.io/rebalance=approved", "originalCommit": "70aa2d9d9fc22e530783df0072882645e464234a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4ODc3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427188774", "bodyText": "Changed it, thanks.", "author": "laidan6000", "createdAt": "2020-05-19T10:13:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE3NTc3Mw=="}], "type": "inlineReview"}, {"oid": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b9066e39850c9b66fc2211d3f21726d4b8117ead", "message": "Last comments from reviewers\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-19T12:13:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MDc0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427280746", "bodyText": "Why is this here?", "author": "tomncooper", "createdAt": "2020-05-19T12:57:49Z", "path": "documentation/modules/con-configuring-user-operator.adoc", "diffHunk": "@@ -9,7 +9,7 @@ User Operator deployment can be configured using additional options inside the `\n The following properties are supported:\n \n `watchedNamespace`::\n-The Kubernetes namespace in which the topic operator watches for `KafkaUsers`.\n+The Kubernetes namespace in which the user operator watches for `KafkaUsers`.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NDg2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427294867", "bodyText": "It's an unrelated typo.", "author": "laidan6000", "createdAt": "2020-05-19T13:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MDc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0NzI4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427347285", "bodyText": "@laidan6000 which should not be in unrelated PRs :-) ... anyway it's ok for this time! :P", "author": "ppatierno", "createdAt": "2020-05-19T14:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MDc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MTA0NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427291044", "bodyText": "This statement is not correct. The skipHardGoalCheck: true only applies to the check that is done for the user defined goals and weather they contain all the specified hard.goals. If a user sets skipHardGoalCheck: true all the user defined goals that are in the hard.goals list will be treated as hard goals.", "author": "tomncooper", "createdAt": "2020-05-19T13:13:28Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,94 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MTQ1Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427291456", "bodyText": "You can just remove the second sentence.", "author": "tomncooper", "createdAt": "2020-05-19T13:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMjg5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427302894", "bodyText": "Right. I'm going to document this in the \"Hard goals\" section instead.", "author": "laidan6000", "createdAt": "2020-05-19T13:30:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMjU2OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427312569", "bodyText": "I added a note.\n\nNOTE: If skipHardGoalCheck: true is specified in the KafkaRebalance custom resource, Cruise Control does not check that the list of user-provided optimization goals (goals) contains all the configured hard goals (hard.goals). Therefore, if only some of the user-provided optimization goals are in the hard.goals list, Cruise Control will still treat them as hard goals.", "author": "laidan6000", "createdAt": "2020-05-19T13:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MTA0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjUyOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427296529", "bodyText": "So an optimization proposal does contain the information in the bullet points below but we don't currently show this information to a user. This requires the --verbose flag which we currently don't support. We may add this in future but there is currently no way to show this information to the user.", "author": "tomncooper", "createdAt": "2020-05-19T13:21:18Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,94 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NzQzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427297436", "bodyText": "You could say \"An optimisation proposal consists of the following information........however a summary of the changes is displayed in the KafkaRebalance CR status.\"", "author": "tomncooper", "createdAt": "2020-05-19T13:22:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNTc1NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427315754", "bodyText": "Removed the bullet points.", "author": "laidan6000", "createdAt": "2020-05-19T13:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxNDEyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427414127", "bodyText": "Please can you check this again, @tomncooper ?", "author": "laidan6000", "createdAt": "2020-05-19T15:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTYzNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427901637", "bodyText": "This section has changes so there is nothing to check. You can resolve this.", "author": "tomncooper", "createdAt": "2020-05-20T10:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNTAyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427305028", "bodyText": "\"The total number of partition replicas that will be transferred between the disks of the cluster's brokers.\"", "author": "tomncooper", "createdAt": "2020-05-19T13:33:01Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,94 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Optimization proposals always satisfy all the configured hard goals, although not necessarily all the soft goals. Hard goals are ignored if `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource.\n+\n+An optimization proposal contains the following information, in JSON, about the pending cluster rebalance:\n+\n+* An optimal mapping of partitions to brokers\n+\n+* Changes to the partition leaders\n+\n+* Statistics on the cluster rebalance (before and after)\n+\n+Use the information to decide whether to implement the cluster rebalance, or change the optimization goals. \n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Cached optimization proposal\n+\n+Cruise Control maintains a _cached optimization proposal_ based on the configured default optimization goals.\n+Generated from the workload model, the cached optimization proposal is updated every 15 minutes to reflect the current state of the Kafka cluster.\n+If you generate an optimization proposal using the default optimization goals, Cruise Control returns the most recent cached proposal.\n+\n+To change the cached optimization proposal refresh interval, edit the `proposal.expiration.ms` setting in the Cruise Control deployment configuration.\n+Consider a shorter interval for fast changing clusters, although this increases the load on the Cruise Control server.\n+\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6The total number of partition replicas that will be transferred between the disks of an individual broker.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjg1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427306850", "bodyText": "Do we need a \",\" at the end of these names? @kyguy does this YAML list get parsed into a Java list and the \",\" added?", "author": "tomncooper", "createdAt": "2020-05-19T13:35:38Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,124 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+  goals:\n+    - RackAwareGoal,", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMDE1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427310158", "bodyText": "No, this is the KafkaRebalance resource. goals is an array, so no comma.", "author": "ppatierno", "createdAt": "2020-05-19T13:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzg2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427317862", "bodyText": "The commas are not there in examples/cruise-control.\nI can remove them from here.", "author": "laidan6000", "createdAt": "2020-05-19T13:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxOTQ4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427319485", "bodyText": "This command is wrong. It should be kubectl get kafkarebalance <rebalance-name> -o jsonpath='{.status}'", "author": "tomncooper", "createdAt": "2020-05-19T13:53:25Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,124 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+  goals:\n+    - RackAwareGoal,\n+    - ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDIyNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427320224", "bodyText": "Or better yet: kubectl describe kafkarebalance <rebalance-name>", "author": "tomncooper", "createdAt": "2020-05-19T13:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxOTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMjI4Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427322286", "bodyText": "You can get the exact status output with kubectl get kafkarebalance <rebalance-name> -o jsonpath='{.status.conditions[0].status}' but there is no absolute guarantee that the correct condition will always be at position zero.", "author": "tomncooper", "createdAt": "2020-05-19T13:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxOTQ4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMzU3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427323573", "bodyText": "It is not JSON formatted if you use the kubectl describe command", "author": "tomncooper", "createdAt": "2020-05-19T13:59:20Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,124 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+  goals:\n+    - RackAwareGoal,\n+    - ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n++\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance operator is polling the Cruise Control API to check if the optimization proposal is ready.\n+\n+** `ProposalReady`: The optimization proposal is ready for review and, if desired, implementation.\n+The status contains the optimization proposal as JSON, in the `status.summary` property of the `KafkaRebalance` resource.\n+\n+. Review the JSON optimization proposal.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyOTkzMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427329933", "bodyText": "OK. I've just removed the two mentions that optimization proposals are formatted as JSON.", "author": "laidan6000", "createdAt": "2020-05-19T14:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMzU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4OTcwNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427289706", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Example YAML files for deploying Cruise Control and setting optimization goals are provided in `examples/kafka/`.\n          \n          \n            \n            Example YAML files for deploying Cruise Control and setting optimization goals are provided in `examples/cruise-control/`.", "author": "tombentley", "createdAt": "2020-05-19T13:11:35Z", "path": "documentation/assemblies/cruise-control/assembly-cruise-control-concepts.adoc", "diffHunk": "@@ -5,14 +5,22 @@\n [id='cruise-control-concepts-{context}']\n = Cruise Control\n \n-This chapter provides an overview of the Kafka cluster rebalancing features provided by the {CruiseControlProject} open source project and helps you get started using Cruise Control with {ProductName}.\n+You can deploy {CruiseControlProject} and access a subset of its features through {ProductName} custom resources.\n+\n+Example YAML files for deploying Cruise Control and setting optimization goals are provided in `examples/kafka/`.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0MDg3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427340873", "bodyText": "Good catch!", "author": "ppatierno", "createdAt": "2020-05-19T14:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4OTcwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MTMzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427291331", "bodyText": "In any realistic scenario there's never a true balance (in the sense that every broker has the same load), so can we add 'more'\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It constructs a _workload model_ of resource utilization for the cluster--based on CPU, disk, and network load--and generates _optimization proposals_ for balanced partition assignments. A set of configurable _optimization goals_ is used to calculate these proposals.\n          \n          \n            \n            It constructs a _workload model_ of resource utilization for the cluster--based on CPU, disk, and network load--and generates _optimization proposals_ for more balanced partition assignments. A set of configurable _optimization goals_ is used to calculate these proposals.", "author": "tombentley", "createdAt": "2020-05-19T13:13:57Z", "path": "documentation/modules/cruise-control/con-cruise-control-overview.adoc", "diffHunk": "@@ -7,16 +7,19 @@\n // See also the complementary step on the last line of this file.\n \n [id='con-cruise-control-overview-{context}']\n-= Cruise Control overview\n+= Why use Cruise Control?\n \n-Brokers in a Kafka cluster can become unevenly loaded for many reasons.\n-For example, partitions that handle large amounts of message traffic can be unevenly distributed across the available brokers.\n-Monitoring broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n-Cruise Control is a tool for automating the monitoring and rebalancing of partitions across a Kafka cluster.\n-When deployed alongside a Kafka cluster, Cruise Control can perform the following cluster balancing tasks:\n+Cruise Control reduces the time and effort involved in running an efficient and balanced Kafka cluster.\n \n-* Monitoring the CPU, disk, and network load of Kafka brokers.\n-* Making optimization proposals: balanced partition assignments based on configurable optimization goals.\n-* Executing partition reassignments based on optimization proposals.\n+A typical cluster can become unevenly loaded over time.\n+Partitions that handle large amounts of message traffic might be unevenly distributed across the available brokers.\n+To rebalance the cluster, administrators must monitor the load on brokers and manually reassign busy partitions to brokers with spare capacity.\n \n-The following sections explain how to xref:proc-deploying-cruise-control-{context}[deploy Cruise Control] and xref:ref-cruise-control-configuration-{context}[set configuration options].\n\\ No newline at end of file\n+Cruise Control automates the cluster rebalancing process.\n+It constructs a _workload model_ of resource utilization for the cluster--based on CPU, disk, and network load--and generates _optimization proposals_ for balanced partition assignments. A set of configurable _optimization goals_ is used to calculate these proposals.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5Mjk1NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427292954", "bodyText": "I found \"implement\" a slightly curious choice of word here, but you've used it throughout these docs. Without the extra bit at the end I don't think it's completely clear that the effect of \"implementing\" is that the cluster ends up more balanced.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can choose to implement optimization proposals to achieve a more balanced Kafka cluster.  \n          \n          \n            \n            You can choose to apply those optimization proposals to your Kafka cluster so the broker pods are used most effectively.", "author": "tombentley", "createdAt": "2020-05-19T13:16:19Z", "path": "documentation/modules/cruise-control/con-cruise-control-overview.adoc", "diffHunk": "@@ -7,16 +7,19 @@\n // See also the complementary step on the last line of this file.\n \n [id='con-cruise-control-overview-{context}']\n-= Cruise Control overview\n+= Why use Cruise Control?\n \n-Brokers in a Kafka cluster can become unevenly loaded for many reasons.\n-For example, partitions that handle large amounts of message traffic can be unevenly distributed across the available brokers.\n-Monitoring broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n-Cruise Control is a tool for automating the monitoring and rebalancing of partitions across a Kafka cluster.\n-When deployed alongside a Kafka cluster, Cruise Control can perform the following cluster balancing tasks:\n+Cruise Control reduces the time and effort involved in running an efficient and balanced Kafka cluster.\n \n-* Monitoring the CPU, disk, and network load of Kafka brokers.\n-* Making optimization proposals: balanced partition assignments based on configurable optimization goals.\n-* Executing partition reassignments based on optimization proposals.\n+A typical cluster can become unevenly loaded over time.\n+Partitions that handle large amounts of message traffic might be unevenly distributed across the available brokers.\n+To rebalance the cluster, administrators must monitor the load on brokers and manually reassign busy partitions to brokers with spare capacity.\n \n-The following sections explain how to xref:proc-deploying-cruise-control-{context}[deploy Cruise Control] and xref:ref-cruise-control-configuration-{context}[set configuration options].\n\\ No newline at end of file\n+Cruise Control automates the cluster rebalancing process.\n+It constructs a _workload model_ of resource utilization for the cluster--based on CPU, disk, and network load--and generates _optimization proposals_ for balanced partition assignments. A set of configurable _optimization goals_ is used to calculate these proposals.\n+\n+You can choose to implement optimization proposals to achieve a more balanced Kafka cluster.  ", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4Mjc4OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427382789", "bodyText": "\"Apply\" seems rather too generic to me. The other strong candidate was \"execute\".\nAgree that the sentence above is a bit woolly.", "author": "laidan6000", "createdAt": "2020-05-19T15:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5Mjk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4NTg0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427385848", "bodyText": "Changed to:\n\nYou can choose to apply those optimization proposals to your Kafka cluster so the broker pods are used most effectively, leading to a more balanced cluster.", "author": "laidan6000", "createdAt": "2020-05-19T15:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5Mjk1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MzkzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427293932", "bodyText": "Personally I prefer the word \"constraint\" rather than \"target\".", "author": "tombentley", "createdAt": "2020-05-19T13:17:39Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,161 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5NjcyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427296722", "bodyText": "Will it be clear to readers what \"users\" means here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].\n          \n          \n            \n            To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from use in `KafkaRebalance` resources. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].", "author": "tombentley", "createdAt": "2020-05-19T13:21:36Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,161 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Goals that are not listed in the master optimization goals are not available to use for Cruise Control operations.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+Six of these goals are preset as link:#hard-soft-goals[hard goals].\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMDg4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427300885", "bodyText": "Because a couple of the preceding sections about goals mention hard goals why not explain this first?", "author": "tombentley", "createdAt": "2020-05-19T13:27:28Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,161 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Goals that are not listed in the master optimization goals are not available to use for Cruise Control operations.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+Six of these goals are preset as link:#hard-soft-goals[hard goals].\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, do not specify the `goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+Cruise Control uses the _default optimization goals_ to generate the _cached optimization proposal_.\n+For more information about the cached optimization proposal, see xref:con-optimization-proposals-{context}[]. \n+\n+You can override the default optimization goals by setting link:#user-provided-goals[user-provided optimization goals] in a `KafkaRebalance` custom resource.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], the default optimization goals are the same as the master optimization goals.\n+\n+* To use the master optimization goals as the default goals, do not specify the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To modify the default optimization goals, edit the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+You must use a subset of the master optimization goals.\n+ \n+.Example `Kafka` configuration for default optimization goals\n+\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  entityOperator:\n+    topicOperator: {}\n+    userOperator: {}\n+  cruiseControl: {}\n+    capacity:\n+      networkIn: 10000KB/s\n+      networkOut: 10000KB/s\n+    config:\n+      default.goals: >\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal\n+      # ...         \n+----\n+\n+NOTE: For an example of the complete deployment configuration, see xref:proc-deploying-cruise-control-{context}[]. \n+\n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured link:#hard-soft-goals[hard goals], or an error occurs\n+* Be a subset of the master optimization goals\n+\n+To ignore the configured hard goals in an optimization proposal, add the `skipHardGoalCheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+Unless `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource, all configured hard goals _must_ be satisfied in optimization proposals.\n+In other words, an optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Hard goals are controlled in the Cruise Control deployment configuration, by editing the `hard.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To inherit the six preset hard goals from Cruise Control, do not specify the `hard.goals` property in `Kafka.spec.cruiseControl.config`\n+\n+* To change the preset hard goals, specify the desired goals in the `hard.goals` configuration option.\n+\n+Increasing the number of hard goals will reduce the likelihood of Cruise Control generating valid optimization proposals.\n+\n+Goals not designated as hard goals are treated as _soft goals_.\n+Also known as _best effort_ goals, soft goals do _not_ need to be satisfied in optimization proposals, but are included in optimization calculations.\n+An optimization proposal that violates one or more soft goals, but satisfies all hard goals, is valid.\n+\n+NOTE: For example, you might have a soft goal to distribute a topic's replicas evenly across the cluster (the topic replica distribution goal). \n+Cruise Control will ignore this goal if doing so enables all the configured hard goals to be met.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MDczNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427390735", "bodyText": "Originally, hard goals were explained first. Honestly, I've gone through so many different iterations now, I'm not sure that a logical order even exists!\nI'll shift the hard and soft goals to the top of the module and we'll see how it looks.", "author": "laidan6000", "createdAt": "2020-05-19T15:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMDg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNDY1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427304650", "bodyText": "This section should define what a hard goal is as the very first thing. Otherwise a reader might not understand the rest of the content.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n          \n          \n            \n            _Hard goals_ are goals that _must_ be satisfied in optimization proposals. Goals which are not hard goals are known as soft goals, and might not be satisfied by an optimization proposals. Cruise control will find proposals which satisfy all the hard goals and as many soft goals as possible (in their priority order).\n          \n          \n            \n            \n          \n          \n            \n            In Cruise Control, six of the master optimization goals are preset as hard goals:", "author": "tombentley", "createdAt": "2020-05-19T13:32:27Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,161 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Goals that are not listed in the master optimization goals are not available to use for Cruise Control operations.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+Six of these goals are preset as link:#hard-soft-goals[hard goals].\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, do not specify the `goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+Cruise Control uses the _default optimization goals_ to generate the _cached optimization proposal_.\n+For more information about the cached optimization proposal, see xref:con-optimization-proposals-{context}[]. \n+\n+You can override the default optimization goals by setting link:#user-provided-goals[user-provided optimization goals] in a `KafkaRebalance` custom resource.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], the default optimization goals are the same as the master optimization goals.\n+\n+* To use the master optimization goals as the default goals, do not specify the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To modify the default optimization goals, edit the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+You must use a subset of the master optimization goals.\n+ \n+.Example `Kafka` configuration for default optimization goals\n+\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  entityOperator:\n+    topicOperator: {}\n+    userOperator: {}\n+  cruiseControl: {}\n+    capacity:\n+      networkIn: 10000KB/s\n+      networkOut: 10000KB/s\n+    config:\n+      default.goals: >\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal\n+      # ...         \n+----\n+\n+NOTE: For an example of the complete deployment configuration, see xref:proc-deploying-cruise-control-{context}[]. \n+\n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured link:#hard-soft-goals[hard goals], or an error occurs\n+* Be a subset of the master optimization goals\n+\n+To ignore the configured hard goals in an optimization proposal, add the `skipHardGoalCheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5NDIyNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427394224", "bodyText": "Yes, that's improved.", "author": "laidan6000", "createdAt": "2020-05-19T15:28:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNDY1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjY3MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427306671", "bodyText": "If you accept the above suggestion when we should reword this bit too. How about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Unless `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource, all configured hard goals _must_ be satisfied in optimization proposals.\n          \n          \n            \n            In other words, an optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.\n          \n          \n            \n            Setting `skipHardGoalCheck: true` in the `KafkaRebalance` custom resource, provides a way to treat hard goals as if they were soft goals.", "author": "tombentley", "createdAt": "2020-05-19T13:35:23Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,161 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Goals that are not listed in the master optimization goals are not available to use for Cruise Control operations.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+Six of these goals are preset as link:#hard-soft-goals[hard goals].\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, do not specify the `goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+Cruise Control uses the _default optimization goals_ to generate the _cached optimization proposal_.\n+For more information about the cached optimization proposal, see xref:con-optimization-proposals-{context}[]. \n+\n+You can override the default optimization goals by setting link:#user-provided-goals[user-provided optimization goals] in a `KafkaRebalance` custom resource.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], the default optimization goals are the same as the master optimization goals.\n+\n+* To use the master optimization goals as the default goals, do not specify the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To modify the default optimization goals, edit the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+You must use a subset of the master optimization goals.\n+ \n+.Example `Kafka` configuration for default optimization goals\n+\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  entityOperator:\n+    topicOperator: {}\n+    userOperator: {}\n+  cruiseControl: {}\n+    capacity:\n+      networkIn: 10000KB/s\n+      networkOut: 10000KB/s\n+    config:\n+      default.goals: >\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal\n+      # ...         \n+----\n+\n+NOTE: For an example of the complete deployment configuration, see xref:proc-deploying-cruise-control-{context}[]. \n+\n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured link:#hard-soft-goals[hard goals], or an error occurs\n+* Be a subset of the master optimization goals\n+\n+To ignore the configured hard goals in an optimization proposal, add the `skipHardGoalCheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+Unless `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource, all configured hard goals _must_ be satisfied in optimization proposals.\n+In other words, an optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMTIxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427331219", "bodyText": "Ok so this is a confusion that has popped up a few times so we really need to make it clear. skipHardGoalsCheck: true does not disable hard goals or treat all goals as soft, it simply stops CC rejecting a rebalance request with a user defined goals list that doesn't contain all the defined hard.goals (in the CC server config). If some of the user defined goals in a rebalance with skipHardGoalsCheck: true happen to be in the hard.goals list, then they will be treated as hard goals.", "author": "tomncooper", "createdAt": "2020-05-19T14:09:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMzEyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427333122", "bodyText": "OK, thank you for correcting me @tomncooper!", "author": "tombentley", "createdAt": "2020-05-19T14:12:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MzY1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427393650", "bodyText": "@laidan6000 so we should change here as Tom suggested.", "author": "ppatierno", "createdAt": "2020-05-19T15:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5ODE1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427398157", "bodyText": "I've added a note to this module explaining \"skipHardGoalCheck: true\" in more detail. I'll leave the text as it is.", "author": "laidan6000", "createdAt": "2020-05-19T15:34:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNjY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwNzc3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427307777", "bodyText": "I guess this could be worked into the first para in this section, if it's not already covered by my suggestion.", "author": "tombentley", "createdAt": "2020-05-19T13:36:58Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,161 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are targets for workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals, as well as link:#hard-soft-goals[hard] optimization goals that must be satisfied.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Goals that are not listed in the master optimization goals are not available to use for Cruise Control operations.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+Six of these goals are preset as link:#hard-soft-goals[hard goals].\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from users. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, do not specify the `goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+Cruise Control uses the _default optimization goals_ to generate the _cached optimization proposal_.\n+For more information about the cached optimization proposal, see xref:con-optimization-proposals-{context}[]. \n+\n+You can override the default optimization goals by setting link:#user-provided-goals[user-provided optimization goals] in a `KafkaRebalance` custom resource.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], the default optimization goals are the same as the master optimization goals.\n+\n+* To use the master optimization goals as the default goals, do not specify the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To modify the default optimization goals, edit the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+You must use a subset of the master optimization goals.\n+ \n+.Example `Kafka` configuration for default optimization goals\n+\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  entityOperator:\n+    topicOperator: {}\n+    userOperator: {}\n+  cruiseControl: {}\n+    capacity:\n+      networkIn: 10000KB/s\n+      networkOut: 10000KB/s\n+    config:\n+      default.goals: >\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal\n+      # ...         \n+----\n+\n+NOTE: For an example of the complete deployment configuration, see xref:proc-deploying-cruise-control-{context}[]. \n+\n+If no default optimization goals are specified, the cached proposal is generated using the master optimization goals.\n+\n+[id=\"user-provided-goals\"]\n+[discrete]\n+=== User-provided optimization goals\n+\n+_User-provided optimization goals_ narrow down the default goals.\n+You can set them, if required, in the `KafkaRebalance` custom resource for a particular optimization proposal: `KafkaRebalance.spec.goals`\n+\n+They are useful for generating an optimization proposal that addresses a particular scenario.\n+For example, you might want to optimize leader replica distribution across the Kafka cluster without considering goals for disk capacity or disk utilization. \n+So, you create a `KafkaRebalance` custom resource containing a user-provided goal for leader replica distribution only.\n+\n+User-provided optimization goals must:\n+\n+* Include all configured link:#hard-soft-goals[hard goals], or an error occurs\n+* Be a subset of the master optimization goals\n+\n+To ignore the configured hard goals in an optimization proposal, add the `skipHardGoalCheck: true` option to the `KafkaRebalance` custom resource.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+In Cruise Control, six of the master optimization goals are preset as _hard goals_:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+Unless `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource, all configured hard goals _must_ be satisfied in optimization proposals.\n+In other words, an optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.\n+\n+Hard goals are controlled in the Cruise Control deployment configuration, by editing the `hard.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To inherit the six preset hard goals from Cruise Control, do not specify the `hard.goals` property in `Kafka.spec.cruiseControl.config`\n+\n+* To change the preset hard goals, specify the desired goals in the `hard.goals` configuration option.\n+\n+Increasing the number of hard goals will reduce the likelihood of Cruise Control generating valid optimization proposals.\n+\n+Goals not designated as hard goals are treated as _soft goals_.\n+Also known as _best effort_ goals, soft goals do _not_ need to be satisfied in optimization proposals, but are included in optimization calculations.\n+An optimization proposal that violates one or more soft goals, but satisfies all hard goals, is valid.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTM3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427311372", "bodyText": "Maybe not in this PR, but this example is practically begging for a few callouts to explain what some of these things mean.", "author": "tombentley", "createdAt": "2020-05-19T13:41:49Z", "path": "documentation/modules/cruise-control/proc-generating-rebalance-proposals.adoc", "diffHunk": "@@ -0,0 +1,124 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-generating-optimization-proposals-{context}']\n+= Generating optimization proposals \n+\n+When you create or update a `KafkaRebalance` resource, Cruise Control generates an xref:con-optimization-proposals-{context}[optimization proposal] for the Kafka cluster based on the configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+You can then analyze the summary information in the optimization proposal and decide whether to implement it. \n+\n+.Prerequisites\n+\n+* You have xref:proc-deploying-cruise-control-{context}[deployed Cruise Control] to your {ProductName} cluster.\n+\n+* You have configured xref:con-optimization-goals-{context}[optimization goals].\n+\n+.Procedure\n+\n+. Create a `KafkaRebalance` resource:\n+\n+.. To use the _default optimization goals_ defined in the `Kafka` resource, leave the `spec` property empty:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec: {}\n+----\n+\n+.. To set _user-provided optimization goals_ instead of using the default goals, edit the `goals` property and enter one or more goals.\n++\n+In the following example, rack awareness and replica capacity are user-provided optimization goals:\n++\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: KafkaRebalance\n+metadata:\n+  name: my-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:    \n+  goals:\n+    - RackAwareGoal,\n+    - ReplicaCapacityGoal\n+----\n+\n+. Create or update the resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl apply -f _your-file_\n+----\n++\n+The Cluster Operator requests the optimization proposal from Cruise Control.\n+This might take a few minutes depending on the size of the Kafka cluster. \n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'\n+----\n++\n+Cruise Control returns one of two statuses:\n+\n+** `PendingProposal`: The rebalance operator is polling the Cruise Control API to check if the optimization proposal is ready.\n+\n+** `ProposalReady`: The optimization proposal is ready for review and, if desired, implementation.\n+The status contains the optimization proposal as JSON, in the `status.summary` property of the `KafkaRebalance` resource.\n+\n+. Review the JSON optimization proposal.\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl describe kafkarebalance.kafka.strimzi.io -n <namespace> <rebalance-cr-name>\n+----\n++\n+Here is an example proposal:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+apiVersion: kafka.strimzi.io/v1beta1\n+kind: KafkaRebalance\n+metadata:\n+  name: my-cluster-rebalance\n+  labels: \n+    strimzi.io/cluster: my-cluster\n+spec:\n+  # ...\n+status:\n+  conditions:\n+  - lastTransitionTime: 2020-05-23T23:46:57+0000\n+    status: \"Ready\"\n+    type: State\n+  observedGeneration: 4\n+  summary:\n+  - numIntraBrokerReplicaMovements:0,\n+  - excludedBrokersForLeadership:[],\n+  - numReplicaMovements:31,\n+  - onDemandBalancednessScoreAfter:84.08179174145127,\n+  - onDemandBalancednessScoreBefore:79.74705957325753,\n+  - intraBrokerDataToMoveMB:0,\n+  - recentWindows:1,\n+  - dataToMoveMB:0,\n+  - monitoredPartitionsPercentage:100.0,\n+  - excludedTopics:[],\n+  - numLeaderMovements:12,\n+  - excludedBrokersForReplicaMove:[]", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyNTgxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427325819", "bodyText": "This is covered in another section, @laidan6000 can we add a ref to that section here?", "author": "tomncooper", "createdAt": "2020-05-19T14:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTM3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427311832", "bodyText": "Again, I think \"apply\" is a better term than \"implement\".", "author": "tombentley", "createdAt": "2020-05-19T13:42:24Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,78 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an xref:con-optimization-proposals-{context}[optimization proposal] if its status is `ProposalReady`.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQwODI5Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427408293", "bodyText": "Well, I think we'll have to stick to \"implement\" unless there is strong agreement on the new term.", "author": "laidan6000", "createdAt": "2020-05-19T15:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgxMzExOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427813118", "bodyText": "@laidan6000 I am not a native English but tbh \"implement\" doesn't sound the right term here. I agree with @tombentley about \"apply\". Of course, I could be wrong due to the fact I am not English. @tomncooper wdyt?", "author": "ppatierno", "createdAt": "2020-05-20T07:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0MDE2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427840166", "bodyText": "Yeah \"Implement\" feels wrong as it implies that the user is going to do all the steps, when actually they are just telling CC to go and do the steps. TBF \"apply\" suffers from the same issue. I think the problem is wrapping this in one term. It is a two step process. The user is not \"Implementing an optimization proposal\" they are \"Obtaining and approving an optimization proposal\".\nSo better to say \"You can approve an optimization proposal if its status is ProposalReady.\"", "author": "tomncooper", "createdAt": "2020-05-20T08:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0MTAzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427841036", "bodyText": "@ppatierno - You are definitely not wrong. Please, never think that your suggestions on wording and terminology are less valid because you're a non-native English speaker.\nI used \"implement\" to mean \"carrying out\" or \"putting into effect\" the actions summarized in the optimization proposal. It's a synonym of \"execute\".\nhttps://www.collinsdictionary.com/dictionary/english/implement\n\"Apply\" is a more general verb, but it can also mean \"to carry out\". I just wanted to use a more specific verb in this case, to add variety to the documentation as much as anything else.", "author": "laidan6000", "createdAt": "2020-05-20T08:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0MzQ5Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427843496", "bodyText": "I still think the issue is that the user is not \"implementing/applying/executing\" the optimisation proposal, they are allowing CC to do it. If we are being really picky a user could \"implement\" the OP by accessing the verbose OP (not yet supported) and getting the partition reassignment command json and applying it themselves.", "author": "tomncooper", "createdAt": "2020-05-20T08:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NjY3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427886678", "bodyText": "From one of the previous chapter ... \"You can choose to apply those optimization proposals\" ... so I see you used \"apply\"", "author": "ppatierno", "createdAt": "2020-05-20T09:55:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTA4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427901082", "bodyText": "Well, the change above was from Tom's review. But, OK, I see your point. Cruise Control is the \"actor\", not the user.\nI'll change to \"apply\" throughout.\nGood discussion all!", "author": "laidan6000", "createdAt": "2020-05-20T10:21:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMzk1MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427903951", "bodyText": "Sorry, I re-read Tom C's comments. \"Obtaining and approving an optimization proposal\" might be the best choice here.", "author": "laidan6000", "createdAt": "2020-05-20T10:26:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyNzMyNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427927325", "bodyText": "I changed the title to \"Approving an optimization proposal\". All references to \"implementing\" proposals elsewhere in the doc have been changed to \"approving\".", "author": "laidan6000", "createdAt": "2020-05-20T11:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMTgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMzQ3MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427313470", "bodyText": "But we've not explained the anatomy of a proposal, so the reader is able to review it in any meaningful sense. Presumably by suggested they \"review\" a proposal there is the possibility that they might want to reject the proposal (and generate another), but we need to explain why they might want to do that.", "author": "tombentley", "createdAt": "2020-05-19T13:44:38Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,78 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an xref:con-optimization-proposals-{context}[optimization proposal] if its status is `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers and change partition leadership, as summarized in the optimization proposal.\n+\n+[CAUTION]\n+====\n+*This is not a dry run.* Before you implement an optimization proposal, you must:\n+\n+* Refresh the proposal in case it has become out of date.\n+* Carefully review the contents of the proposal.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxMTM0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427411348", "bodyText": "I've added a link here to \"Contents of optimization proposals\". Good suggestion.\nI think the extra conceptual information on when to reject a proposal will have to wait. We can capture it as an issue?", "author": "laidan6000", "createdAt": "2020-05-19T15:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0MjU1Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427842556", "bodyText": "Are there one or two main reasons why a user would reject an optimization proposal?", "author": "laidan6000", "createdAt": "2020-05-20T08:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0NjQ4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427846485", "bodyText": "There are many possible reasons. The main ones might include a really huge amount of data moving or lots of InterBroker replica movements, but I think a true explanation would be quite in depth. It might be better to get the upstream CC community to improve their wiki with this kind of information. I have a couple of WIP PR on the CC docs so I can add this discussion to them.", "author": "tomncooper", "createdAt": "2020-05-20T08:51:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyOTQ4Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427929483", "bodyText": "OK, thanks. I think we should capture this discussion in a new Docs issue. Please add me to your CC PRs!", "author": "laidan6000", "createdAt": "2020-05-20T11:15:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMzQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzY3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427317672", "bodyText": "Define \"some time\". If 5 minutes too long? Or a hour? Or a day? I know, we can't because it depends on how dynamic their cluster is, but this advice is not really very helpful in its current form. How about \"Unless the proposal has just been generated, it is recommended to validate that it's based on current information about the state of the cluster\"", "author": "tombentley", "createdAt": "2020-05-19T13:50:32Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,78 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an xref:con-optimization-proposals-{context}[optimization proposal] if its status is `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers and change partition leadership, as summarized in the optimization proposal.\n+\n+[CAUTION]\n+====\n+*This is not a dry run.* Before you implement an optimization proposal, you must:\n+\n+* Refresh the proposal in case it has become out of date.\n+* Carefully review the contents of the proposal.\n+====\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, it might no longer apply to the current state of the Kafka cluster. In this case, you must refresh the optimization proposal to make sure it uses the latest cluster metrics:", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyNzQ3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427427478", "bodyText": "I think this is a good point. Ideally they would approve the proposal within a few mins of requesting it.", "author": "tomncooper", "createdAt": "2020-05-19T16:15:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2Nzg2MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427867860", "bodyText": "Agree that \"some time\" is ambiguous. I'll use your text.", "author": "laidan6000", "createdAt": "2020-05-20T09:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDY3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427320672", "bodyText": "We should explain how/why the perf might be affected. People reading this might be put off from using rebalacing, or not know what they should be monitoring during a rebalance. Above all we need to explain the difference between changing leadership of replicas (cheap) and, moving replicas between log dirs on a single broker (expensiveish) reassigning replicas between brokers (expensive).", "author": "tombentley", "createdAt": "2020-05-19T13:55:07Z", "path": "documentation/modules/cruise-control/proc-stopping-cluster-rebalance.adoc", "diffHunk": "@@ -0,0 +1,43 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-stopping-cluster-rebalance-{context}']\n+\n+= Stopping a cluster rebalance\n+\n+Once started, a cluster rebalance operation might take some time to complete and affect the overall performance of the Kafka cluster.  ", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgxNDcwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427814708", "bodyText": "I think that adding this information opens a quite new chapter and much more work to do. We can do that but why we should explain this in Strimzi doc when it's more Kafka itself related?", "author": "ppatierno", "createdAt": "2020-05-20T08:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg1NjE2MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427856160", "bodyText": "Above all we need to explain the difference between changing leadership of replicas (cheap) and, moving replicas between log dirs on a single broker (expensiveish) reassigning replicas between brokers (expensive).\n\nI can add a brief note about the relative \"expense\" of each operation to the \"contents of optimization proposals\" table. For example:\nnumLeaderMovements\nPerformance impact during rebalance operation: Relatively low.\nOf course, there is more to your suggestion than that.", "author": "laidan6000", "createdAt": "2020-05-20T09:06:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTQ2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427881467", "bodyText": "@tombentley - I've pushed up those changes. Please can you check the table in \"Optimization proposals overview\"?", "author": "laidan6000", "createdAt": "2020-05-20T09:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDk2MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427320960", "bodyText": "We should note that this intermediate state might be worse than the initial state.", "author": "tombentley", "createdAt": "2020-05-19T13:55:30Z", "path": "documentation/modules/cruise-control/proc-stopping-cluster-rebalance.adoc", "diffHunk": "@@ -0,0 +1,43 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-stopping-cluster-rebalance-{context}']\n+\n+= Stopping a cluster rebalance\n+\n+Once started, a cluster rebalance operation might take some time to complete and affect the overall performance of the Kafka cluster.  \n+\n+If you want to stop a cluster rebalance operation that is in progress, apply a `stop` annotation to the `KafkaRebalance` custom resource. \n+This causes Cruise Control to stop rebalancing after the current batch of partition reassignments has completed. \n+Any partition reassignments before this point will have been successfully applied, so the Kafka cluster will be in a different state compared to before the rebalance operation started.", "originalCommit": "b9066e39850c9b66fc2211d3f21726d4b8117ead", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyODY3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427428677", "bodyText": "That is a good NOTE to add here.", "author": "tomncooper", "createdAt": "2020-05-19T16:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDk2MA=="}], "type": "inlineReview"}, {"oid": "1a70203d2b008cab538fa8b6dc1eb01dce7d117b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1a70203d2b008cab538fa8b6dc1eb01dce7d117b", "message": "Added fix rebalance procedure plus review edits\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-19T15:53:52Z", "type": "commit"}, {"oid": "2d84716d33f2a06b588b976f13d980375054eb02", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2d84716d33f2a06b588b976f13d980375054eb02", "message": "Fixed the status example\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-19T16:06:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMTUyMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427421523", "bodyText": "do you mean \"more\" effectively?", "author": "tomncooper", "createdAt": "2020-05-19T16:06:49Z", "path": "documentation/modules/cruise-control/con-cruise-control-overview.adoc", "diffHunk": "@@ -7,16 +7,19 @@\n // See also the complementary step on the last line of this file.\n \n [id='con-cruise-control-overview-{context}']\n-= Cruise Control overview\n+= Why use Cruise Control?\n \n-Brokers in a Kafka cluster can become unevenly loaded for many reasons.\n-For example, partitions that handle large amounts of message traffic can be unevenly distributed across the available brokers.\n-Monitoring broker load and reassigning busy partitions to brokers with spare capacity is time consuming and adds to the overhead of managing a Kafka cluster.\n-Cruise Control is a tool for automating the monitoring and rebalancing of partitions across a Kafka cluster.\n-When deployed alongside a Kafka cluster, Cruise Control can perform the following cluster balancing tasks:\n+Cruise Control reduces the time and effort involved in running an efficient and balanced Kafka cluster.\n \n-* Monitoring the CPU, disk, and network load of Kafka brokers.\n-* Making optimization proposals: balanced partition assignments based on configurable optimization goals.\n-* Executing partition reassignments based on optimization proposals.\n+A typical cluster can become unevenly loaded over time.\n+Partitions that handle large amounts of message traffic might be unevenly distributed across the available brokers.\n+To rebalance the cluster, administrators must monitor the load on brokers and manually reassign busy partitions to brokers with spare capacity.\n \n-The following sections explain how to xref:proc-deploying-cruise-control-{context}[deploy Cruise Control] and xref:ref-cruise-control-configuration-{context}[set configuration options].\n\\ No newline at end of file\n+Cruise Control automates the cluster rebalancing process.\n+It constructs a _workload model_ of resource utilization for the cluster--based on CPU, disk, and network load--and generates _optimization proposals_ for more balanced partition assignments. A set of configurable _optimization goals_ is used to calculate these proposals.\n+\n+You can choose to apply those optimization proposals to your Kafka cluster so the broker pods are used most effectively, leading to a more balanced cluster.", "originalCommit": "1a70203d2b008cab538fa8b6dc1eb01dce7d117b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMzMwOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427423309", "bodyText": "\"Use the summary (shown in the Status of the KafkaRebalance resource).....\"", "author": "tomncooper", "createdAt": "2020-05-19T16:09:22Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,85 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Use the summary to decide whether to implement the cluster rebalance, or change the optimization goals. ", "originalCommit": "2d84716d33f2a06b588b976f13d980375054eb02", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyNDY3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427424678", "bodyText": "We should be consistent and use just kafkarebalance here", "author": "tomncooper", "createdAt": "2020-05-19T16:11:16Z", "path": "documentation/modules/cruise-control/proc-fixing-problems-with-kafkarebalance.adoc", "diffHunk": "@@ -0,0 +1,49 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-fixing-problems-with-kafkarebalance-{context}']\n+\n+= Fixing problems with a `KafkaRebalance` resource\n+\n+If an issue occurs in the process of creating a `KafkaRebalance` resource, or when interacting with Cruise Control, the error is reported in the resource status, along with details of how to fix it. \n+The resource also moves to the `NotReady` state.\n+\n+To continue with the cluster rebalance operation, you must fix the problem on the `KafkaRebalance` resource itself. \n+Problems can include the following:\n+\n+* A misconfigured parameter.\n+* The Cruise Control server is not reachable. \n+\n+When you believe that you have fixed the issue, you need to add the `refresh` annotation to the resource.\n+During a \u201crefresh\u201d, a new optimization proposal is requested from the Cruise Control server.\n+\n+.Prerequisites\n+\n+* You have xref:proc-implementing-optimization-proposal-{context}[implemented an optimization proposal].\n+\n+* The status of the `KafkaRebalance` custom resource for the rebalance operation is `NotReady`.\n+\n+.Procedure\n+\n+. Get information about the error from the `KafkaRebalance` status and resolve the issue if possible.\n+\n+. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-rebalance-name_ strimzi.io/rebalance=refresh\n+----\n+\n+. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl describe kafkarebalance.kafka.strimzi.io -n <namespace> <rebalance-cr-name>", "originalCommit": "2d84716d33f2a06b588b976f13d980375054eb02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyNTU2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427425564", "bodyText": "Also why are you using namespace here when none of the other command examples specify it? Probably best to remove it and be consistent.", "author": "tomncooper", "createdAt": "2020-05-19T16:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyNDY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyODE0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427428147", "bodyText": "You should make all the \"Check the status of the resource\" command consistent. You uses kubectl describe in others?", "author": "tomncooper", "createdAt": "2020-05-19T16:16:11Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,78 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an xref:con-optimization-proposals-{context}[optimization proposal] if its status is `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers and change partition leadership, as summarized in the optimization proposal.\n+\n+[CAUTION]\n+====\n+*This is not a dry run.* Before you implement an optimization proposal, you must:\n+\n+* Refresh the proposal in case it has become out of date.\n+* Carefully review the link:#contents-optimization-proposals[contents of the proposal].\n+====\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. If the `KafkaRebalance` status has been `ProposalReady` for some time, it might no longer apply to the current state of the Kafka cluster. In this case, you must refresh the optimization proposal to make sure it uses the latest cluster metrics:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-rebalance-name_ strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl get kafka kafkarebalance -o jsonpath='{.status}'", "originalCommit": "2d84716d33f2a06b588b976f13d980375054eb02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNzM2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427437362", "bodyText": "Yes, good point. I'll check them all and change to:\nkubectl describe kafkarebalance _rebalance-cr-name_", "author": "laidan6000", "createdAt": "2020-05-19T16:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyODE0Nw=="}], "type": "inlineReview"}, {"oid": "fda12c17fd17b9d8c674d137c18c1daa07a78d51", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fda12c17fd17b9d8c674d137c18c1daa07a78d51", "message": "TC comments - part one\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T08:52:29Z", "type": "commit"}, {"oid": "3ab13e47cb1f3ab2bbc0321e473aac229b96aa4d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3ab13e47cb1f3ab2bbc0321e473aac229b96aa4d", "message": "Change check status cmds to kubectl describe\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T09:04:00Z", "type": "commit"}, {"oid": "7041e100340f953bdeeecc755983bef20ee4b590", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7041e100340f953bdeeecc755983bef20ee4b590", "message": "Added note on intermediate state\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T09:24:03Z", "type": "commit"}, {"oid": "1fda4f80919144c80ab80a4dd8f4206dee5a6d8a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1fda4f80919144c80ab80a4dd8f4206dee5a6d8a", "message": "Removed \"some time\" from implement proposals proc\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T09:31:44Z", "type": "commit"}, {"oid": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/49338188e25bee21d724a4ea7e92e48e65f3dacb", "message": "Added performance impacts to op prop table TB\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T09:48:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NTg4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427885884", "bodyText": "@tomncooper are we confident that this is interbroker movement, and not the sum of interbroker and intrabroker?", "author": "tombentley", "createdAt": "2020-05-20T09:54:38Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,91 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Use the summary (shown in the `Status` of the `KafkaRebalance` resource) to decide whether to implement the cluster rebalance, or change the optimization goals.\n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Cached optimization proposal\n+\n+Cruise Control maintains a _cached optimization proposal_ based on the configured default optimization goals.\n+Generated from the workload model, the cached optimization proposal is updated every 15 minutes to reflect the current state of the Kafka cluster.\n+If you generate an optimization proposal using the default optimization goals, Cruise Control returns the most recent cached proposal.\n+\n+To change the cached optimization proposal refresh interval, edit the `proposal.expiration.ms` setting in the Cruise Control deployment configuration.\n+Consider a shorter interval for fast changing clusters, although this increases the load on the Cruise Control server.\n+\n+[id=\"contents-optimization-proposals\"]\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6The total number of partition replicas that will be transferred between the disks of the cluster's brokers.\n+\n+*Performance impact during rebalance operation*: Relatively high, but lower than `numReplicaMovements`.\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Not yet supported. An empty list is returned.\n+\n+m\u00a6numReplicaMovements\n+\u00a6The number of partition replicas that will be moved between separate brokers.", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NzYwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427887600", "bodyText": "I will double check the CC source code, just to make sure.", "author": "tomncooper", "createdAt": "2020-05-20T09:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MzMzNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427893334", "bodyText": "That number comes from this method and is a count incremented in an if branch for removal or addition of replicas to a broker which is separate from the if branch which increments the intrabroker (between disks) count, so I pretty confident this is the interbroker replica movement count.", "author": "tomncooper", "createdAt": "2020-05-20T10:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkzNDA4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427934084", "bodyText": "OK, I'll leave this unchanged.", "author": "laidan6000", "createdAt": "2020-05-20T11:24:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NTg4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4Njk5MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427886990", "bodyText": "I guess it might be worth calling out that is (and to a lesser extent intraBrokerDataToMoveMB) also provide a guide about how costly the balancing is going to be.", "author": "tombentley", "createdAt": "2020-05-20T09:56:31Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,91 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Use the summary (shown in the `Status` of the `KafkaRebalance` resource) to decide whether to implement the cluster rebalance, or change the optimization goals.\n+\n+NOTE: All optimization proposals are dry runs: you cannot implement a cluster rebalance without first generating an optimization proposal. \n+There is no limit to the number of optimization proposals that can be generated.\n+\n+[discrete]\n+== Cached optimization proposal\n+\n+Cruise Control maintains a _cached optimization proposal_ based on the configured default optimization goals.\n+Generated from the workload model, the cached optimization proposal is updated every 15 minutes to reflect the current state of the Kafka cluster.\n+If you generate an optimization proposal using the default optimization goals, Cruise Control returns the most recent cached proposal.\n+\n+To change the cached optimization proposal refresh interval, edit the `proposal.expiration.ms` setting in the Cruise Control deployment configuration.\n+Consider a shorter interval for fast changing clusters, although this increases the load on the Cruise Control server.\n+\n+[id=\"contents-optimization-proposals\"]\n+[discrete]\n+== Contents of optimization proposals\n+\n+The following table explains the properties contained in an optimization proposal:\n+\n+[cols=\"2*\",options=\"header\",stripes=\"none\",separator=\u00a6]\n+|===\n+\n+m\u00a6JSON property\n+\u00a6Description\n+\n+m\u00a6numIntraBrokerReplicaMovements\n+\u00a6The total number of partition replicas that will be transferred between the disks of the cluster's brokers.\n+\n+*Performance impact during rebalance operation*: Relatively high, but lower than `numReplicaMovements`.\n+\n+m\u00a6excludedBrokersForLeadership\n+\u00a6Not yet supported. An empty list is returned.\n+\n+m\u00a6numReplicaMovements\n+\u00a6The number of partition replicas that will be moved between separate brokers.\n+\n+*Performance impact during rebalance operation*: Relatively high.\n+\n+m\u00a6onDemandBalancednessScoreBefore, onDemandBalancednessScoreAfter\n+\u00a6A measurement of the overall _balancedness_ of a Kafka Cluster, before and after the optimization proposal was generated.\n+\n+The calculation is 100 minus the sum of the `BalancednessScore` of each violated soft goal. Cruise Control assigns a `BalancednessScore` to every optimization goal based on several factors, including priority (the goal's position in the list of `default.goals` or user-provided goals).\n+\n+The `Before` score is based on the current configuration of the Kafka cluster.\n+The `After` score is based on the generated optimization proposal.\n+\n+m\u00a6intraBrokerDataToMoveMB\n+\u00a6The sum of the size of each partition replica that will be moved between disks on the same broker (see also `numIntraBrokerReplicaMovements`).\n+\n+m\u00a6recentWindows\n+\u00a6The number of metrics windows upon which the optimization proposal is based.\n+\n+m\u00a6dataToMoveMB\n+\u00a6The sum of the size of each partition replica that will be moved to a separate broker (see also `numReplicaMovements`).", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NDM2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427894362", "bodyText": "That is a good idea.", "author": "tomncooper", "createdAt": "2020-05-20T10:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4Njk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjE0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427902143", "bodyText": "Sorry, I don't quite understand your suggestion - @tombentley", "author": "laidan6000", "createdAt": "2020-05-20T10:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4Njk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMzgyMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427903821", "bodyText": "The bigger this number is (and to a lesser extent intraBrokerDataToMoveMB), the longer a rebalance will take .", "author": "tomncooper", "createdAt": "2020-05-20T10:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4Njk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Mzg4OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427893889", "bodyText": "comma missing at the end", "author": "ppatierno", "createdAt": "2020-05-20T10:07:52Z", "path": "documentation/modules/cruise-control/con-optimization-goals.adoc", "diffHunk": "@@ -0,0 +1,164 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-goals-{context}']\n+= Optimization goals overview\n+\n+To rebalance a Kafka cluster, Cruise Control uses optimization goals to generate xref:con-optimization-proposals-{context}[optimization proposals].  \n+\n+Optimization goals are constraints on workload redistribution and resource utilization across a Kafka cluster.\n+With a few exceptions, {ProductName} supports all the optimization goals developed in the Cruise Control project.\n+These are as follows, in descending priority order:\n+\n+. Rack-awareness\n+. Replica capacity\n+. Capacity: Disk capacity, Network inbound capacity, Network outbound capacity\n+//.. CPU capacity\n+. Replica distribution\n+. Potential network output\n+. Resource distribution: Disk utilization distribution, Network inbound utilization distribution, Network outbound utilization distribution\n+//.. CPU utilization distribution\n+. Leader bytes-in rate distribution\n+. Topic replica distribution\n+. Leader replica distribution\n+. Preferred leader election\n+//. Intra-broker disk capacity\n+//. Intra-broker disk usage distribution   \n+\n+For more information on each optimization goal, see link:https://github.com/linkedin/cruise-control/wiki/Pluggable-Components#goals[Goals^] in the Cruise Control Wiki.\n+\n+NOTE: CPU goals, intra-broker disk goals, \"Write your own\" goals, and Kafka assigner goals are not yet supported.\n+\n+As described in the following sections, you can customize the supported optimization goals by reordering them in terms of priority, and disabling goals to exclude from optimization proposal calculations.\n+\n+[discrete]\n+== Goals configuration in {ProductName}\n+\n+You configure optimization goals in the `Kafka` and `KafkaRebalance` custom resources. Cruise Control has configurations for link:#hard-soft-goals[hard] optimization goals that must be satisfied, as well as link:#master-goals[master], link:#default-goals[default], and link:#user-provided-goals[user-provided] optimization goals.\n+\n+The following sections describe each goal configuration in more detail.\n+\n+[id=\"hard-soft-goals\"]\n+[discrete]\n+=== Hard goals and soft goals\n+\n+_Hard goals_ are goals that _must_ be satisfied in optimization proposals. \n+Goals that are not hard goals are known as _soft goals_, and might not be satisfied by optimization proposals. \n+You can think of soft goals as _best effort_ goals: they do _not_ need to be satisfied in optimization proposals, but are included in optimization calculations.\n+An optimization proposal that violates one or more soft goals, but satisfies all hard goals, is valid.\n+\n+Cruise control will calculate optimization proposals that satisfy all the hard goals and as many soft goals as possible (in their priority order). \n+An optimization proposal that does _not_ satisfy all the hard goals is rejected by Cruise Control and not sent to the user.\n+\n+NOTE: For example, you might have a soft goal to distribute a topic's replicas evenly across the cluster (the topic replica distribution goal). \n+Cruise Control will ignore this goal if doing so enables all the configured hard goals to be met.\n+\n+In Cruise Control, six of the link:#master-goals[master optimization goals] are preset as hard goals:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal\n+\n+Hard goals are controlled in the Cruise Control deployment configuration, by editing the `hard.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To inherit the six preset hard goals from Cruise Control, do not specify the `hard.goals` property in `Kafka.spec.cruiseControl.config`\n+\n+* To change the preset hard goals, specify the desired goals in the `hard.goals` configuration option.\n+\n+Increasing the number of hard goals will reduce the likelihood of Cruise Control generating valid optimization proposals.\n+\n+NOTE: If `skipHardGoalCheck: true` is specified in the `KafkaRebalance` custom resource, Cruise Control does not check that the list of user-provided optimization goals (`goals`) contains _all_ the configured hard goals (`hard.goals`). Therefore, if some, but not all, of the user-provided optimization goals are in the `hard.goals` list, Cruise Control will still treat them as hard goals even if `skipHardGoalCheck: true` is specified.\n+\n+[id=\"master-goals\"]\n+[discrete]\n+=== Master optimization goals\n+\n+The _master optimization goals_ are available to all users.\n+Goals that are not listed in the master optimization goals are not available to use for Cruise Control operations.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], {ProductName} will inherit the following master optimization goals from Cruise Control, in descending priority order:\n+\n+[source]\n+RackAwareGoal; ReplicaCapacityGoal; DiskCapacityGoal; NetworkInboundCapacityGoal; NetworkOutboundCapacityGoal; CpuCapacityGoal; ReplicaDistributionGoal; PotentialNwOutGoal; DiskUsageDistributionGoal; NetworkInboundUsageDistributionGoal; NetworkOutboundUsageDistributionGoal; CpuUsageDistributionGoal; TopicReplicaDistributionGoal; LeaderReplicaDistributionGoal; LeaderBytesInDistributionGoal; PreferredLeaderElectionGoal\n+\n+Six of these goals are preset as link:#hard-soft-goals[hard goals].\n+\n+To reduce complexity, we recommend that you use the inherited master optimization goals, unless you need to _completely_ exclude one or more goals from use in `KafkaRebalance` resources. The priority order of the master optimization goals can be modified, if desired, in the link:#default-goals[default optimization goals].\n+\n+Master optimization goals are controlled, if needed, in the Cruise Control deployment configuration: `Kafka.spec.cruiseControl.config.goals`\n+\n+* To accept the inherited master optimization goals, do not specify the `goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* If you need to modify the inherited master optimization goals, specify a list of goals in the `goals` configuration option.\n+\n+[id=\"default-goals\"]\n+[discrete]\n+=== Default optimization goals\n+\n+Cruise Control uses the _default optimization goals_ to generate the _cached optimization proposal_.\n+For more information about the cached optimization proposal, see xref:con-optimization-proposals-{context}[]. \n+\n+You can override the default optimization goals by setting link:#user-provided-goals[user-provided optimization goals] in a `KafkaRebalance` custom resource.\n+\n+Unless you change the Cruise Control xref:proc-deploying-cruise-control-{context}[deployment configuration], the default optimization goals are the same as the master optimization goals.\n+\n+* To use the master optimization goals as the default goals, do not specify the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+\n+* To modify the default optimization goals, edit the `default.goals` property in `Kafka.spec.cruiseControl.config`.\n+You must use a subset of the master optimization goals.\n+ \n+.Example `Kafka` configuration for default optimization goals\n+\n+[source,yaml,subs=\"attributes+\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    # ...\n+  zookeeper:\n+    # ...\n+  entityOperator:\n+    topicOperator: {}\n+    userOperator: {}\n+  cruiseControl: {}\n+    capacity:\n+      networkIn: 10000KB/s\n+      networkOut: 10000KB/s\n+    config:\n+      default.goals: >\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,\n+         com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NDM5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427894394", "bodyText": "status", "author": "ppatierno", "createdAt": "2020-05-20T10:08:47Z", "path": "documentation/modules/cruise-control/con-optimization-proposals.adoc", "diffHunk": "@@ -0,0 +1,91 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='con-optimization-proposals-{context}']\n+\n+= Optimization proposals overview\n+\n+An _optimization proposal_ is a summary of proposed changes that would produce a more balanced Kafka cluster, with partition workloads distributed more evenly among the brokers. \n+Each optimization proposal is based on the set of xref:con-optimization-goals-{context}[optimization goals] that were used to generate it.\n+\n+Use the summary (shown in the `Status` of the `KafkaRebalance` resource) to decide whether to implement the cluster rebalance, or change the optimization goals.", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NjMyOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427896329", "bodyText": "_cluster-rebalance-name_ should be _rebalance-cr-name_ as other commands.", "author": "ppatierno", "createdAt": "2020-05-20T10:12:21Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,79 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an xref:con-optimization-proposals-{context}[optimization proposal] if its status is `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers and change partition leadership, as summarized in the optimization proposal.\n+\n+[CAUTION]\n+====\n+*This is not a dry run.* Before you implement an optimization proposal, you must:\n+\n+* Refresh the proposal in case it has become out of date.\n+* Carefully review the link:#contents-optimization-proposals[contents of the proposal].\n+====\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. Unless the optimization proposal is newly generated, we recommend you validate that it is based on current information about the state of the Kafka cluster.\n+To do so, refresh the optimization proposal to make sure it uses the latest cluster metrics:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-rebalance-name_ strimzi.io/rebalance=refresh", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NjUyNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427896525", "bodyText": "ditto as above, use _rebalance-cr-name_", "author": "ppatierno", "createdAt": "2020-05-20T10:12:42Z", "path": "documentation/modules/cruise-control/proc-implementing-rebalance-proposal.adoc", "diffHunk": "@@ -0,0 +1,79 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-implementing-optimization-proposal-{context}']\n+\n+= Implementing an optimization proposal\n+\n+You can implement an xref:con-optimization-proposals-{context}[optimization proposal] if its status is `ProposalReady`.\n+Cruise Control will then reassign partitions to brokers and change partition leadership, as summarized in the optimization proposal.\n+\n+[CAUTION]\n+====\n+*This is not a dry run.* Before you implement an optimization proposal, you must:\n+\n+* Refresh the proposal in case it has become out of date.\n+* Carefully review the link:#contents-optimization-proposals[contents of the proposal].\n+====\n+\n+.Prerequisites\n+\n+* You have xref:proc-generating-optimization-proposals-{context}[generated an optimization proposal].\n+\n+* The optimization proposal is ready to implement (the `KafkaRebalance` custom resource status is `ProposalReady`).\n+\n+.Procedure\n+\n+Perform these steps for the optimization proposal that you want to implement:\n+\n+. Unless the optimization proposal is newly generated, we recommend you validate that it is based on current information about the state of the Kafka cluster.\n+To do so, refresh the optimization proposal to make sure it uses the latest cluster metrics:\n+\n+.. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-rebalance-name_ strimzi.io/rebalance=refresh\n+----\n+\n+.. Check the status of the `KafkaRebalance` resource:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl describe kafkarebalance _rebalance-cr-name_\n+----\n+\n+.. Wait until the status changes to `ProposalReady`.\n+\n+. Approve the optimization proposal that you want to implement.\n++\n+Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-rebalance-name_ strimzi.io/rebalance=approve", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzA0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427897043", "bodyText": "ditto as above, use _rebalance-cr-name_", "author": "ppatierno", "createdAt": "2020-05-20T10:13:39Z", "path": "documentation/modules/cruise-control/proc-stopping-cluster-rebalance.adoc", "diffHunk": "@@ -0,0 +1,45 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-stopping-cluster-rebalance-{context}']\n+\n+= Stopping a cluster rebalance\n+\n+Once started, a cluster rebalance operation might take some time to complete and affect the overall performance of the Kafka cluster.  \n+\n+If you want to stop a cluster rebalance operation that is in progress, apply a `stop` annotation to the `KafkaRebalance` custom resource. \n+This causes Cruise Control to finish the current batch of partition reassignments and then stop the rebalance.\n+Any partition reassignments before this point will have been successfully applied, so the Kafka cluster will be in a different state compared to before the rebalance operation started.\n+Therefore, if further rebalancing is required, you should generate a new optimization proposal. \n+\n+NOTE: The performance of the Kafka cluster in the intermediate (stopped) state might be worse than in the initial state.\n+\n+.Prerequisites\n+\n+* You have xref:proc-implementing-optimization-proposal-{context}[implemented the optimization proposal] by annotating the `KafkaRebalance` custom resource with `approve`. \n+\n+* The status of the `KafkaRebalance` custom resource is `Rebalancing`.\n+\n+.Procedure\n+\n+. Annotate the `KafkaRebalance` resource in Kubernetes:\n++\n+[source,shell,subs=\"+quotes\"]\n+----\n+kubectl annotate kafkarebalance _cluster-rebalance-name_ strimzi.io/rebalance=stop", "originalCommit": "49338188e25bee21d724a4ea7e92e48e65f3dacb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "af247fba6efed8161818937f395354508d089c4f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/af247fba6efed8161818937f395354508d089c4f", "message": "Fixed Anchors that caused Trais build to fail\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T10:18:02Z", "type": "commit"}, {"oid": "9cc36df6f3d5284f27722ec66fc0d51b441bccf0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9cc36df6f3d5284f27722ec66fc0d51b441bccf0", "message": "Changed to Approving an optimization proposal\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T11:10:04Z", "type": "commit"}, {"oid": "20da1339cc1e691f479b680667aad6fcf038acda", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/20da1339cc1e691f479b680667aad6fcf038acda", "message": "Impact of dataToMoveMB, intraBrokerDataToMoveMB\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T11:23:55Z", "type": "commit"}, {"oid": "2359c3848afdf837918396d226e6e5e270157a47", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2359c3848afdf837918396d226e6e5e270157a47", "message": "Use rebalance-cr-name consistently in commands\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T11:28:00Z", "type": "commit"}, {"oid": "21e8c92bdae8cb7bdce4ced425ae2715a5ace6bd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/21e8c92bdae8cb7bdce4ced425ae2715a5ace6bd", "message": "Renamed two modules - no content changes\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T11:33:42Z", "type": "commit"}, {"oid": "349fb8e532a257d506d62d7fb2b4ab409d05caa6", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/349fb8e532a257d506d62d7fb2b4ab409d05caa6", "message": "Added percentage widths to op_prop table\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-05-20T11:37:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk4ODc2MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2956#discussion_r427988760", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To continue with the cluster rebalance operation, you must fix the problem on the `KafkaRebalance` resource itself. \n          \n          \n            \n            To continue with the cluster rebalance operation, you must fix the problem in the `KafkaRebalance` resource itself.", "author": "tombentley", "createdAt": "2020-05-20T12:59:52Z", "path": "documentation/modules/cruise-control/proc-fixing-problems-with-kafkarebalance.adoc", "diffHunk": "@@ -0,0 +1,49 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-cruise-control-concepts.adoc\n+\n+[id='proc-fixing-problems-with-kafkarebalance-{context}']\n+\n+= Fixing problems with a `KafkaRebalance` resource\n+\n+If an issue occurs in the process of creating a `KafkaRebalance` resource, or when interacting with Cruise Control, the error is reported in the resource status, along with details of how to fix it. \n+The resource also moves to the `NotReady` state.\n+\n+To continue with the cluster rebalance operation, you must fix the problem on the `KafkaRebalance` resource itself. ", "originalCommit": "349fb8e532a257d506d62d7fb2b4ab409d05caa6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}