{"pr_number": 2653, "pr_title": "[MO] - [system test] -> oauth authorization superuser breaks rules", "pr_createdAt": "2020-03-06T12:49:44Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTQzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389355430", "bodyText": "It would make reviews of ST PRs lot easier if every PR didn't contain bunch of removals of throws Exception. Is this in any way related to the actual PR or is it just something you noticed while doing the PR? If it is related to the PR it is of course ok. But if not, please open one PR to fix all of these to make the reviews easier.", "author": "scholzj", "createdAt": "2020-03-08T10:23:27Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -1364,7 +1364,7 @@ void verifyVolumeNamesAndLabels(int kafkaReplicas, int diskCountPerReplica, int\n     }\n \n     @Test\n-    void testPersistentStorageSize() throws Exception {\n+    void testPersistentStorageSize() {", "originalCommit": "d76d88436dcf189d66c1231b12a397486bd927bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYwMjU3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389602574", "bodyText": "Yeah, sorry for that...", "author": "see-quick", "createdAt": "2020-03-09T11:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTUxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389355513", "bodyText": "What is the reason to move so massively to not using TLS? Again, it looks a bit unrelated to the main PR.", "author": "scholzj", "createdAt": "2020-03-08T10:24:27Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthAuthorizationST.java", "diffHunk": "@@ -61,11 +61,11 @@\n     @Description(\"As a member of team A, I should be able to read and write to all topics starting with a-\")\n     @Test\n     void smokeTestForClients() throws IOException, InterruptedException, ExecutionException, TimeoutException {\n-        Future<Integer> producer = teamAOauthKafkaClient.sendMessagesTls(TOPIC_A, NAMESPACE, CLUSTER_NAME, TEAM_A_CLIENT,\n-                MESSAGE_COUNT, \"SSL\");\n+        Future<Integer> producer = teamAOauthKafkaClient.sendMessages(TOPIC_A, NAMESPACE, CLUSTER_NAME,", "originalCommit": "d76d88436dcf189d66c1231b12a397486bd927bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYwMzA3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389603073", "bodyText": "I realized that it would be better to test just a \"authorization\" and let the encryption be.", "author": "see-quick", "createdAt": "2020-03-09T11:29:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTUxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk0MjQxMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389942412", "bodyText": "Ok, makes sense.", "author": "scholzj", "createdAt": "2020-03-09T20:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTcxNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389355717", "bodyText": "I think this tests the super users well. But this test it self doesn't contain any verifications that the authorization alone works. Do you think it is sufficient that it is coverd in other tests? Or should we have something like:\n\nSetup the clusetr without super users\nTest that they cannot read and write\n3 Modify the cluster to add super users\nTest that they can now read and write.", "author": "scholzj", "createdAt": "2020-03-08T10:27:40Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthAuthorizationST.java", "diffHunk": "@@ -161,15 +159,81 @@ void testTeamAWriteToTopicStartingWithXAndTeamBReadFromTopicStartingWithX() thro\n \n         KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n \n-        Future<Integer> producer = teamAOauthKafkaClient.sendMessagesTls(topicName, NAMESPACE, CLUSTER_NAME, TEAM_A_CLIENT,\n-                MESSAGE_COUNT, \"SSL\");\n+        Future<Integer> producer = teamAOauthKafkaClient.sendMessages(topicName, NAMESPACE, CLUSTER_NAME,\n+                MESSAGE_COUNT);\n+\n+        assertThat(producer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS), is(MESSAGE_COUNT));\n+\n+        Future<Integer> consumer = teamBOauthKafkaClient.receiveMessages(topicName, NAMESPACE, CLUSTER_NAME,\n+                MESSAGE_COUNT, \"x_consumer_group_b\");\n+\n+        assertThat(consumer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS), is(MESSAGE_COUNT));\n+    }\n+\n+    @Description(\"As a superuser of team A and team B, i am able to break defined authorization rules\")\n+    @Test\n+    void testSuperUserWithOauthAuthorization() throws InterruptedException, ExecutionException, TimeoutException, IOException {", "originalCommit": "d76d88436dcf189d66c1231b12a397486bd927bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMjgxMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389612812", "bodyText": "I can add another test case for clarity with that scenario.", "author": "see-quick", "createdAt": "2020-03-09T11:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTcxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk0MjQ3MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r389942471", "bodyText": "I think it would be good, because right now here you do not really know whether the authorization works at all.", "author": "scholzj", "createdAt": "2020-03-09T20:28:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTcxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI4MjUzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2653#discussion_r390282530", "bodyText": "I have decided to make it really simple and did these scenario in one test. It will be really time consuming if i do two separate test cases...", "author": "see-quick", "createdAt": "2020-03-10T12:37:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1NTcxNw=="}], "type": "inlineReview"}, {"oid": "918838043b18f852f54d3e9ddba25c3522120c89", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/918838043b18f852f54d3e9ddba25c3522120c89", "message": "[MO] - [system test] -> update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-09T15:01:57Z", "type": "forcePushed"}, {"oid": "2677adbbcd823ea6863f1f4c1d4732b9b0bb62e7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2677adbbcd823ea6863f1f4c1d4732b9b0bb62e7", "message": "[MO] - [system test] -> oauth authorization superuser breaks rules\n\nSigned-off-by: see-quick <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T05:37:18Z", "type": "commit"}, {"oid": "876957a50edc2367a7c5fa46c16a0fa24720bb92", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/876957a50edc2367a7c5fa46c16a0fa24720bb92", "message": "[MO] - [system test] -> update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T05:41:19Z", "type": "commit"}, {"oid": "deda5267956432ec0693bbb49639e46b8fcbe3af", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/deda5267956432ec0693bbb49639e46b8fcbe3af", "message": "[MO] - [system test] -> update to new\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T05:42:54Z", "type": "commit"}, {"oid": "6ea892f387e334916d4302bb2f3ee9807567692f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6ea892f387e334916d4302bb2f3ee9807567692f", "message": "[MO] - [system test] -> up\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T05:42:54Z", "type": "commit"}, {"oid": "bd5e12e294c136e9dc3e3a6a7fa118528541639d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bd5e12e294c136e9dc3e3a6a7fa118528541639d", "message": "[MO] - [rebase] -> update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T05:57:39Z", "type": "commit"}, {"oid": "bd5e12e294c136e9dc3e3a6a7fa118528541639d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bd5e12e294c136e9dc3e3a6a7fa118528541639d", "message": "[MO] - [rebase] -> update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T05:57:39Z", "type": "forcePushed"}, {"oid": "e9d980d4e462b21b2739a8e42d3995b066409f21", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e9d980d4e462b21b2739a8e42d3995b066409f21", "message": "[MO] - [update] -ss\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T06:06:38Z", "type": "commit"}, {"oid": "9d2f561ce1bc5820795f834fc5eae9bb3b20940b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9d2f561ce1bc5820795f834fc5eae9bb3b20940b", "message": "[MO] - [update] -> up\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-12T08:28:27Z", "type": "commit"}]}