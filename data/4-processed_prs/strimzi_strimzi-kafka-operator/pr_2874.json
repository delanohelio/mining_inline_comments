{"pr_number": 2874, "pr_title": "TO metrics", "pr_createdAt": "2020-04-22T18:40:54Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0NDc1NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413344754", "bodyText": "In CO and UO, the timer as well as some of the counters are measured per resource. So if you have 10 Kafka topics, you will get 10 measurements. This looks to me like it really measures only the reconcilaAll. Or do I misunderstand what this code in the operator does?", "author": "scholzj", "createdAt": "2020-04-22T21:26:34Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/Session.java", "diffHunk": "@@ -221,8 +223,18 @@ public void handle(Long oldTimerId) {\n                         if (!stopped) {\n                             timerId = null;\n                             boolean isInitialReconcile = oldTimerId == null;\n+                            Timer.Sample reconciliationTimerSample = Timer.start(topicOperator.getMetrics().meterRegistry());", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0NTM1Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413345352", "bodyText": "Doesn't this and the line 233 increment the counter twice in a sinfle recomciliation?", "author": "scholzj", "createdAt": "2020-04-22T21:27:33Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/Session.java", "diffHunk": "@@ -221,8 +223,18 @@ public void handle(Long oldTimerId) {\n                         if (!stopped) {\n                             timerId = null;\n                             boolean isInitialReconcile = oldTimerId == null;\n+                            Timer.Sample reconciliationTimerSample = Timer.start(topicOperator.getMetrics().meterRegistry());\n                             topicOperator.reconcileAllTopics(isInitialReconcile ? \"initial \" : \"periodic \").setHandler(result -> {\n+                                topicOperator.getPeriodicReconciliationsCounter().increment();\n+                                if (result.failed()) {\n+                                    topicOperator.incrementFailedReconciliationsCounter();\n+                                    reconciliationTimerSample.stop(topicOperator.getReconciliationsTimer());\n+                                } else {\n+                                    topicOperator.incrementSuccessfulReconciliationsCounter();\n+                                    reconciliationTimerSample.stop(topicOperator.getReconciliationsTimer());\n+                                }\n                                 if (isInitialReconcile) {\n+                                    topicOperator.incrementSuccessfulReconciliationsCounter();", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUzMDE1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413530150", "bodyText": "I think it does. I had a problem the count did not match. For example startedReconciliations=5, periodicalReconciliations=7, sucesfulReconciliations=11. I have no idea where is the one lost reconciliation.", "author": "sknot-rh", "createdAt": "2020-04-23T05:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0NTM1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM0NTg0NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413345845", "bodyText": "The time can be probably stopped only once outside the if-else, or?", "author": "scholzj", "createdAt": "2020-04-22T21:28:28Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/Session.java", "diffHunk": "@@ -221,8 +223,18 @@ public void handle(Long oldTimerId) {\n                         if (!stopped) {\n                             timerId = null;\n                             boolean isInitialReconcile = oldTimerId == null;\n+                            Timer.Sample reconciliationTimerSample = Timer.start(topicOperator.getMetrics().meterRegistry());\n                             topicOperator.reconcileAllTopics(isInitialReconcile ? \"initial \" : \"periodic \").setHandler(result -> {\n+                                topicOperator.getPeriodicReconciliationsCounter().increment();\n+                                if (result.failed()) {\n+                                    topicOperator.incrementFailedReconciliationsCounter();\n+                                    reconciliationTimerSample.stop(topicOperator.getReconciliationsTimer());\n+                                } else {\n+                                    topicOperator.incrementSuccessfulReconciliationsCounter();\n+                                    reconciliationTimerSample.stop(topicOperator.getReconciliationsTimer());", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNTMxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413615313", "bodyText": "I think \"periodic\" is better than \"periodical\"", "author": "tombentley", "createdAt": "2020-04-23T08:25:34Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -357,16 +372,75 @@ public TopicOperator(Vertx vertx, Kafka kafka,\n                          TopicStore topicStore,\n                          Labels labels,\n                          String namespace,\n-                         Config config) {\n+                         Config config,\n+                         MetricsProvider metrics) {\n         this.kafka = kafka;\n         this.k8s = k8s;\n         this.vertx = vertx;\n         this.labels = labels;\n         this.topicStore = topicStore;\n         this.namespace = namespace;\n         this.config = config;\n+        this.metrics = metrics;\n+\n+        initMetrics();\n+    }\n+\n+    public void initMetrics() {\n+        Tags metricTags = Tags.of(Tag.of(\"kind\", \"KafkaTopic\"));\n+\n+        periodicReconciliationsCounter = metrics.counter(METRICS_PREFIX + \"reconciliations.periodical\",", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4MzYzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r415583632", "bodyText": "This needs to be same as https://github.com/strimzi/strimzi-kafka-operator/pull/2737/files#diff-94c2cc18347a188f142d49e8bd0c3753R257", "author": "sknot-rh", "createdAt": "2020-04-27T07:42:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNTMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNzYxMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413617612", "bodyText": "Is this an average? Or just the time for the last reconciliation? We probably need two of these because of the fact that periodic reconciliations (because they reconcile all the topics) will take ~n times longer than event-based reconciliations.", "author": "tombentley", "createdAt": "2020-04-23T08:28:40Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -357,16 +372,75 @@ public TopicOperator(Vertx vertx, Kafka kafka,\n                          TopicStore topicStore,\n                          Labels labels,\n                          String namespace,\n-                         Config config) {\n+                         Config config,\n+                         MetricsProvider metrics) {\n         this.kafka = kafka;\n         this.k8s = k8s;\n         this.vertx = vertx;\n         this.labels = labels;\n         this.topicStore = topicStore;\n         this.namespace = namespace;\n         this.config = config;\n+        this.metrics = metrics;\n+\n+        initMetrics();\n+    }\n+\n+    public void initMetrics() {\n+        Tags metricTags = Tags.of(Tag.of(\"kind\", \"KafkaTopic\"));\n+\n+        periodicReconciliationsCounter = metrics.counter(METRICS_PREFIX + \"reconciliations.periodical\",\n+                \"Number of periodical reconciliations done by the operator\",\n+                metricTags);\n+\n+        reconciliationsCounter = metrics.counter(METRICS_PREFIX + \"reconciliations\",\n+                \"Number of reconciliations done by the operator for individual topics\",\n+                metricTags);\n+\n+        failedReconciliationsCounter = metrics.counter(METRICS_PREFIX + \"reconciliations.failed\",\n+                \"Number of reconciliations done by the operator for individual topics which failed\",\n+                metricTags);\n+\n+        successfulReconciliationsCounter = metrics.counter(METRICS_PREFIX + \"reconciliations.successful\",\n+                \"Number of reconciliations done by the operator for individual topics which were successful\",\n+                metricTags);\n+\n+        topicCounter = metrics.gauge(METRICS_PREFIX + \"resources\",\n+                \"Number of topics the operator sees\",\n+                metricTags);\n+\n+        reconciliationsTimer = metrics.timer(METRICS_PREFIX + \"reconciliations.duration\",\n+                \"The time the reconciliation takes to complete\",", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4NDQxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r415584419", "bodyText": "@scholzj Did you distinguish these?", "author": "sknot-rh", "createdAt": "2020-04-27T07:43:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNzYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4ODA2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r415588067", "bodyText": "That is handled by the Micrometer framework it self. I would need to check what exactly it provides and what we used. I believe it might provide the max time and the average?", "author": "scholzj", "createdAt": "2020-04-27T07:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNzYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYwNDY0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r415604648", "bodyText": "OK, I see. It just seems to measure the time for periodic reconciliations (as Jakub mentioned here), and doesn't cover the reconciliations caused by changes. So the number will make sense, but it also means we have no visibility of the time taken to perform per-topic reconciliation.", "author": "tombentley", "createdAt": "2020-04-27T08:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNzYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxODkxNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413618915", "bodyText": "With these I wonder if it would be better to build this into the Reconciliation class, rather than having to change all these call sites. Wdyt?", "author": "tombentley", "createdAt": "2020-04-23T08:30:18Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/ZkTopicsWatcher.java", "diffHunk": "@@ -84,8 +84,11 @@ void start(Zk zk) {\n                     LogContext logContext = LogContext.zkWatch(TOPICS_ZNODE, \"-\" + topicName);\n                     topicOperator.onTopicDeleted(logContext, new TopicName(topicName)).setHandler(ar -> {\n                         if (ar.succeeded()) {\n+                            topicOperator.decrementTopicCounter();\n+                            topicOperator.incrementSuccessfulReconciliationsCounter();\n                             LOGGER.debug(\"{}: Success responding to deletion of topic {}\", logContext, topicName);\n                         } else {\n+                            topicOperator.incrementFailedReconciliationsCounter();", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4NDc2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r415584767", "bodyText": "Maybe it would. Should I do that in this PR?", "author": "sknot-rh", "createdAt": "2020-04-27T07:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxODkxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU4NjA0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r415586043", "bodyText": "By all means give it a try and see how it works out. You can always revert/drop that commit.", "author": "tombentley", "createdAt": "2020-04-27T07:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxODkxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyMDQxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r413620419", "bodyText": "Rather than adding specific tests for the metrics, did you consider adding assertions on the metrics to the existing tests in TOT? That would provide better coverage.", "author": "tombentley", "createdAt": "2020-04-23T08:32:16Z", "path": "topic-operator/src/test/java/io/strimzi/operator/topic/TopicOperatorTest.java", "diffHunk": "@@ -995,6 +1008,90 @@ public void testReconcileAllTopics_listMapsFails(VertxTestContext context) {\n         }));\n     }\n \n+    @Test\n+    public void testFailedReconcileMetrics(VertxTestContext context) throws InterruptedException {", "originalCommit": "8b3417e5ec2496d4a864e60314c3dcf44a06b65c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ce6f8b0abb7cf5bd847a10f3c173d0d73237700", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9ce6f8b0abb7cf5bd847a10f3c173d0d73237700", "message": "move metrics stuff to reconciliation\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-27T10:31:41Z", "type": "forcePushed"}, {"oid": "93455b94d9d3f4895973dc7ad7bd18b449cc08ab", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/93455b94d9d3f4895973dc7ad7bd18b449cc08ab", "message": "tests vol2\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-28T15:08:57Z", "type": "forcePushed"}, {"oid": "c84419099f979640653bcb8cea45fbdf089da986", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c84419099f979640653bcb8cea45fbdf089da986", "message": "tests vol2\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-28T16:26:39Z", "type": "forcePushed"}, {"oid": "42f6fc315d2dc60eae92184a93f04cfc58421e1f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/42f6fc315d2dc60eae92184a93f04cfc58421e1f", "message": "tests vol2\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-28T17:28:53Z", "type": "forcePushed"}, {"oid": "923172814b67d84863e13c492b8fbae2f49fbd61", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/923172814b67d84863e13c492b8fbae2f49fbd61", "message": "tests vol2\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-28T18:03:26Z", "type": "forcePushed"}, {"oid": "20e9ebf99d616f0a4892360fb7a6913aff529ca5", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/20e9ebf99d616f0a4892360fb7a6913aff529ca5", "message": "flaky\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-29T06:53:19Z", "type": "forcePushed"}, {"oid": "4c454409f7ee3eff143951f59b6a3983e9bff389", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4c454409f7ee3eff143951f59b6a3983e9bff389", "message": "flaky\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-29T06:55:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwODM3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r417408373", "bodyText": "Do we rly needs this for getExpectedTopics().size() ?", "author": "Frawless", "createdAt": "2020-04-29T15:31:22Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -316,6 +332,21 @@ void setupEnvironment() throws InterruptedException {\n         kafkaExporterMetricsData = MetricsUtils.collectKafkaExporterPodsMetrics(CLUSTER_NAME);\n         kafkaMirrorMaker2MetricsData = MetricsUtils.collectKafkaMirrorMaker2PodsMetrics(MIRROR_MAKER_CLUSTER);\n         userOperatorMetricsData = MetricsUtils.collectUserOperatorPodMetrics(CLUSTER_NAME);\n+        topicOperatorMetricsData = MetricsUtils.collectTopicOperatorPodMetrics(CLUSTER_NAME);\n         clusterOperatorMetricsData = MetricsUtils.collectClusterOperatorPodMetrics();\n     }\n+    \n+    private List<String> getExpectedTopics() {", "originalCommit": "b614665c596a86037b44df8b4aed8849b4a090c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyMjQxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r417422413", "bodyText": "I added it because someone can say I am just making up it should be x.", "author": "sknot-rh", "createdAt": "2020-04-29T15:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwODM3Mw=="}], "type": "inlineReview"}, {"oid": "8e932356581959a66642eda804418116e05dea23", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8e932356581959a66642eda804418116e05dea23", "message": "TO metrics\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "27b2136b8033a9c510e078706619d6550c530b60", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/27b2136b8033a9c510e078706619d6550c530b60", "message": "fix tests\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "9515b77f44e57fb8ab9d4123d3db200d1fcffbad", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9515b77f44e57fb8ab9d4123d3db200d1fcffbad", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "fa514424e6de8458afd10a554a31576255afce1d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fa514424e6de8458afd10a554a31576255afce1d", "message": "move metrics stuff to reconciliation\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "a3c24fda6188ee4eeb87f8ab54042f2eb231b00f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a3c24fda6188ee4eeb87f8ab54042f2eb231b00f", "message": "silly me\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "416a6897164ce13b5fc036f97fe47475fccd2323", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/416a6897164ce13b5fc036f97fe47475fccd2323", "message": "I love flaky tests so much\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "0f3ed3ea0e99efd4e4832245a88763bde8eda820", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0f3ed3ea0e99efd4e4832245a88763bde8eda820", "message": "flaky\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "message": "flaky\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "commit"}, {"oid": "5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "message": "flaky\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-04-30T13:20:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk2OTgzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r418969835", "bodyText": "This looks wrong to me -> In the other operators:\n\nEvery periodic reconciliation increases the periodic counter + triggers reconciliation for every resource (topic in this case)\nEvery reconcilition for a prticular topic triggers its own counter\n\nThe sucess and failure counters as well as timers are counted only against the particular topics reconciliation. Not against the periodic reconciliations. So I don't think you should increment here the failed and success counters.", "author": "scholzj", "createdAt": "2020-05-02T15:13:11Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/Session.java", "diffHunk": "@@ -223,6 +224,12 @@ public void handle(Long oldTimerId) {\n                             timerId = null;\n                             boolean isInitialReconcile = oldTimerId == null;\n                             topicOperator.reconcileAllTopics(isInitialReconcile ? \"initial \" : \"periodic \").setHandler(result -> {\n+                                topicOperator.getPeriodicReconciliationsCounter().increment();\n+                                if (result.failed()) {\n+                                    topicOperator.incrementFailedReconciliationsCounter();", "originalCommit": "5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDE2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r418970162", "bodyText": "I don't really understand the TO much. But do we have to do this in these onTopic* methods? Seems a but fragile to me and must be hard to test. Isn't there some method which is calling these where you can set it?", "author": "scholzj", "createdAt": "2020-05-02T15:16:10Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/TopicOperator.java", "diffHunk": "@@ -700,7 +774,7 @@ void enqueue(Handler<Void> event) {\n     /** Called when a topic znode is deleted in ZK */\n     Future<Void> onTopicDeleted(LogContext logContext, TopicName topicName) {\n         return executeWithTopicLockHeld(logContext, topicName,\n-            new Reconciliation(\"onTopicDeleted\") {\n+            new Reconciliation(\"onTopicDeleted\", Timer.start(metrics.meterRegistry())) {", "originalCommit": "5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDQxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2874#discussion_r418970413", "bodyText": "This looks a bit fragile, but I assume it works. The other operator set the topic counter in the reconcileAll method which easily gets the count of all topics with every periodic reconciliation. But not sure that is any easier or harder in the TO.", "author": "scholzj", "createdAt": "2020-05-02T15:18:28Z", "path": "topic-operator/src/main/java/io/strimzi/operator/topic/ZkTopicsWatcher.java", "diffHunk": "@@ -84,6 +84,7 @@ void start(Zk zk) {\n                     LogContext logContext = LogContext.zkWatch(TOPICS_ZNODE, \"-\" + topicName);\n                     topicOperator.onTopicDeleted(logContext, new TopicName(topicName)).setHandler(ar -> {\n                         if (ar.succeeded()) {\n+                            topicOperator.decrementTopicCounter();", "originalCommit": "5c8d0e9ce028c06fbb6040ac9df2de9dbbdd418c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e890de14ea552b0fc4f61a0b37aa97925ca568e9", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e890de14ea552b0fc4f61a0b37aa97925ca568e9", "message": "review comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-05-04T06:30:18Z", "type": "commit"}, {"oid": "ecd7bb2c000f72822162f57700234793a240722f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ecd7bb2c000f72822162f57700234793a240722f", "message": "better place for topic count\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-05-04T08:36:18Z", "type": "commit"}, {"oid": "ecd7bb2c000f72822162f57700234793a240722f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ecd7bb2c000f72822162f57700234793a240722f", "message": "better place for topic count\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-05-04T08:36:18Z", "type": "forcePushed"}, {"oid": "93780678e8c1a648f0899db31e2c3315bf74128f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/93780678e8c1a648f0899db31e2c3315bf74128f", "message": "fix ST\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-05-04T14:28:48Z", "type": "forcePushed"}, {"oid": "d3ba3732c18a5988893d92a7c8a0b5953a74da1e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d3ba3732c18a5988893d92a7c8a0b5953a74da1e", "message": "fix ST\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-05-04T15:22:07Z", "type": "commit"}, {"oid": "d3ba3732c18a5988893d92a7c8a0b5953a74da1e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d3ba3732c18a5988893d92a7c8a0b5953a74da1e", "message": "fix ST\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-05-04T15:22:07Z", "type": "forcePushed"}]}