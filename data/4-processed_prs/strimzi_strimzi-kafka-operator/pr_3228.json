{"pr_number": 3228, "pr_title": "ST: add option to deploy CO not jsut via yaml bundle but by OLM for all tests", "pr_createdAt": "2020-06-23T08:13:00Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228", "timeline": [{"oid": "3aa0b6ebf6ae65e38048f4a3b435986ca7cc2193", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3aa0b6ebf6ae65e38048f4a3b435986ca7cc2193", "message": "Add posibility to run all tests again CO installed by OLM\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-06-23T08:03:01Z", "type": "commit"}, {"oid": "8afe06f2bdbbcb5bb55d53675d5cbce9987a7bba", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8afe06f2bdbbcb5bb55d53675d5cbce9987a7bba", "message": "Minor fixes\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-06-23T08:03:12Z", "type": "commit"}, {"oid": "c6b91c2685621a7ed41d1c7bd610d6b3b6e66633", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c6b91c2685621a7ed41d1c7bd610d6b3b6e66633", "message": "Rebase fix\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-06-23T08:06:00Z", "type": "commit"}, {"oid": "18c33bbe85d6add7c24517a3ccd9d180357a9d45", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/18c33bbe85d6add7c24517a3ccd9d180357a9d45", "message": "fixup! Rebase fix\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-06-23T16:10:36Z", "type": "commit"}, {"oid": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8461d0716b247db5f1ac64c45bfaeb5d256b8b3d", "message": "Cleanup\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-06-24T08:21:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNDMyNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#discussion_r445104324", "bodyText": "Did you mean to leave this commented out?", "author": "samuel-hawker", "createdAt": "2020-06-24T18:55:57Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/BaseST.java", "diffHunk": "@@ -165,36 +197,58 @@ protected void teardownEnvForOperator() {\n         cluster.deleteNamespaces();\n     }\n \n+    /**\n+     * Recreate namespace and CO after test failure\n+     * @param coNamespace namespace where CO will be deployed to\n+     * @param operationTimeout timeout for CO operations\n+     * @param reconciliationInterval CO reconciliation interval\n+     */\n+    protected void recreateTestEnv(String coNamespace, long operationTimeout, long reconciliationInterval) throws Exception {\n+        recreateTestEnv(coNamespace, Collections.singletonList(coNamespace), operationTimeout, reconciliationInterval);\n+    }\n+\n+    /**\n+     * Recreate namespace and CO after test failure\n+     * @param coNamespace namespace where CO will be deployed to\n+     * @param bindingsNamespaces array of namespaces where Bindings should be deployed to.\n+     */\n+    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces) throws Exception {\n+        recreateTestEnv(coNamespace, bindingsNamespaces, Constants.CO_OPERATION_TIMEOUT_DEFAULT, Constants.RECONCILIATION_INTERVAL);\n+    }\n+\n     /**\n      * Recreate namespace and CO after test failure\n      * @param coNamespace namespace where CO will be deployed to\n      * @param bindingsNamespaces array of namespaces where Bindings should be deployed to.\n+     * @param operationTimeout timeout for CO operations\n      */\n-    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces) throws InterruptedException {\n-        recreateTestEnv(coNamespace, bindingsNamespaces, Constants.CO_OPERATION_TIMEOUT_DEFAULT);\n+    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces, long operationTimeout) throws Exception {\n+        recreateTestEnv(coNamespace, bindingsNamespaces, operationTimeout, Constants.RECONCILIATION_INTERVAL);\n     }\n \n     /**\n      * Recreate namespace and CO after test failure\n      * @param coNamespace namespace where CO will be deployed to\n      * @param bindingsNamespaces array of namespaces where Bindings should be deployed to.\n      * @param operationTimeout timeout for CO operations\n+     * @param reconciliationInterval CO reconciliation interval\n      */\n-    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces, long operationTimeout) {\n+    protected void recreateTestEnv(String coNamespace, List<String> bindingsNamespaces, long operationTimeout, long reconciliationInterval) throws Exception {\n         ResourceManager.deleteMethodResources();\n         ResourceManager.deleteClassResources();\n \n         KubeClusterResource.getInstance().deleteClusterOperatorInstallFiles();\n         KubeClusterResource.getInstance().deleteNamespaces();\n \n-        KubeClusterResource.getInstance().createNamespaces(coNamespace, bindingsNamespaces);\n-        KubeClusterResource.getInstance().applyClusterOperatorInstallFiles();\n-\n-        ResourceManager.setClassResources();\n-\n-        applyRoleBindings(coNamespace, bindingsNamespaces);\n-        // 050-Deployment\n-        KubernetesResource.clusterOperator(coNamespace, operationTimeout).done();\n+//        KubeClusterResource.getInstance().createNamespaces(coNamespace, bindingsNamespaces);\n+//        KubeClusterResource.getInstance().applyClusterOperatorInstallFiles();\n+//\n+//        ResourceManager.setClassResources();\n+//\n+//        applyRoleBindings(coNamespace, bindingsNamespaces);\n+//        // 050-Deployment", "originalCommit": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExNzI1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#discussion_r445117250", "bodyText": "Good catch, I forgot to remove it :)", "author": "Frawless", "createdAt": "2020-06-24T19:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNDMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTIyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#discussion_r445105228", "bodyText": "Isnt the default namespace openshift-operators ?", "author": "samuel-hawker", "createdAt": "2020-06-24T18:57:32Z", "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/Kubectl.java", "diffHunk": "@@ -32,6 +32,11 @@ public String defaultNamespace() {\n         return \"default\";\n     }\n \n+    @Override\n+    public String defaultOlmNamespace() {\n+        return \"operators\";", "originalCommit": "8461d0716b247db5f1ac64c45bfaeb5d256b8b3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExOTU1Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3228#discussion_r445119553", "bodyText": "TBH I am not sure. I just read some blog about operatorhub on Kubernetes but I didn't try it. Now I am looking at Strimzi manifests available at https://operatorhub.io/operator/strimzi-kafka-operator and according to this link it should be operators for Kubernetes.", "author": "Frawless", "createdAt": "2020-06-24T19:24:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTIyOA=="}], "type": "inlineReview"}, {"oid": "fda66b5d5bd93b9f0685eefa224d431fd2b806bd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fda66b5d5bd93b9f0685eefa224d431fd2b806bd", "message": "Remove forgoten comment\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-06-25T10:23:12Z", "type": "commit"}]}