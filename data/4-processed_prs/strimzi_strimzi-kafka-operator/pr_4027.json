{"pr_number": 4027, "pr_title": "Audience check", "pr_createdAt": "2020-12-01T14:11:34Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027", "timeline": [{"oid": "6be16e049b71b4388c09b5faa14a4a25559fcc8b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6be16e049b71b4388c09b5faa14a4a25559fcc8b", "message": "Use strimzi-kafka-oauth 0.7.0 RC1 rather than a nightly SNAPSHOT build\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-12-05T15:53:56Z", "type": "forcePushed"}, {"oid": "4299b173381d52465d3880e207c575a36c9eeb4e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4299b173381d52465d3880e207c575a36c9eeb4e", "message": "Fix docs issues found during ./azure/scripts/checs-dock.sh\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-01-17T09:22:06Z", "type": "forcePushed"}, {"oid": "676e71b4483ccf7a77ba834a21b429231a3f9523", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/676e71b4483ccf7a77ba834a21b429231a3f9523", "message": "Add audience check support to `oauth` authentication\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>\n\nUpdate CRDs\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>\n\nFix docs issues found during ./azure/scripts/checs-dock.sh\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-04T09:55:19Z", "type": "forcePushed"}, {"oid": "0027f102e9e010b0dc83c2c0d537ed864d12df42", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0027f102e9e010b0dc83c2c0d537ed864d12df42", "message": "Add audience check support to `oauth` authentication\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>\n\nUpdate CRDs\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>\n\nFix docs issues found during ./azure/scripts/checs-dock.sh\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-09T06:21:24Z", "type": "commit"}, {"oid": "0027f102e9e010b0dc83c2c0d537ed864d12df42", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0027f102e9e010b0dc83c2c0d537ed864d12df42", "message": "Add audience check support to `oauth` authentication\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>\n\nUpdate CRDs\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>\n\nFix docs issues found during ./azure/scripts/checs-dock.sh\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-09T06:21:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjkzODU0MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r572938540", "bodyText": "So, this checks that the aud == clientID? If so, should we make it clear here in the description? For me this is a bit cryptic right now ... I know audience is in the token. But it is not clear what is it checked for.\nI noticed this is explained in one of the other sections. Bu might be worth adding it here as well?", "author": "scholzj", "createdAt": "2021-02-09T14:39:34Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/listener/KafkaListenerAuthenticationOAuth.java", "diffHunk": "@@ -105,6 +106,17 @@ public void setCheckIssuer(boolean checkIssuer) {\n         this.checkIssuer = checkIssuer;\n     }\n \n+    @Description(\"Enable or disable audience checking. If audience checking is enabled the `clientId` also has to be configured. \" +", "originalCommit": "0027f102e9e010b0dc83c2c0d537ed864d12df42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjk2MzYwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r572963600", "bodyText": "If audience checking is enabled the clientId also has to be configured.\n\nConfigured where? The documentation should be explicit.", "author": "tombentley", "createdAt": "2021-02-09T15:06:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjkzODU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzUzNDg1OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r573534859", "bodyText": "Enable or disable audience checking. Audience checks identify the recipients of tokens. If audience checking is enabled, the Kafka broker will reject tokens that do not have its clientId in their aud (audience) claim. Default value is false.", "author": "PaulRMellor", "createdAt": "2021-02-10T08:32:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjkzODU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzU4MTY0NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r573581645", "bodyText": "If audience checking is enabled the clientId also has to be configured.\n\nConfigured where? The documentation should be explicit.\n\nIt's a config attribute of 'oauth' authentication called clientId at the same level as validIssuerId, userNameClaim, and checkAudience. Not sure how to make it more clear since the generated docs have these in the same set of config attributes, alphabetically sorted. When you read this description in the generated KafkaCR documentation under checkAudience attribute, you can just scroll a bit further to read about clientId config attribute. Is there a way to create links from the description to the attribute entry in the docs?", "author": "mstruk", "createdAt": "2021-02-10T09:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjkzODU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzUzNTMzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r573535330", "bodyText": "If your authorization server provides an aud (audience) claim, and you want to enforce an audience check, set checkAudience to true. Audience checks identify the recipients of tokens. As a result, the Kafka broker will reject tokens that do not have its clientId in their aud claim. Default is false.", "author": "PaulRMellor", "createdAt": "2021-02-10T08:33:35Z", "path": "documentation/modules/oauth/proc-oauth-authentication-broker-config.adoc", "diffHunk": "@@ -117,22 +117,24 @@ Depending on how you apply OAuth 2.0 authentication, and the type of authorizati\n     type: oauth\n     # ...\n     checkIssuer: false <1>\n-    fallbackUserNameClaim: client_id <2>\n-    fallbackUserNamePrefix: client-account- <3>\n-    validTokenType: bearer <4>\n-    userInfoEndpointUri: __https://OAUTH-SERVER-ADDRESS/auth/realms/external/protocol/openid-connect/userinfo__ <5>\n-    enableOauthBearer: false <6>\n-    enablePlain: true <7>\n-    tokenEndpointUri: __https://OAUTH-SERVER-ADDRESS/auth/realms/external/protocol/openid-connect/token__ <8>\n+    checkAudience: true <2>\n+    fallbackUserNameClaim: client_id <3>\n+    fallbackUserNamePrefix: client-account- <4>\n+    validTokenType: bearer <5>\n+    userInfoEndpointUri: __https://OAUTH-SERVER-ADDRESS/auth/realms/external/protocol/openid-connect/userinfo__ <6>\n+    enableOauthBearer: false <7>\n+    enablePlain: true <8>\n+    tokenEndpointUri: __https://OAUTH-SERVER-ADDRESS/auth/realms/external/protocol/openid-connect/token__ <9>\n ----\n <1> If your authorization server does not provide an `iss` claim, it is not possible to perform an issuer check. In this situation, set `checkIssuer` to `false` and do not specify a `validIssuerUri`. Default is `true`.\n-<2> An authorization server may not provide a single attribute to identify both regular users and clients. When a client authenticates in its own name, the server might provide a _client ID_. When a user authenticates using a username and password, to obtain a refresh token or an access token, the server might provide a _username_ attribute in addition to a client ID. Use this fallback option to specify the username claim (attribute) to use if a primary user ID attribute is not available.\n-<3> In situations where `fallbackUserNameClaim` is applicable, it may also be necessary to prevent name collisions between the values of the username claim, and those of the fallback username claim. Consider a situation where a client called `producer` exists, but also a regular user called `producer` exists. In order to differentiate between the two, you can use this property to add a prefix to the user ID of the client.\n-<4> (Only applicable when using `introspectionEndpointUri`) Depending on the authorization server you are using, the introspection endpoint may or may not return the _token type_ attribute, or it may contain different values. You can specify a valid token type value that the response from the introspection endpoint has to contain.\n-<5> (Only applicable when using `introspectionEndpointUri`) The authorization server may be configured or implemented in such a way to not provide any identifiable information in an Introspection Endpoint response. In order to obtain the user ID, you can configure the URI of the `userinfo` endpoint as a fallback. The `userNameClaim`, `fallbackUserNameClaim`, and `fallbackUserNamePrefix` settings are applied to the response of `userinfo` endpoint.\n-<6> Set this to `false` in order to disable the SASL_OAUTHBEARER mechanism on the listener. At least one of SASL_PLAIN or SASL_OAUTHBEARER has to be enabled. Default is `true`.\n-<7> Set this to `true` in order to enable the SASL_PLAIN mechanism on the listener, which is supported by all clients on all platforms. The Kafka client has to enable the SASL_PLAIN mechanism and set the `username` and the `password`. This mechanism can be used to authenticate either by using the OAuth access token, or by using the OAuth clientId and secret (client credentials). If the client sets `username` to `access-token` then the password is interpreted as access token on the server, otherwise the user is interpreted as the clientId, and password as the client secret. Default is `false`.\n-<8> This has to be set to support the client credentials authentication when `enablePlain` is set to true, as described in previous point.\n+<2> If your authorization server provides `aud` claim, and you want to enforce audience check, set this to `true`. As a result, the Kafka broker will reject tokens that do not have its `clientId` in their `aud`. Default is `false`.", "originalCommit": "0027f102e9e010b0dc83c2c0d537ed864d12df42", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzU4NjM4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r573586387", "bodyText": "Ah, so I was confused because I thought this must be a Kafka client id. It makes more sense now.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Description(\"Enable or disable audience checking. If audience checking is enabled the `clientId` also has to be configured. \" +\n          \n          \n            \n                @Description(\"Enable or disable audience checking. If audience checking is enabled the OAuth Client ID also has to be configured via the `clientId` property. \" +", "author": "tombentley", "createdAt": "2021-02-10T09:49:22Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/listener/KafkaListenerAuthenticationOAuth.java", "diffHunk": "@@ -105,6 +106,17 @@ public void setCheckIssuer(boolean checkIssuer) {\n         this.checkIssuer = checkIssuer;\n     }\n \n+    @Description(\"Enable or disable audience checking. If audience checking is enabled the `clientId` also has to be configured. \" +", "originalCommit": "0027f102e9e010b0dc83c2c0d537ed864d12df42", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "da7edee94173f5ff7d982c9e7cf29e1aa9cf98a8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/da7edee94173f5ff7d982c9e7cf29e1aa9cf98a8", "message": "Update api/src/main/java/io/strimzi/api/kafka/model/listener/KafkaListenerAuthenticationOAuth.java\n\nCo-authored-by: Tom Bentley <tombentley@users.noreply.github.com>\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-10T10:02:08Z", "type": "commit"}, {"oid": "2bf6d9f1f2e770ed34bfdd4fda407ac003ded91e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2bf6d9f1f2e770ed34bfdd4fda407ac003ded91e", "message": "Address PR comments - clarify the docs\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-10T10:24:57Z", "type": "commit"}, {"oid": "2bf6d9f1f2e770ed34bfdd4fda407ac003ded91e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2bf6d9f1f2e770ed34bfdd4fda407ac003ded91e", "message": "Address PR comments - clarify the docs\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-10T10:24:57Z", "type": "forcePushed"}, {"oid": "d5c42ca4c61222c03335590cf49708efcf3f55b2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d5c42ca4c61222c03335590cf49708efcf3f55b2", "message": "Fix forgotten files generated by the build\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-10T14:30:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM3MDI5OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4027#discussion_r574370298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"If audience checking is enabled the OAuth Client ID also has to be configured via the `clientId` property. \" +\n          \n          \n            \n                        \"If audience checking is enabled, the OAuth Client ID also has to be configured using the `clientId` property. \" +", "author": "PaulRMellor", "createdAt": "2021-02-11T09:55:07Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/listener/KafkaListenerAuthenticationOAuth.java", "diffHunk": "@@ -105,6 +106,19 @@ public void setCheckIssuer(boolean checkIssuer) {\n         this.checkIssuer = checkIssuer;\n     }\n \n+    @Description(\"Enable or disable audience checking. Audience checks identify the recipients of tokens. \" +\n+            \"If audience checking is enabled the OAuth Client ID also has to be configured via the `clientId` property. \" +", "originalCommit": "d5c42ca4c61222c03335590cf49708efcf3f55b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6b42acf521728bd346033103c0cbe4c90cbc76b5", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6b42acf521728bd346033103c0cbe4c90cbc76b5", "message": "Update api/src/main/java/io/strimzi/api/kafka/model/listener/KafkaListenerAuthenticationOAuth.java\n\nCo-authored-by: PaulRMellor <47596553+PaulRMellor@users.noreply.github.com>\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-12T10:43:58Z", "type": "commit"}, {"oid": "eba13862772c7428d64c81a2b2a485209d92ae88", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/eba13862772c7428d64c81a2b2a485209d92ae88", "message": "Fix the files generated by the build\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-12T10:43:58Z", "type": "commit"}, {"oid": "eba13862772c7428d64c81a2b2a485209d92ae88", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/eba13862772c7428d64c81a2b2a485209d92ae88", "message": "Fix the files generated by the build\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-12T10:43:58Z", "type": "forcePushed"}, {"oid": "b0e67d1fcb23faac7a28477687242a61274986e0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b0e67d1fcb23faac7a28477687242a61274986e0", "message": "Add missing helm file\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2021-02-12T12:24:37Z", "type": "commit"}]}