{"pr_number": 2737, "pr_title": "Add more metrics to our cluster and user operators", "pr_createdAt": "2020-03-23T00:26:24Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzOTY1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396239657", "bodyText": "if we could assume that strimzi.reconciliations is a sort of root for the reconciliations related metrics, should the others be strimzi.reconciliations.periodical and not the other way around?", "author": "ppatierno", "createdAt": "2020-03-23T06:49:18Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/AbstractOperator.java", "diffHunk": "@@ -59,10 +64,46 @@\n     protected final S resourceOperator;\n     private final String kind;\n \n+    private final MeterRegistry metrics;\n+    private final Counter periodicReconciliationsCounter;\n+    private final Counter reconciliationsCounter;\n+    private final Counter failedReconciliationsCounter;\n+    private final Counter successfulReconciliationsCounter;\n+    private final AtomicInteger resourceCounter;\n+\n     public AbstractOperator(Vertx vertx, String kind, S resourceOperator) {\n         this.vertx = vertx;\n         this.kind = kind;\n         this.resourceOperator = resourceOperator;\n+\n+        // Setup metrics\n+        metrics = BackendRegistries.getDefaultNow();\n+        \n+        periodicReconciliationsCounter = Counter.builder(\"strimzi.periodical.reconcilitions\")", "originalCommit": "8ca665888d6c50bc786afcb76d2f96a04425d64d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0MDE4OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396240188", "bodyText": "isn't it enough one failedReconciliationsCounter.increment(); call out of this if and elseif statements?", "author": "ppatierno", "createdAt": "2020-03-23T06:51:14Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/AbstractOperator.java", "diffHunk": "@@ -259,15 +303,25 @@ public void accept(KubernetesClientException e) {\n      */\n     private void handleResult(Reconciliation reconciliation, AsyncResult<Void> result) {\n         if (result.succeeded()) {\n+            successfulReconciliationsCounter.increment();\n             log.info(\"{}: reconciled\", reconciliation);\n         } else {\n             Throwable cause = result.cause();\n             if (cause instanceof InvalidConfigParameterException) {\n+                failedReconciliationsCounter.increment();\n                 log.warn(\"{}: Failed to reconcile {}\", reconciliation, cause.getMessage());\n             } else if (!(cause instanceof UnableToAcquireLockException)) {\n+                failedReconciliationsCounter.increment();", "originalCommit": "8ca665888d6c50bc786afcb76d2f96a04425d64d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5ODk4Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396298983", "bodyText": "No, because I do not think we should report when the reconciliation fails to obtain a lock as a failure.", "author": "scholzj", "createdAt": "2020-03-23T09:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0MDE4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5NzQwMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r396297401", "bodyText": "Typo in multiple locations s/reconcilitions/reconciliations", "author": "sknot-rh", "createdAt": "2020-03-23T09:01:51Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/AbstractOperator.java", "diffHunk": "@@ -59,10 +64,46 @@\n     protected final S resourceOperator;\n     private final String kind;\n \n+    private final MeterRegistry metrics;\n+    private final Counter periodicReconciliationsCounter;\n+    private final Counter reconciliationsCounter;\n+    private final Counter failedReconciliationsCounter;\n+    private final Counter successfulReconciliationsCounter;\n+    private final AtomicInteger resourceCounter;\n+\n     public AbstractOperator(Vertx vertx, String kind, S resourceOperator) {\n         this.vertx = vertx;\n         this.kind = kind;\n         this.resourceOperator = resourceOperator;\n+\n+        // Setup metrics\n+        metrics = BackendRegistries.getDefaultNow();\n+        \n+        periodicReconciliationsCounter = Counter.builder(\"strimzi.periodical.reconcilitions\")\n+                .description(\"Number of periodical reconciliations done by the operator\")\n+                .tag(\"kind\", kind())\n+                .register(metrics);\n+\n+        reconciliationsCounter = Counter.builder(\"strimzi.reconcilitions\")", "originalCommit": "8ca665888d6c50bc786afcb76d2f96a04425d64d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c2aeebc50b8d1a71d4bbd769b42f9fb39a6f25b1", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c2aeebc50b8d1a71d4bbd769b42f9fb39a6f25b1", "message": "Review comments + timer\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-03-27T23:34:45Z", "type": "forcePushed"}, {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "message": "Add more metrics to our operators\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCHANGELOG.md\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix checkstyleL\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nReview comments + timer\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd Connector metrics + Add MetricsProvider to mock metrics in tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nRemove histograms and quantiles, finish dashabord, add Prometheus integration (credit Standa)\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix imports\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCleanup metrics setup not needed when we now use mocks for UTs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-01T00:02:22Z", "type": "commit"}, {"oid": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "message": "Add more metrics to our operators\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCHANGELOG.md\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix checkstyleL\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nReview comments + timer\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd Connector metrics + Add MetricsProvider to mock metrics in tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nRemove histograms and quantiles, finish dashabord, add Prometheus integration (credit Standa)\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nFix imports\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd tests\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nCleanup metrics setup not needed when we now use mocks for UTs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nAdd docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-01T00:02:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTg4Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r401411883", "bodyText": "Do we want to say something in the introduction to this procedure about service and pod metrics data? Examples?", "author": "PaulRMellor", "createdAt": "2020-04-01T07:35:48Z", "path": "documentation/modules/proc-metrics-deploying-prometheus.adoc", "diffHunk": "@@ -29,7 +29,9 @@ On MacOS, use:\n [source,shell,subs=\"+quotes,attributes\"]\n sed -i '' 's/namespace: .*/namespace: _my-namespace_/' prometheus.yaml\n \n-. Edit the `ServiceMonitor` resource in `strimzi-service-monitor.yaml` to define Prometheus jobs that will scrape the metrics data.", "originalCommit": "9078507933a6de4dbb0bc19dea13f3cad3d2aef8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "75bdeab8562442f55a0eb995a2b666bfbfe6992c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/75bdeab8562442f55a0eb995a2b666bfbfe6992c", "message": "Add Javadoc\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-01T07:54:26Z", "type": "commit"}, {"oid": "fe0e7d40c6fc38e2130109c7545c305d4ec47c4e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fe0e7d40c6fc38e2130109c7545c305d4ec47c4e", "message": "Improve the docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-01T11:04:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzMzY0OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r401633649", "bodyText": "Type \"Mircometer\" -> \"Micrometer\"", "author": "tomaley", "createdAt": "2020-04-01T13:54:28Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/MicrometerMetricsProvider.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.common;\n+\n+import io.micrometer.core.instrument.Counter;\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+import io.micrometer.core.instrument.Tags;\n+import io.micrometer.core.instrument.Timer;\n+import io.vertx.micrometer.backends.BackendRegistries;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+/**\n+ * Wraps creation of Micrometer metrics.\n+ */\n+public class MicrometerMetricsProvider implements MetricsProvider {\n+    private final MeterRegistry metrics;\n+\n+    /**\n+     * Constructor of the Micrometer metrics provider\n+     */\n+    public MicrometerMetricsProvider() {\n+        this.metrics = BackendRegistries.getDefaultNow();\n+    }\n+\n+    /**\n+     * Returns the Mircometer MeterRegistry with all metrics", "originalCommit": "fe0e7d40c6fc38e2130109c7545c305d4ec47c4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c67c4224dab634af03f8d689dbf91027996eb73a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c67c4224dab634af03f8d689dbf91027996eb73a", "message": "Fix typo in JavaDocs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-01T15:44:47Z", "type": "commit"}, {"oid": "ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e", "message": "Use constant in the metrics names\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-02T08:47:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NDc2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r402354766", "bodyText": "I assume it's the number of reconciliation started due to added, updated or deleted CRs. Maybe just \"Started\" is not enough to understand, at least for me. Something around \"CRs triggered Reconciliation per hour\" ... but I have not strong opinion, just that \"Started\" doesn't clarify the nature.", "author": "ppatierno", "createdAt": "2020-04-02T14:25:35Z", "path": "examples/metrics/grafana-dashboards/strimzi-operators.json", "diffHunk": "@@ -0,0 +1,1705 @@\n+{\n+  \"annotations\": {\n+    \"list\": [\n+      {\n+        \"builtIn\": 1,\n+        \"datasource\": \"-- Grafana --\",\n+        \"enable\": true,\n+        \"hide\": true,\n+        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n+        \"name\": \"Annotations & Alerts\",\n+        \"type\": \"dashboard\"\n+      }\n+    ]\n+  },\n+  \"editable\": true,\n+  \"gnetId\": null,\n+  \"graphTooltip\": 0,\n+  \"id\": 5,\n+  \"links\": [],\n+  \"panels\": [\n+    {\n+      \"collapsed\": false,\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 0\n+      },\n+      \"id\": 4,\n+      \"panels\": [],\n+      \"title\": \"Custom Resources\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 0,\n+        \"y\": 1\n+      },\n+      \"id\": 2,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"Kafka\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Kafka CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 3,\n+        \"y\": 1\n+      },\n+      \"id\": 11,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaConnect\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Connect CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 6,\n+        \"y\": 1\n+      },\n+      \"id\": 14,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaConnectS2I\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Connect S2I CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 6,\n+        \"w\": 5,\n+        \"x\": 9,\n+        \"y\": 1\n+      },\n+      \"id\": 54,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaConnector\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Connector CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 6,\n+        \"w\": 5,\n+        \"x\": 14,\n+        \"y\": 1\n+      },\n+      \"id\": 15,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaUser\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"User CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"0\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 6,\n+        \"w\": 5,\n+        \"x\": 19,\n+        \"y\": 1\n+      },\n+      \"id\": 50,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaTopic\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Topics CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"200%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"0\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 0,\n+        \"y\": 4\n+      },\n+      \"id\": 13,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaBridge\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Bridge CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 3,\n+        \"y\": 4\n+      },\n+      \"id\": 12,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaMirrorMaker\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Mirror Maker CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"cacheTimeout\": null,\n+      \"colorBackground\": false,\n+      \"colorValue\": false,\n+      \"colors\": [\n+        \"#299c46\",\n+        \"rgba(237, 129, 40, 0.89)\",\n+        \"#d44a3a\"\n+      ],\n+      \"format\": \"none\",\n+      \"gauge\": {\n+        \"maxValue\": 100,\n+        \"minValue\": 0,\n+        \"show\": false,\n+        \"thresholdLabels\": false,\n+        \"thresholdMarkers\": true\n+      },\n+      \"gridPos\": {\n+        \"h\": 3,\n+        \"w\": 3,\n+        \"x\": 6,\n+        \"y\": 4\n+      },\n+      \"id\": 16,\n+      \"interval\": null,\n+      \"links\": [],\n+      \"mappingType\": 1,\n+      \"mappingTypes\": [\n+        {\n+          \"name\": \"value to text\",\n+          \"value\": 1\n+        },\n+        {\n+          \"name\": \"range to text\",\n+          \"value\": 2\n+        }\n+      ],\n+      \"maxDataPoints\": 100,\n+      \"nullPointMode\": \"connected\",\n+      \"nullText\": null,\n+      \"postfix\": \"\",\n+      \"postfixFontSize\": \"50%\",\n+      \"prefix\": \"\",\n+      \"prefixFontSize\": \"50%\",\n+      \"rangeMaps\": [\n+        {\n+          \"from\": \"null\",\n+          \"text\": \"N/A\",\n+          \"to\": \"null\"\n+        }\n+      ],\n+      \"sparkline\": {\n+        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n+        \"full\": false,\n+        \"lineColor\": \"rgb(31, 120, 193)\",\n+        \"show\": false\n+      },\n+      \"tableColumn\": \"\",\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(strimzi_resources{kind=\\\"KafkaMirrorMaker2\\\"})\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": \"\",\n+      \"timeFrom\": null,\n+      \"timeShift\": null,\n+      \"title\": \"Mirror Maker 2 CRs\",\n+      \"type\": \"singlestat\",\n+      \"valueFontSize\": \"120%\",\n+      \"valueMaps\": [\n+        {\n+          \"op\": \"=\",\n+          \"text\": \"N/A\",\n+          \"value\": \"null\"\n+        }\n+      ],\n+      \"valueName\": \"current\"\n+    },\n+    {\n+      \"collapsed\": false,\n+      \"gridPos\": {\n+        \"h\": 1,\n+        \"w\": 24,\n+        \"x\": 0,\n+        \"y\": 7\n+      },\n+      \"id\": 10,\n+      \"panels\": [],\n+      \"title\": \"Reconciliations\",\n+      \"type\": \"row\"\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 8\n+      },\n+      \"id\": 48,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_successful_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Successful Reconciliation per hour\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 6,\n+        \"x\": 12,\n+        \"y\": 8\n+      },\n+      \"id\": 49,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_failed_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Failed Reconciliation per hour\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 6,\n+        \"x\": 18,\n+        \"y\": 8\n+      },\n+      \"id\": 51,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_locked_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Reconciliation without Lock per hour\",\n+      \"tooltip\": {\n+        \"shared\": true,\n+        \"sort\": 0,\n+        \"value_type\": \"individual\"\n+      },\n+      \"type\": \"graph\",\n+      \"xaxis\": {\n+        \"buckets\": null,\n+        \"mode\": \"time\",\n+        \"name\": null,\n+        \"show\": true,\n+        \"values\": []\n+      },\n+      \"yaxes\": [\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        },\n+        {\n+          \"format\": \"short\",\n+          \"label\": null,\n+          \"logBase\": 1,\n+          \"max\": null,\n+          \"min\": null,\n+          \"show\": true\n+        }\n+      ],\n+      \"yaxis\": {\n+        \"align\": false,\n+        \"alignLevel\": null\n+      }\n+    },\n+    {\n+      \"aliasColors\": {},\n+      \"bars\": false,\n+      \"cacheTimeout\": null,\n+      \"dashLength\": 10,\n+      \"dashes\": false,\n+      \"decimals\": null,\n+      \"fill\": 1,\n+      \"gridPos\": {\n+        \"h\": 8,\n+        \"w\": 12,\n+        \"x\": 0,\n+        \"y\": 16\n+      },\n+      \"id\": 47,\n+      \"legend\": {\n+        \"avg\": false,\n+        \"current\": false,\n+        \"hideEmpty\": false,\n+        \"hideZero\": false,\n+        \"max\": false,\n+        \"min\": false,\n+        \"show\": true,\n+        \"total\": false,\n+        \"values\": false\n+      },\n+      \"lines\": true,\n+      \"linewidth\": 1,\n+      \"links\": [],\n+      \"nullPointMode\": \"null\",\n+      \"paceLength\": 10,\n+      \"percentage\": false,\n+      \"pointradius\": 2,\n+      \"points\": false,\n+      \"renderer\": \"flot\",\n+      \"seriesOverrides\": [],\n+      \"stack\": false,\n+      \"steppedLine\": false,\n+      \"targets\": [\n+        {\n+          \"expr\": \"sum(increase(strimzi_reconciliations_total[1h])) by (kind)\",\n+          \"format\": \"time_series\",\n+          \"intervalFactor\": 1,\n+          \"legendFormat\": \"{{kind}}\",\n+          \"refId\": \"A\"\n+        }\n+      ],\n+      \"thresholds\": [],\n+      \"timeFrom\": null,\n+      \"timeRegions\": [],\n+      \"timeShift\": null,\n+      \"title\": \"Started Reconciliation per hour\",", "originalCommit": "ff2a93ca67b5ffd7d8ce579c62f5eb4bb87aad3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5ODEwOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r402398109", "bodyText": "The are not just the reconciliations triggered by the CR - such as added or modified. There are also the periodical once. There are 5 counters in general:\n\nThe periodical reconciliations are fired everytime the timer fires .... increment by 1 for a single periodical reconcilition regardless the number of resources.\nThe started reconciliations covers both watch and periodical. But is per resource. So if you have 2 Kafka clusters, they each increment by one\nSuccessful are the started which ended ok\nFailed are the started whithc failed with error other than no lock\nAnd the locked are those which didn't got the lock (tracked separately because they are not really errors per se)", "author": "scholzj", "createdAt": "2020-04-02T15:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NDc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMjYyMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r402402623", "bodyText": "Yeah, these all the first 5 graphs in the picture but focusing on the \"started ....\" it could be not clear compared to the periodical one (even because you said that it contains the periodical one but is per resource). Maybe we can exclude the periodical ones in this \"started ... \" metric ?", "author": "ppatierno", "createdAt": "2020-04-02T15:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NDc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0Njk0NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2737#discussion_r402446945", "bodyText": "No, we cannot exclude it easily. It is started because the counter is increased at startup. Where as the successful / faled / locked are at the end. I think you also need to count all the reconciliations to be able to corelate the started against the successful/failed/locked.", "author": "scholzj", "createdAt": "2020-04-02T16:28:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NDc2Ng=="}], "type": "inlineReview"}]}