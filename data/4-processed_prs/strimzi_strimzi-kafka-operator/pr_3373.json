{"pr_number": 3373, "pr_title": "[systemtest][mm2] Add checks for mirroring right headers in messages", "pr_createdAt": "2020-07-23T21:05:20Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373", "timeline": [{"oid": "49012e330c0c910fad7bf8904c112e954cfedcd4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/49012e330c0c910fad7bf8904c112e954cfedcd4", "message": "add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-23T19:39:45Z", "type": "commit"}, {"oid": "910a368ce5fb3851bbc983eb86c7464821d5a4d8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/910a368ce5fb3851bbc983eb86c7464821d5a4d8", "message": "fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-23T22:11:45Z", "type": "commit"}, {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "message": "fixup! fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-23T22:24:00Z", "type": "commit"}, {"oid": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "message": "fixup! fixup! add checks for headers in mm2\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-23T22:24:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MDkyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459760927", "bodyText": "Don't forget to set it back to our examples.", "author": "Frawless", "createdAt": "2020-07-23T22:22:46Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaClientsResource.java", "diffHunk": "@@ -510,7 +510,7 @@ public static DoneableJob producerStrimzi(String producerName, String bootstrapS\n                         .withContainers()\n                             .addNewContainer()\n                             .withName(producerName)\n-                                .withImage(\"strimzi/hello-world-producer:latest\")\n+                                .withImage(\"imkonge/hello-world-producer:latest\")", "originalCommit": "07283671092edfb2bb36150c680443130a07e06f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTAzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459761032", "bodyText": "Same as above", "author": "Frawless", "createdAt": "2020-07-23T22:23:01Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaClientsResource.java", "diffHunk": "@@ -571,7 +571,7 @@ public static DoneableJob consumerStrimzi(String consumerName, String bootstrapS\n                         .withContainers()\n                             .addNewContainer()\n                             .withName(consumerName)\n-                                .withImage(\"strimzi/hello-world-consumer:latest\")\n+                                .withImage(\"imkonge/hello-world-consumer:latest\")", "originalCommit": "07283671092edfb2bb36150c680443130a07e06f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTI2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459761267", "bodyText": "Why do you change this ? I don't see usage in your changes. Does it cause problems in nightly builds?", "author": "Frawless", "createdAt": "2020-07-23T22:23:42Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -43,11 +43,18 @@ public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafk\n     }\n \n     public static void waitTillContinuousClientsFinish(String producerName, String consumerName, String namespace, int messageCount) {\n-        long timeout = (long) messageCount * 1000;\n+        long timeout = (long) messageCount * 3000;", "originalCommit": "07283671092edfb2bb36150c680443130a07e06f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MTExNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459771116", "bodyText": "Yeah sorry! I used this method in my test update, but then I removed it, good catch :)", "author": "im-konge", "createdAt": "2020-07-23T22:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MjU0Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459762542", "bodyText": "It's quite strange method name. Do you wait for producer or consumer in the test? I think you should name it like waitTillClientFinish instead of this.", "author": "Frawless", "createdAt": "2020-07-23T22:27:02Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -43,11 +43,18 @@ public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafk\n     }\n \n     public static void waitTillContinuousClientsFinish(String producerName, String consumerName, String namespace, int messageCount) {\n-        long timeout = (long) messageCount * 1000;\n+        long timeout = (long) messageCount * 3000;\n         LOGGER.info(\"Waiting till producer {} and consumer {} finish for the following {} ms\", producerName, consumerName, timeout);\n         TestUtils.waitFor(\"continuous clients finished\", Constants.GLOBAL_POLL_INTERVAL, timeout,\n             () -> kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(producerName).get().getStatus().getSucceeded().equals(1) &&\n                     kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(consumerName).get().getStatus().getSucceeded().equals(1));\n     }\n+\n+    public static void waitTillProducerOrConsumerFinish(String jobName, String namespace, int messageCount) {", "originalCommit": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459763508", "bodyText": "I think default config for delay between messages is 1000ms, maybe this is the problem why you want to increase the timeout? You can set it to 0ms to get max throughput.", "author": "Frawless", "createdAt": "2020-07-23T22:29:40Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -144,6 +152,25 @@ void testMirrorMaker2() {\n                 .done();\n         LOGGER.info(\"Looks like the mirrormaker2 cluster my-cluster deployed OK\");\n \n+        //deploying example clients for checking if mm2 will mirror messages with headers\n+        KafkaClientsResource.consumerStrimzi(targetConsumerName, KafkaResources.plainBootstrapAddress(kafkaClusterTargetName), targetExampleTopic, MESSAGE_COUNT).done();\n+        KafkaClientsResource.producerStrimzi(sourceProducerName, KafkaResources.plainBootstrapAddress(kafkaClusterSourceName), sourceExampleTopic, MESSAGE_COUNT)", "originalCommit": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MjQ0NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459772445", "bodyText": "If you remember our conversation about this delay, I tried it to 1ms (0ms is not allowed), 10ms and 100ms and the client acted real weird, as it wasn't able to finish the job. Maybe it was problem for http-producer-client and I definitely try that with hello-world-producer/consumer", "author": "im-konge", "createdAt": "2020-07-23T22:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3OTMzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459779336", "bodyText": "Now I tried all the options that I mentioned above and the log doesn't even appear. Maybe it's again problem for oc cluster up, but I have to keep that 1000ms delay and update the timeouts...", "author": "im-konge", "createdAt": "2020-07-23T23:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwNDI1OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r460004259", "bodyText": "I am quite sure 0 is working for kafka clients. We discussed bridge clients, which are implemented via vertx web client.", "author": "Frawless", "createdAt": "2020-07-24T11:47:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwNDQ3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r460004472", "bodyText": "So with 0 delay, not log is available but job is finished?", "author": "Frawless", "createdAt": "2020-07-24T11:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzNTM4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r460035387", "bodyText": "Yes, I think you are right that 0ms delay will be working, gonna check it. But even tho it will be finished, the log will not appear. So we will need to have higher timeout for the single job finish", "author": "im-konge", "createdAt": "2020-07-24T12:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzUwOA=="}], "type": "inlineReview"}, {"oid": "a987921b7ac8d73ce1f2242e6168e52cce4f1ed0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a987921b7ac8d73ce1f2242e6168e52cce4f1ed0", "message": "review comments\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-23T22:58:34Z", "type": "commit"}, {"oid": "9d072e92f8d3575c3ec12f2e7470f87736725a72", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9d072e92f8d3575c3ec12f2e7470f87736725a72", "message": "docker image back to strimzi\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-24T00:51:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MDkwMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459760903", "bodyText": "Dont think we want to check this in?", "author": "samuel-hawker", "createdAt": "2020-07-23T22:22:44Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaClientsResource.java", "diffHunk": "@@ -510,7 +510,7 @@ public static DoneableJob producerStrimzi(String producerName, String bootstrapS\n                         .withContainers()\n                             .addNewContainer()\n                             .withName(producerName)\n-                                .withImage(\"strimzi/hello-world-producer:latest\")\n+                                .withImage(\"imkonge/hello-world-producer:latest\")", "originalCommit": "07283671092edfb2bb36150c680443130a07e06f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxOTU4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459919584", "bodyText": "This should be updated, I waited for strimzi/hello-world-producer/consumer will be built with latest commit.", "author": "im-konge", "createdAt": "2020-07-24T08:29:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxOTk0MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459919940", "bodyText": "But thanks for this nit, as I always forgot to change these \ud83d\ude04", "author": "im-konge", "createdAt": "2020-07-24T08:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MDkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTg5MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459761890", "bodyText": "assertThat(log, containsString(headerSomething));\nIs slightly better as if the strings dont match it will print the expected vs actual to the maven logs", "author": "samuel-hawker", "createdAt": "2020-07-23T22:25:12Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -186,6 +213,16 @@ void testMirrorMaker2() {\n             internalKafkaClient.receiveMessagesPlain()\n         );\n \n+        LOGGER.info(\"Checking if messages with headers are correctly mirrored\");\n+        ClientUtils.waitTillProducerOrConsumerFinish(targetConsumerName, NAMESPACE, MESSAGE_COUNT);\n+\n+        LOGGER.info(\"Checking log of {} job if the headers are correct\", targetConsumerName);\n+        String headerFoo = \"key: foo, value: bar\";\n+        String headerSomething = \"key: something, value: more\";\n+        String log = StUtils.getLogFromPodByTime(kubeClient().listPodsByPrefixInName(targetConsumerName).get(0).getMetadata().getName(), \"\", MESSAGE_COUNT + \"s\");\n+        assertThat(log.contains(headerFoo), is(true));", "originalCommit": "f6da4b7e8e5ffc1a807f15f84114e0c72a7a58f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzMwNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459913304", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void waitTillClientFinish(String jobName, String namespace, int messageCount) {\n          \n          \n            \n                public static void waitForClientSuccess(String jobName, String namespace, int messageCount) {\n          \n      \n    \n    \n  \n\nJust to match syntax of the calling function\nAlso it only passes on success, not finish", "author": "samuel-hawker", "createdAt": "2020-07-24T08:15:49Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -49,5 +49,12 @@ public static void waitTillContinuousClientsFinish(String producerName, String c\n             () -> kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(producerName).get().getStatus().getSucceeded().equals(1) &&\n                     kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(consumerName).get().getStatus().getSucceeded().equals(1));\n     }\n+\n+    public static void waitTillClientFinish(String jobName, String namespace, int messageCount) {", "originalCommit": "9d072e92f8d3575c3ec12f2e7470f87736725a72", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxNjU1Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3373#discussion_r459916553", "bodyText": "think the naming of these strings + the header key val pairs is just a tad confusing, I would just call them header1 header2\nWith key vals header_key_one header_value_one etc...\nBut just a suggestion.", "author": "samuel-hawker", "createdAt": "2020-07-24T08:22:36Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -186,6 +213,16 @@ void testMirrorMaker2() {\n             internalKafkaClient.receiveMessagesPlain()\n         );\n \n+        LOGGER.info(\"Checking if messages with headers are correctly mirrored\");\n+        ClientUtils.waitTillClientFinish(targetConsumerName, NAMESPACE, MESSAGE_COUNT);\n+\n+        LOGGER.info(\"Checking log of {} job if the headers are correct\", targetConsumerName);\n+        String headerFoo = \"key: foo, value: bar\";", "originalCommit": "9d072e92f8d3575c3ec12f2e7470f87736725a72", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/99ea40797b1ad2d1b4e3e2171a36b5ffcca2cd5c", "message": "comments\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-24T10:26:34Z", "type": "commit"}]}