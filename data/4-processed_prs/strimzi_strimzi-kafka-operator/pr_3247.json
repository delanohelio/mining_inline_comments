{"pr_number": 3247, "pr_title": "[DOC] Update of steps for renewing custom CA", "pr_createdAt": "2020-06-26T12:17:56Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3247", "timeline": [{"oid": "c325cd4167e848d7308660db37f444947bd11ed2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c325cd4167e848d7308660db37f444947bd11ed2", "message": "[DOC] Update of steps for renewing custom CA\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-06-26T12:15:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MTU2NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3247#discussion_r446151565", "bodyText": "Missing underscore - _Z?", "author": "laidan6000", "createdAt": "2020-06-26T12:25:06Z", "path": "documentation/modules/security/proc-renewing-your-own-ca-certificates.adoc", "diffHunk": "@@ -5,80 +5,104 @@\n [id='renewing-your-own-ca-certificates-{context}']\n = Renewing your own CA certificates\n \n-This procedure describes how to renew CA certificates and private keys that you previously installed.\n-You will need to follow this procedure during the renewal period in order to replace CA certificates which will soon expire.\n+This procedure describes how to renew CA certificates and keys that you previously installed.\n+You need to follow this procedure during the renewal period in order to replace CA certificates which will soon expire.\n+\n+You can use this procedure to install your own cluster or client CA certificates.\n+\n+The procedure describes renewal of CA certificates in PEM format.\n+You can also use certificates in PKCS #12 format.\n \n .Prerequisites\n \n * The Cluster Operator is running.\n * A Kafka cluster in which you previously installed your own CA certificates and private keys.\n-* New cluster and clients X.509 certificates and keys in PEM format. These could be generated using `openssl` using a command such as:\n-+\n+* New cluster and clients X.509 certificates and keys in PEM format.\n+\n+These could be generated using `openssl` using a command such as:\n+\n [source,shell,subs=\"+quotes\"]\n-openssl req -x509 -new -days _<validity>_ --nodes -out ca.crt -keyout ca.key\n+openssl req -x509 -new -days _NUMBER-OF-DAYS-VALID_ --nodes -out ca.crt -keyout ca.key\n \n .Procedure\n \n-. Establish what CA certificates already exist in the `Secret`:\n-+\n-Use the following commands:\n+. Check the details of the current CA certificates in the `Secret`:\n +\n [source,shell,subs=\"+quotes\"]\n-kubectl describe secret _<ca-cert-secret>_\n+kubectl describe secret _CA-CERTIFICATE-SECRET_\n +\n+_CA-CERTIFICATE-SECRET_ is the name of the `Secret`, which is `_CLUSTER-NAME_-cluster-ca-cert` for the cluster CA certificate and `_CLUSTER-NAME_-clients-ca-cert` for the clients CA certificate.\n \n-. Prepare a directory containing the existing CA certificates in the secret.\n+. Create a directory to contain the existing CA certificates in the secret.\n +\n [source,shell,subs=\"+quotes\"]\n ----\n mkdir new-ca-cert-secret\n cd new-ca-cert-secret\n ----\n-For each certificate _<ca-certificate>_ from the previous step, run:\n+\n+. Fetch the secret for each CA certificate you wish to renew:\n +\n [source,shell,subs=\"+quotes\"]\n-----\n-# Fetch the existing secret\n-kubectl get secret _<ca-cert-secret>_ -o 'jsonpath={.data._<ca-certificate>_}' | base64 -d > _<ca-certificate>_\n-----\n+kubectl get secret _CA-CERTIFICATE-SECRET_ -o 'jsonpath={.data._CA-CERTIFICATE_}' | base64 -d > _CA-CERTIFICATE_\n++\n+Replace _CA-CERTIFICATE_ with the name of each CA certificate.\n \n-. Rename the old `ca.crt` file to `ca_<date>_.crt`, where _<date>_ is the certificate expiry date in the format _<year>_-_<month>_-_<day>_T_<hour>_-_<minute>_-_<second>_Z, for example `ca-2018-09-27T17-32-00Z.crt`. \n+. Rename the old `ca.crt` file as `ca-__DATE__.crt`,\n+where _DATE_ is the certificate expiry date in the format _YEAR-MONTH-DAYTHOUR-MINUTE-SECONDZ_.", "originalCommit": "c325cd4167e848d7308660db37f444947bd11ed2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0NDM0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3247#discussion_r446844347", "bodyText": "No. That's the format: yyyy-mm-ddThh-mm-ssZ", "author": "PaulRMellor", "createdAt": "2020-06-29T08:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MTU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1ODA5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3247#discussion_r446858091", "bodyText": "We really need to highlight the T and Z in there. _YEAR-MONTH-DAYTHOUR-MINUTE-SECONDZ_ is doesn't really do it.", "author": "tombentley", "createdAt": "2020-06-29T08:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MTU2NQ=="}], "type": "inlineReview"}]}