{"pr_number": 3314, "pr_title": "[DOC] Style edits to distributed tracing section", "pr_createdAt": "2020-07-13T15:37:29Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314", "timeline": [{"oid": "991d7629e33b1a1010621e6123514154aca82cad", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/991d7629e33b1a1010621e6123514154aca82cad", "message": "new tracing category for modules and assemblies\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-10T14:10:17Z", "type": "commit"}, {"oid": "7d1a1b533163c53dec2a3b89c77abf6c8f467711", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7d1a1b533163c53dec2a3b89c77abf6c8f467711", "message": "Applied changes from reviewers\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-10T16:43:03Z", "type": "commit"}, {"oid": "e0a374ad09995d663992fadf8e55964378179cf3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e0a374ad09995d663992fadf8e55964378179cf3", "message": "Renamed tracing overview module\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-13T09:44:37Z", "type": "commit"}, {"oid": "62e3de6da4332fb5fe17ceecf9d5aea1fe2b6eb2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/62e3de6da4332fb5fe17ceecf9d5aea1fe2b6eb2", "message": "Further style edits\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-13T11:14:03Z", "type": "commit"}, {"oid": "79f041949c35b419fb3f0ee89676b9453b5536b2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/79f041949c35b419fb3f0ee89676b9453b5536b2", "message": "Use lowercase for producer and consumer\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-13T15:15:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3Njg3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454176872", "bodyText": "I wonder if this note should be introduced earlier on in the How Strimzi Supports Tracing?", "author": "PaulRMellor", "createdAt": "2020-07-14T08:02:42Z", "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,61 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker\n+* Strimzi Kafka Bridge\n+\n+You enable and configure tracing for these components using template configuration properties in their custom resources.\n+\n+To enable tracing in Kafka producers, consumers, and Kafka Streams API applications, you _instrument_ application code using the link:https://github.com/opentracing-contrib/java-kafka-client/blob/master/README.md[OpenTracing Apache Kafka Client Instrumentation^] library (included with Strimzi). When instrumented, clients generate trace data; for example, when producing messages or writing offsets to the log.\n+\n+Traces are sampled according to a sampling strategy and then visualized in the Jaeger user interface.\n+\n+[discrete]\n+== Outline of procedures\n+\n+To set up tracing for Strimzi, follow these procedures in order:\n+\n+* Set up tracing for clients:\n+\n+** xref:proc-configuring-jaeger-tracer-kafka-clients-{context}[Initialize a Jaeger tracer for Kafka clients]\n+\n+* Instrument clients with tracers:\n+\n+** xref:proc-instrumenting-producers-consumers-for-opentracing-{context}[Instrument producers and consumers for tracing]\n+\n+** xref:proc-instrumenting-kafka-streams-with-tracers-{context}[Instrument Kafka Streams applications for tracing]\n+\n+* xref:assembly-setting-up-tracing-mirror-maker-connect-bridge-{context}[Set up tracing for MirrorMaker, Kafka Connect, and the Kafka Bridge]\n+\n+.Prerequisites\n+\n+* The Jaeger backend components are deployed to your Kubernetes cluster. For deployment instructions, see the https://www.jaegertracing.io/docs/1.18/deployment/[Jaeger deployment documentation^].\n+\n+[NOTE]", "originalCommit": "79f041949c35b419fb3f0ee89676b9453b5536b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3ODQ4NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454178484", "bodyText": "Are we capitalising producer and consumer? I haven't been! Would it be better saying Kafka producer and consumer clients, and...", "author": "PaulRMellor", "createdAt": "2020-07-14T08:05:52Z", "path": "documentation/assemblies/tracing/assembly-instrumenting-kafka-clients-tracers.adoc", "diffHunk": "@@ -0,0 +1,11 @@\n+// This assembly is included in the following assemblies:\n+//\n+// assembly-tracing.adoc\n+[id='assembly-instrumenting-kafka-clients-tracers-{context}']\n+= Instrumenting Kafka clients with tracers\n+\n+Instrument Kafka Producer, Consumer, and Streams API applications for distributed tracing.", "originalCommit": "79f041949c35b419fb3f0ee89676b9453b5536b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NTgwNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454265805", "bodyText": "Hmm, as part of this PR I removed the caps from Producer and Consumer throughout the section. I agree we should not capitalise.", "author": "laidan6000", "createdAt": "2020-07-14T10:42:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3ODQ4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTYxOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454179618", "bodyText": "Just a thought. Would a couple of description lists work here?", "author": "PaulRMellor", "createdAt": "2020-07-14T08:07:59Z", "path": "documentation/modules/tracing/con-overview-opentracing-jaeger.adoc", "diffHunk": "@@ -0,0 +1,22 @@\n+// Module included in the following assemblies:\n+//\n+// assembly-distributed-tracing.adoc\n+\n+[id='con-overview-opentracing-jaeger-{context}']\n+= Overview of OpenTracing and Jaeger\n+\n+Strimzi uses the OpenTracing and Jaeger projects.\n+\n+The OpenTracing specification defines APIs that developers can use to instrument applications for distributed tracing. It is independent from the tracing system.", "originalCommit": "79f041949c35b419fb3f0ee89676b9453b5536b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjEwNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454266106", "bodyText": "Nice idea. I'll have a go. We want to avoid overloading the user with info about OpenTracing and Jaeger.", "author": "laidan6000", "createdAt": "2020-07-14T10:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE4MjkzNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454182934", "bodyText": "We wouldn't shrink as the others? So, In the application code of each Kafka Producer and Consumer application:", "author": "PaulRMellor", "createdAt": "2020-07-14T08:14:00Z", "path": "documentation/modules/tracing/proc-instrumenting-producers-consumers-opentracing.adoc", "diffHunk": "@@ -3,15 +3,15 @@\n // assembly-instrumenting-kafka-clients-tracers.adoc\n \n [id='proc-instrumenting-producers-consumers-for-opentracing-{context}']\n-= Instrumenting Kafka Producers and Consumers for tracing\n+= Instrumenting producers and consumers for tracing\n \n-Use a Decorator pattern or Interceptors to instrument your Java Producer and Consumer application code for distributed tracing.\n+Use a Decorator pattern or Interceptors to instrument your Java producer and consumer application code for tracing.\n \n .Procedure\n \n-Perform these steps in the application code of each Kafka Producer and Consumer application.\n+Perform the following steps in the application code of each producer and consumer application.", "originalCommit": "79f041949c35b419fb3f0ee89676b9453b5536b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjMxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r454266313", "bodyText": "Yes, good spot. This was feedback from the other writers.", "author": "laidan6000", "createdAt": "2020-07-14T10:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE4MjkzNA=="}], "type": "inlineReview"}, {"oid": "7a3940908ca51371d171d620c52b44e1f21c699e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7a3940908ca51371d171d620c52b44e1f21c699e", "message": "review comments PM\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-14T13:51:21Z", "type": "commit"}, {"oid": "7476b7d9e3394bc2fa98c4e468cb8643d22fe366", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7476b7d9e3394bc2fa98c4e468cb8643d22fe366", "message": "Resolve merge conflict by deleting con-overview-distributed-tracing.adoc", "committedDate": "2020-07-22T09:36:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyNDQ0OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458724449", "bodyText": "I guess we should add MirrorMaker2 as well, @scholzj is working on PR fixing tracing on it.", "author": "ppatierno", "createdAt": "2020-07-22T11:30:34Z", "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,61 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker", "originalCommit": "7476b7d9e3394bc2fa98c4e468cb8643d22fe366", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNTQ4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458805487", "bodyText": "Good suggestion, thanks. I've added MirrorMaker 2.0 in a few different places.", "author": "laidan6000", "createdAt": "2020-07-22T13:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyNDQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyNDk1Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458724952", "bodyText": "as mentioned above it should be about MirrorMaker 2 as well.", "author": "ppatierno", "createdAt": "2020-07-22T11:31:36Z", "path": "documentation/assemblies/tracing/assembly-setting-up-tracing-mirror-maker-connect-bridge.adoc", "diffHunk": "@@ -8,7 +8,7 @@ Distributed tracing is supported for MirrorMaker, Kafka Connect (including Kafka\n \n .Tracing in MirrorMaker\n \n-For MirrorMaker, messages are traced from the source cluster to the target cluster; the trace data records messages entering and leaving the MirrorMaker component.\n+For MirrorMaker, messages are traced from the source cluster to the target cluster. The trace data records messages entering and leaving the MirrorMaker component.", "originalCommit": "7476b7d9e3394bc2fa98c4e468cb8643d22fe366", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1cd3f465d079c2c09a5f6dd9346c4fd90d411c93", "message": "Update for MirrorMaker 2.0 support\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-22T13:47:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjM3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458806378", "bodyText": "Decided not to add MM2 to the title to prevent it from becoming too long.", "author": "laidan6000", "createdAt": "2020-07-22T13:49:57Z", "path": "documentation/assemblies/tracing/assembly-distributed-tracing.adoc", "diffHunk": "@@ -0,0 +1,62 @@\n+// This assembly is included in the following assemblies:\n+//\n+// master.adoc\n+\n+[id='assembly-distributed-tracing-{context}']\n+= Distributed tracing\n+\n+Distributed tracing allows you to track the progress of transactions between applications in a distributed system. In a microservices architecture, tracing tracks the progress of transactions between services. Trace data is useful for monitoring application performance and investigating issues with target systems and end-user applications.\n+\n+In Strimzi, tracing facilitates the end-to-end tracking of messages: from source systems to Kafka, and then from Kafka to target systems and applications. It complements the metrics that are available to view in link:{BookURLDeploying}#assembly-metrics-setup-{context}[Grafana dashboards], as well as the component loggers. \n+\n+[discrete]\n+== How Strimzi supports tracing\n+\n+Support for tracing is built in to the following components:\n+\n+* Kafka Connect (including Kafka Connect with Source2Image support)\n+* MirrorMaker\n+* MirrorMaker 2.0\n+* Strimzi Kafka Bridge\n+\n+You enable and configure tracing for these components using template configuration properties in their custom resources.\n+\n+To enable tracing in Kafka producers, consumers, and Kafka Streams API applications, you _instrument_ application code using the link:https://github.com/opentracing-contrib/java-kafka-client/blob/master/README.md[OpenTracing Apache Kafka Client Instrumentation^] library (included with Strimzi). When instrumented, clients generate trace data; for example, when producing messages or writing offsets to the log.\n+\n+Traces are sampled according to a sampling strategy and then visualized in the Jaeger user interface.\n+\n+[NOTE]\n+====\n+Tracing is not supported for Kafka brokers.\n+\n+Setting up tracing for applications and systems beyond Strimzi is outside the scope of this chapter. To learn more about this subject, search for \"inject and extract\" in the {OpenTracingDocs}.\n+====\n+\n+[discrete]\n+== Outline of procedures\n+\n+To set up tracing for Strimzi, follow these procedures in order:\n+\n+* Set up tracing for clients:\n+\n+** xref:proc-configuring-jaeger-tracer-kafka-clients-{context}[Initialize a Jaeger tracer for Kafka clients]\n+\n+* Instrument clients with tracers:\n+\n+** xref:proc-instrumenting-producers-consumers-for-opentracing-{context}[Instrument producers and consumers for tracing]\n+\n+** xref:proc-instrumenting-kafka-streams-with-tracers-{context}[Instrument Kafka Streams applications for tracing]\n+\n+* xref:assembly-setting-up-tracing-mirror-maker-connect-bridge-{context}[Set up tracing for MirrorMaker, Kafka Connect, and the Kafka Bridge]", "originalCommit": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjQyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458806427", "bodyText": "Actually, for MM2 this field is a bit different - that sould be the only difference ...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                mirrorMakerContainer:\n          \n          \n            \n                connectContainer:", "author": "scholzj", "createdAt": "2020-07-22T13:50:02Z", "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "diffHunk": "@@ -64,8 +64,31 @@ spec:\n   tracing:\n     type: jaeger\n #...\n+----\n \n+.Jaeger tracer configuration for MirrorMaker 2.0\n+[source,yaml,subs=attributes+]\n ----\n+apiVersion: kafka.strimzi.io/v1alpha1\n+kind: KafkaMirrorMaker2\n+metadata:\n+  name: my-mm2-cluster\n+spec:\n+  #...\n+  template:\n+    mirrorMakerContainer:", "originalCommit": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjY5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458806694", "bodyText": "@scholzj - Please check the example YAML for MM2\nIs mirrorMakerContainer correct?", "author": "laidan6000", "createdAt": "2020-07-22T13:50:23Z", "path": "documentation/modules/tracing/proc-enabling-tracing-in-connect-mirror-maker-bridge-resources.adoc", "diffHunk": "@@ -64,8 +64,31 @@ spec:\n   tracing:\n     type: jaeger\n #...\n+----\n \n+.Jaeger tracer configuration for MirrorMaker 2.0\n+[source,yaml,subs=attributes+]\n ----\n+apiVersion: kafka.strimzi.io/v1alpha1\n+kind: KafkaMirrorMaker2\n+metadata:\n+  name: my-mm2-cluster\n+spec:\n+  #...\n+  template:\n+    mirrorMakerContainer:", "originalCommit": "1cd3f465d079c2c09a5f6dd9346c4fd90d411c93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxNDA2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3314#discussion_r458814064", "bodyText": "Already added in another comment in the mean time ;-) ... it should be connectContainer for MM2", "author": "scholzj", "createdAt": "2020-07-22T13:59:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNjY5NA=="}], "type": "inlineReview"}, {"oid": "7a3c356c5d596377b1ca9bd53408cec6319335c3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7a3c356c5d596377b1ca9bd53408cec6319335c3", "message": "Review comments JS and PP\n\nSigned-off-by: Daniel Laing <dlaing@redhat.com>", "committedDate": "2020-07-23T08:46:25Z", "type": "commit"}]}