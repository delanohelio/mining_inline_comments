{"pr_number": 3627, "pr_title": "[Doc] generic listener update", "pr_createdAt": "2020-09-11T09:31:33Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627", "timeline": [{"oid": "e4644b382e081a2e97c29aa03b73e6a52c37cce3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e4644b382e081a2e97c29aa03b73e6a52c37cce3", "message": "listener-updates-using-guide-main\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-08T13:03:36Z", "type": "commit"}, {"oid": "0c306f5b8b52456dcdcd96c11c2a659db7dbb3c4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0c306f5b8b52456dcdcd96c11c2a659db7dbb3c4", "message": "listener-updates-using-guide-api-descriptions\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-08T13:03:36Z", "type": "commit"}, {"oid": "07eaef62ef09049663bb2fdaa772a5670fbdb2e4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/07eaef62ef09049663bb2fdaa772a5670fbdb2e4", "message": "listener-updates-deploying-guide\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-08T13:03:36Z", "type": "commit"}, {"oid": "99b3fea3f6f2d25d9874990cb5e0c5e9ab7ad4f1", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/99b3fea3f6f2d25d9874990cb5e0c5e9ab7ad4f1", "message": "listener-updates-overview\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-08T13:03:36Z", "type": "commit"}, {"oid": "d256e31300a0bb4601960d52e5a38e74f1743102", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d256e31300a0bb4601960d52e5a38e74f1743102", "message": "listener-updates-quickstart\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-08T13:03:36Z", "type": "commit"}, {"oid": "7c992e118d44b9925732989888355956766621f2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7c992e118d44b9925732989888355956766621f2", "message": "Merge branch 'doc-using-listener-update' of github.com:PaulRMellor/strimzi-kafka-operator into doc-using-listener-update\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:22:22Z", "type": "forcePushed"}, {"oid": "8f4e73f919fe065207e0aa50ec9ba5ad43cdb44e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8f4e73f919fe065207e0aa50ec9ba5ad43cdb44e", "message": "Merge branch 'doc-using-listener-update' of github.com:PaulRMellor/strimzi-kafka-operator into doc-using-listener-update\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:30:37Z", "type": "forcePushed"}, {"oid": "84a1a7a2b50c83bb94cab81171ea716c52afb2c3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/84a1a7a2b50c83bb94cab81171ea716c52afb2c3", "message": "generic listener updates\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:32:13Z", "type": "forcePushed"}, {"oid": "1e58e4e0005cfe0305f90c56d604a2897af32dc0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1e58e4e0005cfe0305f90c56d604a2897af32dc0", "message": "generic listener\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:34:55Z", "type": "forcePushed"}, {"oid": "94add7125e35982bbd5e2843e404382b5b26eb64", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/94add7125e35982bbd5e2843e404382b5b26eb64", "message": "generic listener\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:47:19Z", "type": "commit"}, {"oid": "0d6aa668a484b6e169bdf81d69a1204067b4b0b2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0d6aa668a484b6e169bdf81d69a1204067b4b0b2", "message": "generic listener config updates\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:47:30Z", "type": "commit"}, {"oid": "935ff0075fcbaed91ce1d39d55eb099adc077ea5", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/935ff0075fcbaed91ce1d39d55eb099adc077ea5", "message": "generic listener updates\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:47:30Z", "type": "commit"}, {"oid": "00e5cb913c372116159cfdabe38fa345aaeccd13", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/00e5cb913c372116159cfdabe38fa345aaeccd13", "message": "listener-updates-using-guide-api-descriptions\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:51:37Z", "type": "commit"}, {"oid": "00e5cb913c372116159cfdabe38fa345aaeccd13", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/00e5cb913c372116159cfdabe38fa345aaeccd13", "message": "listener-updates-using-guide-api-descriptions\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-11T10:51:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyOTk2NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487729965", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type: service\n          \n          \n            \n                    type: internal", "author": "scholzj", "createdAt": "2020-09-14T08:13:40Z", "path": "documentation/api/io.strimzi.api.kafka.model.KafkaClusterSpec.adoc", "diffHunk": "@@ -15,7 +15,10 @@ spec:\n   kafka:\n     # ...\n     listeners:\n-      plain: {}\n+      - name: plain\n+        port: 9092\n+        type: service", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NjA5MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487746090", "bodyText": "I think it would be great to have here examples for each type. Especially with the Ingress one it would make it more obvious what is needed.", "author": "scholzj", "createdAt": "2020-09-14T08:40:34Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListener.adoc", "diffHunk": "@@ -0,0 +1,217 @@\n+Configures listeners to connect to Kafka brokers within and outside Kubernetes.\n+\n+You configure the listeners in the `Kafka` resource.\n+\n+.Example `Kafka` resource showing listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+    #...\n+----\n+\n+[id='property-generic-listeners-{context}']\n+.`listeners`\n+You configure Kafka broker listeners using the `listeners` property in the `Kafka` resource.\n+Each listener is defined as an array.\n+\n+.Example listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+listeners:\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false\n+----\n+\n+The name and port must be unique within the Kafka cluster.\n+The name can be up to 25 characters long, comprising lower-case letters and numbers.\n+\n+By specifying a unique name and port for each listener,\n+you can configure multiple listeners.\n+\n+.`type`\n+\n+The type is set as `internal`,\n+or for external listeners, as `route`, `loadbalancer`, `nodeport` or `ingress`.\n+\n+internal:: You can configure internal listeners with or without encryption using the `tls` property.\n+route:: Configures an external listener to expose Kafka using OpenShift `Routes` and the HAProxy router.\n++\n+A dedicated `Route` is created for every Kafka broker pod.\n+An additional `Route` is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Routes` to connect to Kafka on port 443.\n+ingress:: Configures an external listener to expose Kafka using Kubernetes `Ingress` and the {NginxIngressController}.\n++\n+A dedicated `Ingress` resource is created for every Kafka broker pod.\n+An additional `Ingress` resource is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Ingress` resources to connect to Kafka on port 443.\n++\n+You must specify the hostnames used by the bootstrap and per-broker services\n+using xref:type-GenericKafkaListenerConfigurationBootstrap-reference[`GenericKafkaListenerConfigurationBootstrap`]\n+and xref:type-GenericKafkaListenerConfigurationBroker-reference[`GenericKafkaListenerConfigurationBroker`] properties.\n++\n+NOTE: External listeners using `Ingress` are currently only tested with the {NginxIngressController}.\n+\n+loadbalancer:: Configures an external listener to expose Kafka `Loadbalancer` type `Services`.\n++\n+A new loadbalancer service is created for every Kafka broker pod.\n+An additional loadbalancer is created to serve as a Kafka _bootstrap_ address.\n+Loadbalancers listen to connections on port 9094.\n+nodeport:: Configures an external listener to expose Kafka using `NodePort` type `Services`.\n++\n+Kafka clients connect directly to the nodes of Kubernetes.\n+An additional `NodePort` type of service is created to serve as a Kafka bootstrap address.\n++\n+When configuring the advertised addresses for the Kafka broker pods, Strimzi uses the address of the node on which the given pod is running.\n+You can use `preferredNodePortAddressType` property to configure the xref:property-listener-config-preferredNodePortAddressType-{context}[first address type checked as the node address].\n++\n+NOTE: TLS hostname verification is not currently supported when exposing Kafka clusters using node ports.", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxNzE0MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487817140", "bodyText": "Added. Also added source ranges + link for the loadbalancer config", "author": "PaulRMellor", "createdAt": "2020-09-14T10:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NjA5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NjQyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487746428", "bodyText": "Can we make all of these as links? They will be important to deeplink into.", "author": "scholzj", "createdAt": "2020-09-14T08:41:14Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListener.adoc", "diffHunk": "@@ -0,0 +1,217 @@\n+Configures listeners to connect to Kafka brokers within and outside Kubernetes.\n+\n+You configure the listeners in the `Kafka` resource.\n+\n+.Example `Kafka` resource showing listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+    #...\n+----\n+\n+[id='property-generic-listeners-{context}']\n+.`listeners`\n+You configure Kafka broker listeners using the `listeners` property in the `Kafka` resource.\n+Each listener is defined as an array.\n+\n+.Example listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+listeners:\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false\n+----\n+\n+The name and port must be unique within the Kafka cluster.\n+The name can be up to 25 characters long, comprising lower-case letters and numbers.\n+\n+By specifying a unique name and port for each listener,\n+you can configure multiple listeners.\n+\n+.`type`", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxNzQ4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487817487", "bodyText": "Changed all the .<> titles in the schemas to ` ===", "author": "PaulRMellor", "createdAt": "2020-09-14T10:42:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0NjQyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1Mjk5Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487752997", "bodyText": "Does this really belong here? This section is about authentication. Wouldn't it be better to just say something like:\nFor more information about listener configuration and list of all options, see the xref:type-GenericKafkaListenerConfiguration-reference[GenericKafkaListenerConfiguration schema].\n\nwithout listing all the options.", "author": "scholzj", "createdAt": "2020-09-14T08:51:30Z", "path": "documentation/modules/con-securing-kafka-authentication.adoc", "diffHunk": "@@ -96,6 +108,20 @@ use the `networkPolicyPeers` property.\n Use network policies as part of the listener authentication configuration.\n Each listener can have a different `networkPolicyPeers` configuration.\n \n-For more information, refer to the xref:con-common-configuration-listener-network-policy-reference[Listener network policies] section and the {K8sNetworkPolicyPeerAPI}.\n+For more information, refer to the xref:configuration-listener-network-policy-reference[Listener network policies] section and the {K8sNetworkPolicyPeerAPI}.\n \n NOTE: Your configuration of Kubernetes must support ingress `NetworkPolicies` in order to use network policies in Strimzi.\n+\n+== Additional listener configuration options\n+\n+Add further listener configuration using `configuration` properties.\n+You can use:\n+\n+* `bootstrap` and `brokers` properties to specify overrides for connecting to bootstrap and broker services\n+* `brokerCertChainAndKey` to xref:proc-installing-certs-per-listener-str[configure a listener to use your own private key and server certificate]\n+* `externalTrafficPolicy`, for `nodeport` and `loadbalancer` listeners, to specify whether a service routes external traffic to a local node or cluster-wide endpoints\n+* `loadBalancerSourceRanges`, for `loadbalancer` listeners, to specify Classless Inter-Domain Routing (CIDR) ranges to connect to\n+* `preferredNodePortAddressType`, for `nodeport` listeners, to specify the address type to use as the node address\n+* `useServiceDnsDomain`, for `internal` listeners, to specify whether the Kubernetes service DNS domain is used\n+\n+For more information, see the xref:type-GenericKafkaListenerConfiguration-reference[GenericKafkaListenerConfiguration schema].", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxODQ4OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487818489", "bodyText": "It was added for anyone not so familiar with listener config that were other options available.\nBut I guess a note with a single link is just as effective \ud83d\udc4d", "author": "PaulRMellor", "createdAt": "2020-09-14T10:44:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1Mjk5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NDQ2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487754464", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                type: service\n          \n          \n            \n                type: internal", "author": "scholzj", "createdAt": "2020-09-14T08:53:47Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.KafkaListeners.adoc", "diffHunk": "@@ -13,15 +13,23 @@ Each listener is defined when the `listeners` object has the given property.\n \n An empty object ({}) means the default configuration is used.\n \n-.Example`listeners` property configuration with all listeners enabled\n+.Example `listeners` property configuration with all listeners enabled\n [source,yaml,subs=\"attributes+\"]\n ----\n # ...\n listeners:\n-  plain: {}\n-  tls: {}\n-  external:\n+  - name: plain\n+    port: 9092\n+    type: service", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA2NDUyNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488064526", "bodyText": "Examples removed", "author": "PaulRMellor", "createdAt": "2020-09-14T16:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NDQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NDUyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487754522", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                type: service\n          \n          \n            \n                type: internal", "author": "scholzj", "createdAt": "2020-09-14T08:53:52Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.KafkaListeners.adoc", "diffHunk": "@@ -13,15 +13,23 @@ Each listener is defined when the `listeners` object has the given property.\n \n An empty object ({}) means the default configuration is used.\n \n-.Example`listeners` property configuration with all listeners enabled\n+.Example `listeners` property configuration with all listeners enabled\n [source,yaml,subs=\"attributes+\"]\n ----\n # ...\n listeners:\n-  plain: {}\n-  tls: {}\n-  external:\n+  - name: plain\n+    port: 9092\n+    type: service\n+    tls: false\n+  - name: plain\n+    port: 9092\n+    type: service", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA2NDYzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488064632", "bodyText": "Examples removed", "author": "PaulRMellor", "createdAt": "2020-09-14T16:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NDUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NDY2MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r487754660", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                type: service\n          \n          \n            \n                type: internal", "author": "scholzj", "createdAt": "2020-09-14T08:54:05Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.KafkaListeners.adoc", "diffHunk": "@@ -30,13 +38,9 @@ listeners:\n ----\n # ...\n listeners:\n-  plain: {}\n+  - name: plain\n+    port: 9092\n+    type: service", "originalCommit": "00e5cb913c372116159cfdabe38fa345aaeccd13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA2NDc1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488064758", "bodyText": "Examples removed", "author": "PaulRMellor", "createdAt": "2020-09-14T16:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1NDY2MA=="}], "type": "inlineReview"}, {"oid": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "message": "review edits JS\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-14T16:30:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIzOTI2Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488239263", "bodyText": "Do we need an empty line to separate it from the example?", "author": "scholzj", "createdAt": "2020-09-14T21:48:50Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListener.adoc", "diffHunk": "@@ -0,0 +1,323 @@\n+Configures listeners to connect to Kafka brokers within and outside Kubernetes.\n+\n+You configure the listeners in the `Kafka` resource.\n+\n+.Example `Kafka` resource showing listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+    #...\n+----\n+\n+[id='property-generic-listeners-{context}']\n+=== `listeners`\n+You configure Kafka broker listeners using the `listeners` property in the `Kafka` resource.\n+Each listener is defined as an array.\n+\n+.Example listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+listeners:\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false\n+----\n+\n+The name and port must be unique within the Kafka cluster.\n+The name can be up to 25 characters long, comprising lower-case letters and numbers.\n+\n+By specifying a unique name and port for each listener,\n+you can configure multiple listeners.\n+\n+=== `type`\n+\n+The type is set as `internal`,\n+or for external listeners, as `route`, `loadbalancer`, `nodeport` or `ingress`.\n+\n+internal:: You can configure internal listeners with or without encryption using the `tls` property.\n++\n+.Example `internal` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+    #...\n+----\n+route:: Configures an external listener to expose Kafka using OpenShift `Routes` and the HAProxy router.\n++\n+A dedicated `Route` is created for every Kafka broker pod.\n+An additional `Route` is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Routes` to connect to Kafka on port 443.\n++\n+.Example `route` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+    #...\n+----\n+ingress:: Configures an external listener to expose Kafka using Kubernetes `Ingress` and the {NginxIngressController}.\n++\n+A dedicated `Ingress` resource is created for every Kafka broker pod.\n+An additional `Ingress` resource is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Ingress` resources to connect to Kafka on port 443.\n++\n+You must specify the hostnames used by the bootstrap and per-broker services\n+using xref:type-GenericKafkaListenerConfigurationBootstrap-reference[`GenericKafkaListenerConfigurationBootstrap`]\n+and xref:type-GenericKafkaListenerConfigurationBroker-reference[`GenericKafkaListenerConfigurationBroker`] properties.\n++\n+.Example `ingress` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+  #...\n+----\n++\n+NOTE: External listeners using `Ingress` are currently only tested with the {NginxIngressController}.\n+\n+\n+loadbalancer:: Configures an external listener to expose Kafka `Loadbalancer` type `Services`.\n++\n+A new loadbalancer service is created for every Kafka broker pod.\n+An additional loadbalancer is created to serve as a Kafka _bootstrap_ address.\n+Loadbalancers listen to connections on port 9094.\n++\n+You can use the `loadBalancerSourceRanges` property to configure xref:property-listener-config-source-ranges-reference[source ranges] to restrict access to the specified IP addresses.\n++\n+.Example `loadbalancer` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: external3\n+        port: 9094\n+        type: loadbalancer\n+        tls: true\n+        configuration:\n+          loadBalancerSourceRanges:\n+            - 10.0.0.0/8\n+            - 88.208.76.87/32\n+    #...\n+----\n+nodeport:: Configures an external listener to expose Kafka using `NodePort` type `Services`.", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIzOTc0Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488239742", "bodyText": "We use TLS authentication below, so it might be best to set it to true.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                tls: false\n          \n          \n            \n                tls: true", "author": "scholzj", "createdAt": "2020-09-14T21:49:54Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListenerConfigurationBootstrap.adoc", "diffHunk": "@@ -0,0 +1,196 @@\n+Configures bootstrap service overrides for external listeners.\n+\n+Broker service equivalents of `nodePort`, `host`, `loadBalancerIP` and `annotations` properties are configured in the xref:type-GenericKafkaListenerConfigurationBroker-reference[`GenericKafkaListenerConfigurationBroker` schema].\n+\n+[id='property-listener-config-altnames-{context}']\n+=== `alternativeNames`\n+\n+You can specify alternative names for the bootstrap service.\n+The names are added to the broker certificates and can be used for TLS hostname verification.\n+The `alternativeNames` property is applicable to all types of external listeners.\n+\n+.Example of an external `route` listener configured with an additional bootstrap address\n+[source,yaml,subs=\"attributes+\"]\n+----\n+listeners:\n+  #...\n+  - name: external\n+    port: 9094\n+    type: route\n+    tls: true\n+    authentication:\n+      type: tls\n+    configuration:\n+      bootstrap:\n+        alternativeNames: example.hostname\n+# ...\n+----\n+\n+[id='property-listener-config-host-{context}']\n+=== `host`\n+\n+The `host` property is used with `route` and `ingress` listeners to specify the hostnames used by the bootstrap and per-broker services.\n+\n+A `host` property value is mandatory for `ingress` listener configuration, as the Ingress controller does not assign any hostnames automatically.\n+Make sure that the hostnames resolve to the Ingress endpoints.\n+Strimzi will not perform any validation that the requested hosts are available and properly routed to the Ingress endpoints.\n+\n+.Example of host configuration for an ingress listener\n+[source,yaml,subs=\"attributes+\"]\n+----\n+listeners:\n+  #...\n+  - name: external\n+    port: 9094\n+    type: ingress\n+    tls: true\n+    authentication:\n+      type: tls\n+    configuration:\n+      bootstrap:\n+        host: bootstrap.myingress.com\n+      brokers:\n+      - broker: 0\n+        host: broker-0.myingress.com\n+      - broker: 1\n+        host: broker-1.myingress.com\n+      - broker: 2\n+        host: broker-2.myingress.com\n+# ...\n+----\n+\n+By default, `route` listener hosts are automatically assigned by OpenShift.\n+However, you can override the assigned route hosts by specifying hosts.\n+\n+Strimzi does not perform any validation that the requested hosts are available.\n+You must ensure that they are free and can be used.\n+\n+.Example of host configuration for a route listener\n+[source,yaml,subs=\"attributes+\"]\n+----\n+# ...\n+listeners:\n+  #...\n+  - name: external\n+    port: 9094\n+    type: route\n+    tls: true\n+    authentication:\n+      type: tls\n+    configuration:\n+      bootstrap:\n+        host: bootstrap.myrouter.com\n+      brokers:\n+      - broker: 0\n+        host: broker-0.myrouter.com\n+      - broker: 1\n+        host: broker-1.myrouter.com\n+      - broker: 2\n+        host: broker-2.myrouter.com\n+# ...\n+----\n+\n+[id='property-listener-config-nodeport-{context}']\n+=== `nodePort`\n+\n+By default, the port numbers used for the bootstrap and broker services are automatically assigned by Kubernetes.\n+You can override the assigned node ports for `nodeport` listeners by specifying the requested port numbers.\n+\n+Strimzi does not perform any validation on the requested ports.\n+You must ensure that they are free and available for use.\n+\n+.Example of an external listener configured with overrides for node ports\n+[source,yaml,subs=\"attributes+\"]\n+----\n+# ...\n+listeners:\n+  #...\n+  - name: external\n+    port: 9094\n+    type: nodeport\n+    tls: false", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0MjAwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488942008", "bodyText": "it's not true. The listeners field is an array of listener(s) and each listener is an object with some fields like name, port, and so on.", "author": "ppatierno", "createdAt": "2020-09-15T20:06:26Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListener.adoc", "diffHunk": "@@ -0,0 +1,323 @@\n+Configures listeners to connect to Kafka brokers within and outside Kubernetes.\n+\n+You configure the listeners in the `Kafka` resource.\n+\n+.Example `Kafka` resource showing listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+    #...\n+----\n+\n+[id='property-generic-listeners-{context}']\n+=== `listeners`\n+You configure Kafka broker listeners using the `listeners` property in the `Kafka` resource.\n+Each listener is defined as an array.", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxODgyMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r489218823", "bodyText": "I changed to:\n\nListeners are defined as an array.", "author": "PaulRMellor", "createdAt": "2020-09-16T07:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0MjAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NDQ4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488944485", "bodyText": "Should we highlight more this? I mean, the user could be confused by the fact that we mention port 443 but the example has 9094. So explaining that TLS on routes is enabled by default and it works on port 443 but the traffic is routed to the port 9094 configured in the example?", "author": "ppatierno", "createdAt": "2020-09-15T20:11:16Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListener.adoc", "diffHunk": "@@ -0,0 +1,323 @@\n+Configures listeners to connect to Kafka brokers within and outside Kubernetes.\n+\n+You configure the listeners in the `Kafka` resource.\n+\n+.Example `Kafka` resource showing listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+    #...\n+----\n+\n+[id='property-generic-listeners-{context}']\n+=== `listeners`\n+You configure Kafka broker listeners using the `listeners` property in the `Kafka` resource.\n+Each listener is defined as an array.\n+\n+.Example listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+listeners:\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false\n+----\n+\n+The name and port must be unique within the Kafka cluster.\n+The name can be up to 25 characters long, comprising lower-case letters and numbers.\n+\n+By specifying a unique name and port for each listener,\n+you can configure multiple listeners.\n+\n+=== `type`\n+\n+The type is set as `internal`,\n+or for external listeners, as `route`, `loadbalancer`, `nodeport` or `ingress`.\n+\n+internal:: You can configure internal listeners with or without encryption using the `tls` property.\n++\n+.Example `internal` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+    #...\n+----\n+route:: Configures an external listener to expose Kafka using OpenShift `Routes` and the HAProxy router.\n++\n+A dedicated `Route` is created for every Kafka broker pod.\n+An additional `Route` is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Routes` to connect to Kafka on port 443.", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyNDgxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r489224819", "bodyText": "Changed to:\n\nThe client connects on port 443, the default router port, but traffic is then routed to the port you configure,\nwhich is 9094 in this example.", "author": "PaulRMellor", "createdAt": "2020-09-16T07:33:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NDQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyNTc4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r489225785", "bodyText": "Did the same for ingress:\n\nThe client connects on port 443, the default controller port, but traffic is then routed to the port you configure,\nwhich is 9095 in this example.", "author": "PaulRMellor", "createdAt": "2020-09-16T07:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NDQ4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NjM2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488946364", "bodyText": "I was confused initially. It's not clear that you are referring to the example, are you? The sentence sounds like that loadbalancer always listens on port 9094 :-)", "author": "ppatierno", "createdAt": "2020-09-15T20:14:56Z", "path": "documentation/api/io.strimzi.api.kafka.model.listener.arraylistener.GenericKafkaListener.adoc", "diffHunk": "@@ -0,0 +1,323 @@\n+Configures listeners to connect to Kafka brokers within and outside Kubernetes.\n+\n+You configure the listeners in the `Kafka` resource.\n+\n+.Example `Kafka` resource showing listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+apiVersion: {KafkaApiVersion}\n+kind: Kafka\n+metadata:\n+  name: my-cluster\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+    #...\n+----\n+\n+[id='property-generic-listeners-{context}']\n+=== `listeners`\n+You configure Kafka broker listeners using the `listeners` property in the `Kafka` resource.\n+Each listener is defined as an array.\n+\n+.Example listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+listeners:\n+  - name: plain\n+    port: 9092\n+    type: internal\n+    tls: false\n+----\n+\n+The name and port must be unique within the Kafka cluster.\n+The name can be up to 25 characters long, comprising lower-case letters and numbers.\n+\n+By specifying a unique name and port for each listener,\n+you can configure multiple listeners.\n+\n+=== `type`\n+\n+The type is set as `internal`,\n+or for external listeners, as `route`, `loadbalancer`, `nodeport` or `ingress`.\n+\n+internal:: You can configure internal listeners with or without encryption using the `tls` property.\n++\n+.Example `internal` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: plain\n+        port: 9092\n+        type: internal\n+        tls: false\n+      - name: tls\n+        port: 9093\n+        type: internal\n+        tls: true\n+        authentication:\n+          type: tls\n+    #...\n+----\n+route:: Configures an external listener to expose Kafka using OpenShift `Routes` and the HAProxy router.\n++\n+A dedicated `Route` is created for every Kafka broker pod.\n+An additional `Route` is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Routes` to connect to Kafka on port 443.\n++\n+.Example `route` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: external1\n+        port: 9094\n+        type: route\n+        tls: true\n+    #...\n+----\n+ingress:: Configures an external listener to expose Kafka using Kubernetes `Ingress` and the {NginxIngressController}.\n++\n+A dedicated `Ingress` resource is created for every Kafka broker pod.\n+An additional `Ingress` resource is created to serve as a Kafka bootstrap address.\n+Kafka clients can use these `Ingress` resources to connect to Kafka on port 443.\n++\n+You must specify the hostnames used by the bootstrap and per-broker services\n+using xref:type-GenericKafkaListenerConfigurationBootstrap-reference[`GenericKafkaListenerConfigurationBootstrap`]\n+and xref:type-GenericKafkaListenerConfigurationBroker-reference[`GenericKafkaListenerConfigurationBroker`] properties.\n++\n+.Example `ingress` listener configuration\n+[source,yaml,subs=\"+attributes\"]\n+----\n+#...\n+spec:\n+  kafka:\n+    #...\n+    listeners:\n+      #...\n+      - name: external2\n+        port: 9095\n+        type: ingress\n+        tls: false\n+        authentication:\n+          type: tls\n+        configuration:\n+          bootstrap:\n+            host: bootstrap.myingress.com\n+          brokers:\n+          - broker: 0\n+            host: broker-0.myingress.com\n+          - broker: 1\n+            host: broker-1.myingress.com\n+          - broker: 2\n+            host: broker-2.myingress.com\n+  #...\n+----\n++\n+NOTE: External listeners using `Ingress` are currently only tested with the {NginxIngressController}.\n+\n+\n+loadbalancer:: Configures an external listener to expose Kafka `Loadbalancer` type `Services`.\n++\n+A new loadbalancer service is created for every Kafka broker pod.\n+An additional loadbalancer is created to serve as a Kafka _bootstrap_ address.\n+Loadbalancers listen to connections on port 9094.", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MDM2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r489250366", "bodyText": "It does.\nI've changed to:\n\nLoadbalancers listen to the specified port number, which is port 9094 in the following example.", "author": "PaulRMellor", "createdAt": "2020-09-16T08:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NjM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzA4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488953087", "bodyText": "the authentication field is not right under the listeners one because you can specify different authentication for every listener. I don't know in this case what's the best notation, maybe something like:\nKafka.spec.kafka.listeners.<listener>.authentication\n@scholzj wdyt?", "author": "ppatierno", "createdAt": "2020-09-15T20:27:36Z", "path": "documentation/modules/proc-configuring-kafka-user.adoc", "diffHunk": "@@ -16,7 +16,7 @@ For example:\n \n When you configure the `KafkaUser` authentication and authorization mechanisms, ensure they match the equivalent `Kafka` configuration:\n \n-* `KafkaUser.spec.authentication` matches `Kafka.spec.kafka.listeners.*.authentication`\n+* `KafkaUser.spec.authentication` matches `Kafka.spec.kafka.listeners.authentication`", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1NDM5Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488954396", "bodyText": "Well, I guess technically it would be like this: Kafka.spec.kafka.listeners[*].authentication, or?", "author": "scholzj", "createdAt": "2020-09-15T20:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1NjYzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488956631", "bodyText": "yeah, agree, using the JSON path notation is better.", "author": "ppatierno", "createdAt": "2020-09-15T20:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1OTYzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r489259635", "bodyText": "Thanks. Fixed in three places.", "author": "PaulRMellor", "createdAt": "2020-09-16T08:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzA4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzM1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r488953350", "bodyText": "ditto as above", "author": "ppatierno", "createdAt": "2020-09-15T20:28:08Z", "path": "documentation/modules/proc-securing-kafka.adoc", "diffHunk": "@@ -9,11 +9,11 @@ This procedure shows the steps involved in securing Kafka brokers when running S\n \n The security implemented for Kafka brokers must be compatible with the security implemented for the clients requiring access.\n \n-* `Kafka.spec.kafka.listeners.*.authentication` matches `KafkaUser.spec.authentication`\n+* `Kafka.spec.kafka.listeners.authentication` matches `KafkaUser.spec.authentication`", "originalCommit": "8aed1a5bea4a7c997d9fc67d03aaeccc58fb2ac5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1OTgwMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3627#discussion_r489259802", "bodyText": "Fixed", "author": "PaulRMellor", "createdAt": "2020-09-16T08:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzM1MA=="}], "type": "inlineReview"}, {"oid": "bde91b4e89f096fd407edbfe8ba7216688471bad", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bde91b4e89f096fd407edbfe8ba7216688471bad", "message": "review edits PP and JS\n\nSigned-off-by: prmellor <pmellor@redhat.com>", "committedDate": "2020-09-16T08:32:58Z", "type": "commit"}]}