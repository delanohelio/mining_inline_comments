{"pr_number": 2539, "pr_title": "[MO] - [system test] -> kafka connect with scram-sha plain", "pr_createdAt": "2020-02-11T18:51:27Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwOTkwMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378109903", "bodyText": "what does it mean? sorry for the stupid question :-)", "author": "ppatierno", "createdAt": "2020-02-12T08:49:58Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/ConnectST.java", "diffHunk": "@@ -157,6 +161,77 @@ void testKafkaConnectWithFileSinkPlugin() throws Exception {\n         KafkaTopicUtils.waitForKafkaTopicDeletion(CONNECT_TOPIC_NAME);\n     }\n \n+    @Test\n+    @Tag(NODEPORT_SUPPORTED)", "originalCommit": "4df231a1db7d2e5c70718daef463d008ebb87032", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDk1Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378390952", "bodyText": "The Nodeport supported means that the only environments which support Nodeports for instance in AWS nodeport is working only with specific configuration the same as for load balancers in OCP4. So, with this notation, we are excluding some tests to run only in a specific environment.", "author": "see-quick", "createdAt": "2020-02-12T17:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwOTkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDMwOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378110309", "bodyText": "why configuring the external node port? I don't see client or kafka connect are going to use it. Maybe it's related to the stupid question above :-)", "author": "ppatierno", "createdAt": "2020-02-12T08:50:48Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/ConnectST.java", "diffHunk": "@@ -157,6 +161,77 @@ void testKafkaConnectWithFileSinkPlugin() throws Exception {\n         KafkaTopicUtils.waitForKafkaTopicDeletion(CONNECT_TOPIC_NAME);\n     }\n \n+    @Test\n+    @Tag(NODEPORT_SUPPORTED)\n+    void testKafkaConnectWithPlainAndScramShaAuthentication() throws InterruptedException, ExecutionException, TimeoutException {\n+        // Use a Kafka with plain listener disabled\n+        KafkaResource.kafkaEphemeral(CLUSTER_NAME, 3)\n+                .editSpec()\n+                    .editKafka()\n+                        .withNewListeners()\n+                            .withNewPlain()\n+                                .withNewKafkaListenerAuthenticationScramSha512Auth()\n+                                .endKafkaListenerAuthenticationScramSha512Auth()\n+                            .endPlain()\n+                            .withNewKafkaListenerExternalNodePort()\n+                                .withNewKafkaListenerAuthenticationScramSha512Auth()\n+                                .endKafkaListenerAuthenticationScramSha512Auth()", "originalCommit": "4df231a1db7d2e5c70718daef463d008ebb87032", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MzgyNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378393824", "bodyText": "If you take a look at  line 223 you will see the invocation of the client's method\nkafkaClient.sendAndRecvMessagesScramSha(USER_NAME, NAMESPACE, CLUSTER_NAME, CONNECT_TOPIC_NAME, 2);\n\nwhich means, that Kafka Connect communicates with internal listener of Kafka and this client communicates with the external listener.\nI hope, this makes any sense  \ud83d\udcaf .", "author": "see-quick", "createdAt": "2020-02-12T17:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5NzY2OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378397669", "bodyText": "Sorry but how it's clear that client is using external listener from that call? There is a username, a namespace, a cluster name and a topic name :-/", "author": "ppatierno", "createdAt": "2020-02-12T17:21:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcxNzU2Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378717567", "bodyText": "I have got an idea but if you took a closer look on from where the client is you will find out that he is inside externalClients package. Anyway i can rename his for instance externalBasicKafkaClient. What do you think? @ppatierno", "author": "see-quick", "createdAt": "2020-02-13T08:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0ODgzMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378748833", "bodyText": "Yeah, I think that any solution which makes clear from where the client is connecting works fine for me.", "author": "ppatierno", "createdAt": "2020-02-13T09:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MTI3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r379081274", "bodyText": "Done.", "author": "see-quick", "createdAt": "2020-02-13T19:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDMwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDU2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378110566", "bodyText": "I think you added this tab my mistake.", "author": "ppatierno", "createdAt": "2020-02-12T08:51:19Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/ConnectST.java", "diffHunk": "@@ -364,7 +439,7 @@ void testSecretsWithKafkaConnectWithTlsAndTlsClientAuthentication() throws Excep\n \n     @Test\n     @Tag(NODEPORT_SUPPORTED)\n-    void testSecretsWithKafkaConnectWithTlsAndScramShaAuthentication() throws Exception {\n+        void testSecretsWithKafkaConnectWithTlsAndScramShaAuthentication() throws Exception {", "originalCommit": "4df231a1db7d2e5c70718daef463d008ebb87032", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5Mzk0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2539#discussion_r378393947", "bodyText": "Totally right. Thanks", "author": "see-quick", "createdAt": "2020-02-12T17:14:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExMDU2Ng=="}], "type": "inlineReview"}, {"oid": "f3715f34691a58fc4a33b4a17669e93263c0f408", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f3715f34691a58fc4a33b4a17669e93263c0f408", "message": "[MO] - [system test] -> kafka connect with scram-sha plain\n\nSigned-off-by: Seequick1 <morsak@redhat.com>", "committedDate": "2020-02-14T05:00:36Z", "type": "commit"}, {"oid": "b72611ec34749ad0c5ffadae641b052a459fc373", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b72611ec34749ad0c5ffadae641b052a459fc373", "message": "[MO] - [system test] -> fix\n\nSigned-off-by: Seequick1 <morsak@redhat.com>", "committedDate": "2020-02-14T05:00:36Z", "type": "commit"}, {"oid": "9c3c030aa22a74bf3b78800d95147ce2812f9529", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9c3c030aa22a74bf3b78800d95147ce2812f9529", "message": "[MO] - [fix] -> rename of client\n\nSigned-off-by: Seequick1 <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-02-14T05:04:34Z", "type": "commit"}, {"oid": "b9c60c7565ba5344d8c10854ec4b2963deeb4b87", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b9c60c7565ba5344d8c10854ec4b2963deeb4b87", "message": "[MO] - [rebase] -> conflicts\n\nSigned-off-by: Seequick1 <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-02-14T05:06:00Z", "type": "commit"}, {"oid": "b9c60c7565ba5344d8c10854ec4b2963deeb4b87", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b9c60c7565ba5344d8c10854ec4b2963deeb4b87", "message": "[MO] - [rebase] -> conflicts\n\nSigned-off-by: Seequick1 <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-02-14T05:06:00Z", "type": "forcePushed"}]}