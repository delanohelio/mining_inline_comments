{"pr_number": 764, "pr_title": "CAM-11690: Add filter and sort by deployment time options to DecisionDefinitionQuery", "pr_createdAt": "2020-03-30T14:10:35Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/764", "timeline": [{"oid": "507feda331d4664e9ed2cabccc9ce6776df4d49d", "url": "https://github.com/camunda/camunda-bpm-platform/commit/507feda331d4664e9ed2cabccc9ce6776df4d49d", "message": "chore(engine): Improve tests\n\nRelated to CAM-11325, CAM-11690", "committedDate": "2020-04-01T14:16:11Z", "type": "forcePushed"}, {"oid": "b96ef081b5149492ee048439903f2f8bdd2da1b1", "url": "https://github.com/camunda/camunda-bpm-platform/commit/b96ef081b5149492ee048439903f2f8bdd2da1b1", "message": "feat(engine): add filter/sort by deployment time to DecisionDefinition\n\n* convert DecisionDefinitionQueryTest to JUnit4\n\nRelated to CAM-11325, CAM-11690", "committedDate": "2020-04-07T13:19:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg5NzY4MQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/764#discussion_r404897681", "bodyText": "Please escape the comparison operator.", "author": "ThorbenLindhauer", "createdAt": "2020-04-07T15:24:11Z", "path": "engine/src/main/resources/org/camunda/bpm/engine/impl/mapping/entity/DecisionDefinition.xml", "diffHunk": "@@ -306,9 +292,15 @@\n       <if test=\"deploymentId != null\">\n         and RES.DEPLOYMENT_ID_ = #{deploymentId}\n       </if>\n+      <if test=\"deployedAfter != null\">\n+        and DEP.DEPLOY_TIME_ > #{deployedAfter}", "originalCommit": "b96ef081b5149492ee048439903f2f8bdd2da1b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg5ODczMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/764#discussion_r404898730", "bodyText": "This duplicate call to ClockUtil#setCurrentTime is not necessary.", "author": "ThorbenLindhauer", "createdAt": "2020-04-07T15:25:33Z", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/repository/DecisionDefinitionQueryTest.java", "diffHunk": "@@ -126,79 +136,155 @@ public void queryByDecisionDefinitionIds() {\n       .decisionDefinitionIdIn(ids.toArray(new String[ids.size()]))\n       .list();\n \n-    assertEquals(ids.size(), decisionDefinitions.size());\n+    assertThat(decisionDefinitions).hasSize(ids.size());\n     for (DecisionDefinition decisionDefinition : decisionDefinitions) {\n-      if (!ids.contains(decisionDefinition.getId())) {\n-        fail(\"Expected to find decision definition \"+ decisionDefinition);\n-      }\n+      assertThat(ids).contains(decisionDefinition.getId()).withFailMessage(\"Expected to find decision definition \" + decisionDefinition);\n     }\n   }\n \n   @Test\n-\tpublic void queryByDeploymentId() {\n+  public void queryByDeploymentId() {\n     DecisionDefinitionQuery query = repositoryService.createDecisionDefinitionQuery();\n \n-    query\n-      .deploymentId(firstDeploymentId);\n+    query.deploymentId(firstDeploymentId);\n \n     verifyQueryResults(query, 2);\n   }\n \n   @Test\n-\tpublic void queryByInvalidDeploymentId() {\n+  public void queryByInvalidDeploymentId() {\n     DecisionDefinitionQuery query = repositoryService.createDecisionDefinitionQuery();\n \n    query\n      .deploymentId(\"invalid\");\n \n     verifyQueryResults(query, 0);\n \n-    try {\n-      query.deploymentId(null);\n-      fail();\n-    } catch (NotValidException e) {\n-      // Expected exception\n-    }\n+    exceptionRule.expect(NotValidException.class);\n+    query.deploymentId(null);\n   }\n \n   @Test\n-\tpublic void queryByName() {\n+  public void testQueryByDeploymentTimeAfter() {\n+    // given\n+    Date startTest = DateUtils.addSeconds(ClockUtil.now(), 5);\n+    ClockUtil.setCurrentTime(startTest);\n+\n+    ClockUtil.setCurrentTime(DateUtils.addSeconds(startTest, 5));", "originalCommit": "b96ef081b5149492ee048439903f2f8bdd2da1b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2fae71775b498cb3e8e5a53270c2c8665e9ee7b4", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2fae71775b498cb3e8e5a53270c2c8665e9ee7b4", "message": "feat(engine): add filter/sort by deployment time to DecisionDefinition\n\n* convert DecisionDefinitionQueryTest to JUnit4\n\nRelated to CAM-11325, CAM-11690", "committedDate": "2020-04-08T05:49:08Z", "type": "forcePushed"}, {"oid": "9d7809453ba5a97dbb9a94fa059f9df250ea7213", "url": "https://github.com/camunda/camunda-bpm-platform/commit/9d7809453ba5a97dbb9a94fa059f9df250ea7213", "message": "feat(engine): add filter/sort by deployment time to DecisionDefinition\n\n* convert DecisionDefinitionQueryTest to JUnit4\n\nRelated to CAM-11325, CAM-11690", "committedDate": "2020-04-08T11:10:38Z", "type": "commit"}, {"oid": "9d7809453ba5a97dbb9a94fa059f9df250ea7213", "url": "https://github.com/camunda/camunda-bpm-platform/commit/9d7809453ba5a97dbb9a94fa059f9df250ea7213", "message": "feat(engine): add filter/sort by deployment time to DecisionDefinition\n\n* convert DecisionDefinitionQueryTest to JUnit4\n\nRelated to CAM-11325, CAM-11690", "committedDate": "2020-04-08T11:10:38Z", "type": "forcePushed"}]}