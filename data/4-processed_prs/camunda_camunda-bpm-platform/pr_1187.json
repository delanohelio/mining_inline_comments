{"pr_number": 1187, "pr_title": "CAM-12861: extract runMaven method", "pr_createdAt": "2020-12-11T15:35:02Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/1187", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NTY1Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1187#discussion_r542185653", "bodyText": "The STANDALONE param is not defined in main CE pipe, other put a define value to false or define the parameter.\nThe ci is failing with\ngroovy.lang.MissingMethodException: No signature of method: cambpmRunMavenByStageType.call() is applicable for argument types: (java.lang.String, java.lang.String, null) values: [engine-unit, h2, null]\n\nPossible solutions: call(java.lang.String, java.lang.String, boolean), call(java.lang.String, java.lang.String, boolean, boolean), wait(), any(), run(), run()\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            cambpmRunMavenByStageType('engine-unit', 'h2', params.STANDALONE)\n          \n          \n            \n                            cambpmRunMavenByStageType('engine-unit', 'h2', false)", "author": "yanavasileva", "createdAt": "2020-12-14T08:12:41Z", "path": "Jenkinsfile", "diffHunk": "@@ -120,7 +120,7 @@ pipeline {\n           steps {\n             catchError(stageResult: 'FAILURE') {\n               withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-                runMaven(true, false, false, cambpmGetMavenTargetDir('engine-unit'), cambpmGetMavenTargetAndProfile('engine-unit') + cambpmGetDbProfiles('h2'))\n+                cambpmRunMavenByStageType('engine-unit', 'h2', params.STANDALONE)", "originalCommit": "91c1ab1c6437c5a156cd163a6120bd6c355bd1b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM5NzQzMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1187#discussion_r542397430", "bodyText": "Fixed by directly referencing the params.STANDALONE parameter, as we do in the with Labels method.", "author": "koevskinikola", "createdAt": "2020-12-14T13:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4OTAzNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1187#discussion_r542189036", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        values 'postgresql_96', 'postgresql_94', 'postgresql_107', 'postgresql_112', 'postgresql_122', 'cockroachdb_201', 'mariadb_100', 'mariadb_102', 'mariadb_103', 'mariadb_galera', 'mysql_57', 'oracle_11', 'oracle_12', 'oracle_18', 'oracle_19', 'db2_105', 'db2_111', 'sqlserver_2017', 'sqlserver_2019'\n          \n          \n            \n                        values 'postgresql_96', 'mariadb_100', 'mysql_57', 'oracle_11','oracle_19', 'db2_111', 'sqlserver_2019'\n          \n          \n            \n                       // values 'postgresql_96', 'postgresql_94', 'postgresql_107', 'postgresql_112', 'postgresql_122', 'cockroachdb_201', 'mariadb_100', 'mariadb_102', 'mariadb_103', 'mariadb_galera', 'mysql_57', 'oracle_11', 'oracle_12', 'oracle_18', 'oracle_19', 'db2_105', 'db2_111', 'sqlserver_2017', 'sqlserver_2019'", "author": "yanavasileva", "createdAt": "2020-12-14T08:18:44Z", "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -225,13 +225,13 @@ pipeline {\n             values 'postgresql_96', 'postgresql_94', 'postgresql_107', 'postgresql_112', 'postgresql_122', 'cockroachdb_201', 'mariadb_100', 'mariadb_102', 'mariadb_103', 'mariadb_galera', 'mysql_57', 'oracle_11', 'oracle_12', 'oracle_18', 'oracle_19', 'db2_105', 'db2_111', 'sqlserver_2017', 'sqlserver_2019'", "originalCommit": "91c1ab1c6437c5a156cd163a6120bd6c355bd1b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM5NzkwNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1187#discussion_r542397906", "bodyText": "Why do we want to comment some values here?", "author": "koevskinikola", "createdAt": "2020-12-14T13:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4OTAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwODcxNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1187#discussion_r542408714", "bodyText": "to trigger the pipeline, now it fails with too large error", "author": "yanavasileva", "createdAt": "2020-12-14T14:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4OTAzNg=="}], "type": "inlineReview"}, {"oid": "caa743685eae893a0ed3f67896aac456a73c8e6f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/caa743685eae893a0ed3f67896aac456a73c8e6f", "message": "SQUASH ME: fix when condition", "committedDate": "2020-12-14T14:00:44Z", "type": "forcePushed"}, {"oid": "03ff41c60391291a6605c6fe5c282bb48e5a1207", "url": "https://github.com/camunda/camunda-bpm-platform/commit/03ff41c60391291a6605c6fe5c282bb48e5a1207", "message": "feat(ci): move runMaven to shared lib\n\n* Extract runMaven() method to the CamBPM shared library;\n* Adjust the method calls.\n\nRelated to CAM-12713, CAM-12861", "committedDate": "2020-12-15T09:43:05Z", "type": "commit"}, {"oid": "03ff41c60391291a6605c6fe5c282bb48e5a1207", "url": "https://github.com/camunda/camunda-bpm-platform/commit/03ff41c60391291a6605c6fe5c282bb48e5a1207", "message": "feat(ci): move runMaven to shared lib\n\n* Extract runMaven() method to the CamBPM shared library;\n* Adjust the method calls.\n\nRelated to CAM-12713, CAM-12861", "committedDate": "2020-12-15T09:43:05Z", "type": "forcePushed"}]}