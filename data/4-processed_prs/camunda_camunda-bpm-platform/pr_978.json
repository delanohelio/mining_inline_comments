{"pr_number": 978, "pr_title": "fix(engine): suppress sql exceptions", "pr_createdAt": "2020-09-10T11:41:14Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/978", "timeline": [{"oid": "e5a05a5200df5fbb9cb26736a02e17101333bbd2", "url": "https://github.com/camunda/camunda-bpm-platform/commit/e5a05a5200df5fbb9cb26736a02e17101333bbd2", "message": "wip", "committedDate": "2020-09-11T07:47:04Z", "type": "forcePushed"}, {"oid": "b82f689fc01b313c2203185c12ddfaacae1b374c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/b82f689fc01b313c2203185c12ddfaacae1b374c", "message": "wip", "committedDate": "2020-09-11T08:52:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2OTg4NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r488469885", "bodyText": "This will now only list a chunk of the flush (see the partitioning of operations in DbEntityManager#flushDbOperationManager). For debugging purposes, we should still include the entire flush in the exception message.", "author": "ThorbenLindhauer", "createdAt": "2020-09-15T08:07:34Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/db/EnginePersistenceLogger.java", "diffHunk": "@@ -115,19 +113,21 @@ public ProcessEngineException alreadyMarkedEntityInEntityCacheException(String i\n     ));\n   }\n \n-  public ProcessEngineException flushDbOperationException(List<DbOperation> operationsToFlush, DbOperation operation,\n-      Throwable cause) {\n+  public ProcessEngineException flushDbOperationException(List<DbOperation> operationsToFlush,\n+                                                          DbOperation failedOperation,\n+                                                          String message,\n+                                                          Throwable e) {\n \n-    String message = ExceptionUtil.collectExceptionMessages(cause);\n     String exceptionMessage = exceptionMessage(\n-      \"004\",\n-      \"Exception while executing Database Operation '{}' with message '{}'. Flush summary: \\n {}\",\n-      operation.toString(),\n-      message,\n-      buildStringFromList(operationsToFlush)\n+        \"004\",\n+        \"Exception while executing Database Operation '{}' with message '{}'. Flush summary: \\n {}\",\n+        failedOperation,\n+        message,\n+        buildStringFromList(operationsToFlush)", "originalCommit": "b82f689fc01b313c2203185c12ddfaacae1b374c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NDgwMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r489544800", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-09-16T15:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2OTg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3NzI0Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r488477242", "bodyText": "Let's have a full sentence as an exception message.", "author": "ThorbenLindhauer", "createdAt": "2020-09-15T08:19:20Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/util/ExceptionUtil.java", "diffHunk": "@@ -212,4 +213,19 @@ public static String collectExceptionMessages(Throwable cause) {\n \n     return message;\n   }\n+\n+  public static <T> T throwPersistenceException(Supplier<T> supplier) {\n+    try {\n+      return supplier.get();\n+\n+    } catch (Exception ex) {\n+      throw wrapPersistenceException(ex);\n+\n+    }\n+  }\n+\n+  public static ProcessEngineException wrapPersistenceException(Exception ex) {\n+    return new ProcessEngineException(\"Persistence Exception\", ex);", "originalCommit": "b82f689fc01b313c2203185c12ddfaacae1b374c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NDkxNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r489544917", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-09-16T15:51:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3NzI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3ODg5OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r488478898", "bodyText": "The name of the method suggests that it always throws an exception. Can we rename it to something like doWithExceptionWrapper?\nAlso, let's add a Javadoc comment here why we are wrapping these exceptions. This will help other developers understand and refactor this in the future.", "author": "ThorbenLindhauer", "createdAt": "2020-09-15T08:21:54Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/util/ExceptionUtil.java", "diffHunk": "@@ -212,4 +213,19 @@ public static String collectExceptionMessages(Throwable cause) {\n \n     return message;\n   }\n+\n+  public static <T> T throwPersistenceException(Supplier<T> supplier) {", "originalCommit": "b82f689fc01b313c2203185c12ddfaacae1b374c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTAwMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r489545003", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-09-16T15:51:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3ODg5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MTc0Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r488481743", "bodyText": "To reduce code complexity, I suggest to not override these methods. We will then have the wrapper exception twice in the hierarchy in case an operation fails in these methods when batching is used. I think that is ok.", "author": "ThorbenLindhauer", "createdAt": "2020-09-15T08:26:12Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/db/sql/BatchDbSqlSession.java", "diffHunk": "@@ -259,6 +283,19 @@ protected void updateBulk(DbBulkOperation operation) {\n     executeUpdate(statement, parameter);\n   }\n \n+  @Override\n+  public int executeUpdate(String updateStatement, Object parameter) {", "originalCommit": "b82f689fc01b313c2203185c12ddfaacae1b374c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTA3NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/978#discussion_r489545074", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-09-16T15:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MTc0Mw=="}], "type": "inlineReview"}, {"oid": "70ef778a9b58dc9727b630f95e83c2b36d86592c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/70ef778a9b58dc9727b630f95e83c2b36d86592c", "message": "wip", "committedDate": "2020-09-15T14:52:30Z", "type": "forcePushed"}, {"oid": "16ecd1bafd1a5a9d7741e485d3527128a4e06f49", "url": "https://github.com/camunda/camunda-bpm-platform/commit/16ecd1bafd1a5a9d7741e485d3527128a4e06f49", "message": "wip", "committedDate": "2020-09-16T09:51:53Z", "type": "forcePushed"}, {"oid": "1e7bfe64692f11f5e675036dce6bd157121d6a26", "url": "https://github.com/camunda/camunda-bpm-platform/commit/1e7bfe64692f11f5e675036dce6bd157121d6a26", "message": "fix(engine): suppress sql exceptions\n\nrelated to CAM-11503", "committedDate": "2020-09-16T15:49:13Z", "type": "forcePushed"}, {"oid": "5edcf956f5899a73642bcba5feef0b8dec4da559", "url": "https://github.com/camunda/camunda-bpm-platform/commit/5edcf956f5899a73642bcba5feef0b8dec4da559", "message": "fix(engine): suppress sql exceptions\n\nrelated to CAM-11503", "committedDate": "2020-09-17T06:29:36Z", "type": "forcePushed"}, {"oid": "8abe8812ecd7350be30a7737aa6da36d60b2423b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8abe8812ecd7350be30a7737aa6da36d60b2423b", "message": "fix(engine): suppress sql exceptions\n\nrelated to CAM-11503", "committedDate": "2020-09-17T09:34:27Z", "type": "commit"}, {"oid": "8abe8812ecd7350be30a7737aa6da36d60b2423b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8abe8812ecd7350be30a7737aa6da36d60b2423b", "message": "fix(engine): suppress sql exceptions\n\nrelated to CAM-11503", "committedDate": "2020-09-17T09:34:27Z", "type": "forcePushed"}, {"oid": "0ddb1a525ff027b0f2ae7562d8d4a6ac51009267", "url": "https://github.com/camunda/camunda-bpm-platform/commit/0ddb1a525ff027b0f2ae7562d8d4a6ac51009267", "message": "squash me", "committedDate": "2020-09-17T14:09:36Z", "type": "commit"}]}