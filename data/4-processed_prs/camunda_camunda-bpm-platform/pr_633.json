{"pr_number": 633, "pr_title": "CAM-11345: remove BOM from pom hierarchy", "pr_createdAt": "2020-01-29T12:56:37Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/633", "timeline": [{"oid": "197ab3d5352fa905d70ee3eae12c8cb3fe1e594d", "url": "https://github.com/camunda/camunda-bpm-platform/commit/197ab3d5352fa905d70ee3eae12c8cb3fe1e594d", "message": "restore correct pom property", "committedDate": "2020-01-30T08:30:14Z", "type": "forcePushed"}, {"oid": "3f6edf07785d46c7e14dea86a665da142203fc3b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/3f6edf07785d46c7e14dea86a665da142203fc3b", "message": "chore(repo): remove BOM from POM parent hierarchy\n\n- The BOM is now no longer a parent of all other poms, but\n  only imported in camunda-parent's dependencyManagement section\n- This resolves issues with the resolution of transitive dependencies\n  in our qa projects, where we depend on older modules that are also\n  built in the current reactor. Example: Instance migration setup for\n  7.5 uses camunda-engine:7.5. With the previous POM hierarchy, any\n  transitive dependencies of camunda-engine:7.5 would be overridden to\n  be 7.13.0-SNAPSHOT dependencies. This lead to workarounds where we\n  would explicitly declare all transitive dependencies in the POM and\n  pin their versions to 7.5. With the removal of the BOM from the parent\n  hierarchy, such modules can simply import a different BOM version and\n  all dependencies are resolved like expected\n- This also solves one issue we had with parallel builds, as the\n  parallel builder was not able to build a proper dependency tree out of\n  a dependency chain like A (7.13.0-SNAPSHOT) <- B (7.5.0) <- C\n  (7.13.0-SNAPSHOT)\n- However, this change also means that properties defined in the BOM\n  will not be available to any other POMs in the repo. We need this at\n  least for the maven-bundle-plugin. That's why I moved these properties\n  to camunda-root and made camunda-root a parent of both camunda-parent\n  and camunda-bom.\n- In some test suites (engine-rest and engine-integration), we use\n  shrinkwrap to create artifacts with Maven dependencies. As far as I\n  understand, these dependencies must be installed in the local Maven\n  repository, because we use Shrinkwrap in offline mode. The tests also\n  require camunda-bom, so it is important that camunda-bom is built in a\n  reactor before these test modules are built. I resolved this by adding\n  explicit BOM dependencies to those modules\n\nrelated to CAM-11345", "committedDate": "2020-01-30T12:23:34Z", "type": "commit"}, {"oid": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "url": "https://github.com/camunda/camunda-bpm-platform/commit/0f7952c96c2a6c0beda6c9d0025c570f555d3876", "message": "chore(project): remove unnecessary dependency declarations\n\n- with the change in the parent hierarchy, we no longer need to\n  explicilty declare transitive dependencies to force them to an older\n  version\n\nrelated to CAM-11345", "committedDate": "2020-01-30T12:23:42Z", "type": "commit"}, {"oid": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "url": "https://github.com/camunda/camunda-bpm-platform/commit/0f7952c96c2a6c0beda6c9d0025c570f555d3876", "message": "chore(project): remove unnecessary dependency declarations\n\n- with the change in the parent hierarchy, we no longer need to\n  explicilty declare transitive dependencies to force them to an older\n  version\n\nrelated to CAM-11345", "committedDate": "2020-01-30T12:23:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5Njk1Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r374496953", "bodyText": "Any specific reasons to add the groupId and version? This should be correctly inherited from the parent, doesn't it?", "author": "tmetzke", "createdAt": "2020-02-04T06:42:37Z", "path": "parent/pom.xml", "diffHunk": "@@ -3,12 +3,14 @@\n \n   <parent>\n     <groupId>org.camunda.bpm</groupId>\n-    <artifactId>camunda-bom</artifactId>\n+    <artifactId>camunda-root</artifactId>\n     <version>7.13.0-SNAPSHOT</version>\n-    <relativePath>../bom</relativePath>\n+    <relativePath>../</relativePath>\n   </parent>\n \n+  <groupId>org.camunda.bpm</groupId>\n   <artifactId>camunda-parent</artifactId>\n+  <version>7.13.0-SNAPSHOT</version>", "originalCommit": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUyNjcxNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r374526714", "bodyText": "Agree, I tested it without and seems ok. There are a couple of more places where we can clean the groupId and/or version:\n\nbom/pom.xml\ndatabase/pom.xml", "author": "yanavasileva", "createdAt": "2020-02-04T08:19:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5Njk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE4NTkwNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r375185904", "bodyText": "Correct, it's a leftover. Initially I had this POM and the BOM as children of camunda-bpm-release-parent.", "author": "ThorbenLindhauer", "createdAt": "2020-02-05T10:52:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5Njk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5ODMyMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r374498320", "bodyText": "If the BOM uses the properties in the dependencyManagement section and parent imports the BOM in its own dependencyManagement, the properties aren't necessary in the parent, are they?", "author": "tmetzke", "createdAt": "2020-02-04T06:47:34Z", "path": "pom.xml", "diffHunk": "@@ -23,6 +23,16 @@\n \n   <properties>\n     <license.includeTransitiveDependencies>false</license.includeTransitiveDependencies>\n+\n+    <!-- These properties are used in both the BOM as well as camunda-parent and subprojects -->\n+    <version.mybatis>3.5.3</version.mybatis>\n+    <version.joda-time>2.1</version.joda-time>\n+    <version.uuid-generator>3.2.0</version.uuid-generator>\n+    <version.camunda.commons>1.9.0</version.camunda.commons>\n+    <version.camunda.connect>1.3.0</version.camunda.connect>\n+    <version.camunda.spin>1.8.0</version.camunda.spin>\n+    <version.camunda.template-engines>1.1.0</version.camunda.template-engines>\n+    <version.camunda.ee.xslt-plugin>1.1.0</version.camunda.ee.xslt-plugin>", "originalCommit": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwMTU3Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r374501573", "bodyText": "Do you know why this wasn't necessary when the BOM was the parent of this?\nAny specific errors if we remove this that you already encountered? (Haven't tested yet myself)", "author": "tmetzke", "createdAt": "2020-02-04T07:00:33Z", "path": "parent/pom.xml", "diffHunk": "@@ -622,6 +631,11 @@\n       <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>\n       <url>http://repository.springsource.com/maven/bundles/external</url>\n     </repository>\n+\n+    <repository>\n+      <id>fix-maven-snapshots-issue-with-nexus</id>\n+      <url>allow-parent-pom-resolving-when-snapshot</url>\n+    </repository>", "originalCommit": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE4OTUzOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r375189539", "bodyText": "I have to check that one again. This was a bit of an attempt to keep the effective pom the same after the refactoring, but I'm not sure it is really needed.", "author": "ThorbenLindhauer", "createdAt": "2020-02-05T11:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwMTU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg0MTk1NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r375841954", "bodyText": "I assume the repository entry must be present in every pom (4487ed5 has added this, but I don't understand the reasoning behind it). Looking at effective poms, this is inherited to any descendant pom.\nPreviously we had the BOM as the parent of every pom in the repo except for camunda-root, and that is where this dummy repo was configured. With the changes we made, it is probably sufficient to have them in camunda-root only. I will try that.", "author": "ThorbenLindhauer", "createdAt": "2020-02-06T13:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwMTU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNzYxNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r374507614", "bodyText": "Just to understand this correctly:\nThis dependency is included so this project is definitely build after the BOM project?\nShouldn't this already be the case because\n\nthis project's parent is rest-root\nrest-root's parent is database-settings\ndatabase-settings' parent is parent\nparent depends on BOM to be build", "author": "tmetzke", "createdAt": "2020-02-04T07:22:22Z", "path": "engine-rest/engine-rest/pom.xml", "diffHunk": "@@ -92,6 +92,18 @@\n       <version>1.6.5</version>\n       <scope>test</scope>\n     </dependency>\n+    \n+    <!--\n+      needed for offline shrinkwrap (in particular CustomJacksonDateFormatTest), \n+      BOM must be installed before this module is built\n+    -->\n+    <dependency>\n+      <groupId>org.camunda.bpm</groupId>\n+      <artifactId>camunda-bom</artifactId>\n+      <version>${project.version}</version>\n+      <type>pom</type>\n+      <scope>test</scope>\n+    </dependency>", "originalCommit": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE4OTIyMg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r375189222", "bodyText": "I though the same, but apparently it is not. You can try this out by removing the dependency here, removing the 7.13.0-SNAPSHOT bom from your local Maven repo and then building the reactor in offline mode (-o, so that the bom won't be fetched from remote). org.camunda.bpm.engine.rest.CustomJacksonDateFormatTest should fail then.\nMy theory is the following:\n\nThe bom pom is in the reactor so it can be resolved for imports and exports already before the bom module is built.\nThe test uses Shrinkwrap. Shrinkwrap seems to resolve the bom from the local Maven repo.\nAs the bom is not properly built yet, it is also not installed into the Maven repo.\n\nThat said, I have no documentation at hand supporting this claim :)", "author": "ThorbenLindhauer", "createdAt": "2020-02-05T10:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNzYxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwODg4MQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/633#discussion_r374508881", "bodyText": "Similar to camunda-engine-rest-core, shouldn't the BOM already reliably come first in the reactor build since\n\nthis project's parent is camunda-qa\ncamunda-qa's parent is database-settings\ndatabase-settings' parent is parent\nparent depends on BOM to be build", "author": "tmetzke", "createdAt": "2020-02-04T07:26:41Z", "path": "qa/integration-tests-engine/pom.xml", "diffHunk": "@@ -176,6 +176,17 @@\n       -->\n     </dependency>\n \n+    <!--\n+      needed for offline shrinkwrap,\n+      BOM must be installed before this module is built\n+    -->\n+    <dependency>\n+      <groupId>org.camunda.bpm</groupId>\n+      <artifactId>camunda-bom</artifactId>\n+      <version>${project.version}</version>\n+      <type>pom</type>\n+      <scope>test</scope>\n+    </dependency>", "originalCommit": "0f7952c96c2a6c0beda6c9d0025c570f555d3876", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fa41a8715a1a75a939fb6e9fb6870dd8ea012373", "url": "https://github.com/camunda/camunda-bpm-platform/commit/fa41a8715a1a75a939fb6e9fb6870dd8ea012373", "message": "squash me: implement review hints", "committedDate": "2020-02-07T14:09:16Z", "type": "commit"}, {"oid": "fa41a8715a1a75a939fb6e9fb6870dd8ea012373", "url": "https://github.com/camunda/camunda-bpm-platform/commit/fa41a8715a1a75a939fb6e9fb6870dd8ea012373", "message": "squash me: implement review hints", "committedDate": "2020-02-07T14:09:16Z", "type": "forcePushed"}]}