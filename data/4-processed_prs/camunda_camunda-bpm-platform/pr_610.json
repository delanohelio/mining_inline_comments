{"pr_number": 610, "pr_title": "CAM-10784: feat(engine): add historic job log hostname information", "pr_createdAt": "2020-01-06T16:15:02Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/610", "timeline": [{"oid": "f96f3685680caa04fdb5945c29a706cde5daab59", "url": "https://github.com/camunda/camunda-bpm-platform/commit/f96f3685680caa04fdb5945c29a706cde5daab59", "message": "feat(engine): add hostname to historic job log\n\n* Provide a hostName configuration String;\n* Add a HostNameProvider interface;\n* Replace MetricsReporterIdProvider with HostNameProvider;\n* Define Hostname vs Metrics Provider priority during ProcessEngine bootstrap;\n* Deprecate MetricsReporterIdProvider;\n\nRelated to CAM-10784", "committedDate": "2020-01-07T14:06:04Z", "type": "commit"}, {"oid": "69a6d85324998e2e137a6820e80f7fadba7cc77f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/69a6d85324998e2e137a6820e80f7fadba7cc77f", "message": "chore(engine): refactor historic job log tests to junit4", "committedDate": "2020-01-07T14:06:11Z", "type": "commit"}, {"oid": "ad3624293842e26904010633a0bdc755f61f23dd", "url": "https://github.com/camunda/camunda-bpm-platform/commit/ad3624293842e26904010633a0bdc755f61f23dd", "message": "feat(engine): add historic job log hostname tests\n\nRelated to CAM-10784", "committedDate": "2020-01-07T14:06:11Z", "type": "commit"}, {"oid": "ad3624293842e26904010633a0bdc755f61f23dd", "url": "https://github.com/camunda/camunda-bpm-platform/commit/ad3624293842e26904010633a0bdc755f61f23dd", "message": "feat(engine): add historic job log hostname tests\n\nRelated to CAM-10784", "committedDate": "2020-01-07T14:06:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMTEwMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364211103", "bodyText": "I guess we can use the following instead of both lines?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ensureNotNull(\"hostName\", hostname);\n          \n          \n            \n                ensureNotContainsEmptyString(\"hostName\", Collections.singletonList(hostname));\n          \n          \n            \n                ensureNotEmpty(\"hostName\", hostname);", "author": "tmetzke", "createdAt": "2020-01-08T12:40:36Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "diffHunk": "@@ -166,6 +168,14 @@ public HistoricJobLogQuery withoutTenantId() {\n     return this;\n   }\n \n+  @Override\n+  public HistoricJobLogQuery hostname(String hostname) {\n+    ensureNotNull(\"hostName\", hostname);\n+    ensureNotContainsEmptyString(\"hostName\", Collections.singletonList(hostname));", "originalCommit": "ad3624293842e26904010633a0bdc755f61f23dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI5NzI3NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364297275", "bodyText": "You're right, completely missed that method. Thanks!", "author": "koevskinikola", "createdAt": "2020-01-08T15:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMTEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMzQyNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364213426", "bodyText": "This import can be removed if the other comment in this class below is accepted.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.Collections;", "author": "tmetzke", "createdAt": "2020-01-08T12:47:20Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "diffHunk": "@@ -20,6 +20,7 @@\n import static org.camunda.bpm.engine.impl.util.EnsureUtil.ensureNotContainsNull;\n import static org.camunda.bpm.engine.impl.util.EnsureUtil.ensureNotNull;\n \n+import java.util.Collections;", "originalCommit": "ad3624293842e26904010633a0bdc755f61f23dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI3MjIwNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364272206", "bodyText": "Let's move this to the ProcessEngineConfiguration#initHostname method", "author": "tmetzke", "createdAt": "2020-01-08T14:56:15Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/ProcessEngineImpl.java", "diffHunk": "@@ -90,6 +91,13 @@ public ProcessEngineImpl(ProcessEngineConfigurationImpl processEngineConfigurati\n     this.historyLevel = processEngineConfiguration.getHistoryLevel();\n     this.transactionContextFactory = processEngineConfiguration.getTransactionContextFactory();\n \n+    // provide hostname before history cleanup job is created in `executeSchemaOperations()`\n+    String hostname = processEngineConfiguration.getHostname();\n+    if (hostname == null) {\n+      hostname = processEngineConfiguration.getHostnameProvider().getHostname(this);\n+      processEngineConfiguration.setHostname(hostname);\n+    }", "originalCommit": "ad3624293842e26904010633a0bdc755f61f23dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "47c5dbe9af0226f05f1c8919da1f434ac3fb7382", "url": "https://github.com/camunda/camunda-bpm-platform/commit/47c5dbe9af0226f05f1c8919da1f434ac3fb7382", "message": "chore(engine): implement review hints\n\n* Move Hostname initialization completely to the ProcessEngineConfigurationImpl class;\n* Refactor the HostnameProvider interface to accept a ProcessEngineConfiguration instance as a method parameter;\n* Add additional tests for Hostname/Metrics Reporter scenarios.", "committedDate": "2020-01-09T10:55:23Z", "type": "commit"}, {"oid": "af26b6cbfc5ae5f7108c291ea88434ca1795d99d", "url": "https://github.com/camunda/camunda-bpm-platform/commit/af26b6cbfc5ae5f7108c291ea88434ca1795d99d", "message": "chore(engine): add a configuration property to the bootstrap rule\n\n* Provide Java 8 syntax for ProcessEngineBootstrapRule configuration.", "committedDate": "2020-01-09T10:56:45Z", "type": "commit"}, {"oid": "8c2908daf5edf0beb8ea55a664a5da3080c53bb7", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8c2908daf5edf0beb8ea55a664a5da3080c53bb7", "message": "SQUASH ME: optimize imports and refactor HostnameProvider", "committedDate": "2020-01-09T11:41:39Z", "type": "commit"}, {"oid": "0578ac387aace79a3f2036a2b743e36ab1757264", "url": "https://github.com/camunda/camunda-bpm-platform/commit/0578ac387aace79a3f2036a2b743e36ab1757264", "message": "chore(engine): add review hints\n\n* Add test case for default behavior;\n* Add comment for Metrics Reporter behavior in ProcessEngineImpl code.", "committedDate": "2020-01-09T12:38:59Z", "type": "commit"}, {"oid": "bfdd1618cecf47451f5b73b0c7ca3593ef4319f2", "url": "https://github.com/camunda/camunda-bpm-platform/commit/bfdd1618cecf47451f5b73b0c7ca3593ef4319f2", "message": "SQUASH ME: simplify test code", "committedDate": "2020-01-09T13:15:43Z", "type": "commit"}]}