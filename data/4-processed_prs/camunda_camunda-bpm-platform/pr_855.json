{"pr_number": 855, "pr_title": "feat(rest/open-api): add historic process instance endpoints", "pr_createdAt": "2020-06-10T13:16:21Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/855", "timeline": [{"oid": "cbb899027416aeab5f0d1757740dab5675d1ee5a", "url": "https://github.com/camunda/camunda-bpm-platform/commit/cbb899027416aeab5f0d1757740dab5675d1ee5a", "message": "feat(rest/open-api): add historic process instance endpoints\n\nrelated to CAM-11567", "committedDate": "2020-06-10T13:16:43Z", "type": "forcePushed"}, {"oid": "0e1cb7c5a8a519e3884d7a514c3d9eaef99f5114", "url": "https://github.com/camunda/camunda-bpm-platform/commit/0e1cb7c5a8a519e3884d7a514c3d9eaef99f5114", "message": "feat(rest/open-api): add historic process instance endpoints\n\nrelated to CAM-11567", "committedDate": "2020-06-17T13:04:09Z", "type": "forcePushed"}, {"oid": "22752c573e33823a27395fda04b8b993273d9262", "url": "https://github.com/camunda/camunda-bpm-platform/commit/22752c573e33823a27395fda04b8b993273d9262", "message": "feat(rest/open-api): add historic process instance endpoints\n\nrelated to CAM-11567", "committedDate": "2020-06-17T15:00:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc4NDAwNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r446784007", "bodyText": "It can be null if clearedRemovalTime or calculatedRemovalTime is provided\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  format = \"date-time\"\n          \n          \n            \n                  nullable = false\n          \n          \n            \n                  format = \"date-time\"", "author": "yanavasileva", "createdAt": "2020-06-29T05:42:39Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/history/SetRemovalTimeToHistoricProcessInstancesDto.ftl", "diffHunk": "@@ -0,0 +1,45 @@\n+<@lib.dto>\n+\n+  <@lib.property\n+      name = \"historicProcessInstanceIds\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"The id of the process instance.\"/>\n+\n+  <@lib.property\n+      name = \"historicProcessInstanceQuery\"\n+      type = \"ref\"\n+      dto = \"HistoricProcessInstanceQueryDto\"\n+      desc = \"Query for the historic process instances to set the removal time for.\"/>\n+\n+  <@lib.property\n+      name = \"hierarchical\"\n+      type = \"boolean\"\n+      desc = \"Sets the removal time to all historic process instances in the hierarchy.\n+              Value may only be `true`, as `false` is the default behavior.\"/>\n+\n+  <@lib.property\n+      name = \"absoluteRemovalTime\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      nullable = false", "originalCommit": "22752c573e33823a27395fda04b8b993273d9262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2NDQyMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r448364420", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-07-01T13:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc4NDAwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc4NTM0Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r446785347", "bodyText": "we don't have this 404 documented in docs-manual, a job will be created even if the process instance doesn't exist", "author": "yanavasileva", "createdAt": "2020-06-29T05:47:12Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/history/process-instance/delete/post.ftl", "diffHunk": "@@ -0,0 +1,57 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"deleteHistoricProcessInstancesAsync\"\n+      tag = \"Historic Process Instance\"\n+      summary = \"Delete Async (POST)\"\n+      desc = \"Delete multiple historic process instances asynchronously (batch).\n+              At least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.\n+              If both are provided then all instances matching query criterion and instances from the list will be deleted.\" />\n+\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"DeleteHistoricProcessInstancesDto\"\n+      examples = [\n+                  '\"example-1\": {\n+                     \"summary\": \"POST `/history/process-instance/delete`\",\n+                     \"value\": {\n+                                \"deleteReason\" : \"aReason\",\n+                                \"historicProcessInstanceIds\": [\"aProcess\",\"secondProcess\"],\n+                                \"historicProcessInstanceQuery\": {\n+                                  \"startedAfter\": \"2016-10-11T11:44:13.000+0200\",\n+                                  \"finishedBefore\": \"2016-10-13T11:44:17.000+0200\"\n+                                }\n+                              }\n+                   }'\n+                ] />\n+  \"responses\": {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"BatchDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 response\",\n+                       \"description\": \"Response for POST `/history/process-instance/delete`\",\n+                       \"value\": {\n+                                  \"id\": \"120b568d-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"type\": \"process-set-removal-time\",\n+                                  \"totalJobs\": 12,\n+                                  \"batchJobsPerSeed\": 100,\n+                                  \"invocationsPerBatchJob\": 1,\n+                                  \"seedJobDefinitionId\": \"120b5690-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"monitorJobDefinitionId\": \"120b568f-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"batchJobDefinitionId\": \"120b568e-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"tenantId\": \"accounting\"\n+                                }\n+                     }'] />\n+\n+    <@lib.response\n+        code = \"404\"\n+        dto = \"ExceptionDto\"\n+        last = true\n+        desc = \"Not found\n+                Historic process instance with given id does not exist.\" />", "originalCommit": "22752c573e33823a27395fda04b8b993273d9262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2NDUxNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r448364514", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-07-01T13:30:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc4NTM0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc4ODc3MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r446788770", "bodyText": "The responses in docs-manual differ, could you please check? (400 and 403)", "author": "yanavasileva", "createdAt": "2020-06-29T05:58:57Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/history/process-instance/report/get.ftl", "diffHunk": "@@ -0,0 +1,111 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getHistoricProcessInstanceDurationReport\"\n+      tag = \"Historic Process Instance\"\n+      summary = \"Get Duration Report\"\n+      desc = \"Retrieves a report about the duration of completed process instances, grouped by a period.\n+              These reports include the maximum, minimum and average duration of all completed process instances which were started in a given period.\n+\n+              **Note:** This only includes historic data.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"reportType\"\n+        location = \"query\"\n+        type = \"string\"\n+        required = true\n+        desc = \"**Mandatory.** Specifies the type of the report to retrieve.\n+                To retrieve a report about the duration of process instances, the value must be set to `duration`.\" />\n+\n+    <@lib.parameter\n+        name = \"periodUnit\"\n+        location = \"query\"\n+        type = \"string\"\n+        required = true\n+        enumValues = [\"month\", \"quarter\"]\n+        desc = \"**Mandatory.** Specifies the granularity of the report. Valid values are `month` and `quarter`.\" />\n+\n+    <@lib.parameter\n+        name = \"processDefinitionIdIn\"\n+        location = \"query\"\n+        type = \"array\"\n+        desc = \"Filter by process definition ids. Must be a comma-separated list of process definition ids.\" />\n+\n+    <@lib.parameter\n+        name = \"processDefinitionKeyIn\"\n+        location = \"query\"\n+        type = \"array\"\n+        desc = \"Filter by process definition keys. Must be a comma-separated list of process definition keys.\" />\n+\n+    <@lib.parameter\n+        name = \"startedBefore\"\n+        location = \"query\"\n+        type = \"string\"\n+        format = \"date-time\"\n+        desc = \"Restrict to instances that were started before the given date.\n+                By [default](), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`.\" />\n+\n+    <@lib.parameter\n+        name = \"startedAfter\"\n+        location = \"query\"\n+        type = \"string\"\n+        format = \"date-time\"\n+        last = true\n+        desc = \"Restrict to instances that were started after the given date.\n+                By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`.\" />\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"DurationReportResultDto\"\n+        array = true\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"GET `/history/process-instance/report?reportType=duration&periodUnit=quarter&processDefinitionKeyIn=invoice`\",\n+                       \"value\": [\n+                                  {\n+                                    \"period\": 1,\n+                                    \"periodUnit\": \"QUARTER\",\n+                                    \"maximum\": 500000,\n+                                    \"minimum\": 250000,\n+                                    \"average\": 375000\n+                                  },\n+                                  {\n+                                    \"period\": 2,\n+                                    \"periodUnit\": \"QUARTER\",\n+                                    \"maximum\": 600000,\n+                                    \"minimum\": 300000,\n+                                    \"average\": 450000\n+                                  },\n+                                  {\n+                                    \"period\": 3,\n+                                    \"periodUnit\": \"QUARTER\",\n+                                    \"maximum\": 1000000,\n+                                    \"minimum\": 500000,\n+                                    \"average\": 750000\n+                                  },\n+                                  {\n+                                    \"period\": 4,\n+                                    \"periodUnit\": \"QUARTER\",\n+                                    \"maximum\": 200000,\n+                                    \"minimum\": 100000,\n+                                    \"average\": 150000\n+                                  }\n+                                ]\n+                     }'] />\n+\n+    <@lib.response\n+        code = \"404\"\n+        dto = \"ExceptionDto\"\n+        last = true\n+        desc = \"Not Found\n+                Historic process instance with given id does not exist.\n+                See the [Introduction](${docsUrl}/reference/rest/overview/#error-handling) for the error response format.\"/>", "originalCommit": "22752c573e33823a27395fda04b8b993273d9262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2ODg3Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r448368877", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-07-01T13:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc4ODc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc5MTE2Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r446791162", "bodyText": "ms and timezone are missing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            \"executedActivityAfter\": \"2013-03-23T13:42:44\",\n          \n          \n            \n                                            \"executedActivityAfter\": \"2013-03-23T13:42:44.000+0200\",", "author": "yanavasileva", "createdAt": "2020-06-29T06:06:38Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/history/process-instance/post.ftl", "diffHunk": "@@ -0,0 +1,93 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"queryHistoricProcessInstances\"\n+      tag = \"Historic Process Instance\"\n+      summary = \"Get List (POST)\"\n+      desc = \"Queries for historic process instances that fulfill the given parameters.\n+              This method is slightly more powerful than the\n+              [Get Process Instance](${docsUrl}/reference/rest/history/process-instance/get-process-instance-query/)\n+              because it allows filtering by multiple process variables of types `String`, `Number` or `Boolean`.\" />\n+\n+  \"parameters\" : [\n+    <#assign last = true >\n+    <#include \"/lib/commons/pagination-params.ftl\" >\n+  ],\n+  <#assign requestMethod=\"POST\"/>\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"HistoricProcessInstanceQueryDto\"\n+      examples = [\n+                  '\"example-1\": {\n+                     \"summary\": \"POST `/history/process-instance`\",\n+                     \"value\": {\n+                                \"finishedAfter\": \"2013-01-01T00:00:00.000+0200\",\n+                                \"finishedBefore\": \"2013-04-01T23:59:59.000+0200\",\n+                                \"executedActivityAfter\": \"2013-03-23T13:42:44\",", "originalCommit": "22752c573e33823a27395fda04b8b993273d9262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2OTE1OQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r448369159", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-07-01T13:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc5MTE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc5MzYyMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r446793620", "bodyText": "suspended and createUserId are missing in batch example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                              \"batchJobDefinitionId\": \"120b568e-724a-11e9-98b7-be5e0f7575b7\",\n          \n          \n            \n                                              \"tenantId\": \"accounting\"\n          \n          \n            \n                                              \"batchJobDefinitionId\": \"120b568e-724a-11e9-98b7-be5e0f7575b7\",\n          \n          \n            \n                                              \"tenantId\": \"accounting\", \n          \n          \n            \n                                              \"suspended\": false,\n          \n          \n            \n                                              \"createUserId\": null", "author": "yanavasileva", "createdAt": "2020-06-29T06:13:54Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/history/process-instance/set-removal-time/post.ftl", "diffHunk": "@@ -0,0 +1,61 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"setRemovalTimeAsync\"\n+      tag = \"Historic Process Instance\"\n+      summary = \"Set Removal Time Async (POST)\"\n+      desc = \"Sets the removal time to multiple historic process instances asynchronously (batch).\n+\n+              At least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.\n+              If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"SetRemovalTimeToHistoricProcessInstancesDto\"\n+      examples = [\n+                  '\"example-1\": {\n+                     \"summary\": \"POST `/history/process-instance/set-removal-time`\",\n+                     \"value\": {\n+                                \"absoluteRemovalTime\": \"2019-05-05T11:56:24.725+0200\",\n+                                \"hierarchical\": true,\n+                                \"historicProcessInstanceQuery\": {\n+                                  \"unfinished\": true\n+                                },\n+                                \"historicProcessInstanceIds\": [\n+                                  \"b4d2ad98-7240-11e9-98b7-be5e0f7575b7\",\n+                                  \"b4d2ad94-7240-11e9-98b7-be5e0f7575b7\"\n+                                ]\n+                              }\n+                   }'\n+                ] />\n+  \"responses\" : {\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"BatchDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 response\",\n+                       \"description\": \"Response for POST `/history/process-instance/set-removal-time`\",\n+                       \"value\": {\n+                                  \"id\": \"120b568d-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"type\": \"process-set-removal-time\",\n+                                  \"totalJobs\": 12,\n+                                  \"batchJobsPerSeed\": 100,\n+                                  \"invocationsPerBatchJob\": 1,\n+                                  \"seedJobDefinitionId\": \"120b5690-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"monitorJobDefinitionId\": \"120b568f-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"batchJobDefinitionId\": \"120b568e-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"tenantId\": \"accounting\"", "originalCommit": "22752c573e33823a27395fda04b8b993273d9262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MDc3Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r448370773", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-07-01T13:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc5MzYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc5NjM2NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r446796364", "bodyText": "suspended and createUserId are missing in batch example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                              \"tenantId\": \"accounting\"\n          \n          \n            \n                                              \"tenantId\": \"accounting\", \n          \n          \n            \n                                              \"suspended\": false,\n          \n          \n            \n                                              \"createUserId\": null", "author": "yanavasileva", "createdAt": "2020-06-29T06:21:44Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/history/process-instance/delete/post.ftl", "diffHunk": "@@ -0,0 +1,57 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"deleteHistoricProcessInstancesAsync\"\n+      tag = \"Historic Process Instance\"\n+      summary = \"Delete Async (POST)\"\n+      desc = \"Delete multiple historic process instances asynchronously (batch).\n+              At least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.\n+              If both are provided then all instances matching query criterion and instances from the list will be deleted.\" />\n+\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"DeleteHistoricProcessInstancesDto\"\n+      examples = [\n+                  '\"example-1\": {\n+                     \"summary\": \"POST `/history/process-instance/delete`\",\n+                     \"value\": {\n+                                \"deleteReason\" : \"aReason\",\n+                                \"historicProcessInstanceIds\": [\"aProcess\",\"secondProcess\"],\n+                                \"historicProcessInstanceQuery\": {\n+                                  \"startedAfter\": \"2016-10-11T11:44:13.000+0200\",\n+                                  \"finishedBefore\": \"2016-10-13T11:44:17.000+0200\"\n+                                }\n+                              }\n+                   }'\n+                ] />\n+  \"responses\": {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"BatchDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 response\",\n+                       \"description\": \"Response for POST `/history/process-instance/delete`\",\n+                       \"value\": {\n+                                  \"id\": \"120b568d-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"type\": \"process-set-removal-time\",\n+                                  \"totalJobs\": 12,\n+                                  \"batchJobsPerSeed\": 100,\n+                                  \"invocationsPerBatchJob\": 1,\n+                                  \"seedJobDefinitionId\": \"120b5690-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"monitorJobDefinitionId\": \"120b568f-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"batchJobDefinitionId\": \"120b568e-724a-11e9-98b7-be5e0f7575b7\",\n+                                  \"tenantId\": \"accounting\"", "originalCommit": "22752c573e33823a27395fda04b8b993273d9262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MDg0Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/855#discussion_r448370846", "bodyText": "\ud83d\udc4d", "author": "tasso94", "createdAt": "2020-07-01T13:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc5NjM2NA=="}], "type": "inlineReview"}, {"oid": "fda6044f6b2cfe85c255afb7e2243273dbd42568", "url": "https://github.com/camunda/camunda-bpm-platform/commit/fda6044f6b2cfe85c255afb7e2243273dbd42568", "message": "feat(rest/open-api): add historic process instance endpoints\n\nrelated to CAM-11567", "committedDate": "2020-07-01T13:59:11Z", "type": "commit"}, {"oid": "2b02f0b6bc8aa9fab5ad1e02c3ee257b84e9406b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b02f0b6bc8aa9fab5ad1e02c3ee257b84e9406b", "message": "SQUASH ME: Follow review hints", "committedDate": "2020-07-01T13:59:13Z", "type": "commit"}, {"oid": "2b02f0b6bc8aa9fab5ad1e02c3ee257b84e9406b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b02f0b6bc8aa9fab5ad1e02c3ee257b84e9406b", "message": "SQUASH ME: Follow review hints", "committedDate": "2020-07-01T13:59:13Z", "type": "forcePushed"}]}