{"pr_number": 762, "pr_title": "CAM-11535: feat(openapi): add deployment endpoints", "pr_createdAt": "2020-03-27T09:35:38Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/762", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4MDUyNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400880525", "bodyText": "should be array", "author": "yanavasileva", "createdAt": "2020-03-31T12:41:09Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/RedeploymentDto.ftl", "diffHunk": "@@ -0,0 +1,21 @@\n+<@lib.dto\n+    title = \"RedeploymentDto\"\n+    desc = \"A JSON object with the following properties:\" >\n+\n+    <@lib.property\n+        name = \"resourceIds\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4MDY2Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400880666", "bodyText": "should be array", "author": "yanavasileva", "createdAt": "2020-03-31T12:41:22Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/RedeploymentDto.ftl", "diffHunk": "@@ -0,0 +1,21 @@\n+<@lib.dto\n+    title = \"RedeploymentDto\"\n+    desc = \"A JSON object with the following properties:\" >\n+\n+    <@lib.property\n+        name = \"resourceIds\"\n+        type = \"string\"\n+        desc = \"A list of deployment resource ids to re-deploy.\" />\n+\n+    <@lib.property\n+        name = \"resourceNames\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDIzOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890239", "bodyText": "boolean?", "author": "yanavasileva", "createdAt": "2020-03-31T12:55:55Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDQ3Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890473", "bodyText": "boolean?", "author": "yanavasileva", "createdAt": "2020-03-31T12:56:15Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDYyMg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890622", "bodyText": "missing date format", "author": "yanavasileva", "createdAt": "2020-03-31T12:56:29Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDc4NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890784", "bodyText": "missing date format", "author": "yanavasileva", "createdAt": "2020-03-31T12:56:42Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Restricts to all deployments after the given date.\n+                By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+                `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\"/>\n+\n+    <@lib.parameter\n+        name = \"before\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MTA1Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400891053", "bodyText": "boolean?", "author": "yanavasileva", "createdAt": "2020-03-31T12:57:06Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400901077", "bodyText": "do you mind to add this example in this PR\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"Request successful.\"/>\n          \n          \n            \n                    desc = \"Request successful.\"\n          \n          \n            \n                    examples = ['\"example-1\": {\n          \n          \n            \n                                   \"summary\": \"POST `/deployment/create`\",\n          \n          \n            \n                                   \"value\": [\n          \n          \n            \n                                     {\n          \n          \n            \n                                         \"links\": [\n          \n          \n            \n                                             {\n          \n          \n            \n                                                 \"method\": \"GET\",\n          \n          \n            \n                                                 \"href\": \"http://localhost:38080/rest-test/deployment/aDeploymentId\",\n          \n          \n            \n                                                 \"rel\": \"self\"\n          \n          \n            \n                                             }\n          \n          \n            \n                                         ],\n          \n          \n            \n                                         \"id\": \"aDeploymentId\",\n          \n          \n            \n                                         \"name\": \"aName\",\n          \n          \n            \n                                         \"source\": \"process application\",\n          \n          \n            \n                                         \"deploymentTime\": \"2013-01-23T13:59:43.000+0200\",\n          \n          \n            \n                                         \"tenantId\": null,\n          \n          \n            \n                                         \"deployedProcessDefinitions\": {\n          \n          \n            \n                                             \"aProcDefId\": {\n          \n          \n            \n                                                 \"id\": \"aProcDefId\",\n          \n          \n            \n                                                 \"key\": \"aKey\",\n          \n          \n            \n                                                 \"category\": \"aCategory\",\n          \n          \n            \n                                                 \"description\": \"aDescription\",\n          \n          \n            \n                                                 \"name\": \"aName\",\n          \n          \n            \n                                                 \"version\": 42,\n          \n          \n            \n                                                 \"resource\": \"aResourceName\",\n          \n          \n            \n                                                 \"deploymentId\": \"aDeploymentId\",\n          \n          \n            \n                                                 \"diagram\": \"aResourceName.png\",\n          \n          \n            \n                                                 \"suspended\": true,\n          \n          \n            \n                                                 \"tenantId\": null,\n          \n          \n            \n                                                 \"versionTag\": null\n          \n          \n            \n                                             }\n          \n          \n            \n                                         },\n          \n          \n            \n                                         \"deployedCaseDefinitions\": null,\n          \n          \n            \n                                         \"deployedDecisionDefinitions\": null,\n          \n          \n            \n                                         \"deployedDecisionRequirementsDefinitions\": null\n          \n          \n            \n                                     }\n          \n          \n            \n                                   ]\n          \n          \n            \n                                 }']/>", "author": "yanavasileva", "createdAt": "2020-03-31T13:11:57Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "diffHunk": "@@ -16,7 +16,7 @@\n   \"responses\": {\n     <@lib.response\n         code = \"200\"\n-        dto = \"DeploymentDto\"\n+        dto = \"DeploymentWithDefinitionsDto\"\n         desc = \"Request successful.\"/>", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTAxOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400915019", "bodyText": "do you mind to add this example in this PR for 400 response:\n        examples = ['\"example-1\": {\n                       \"summary\": \"GET `/deployment?name=deploymentName`\",\n                       \"value\": [\n                         {\n                             \"type\": \"ParseException\",\n                             \"message\": \"ENGINE-09005 Could not parse BPMN process. Errors: Exclusive Gateway 'ExclusiveGateway_1' has outgoing sequence flow 'SequenceFlow_0' without condition which is not the default flow.\",\n                             \"details\": {\n                                 \"invoice.bpmn\": {\n                                     \"errors\": [\n                                         {\n                                             \"message\": \"Exclusive Gateway 'ExclusiveGateway_1' has outgoing sequence flow 'SequenceFlow_0' without condition which is not the default flow.\",\n                                             \"line\": 77,\n                                             \"column\": 15,\n                                             \"mainBpmnElementId\": \"ExclusiveGateway_1\",\n                                             \"bpmnElementIds\": [\n                                                 \"ExclusiveGateway_1\",\n                                                 \"SequenceFlow_0\"\n                                             ]\n                                         }\n                                     ],\n                                     \"warnings\": [\n                                         {\n                                             \"message\": \"It is not recommended to use a cancelling boundary timer event with a time cycle.\",\n                                             \"line\": 87,\n                                             \"column\": 20,\n                                             \"mainBpmnElementId\": \"BoundaryEvent_1\",\n                                             \"bpmnElementIds\": [\n                                                 \"BoundaryEvent_1\"\n                                             ]\n                                         }\n                                     ]\n                                 }\n                             }\n                         }\n                       ]\n                     }']", "author": "yanavasileva", "createdAt": "2020-03-31T13:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzODM1MQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400938351", "bodyText": "\ud83d\ude4f and add the following in the description of 400 response:\nSee the [Introduction](/reference/rest/overview/#parse-exceptions) for the error response format.", "author": "yanavasileva", "createdAt": "2020-03-31T14:02:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwOTYxNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r401609615", "bodyText": "I'll add the examples together with the rest of the review hints.", "author": "koevskinikola", "createdAt": "2020-04-01T13:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3MzMxMg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r401673312", "bodyText": "thank you", "author": "yanavasileva", "createdAt": "2020-04-01T14:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTczNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400915737", "bodyText": "boolean", "author": "yanavasileva", "createdAt": "2020-03-31T13:32:06Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTg5NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400915895", "bodyText": "boolean", "author": "yanavasileva", "createdAt": "2020-03-31T13:32:20Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNjU3OQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400916579", "bodyText": "boolean", "author": "yanavasileva", "createdAt": "2020-03-31T13:33:16Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNjczNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400916736", "bodyText": "format should be date", "author": "yanavasileva", "createdAt": "2020-03-31T13:33:29Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Restricts to all deployments after the given date.\n+                By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+                `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\"/>\n+\n+    <@lib.parameter\n+        name = \"before\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNzA0Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400917043", "bodyText": "format should be date", "author": "yanavasileva", "createdAt": "2020-03-31T13:33:54Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyNzE5Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400927197", "bodyText": "\"type\": \"string\",\n\"format\": \"binary\",\nare missing?", "author": "yanavasileva", "createdAt": "2020-03-31T13:47:59Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "diffHunk": "@@ -0,0 +1,55 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentResourceData\"\n+      tag = \"Deployment\"\n+      desc = \"Retrieves the binary content of a deployment resource for the given deployment by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the deployment.\" />\n+\n+    <@lib.parameter\n+        name = \"resourceId\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the deployment resource.\" />\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful. The media type of the response depends on the filename.\",\n+      \"content\": {\n+        \"application/octet-stream\": {\n+          \"schema\": {\n+            \"description\": \"For files without any MIME type information, a byte stream is returned.\"", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyNzI4Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400927283", "bodyText": "\"type\": \"string\",\n\"format\": \"binary\",\nare missing?", "author": "yanavasileva", "createdAt": "2020-03-31T13:48:07Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "diffHunk": "@@ -0,0 +1,55 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentResourceData\"\n+      tag = \"Deployment\"\n+      desc = \"Retrieves the binary content of a deployment resource for the given deployment by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the deployment.\" />\n+\n+    <@lib.parameter\n+        name = \"resourceId\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the deployment resource.\" />\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful. The media type of the response depends on the filename.\",\n+      \"content\": {\n+        \"application/octet-stream\": {\n+          \"schema\": {\n+            \"description\": \"For files without any MIME type information, a byte stream is returned.\"\n+          }\n+        },\n+        \"application/xml\": {\n+          \"schema\": {\n+            \"description\": \"Files with MIME type information are returned as the saved type. For example, a", "originalCommit": "3485c59c92dadd9c3126bb2e0e471d7630394736", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNTgyNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r401615825", "bodyText": "Here, the media type should be a wildcard since it depends on the MIME type. Wildcard media types are possible in the OpenAPI spec (documented here: https://swagger.io/docs/specification/media-types/)", "author": "koevskinikola", "createdAt": "2020-04-01T13:30:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyNzI4Mw=="}], "type": "inlineReview"}, {"oid": "ce4af17096728c73d34c96c4cb98ce6bfd27af53", "url": "https://github.com/camunda/camunda-bpm-platform/commit/ce4af17096728c73d34c96c4cb98ce6bfd27af53", "message": "feat(openapi): add deployment endpoints\n\nRelated to CAM-11535", "committedDate": "2020-04-01T15:25:28Z", "type": "commit"}, {"oid": "88bdc65e4c7f37c69b4d2b00835aa1ab883482fe", "url": "https://github.com/camunda/camunda-bpm-platform/commit/88bdc65e4c7f37c69b4d2b00835aa1ab883482fe", "message": "chore(rest): implement review hints", "committedDate": "2020-04-01T15:25:29Z", "type": "commit"}, {"oid": "88bdc65e4c7f37c69b4d2b00835aa1ab883482fe", "url": "https://github.com/camunda/camunda-bpm-platform/commit/88bdc65e4c7f37c69b4d2b00835aa1ab883482fe", "message": "chore(rest): implement review hints", "committedDate": "2020-04-01T15:25:29Z", "type": "forcePushed"}]}