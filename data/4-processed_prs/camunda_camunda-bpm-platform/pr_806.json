{"pr_number": 806, "pr_title": "CAM-11669: use latest OpenJPA 2.x patch level", "pr_createdAt": "2020-04-28T07:41:15Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/806", "timeline": [{"oid": "cad6e937428411f6e947b92ebb98653bf848fec3", "url": "https://github.com/camunda/camunda-bpm-platform/commit/cad6e937428411f6e947b92ebb98653bf848fec3", "message": "code cleanup", "committedDate": "2020-04-28T15:21:39Z", "type": "forcePushed"}, {"oid": "244e26f1e88a3c44cc5fdad31ac027bbbcadf978", "url": "https://github.com/camunda/camunda-bpm-platform/commit/244e26f1e88a3c44cc5fdad31ac027bbbcadf978", "message": "code cleanup", "committedDate": "2020-04-29T07:11:47Z", "type": "forcePushed"}, {"oid": "da44c4e74cf1dceba85c37abc81dfcff825f7a65", "url": "https://github.com/camunda/camunda-bpm-platform/commit/da44c4e74cf1dceba85c37abc81dfcff825f7a65", "message": "chore(project): use latest OpenJPA 2.x patch level\n\n- applies to the engine test suite\n- fixes IBM JDK 8 builds\n- using OpenJPA 2 in the tests require two changes:\n  - OpenJPA's default behavior of enriching entity classes must be\n    re-activated (dynamic subclassing)\n  - OpenJPA 2 generates a different column type by default for big\n    integers which made the tests fail; I explicitly configured the old\n    column type\n\nrelated to CAM-11669", "committedDate": "2020-04-29T12:19:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NTI1Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/806#discussion_r417385256", "bodyText": "It would be keeping with the pattern if we move the version in a property defined in the properties section above.", "author": "koevskinikola", "createdAt": "2020-04-29T15:00:42Z", "path": "parent/pom.xml", "diffHunk": "@@ -164,6 +164,11 @@\n         <version>1.0</version>\n         <scope>provided</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.hibernate.javax.persistence</groupId>\n+        <artifactId>hibernate-jpa-2.0-api</artifactId>\n+        <version>1.0.1.Final</version>", "originalCommit": "da44c4e74cf1dceba85c37abc81dfcff825f7a65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3MjA0Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/806#discussion_r419372047", "bodyText": "Not sure this is really a pattern we have, it's rather 50:50 when you look at all the dependencies. If we need the version as a property, we can still change that in the future.", "author": "ThorbenLindhauer", "createdAt": "2020-05-04T11:33:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NTI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4OTY3Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/806#discussion_r417389677", "bodyText": "Is the provided scope really needed in the dependencyManagement section?\n\n\nIf it can be removed, then we should also remove the test scope on the openjpa dependency definition here (line 219).\n\n\nDo we also need to update the dependency here as in the engine/pom.xml?", "author": "koevskinikola", "createdAt": "2020-04-29T15:06:52Z", "path": "parent/pom.xml", "diffHunk": "@@ -164,6 +164,11 @@\n         <version>1.0</version>\n         <scope>provided</scope>", "originalCommit": "da44c4e74cf1dceba85c37abc81dfcff825f7a65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3MTM2NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/806#discussion_r419371365", "bodyText": "Re 1: It's not needed.\nRe 2: This is a dependency management section. If we still use the dependency in any inherting module, we should keep it here. If we don't use it anymore we can remove it. We have case 1, we use persistence-api still in engine-spring where we test in the case of Spring 3 against a Hibernate version that implements JPA 1.0.", "author": "ThorbenLindhauer", "createdAt": "2020-05-04T11:32:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4OTY3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5MjQ0OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/806#discussion_r417392448", "bodyText": "Should we document this change in the migration guide, or it would not impact users at all?", "author": "koevskinikola", "createdAt": "2020-04-29T15:10:31Z", "path": "engine/pom.xml", "diffHunk": "@@ -103,11 +103,11 @@\n     </dependency>\n \n     <dependency>\n-      <groupId>javax.persistence</groupId>\n-      <artifactId>persistence-api</artifactId>\n+      <groupId>org.hibernate.javax.persistence</groupId>\n+      <artifactId>hibernate-jpa-2.0-api</artifactId>", "originalCommit": "da44c4e74cf1dceba85c37abc81dfcff825f7a65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2OTEwMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/806#discussion_r419369103", "bodyText": "I don't think this needs a mention. JPA 2.0 is part of Java EE 6 and Java EE 6 was e.g. already supported by JBoss 7.2.", "author": "ThorbenLindhauer", "createdAt": "2020-05-04T11:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5MjQ0OA=="}], "type": "inlineReview"}, {"oid": "19acfc87082d693ff86ea3518558e3ee8f5285ea", "url": "https://github.com/camunda/camunda-bpm-platform/commit/19acfc87082d693ff86ea3518558e3ee8f5285ea", "message": "chore(project): use latest OpenJPA 2.x patch level\n\n- applies to the engine test suite\n- fixes IBM JDK 8 builds\n- using OpenJPA 2 in the tests require two changes:\n  - OpenJPA's default behavior of enriching entity classes must be\n    re-activated (dynamic subclassing)\n  - OpenJPA 2 generates a different column type by default for big\n    integers which made the tests fail; I explicitly configured the old\n    column type\n\nrelated to CAM-11669", "committedDate": "2020-05-04T11:34:27Z", "type": "commit"}, {"oid": "19acfc87082d693ff86ea3518558e3ee8f5285ea", "url": "https://github.com/camunda/camunda-bpm-platform/commit/19acfc87082d693ff86ea3518558e3ee8f5285ea", "message": "chore(project): use latest OpenJPA 2.x patch level\n\n- applies to the engine test suite\n- fixes IBM JDK 8 builds\n- using OpenJPA 2 in the tests require two changes:\n  - OpenJPA's default behavior of enriching entity classes must be\n    re-activated (dynamic subclassing)\n  - OpenJPA 2 generates a different column type by default for big\n    integers which made the tests fail; I explicitly configured the old\n    column type\n\nrelated to CAM-11669", "committedDate": "2020-05-04T11:34:27Z", "type": "forcePushed"}]}