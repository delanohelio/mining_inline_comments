{"pr_number": 706, "pr_title": "CAM-11529: add documentation for condition endpoint", "pr_createdAt": "2020-03-04T15:31:35Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/706", "timeline": [{"oid": "2a7c5b5c81c55e4ecb05546a183ab4d563139ff1", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2a7c5b5c81c55e4ecb05546a183ab4d563139ff1", "message": "chore(rest-openapi):add documentation for condition endpoint\n\nRelated to CAM-11529", "committedDate": "2020-03-16T13:43:08Z", "type": "forcePushed"}, {"oid": "a3c608fefefb2c73e62932490ef62c14f1177f9b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/a3c608fefefb2c73e62932490ef62c14f1177f9b", "message": "chore(rest-openapi):add documentation for condition endpoint\n\nRelated to CAM-11529", "committedDate": "2020-03-16T13:46:20Z", "type": "commit"}, {"oid": "a3c608fefefb2c73e62932490ef62c14f1177f9b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/a3c608fefefb2c73e62932490ef62c14f1177f9b", "message": "chore(rest-openapi):add documentation for condition endpoint\n\nRelated to CAM-11529", "committedDate": "2020-03-16T13:46:20Z", "type": "forcePushed"}, {"oid": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "url": "https://github.com/camunda/camunda-bpm-platform/commit/94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "message": "fix(rest-openapi): Fix accidently removed file\n\nRelated to CAM-11529", "committedDate": "2020-03-16T15:38:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNjY3Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393126672", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    dto = \"ProcessInstanceDto\"\n          \n          \n            \n                    dto = \"ProcessInstanceDto\"\n          \n          \n            \n                    array = true", "author": "yanavasileva", "createdAt": "2020-03-16T15:52:09Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl", "diffHunk": "@@ -0,0 +1,66 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"evaluateCondition\"\n+      tag = \"Condition\"\n+      desc = \"Triggers evaluation of conditions for conditional start event(s). \n+      Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). \n+      For more information see the [Conditional Start Events](${docsUrl}/reference/bpmn20/events/conditional-events/#conditional-start-event) section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"EvaluationConditionDto\"\n+      examples = ['\"example-1\": {\n+                      \"summary\": \"POST /condition\",\n+                       \"description\": \"The content of the Request Body\",\n+                       \"value\": {\n+                         \"variables\" : {\n+                            \"temperature\" : {\"value\" : 24, \"type\": \"Integer\",\n+                                          \"valueInfo\" : { \"transient\" : true } },\n+                            \"city\" : {\"value\" : \"Parma\", \"type\": \"String\"}\n+                            },\n+                         \"businessKey\" : \"aBusinessKey\",\n+                         \"tenantId\" : \"aTenantId\"\n+                         }\n+                      }']/>\n+\n+  \"responses\": {\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessInstanceDto\"", "originalCommit": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxMjc5Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393212797", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  For more information see the [Conditional Start Events](${docsUrl}/reference/bpmn20/events/conditional-events/#conditional-start-event) section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />\n          \n          \n            \n                  For more information see the [Conditional Start Events](${docsUrl}/reference/bpmn20/events/conditional-events/#conditional-start-event)\n          \n          \n            \n                  section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />", "author": "yanavasileva", "createdAt": "2020-03-16T18:01:01Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl", "diffHunk": "@@ -0,0 +1,66 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"evaluateCondition\"\n+      tag = \"Condition\"\n+      desc = \"Triggers evaluation of conditions for conditional start event(s). \n+      Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). \n+      For more information see the [Conditional Start Events](${docsUrl}/reference/bpmn20/events/conditional-events/#conditional-start-event) section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />", "originalCommit": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNDQ1NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393214454", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"If the user is not allowed to start the process instance of the process definition, which start condition was evaluted to `true`.\"/>\n          \n          \n            \n                    desc = \"If the user is not allowed to start the process instance of the process definition, which start condition was evaluated to `true`.\"/>", "author": "yanavasileva", "createdAt": "2020-03-16T18:03:08Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl", "diffHunk": "@@ -0,0 +1,66 @@\n+{\n+  <@lib.endpointInfo\n+      id = \"evaluateCondition\"\n+      tag = \"Condition\"\n+      desc = \"Triggers evaluation of conditions for conditional start event(s). \n+      Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). \n+      For more information see the [Conditional Start Events](${docsUrl}/reference/bpmn20/events/conditional-events/#conditional-start-event) section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"EvaluationConditionDto\"\n+      examples = ['\"example-1\": {\n+                      \"summary\": \"POST /condition\",\n+                       \"description\": \"The content of the Request Body\",\n+                       \"value\": {\n+                         \"variables\" : {\n+                            \"temperature\" : {\"value\" : 24, \"type\": \"Integer\",\n+                                          \"valueInfo\" : { \"transient\" : true } },\n+                            \"city\" : {\"value\" : \"Parma\", \"type\": \"String\"}\n+                            },\n+                         \"businessKey\" : \"aBusinessKey\",\n+                         \"tenantId\" : \"aTenantId\"\n+                         }\n+                      }']/>\n+\n+  \"responses\": {\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessInstanceDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                        \"summary\": \"Status 200 Response\",\n+                        \"description\": \"The Response content of a status 200\",\n+                        \"value\": [{\n+                          \"links\": [],\n+                          \"id\": \"aProcInstId\",\n+                          \"definitionId\": \"aProcDefId\",\n+                          \"businessKey\": \"aBusinessKey\",\n+                          \"caseInstanceId\": null,\n+                          \"ended\": false,\n+                          \"suspended\": false,\n+                          \"tenantId\": \"aTenantId\"\n+                        },\n+                        {\n+                          \"links\": [],\n+                          \"id\": \"anotherId\",\n+                          \"definitionId\": \"aProcDefId\",\n+                          \"businessKey\": \"aBusinessKey\",\n+                          \"caseInstanceId\": null,\n+                          \"ended\": false,\n+                          \"suspended\": false,\n+                          \"tenantId\": aTenantId\n+                        }]\n+                    }']/>\n+\n+    <@lib.response\n+        code = \"400\"\n+        desc = \"If both tenantId and withoutTenantId are supplied.\"/>\n+\n+    <@lib.response\n+        code = \"403\"\n+        last = true\n+        desc = \"If the user is not allowed to start the process instance of the process definition, which start condition was evaluted to `true`.\"/>", "originalCommit": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNTA5MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393215090", "bodyText": "this is a (/my) typo in docs-manual", "author": "yanavasileva", "createdAt": "2020-03-16T18:03:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNDQ1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNzA5NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393217095", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered. Each key is a variable name and each value a JSON variable value object with the following properties.\"/>\n          \n          \n            \n                    desc = \"A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered.\n          \n          \n            \n                            Each key is a variable name and each value a JSON variable value object with the following properties.\"/>", "author": "yanavasileva", "createdAt": "2020-03-16T18:06:30Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/EvaluationConditionDto.ftl", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"type\" : \"object\",\n+  \"properties\" : {\n+\n+    <@lib.property\n+        name = \"variables\"\n+        type = \"object\"\n+        additionalProperties = true\n+        dto = \"VariableValueDto\"\n+        desc = \"A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered. Each key is a variable name and each value a JSON variable value object with the following properties.\"/>", "originalCommit": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNzMzMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393217330", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"Used to evaluate a condition for a tenant with the given id. Will only evaluate conditions of process definitions which belong to the tenant.\"/>\n          \n          \n            \n                    desc = \"Used to evaluate a condition for a tenant with the given id.\n          \n          \n            \n                            Will only evaluate conditions of process definitions which belong to the tenant.\"/>", "author": "yanavasileva", "createdAt": "2020-03-16T18:06:48Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/EvaluationConditionDto.ftl", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"type\" : \"object\",\n+  \"properties\" : {\n+\n+    <@lib.property\n+        name = \"variables\"\n+        type = \"object\"\n+        additionalProperties = true\n+        dto = \"VariableValueDto\"\n+        desc = \"A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered. Each key is a variable name and each value a JSON variable value object with the following properties.\"/>\n+\n+    <@lib.property\n+        name = \"businessKey\"\n+        type = \"string\"\n+        desc = \"Used for the process instances that have been triggered after the evaluation.\"/>\n+\n+    <@lib.property\n+        name = \"tenantId\"\n+        type = \"string\"\n+        desc = \"Used to evaluate a condition for a tenant with the given id. Will only evaluate conditions of process definitions which belong to the tenant.\"/>", "originalCommit": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNzYzMQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/706#discussion_r393217631", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not. Value may only be true, as false is the default behavior.\"/>\n          \n          \n            \n                    desc = \"A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not.\n          \n          \n            \n                            Value may only be true, as false is the default behavior.\"/>", "author": "yanavasileva", "createdAt": "2020-03-16T18:07:10Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/EvaluationConditionDto.ftl", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"type\" : \"object\",\n+  \"properties\" : {\n+\n+    <@lib.property\n+        name = \"variables\"\n+        type = \"object\"\n+        additionalProperties = true\n+        dto = \"VariableValueDto\"\n+        desc = \"A map of variables which are used for evaluation of the conditions and are injected into the process instances which have been triggered. Each key is a variable name and each value a JSON variable value object with the following properties.\"/>\n+\n+    <@lib.property\n+        name = \"businessKey\"\n+        type = \"string\"\n+        desc = \"Used for the process instances that have been triggered after the evaluation.\"/>\n+\n+    <@lib.property\n+        name = \"tenantId\"\n+        type = \"string\"\n+        desc = \"Used to evaluate a condition for a tenant with the given id. Will only evaluate conditions of process definitions which belong to the tenant.\"/>\n+\n+    <@lib.property\n+        name = \"withoutTenantId\"\n+        type = \"boolean\"\n+        desc = \"A Boolean value that indicates whether the conditions should only be evaluated of process definitions which belong to no tenant or not. Value may only be true, as false is the default behavior.\"/>", "originalCommit": "94be7a6ec1633bfb67b0c2c673df89fcc9d0039d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b650de14b5c6b26c32b6049c19a2dfd8c081015", "url": "https://github.com/camunda/camunda-bpm-platform/commit/5b650de14b5c6b26c32b6049c19a2dfd8c081015", "message": "Apply suggestions from code review\n\nCo-Authored-By: yanavasileva <yanavasileva@users.noreply.github.com>", "committedDate": "2020-03-17T07:09:26Z", "type": "commit"}]}