{"pr_number": 760, "pr_title": "CAM-11554: feat(rest): add openapi task local variables endpoints", "pr_createdAt": "2020-03-26T14:32:54Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/760", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5OTQ0Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400099442", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            should be deserialized on the server side (default `true`).\n          \n          \n            \n                            should be deserialized on the server side (default `true`).", "author": "mboskamp", "createdAt": "2020-03-30T10:52:31Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/get.ftl", "diffHunk": "@@ -0,0 +1,85 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTaskLocalVariables\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Retrieves all variables of a given task by id.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to retrieve the variables from.\"/>\n+\n+    <@lib.parameter\n+        name = \"deserializeValues\"\n+        location = \"query\"\n+        type = \"boolean\"\n+        defaultValue = \"true\"\n+        last = true\n+        desc = \"Determines whether serializable variable values (typically variables that store custom Java objects)\n+                should be deserialized on the server side (default `true`).", "originalCommit": "8752694d85e9092008d1cf2389eae7eb5b1bc580", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNTA4NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400105085", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            should be deserialized on the server side (default `true`).\n          \n          \n            \n                            should be deserialized on the server side (default `true`).", "author": "mboskamp", "createdAt": "2020-03-30T11:02:29Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/get.ftl", "diffHunk": "@@ -0,0 +1,93 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTaskLocalVariable\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Retrieves a variable from the context of a given task by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to retrieve the variable from.\"/>\n+\n+    <@lib.parameter\n+        name = \"varName\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The name of the variable to get\"/>\n+\n+    <@lib.parameter\n+        name = \"deserializeValue\"\n+        location = \"query\"\n+        type = \"boolean\"\n+        defaultValue = \"true\"\n+        last = true\n+        desc = \"Determines whether serializable variable values (typically variables that store custom Java objects)\n+                should be deserialized on the server side (default `true`).", "originalCommit": "8752694d85e9092008d1cf2389eae7eb5b1bc580", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNjIxMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400106210", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this\n          \n          \n            \n                            **Note:** While `true` is the default value for reasons of backward compatibility, we recommend setting this", "author": "mboskamp", "createdAt": "2020-03-30T11:04:35Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/get.ftl", "diffHunk": "@@ -0,0 +1,85 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTaskLocalVariables\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Retrieves all variables of a given task by id.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to retrieve the variables from.\"/>\n+\n+    <@lib.parameter\n+        name = \"deserializeValues\"\n+        location = \"query\"\n+        type = \"boolean\"\n+        defaultValue = \"true\"\n+        last = true\n+        desc = \"Determines whether serializable variable values (typically variables that store custom Java objects)\n+                should be deserialized on the server side (default `true`).\n+                If set to `true`, a serializable variable will be deserialized on server side and\n+                transformed to JSON using Jackson's POJO/bean property introspection feature.\n+                Note that this requires the Java classes of the variable value to be on the REST API's classpath.\n+\n+                If set to `false`, a serializable variable will be returned in its serialized format.\n+                For example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n+\n+                Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this", "originalCommit": "8752694d85e9092008d1cf2389eae7eb5b1bc580", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwODY3Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400108672", "bodyText": "The second example is missing. I think we should include it or adjust the docs as both examples are pretty similar. I would choose example 2 over the one used here, because it shows more parameters.", "author": "mboskamp", "createdAt": "2020-03-30T11:09:17Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/put.ftl", "diffHunk": "@@ -0,0 +1,63 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"putTaskLocalVariable\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Sets a variable in the context of a given task.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to set the variable for.\" />\n+\n+    <@lib.parameter\n+        name = \"varName\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The name of the variable to set.\" />\n+\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"VariableValueDto\"\n+      examples = [ '\"example-1\": {\n+                       \"summary\": \"PUT /task/aTaskId/variables/aVarName\",\n+                       \"description\": \"Status 204. No content.\",\n+                       \"value\": {\n+                         \"value\": \"someValue\",\n+                         \"type\": \"String\"\n+                       }\n+                     }'\n+      ] />", "originalCommit": "8752694d85e9092008d1cf2389eae7eb5b1bc580", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczNzgxOA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400737818", "bodyText": "I would add both since the first shows a primitive type variable, and the second, a more complex Object var. It's good to show the differences in the request.", "author": "koevskinikola", "createdAt": "2020-03-31T08:37:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwODY3Mg=="}], "type": "inlineReview"}, {"oid": "72084b2922c70ea13f4d91640292226e828b7de9", "url": "https://github.com/camunda/camunda-bpm-platform/commit/72084b2922c70ea13f4d91640292226e828b7de9", "message": "SQUASH ME: add second example", "committedDate": "2020-03-31T10:12:09Z", "type": "forcePushed"}, {"oid": "99dbe180aebc1ad91c5ee65e8100883eaa8a53f2", "url": "https://github.com/camunda/camunda-bpm-platform/commit/99dbe180aebc1ad91c5ee65e8100883eaa8a53f2", "message": "feat(rest): add openapi task local variables endpoints\n\nRelated to CAM-11554", "committedDate": "2020-03-31T12:25:44Z", "type": "commit"}, {"oid": "99dbe180aebc1ad91c5ee65e8100883eaa8a53f2", "url": "https://github.com/camunda/camunda-bpm-platform/commit/99dbe180aebc1ad91c5ee65e8100883eaa8a53f2", "message": "feat(rest): add openapi task local variables endpoints\n\nRelated to CAM-11554", "committedDate": "2020-03-31T12:25:44Z", "type": "forcePushed"}]}