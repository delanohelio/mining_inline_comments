{"pr_number": 1153, "pr_title": "CAM-12751: handle pipeline stage errors", "pr_createdAt": "2020-11-27T07:45:26Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/1153", "timeline": [{"oid": "6be8869f7522554ccf1eef2f62de52a51d4f813d", "url": "https://github.com/camunda/camunda-bpm-platform/commit/6be8869f7522554ccf1eef2f62de52a51d4f813d", "message": "feat(ci): add Daily pipeline error handling\n\nRelated to CAM-12712, CAM-12751", "committedDate": "2020-11-27T14:58:36Z", "type": "forcePushed"}, {"oid": "167ff0c5afa13ac5c61b4b0e884de8348aa92515", "url": "https://github.com/camunda/camunda-bpm-platform/commit/167ff0c5afa13ac5c61b4b0e884de8348aa92515", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;", "committedDate": "2020-11-30T16:11:44Z", "type": "forcePushed"}, {"oid": "e4b25b2b0533ffffebd41e7cae34dc2720cbe27e", "url": "https://github.com/camunda/camunda-bpm-platform/commit/e4b25b2b0533ffffebd41e7cae34dc2720cbe27e", "message": "REVERT ME: introduce a failing unit test", "committedDate": "2020-11-30T16:30:46Z", "type": "forcePushed"}, {"oid": "10ba928fdc1ea3a2d7e53e468639d235eb4c5719", "url": "https://github.com/camunda/camunda-bpm-platform/commit/10ba928fdc1ea3a2d7e53e468639d235eb4c5719", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;", "committedDate": "2020-12-01T11:46:34Z", "type": "forcePushed"}, {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3", "url": "https://github.com/camunda/camunda-bpm-platform/commit/b8d2757f67d837f4e162c95fd757643f694557d3", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;", "committedDate": "2020-12-01T11:49:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzAyMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533403023", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('webapps')\n          \n          \n            \n                              withLabels('default-build','h2')", "author": "yanavasileva", "createdAt": "2020-12-01T13:23:53Z", "path": "Jenkinsfile", "diffHunk": "@@ -204,20 +240,30 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              runMaven(true, false, false, 'webapps/', 'clean test -Pdatabase,h2 -Dskip.frontend.build=true')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit'), getMavenProfileCmd('webapps-unit') + getDbProfiles('h2'))\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit')\n             }\n           }\n         }\n-        stage('engine-IT-tomcat-9-h2') {// TODO change it to `postgresql-96`\n+        stage('webapp-UNIT-authorizations-h2') {\n           when {\n             anyOf {\n               branch 'pipeline-master';\n               allOf {\n                 changeRequest();\n                 expression {\n-                  withLabels('IT')\n+                  withLabels('webapps')", "originalCommit": "b8d2757f67d837f4e162c95fd757643f694557d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5ODgxMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534198810", "bodyText": "Fixed it with the new commits.", "author": "koevskinikola", "createdAt": "2020-12-02T14:16:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDAxOA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533404018", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('IT')\n          \n          \n            \n                              withLabels('all-as','tomcat')", "author": "yanavasileva", "createdAt": "2020-12-01T13:25:25Z", "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "originalCommit": "b8d2757f67d837f4e162c95fd757643f694557d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5ODkxOA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534198918", "bodyText": "Fixed it with the new commits.", "author": "koevskinikola", "createdAt": "2020-12-02T14:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDI1OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533404258", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('IT')\n          \n          \n            \n                              withLabels('all-as','wildfly')", "author": "yanavasileva", "createdAt": "2020-12-01T13:25:46Z", "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')\n+                }\n+              }\n+            }\n+          }\n+          agent {\n+            kubernetes {\n+              yaml getDbAgent('postgresql_96')\n+            }\n+          }\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,postgresql,engine-integration')\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'engine-IT')\n+            }\n+          }\n+        }\n+        stage('engine-IT-wildfly-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "originalCommit": "b8d2757f67d837f4e162c95fd757643f694557d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5OTExNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534199117", "bodyText": "Fixed it with the new commits.", "author": "koevskinikola", "createdAt": "2020-12-02T14:16:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDI1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTM1Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533405357", "bodyText": "Tomcat IT doesn't have downstream stages\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        failure {\n          \n          \n            \n                          addFailedStageType(failedStageTypes, 'webapp-IT')\n          \n          \n            \n                        }", "author": "yanavasileva", "createdAt": "2020-12-01T13:27:34Z", "path": "Jenkinsfile", "diffHunk": "@@ -268,6 +383,9 @@ pipeline {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapp-IT')\n+            }", "originalCommit": "b8d2757f67d837f4e162c95fd757643f694557d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5OTYwNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534199604", "bodyText": "Removed this block in two places engine-IT-tomcat-postgresql-96 and webapp-IT-tomcat-h2.", "author": "koevskinikola", "createdAt": "2020-12-02T14:17:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTM1Nw=="}], "type": "inlineReview"}, {"oid": "79ce3d2a935277784ad08333844968d5496154df", "url": "https://github.com/camunda/camunda-bpm-platform/commit/79ce3d2a935277784ad08333844968d5496154df", "message": "SQUASH ME: implement review hints 2", "committedDate": "2020-12-03T10:24:08Z", "type": "forcePushed"}, {"oid": "b864bfe01cb8759ac8810f08803603f514d10a87", "url": "https://github.com/camunda/camunda-bpm-platform/commit/b864bfe01cb8759ac8810f08803603f514d10a87", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751", "committedDate": "2020-12-04T08:53:55Z", "type": "forcePushed"}, {"oid": "77708c70d787cec4a2a2016973b509f295d9d949", "url": "https://github.com/camunda/camunda-bpm-platform/commit/77708c70d787cec4a2a2016973b509f295d9d949", "message": "feat(ci): add pipeline error handling\n\nRelated to CAM-12712, CAM-12751", "committedDate": "2020-12-04T09:16:35Z", "type": "commit"}, {"oid": "eea6173aa3b00a2743e634d2e7cba3ef3f9e4c85", "url": "https://github.com/camunda/camunda-bpm-platform/commit/eea6173aa3b00a2743e634d2e7cba3ef3f9e4c85", "message": "feat(ci): add Daily pipeline error handling\n\nRelated to CAM-12712, CAM-12751", "committedDate": "2020-12-04T09:16:38Z", "type": "commit"}, {"oid": "2b2c94be298b76d27e092f1d1d8e1732b64893ae", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b2c94be298b76d27e092f1d1d8e1732b64893ae", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751", "committedDate": "2020-12-04T09:16:38Z", "type": "commit"}, {"oid": "2b2c94be298b76d27e092f1d1d8e1732b64893ae", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b2c94be298b76d27e092f1d1d8e1732b64893ae", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751", "committedDate": "2020-12-04T09:16:38Z", "type": "forcePushed"}]}