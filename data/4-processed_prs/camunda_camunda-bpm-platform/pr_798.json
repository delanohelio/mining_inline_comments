{"pr_number": 798, "pr_title": "feat(rest-openapi): add process definition endpoints", "pr_createdAt": "2020-04-23T12:05:44Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/798", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3NjIxMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415776213", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"integer\"\n          \n          \n            \n                    type = \"integer\"\n          \n          \n            \n                    format = \"int32\"", "author": "koevskinikola", "createdAt": "2020-04-27T12:38:45Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/commons/statistics-result-props.ftl", "diffHunk": "@@ -0,0 +1,26 @@\n+    <@lib.property\n+        name = \"id\"\n+        type = \"string\"\n+        desc = \"The id of the ${instanceType} the results are aggregated for.\"/>\n+\n+    <@lib.property\n+        name = \"instances\"\n+        type = \"integer\"", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3NjUyMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415776520", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"integer\"\n          \n          \n            \n                    type = \"integer\"\n          \n          \n            \n                    format = \"int32\"", "author": "koevskinikola", "createdAt": "2020-04-27T12:39:16Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/commons/statistics-result-props.ftl", "diffHunk": "@@ -0,0 +1,26 @@\n+    <@lib.property\n+        name = \"id\"\n+        type = \"string\"\n+        desc = \"The id of the ${instanceType} the results are aggregated for.\"/>\n+\n+    <@lib.property\n+        name = \"instances\"\n+        type = \"integer\"\n+        nullable = false\n+        desc = \"The total number of running process instances of this ${instanceType}.\"/>\n+\n+    <@lib.property\n+        name = \"failedJobs\"\n+        type = \"integer\"", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc4NzAwNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415787004", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  format=\"date-time\"", "author": "koevskinikola", "createdAt": "2020-04-27T12:54:31Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/commons/process-definition-query-params.ftl", "diffHunk": "@@ -0,0 +1,183 @@\n+  <@lib.parameter name = \"processDefinitionId\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition id.\"/>\n+\n+  <@lib.parameter name = \"processDefinitionIdIn\"\n+      location = \"query\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by process definition ids.\"/>\n+\n+  <@lib.parameter name = \"name\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition name.\"/>\n+\n+  <@lib.parameter name = \"nameLike\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition names that the parameter is a substring of.\"/>\n+\n+  <@lib.parameter name = \"deploymentId\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by the deployment the id belongs to.\"/>\n+\n+  <@lib.parameter name = \"deployedAfter\"\n+      location = \"query\"\n+      type = \"string\"", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc4NzE4OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415787188", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  format=\"date-time\"", "author": "koevskinikola", "createdAt": "2020-04-27T12:54:47Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/commons/process-definition-query-params.ftl", "diffHunk": "@@ -0,0 +1,183 @@\n+  <@lib.parameter name = \"processDefinitionId\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition id.\"/>\n+\n+  <@lib.parameter name = \"processDefinitionIdIn\"\n+      location = \"query\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by process definition ids.\"/>\n+\n+  <@lib.parameter name = \"name\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition name.\"/>\n+\n+  <@lib.parameter name = \"nameLike\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition names that the parameter is a substring of.\"/>\n+\n+  <@lib.parameter name = \"deploymentId\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by the deployment the id belongs to.\"/>\n+\n+  <@lib.parameter name = \"deployedAfter\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by the deploy time of the deployment the process definition belongs to.\n+              Only selects process definitions that have been deployed after (exclusive) a specific time.\n+              By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the\n+              format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n+              `2013-01-23T14:42:45.546+0200`.\"/>\n+\n+  <@lib.parameter name = \"deployedAt\"\n+      location = \"query\"\n+      type = \"string\"", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc4NzYzMg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415787632", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  type = \"integer\"\n          \n          \n            \n                  type = \"integer\"\n          \n          \n            \n                  format=\"int32\"", "author": "koevskinikola", "createdAt": "2020-04-27T12:55:24Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/commons/process-definition-query-params.ftl", "diffHunk": "@@ -0,0 +1,183 @@\n+  <@lib.parameter name = \"processDefinitionId\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition id.\"/>\n+\n+  <@lib.parameter name = \"processDefinitionIdIn\"\n+      location = \"query\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by process definition ids.\"/>\n+\n+  <@lib.parameter name = \"name\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition name.\"/>\n+\n+  <@lib.parameter name = \"nameLike\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition names that the parameter is a substring of.\"/>\n+\n+  <@lib.parameter name = \"deploymentId\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by the deployment the id belongs to.\"/>\n+\n+  <@lib.parameter name = \"deployedAfter\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by the deploy time of the deployment the process definition belongs to.\n+              Only selects process definitions that have been deployed after (exclusive) a specific time.\n+              By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the\n+              format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n+              `2013-01-23T14:42:45.546+0200`.\"/>\n+\n+  <@lib.parameter name = \"deployedAt\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by the deploy time of the deployment the process definition belongs to.\n+              Only selects process definitions that have been deployed at a specific time (exact match).\n+              By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the\n+              format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n+              `2013-01-23T14:42:45.546+0200`.\"/>\n+\n+  <@lib.parameter name = \"key\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match.\"/>\n+\n+  <@lib.parameter name = \"keysIn\"\n+      location = \"query\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by process definition keys.\"/>\n+\n+  <@lib.parameter name = \"keyLike\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition keys that the parameter is a substring of.\"/>\n+\n+  <@lib.parameter name = \"category\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition category. Exact match.\"/>\n+\n+  <@lib.parameter name = \"categoryLike\"\n+      location = \"query\"\n+      type = \"string\"\n+      desc = \"Filter by process definition categories that the parameter is a substring of.\"/>\n+\n+  <@lib.parameter name = \"version\"\n+      location = \"query\"\n+      type = \"integer\"", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5NjI2NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415796264", "bodyText": "Shouldn't we extend this from SuspensionStateDto? I think since it's just a single property, it's better to adjust the description there, and extend it. It seems that the base class is extended by five classes, and used in several more. Otherwise, we can add a comment in SuspensionStateDto that lists all the other Dtos that should be updated if this changes. However, I think that adjusting the description is a better solution here.", "author": "koevskinikola", "createdAt": "2020-04-27T13:07:20Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/ProcessDefinitionSuspensionStateDto.ftl", "diffHunk": "@@ -0,0 +1,39 @@\n+<@lib.dto>\n+\n+    <@lib.property\n+        name = \"suspended\"", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0NTk0OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r420045948", "bodyText": "I added a comment to SuspensionStateDto.ftl", "author": "yanavasileva", "createdAt": "2020-05-05T11:42:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc5NjI2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyNjM3OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415826378", "bodyText": "I think that we need to comment in ProcessInstanceModificationInstructionDto.ftl that this Dto maps to it and should be updated accordingly. Otherwise, it might create a lot of confusion in the future.", "author": "koevskinikola", "createdAt": "2020-04-27T13:46:35Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/modification/RestartProcessInstanceModificationInstructionDto.ftl", "diffHunk": "@@ -0,0 +1,27 @@\n+<@lib.dto\n+    required = [ \"type\" ] >", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NjA1Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r419496052", "bodyText": "I added a comment to ProcessInstanceModificationInstructionDto", "author": "yanavasileva", "createdAt": "2020-05-04T14:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyNjM3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1MDc0MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415850740", "bodyText": "The Java class doesn't extend this Dto. Extending it will include a lot more unused properties, as well as properties from LinkableDto. The StartProcessInstanceDto also contains a variables map.", "author": "koevskinikola", "createdAt": "2020-04-27T14:16:37Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/StartProcessInstanceDto.ftl", "diffHunk": "@@ -0,0 +1,40 @@\n+<@lib.dto\n+    extends = \"ProcessInstanceDto\" >", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5Nzc0NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r419497745", "bodyText": "My bad, I removed the extension and fix the DTO", "author": "yanavasileva", "createdAt": "2020-05-04T14:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1MDc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDAwNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415854005", "bodyText": "I understand the reasoning for separating this, but we must document in some of the Java code that this is mapped here, or create an alternative solution. Otherwise, this will be lost.", "author": "koevskinikola", "createdAt": "2020-04-27T14:20:39Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/StartProcessInstanceFormDto.ftl", "diffHunk": "@@ -0,0 +1,16 @@\n+<@lib.dto>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5MzIzNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r419493236", "bodyText": "I added a comment in StartProcessInstanceDto", "author": "yanavasileva", "createdAt": "2020-05-04T14:48:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDAwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MDQzNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415860436", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          Takes the same filtering parameters as the Get Definitions method.\" />\n          \n          \n            \n                          Takes the same filtering parameters as the [Get Definitions](${docsUrl}/reference/rest/process-definition/get-query/) method.\" />", "author": "koevskinikola", "createdAt": "2020-04-27T14:28:13Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/count/get.ftl", "diffHunk": "@@ -0,0 +1,40 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionsCount\"\n+      tag = \"Process Definition\"\n+      desc = \"Requests the number of process definitions that fulfill the query criteria.\n+              Takes the same filtering parameters as the Get Definitions method.\" />", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MTkxNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r415861916", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          by using the Get Definition Count method.\" />\n          \n          \n            \n                          by using the [Get Definition Count](${docsUrl}/reference/rest/process-definition/get-query-count/) method.\" />", "author": "koevskinikola", "createdAt": "2020-04-27T14:29:57Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/get.ftl", "diffHunk": "@@ -0,0 +1,76 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitions\"\n+      tag = \"Process Definition\"\n+      desc = \"Queries for process definitions that fulfill given parameters. Parameters may be the properties of \n+              process definitions, such as the name, key or version. The size of the result set can be retrieved\n+              by using the Get Definition Count method.\" />", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM2MTA2OQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416361069", "bodyText": "This endpoint returns a single ProcessDefinitionDto:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    array = true", "author": "koevskinikola", "createdAt": "2020-04-28T06:29:41Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/get.ftl", "diffHunk": "@@ -0,0 +1,56 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinition\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves a process definition according to the `ProcessDefinition` interface in the engine.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition to be retrieved.\"/>\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessDefinitionDto\"\n+        array = true", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM2Mjc1OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416362758", "bodyText": "This endpoint only returns a single instance:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    array = true", "author": "koevskinikola", "createdAt": "2020-04-28T06:33:37Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/get.ftl", "diffHunk": "@@ -0,0 +1,56 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionByKey\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves the latest version of the process definition which belongs to no tenant according to the `ProcessDefinition` interface in the engine.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessDefinitionDto\"\n+        array = true", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5OTUwNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r419499504", "bodyText": "squash array fix", "author": "yanavasileva", "createdAt": "2020-05-04T14:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM2Mjc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM2MzQyNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416363425", "bodyText": "This endpoint only returns a single instance:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    array = true", "author": "koevskinikola", "createdAt": "2020-04-28T06:35:09Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant/{tenant-id}/get.ftl", "diffHunk": "@@ -0,0 +1,64 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getLatestProcessDefinitionByTenantId\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves the latest version of the process definition for tenant according to\n+              the `ProcessDefinition` interface in the engine.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenant-id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the tenant the process definition belongs to.\"/>\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessDefinitionDto\"\n+        array = true", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5OTYxMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r419499613", "bodyText": "squash array fix", "author": "yanavasileva", "createdAt": "2020-05-04T14:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM2MzQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3MTQ5MQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416371491", "bodyText": "This endpoint returns a single instance:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    array = true", "author": "koevskinikola", "createdAt": "2020-04-28T06:52:25Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/start/post.ftl", "diffHunk": "@@ -0,0 +1,195 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"startProcessInstance\"\n+      tag = \"Process Definition\"\n+      desc = \"Instantiates a given process definition.\n+              Process variables and business key may be supplied in the request body.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition to be retrieved.\"/>\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"StartProcessInstanceDto\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"Starting a process instance at its default initial activity\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         },\n+                         \"anotherVariable\" : {\n+                           \"value\" : true,\n+                           \"type\": \"Boolean\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\"\n+                     }\n+                   }',\n+                   '\"example-2\": {\n+                     \"summary\": \"Starting a process instance with variables in return\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         },\n+                         \"anotherVariable\" : {\n+                           \"value\" : true,\n+                           \"type\": \"Boolean\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\",\n+                      \"withVariablesInReturn\": true\n+                     }\n+                   }',\n+                   '\"example-3\": {\n+                     \"summary\": \"Starting a process instance at two specific activities\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aProcessVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\",\n+                      \"skipCustomListeners\" : true,\n+                      \"startInstructions\" :\n+                        [\n+                          {\n+                            \"type\": \"startBeforeActivity\",\n+                            \"activityId\": \"activityId\",\n+                            \"variables\": {\n+                              \"var\": {\n+                                \"value\": \"aVariableValue\",\n+                                \"local\": false,\n+                                \"type\": \"String\"}\n+                            }\n+                          },\n+                          {\n+                            \"type\": \"startAfterActivity\",\n+                            \"activityId\": \"anotherActivityId\",\n+                            \"variables\": {\n+                              \"varLocal\": {\n+                                \"value\": \"anotherVariableValue\",\n+                                \"local\": true,\n+                                \"type\": \"String\"\n+                              }\n+                            }\n+                          }\n+                        ]\n+                      }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessInstanceWithVariablesDto\"\n+        array = true", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3MjEzMQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416372131", "bodyText": "This endpoint returns a single instance:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    array = true", "author": "koevskinikola", "createdAt": "2020-04-28T06:53:42Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant/{tenant-id}/start/post.ftl", "diffHunk": "@@ -0,0 +1,202 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"startProcessInstanceByKeyAndTenantId\"\n+      tag = \"Process Definition\"\n+      desc = \"Instantiates a given process definition, starts the latest version of the process definition for tenant.\n+              Process variables and business key may be supplied in the request body.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenant-id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the tenant the process definition belongs to.\"/>\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"StartProcessInstanceDto\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"Starting a process instance at its default initial activity\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         },\n+                         \"anotherVariable\" : {\n+                           \"value\" : true,\n+                           \"type\": \"Boolean\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\"\n+                     }\n+                   }',\n+                   '\"example-2\": {\n+                     \"summary\": \"Starting a process instance with variables in return\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         },\n+                         \"anotherVariable\" : {\n+                           \"value\" : true,\n+                           \"type\": \"Boolean\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\",\n+                      \"withVariablesInReturn\": true\n+                     }\n+                   }',\n+                   '\"example-3\": {\n+                     \"summary\": \"Starting a process instance at two specific activities\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aProcessVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\",\n+                      \"skipCustomListeners\" : true,\n+                      \"startInstructions\" :\n+                        [\n+                          {\n+                            \"type\": \"startBeforeActivity\",\n+                            \"activityId\": \"activityId\",\n+                            \"variables\": {\n+                              \"var\": {\n+                                \"value\": \"aVariableValue\",\n+                                \"local\": false,\n+                                \"type\": \"String\"}\n+                            }\n+                          },\n+                          {\n+                            \"type\": \"startAfterActivity\",\n+                            \"activityId\": \"anotherActivityId\",\n+                            \"variables\": {\n+                              \"varLocal\": {\n+                                \"value\": \"anotherVariableValue\",\n+                                \"local\": true,\n+                                \"type\": \"String\"\n+                              }\n+                            }\n+                          }\n+                        ]\n+                      }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessInstanceWithVariablesDto\"\n+        array = true", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3MjM2Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416372362", "bodyText": "This endpoint returns a single instance:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    array = true", "author": "koevskinikola", "createdAt": "2020-04-28T06:54:04Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/start/post.ftl", "diffHunk": "@@ -0,0 +1,196 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"startProcessInstanceByKey\"\n+      tag = \"Process Definition\"\n+      desc = \"Instantiates a given process definition, starts the latest version of the process definition\n+              which belongs to no tenant.\n+              Process variables and business key may be supplied in the request body.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"StartProcessInstanceDto\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"Starting a process instance at its default initial activity\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         },\n+                         \"anotherVariable\" : {\n+                           \"value\" : true,\n+                           \"type\": \"Boolean\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\"\n+                     }\n+                   }',\n+                   '\"example-2\": {\n+                     \"summary\": \"Starting a process instance with variables in return\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         },\n+                         \"anotherVariable\" : {\n+                           \"value\" : true,\n+                           \"type\": \"Boolean\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\",\n+                      \"withVariablesInReturn\": true\n+                     }\n+                   }',\n+                   '\"example-3\": {\n+                     \"summary\": \"Starting a process instance at two specific activities\",\n+                     \"value\": {\n+                       \"variables\": {\n+                         \"aProcessVariable\" : {\n+                             \"value\" : \"aStringValue\",\n+                             \"type\": \"String\"\n+                         }\n+                       },\n+                      \"businessKey\" : \"myBusinessKey\",\n+                      \"skipCustomListeners\" : true,\n+                      \"startInstructions\" :\n+                        [\n+                          {\n+                            \"type\": \"startBeforeActivity\",\n+                            \"activityId\": \"activityId\",\n+                            \"variables\": {\n+                              \"var\": {\n+                                \"value\": \"aVariableValue\",\n+                                \"local\": false,\n+                                \"type\": \"String\"}\n+                            }\n+                          },\n+                          {\n+                            \"type\": \"startAfterActivity\",\n+                            \"activityId\": \"anotherActivityId\",\n+                            \"variables\": {\n+                              \"varLocal\": {\n+                                \"value\": \"anotherVariableValue\",\n+                                \"local\": true,\n+                                \"type\": \"String\"\n+                              }\n+                            }\n+                          }\n+                        ]\n+                      }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessInstanceWithVariablesDto\"\n+        array = true", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3NDE4OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416374188", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n          \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) for which the form key is to be retrieved.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T06:57:28Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant/{tenant-id}/startForm/get.ftl", "diffHunk": "@@ -0,0 +1,58 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getStartFormByKeyAndTenantId\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves the key of the start form for the latest version of the process definition for a tenant.\n+              The form key corresponds to the `FormData#formKey` property in the engine.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3NTM5NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416375395", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The id of the process definition to get the start form for.\"/>\n          \n          \n            \n                    desc = \"The id of the process definition to get the start form key for.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T06:59:40Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/startForm/get.ftl", "diffHunk": "@@ -0,0 +1,51 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getStartForm\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves the key of the start form for a process definition.\n+              The form key corresponds to the `FormData#formKey` property in the engine.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition to get the start form for.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3NTYxNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416375615", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n          \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) for which the form key is to be retrieved.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T07:00:10Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/startForm/get.ftl", "diffHunk": "@@ -0,0 +1,52 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getStartFormByKey\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves the key of the start form for the latest version of the process definition\n+              which belongs to no tenant.\n+              The form key corresponds to the `FormData#formKey` property in the engine.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQzNzM3MQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416437371", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n          \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be activated/suspended.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T08:42:14Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant/{tenant-id}/suspended/put.ftl", "diffHunk": "@@ -0,0 +1,65 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"updateProcessDefinitionSuspensionStateByKeyAndTenantId\"\n+      tag = \"Process Definition\"\n+      desc = \"Activates or suspends a given process definition by the latest version of\n+              the process definition for tenant.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQzOTM4MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416439380", "bodyText": "The 404 error is missing. It should also be added in the docs:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"404\"\n          \n          \n            \n                    dto = \"ExceptionDto\"\n          \n          \n            \n                    last = true\n          \n          \n            \n                    desc = \"Process definition with given key does not exist. See the\n          \n          \n            \n                            [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T08:45:26Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/suspended/put.ftl", "diffHunk": "@@ -0,0 +1,41 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"updateProcessDefinitionSuspensionState\"\n+      tag = \"Process Definition\"\n+      desc = \"Activates or suspends process definitions with the given process definition key.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"ProcessDefinitionSuspensionStateDto\"\n+      requestDesc = \"**Note**: Unallowed property is `processDefinitionId`.\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"PUT `/process-definition/suspended`\",\n+                     \"value\": {\n+                       \"processDefinitionKey\" : \"aProcessDefinitionKey\",\n+                       \"suspended\" : true,\n+                       \"includeProcessInstances\" : true,\n+                       \"executionDate\" : \"2013-11-21T10:49:45T14:42:45\"\n+                     }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"204\"\n+        desc = \"Request successful.\"/>\n+\n+\n+    <@lib.response\n+        code = \"400\"\n+        dto = \"ExceptionDto\"\n+        last = true\n+        desc = \"Returned if some of the query parameters are invalid,\n+                for example if the provided `executionDate` parameter doesn't have the expected format or\n+                if the `processDefinitionKey` parameter is `null`. See the\n+                [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n+                for the error response format.\" />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0MDUyNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416440527", "bodyText": "The 404 error is missing. It should also be added in the docs:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"404\"\n          \n          \n            \n                    dto = \"ExceptionDto\"\n          \n          \n            \n                    last = true\n          \n          \n            \n                    desc = \"Process definition with given key does not exist. See the\n          \n          \n            \n                            [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T08:47:04Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/suspended/put.ftl", "diffHunk": "@@ -0,0 +1,50 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"updateProcessDefinitionSuspensionStateById\"\n+      tag = \"Process Definition\"\n+      desc = \"Activates or suspends a given process definition by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition to activate or suspend.\"/>\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"ProcessDefinitionSuspensionStateDto\"\n+      requestDesc = \"**Note**: Unallowed properties are `processDefinitionId` and `processDefinitionKey`.\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"PUT `/process-definition/aProcessDefinitionId/suspended`\",\n+                     \"value\": {\n+                       \"suspended\" : true,\n+                       \"includeProcessInstances\" : true,\n+                       \"executionDate\" : \"2013-11-21T10:49:45T14:42:45\"\n+                     }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"204\"\n+        desc = \"Request successful.\"/>\n+\n+    <@lib.response\n+        code = \"400\"\n+        dto = \"ExceptionDto\"\n+        last = true\n+        desc = \"Returned if some of the query parameters are invalid,\n+                for example if the provided `executionDate` parameter doesn't have the expected format or\n+                if the `processDefinitionKey` parameter is `null`. See the\n+                [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n+                for the error response format.\" />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0MDkwMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416440903", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n          \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be activated/suspended.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T08:47:42Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/suspended/put.ftl", "diffHunk": "@@ -0,0 +1,58 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"updateProcessDefinitionSuspensionStateByKey\"\n+      tag = \"Process Definition\"\n+      desc = \"Activates or suspends a given process definition by latest version of process definition key\n+              which belongs to no tenant.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwMzMyOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416503329", "bodyText": "The following response is missing (the 400 is not necessary here since the PD ID is located through the key and tenant Id):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"403\"\n          \n          \n            \n                    dto = \"AuthorizationExceptionDto\"\n          \n          \n            \n                    desc = \"The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.\n          \n          \n            \n                            See the [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T10:26:04Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant/{tenant-id}/xml/get.ftl", "diffHunk": "@@ -0,0 +1,60 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionBpmn20XmlByKeyAndTenantId\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves latest version the BPMN 2.0 XML of a process definition.\n+              Returns the XML for the latest version of the process definition for tenant.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenant-id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the tenant the process definition belongs to.\"/>\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessDefinitionDiagramDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                     \"summary\": \"GET `/process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/xml`\",\n+                     \"value\": {\n+                       \"id\": \"anProcessDefinitionId\",\n+                       \"bpmn20Xml\": \"<?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?>\\n<definitions\n+                         xmlns=\\\\\"http://www.omg.org/spec/BPMN/20100524/MODEL\\\\\"\n+                         xmlns:camunda=\\\\\"http://camunda.org/schema/1.0/bpmn\\\\\"\n+                         targetNamespace=\\\\\"Examples\\\\\">\n+                         <process id=\\\\\"oneTaskProcess\\\\\" isExecutable=\\\\\"true\\\\\">\n+                           <startEvent id=\\\\\"theStart\\\\\" />\n+                           <sequenceFlow id=\\\\\"flow1\\\\\" sourceRef=\\\\\"theStart\\\\\" targetRef=\\\\\"theEnd\\\\\" />\n+                           <endEvent id=\\\\\"theEnd\\\\\" />\n+                         </process>\n+                       </definitions>\"\n+                     }\n+                   }'\n+                 ] />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwNDIxNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416504215", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n          \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) whose XML should be retrieved.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T10:27:30Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant/{tenant-id}/xml/get.ftl", "diffHunk": "@@ -0,0 +1,60 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionBpmn20XmlByKeyAndTenantId\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves latest version the BPMN 2.0 XML of a process definition.\n+              Returns the XML for the latest version of the process definition for tenant.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwNDU1Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416504557", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n          \n          \n            \n                    desc = \"The key of the process definition (the latest version thereof) whose XML should be retrieved.\"/>", "author": "koevskinikola", "createdAt": "2020-04-28T10:28:06Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/xml/get.ftl", "diffHunk": "@@ -0,0 +1,52 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionBpmn20XmlByKey\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves latest version the BPMN 2.0 XML of a process definition.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwNDYzNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416504637", "bodyText": "The following response is missing (the 400 is not necessary here since the PD ID is located through the key):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"403\"\n          \n          \n            \n                    dto = \"AuthorizationExceptionDto\"\n          \n          \n            \n                    desc = \"The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.\n          \n          \n            \n                            See the [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T10:28:16Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/xml/get.ftl", "diffHunk": "@@ -0,0 +1,52 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionBpmn20XmlByKey\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves latest version the BPMN 2.0 XML of a process definition.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"key\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The key of the process definition (the latest version thereof) to be retrieved.\"/>\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessDefinitionDiagramDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                     \"summary\": \"GET `/process-definition/key/aProcessDefinitionKey/xml`\",\n+                     \"value\": {\n+                       \"id\": \"anProcessDefinitionId\",\n+                       \"bpmn20Xml\": \"<?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?>\\n<definitions\n+                         xmlns=\\\\\"http://www.omg.org/spec/BPMN/20100524/MODEL\\\\\"\n+                         xmlns:camunda=\\\\\"http://camunda.org/schema/1.0/bpmn\\\\\"\n+                         targetNamespace=\\\\\"Examples\\\\\">\n+                         <process id=\\\\\"oneTaskProcess\\\\\" isExecutable=\\\\\"true\\\\\">\n+                           <startEvent id=\\\\\"theStart\\\\\" />\n+                           <sequenceFlow id=\\\\\"flow1\\\\\" sourceRef=\\\\\"theStart\\\\\" targetRef=\\\\\"theEnd\\\\\" />\n+                           <endEvent id=\\\\\"theEnd\\\\\" />\n+                         </process>\n+                       </definitions>\"\n+                     }\n+                   }'\n+                 ] />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwNzUyMQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416507521", "bodyText": "The following responses are missing:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"400\"\n          \n          \n            \n                    dto = \"ExceptionDto\"\n          \n          \n            \n                    last = true\n          \n          \n            \n                    desc = \"Returned if some of the query parameters are invalid.\n          \n          \n            \n                            See the\n          \n          \n            \n                            [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />\n          \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"403\"\n          \n          \n            \n                    dto = \"AuthorizationExceptionDto\"\n          \n          \n            \n                    desc = \"The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.\n          \n          \n            \n                            See the [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T10:33:07Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/xml/get.ftl", "diffHunk": "@@ -0,0 +1,52 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getProcessDefinitionBpmn20Xml\"\n+      tag = \"Process Definition\"\n+      desc = \"Retrieves the BPMN 2.0 XML of a process definition.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition.\"/>\n+  ],\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"ProcessDefinitionDiagramDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                     \"summary\": \"GET `/process-definition/id/aProcessDefinitionId/xml`\",\n+                     \"value\": {\n+                       \"id\": \"anProcessDefinitionId\",\n+                       \"bpmn20Xml\": \"<?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?>\\n<definitions\n+                         xmlns=\\\\\"http://www.omg.org/spec/BPMN/20100524/MODEL\\\\\"\n+                         xmlns:camunda=\\\\\"http://camunda.org/schema/1.0/bpmn\\\\\"\n+                         targetNamespace=\\\\\"Examples\\\\\">\n+                         <process id=\\\\\"oneTaskProcess\\\\\" isExecutable=\\\\\"true\\\\\">\n+                           <startEvent id=\\\\\"theStart\\\\\" />\n+                           <sequenceFlow id=\\\\\"flow1\\\\\" sourceRef=\\\\\"theStart\\\\\" targetRef=\\\\\"theEnd\\\\\" />\n+                           <endEvent id=\\\\\"theEnd\\\\\" />\n+                         </process>\n+                       </definitions>\"\n+                     }\n+                   }'\n+                 ] />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUxMjQ4Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416512482", "bodyText": "This response is missing:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"404\"\n          \n          \n            \n                    dto = \"ExceptionDto\"\n          \n          \n            \n                    last = true\n          \n          \n            \n                    desc = \"Process definition with given id does not exist. See the\n          \n          \n            \n                            [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T10:41:56Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/restart-async/post.ftl", "diffHunk": "@@ -0,0 +1,103 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"restartProcessInstanceAsyncOperation\"\n+      tag = \"Process Definition\"\n+      desc = \"Restarts process instances that were canceled or terminated asynchronously.\n+              Can also restart completed process instances.\n+              It will create a new instance using the original instance information.\n+              To execute the restart asynchronously, use the\n+              [Restart Process Instance](${docsUrl}/reference/rest/process-definition/post-restart-process-instance-sync/) method.\n+\n+              For more information about the difference between synchronous and asynchronous execution,\n+              please refer to the related section of the\n+              [User Guide](${docsUrl}/user-guide/process-engine/process-instance-restart/#execution).\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition of the process instances to restart.\"/>\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"RestartProcessInstanceDto\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"Restarting one or more Process Instances with known processInstanceIds\",\n+                     \"value\": {\n+                       \"instructions\": [\n+                         {\n+                           \"type\": \"startAfterActivity\",\n+                           \"activityId\": \"aUserTask\"\n+                         }\n+                       ],\n+                       \"processInstanceIds\": [\n+                         \"aProcessInstance\",\n+                         \"anotherProcessInstance\"\n+                       ],\n+                       \"initialVariables\" : true,\n+                       \"skipCustomListeners\" : true,\n+                       \"withoutBusinessKey\" : true\n+                     }\n+                   }',\n+                   '\"example-2\": {\n+                     \"summary\": \"Restarting one or more Process Instances using a historicProcessInstanceQuery\",\n+                     \"value\": {\n+                       \"instructions\": [\n+                         {\n+                           \"type\": \"startAfterActivity\",\n+                           \"activityId\": \"aUserTask\"\n+                         }\n+                       ],\n+                       \"historicProcessInstanceQuery\": {\n+                         \"processDefinitionId\": \"aProcessDefinitionId\",\n+                         \"processInstanceBusinessKey\" : \"businessKey\"\n+                       },\n+                       \"initialVariables\" : true,\n+                       \"skipCustomListeners\" : true,\n+                       \"withoutBusinessKey\" : true\n+                     }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"BatchDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 Response\",\n+                       \"value\": {\n+                         \"id\": \"aBatchId\",\n+                         \"type\": \"aBatchType\",\n+                         \"totalJobs\": 10,\n+                         \"jobsCreated\": 10,\n+                         \"batchJobsPerSeed\": 100,\n+                         \"invocationsPerBatchJob\": 1,\n+                         \"seedJobDefinitionId\": \"aSeedJobDefinitionId\",\n+                         \"monitorJobDefinitionId\": \"aMonitorJobDefinitionId\",\n+                         \"batchJobDefinitionId\": \"aBatchJobDefinitionId\",\n+                         \"tenantId\": \"aTenantId\",\n+                         \"suspended\": false,\n+                         \"createUserId\": \"demo\"\n+                       }\n+                     }'] />\n+\n+    <@lib.response\n+        code = \"400\"\n+        dto = \"ExceptionDto\"\n+        last = true\n+        desc = \"In case following parameters are missing: `instructions`, `activityId` or `transitionId`,\n+                `processInstanceIds` or `historicProcessInstanceQuery`,\n+                an exception of type `InvalidRequestException` is returned. \n+                See the [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n+                for the error response format.\" />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUxMzYyOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r416513629", "bodyText": "The following response is missing (it's thrown by the ProcessDefinitionResourceImpl#getProcessDefinition methods:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"404\"\n          \n          \n            \n                    dto = \"ExceptionDto\"\n          \n          \n            \n                    last = true\n          \n          \n            \n                    desc = \"Process definition with given id does not exist. See the\n          \n          \n            \n                            [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n          \n          \n            \n                            for the error response format.\" />", "author": "koevskinikola", "createdAt": "2020-04-28T10:44:02Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/restart/post.ftl", "diffHunk": "@@ -0,0 +1,84 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"restartProcessInstance\"\n+      tag = \"Process Definition\"\n+      desc = \"Restarts process instances that were canceled or terminated synchronously.\n+              Can also restart completed process instances.\n+              It will create a new instance using the original instance information.\n+              To execute the restart asynchronously, use the\n+              [Restart Process Instance Async](${docsUrl}/reference/rest/process-definition/post-restart-process-instance-async/) method.\n+\n+              For more information about the difference between synchronous and asynchronous execution,\n+              please refer to the related section of the\n+              [User Guide](${docsUrl}/user-guide/process-engine/process-instance-restart/#execution).\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the process definition of the process instances to restart.\"/>\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"RestartProcessInstanceDto\"\n+      examples = ['\"example-1\": {\n+                     \"summary\": \"Restarting one or more Process Instances with known processInstanceIds\",\n+                     \"value\": {\n+                       \"instructions\": [\n+                         {\n+                           \"type\": \"startAfterActivity\",\n+                           \"activityId\": \"aUserTask\"\n+                         }\n+                       ],\n+                       \"processInstanceIds\": [\n+                         \"aProcessInstance\",\n+                         \"anotherProcessInstance\"\n+                       ],\n+                       \"initialVariables\" : true,\n+                       \"skipCustomListeners\" : true,\n+                       \"withoutBusinessKey\" : true\n+                     }\n+                   }',\n+                   '\"example-2\": {\n+                     \"summary\": \"Restarting one or more Process Instances using a historicProcessInstanceQuery\",\n+                     \"value\": {\n+                       \"instructions\": [\n+                         {\n+                           \"type\": \"startAfterActivity\",\n+                           \"activityId\": \"aUserTask\"\n+                         }\n+                       ],\n+                       \"historicProcessInstanceQuery\": {\n+                         \"processDefinitionId\": \"aProcessDefinitionId\",\n+                         \"processInstanceBusinessKey\" : \"businessKey\"\n+                       },\n+                       \"initialVariables\" : true,\n+                       \"skipCustomListeners\" : true,\n+                       \"withoutBusinessKey\" : true\n+                     }\n+                   }'\n+                 ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"204\"\n+        desc = \"Request successful.\" />\n+\n+    <@lib.response\n+        code = \"400\"\n+        dto = \"ExceptionDto\"\n+        last = true\n+        desc = \"In case following parameters are missing: `instructions`, `activityId` or `transitionId`,\n+                `processInstanceIds` or `historicProcessInstanceQuery`, an exception of type `InvalidRequestException` is returned. \n+                See the [Introduction](${docsUrl}/reference/rest/overview/#error-handling)\n+                for the error response format.\" />\n+", "originalCommit": "1a811a2f03129995625b38dbfc37d952ee182095", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ecdd6094bb7ff155586f2dad06bfe3ba70e0e3dd", "url": "https://github.com/camunda/camunda-bpm-platform/commit/ecdd6094bb7ff155586f2dad06bfe3ba70e0e3dd", "message": "feat(rest-openapi): add process definition endpoints\n\n* change to upper case tags in process instance endpoints\n* add AuthorizationExceptionDto to 403 responses\n\nRelated to CAM-11547", "committedDate": "2020-05-05T12:53:20Z", "type": "commit"}, {"oid": "85fbc11c9610a3a7aa9d6ba01815f7e1557bd831", "url": "https://github.com/camunda/camunda-bpm-platform/commit/85fbc11c9610a3a7aa9d6ba01815f7e1557bd831", "message": "squash format\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-05T12:53:24Z", "type": "commit"}, {"oid": "32c39d0d5c9e5060c8621becd0afaaee6a3b0375", "url": "https://github.com/camunda/camunda-bpm-platform/commit/32c39d0d5c9e5060c8621becd0afaaee6a3b0375", "message": "squash link\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-05T12:53:24Z", "type": "commit"}, {"oid": "69b32925ce3e919733c9cce9b11ed2367a3ff8a1", "url": "https://github.com/camunda/camunda-bpm-platform/commit/69b32925ce3e919733c9cce9b11ed2367a3ff8a1", "message": "squash array fix\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-05T12:53:39Z", "type": "commit"}, {"oid": "dbc051a4553d66f81ccfce7b6a5cd91e1561f8b6", "url": "https://github.com/camunda/camunda-bpm-platform/commit/dbc051a4553d66f81ccfce7b6a5cd91e1561f8b6", "message": "squash desc fix\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-05T12:53:53Z", "type": "commit"}, {"oid": "89decdf3b9ef10b0b4b6b12782a538f6550f04b8", "url": "https://github.com/camunda/camunda-bpm-platform/commit/89decdf3b9ef10b0b4b6b12782a538f6550f04b8", "message": "squash responses\r\n\r\nApply suggestions from code review\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-05T12:53:53Z", "type": "commit"}, {"oid": "111551269bea9599ef927c770229f9e465ad0d1f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/111551269bea9599ef927c770229f9e465ad0d1f", "message": "add note comments", "committedDate": "2020-05-05T12:53:53Z", "type": "commit"}, {"oid": "2dbeeec5e9b86eb47a36143b8566cc8938623615", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2dbeeec5e9b86eb47a36143b8566cc8938623615", "message": "add endpoint summary", "committedDate": "2020-05-05T12:53:53Z", "type": "commit"}, {"oid": "2dbeeec5e9b86eb47a36143b8566cc8938623615", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2dbeeec5e9b86eb47a36143b8566cc8938623615", "message": "add endpoint summary", "committedDate": "2020-05-05T12:53:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MjY5MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r421362690", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     The DTO is create separately as it does not contain\n          \n          \n            \n                     all of these properties and the description differ too much. -->\n          \n          \n            \n                     The DTO was created separately as it does not contain\n          \n          \n            \n                     all of these properties and the description differs too much. -->", "author": "koevskinikola", "createdAt": "2020-05-07T09:20:52Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/modification/ProcessInstanceModificationInstructionDto.ftl", "diffHunk": "@@ -1,6 +1,11 @@\n <@lib.dto\n     required = [ \"type\" ] >\n \n+    <#-- NOTE: Please consider adjusting the RestartProcessInstanceModificationInstructionDto\n+         if the properties are valid there as well.\n+         The DTO is create separately as it does not contain\n+         all of these properties and the description differ too much. -->", "originalCommit": "2dbeeec5e9b86eb47a36143b8566cc8938623615", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MzI3Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/798#discussion_r421363277", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <#-- NOTE: Please adding changes if necessary to:\n          \n          \n            \n                <#-- NOTE: Please adding any changes, if necessary, to:", "author": "koevskinikola", "createdAt": "2020-05-07T09:21:49Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/SuspensionStateDto.ftl", "diffHunk": "@@ -1,5 +1,10 @@\n <@lib.dto>\n \n+    <#-- NOTE: Please adding changes if necessary to:", "originalCommit": "2dbeeec5e9b86eb47a36143b8566cc8938623615", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0e7c10075a59859ceb2dcb31d9b29512bf376847", "url": "https://github.com/camunda/camunda-bpm-platform/commit/0e7c10075a59859ceb2dcb31d9b29512bf376847", "message": "squash grammar\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-07T09:28:42Z", "type": "commit"}, {"oid": "1529dac72dbb581c318054f43cc95ac6afbfc520", "url": "https://github.com/camunda/camunda-bpm-platform/commit/1529dac72dbb581c318054f43cc95ac6afbfc520", "message": "squash grammar\n\nCo-authored-by: Nikola Koevski <nikola.koevski@camunda.com>", "committedDate": "2020-05-07T09:29:03Z", "type": "commit"}]}