{"pr_number": 768, "pr_title": "CAM-11709: feat(rest): add external task operation openapi endpoints", "pr_createdAt": "2020-04-01T12:18:55Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/768", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwNzcyNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401607727", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"string\"\n          \n          \n            \n                    type = \"integer\",\n          \n          \n            \n                    format = \"int64\"", "author": "yanavasileva", "createdAt": "2020-04-01T13:18:54Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/FetchExternalTaskTopicDto.ftl", "diffHunk": "@@ -0,0 +1,96 @@\n+<@lib.dto\n+    required = [ \"topicName\", \"lockDuration\" ] >\n+\n+    <@lib.property\n+        name = \"topicName\"\n+        type = \"string\"\n+        desc = \"**Mandatory.** The topic's name.\" />\n+\n+    <@lib.property\n+        name = \"lockDuration\"\n+        type = \"string\"", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2MjE0Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401662146", "bodyText": "Added with the rest of the review hints.", "author": "koevskinikola", "createdAt": "2020-04-01T14:32:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwNzcyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMzAwOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401613009", "bodyText": "missing property in docs-manual:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n               <@lib.property\n          \n          \n            \n                  name = \"processDefinitionVersionTag\"\n          \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  desc = \"The version tag of the process definition the external task is defined in.\"", "author": "yanavasileva", "createdAt": "2020-04-01T13:26:20Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/LockedExternalTaskDto.ftl", "diffHunk": "@@ -0,0 +1,98 @@\n+<@lib.dto\n+    title = \"LockedExternalTaskDto\" >\n+\n+  <@lib.property\n+      name = \"activityId\"\n+      type = \"string\"\n+      desc = \"The id of the activity that this external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"activityInstanceId\"\n+      type = \"string\"\n+      desc = \"The id of the activity instance that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"errorMessage\"\n+      type = \"string\"\n+      desc = \"The full error message submitted with the latest reported failure executing this task;`null` if no failure\n+              was reported previously or if no error message was submitted\" />\n+\n+  <@lib.property\n+      name = \"errorDetails\"\n+      type = \"string\"\n+      desc = \"The error details submitted with the latest reported failure executing this task.`null` if no failure was\n+              reported previously or if no error details was submitted\" />\n+\n+  <@lib.property\n+      name = \"executionId\"\n+      type = \"string\"\n+      desc = \"The id of the execution that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"id\"\n+      type = \"string\"\n+      desc = \"The id of the external task.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationTime\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"The date that the task's most recent lock expires or has expired.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionId\"\n+      type = \"string\"\n+      desc = \"The id of the process definition the external task is defined in.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionKey\"\n+      type = \"string\"\n+      desc = \"The key of the process definition the external task is defined in.\" />\n+", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNjk5NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401616995", "bodyText": "missing property in docs-manual:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n              <@lib.property\n          \n          \n            \n                  name = \"suspended\"\n          \n          \n            \n                  type = \"boolean\"\n          \n          \n            \n                  desc = \"Whether the process instance the external task belongs to is suspended.\" />", "author": "yanavasileva", "createdAt": "2020-04-01T13:31:55Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/LockedExternalTaskDto.ftl", "diffHunk": "@@ -0,0 +1,98 @@\n+<@lib.dto\n+    title = \"LockedExternalTaskDto\" >\n+\n+  <@lib.property\n+      name = \"activityId\"\n+      type = \"string\"\n+      desc = \"The id of the activity that this external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"activityInstanceId\"\n+      type = \"string\"\n+      desc = \"The id of the activity instance that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"errorMessage\"\n+      type = \"string\"\n+      desc = \"The full error message submitted with the latest reported failure executing this task;`null` if no failure\n+              was reported previously or if no error message was submitted\" />\n+\n+  <@lib.property\n+      name = \"errorDetails\"\n+      type = \"string\"\n+      desc = \"The error details submitted with the latest reported failure executing this task.`null` if no failure was\n+              reported previously or if no error details was submitted\" />\n+\n+  <@lib.property\n+      name = \"executionId\"\n+      type = \"string\"\n+      desc = \"The id of the execution that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"id\"\n+      type = \"string\"\n+      desc = \"The id of the external task.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationTime\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"The date that the task's most recent lock expires or has expired.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionId\"\n+      type = \"string\"\n+      desc = \"The id of the process definition the external task is defined in.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionKey\"\n+      type = \"string\"\n+      desc = \"The key of the process definition the external task is defined in.\" />\n+\n+  <@lib.property\n+      name = \"processInstanceId\"\n+      type = \"string\"\n+      desc = \"The id of the process instance the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"tenantId\"\n+      type = \"string\"\n+      desc = \"The id of the tenant the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"retries\"\n+      type = \"integer\"\n+      format = \"int32\"\n+      desc = \"The number of retries the task currently has left.\" />\n+", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMDQ5NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401620494", "bodyText": "extend summary similar to docs-manual\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                   \"summary\": \"POST /external-task/fetchAndLock (2)\",\n          \n          \n            \n                                   \"summary\": \"POST /external-task/fetchAndLock (2) with all variables\",", "author": "yanavasileva", "createdAt": "2020-04-01T13:36:51Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/fetchAndLock/post.ftl", "diffHunk": "@@ -0,0 +1,177 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"fetchAndLock\"\n+      tag = \"External Task\"\n+      desc = \"Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted\n+              to specific task topics and for each task topic an individual lock time can be provided.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"FetchExternalTasksDto\"\n+      examples = ['\"example-1\": {\n+                       \"summary\": \"POST /external-task/fetchAndLock (1)\",\n+                       \"description\": \"Request with variable filtering\",\n+                       \"value\": {\n+                         \"workerId\": \"aWorkerId\",\n+                         \"maxTasks\": 2,\n+                         \"usePriority\": true,\n+                         \"topics\": [\n+                           {\n+                             \"topicName\": \"createOrder\",\n+                             \"lockDuration\": 10000,\n+                             \"variables\": [\n+                               \"orderId\"\n+                             ]\n+                           }\n+                         ]\n+                       }\n+                     }',\n+                    '\"example-2\": {\n+                       \"summary\": \"POST /external-task/fetchAndLock (2)\",", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NTU3Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401665572", "bodyText": "@yanavasileva, I added that as a description one line bellow since the summary in the Swagger UI is in a dropdown. Is that okay?", "author": "koevskinikola", "createdAt": "2020-04-01T14:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMDQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4Mzk3OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401683978", "bodyText": "didn't see it first, it's ok", "author": "yanavasileva", "createdAt": "2020-04-01T15:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMDQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMTAzNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401621036", "bodyText": "extend summary similar to docs-manual:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                   \"summary\": \"POST /external-task/fetchAndLock (2)\",\n          \n          \n            \n                                   \"summary\": \"POST /external-task/fetchAndLock (2) with all variables\",", "author": "yanavasileva", "createdAt": "2020-04-01T13:37:39Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/fetchAndLock/post.ftl", "diffHunk": "@@ -0,0 +1,177 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"fetchAndLock\"\n+      tag = \"External Task\"\n+      desc = \"Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted\n+              to specific task topics and for each task topic an individual lock time can be provided.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"FetchExternalTasksDto\"\n+      examples = ['\"example-1\": {\n+                       \"summary\": \"POST /external-task/fetchAndLock (1)\",\n+                       \"description\": \"Request with variable filtering\",\n+                       \"value\": {\n+                         \"workerId\": \"aWorkerId\",\n+                         \"maxTasks\": 2,\n+                         \"usePriority\": true,\n+                         \"topics\": [\n+                           {\n+                             \"topicName\": \"createOrder\",\n+                             \"lockDuration\": 10000,\n+                             \"variables\": [\n+                               \"orderId\"\n+                             ]\n+                           }\n+                         ]\n+                       }\n+                     }',\n+                    '\"example-2\": {\n+                       \"summary\": \"POST /external-task/fetchAndLock (2)\",\n+                       \"description\": \"Request with all variables included\",\n+                       \"value\": {\n+                         \"workerId\": \"aWorkerId\",\n+                         \"maxTasks\": 2,\n+                         \"usePriority\": true,\n+                         \"topics\": [\n+                           {\n+                             \"topicName\": \"createOrder\",\n+                             \"lockDuration\": 10000,\n+                             \"processDefinitionId\": \"aProcessDefinitionId\",\n+                             \"tenantIdIn\": \"tenantOne\"\n+                           }\n+                         ]\n+                       }\n+                     }'\n+      ] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"LockedExternalTaskDto\"\n+        array = true\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"POST /external-task/fetchAndLock (1)\",\n+                       \"description\": \"Request with variable filtering\",\n+                       \"value\": [\n+                         {\n+                           \"activityId\": \"anActivityId\",\n+                           \"activityInstanceId\": \"anActivityInstanceId\",\n+                           \"errorMessage\": \"anErrorMessage\",\n+                           \"errorDetails\": \"anErrorDetails\",\n+                           \"executionId\": \"anExecutionId\",\n+                           \"id\": \"anExternalTaskId\",\n+                           \"lockExpirationTime\": \"2015-10-06T16:34:42.000+0200\",\n+                           \"processDefinitionId\": \"aProcessDefinitionId\",\n+                           \"processDefinitionKey\": \"aProcessDefinitionKey\",\n+                           \"processInstanceId\": \"aProcessInstanceId\",\n+                           \"tenantId\": null,\n+                           \"retries\": 3,\n+                           \"workerId\": \"aWorkerId\",\n+                           \"priority\": 4,\n+                           \"topicName\": \"createOrder\",\n+                           \"variables\": {\n+                             \"orderId\": {\n+                               \"type\": \"String\",\n+                               \"value\": \"1234\",\n+                               \"valueInfo\": {}\n+                             }\n+                           }\n+                         },\n+                         {\n+                           \"activityId\": \"anActivityId\",\n+                           \"activityInstanceId\": \"anActivityInstanceId\",\n+                           \"errorMessage\": \"anErrorMessage\",\n+                           \"errorDetails\": \"anotherErrorDetails\",\n+                           \"executionId\": \"anExecutionId\",\n+                           \"id\": \"anExternalTaskId\",\n+                           \"lockExpirationTime\": \"2015-10-06T16:34:42.000+0200\",\n+                           \"processDefinitionId\": \"aProcessDefinitionId\",\n+                           \"processDefinitionKey\": \"aProcessDefinitionKey\",\n+                           \"processInstanceId\": \"aProcessInstanceId\",\n+                           \"tenantId\": null,\n+                           \"retries\": 3,\n+                           \"workerId\": \"aWorkerId\",\n+                           \"priority\": 0,\n+                           \"topicName\": \"createOrder\",\n+                           \"variables\": {\n+                             \"orderId\": {\n+                               \"type\": \"String\",\n+                               \"value\": \"3456\",\n+                               \"valueInfo\": {}\n+                             }\n+                           }\n+                         }\n+                       ]\n+                     }',\n+                    '\"example-2\": {\n+                       \"summary\": \"POST /external-task/fetchAndLock (2)\",", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NzM3Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401667373", "bodyText": "Same as above", "author": "koevskinikola", "createdAt": "2020-04-01T14:39:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMTAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4NDIxNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401684217", "bodyText": "didn't see it first, it's ok", "author": "yanavasileva", "createdAt": "2020-04-01T15:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMTAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTI0Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401625243", "bodyText": "wrong of this file it should be:\n\"/external-task/retries/put.ftl\"", "author": "yanavasileva", "createdAt": "2020-04-01T13:43:19Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/retries-sync/put.ftl", "diffHunk": "@@ -0,0 +1,46 @@\n+{\n+\n+  <@lib.endpointInfo", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNzI2OQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401627269", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                   \"summary\": \"PUT /external-task/retries-sync\",\n          \n          \n            \n                                   \"summary\": \"PUT /external-task/retries\",", "author": "yanavasileva", "createdAt": "2020-04-01T13:46:05Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/retries-sync/put.ftl", "diffHunk": "@@ -0,0 +1,46 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"setExternalTaskRetries\"\n+      tag = \"External Task\"\n+      desc = \"Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, \n+              an incident is created.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"SetRetriesForExternalTasksDto\"\n+      examples = ['\"example-1\": {\n+                       \"summary\": \"PUT /external-task/retries-sync\",", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzNjYzMQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401636631", "bodyText": "missing properties in the example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                     \"tenantId\": \"aTenantId\"\n          \n          \n            \n                                     \"tenantId\": \"aTenantId\",\n          \n          \n            \n                                     \"suspended\": false,\n          \n          \n            \n                                     \"createUserId\": \"demo\"", "author": "yanavasileva", "createdAt": "2020-04-01T13:58:24Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/retries-async/post.ftl", "diffHunk": "@@ -0,0 +1,62 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"setExternalTaskRetriesAsync\"\n+      tag = \"External Task\"\n+      desc = \"Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0,\n+              an incident is created.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"SetRetriesForExternalTasksDto\"\n+      examples = ['\"example-1\": {\n+                       \"summary\": \"POST /external-task/retries-async\",\n+                       \"value\": {\n+                         \"retries\": 123,\n+                         \"externalTaskIds\": [\n+                           \"anExternalTask\",\n+                           \"anotherExternalTask\"\n+                         ]\n+                       }\n+                     }'] />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"BatchDto\"\n+        desc = \"Request successful.\"\n+        examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 Response\",\n+                       \"value\": {\n+                         \"id\": \"aBatchId\",\n+                         \"type\": \"aBatchType\",\n+                         \"totalJobs\": 10,\n+                         \"batchJobsPerSeed\": 100,\n+                         \"invocationsPerBatchJob\": 1,\n+                         \"seedJobDefinitionId\": \"aSeedJobDefinitionId\",\n+                         \"monitorJobDefinitionId\": \"aMonitorJobDefinitionId\",\n+                         \"batchJobDefinitionId\": \"aBatchJobDefinitionId\",\n+                         \"tenantId\": \"aTenantId\"", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MTI2Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401641262", "bodyText": "suggestion for formatting:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          \"value\": \"\n          \n          \n            \n                            org.apache.ibatis.jdbc.RuntimeSqlException: org.apache.ibatis.jdbc.RuntimeSqlException: test cause\n          \n          \n            \n                          \"value\": \"org.apache.ibatis.jdbc.RuntimeSqlException: org.apache.ibatis.jdbc.RuntimeSqlException: test cause", "author": "yanavasileva", "createdAt": "2020-04-01T14:04:37Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/{id}/errorDetails/get.ftl", "diffHunk": "@@ -0,0 +1,54 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getExternalTaskErrorDetails\"\n+      tag = \"External Task\"\n+      desc = \"Retrieves the error details in the context of a running external task by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the external task for which the error details should be retrieved.\"/>\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful.\",\n+      \"content\": {\n+        \"text/plain\": {\n+          \"schema\": {\n+            \"type\": \"string\",\n+            \"description\": \"The error details for the external task.\"\n+          },\n+          \"examples\": {\n+            \"example-1\": {\n+              \"value\": \"\n+                org.apache.ibatis.jdbc.RuntimeSqlException: org.apache.ibatis.jdbc.RuntimeSqlException: test cause", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0ODE5Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401648196", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n                <@lib.response\n          \n          \n            \n                    code = \"204\"\n          \n          \n            \n                    desc = \"Request successful. In case, the external task has no error details.\" />", "author": "yanavasileva", "createdAt": "2020-04-01T14:14:12Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/{id}/errorDetails/get.ftl", "diffHunk": "@@ -0,0 +1,54 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getExternalTaskErrorDetails\"\n+      tag = \"External Task\"\n+      desc = \"Retrieves the error details in the context of a running external task by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the external task for which the error details should be retrieved.\"/>\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful.\",\n+      \"content\": {\n+        \"text/plain\": {\n+          \"schema\": {\n+            \"type\": \"string\",\n+            \"description\": \"The error details for the external task.\"\n+          },\n+          \"examples\": {\n+            \"example-1\": {\n+              \"value\": \"\n+                org.apache.ibatis.jdbc.RuntimeSqlException: org.apache.ibatis.jdbc.RuntimeSqlException: test cause\n+                  at org.camunda.bpm.engine.test.api.externaltask.ExternalTaskServiceTest.testHandleFailureWithErrorDetails(ExternalTaskServiceTest.java:1424)\n+                  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n+                  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n+                  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n+                \"\n+            }\n+          }\n+        }\n+      }\n+    },\n+", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0ODQ2Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/768#discussion_r401648466", "bodyText": "it seems to return 500 instead of 404\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    code = \"404\"\n          \n          \n            \n                    code = \"500\"", "author": "yanavasileva", "createdAt": "2020-04-01T14:14:37Z", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/{id}/errorDetails/get.ftl", "diffHunk": "@@ -0,0 +1,54 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getExternalTaskErrorDetails\"\n+      tag = \"External Task\"\n+      desc = \"Retrieves the error details in the context of a running external task by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the external task for which the error details should be retrieved.\"/>\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful.\",\n+      \"content\": {\n+        \"text/plain\": {\n+          \"schema\": {\n+            \"type\": \"string\",\n+            \"description\": \"The error details for the external task.\"\n+          },\n+          \"examples\": {\n+            \"example-1\": {\n+              \"value\": \"\n+                org.apache.ibatis.jdbc.RuntimeSqlException: org.apache.ibatis.jdbc.RuntimeSqlException: test cause\n+                  at org.camunda.bpm.engine.test.api.externaltask.ExternalTaskServiceTest.testHandleFailureWithErrorDetails(ExternalTaskServiceTest.java:1424)\n+                  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n+                  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n+                  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n+                \"\n+            }\n+          }\n+        }\n+      }\n+    },\n+\n+    <@lib.response\n+        code = \"404\"", "originalCommit": "6f78a23d2628b2e83d7d100d1388904ff2e1367b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8f6bca945886698273c4618709717dde2213ba5b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8f6bca945886698273c4618709717dde2213ba5b", "message": "feat(rest): add external task query & count openapi endpoints\n\n* fix quotes in task variables endpoint\r\n\r\nRelated to CAM-11540, CAM-11697, PR (#766)", "committedDate": "2020-04-01T15:11:55Z", "type": "commit"}, {"oid": "8d39f7865b8e1d962afbda8781ec45603053285f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8d39f7865b8e1d962afbda8781ec45603053285f", "message": "feat(rest): add external task operation openapi endpoints\n\n* Add OpenAPI documentation for operations on External Task (excluding\n  querying and counting);\n* Add missing Jackson links.\n\nRelated to CAM-11540, CAM-11709", "committedDate": "2020-04-01T15:17:21Z", "type": "commit"}, {"oid": "8331539105e76a9bbd4c9bfbd85227ecd4ac0c74", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8331539105e76a9bbd4c9bfbd85227ecd4ac0c74", "message": "SQUASH ME: fix formatting\n\nCo-Authored-By: yanavasileva <yanavasileva@users.noreply.github.com>", "committedDate": "2020-04-01T15:17:21Z", "type": "commit"}, {"oid": "32d03846cb94d05d32b5ae6687555a471c3aa826", "url": "https://github.com/camunda/camunda-bpm-platform/commit/32d03846cb94d05d32b5ae6687555a471c3aa826", "message": "SQUASH ME: correct response type\n\nCo-Authored-By: yanavasileva <yanavasileva@users.noreply.github.com>", "committedDate": "2020-04-01T15:17:21Z", "type": "commit"}, {"oid": "66a66240aae9ec0c4fde463c5d5f6d6d07517675", "url": "https://github.com/camunda/camunda-bpm-platform/commit/66a66240aae9ec0c4fde463c5d5f6d6d07517675", "message": "SQUASH ME: implement review hints", "committedDate": "2020-04-01T15:17:59Z", "type": "commit"}, {"oid": "35a71ad37cf404718b684d9248eddf998ec5c5f3", "url": "https://github.com/camunda/camunda-bpm-platform/commit/35a71ad37cf404718b684d9248eddf998ec5c5f3", "message": "wip", "committedDate": "2020-04-01T15:17:59Z", "type": "commit"}, {"oid": "4addc28f358d49e65b49e4940bbcfb96494e764c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/4addc28f358d49e65b49e4940bbcfb96494e764c", "message": "SQUASH ME: implement review hints", "committedDate": "2020-04-01T15:17:59Z", "type": "commit"}, {"oid": "4addc28f358d49e65b49e4940bbcfb96494e764c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/4addc28f358d49e65b49e4940bbcfb96494e764c", "message": "SQUASH ME: implement review hints", "committedDate": "2020-04-01T15:17:59Z", "type": "forcePushed"}]}