{"pr_number": 5758, "pr_title": "ntex: reduce memory allocations in fortunes bench", "pr_createdAt": "2020-06-11T05:55:53Z", "pr_url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758", "timeline": [{"oid": "af0fcc820e7132b46c758a8217d21a16cf4cb620", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/af0fcc820e7132b46c758a8217d21a16cf4cb620", "message": "reduce memory allocations", "committedDate": "2020-06-11T05:53:57Z", "type": "commit"}, {"oid": "ca4955468764ba3c949e6f0af5a592dfd9ec395a", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/ca4955468764ba3c949e6f0af5a592dfd9ec395a", "message": "upgrade rustc", "committedDate": "2020-06-11T05:56:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438884403", "bodyText": "The changes here and setting the body length capacity violate rule 5. in the fortunes test:\n\nThe list data structure must be a dynamic-size or equivalent and should not be dimensioned using foreknowledge of the row-count of the database table.", "author": "nbrady-techempower", "createdAt": "2020-06-11T15:42:49Z", "path": "frameworks/Rust/ntex/src/db.rs", "diffHunk": "@@ -161,31 +175,49 @@ impl PgConnection {\n         }\n     }\n \n-    pub fn tell_fortune(&self) -> impl Future<Output = Result<Vec<Fortune>, io::Error>> {\n-        let mut items = vec![Fortune {\n-            id: 0,\n-            message: \"Additional fortune added at request time.\".to_string(),\n-        }];\n-\n+    pub fn tell_fortune(&self) -> impl Future<Output = Result<Bytes, io::Error>> {\n         let fut = self.cl.query_raw(&self.fortune, &[]);\n \n         async move {\n             let mut stream = fut\n                 .await\n                 .map_err(|e| io::Error::new(io::ErrorKind::Other, format!(\"{:?}\", e)))?;\n \n+            let mut rows = SmallVec::<[_; 32]>::new();", "originalCommit": "ca4955468764ba3c949e6f0af5a592dfd9ec395a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4OTE1Mg==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438889152", "bodyText": "SmallVec is dynamic, it can contain any number of elements", "author": "fafhrd91", "createdAt": "2020-06-11T15:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5ODA4NA==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438898084", "bodyText": "I don't see any documentation on the TemplateFixed macro, but it makes me think that using that with these initial capacities is optimizing for a known size of memory allocation. Can you help me understand what TemplateFixed does? Also,\nlet mut body = BytesMut::with_capacity(2048);\n            unsafe {\n                // Maybe uninit\n                body.set_len(2048);", "author": "nbrady-techempower", "createdAt": "2020-06-11T15:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMDAzNA==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438900034", "bodyText": "this is just uninitialized buffer, yarte engine write to that memory directly.\nhttps://docs.rs/yarte/0.9.9/yarte/derive.TemplateFixed.html", "author": "fafhrd91", "createdAt": "2020-06-11T16:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzMDgxMQ==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438930811", "bodyText": "If the fortune body is more than 2048 bytes:\nntex-db: thread 'ntex-rt:worker:9' panicked at 'called `Option::unwrap()` on a `None` value', src/db.rs:211:28\n\nThis can be replicated by adding a couple more rows to the Fortunes table.", "author": "nbrady-techempower", "createdAt": "2020-06-11T16:52:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzODc0Ng==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438938746", "bodyText": "fair point. it is fixed.", "author": "fafhrd91", "createdAt": "2020-06-11T17:06:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MDk1Nw==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5758#discussion_r438940957", "bodyText": "@fafhrd91 thanks!", "author": "nbrady-techempower", "createdAt": "2020-06-11T17:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDQwMw=="}], "type": "inlineReview"}, {"oid": "42a0fe99e7ae7f85d45462429d081792f43170fa", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/42a0fe99e7ae7f85d45462429d081792f43170fa", "message": "use dynamic buffer", "committedDate": "2020-06-11T17:05:32Z", "type": "commit"}]}