{"pr_number": 5541, "pr_title": "Yii2: enable the ORM cache on the DB schema", "pr_createdAt": "2020-03-11T16:35:23Z", "pr_url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541", "timeline": [{"oid": "3c542cc673c2e1136f82e0b7ad3b842c6ca364c8", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/3c542cc673c2e1136f82e0b7ad3b842c6ca364c8", "message": "yii2: replace PHP 7.3 references by 7.4", "committedDate": "2020-03-11T15:51:52Z", "type": "commit"}, {"oid": "4e5ce22c43f7c549fb466be1a9472d7405e8b0d5", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/4e5ce22c43f7c549fb466be1a9472d7405e8b0d5", "message": "yii2 fortunes: sorting with anonymous function was slower\n\nMy micro-bencharks showed that using an anonymous function\nas a callable parameter was about twice slower than using\na named function or a static method.\n\nThe gain is minor but visible, about 0.5 \u00b5s/call,\nso theorically about 300 \u00b5s/request.", "committedDate": "2020-03-11T15:54:11Z", "type": "commit"}, {"oid": "445a9114265c3cc749ce1546997e7d22291c8ccd", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/445a9114265c3cc749ce1546997e7d22291c8ccd", "message": "yii2 updates: skip model validation\n\nNo visible gain, but it makes sense to skip the call to\nFortune::validate() when the data is not an user input.", "committedDate": "2020-03-11T16:01:54Z", "type": "commit"}, {"oid": "75912ac2bd48291eed848a417c142279a88c405c", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/75912ac2bd48291eed848a417c142279a88c405c", "message": "yii2: cache the DB schema\n\nWithout this, Yii2 analyzes the DB schema at the beginning of\neach request. This caused warnings in `tfb` about the surpringly\nlarge number of SQL queries.\n\nThe gain is huge. For instance, in yii2-fortunes it was more than \u00d77,\nfrom 387 req/s to 2824 req/s on my system.", "committedDate": "2020-03-11T16:03:17Z", "type": "commit"}, {"oid": "695595c12e4672b7cb4d169ba7e0fccf339bb191", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/695595c12e4672b7cb4d169ba7e0fccf339bb191", "message": "yii2: do not install Bootstrap CSS components\n\nMinimal performance gain (less classes for the autoloader),\nso this change is mostly a sensible cleanup.", "committedDate": "2020-03-11T16:09:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NjExOA==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541#discussion_r392356118", "bodyText": "Good point \ud83d\udc4d\nAnd a good recommendation to optimize the OPCache with anonymous functions.\nPerhaps, it's better to use directly 'Fortune::cmp', as it's a static method.\nmmm, but the other way you get the complete namespace. OK", "author": "joanhey", "createdAt": "2020-03-13T17:01:34Z", "path": "frameworks/PHP/yii2/app/controllers/SiteController.php", "diffHunk": "@@ -57,9 +57,7 @@ public function actionFortunes()\n \n         $fortunes[] = $runtimeFortune;\n \n-        usort($fortunes, function ($left, $right) {\n-            return strcmp($left->message, $right->message);\n-        });\n+        usort($fortunes, [Fortune::class, 'cmp']);", "originalCommit": "4e5ce22c43f7c549fb466be1a9472d7405e8b0d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MTM0Nw==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541#discussion_r394271347", "bodyText": "I tried both syntaxes in my micro benchmarks, and the difference was negligible. So I chose the cleanest syntax, since '\\\\app\\\\models\\\\Fortune::cmp' was ugly, and 'Fortune::cmp' would fail.", "author": "mytskine", "createdAt": "2020-03-18T11:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NjExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzMDAxMA==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541#discussion_r394330010", "bodyText": "Have you tried that fail ?\nbecause that file have:\nuse app\\models\\Fortune;\nSo I think that will work.\nIf it fails it is a failure in php.", "author": "joanhey", "createdAt": "2020-03-18T13:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NjExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MzQ4Nw==", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541#discussion_r395143487", "bodyText": "No it won't work, and yes, IIRC, I did confirm the failure myself (but I've since deleted my test file).\nFrom PHP: Namespaces and dynamic language features in the official documentation about callables: \"One must use the fully qualified name\".", "author": "mytskine", "createdAt": "2020-03-19T16:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NjExOA=="}], "type": "inlineReview"}]}