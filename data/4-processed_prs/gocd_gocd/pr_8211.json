{"pr_number": 8211, "pr_title": "Allow loading external assets into analytics iframe", "pr_createdAt": "2020-06-03T12:23:48Z", "pr_url": "https://github.com/gocd/gocd/pull/8211", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435020837", "bodyText": "@arvindsv we bubble up an error when we fail to write the other plugin static assets to disk. Shouldn't we do the same here? If highcharts is not present, nothing will work, so we should make that more apparent than a log message, no? I didn't follow the usages, but I'm making an assumption that thrown exceptions become visible in the UI.", "author": "marques-work", "createdAt": "2020-06-04T06:31:46Z", "path": "server/src/main/java/com/thoughtworks/go/server/service/plugins/AnalyticsPluginAssetsService.java", "diffHunk": "@@ -132,6 +138,26 @@ private void cacheStaticAssets(String pluginId) {\n         }\n     }\n \n+    private void safeCopyExternalAssetsToPluginAssetRoot(final String pluginAssetsRoot) {\n+        Path externalAssetsPath = Paths.get(systemEnvironment.get(SystemEnvironment.GO_ANALYTICS_PLUGIN_EXTERNAL_ASSETS));\n+        if (externalAssetsPath == null || !Files.exists(externalAssetsPath) || !Files.isDirectory(externalAssetsPath)) {\n+            LOGGER.debug(\"Analytics plugin external assets path ({}) does not exist or is not a directory. Not loading any assets.\", externalAssetsPath);\n+            return;\n+        }\n+\n+        try {\n+            Files.list(externalAssetsPath).forEach(path -> {\n+                try {\n+                    Files.copy(path, Paths.get(pluginAssetsRoot, path.getFileName().toString()));\n+                } catch (Exception e) {\n+                    LOGGER.error(\"Unable to copy analytics plugin external asset ({}) to plugin assets root.\", path, e);\n+                }\n+            });\n+        } catch (Exception e) {\n+            LOGGER.error(\"Unable to list files in analytics plugin external assets location ({}).\", externalAssetsPath, e);", "originalCommit": "5ea191440a7e40cfd78e6174b2aeee5f37d645c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyNjQyNA==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435026424", "bodyText": "Yeah, they might not be visible directly, since this is after the plugin has loaded. Maybe it'll show up in the plugin page.\nThe current approach logs it. Two problems with making it explicit:\n\n\nWe would be assuming all future analytics plugins need these files (specifically highcharts). That would be wrong. This is just a generic mechanism to load external (JS) assets into the plugin iframe.\n\n\nThe commercial plugin does not need any external assets, since we can package highcharts along with it (as we have purchased licenses which can be used commercially).", "author": "arvindsv", "createdAt": "2020-06-04T06:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyNzY0NA==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435027644", "bodyText": "By the way, I can bubble up the error here, since this is more about an inability to read the file or directory (mostly permission issues). What I'd like to not do is to explicitly list the expected JS files. That would hamstring any future analytics plugins.", "author": "arvindsv", "createdAt": "2020-06-04T06:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MDg3Ng==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435070876", "bodyText": "I think that makes sense - keeping it generic and just validating the directory is readable.", "author": "marques-work", "createdAt": "2020-06-04T08:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3MTQ5Nw==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435071497", "bodyText": "(which you are doing -- but lets allow the exception through now)", "author": "marques-work", "createdAt": "2020-06-04T08:12:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMzQzMw==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435113433", "bodyText": "Done. I'm just verifying it works fine.", "author": "arvindsv", "createdAt": "2020-06-04T09:21:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNjExMg==", "url": "https://github.com/gocd/gocd/pull/8211#discussion_r435116112", "bodyText": "Looks ok. It shows this in the plugins page:\n\n... and this in the logs:\n2020-06-04 10:23:26,663 WARN  [Thread-77] DefaultPluginJarLocationMonitor:260 - Plugin listener failed\njava.lang.RuntimeException: Failed to load plugin: plugins_work/gocd-analytics.jar\n        at com.thoughtworks.go.plugin.infra.PluginLoader.loadPlugin(PluginLoader.java:76)\n        at com.thoughtworks.go.plugin.infra.listeners.DefaultPluginJarChangeListener.refreshBundle(DefaultPluginJarChangeListener.java:180)\n        at com.thoughtworks.go.plugin.infra.listeners.DefaultPluginJarChangeListener.addPlugin(DefaultPluginJarChangeListener.java:123)\n        at com.thoughtworks.go.plugin.infra.listeners.DefaultPluginJarChangeListener.pluginJarAdded(DefaultPluginJarChangeListener.java:72)\n        at com.thoughtworks.go.plugin.infra.monitor.DefaultPluginJarLocationMonitor$PluginLocationMonitorThread$DoOnAllListeners.lambda$pluginJarAdded$0(DefaultPluginJarLocationMonitor.java:237)\n        at com.thoughtworks.go.plugin.infra.monitor.DefaultPluginJarLocationMonitor$PluginLocationMonitorThread$DoOnAllListeners.doOnAllPluginJarChangeListener(DefaultPluginJarLocationMonitor.java:258)\n        at com.thoughtworks.go.plugin.infra.monitor.DefaultPluginJarLocationMonitor$PluginLocationMonitorThread$DoOnAllListeners.pluginJarAdded(DefaultPluginJarLocationMonitor.java:237)\n        at com.thoughtworks.go.plugin.infra.monitor.PluginChangeNotifier.lambda$notify$0(PluginChangeNotifier.java:33)\n        at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n        at com.thoughtworks.go.plugin.infra.monitor.PluginChangeNotifier.notify(PluginChangeNotifier.java:30)\n        at com.thoughtworks.go.plugin.infra.monitor.DefaultPluginJarLocationMonitor$PluginLocationMonitorThread.loadAndNotifyPluginsFrom(DefaultPluginJarLocationMonitor.java:204)\n        at com.thoughtworks.go.plugin.infra.monitor.DefaultPluginJarLocationMonitor$PluginLocationMonitorThread.oneShot(DefaultPluginJarLocationMonitor.java:192)\n        at com.thoughtworks.go.plugin.infra.monitor.DefaultPluginJarLocationMonitor$PluginLocationMonitorThread.run(DefaultPluginJarLocationMonitor.java:177)\nCaused by: java.lang.RuntimeException: java.nio.file.AccessDeniedException: /tmp/a\n        at com.thoughtworks.go.util.ExceptionUtils.bomb(ExceptionUtils.java:37)\n        at com.thoughtworks.go.server.service.plugins.AnalyticsPluginAssetsService.cacheStaticAssets(AnalyticsPluginAssetsService.java:137)\n        at com.thoughtworks.go.server.service.plugins.AnalyticsPluginAssetsService.onPluginMetadataCreate(AnalyticsPluginAssetsService.java:87)\n        at com.thoughtworks.go.plugin.access.analytics.AnalyticsMetadataLoader.pluginLoaded(AnalyticsMetadataLoader.java:50)\n        at com.thoughtworks.go.plugin.infra.PluginLoader.lambda$doPostBundleInstallActivities$0(PluginLoader.java:113)\n        at org.apache.commons.collections4.IteratorUtils.forEach(IteratorUtils.java:1224)\n        at org.apache.commons.collections4.IterableUtils.forEach(IterableUtils.java:585)\n        at com.thoughtworks.go.plugin.infra.PluginLoader.lambda$doPostBundleInstallActivities$1(PluginLoader.java:113)\n        at org.apache.commons.collections4.IteratorUtils.forEach(IteratorUtils.java:1224)\n        at org.apache.commons.collections4.IterableUtils.forEach(IterableUtils.java:585)\n        at com.thoughtworks.go.plugin.infra.PluginLoader.doPostBundleInstallActivities(PluginLoader.java:112)\n        at com.thoughtworks.go.plugin.infra.PluginLoader.loadPlugin(PluginLoader.java:70)\n        ... 12 common frames omitted\nCaused by: java.lang.RuntimeException: java.nio.file.AccessDeniedException: /tmp/a\n        at com.thoughtworks.go.server.service.plugins.AnalyticsPluginAssetsService.safeCopyExternalAssetsToPluginAssetRoot(AnalyticsPluginAssetsService.java:159)\n        at com.thoughtworks.go.server.service.plugins.AnalyticsPluginAssetsService.cacheStaticAssets(AnalyticsPluginAssetsService.java:131)\n        ... 22 common frames omitted\nCaused by: java.nio.file.AccessDeniedException: /tmp/a\n        at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:90)\n        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)\n        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)\n        at java.base/sun.nio.fs.UnixFileSystemProvider.newDirectoryStream(UnixFileSystemProvider.java:412)\n        at java.base/java.nio.file.Files.newDirectoryStream(Files.java:474)\n        at java.base/java.nio.file.Files.list(Files.java:3769)\n        at com.thoughtworks.go.server.service.plugins.AnalyticsPluginAssetsService.safeCopyExternalAssetsToPluginAssetRoot(AnalyticsPluginAssetsService.java:149)\n        ... 23 common frames omitted", "author": "arvindsv", "createdAt": "2020-06-04T09:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDgzNw=="}], "type": "inlineReview"}, {"oid": "50ef5bca39025e763228500341958386ecf2d535", "url": "https://github.com/gocd/gocd/commit/50ef5bca39025e763228500341958386ecf2d535", "message": "#000 - Allow loading external assets into analytics iframe\n\n- Uses the same mechanism as the one used to load the plugin-server-communication JS file.", "committedDate": "2020-06-04T09:20:33Z", "type": "forcePushed"}, {"oid": "b6c92b977115665009c7e7f488c0f5ad98f5a14b", "url": "https://github.com/gocd/gocd/commit/b6c92b977115665009c7e7f488c0f5ad98f5a14b", "message": "#000 - Allow loading external assets into analytics iframe\n\n- Uses the same mechanism as the one used to load the plugin-server-communication JS file.", "committedDate": "2020-06-04T09:27:44Z", "type": "commit"}, {"oid": "b6c92b977115665009c7e7f488c0f5ad98f5a14b", "url": "https://github.com/gocd/gocd/commit/b6c92b977115665009c7e7f488c0f5ad98f5a14b", "message": "#000 - Allow loading external assets into analytics iframe\n\n- Uses the same mechanism as the one used to load the plugin-server-communication JS file.", "committedDate": "2020-06-04T09:27:44Z", "type": "forcePushed"}]}