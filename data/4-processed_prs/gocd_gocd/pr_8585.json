{"pr_number": 8585, "pr_title": "Use jobTimeout to cancel unassigned jobs", "pr_createdAt": "2020-09-23T04:11:39Z", "pr_url": "https://github.com/gocd/gocd/pull/8585", "timeline": [{"oid": "fa7f9f993b0e7b91fbcde25c037de0292c06c42a", "url": "https://github.com/gocd/gocd/commit/fa7f9f993b0e7b91fbcde25c037de0292c06c42a", "message": "Use jobTimeout to cancel unassigned jobs\n\n - Earlier only the building jobs could be cancelled post a timeout set via `jobTimeout` property.\n   Now, using the same value, unassigned jobs will be cancelled.\n\nP.S. the original feature is still in place. This is additional feature over the existing", "committedDate": "2020-09-23T07:03:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjQwMA==", "url": "https://github.com/gocd/gocd/pull/8585#discussion_r493252400", "bodyText": "Should we remove warning only if the jobScheduledMap has the identifier. Just wanted to make sure we do not clear out warnings added through jobLastActivityMap", "author": "maheshp", "createdAt": "2020-09-23T07:21:00Z", "path": "server/src/main/java/com/thoughtworks/go/server/service/ConsoleActivityMonitor.java", "diffHunk": "@@ -124,6 +139,59 @@ private long jobTerminationThreshold(JobIdentifier jobIdentifier) {\n         return goConfigService.getUnresponsiveJobTerminationThreshold(jobIdentifier);\n     }\n \n+    private interface LogMessages {\n+        String consoleMessage(String difference);\n+\n+        String hungWarningMessage(String buildLocator, String namespacedJob, String difference);\n+    }\n+\n+    private LogMessages scheduledJobMessages() {\n+        return new LogMessages() {\n+            @Override\n+            public String consoleMessage(String difference) {\n+                return format(\"Go cancelled this job as it was not assigned an agent for more than %s minute(s)\", difference);\n+            }\n+\n+            @Override\n+            public String hungWarningMessage(String buildLocator, String namespacedJob, String difference) {\n+                return format(\"Job <a href='/go/tab/build/detail/%s'>%s</a> is currently running but was not assigned an agent in the last %s minute(s). This job may be hung.\", buildLocator, namespacedJob, difference);\n+            }\n+        };\n+    }\n+\n+    private LogMessages runningJobMessages() {\n+        return new LogMessages() {\n+            @Override\n+            public String consoleMessage(String difference) {\n+                return format(\"Go cancelled this job as it has not shown any console activity for more than %s minute(s)\", difference);\n+            }\n+\n+            @Override\n+            public String hungWarningMessage(String buildLocator, String namespacedJob, String difference) {\n+                return format(\"Job <a href='/go/tab/build/detail/%s'>%s</a> is currently running but has not shown any console activity in the last %s minute(s). This job may be hung.\", buildLocator, namespacedJob, difference);\n+            }\n+        };\n+    }\n+\n+    static final class ScheduledJobListener implements JobStatusListener {\n+        private final ConsoleActivityMonitor consoleActivityMonitor;\n+\n+        private ScheduledJobListener(ConsoleActivityMonitor consoleActivityMonitor) {\n+            this.consoleActivityMonitor = consoleActivityMonitor;\n+        }\n+\n+        @Override\n+        public void jobStatusChanged(JobInstance job) {\n+            JobIdentifier identifier = job.getIdentifier();\n+            if (job.getState().isScheduled()) {\n+                consoleActivityMonitor.jobScheduledMap.putIfAbsent(identifier, consoleActivityMonitor.timeProvider.currentTimeMillis());\n+            } else if (job.getState().isActiveOnAgent() || job.isCompleted()) {\n+                consoleActivityMonitor.jobScheduledMap.remove(identifier);\n+                consoleActivityMonitor.removeHungJobWarning(identifier);", "originalCommit": "fa7f9f993b0e7b91fbcde25c037de0292c06c42a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMxMDgyNQ==", "url": "https://github.com/gocd/gocd/pull/8585#discussion_r493310825", "bodyText": "A job will be first added to jobScheduledMap when it gets scheduled. As soon as it gets assigned it will be removed from the map. As it starts building it will be added to jobLastActivityMap.\nHence, the same job identifier cannot be present in both the maps at the same time.\nTherefore, I think this is a safe operation.", "author": "kritika-singh3", "createdAt": "2020-09-23T08:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2NzU5Ng==", "url": "https://github.com/gocd/gocd/pull/8585#discussion_r493367596", "bodyText": "I get your point about how the jobs are added to the map.\nSince the ScheduledJobListener#jobStatusChanged would be called for jobs which are part of jobLastActivityMap, was wondering if there will be cases where we end up clearing warnings for jobs which are in building state in this listener.", "author": "maheshp", "createdAt": "2020-09-23T09:29:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjQwMA=="}], "type": "inlineReview"}, {"oid": "c073c7338046a145616e138580c6ba6b6555f8c5", "url": "https://github.com/gocd/gocd/commit/c073c7338046a145616e138580c6ba6b6555f8c5", "message": "Use jobTimeout to cancel unassigned jobs\n\n - Earlier only the building jobs could be cancelled post a timeout set via `jobTimeout` property.\n   Now, using the same value, unassigned jobs will be cancelled.\n\nP.S. the original feature is still in place. This is additional feature over the existing", "committedDate": "2020-09-23T09:51:38Z", "type": "commit"}, {"oid": "c073c7338046a145616e138580c6ba6b6555f8c5", "url": "https://github.com/gocd/gocd/commit/c073c7338046a145616e138580c6ba6b6555f8c5", "message": "Use jobTimeout to cancel unassigned jobs\n\n - Earlier only the building jobs could be cancelled post a timeout set via `jobTimeout` property.\n   Now, using the same value, unassigned jobs will be cancelled.\n\nP.S. the original feature is still in place. This is additional feature over the existing", "committedDate": "2020-09-23T09:51:38Z", "type": "forcePushed"}]}