{"pr_number": 7804, "pr_title": "Fix autocomplete text field styles to render the suggestions after help text", "pr_createdAt": "2020-03-03T09:12:00Z", "pr_url": "https://github.com/gocd/gocd/pull/7804", "timeline": [{"oid": "808c7ec852e09a085526c4ad625a5074e3dfd3b1", "url": "https://github.com/gocd/gocd/commit/808c7ec852e09a085526c4ad625a5074e3dfd3b1", "message": "Fix autocomplete text field styles to render the suggestions after help text", "committedDate": "2020-03-03T09:10:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA==", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391401744", "bodyText": "Since id is intended to be unique per page (the browser won't fail, but getElementById() will always return the first), should we use a different attr?", "author": "marques-work", "createdAt": "2020-03-12T04:58:38Z", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/forms/autocomplete.tsx", "diffHunk": "@@ -135,6 +133,14 @@ export class AutocompleteField extends RestyleViewComponent<Styles, AutoCompAttr\n       attrs.css = vnode.attrs.fieldCss;\n     }\n \n-    return <TextField {...attrs} />;\n+    return <TextFieldForAutoComplete {...attrs} />;\n+  }\n+}\n+\n+export class TextFieldForAutoComplete extends TextField {\n+  renderInputField(vnode: m.Vnode<TextFieldAttrs>) {\n+    return <div id=\"autocomplete-input-container\">", "originalCommit": "808c7ec852e09a085526c4ad625a5074e3dfd3b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjM2Ng==", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391406366", "bodyText": "@marques-work - Hmm, not against it.\nLet's assume, someone consumes this component on an SPA, and reuses this ID, which will cause auto-suggestions not to work. But this failure will be constant, meaning, it will always fail (kind of a static error which does not depend on the data). Shouldn't this be a good enough hint for the consumer to fix the conflicting IDs?\nAlso, if we're using a different attribute, we can also change the value and append a random-uuid-string at the end of it.", "author": "GaneshSPatil", "createdAt": "2020-03-12T05:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4OTIzOQ==", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391489239", "bodyText": "Shouldn't this be a good enough hint for the consumer to fix the conflicting IDs?\n\nThis is very much not my place to say, but I would be very confused if I added two autocomplete components in a page and this happened (or it started showing autocompletes in a component off screen). I think it is not recommended to use an id in a component, isn't it?\nPS: Feel free to ignore me. This is just a drive-by comment -- and I'm pretty sure I haven't understood the context of what this is).", "author": "arvindsv", "createdAt": "2020-03-12T09:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwMjU1OA==", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391502558", "bodyText": "@arvindsv  @marques-work - You're right. This possibly can cause problems if the component is reused multiple times on the SPA.\nI will send a PR to fix this, to use autocomplete-id attribute which has a randomly generated uuid value.", "author": "GaneshSPatil", "createdAt": "2020-03-12T09:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA=="}], "type": "inlineReview"}]}