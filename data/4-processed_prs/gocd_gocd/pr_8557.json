{"pr_number": 8557, "pr_title": "Gradle 6 deprecations", "pr_createdAt": "2020-09-15T09:14:41Z", "pr_url": "https://github.com/gocd/gocd/pull/8557", "timeline": [{"oid": "c7dddc6eff5a4997ebb00b30918abf68b5979f98", "url": "https://github.com/gocd/gocd/commit/c7dddc6eff5a4997ebb00b30918abf68b5979f98", "message": "Remove guard on VerifyJarTask that prevents building in local dev without setting an env var.\n\nBecause, why???", "committedDate": "2020-09-15T09:30:26Z", "type": "forcePushed"}, {"oid": "fe87c322e901b00da9abbafca3fba044a3f7e136", "url": "https://github.com/gocd/gocd/commit/fe87c322e901b00da9abbafca3fba044a3f7e136", "message": "Remove guard on VerifyJarTask that prevents building in local dev without setting an env var.\n\nBecause, why???", "committedDate": "2020-09-16T11:26:11Z", "type": "forcePushed"}, {"oid": "9d9b5588a761b6898145de7dd79e62fa2b68ff06", "url": "https://github.com/gocd/gocd/commit/9d9b5588a761b6898145de7dd79e62fa2b68ff06", "message": "wip", "committedDate": "2020-09-23T11:39:03Z", "type": "forcePushed"}, {"oid": "35e83b9d77376365d88c50a48a15035603a43529", "url": "https://github.com/gocd/gocd/commit/35e83b9d77376365d88c50a48a15035603a43529", "message": "Working! (?)", "committedDate": "2020-10-01T11:24:53Z", "type": "forcePushed"}, {"oid": "743babf458061a811c349043f13e1f947666b40b", "url": "https://github.com/gocd/gocd/commit/743babf458061a811c349043f13e1f947666b40b", "message": "Remove `exportForPackaging` configuration in favor of built-in `api` configuration\n\n`exportForPackaging` was functionally the same as `api` and only meant to communicate intent.\nHowever, it's better to just use the built-in configuration as folks will likely be familiar\nwith how `api` works anyway.\n\nKeep it simple.", "committedDate": "2020-10-02T19:03:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExMTk5NA==", "url": "https://github.com/gocd/gocd/pull/8557#discussion_r500111994", "bodyText": "This bit is partly redundant since compileClasspath already extendsFrom compileOnly.\nAdding the compileClasspath to test{Compile,Runtime}Classpath is achieved on line 296:\n    // it's rather convenient to allow compile and runtime classpaths for tests inherit from the main compile classpath\n    testImplementation.extendsFrom compileClasspath", "author": "marques-work", "createdAt": "2020-10-06T08:51:55Z", "path": "build.gradle", "diffHunk": "@@ -423,42 +483,11 @@ subprojects {\n       fatJarConfig\n \n       testOutput {\n-        extendsFrom testRuntime\n+        extendsFrom testRuntimeClasspath\n         transitive = true\n       }\n     }\n \n-    sourceSets {\n-      main {\n-        java {\n-          compileClasspath += configurations.compileOnly\n-        }\n-      }\n-      test {\n-        java {\n-          compileClasspath += configurations.compileOnly\n-          runtimeClasspath += configurations.compileOnly\n-        }\n-      }\n-    }", "originalCommit": "743babf458061a811c349043f13e1f947666b40b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNTY2OA==", "url": "https://github.com/gocd/gocd/pull/8557#discussion_r500115668", "bodyText": "None of these were used (anymore?).", "author": "marques-work", "createdAt": "2020-10-06T08:57:28Z", "path": "server/build.gradle", "diffHunk": "@@ -88,14 +88,7 @@ sourceSets {\n configurations {\n   jrubyGems\n \n-  sharedTestCompile.extendsFrom testCompile\n-  sharedTestRuntime.extendsFrom testRuntime\n-\n-  fastUnitTestCompile.extendsFrom sharedTestCompile\n-  fastUnitTestRuntime.extendsFrom sharedTestRuntime", "originalCommit": "743babf458061a811c349043f13e1f947666b40b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNzYzNw==", "url": "https://github.com/gocd/gocd/pull/8557#discussion_r500117637", "bodyText": "All of this exclusion logic is handled during packaging in the war task. See the lines pertaining to configurations \"arithmetic\" when building the classpath.", "author": "marques-work", "createdAt": "2020-10-06T09:00:36Z", "path": "server/build.gradle", "diffHunk": "@@ -110,19 +103,15 @@ configurations {\n   }\n \n   sharedTestOutput {\n-    extendsFrom testRuntime\n+    extendsFrom testRuntimeClasspath\n     transitive = true\n   }\n \n-  compile.exclude(group: 'org.springframework', module: 'spring-support')\n-  runtime.exclude(group: 'org.springframework', module: 'spring-support')\n-\n-  // this dependency is a \"provided\" dependency\n-  compile.exclude(group: 'ch.qos.logback', module: 'logback-classic')\n-  runtime.exclude(group: 'ch.qos.logback', module: 'logback-classic')\n-  apiBase.exclude(group: 'ch.qos.logback', module: 'logback-classic')\n-  api.exclude(group: 'ch.qos.logback', module: 'logback-classic')\n-  spark.exclude(group: 'ch.qos.logback', module: 'logback-classic')", "originalCommit": "743babf458061a811c349043f13e1f947666b40b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExODY2Mw==", "url": "https://github.com/gocd/gocd/pull/8557#discussion_r500118663", "bodyText": "In other words, Set<String> is better at deduplicating paths to jars than Set<File>.", "author": "marques-work", "createdAt": "2020-10-06T09:02:20Z", "path": "server/build.gradle", "diffHunk": "@@ -725,23 +723,40 @@ task war(type: Jar) {\n   dependsOn rootProject.generateLicenseReport\n   dependsOn configureWar\n   dependsOn ':server:jar', ':server:compileAssets'\n-  dependsOn project.configurations.compile\n-  dependsOn project.configurations.api\n+  dependsOn project.configurations.compileClasspath\n+  dependsOn project.configurations.allApis\n   dependsOn project.configurations.spark\n   finalizedBy 'verifyWar'\n   archiveBaseName = 'cruise'\n-  extension 'war'\n+  archiveExtension = 'war'\n+\n+  // Using a Set<String> is more reliable than Set<File> because File.equals() may be affected by other internal fields\n+  // aside from `path` that aren't important to us; thus, Set<File> may allow duplicate paths and Set<String> will not.\n+  Set<String> classpath = (", "originalCommit": "743babf458061a811c349043f13e1f947666b40b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46fd97ac1e88682b9461d8f467fb6cec452e988e", "url": "https://github.com/gocd/gocd/commit/46fd97ac1e88682b9461d8f467fb6cec452e988e", "message": "Clean up LicenseReport.groovy\n\n  - Update gradle license plugin\n  - Better normalization\n  - Move certain license exception strings into existing license keys as alternate variants\n\nRemove buildSrc deprecations\n\n  - Upgrading the download task removed a lot of deprecations\n  - Fix annotations around `workingDir` for yarn tasks", "committedDate": "2020-10-13T04:37:20Z", "type": "commit"}, {"oid": "989a8e2a6e85dc6e2180e9cc200fb731a5ac2aca", "url": "https://github.com/gocd/gocd/commit/989a8e2a6e85dc6e2180e9cc200fb731a5ac2aca", "message": "Remove commons-digester and its transitive deps in favor of JAXB\n\n  - Add CDDL + GPL dual license for jaxb and istack jars", "committedDate": "2020-10-13T04:37:20Z", "type": "commit"}, {"oid": "91c23c0efdd11a75967a9d29aefd906edc07107b", "url": "https://github.com/gocd/gocd/commit/91c23c0efdd11a75967a9d29aefd906edc07107b", "message": "Massive refactor to remove (most) deprecations that will break in the next Gradle major release (7.0)\n\nNearly all of the changes are around dependency configurations. Gradle 7.0 will remove support for:\n\n  - `compile` => replace with `implementation` or `api`\n  - `runtime` => replace with `runtimeOnly`\n  - `compileOnly` for resolution (but not consumption) => replace with `compileClasspath`\n\nIn most cases, the above simple replacements work. But there are a number of cases that were problematic\nthat required more substantial refactoring in order to work with the different nuances of the replaced\nconfigurations.", "committedDate": "2020-10-13T04:37:21Z", "type": "commit"}, {"oid": "d70f05b9b47f4a5c73b4ad39e96c1ae9c242efa8", "url": "https://github.com/gocd/gocd/commit/d70f05b9b47f4a5c73b4ad39e96c1ae9c242efa8", "message": "Remove `exportForPackaging` configuration in favor of built-in `api` configuration\n\n`exportForPackaging` was functionally the same as `api` and only meant to communicate intent.\nHowever, it's better to just use the built-in configuration as folks will likely be familiar\nwith how `api` works anyway.\n\nKeep it simple.", "committedDate": "2020-10-13T04:37:21Z", "type": "commit"}, {"oid": "bbea8b3d6cd9db5b018047ed5027f95e600937f7", "url": "https://github.com/gocd/gocd/commit/bbea8b3d6cd9db5b018047ed5027f95e600937f7", "message": "Tiny whitespace fix", "committedDate": "2020-10-13T04:37:21Z", "type": "commit"}, {"oid": "7434475dec01b8bebf7d8334975f2fec2f490021", "url": "https://github.com/gocd/gocd/commit/7434475dec01b8bebf7d8334975f2fec2f490021", "message": "providedAtPackageTime does not need to be resolvable, only consumable", "committedDate": "2020-10-13T04:37:21Z", "type": "commit"}, {"oid": "7434475dec01b8bebf7d8334975f2fec2f490021", "url": "https://github.com/gocd/gocd/commit/7434475dec01b8bebf7d8334975f2fec2f490021", "message": "providedAtPackageTime does not need to be resolvable, only consumable", "committedDate": "2020-10-13T04:37:21Z", "type": "forcePushed"}]}