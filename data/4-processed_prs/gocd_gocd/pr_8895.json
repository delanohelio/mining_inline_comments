{"pr_number": 8895, "pr_title": "Prevent gson serialization from serializing cipher-related instances", "pr_createdAt": "2020-12-16T09:01:33Z", "pr_url": "https://github.com/gocd/gocd/pull/8895", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyNjc5Mw==", "url": "https://github.com/gocd/gocd/pull/8895#discussion_r544126793", "bodyText": "Just IDEA suggesting terser syntax by converting to expression-lambda.", "author": "marques-work", "createdAt": "2020-12-16T09:04:46Z", "path": "common/src/main/java/com/thoughtworks/go/remote/Serialization.java", "diffHunk": "@@ -169,10 +194,9 @@ private JsonArray configurations(ArtifactStore store) {\n         @Override\n         public ArtifactStore deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n             Configuration configuration = new Configuration();\n-            json.getAsJsonObject().get(\"configuration\").getAsJsonArray().forEach(el -> {\n-                configuration.add(new ConfigurationProperty(new ConfigurationKey(el.getAsJsonObject().get(\"key\").getAsString()),\n-                        new ConfigurationValue(el.getAsJsonObject().get(\"value\").getAsString())));\n-            });\n+            json.getAsJsonObject().get(\"configuration\").getAsJsonArray().forEach(el ->\n+                    configuration.add(new ConfigurationProperty(new ConfigurationKey(el.getAsJsonObject().get(\"key\").getAsString()),\n+                            new ConfigurationValue(el.getAsJsonObject().get(\"value\").getAsString()))));", "originalCommit": "719282569014628f13dfc5249656c7ba4ea2e0d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "url": "https://github.com/gocd/gocd/commit/ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "message": "Prevent gson serialization from serializing cipher-related instances", "committedDate": "2020-12-16T09:05:31Z", "type": "commit"}, {"oid": "ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "url": "https://github.com/gocd/gocd/commit/ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "message": "Prevent gson serialization from serializing cipher-related instances", "committedDate": "2020-12-16T09:05:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODgwNQ==", "url": "https://github.com/gocd/gocd/pull/8895#discussion_r544128805", "bodyText": "What happens when we try to serialize ArtifactStore, the store needs to be serialized but deep down it does have a cipher.", "author": "maheshp", "createdAt": "2020-12-16T09:07:58Z", "path": "common/src/test/java/com/thoughtworks/go/remote/SerializationTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.remote;\n+\n+import com.thoughtworks.go.security.*;\n+import com.thoughtworks.go.util.SystemEnvironment;\n+import lombok.SneakyThrows;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+\n+import static java.lang.String.format;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.mock;\n+\n+@SuppressWarnings(\"deprecation\")\n+class SerializationTest {\n+    @Test\n+    void rejectsSerializationOfGoCipher() {\n+        final IllegalArgumentException e = assertThrows(IllegalArgumentException.class, () ->\n+                Serialization.instance().toJson(new GoCipher(mock(Encrypter.class))));", "originalCommit": "ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEzNTAxMw==", "url": "https://github.com/gocd/gocd/pull/8895#discussion_r544135013", "bodyText": "It depends on the ArtifactStore type adapter. If it attempts to do a toJson() on it rather than computing a set of decrypted secrets, it will blow up. I'll take a look.", "author": "marques-work", "createdAt": "2020-12-16T09:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE0MTI1MQ==", "url": "https://github.com/gocd/gocd/pull/8895#discussion_r544141251", "bodyText": "It looks like it would work, unless I'm missing something.\nFor serialization, we never descend that far into configuration properties. We do this instead:\nhttps://github.com/marques-work/gocd/blob/ff49b4ff9ce81f2379e2382ad8db362ab7e331bc/common/src/main/java/com/thoughtworks/go/remote/Serialization.java#L184-L190\nAnd for deserialization, we do the reverse. The Gson instance never encounters a GoCipher instance:\nhttps://github.com/marques-work/gocd/blob/ff49b4ff9ce81f2379e2382ad8db362ab7e331bc/common/src/main/java/com/thoughtworks/go/remote/Serialization.java#L197-L199\nSo we shouldn't blow up here. We can add a test though.", "author": "marques-work", "createdAt": "2020-12-16T09:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODgwNQ=="}], "type": "inlineReview"}, {"oid": "3a86389692d1f5fdb8be5c013ac02ccfaee58fad", "url": "https://github.com/gocd/gocd/commit/3a86389692d1f5fdb8be5c013ac02ccfaee58fad", "message": "Add coverage to assert GoCipher is not de/serialized for ArtifactStore and ConfigurationProperty\n\nAlso embeds a dummy cipher when deserializing ConfigurationProperty on the agent so that the agent\nnever creates a new key on the filesystem and throws an error if any code actually tries to use\nthe dummy cipher.", "committedDate": "2020-12-16T10:57:03Z", "type": "commit"}]}