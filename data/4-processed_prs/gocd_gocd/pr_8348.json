{"pr_number": 8348, "pr_title": "Added few internal materials API", "pr_createdAt": "2020-07-17T05:35:28Z", "pr_url": "https://github.com/gocd/gocd/pull/8348", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyODA2MA==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r456228060", "bodyText": "If this can be improved, please let me know.", "author": "kritika-singh3", "createdAt": "2020-07-17T05:36:19Z", "path": "server/src/main/resources/com/thoughtworks/go/server/dao/maps/Material.xml", "diffHunk": "@@ -0,0 +1,167 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 ThoughtWorks, Inc.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n+<mapper namespace=\"Material\">\n+  <resultMap id=\"hg-material-map\" type=\"com.thoughtworks.go.domain.materials.mercurial.HgMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"url\" property=\"url\"/>\n+    <result column=\"username\" property=\"username\"/>\n+    <result column=\"branch\" property=\"branch\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"svn-material-map\" type=\"com.thoughtworks.go.domain.materials.svn.SvnMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"url\" property=\"url\"/>\n+    <result column=\"checkExternals\" property=\"checkExternals\"/>\n+    <result column=\"username\" property=\"username\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"git-material-map\" type=\"com.thoughtworks.go.domain.materials.git.GitMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"url\" property=\"url\"/>\n+    <result column=\"username\" property=\"username\"/>\n+    <result column=\"branch\" property=\"branch\"/>\n+    <result column=\"submoduleFolder\" property=\"submoduleFolder\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"p4-material-map\" type=\"com.thoughtworks.go.domain.materials.perforce.P4MaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"username\" property=\"username\"/>\n+    <result column=\"url\" property=\"url\"/>\n+    <result column=\"view\" property=\"view\"/>\n+    <result column=\"useTickets\" property=\"useTickets\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"dependency-material-map\"\n+             type=\"com.thoughtworks.go.domain.materials.dependency.DependencyMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"pipelineName\" property=\"pipelineName\"/>\n+    <result column=\"stageName\" property=\"stageName\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"tfs-material-map\" type=\"com.thoughtworks.go.domain.materials.tfs.TfsMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"url\" property=\"url\"/>\n+    <result column=\"username\" property=\"username\"/>\n+    <result column=\"projectPath\" property=\"projectPath\"/>\n+    <result column=\"domain\" property=\"domain\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"testing-material-map\" type=\"com.thoughtworks.go.domain.materials.TestingMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"url\" property=\"url\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"package-material-map\"\n+             type=\"com.thoughtworks.go.domain.materials.packagematerial.PackageMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"configuration\" property=\"configuration\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"plugin-material-map\" type=\"com.thoughtworks.go.domain.materials.scm.PluggableSCMMaterialInstance\">\n+    <result column=\"flyweightName\" property=\"flyweightName\"/>\n+    <result column=\"fingerprint\" property=\"fingerprint\"/>\n+    <result column=\"additionaldata\" property=\"additionalData\"/>\n+    <result column=\"configuration\" property=\"configuration\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"modification-map\" type=\"com.thoughtworks.go.domain.materials.Modification\">\n+    <id column=\"mod_id\"/>\n+    <result column=\"mod_revision\" property=\"revision\"/>\n+    <result column=\"mod_comment\" property=\"comment\"/>\n+    <result column=\"mod_emailaddress\" property=\"emailAddress\"/>\n+    <result column=\"mod_modifiedtime\" property=\"modifiedTime\" javaType=\"date\" jdbcType=\"TIMESTAMP\"/>\n+    <result column=\"mod_username\" property=\"userName\"/>\n+    <result column=\"mod_pipelinelabel\" property=\"pipelineLabel\"/>\n+    <result column=\"mod_pipelineid\" property=\"pipelineId\" jdbcType=\"BIGINT\"/>\n+    <result column=\"mod_additionaldata\" property=\"additionalData\"/>\n+    <collection property=\"materialInstance\" resultMap=\"material-instance-map\"/>\n+  </resultMap>\n+\n+  <resultMap id=\"material-instance-map\" type=\"com.thoughtworks.go.domain.MaterialInstance\">\n+    <id column=\"id\"/>\n+    <discriminator javaType=\"java.lang.String\" column=\"type\">\n+      <case value=\"HgMaterial\" resultMap=\"hg-material-map\"/>\n+      <case value=\"SvnMaterial\" resultMap=\"svn-material-map\"/>\n+      <case value=\"GitMaterial\" resultMap=\"git-material-map\"/>\n+      <case value=\"P4Material\" resultMap=\"p4-material-map\"/>\n+      <case value=\"DependencyMaterial\" resultMap=\"dependency-material-map\"/>\n+      <case value=\"TfsMaterial\" resultMap=\"tfs-material-map\"/>\n+      <case value=\"TestingMaterial\" resultMap=\"testing-material-map\"/>\n+      <case value=\"PackageMaterialInstance\" resultMap=\"package-material-map\"/>\n+      <case value=\"PluggableSCMMaterialInstance\" resultMap=\"plugin-material-map\"/>\n+    </discriminator>\n+  </resultMap>\n+\n+  <select id=\"materialWithModifications\" resultMap=\"modification-map\">\n+    SELECT materials.id                AS id\n+         , materials.type\n+         , materials.url\n+         , materials.username\n+         , materials.checkexternals\n+         , materials.pipelinename\n+         , materials.stagename\n+         , materials.view\n+         , materials.branch\n+         , materials.submodulefolder\n+         , materials.usetickets\n+         , materials.fingerprint\n+         , materials.flyweightName\n+         , materials.projectpath\n+         , materials.domain\n+         , materials.configuration\n+         , materials.additionaldata\n+\n+         , modification.id             AS mod_id\n+         , modification.username       AS mod_username\n+         , modification.comment        AS mod_comment\n+         , modification.emailaddress   AS mod_emailaddress\n+         , modification.revision       AS mod_revision\n+         , modification.modifiedtime   AS mod_modifiedtime\n+         , modification.fromexternal   AS mod_fromexternal\n+         , modification.pipelinelabel  AS mod_pipelinelabel\n+         , modification.pipelineid     AS mod_pipelineid\n+         , modification.additionaldata AS mod_additionaldata\n+    FROM materials\n+           INNER JOIN\n+         (\n+           SELECT *\n+           FROM (\n+                  SELECT ROW_NUMBER() OVER (PARTITION BY materialid ORDER BY id DESC) AS row_num, *\n+                  FROM modifications\n+                  ORDER BY materialid, row_num\n+                ) mod\n+           WHERE mod.row_num &lt;= #{count}\n+         ) modification ON modification.materialid = materials.id\n+  </select>", "originalCommit": "c8e629234e4296a7f75c87673dd10fbe4ad79f79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e5d05feb6706d3167f602492f06e2b4ac73be4ae", "url": "https://github.com/gocd/gocd/commit/e5d05feb6706d3167f602492f06e2b4ac73be4ae", "message": "Added representers and tests", "committedDate": "2020-07-20T07:58:10Z", "type": "forcePushed"}, {"oid": "72ff37c6d789ddcc8a46fc94e49c351153adfc2b", "url": "https://github.com/gocd/gocd/commit/72ff37c6d789ddcc8a46fc94e49c351153adfc2b", "message": "Added representers and tests", "committedDate": "2020-07-20T09:40:15Z", "type": "forcePushed"}, {"oid": "115041b0fe2dd2b39ed9b4b87c1d9fac74ca058a", "url": "https://github.com/gocd/gocd/commit/115041b0fe2dd2b39ed9b4b87c1d9fac74ca058a", "message": "Add auto_update to Package and SCM representers", "committedDate": "2020-07-22T06:36:39Z", "type": "forcePushed"}, {"oid": "281b23f63aeb7f3dc0722cde711ee82bd6d96869", "url": "https://github.com/gocd/gocd/commit/281b23f63aeb7f3dc0722cde711ee82bd6d96869", "message": "Add auto_update to Package and SCM representers", "committedDate": "2020-07-29T10:51:42Z", "type": "forcePushed"}, {"oid": "26a6c6a9920b9da5255083b6feca79aae4aeea5f", "url": "https://github.com/gocd/gocd/commit/26a6c6a9920b9da5255083b6feca79aae4aeea5f", "message": "In a bid to move away from ibatis - migrated the sql to use hibernate to fetch the details\n - modified the query\n - moved the test - they passed without any changes required", "committedDate": "2020-07-30T06:08:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3ODM0Ng==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463278346", "bodyText": "Probably rename to getLatestModificationForEachMaterial() ?", "author": "maheshp", "createdAt": "2020-07-30T21:21:27Z", "path": "server/src/main/java/com/thoughtworks/go/server/persistence/MaterialRepository.java", "diffHunk": "@@ -1025,4 +1025,19 @@ public File folderFor(Material material) {\n         MaterialInstance materialInstance = this.findOrCreateFrom(material);\n         return new File(new File(\"pipelines\", \"flyweight\"), materialInstance.getFlyweightName());\n     }\n+\n+    public List<Modification> getModificationWithMaterial() {", "originalCommit": "26a6c6a9920b9da5255083b6feca79aae4aeea5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3OTI2MQ==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463279261", "bodyText": "We should run this query on larger database and check the performance, also run EXPLAIN ANALYZE on PostgreSQL", "author": "maheshp", "createdAt": "2020-07-30T21:23:26Z", "path": "server/src/main/java/com/thoughtworks/go/server/persistence/MaterialRepository.java", "diffHunk": "@@ -1025,4 +1025,19 @@ public File folderFor(Material material) {\n         MaterialInstance materialInstance = this.findOrCreateFrom(material);\n         return new File(new File(\"pipelines\", \"flyweight\"), materialInstance.getFlyweightName());\n     }\n+\n+    public List<Modification> getModificationWithMaterial() {\n+        String queryString = \"SELECT mods.* \" +\n+                \"FROM (\" +\n+                \"   SELECT MAX(id) OVER (PARTITION BY materialid) as max_id, * \" +\n+                \"   FROM modifications \" +\n+                \") mods \" +\n+                \"JOIN materials m ON mods.materialid=m.id \" +\n+                \"WHERE mods.id=mods.max_id;\";", "originalCommit": "26a6c6a9920b9da5255083b6feca79aae4aeea5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQzNDA5Ng==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463434096", "bodyText": "H2: Took the latest backup of build.gocd and ran the query currently used in MaterialRepository\nNo. of materials: 1411\nNo. of modifications: 174123\nQuery metrics: 1145 rows, 1539 ms\nFor postgres - had a backup with :\nNo. of materials: 2696\nNo. of modifications: 1298467\nRan EXPLAIN ANALYZE:\nMerge Join  (cost=0.71..186198.21 rows=6490 width=1118) (actual time=23.753..2691.740 rows=2573 loops=1)\n   Merge Cond: (m.id = mods.materialid)\n   ->  Index Only Scan using newmaterials_pkey on materials m  (cost=0.28..183.66 rows=2696 width=8) (actual time=0.978..2.985 rows=2696 loops=1)\n         Heap Fetches: 2696\n   ->  Materialize  (cost=0.43..185926.90 rows=6490 width=1118) (actual time=22.769..2686.935 rows=2574 loops=1)\n         ->  Subquery Scan on mods  (cost=0.43..185910.67 rows=6490 width=1118) (actual time=22.761..2686.148 rows=2574 loops=1)\n               Filter: (mods.id = mods.max_id)\n               Rows Removed by Filter: 1295893\n               ->  WindowAgg  (cost=0.43..169684.81 rows=1298069 width=1118) (actual time=19.412..2600.758 rows=1298467 loops=1)\n                     ->  Index Scan using idx_mod_new_material_id on modifications  (cost=0.43..150213.77 rows=1298069 width=1110) (actual time=0.062..1377.801 rows=1298467 loops=1)\n Planning time: 6.731 ms\n Execution time: 2692.038 ms\n(12 rows)", "author": "kritika-singh3", "createdAt": "2020-07-31T06:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3OTI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc0NjQzNQ==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463746435", "bodyText": "We will have to look at improving this query.", "author": "maheshp", "createdAt": "2020-07-31T17:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3OTI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3OTc3Nw==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463279777", "bodyText": "Rename method as earlier comment?", "author": "maheshp", "createdAt": "2020-07-30T21:24:30Z", "path": "server/src/main/java/com/thoughtworks/go/server/service/MaterialService.java", "diffHunk": "@@ -160,4 +160,16 @@ private void resolveSecretParams(Material material) {\n     Class<? extends Material> getMaterialClass(Material material) {\n         return material.getClass();\n     }\n+\n+    public Map<String, Modification> getModificationWithMaterial() {", "originalCommit": "26a6c6a9920b9da5255083b6feca79aae4aeea5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4MTk1OQ==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463281959", "bodyText": "Why do we need to create a new Modification object and set a null MaterialInstance?", "author": "maheshp", "createdAt": "2020-07-30T21:29:08Z", "path": "server/src/main/java/com/thoughtworks/go/server/service/MaterialService.java", "diffHunk": "@@ -160,4 +160,16 @@ private void resolveSecretParams(Material material) {\n     Class<? extends Material> getMaterialClass(Material material) {\n         return material.getClass();\n     }\n+\n+    public Map<String, Modification> getModificationWithMaterial() {\n+        List<Modification> modifications = materialRepository.getModificationWithMaterial();\n+        Map<String, Modification> materialAndModifications = new HashMap<>();\n+        modifications.forEach((mod) -> {\n+            String fingerprint = mod.getMaterialInstance().getFingerprint();\n+            Modification modification = new Modification(mod);\n+            modification.setMaterialInstance(null);", "originalCommit": "26a6c6a9920b9da5255083b6feca79aae4aeea5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5NTA4Mw==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463395083", "bodyText": "There was no use of the material instance information so I set it to null.", "author": "kritika-singh3", "createdAt": "2020-07-31T04:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4MTk1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc0NjIzMw==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463746233", "bodyText": "I would consider using streams and just convert the list to hash, rather than building a new modification object.", "author": "maheshp", "createdAt": "2020-07-31T17:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4MTk1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NTUyOA==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r463285528", "bodyText": "Since we testing the behavior of fetching the latest modification, our setup should ensure that we have more than 1 modification for a material.", "author": "maheshp", "createdAt": "2020-07-30T21:36:53Z", "path": "server/src/test-integration/java/com/thoughtworks/go/server/persistence/MaterialRepositoryIntegrationTest.java", "diffHunk": "@@ -1316,6 +1320,162 @@ public Object doInTransaction(TransactionStatus status) {\n         assertThat(repo.getTotalModificationsFor(materialInstance), is(new Long(count + 1)));\n     }\n \n+    @Test\n+    public void shouldFetchModificationsWithMaterial() {\n+        MaterialRevisions materialRevisions = new MaterialRevisions();\n+        SvnMaterial material = MaterialsMother.svnMaterial(\"http://username:password@localhost\");\n+        List<Modification> modificationList = getModifications(1);", "originalCommit": "26a6c6a9920b9da5255083b6feca79aae4aeea5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d648bf42cb17ebe997a35602f0eb655b239b1a8a", "url": "https://github.com/gocd/gocd/commit/d648bf42cb17ebe997a35602f0eb655b239b1a8a", "message": "Changes:\n - renamed the methods in service and repository\n - updated the tests", "committedDate": "2020-07-31T04:14:46Z", "type": "forcePushed"}, {"oid": "653913966756d1f8b73fb93d8d2d925dda82de5f", "url": "https://github.com/gocd/gocd/commit/653913966756d1f8b73fb93d8d2d925dda82de5f", "message": "Changes:\n - renamed the methods in service and repository\n - updated the tests\n - used stream() to convert list to hash in material service", "committedDate": "2020-08-04T03:19:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NDI0MQ==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r465174241", "bodyText": "@kritika-singh3 I am just wondering if we need to serialize all the attributes for a material. Since this API is used only on the Materials SPA should we consider serializing only the required attributes.", "author": "maheshp", "createdAt": "2020-08-04T16:23:45Z", "path": "api/api-internal-materials-v1/src/main/java/com/thoughtworks/go/apiv1/internalmaterials/representers/materials/ScmMaterialRepresenter.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.thoughtworks.go.apiv1.internalmaterials.representers.materials;\n+\n+import com.thoughtworks.go.api.base.OutputWriter;\n+import com.thoughtworks.go.config.materials.ScmMaterialConfig;\n+import com.thoughtworks.go.config.materials.perforce.P4MaterialConfig;\n+\n+import java.util.function.Consumer;\n+\n+public abstract class ScmMaterialRepresenter<T extends ScmMaterialConfig> implements MaterialRepresenter<T> {\n+    @Override\n+    public Consumer<OutputWriter> toJSON(T scmMaterialConfig) {\n+        return jsonWriter -> {\n+            if (!(scmMaterialConfig instanceof P4MaterialConfig)) {\n+                jsonWriter.add(\"url\", scmMaterialConfig.getUrl());\n+            }\n+            jsonWriter.add(\"destination\", scmMaterialConfig.getFolder());\n+\n+            if (scmMaterialConfig.filter().isEmpty()) {\n+                jsonWriter.renderNull(\"filter\");\n+            } else {\n+                jsonWriter.addChild(\"filter\", FilterRepresenter.toJSON(scmMaterialConfig.filter()));\n+            }\n+            jsonWriter.add(\"invert_filter\", scmMaterialConfig.isInvertFilter());", "originalCommit": "653913966756d1f8b73fb93d8d2d925dda82de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4OTc3MQ==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r465189771", "bodyText": "Do we need these changes now?", "author": "maheshp", "createdAt": "2020-08-04T16:49:10Z", "path": "domain/src/main/java/com/thoughtworks/go/domain/materials/Modification.java", "diffHunk": "@@ -413,4 +413,9 @@ public static Revision oldestRevision(Modifications modifications) {\n     public String getAdditionalData() {\n         return additionalData;\n     }\n+\n+    // used in ibatis\n+    public void setPipelineId(Long pipelineId) {", "originalCommit": "653913966756d1f8b73fb93d8d2d925dda82de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4OTgxMQ==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r465189811", "bodyText": "Do we need these changes now?", "author": "maheshp", "createdAt": "2020-08-04T16:49:14Z", "path": "domain/src/main/java/com/thoughtworks/go/domain/MaterialInstance.java", "diffHunk": "@@ -151,4 +151,20 @@ public String getUrl() {\n     public String getUsername() {\n         return username;\n     }\n+\n+    public String getView() {", "originalCommit": "653913966756d1f8b73fb93d8d2d925dda82de5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MzQxMA==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r465453410", "bodyText": "These are used for verification step in MaterialRepositoryIntegrationTest", "author": "kritika-singh3", "createdAt": "2020-08-05T03:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4OTgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MTEyMA==", "url": "https://github.com/gocd/gocd/pull/8348#discussion_r465191120", "bodyText": "Can we have this under a separate class since its a different set of endpoints.", "author": "maheshp", "createdAt": "2020-08-04T16:51:17Z", "path": "spark/spark-base/src/main/java/com/thoughtworks/go/spark/Routes.java", "diffHunk": "@@ -157,8 +157,14 @@ public static String name(String name) {\n \n     public static class MaterialConfig {\n         public static final String BASE = \"/api/config/materials\";\n+        public static final String INTERNAL_BASE = \"/api/internal/materials\";", "originalCommit": "653913966756d1f8b73fb93d8d2d925dda82de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5517740adc8cdb8f25c593a68312ee88acb2a5c", "url": "https://github.com/gocd/gocd/commit/a5517740adc8cdb8f25c593a68312ee88acb2a5c", "message": "Initial commit", "committedDate": "2020-08-05T03:28:04Z", "type": "commit"}, {"oid": "d0cf64ded2d5ec39cca461d7eebfeca1028cba9a", "url": "https://github.com/gocd/gocd/commit/d0cf64ded2d5ec39cca461d7eebfeca1028cba9a", "message": "Add usages API for a given fingerprint", "committedDate": "2020-08-05T03:28:05Z", "type": "commit"}, {"oid": "54c012f53c9211d014e798c7ba7b255e7638ff8c", "url": "https://github.com/gocd/gocd/commit/54c012f53c9211d014e798c7ba7b255e7638ff8c", "message": "Added a sql query which will fetch the materials with their latest {count} modifications  - this will be used on materials spa to showcase latest commit", "committedDate": "2020-08-05T03:28:05Z", "type": "commit"}, {"oid": "8b3338c42a1523b0c9b14d1add20028fd3d6796d", "url": "https://github.com/gocd/gocd/commit/8b3338c42a1523b0c9b14d1add20028fd3d6796d", "message": "Added representers and tests", "committedDate": "2020-08-05T03:28:05Z", "type": "commit"}, {"oid": "39e4c31346fcadea1358cbf971cb71310439f43f", "url": "https://github.com/gocd/gocd/commit/39e4c31346fcadea1358cbf971cb71310439f43f", "message": "Return an object instead of list\n - since we are only concerned with the latest modification, sending a list does not make sense. Hence, we are sending only an object. In case there are no modifications, render it as null", "committedDate": "2020-08-05T03:28:05Z", "type": "commit"}, {"oid": "58af81e11d5af8e8e0f8f67496803f4a98975d7f", "url": "https://github.com/gocd/gocd/commit/58af81e11d5af8e8e0f8f67496803f4a98975d7f", "message": "Add auto_update to Package and SCM representers", "committedDate": "2020-08-05T03:28:05Z", "type": "commit"}, {"oid": "dd3586259092e4f85eee6069abc60882abce9d7d", "url": "https://github.com/gocd/gocd/commit/dd3586259092e4f85eee6069abc60882abce9d7d", "message": "In a bid to move away from ibatis - migrated the sql to use hibernate to fetch the details\n - modified the query\n - moved the test - they passed without any changes required", "committedDate": "2020-08-05T03:28:05Z", "type": "commit"}, {"oid": "6ed2458699f7f8cab3a6fccd0c7c69e6c127d9a0", "url": "https://github.com/gocd/gocd/commit/6ed2458699f7f8cab3a6fccd0c7c69e6c127d9a0", "message": "Changes:\n - renamed the methods in service and repository\n - updated the tests\n - used stream() to convert list to hash in material service", "committedDate": "2020-08-05T03:28:06Z", "type": "commit"}, {"oid": "d1d6a257c797cd7e0a8c5adfa1a239f7a056eda5", "url": "https://github.com/gocd/gocd/commit/d1d6a257c797cd7e0a8c5adfa1a239f7a056eda5", "message": "Changes:\n - removed unnecessary material attributes.\n - also removed the error mapping - will add as needed\n - moved the routes into a separate inner class", "committedDate": "2020-08-05T03:45:58Z", "type": "commit"}, {"oid": "d1d6a257c797cd7e0a8c5adfa1a239f7a056eda5", "url": "https://github.com/gocd/gocd/commit/d1d6a257c797cd7e0a8c5adfa1a239f7a056eda5", "message": "Changes:\n - removed unnecessary material attributes.\n - also removed the error mapping - will add as needed\n - moved the routes into a separate inner class", "committedDate": "2020-08-05T03:45:58Z", "type": "forcePushed"}]}