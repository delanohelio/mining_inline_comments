{"pr_number": 1185, "pr_title": "@Join and JoinPath", "pr_createdAt": "2020-02-11T21:34:55Z", "pr_url": "https://github.com/yahoo/elide/pull/1185", "timeline": [{"oid": "27996ab9e31802af82d965fb247868ce1a87966b", "url": "https://github.com/yahoo/elide/commit/27996ab9e31802af82d965fb247868ce1a87966b", "message": "@Join and JoinPath", "committedDate": "2020-02-11T21:31:51Z", "type": "commit"}, {"oid": "61009fd265d67ece00180374f489c8418aa3c9e8", "url": "https://github.com/yahoo/elide/commit/61009fd265d67ece00180374f489c8418aa3c9e8", "message": "add comment", "committedDate": "2020-02-11T21:53:12Z", "type": "commit"}, {"oid": "4276472725ae74a1f80d545d0a9c2698ee9d18e8", "url": "https://github.com/yahoo/elide/commit/4276472725ae74a1f80d545d0a9c2698ee9d18e8", "message": "hide non-jpd entities in grpahql", "committedDate": "2020-02-11T22:01:06Z", "type": "commit"}, {"oid": "3053cdf49c4b019a7204f1418e77678efe8eac40", "url": "https://github.com/yahoo/elide/commit/3053cdf49c4b019a7204f1418e77678efe8eac40", "message": "hide joins", "committedDate": "2020-02-11T22:41:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0ODkwOA==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r377948908", "bodyText": "This logic is almost identical to code in the Path constructor.   Two recommendations to commonize:\n\nMove resolveJoinPathElements to Path and add a function parameter which determines whether a field is a relationship.\nSubclass EntityDictionary with a copy constructor that overrides isRelation.  Pass the new EntityDictionary to the super class constructor.", "author": "aklish", "createdAt": "2020-02-11T22:54:56Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/core/JoinPath.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.datastores.aggregation.core;\n+\n+import static com.yahoo.elide.datastores.aggregation.metadata.MetaDataStore.isTableJoin;\n+\n+import com.yahoo.elide.core.EntityDictionary;\n+import com.yahoo.elide.core.Path;\n+import com.yahoo.elide.core.exceptions.InvalidValueException;\n+import com.yahoo.elide.datastores.aggregation.annotation.Join;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * JoinPath extends {@link Path} to allow navigation through {@link Join} annotation.\n+ */\n+public class JoinPath extends Path {\n+    public JoinPath(Class<?> entityClass, EntityDictionary dictionary, String dotSeparatedPath) {\n+        super(resolveJoinPathElements(entityClass, dictionary, dotSeparatedPath));\n+    }\n+\n+    private static List<PathElement> resolveJoinPathElements(Class<?> entityClass,\n+                                                             EntityDictionary dictionary,\n+                                                             String dotSeparatedPath) {\n+        List<PathElement> elements = new ArrayList<>();\n+        String[] fieldNames = dotSeparatedPath.split(\"\\\\.\");\n+\n+        Class<?> currentClass = entityClass;\n+        for (String fieldName : fieldNames) {\n+            if (dictionary.isRelation(currentClass, fieldName) || isTableJoin(currentClass, fieldName, dictionary)) {", "originalCommit": "61009fd265d67ece00180374f489c8418aa3c9e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTI1Mg==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r377949252", "bodyText": "Column Tag is removed in the latest model.  It is replaced with a set of strings.", "author": "aklish", "createdAt": "2020-02-11T22:55:50Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/enums/ColumnTag.java", "diffHunk": "@@ -0,0 +1,14 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.datastores.aggregation.metadata.enums;\n+\n+/**\n+ * Tag attached to fields.\n+ */\n+public enum ColumnTag {", "originalCommit": "61009fd265d67ece00180374f489c8418aa3c9e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTM2NQ==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r377949365", "bodyText": "Table Tag is removed in the latest model.  It is replaced with a set of Strings.", "author": "aklish", "createdAt": "2020-02-11T22:56:08Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/enums/TableTag.java", "diffHunk": "@@ -8,6 +8,6 @@\n /**\n  * Tag attached to fields.\n  */\n-public enum Tag {\n+public enum TableTag {", "originalCommit": "61009fd265d67ece00180374f489c8418aa3c9e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTU4Ng==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r377949586", "bodyText": "Set<String>", "author": "aklish", "createdAt": "2020-02-11T22:56:41Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java", "diffHunk": "@@ -45,7 +45,7 @@\n     private DataType dataType;\n \n     @ToString.Exclude\n-    private Set<Tag> columnTags;\n+    private Set<ColumnTag> columnTags;", "originalCommit": "61009fd265d67ece00180374f489c8418aa3c9e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTc1OA==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r377949758", "bodyText": "Set<String>", "author": "aklish", "createdAt": "2020-02-11T22:57:05Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Table.java", "diffHunk": "@@ -55,6 +57,9 @@\n     @ToString.Exclude\n     private Set<Dimension> dimensions;\n \n+    @ToString.Exclude\n+    private Set<TableTag> tableTags;", "originalCommit": "61009fd265d67ece00180374f489c8418aa3c9e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1NDU5NA==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r377954594", "bodyText": "I'm worried countryView is going to show up in the GraphQL schema as an attribute.  While we can always have the developer add @Exclude, it would be better if JoinTo automatically excluded the property.\nOne way to do this is to promote AggregationStore annotations to elide-annotations as  first class citizens.  I think Elide 5.0 should collapse elide-annotations and elide-core because there are natural dependencies between them.\nI don't want to do that collapse now though because it will make rebasing harder.\nAnother option is to allow the entity dictionary to accept hints when the data store binds the entities.  We could make another bindEntity method that takes additional annotations to exclude while binding.  I think for now, I favor this option.", "author": "aklish", "createdAt": "2020-02-11T23:10:01Z", "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/example/PlayerStatsWithView.java", "diffHunk": "@@ -200,8 +200,7 @@ public void setSubCountryIsoCode(String isoCode) {\n         this.subCountryIsoCode = isoCode;\n     }\n \n-    @ToOne\n-    @JoinTo(joinClause = \"%from.country_id = %join.id\")\n+    @Join(\"%from.country_id = %join.id\")", "originalCommit": "61009fd265d67ece00180374f489c8418aa3c9e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAyODMxOA==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r378028318", "bodyText": "The field is hidden in both JSON API and GraphQL. I have this latest commit.\n3053cdf", "author": "hellohanchen", "createdAt": "2020-02-12T03:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1NDU5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMzMjIyNQ==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r378332225", "bodyText": "I don't want to add a new annotation for this.  We already have Exclude.   I think Join should be implicitly hidden (without having to add another declaration).", "author": "aklish", "createdAt": "2020-02-12T15:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1NDU5NA=="}], "type": "inlineReview"}, {"oid": "0b0d1f7e5e020bb9cd4afc2f2295ba54622f7a7e", "url": "https://github.com/yahoo/elide/commit/0b0d1f7e5e020bb9cd4afc2f2295ba54622f7a7e", "message": "refactor hidden", "committedDate": "2020-02-12T17:08:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5NjEwNQ==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379496105", "bodyText": "Why not have this method call the new bindEntity method with an empty set (or a set that includes Exclude)?", "author": "aklish", "createdAt": "2020-02-14T15:35:34Z", "path": "elide-core/src/main/java/com/yahoo/elide/core/EntityDictionary.java", "diffHunk": "@@ -872,7 +889,29 @@ public void bindEntity(Class<?> cls) {\n         }\n \n         bindJsonApiToEntity.put(type, declaredClass);\n-        entityBindings.put(declaredClass, new EntityBinding(this, declaredClass, type, name));\n+        entityBindings.put(declaredClass, new EntityBinding(this, declaredClass, type, name, hiddenAnnotations));\n+        if (include.rootLevel()) {\n+            bindEntityRoots.add(declaredClass);\n+        }\n+    }\n+\n+    /**\n+     * Add an EntityBinding instance to dictionary.\n+     *\n+     * @param entityBinding EntityBinding instance\n+     */\n+    public void bindEntity(EntityBinding entityBinding) {\n+        Class<?> declaredClass = entityBinding.entityClass;", "originalCommit": "0b0d1f7e5e020bb9cd4afc2f2295ba54622f7a7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMTgwMw==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379521803", "bodyText": "This bindEntity method needs to keep all information from the existing binding, as the hiddenAnnotations are not tracked in EntityBinding, if we bind the class again in a different dictionary, previous hiddenAnnotations would not be applied.", "author": "hellohanchen", "createdAt": "2020-02-14T16:22:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5NjEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5NjYwNQ==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379496605", "bodyText": "Nice", "author": "aklish", "createdAt": "2020-02-14T15:36:28Z", "path": "elide-core/src/main/java/com/yahoo/elide/core/Path.java", "diffHunk": "@@ -70,7 +87,20 @@ public Path(Class<?> entityClass, EntityDictionary dictionary, String dotSeparat\n                 throw new InvalidValueException(alias + \" doesn't contain the field \" + fieldName);\n             }\n         }\n-        pathElements = ImmutableList.copyOf(elements);\n+\n+        return ImmutableList.copyOf(elements);\n+    }\n+\n+    /**\n+     * Check whether a field need navigation to another entity.\n+     *\n+     * @param entityClass entity class\n+     * @param fieldName field name\n+     * @param dictionary dictionary\n+     * @return True if the field requires navigation.\n+     */\n+    protected boolean needNavigation(Class<?> entityClass, String fieldName, EntityDictionary dictionary) {", "originalCommit": "0b0d1f7e5e020bb9cd4afc2f2295ba54622f7a7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5ODEwNQ==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379498105", "bodyText": "Why do we need ant?", "author": "aklish", "createdAt": "2020-02-14T15:39:06Z", "path": "elide-datastore/elide-datastore-aggregation/pom.xml", "diffHunk": "@@ -178,6 +178,13 @@\n             <version>2.5.0</version>\n             <scope>test</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>org.apache.ant</groupId>", "originalCommit": "0b0d1f7e5e020bb9cd4afc2f2295ba54622f7a7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMjMyMA==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379522320", "bodyText": "Used for reading in graphql expected response from json file.", "author": "hellohanchen", "createdAt": "2020-02-14T16:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5ODEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMjEzNw==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379632137", "bodyText": "I'd rather not add a dependency on ant in Elide.   There are other places in Elide where we slurp in files.  Let's just do the same approach.", "author": "aklish", "createdAt": "2020-02-14T20:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5ODEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5OTcxOA==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379499718", "bodyText": "If Table is going to be a simple POJO - we probably don't need to pass dictionary to it.  This will also simplify the Fili integration.", "author": "aklish", "createdAt": "2020-02-14T15:42:00Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Table.java", "diffHunk": "@@ -55,17 +57,21 @@\n     @ToString.Exclude\n     private Set<Dimension> dimensions;\n \n+    @ToString.Exclude\n+    private Set<String> tableTags;\n+\n     @Exclude\n     @ToString.Exclude\n     private final Map<String, Column> columnMap;\n \n     public Table(Class<?> cls, EntityDictionary dictionary) {\n-        if (!dictionary.getBindings().contains(cls)) {\n+        if (!dictionary.getBoundClasses().contains(cls)) {", "originalCommit": "0b0d1f7e5e020bb9cd4afc2f2295ba54622f7a7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNDI4OQ==", "url": "https://github.com/yahoo/elide/pull/1185#discussion_r379524289", "bodyText": "If using all argument builder, there is not need to provide a dictionary. Fili can use that.", "author": "hellohanchen", "createdAt": "2020-02-14T16:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5OTcxOA=="}], "type": "inlineReview"}, {"oid": "db5479b43fbb135551b430001cd7ecc6c4c56e5c", "url": "https://github.com/yahoo/elide/commit/db5479b43fbb135551b430001cd7ecc6c4c56e5c", "message": "remove ant", "committedDate": "2020-02-14T20:43:37Z", "type": "commit"}]}