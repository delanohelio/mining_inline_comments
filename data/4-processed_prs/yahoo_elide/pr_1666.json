{"pr_number": 1666, "pr_title": "Display user friendly messages for Json Schema validation failures", "pr_createdAt": "2020-11-17T17:50:33Z", "pr_url": "https://github.com/yahoo/elide/pull/1666", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyNzc4MA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525427780", "bodyText": "Let's add javadoc for all of these new classes.", "author": "aklish", "createdAt": "2020-11-17T19:24:57Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DraftV4LibraryWithElideFormatAttr.java", "diffHunk": "@@ -5,46 +5,41 @@\n  */\n package com.yahoo.elide.contrib.dynamicconfighelpers;\n \n+import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.EitherTableSourceOrValuesKeyword;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideCardinalityFormatAttr;\n+import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideClassNameFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideFieldNameFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideFieldTypeFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideGrainTypeFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideJoinTypeFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideNameFormatAttr;\n+import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideRSQLFilterFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideTimeFieldTypeFormatAttr;\n-\n import com.github.fge.jsonschema.library.DraftV4Library;\n import com.github.fge.jsonschema.library.Library;\n import com.github.fge.jsonschema.library.LibraryBuilder;\n \n-import lombok.NoArgsConstructor;\n+import lombok.Getter;\n \n-@NoArgsConstructor(access = lombok.AccessLevel.PRIVATE)\n public class DraftV4LibraryWithElideFormatAttr {\n-    private static Library LIBRARY = null;", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NDYxNw==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526374617", "bodyText": "added.", "author": "rishi-aga", "createdAt": "2020-11-18T19:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyNzc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyOTcxNA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525429714", "bodyText": "Why did we do this swap?  Was the error hard to follow?", "author": "aklish", "createdAt": "2020-11-17T19:28:02Z", "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -191,22 +191,7 @@\n                             \"type\": \"string\"\n                         }\n                     },\n-                    \"dependencies\": {\n-                        \"values\": {\n-                            \"not\": {\n-                                \"required\": [\n-                                    \"tableSource\"\n-                                ]\n-                            }\n-                        },\n-                        \"tableSource\": {\n-                            \"not\": {\n-                                \"required\": [\n-                                    \"values\"\n-                                ]\n-                            }\n-                        }\n-                    }\n+                    \"eitherTableSourceOrValues\": {}", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NDU3MA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526374570", "bodyText": "yes.", "author": "rishi-aga", "createdAt": "2020-11-18T19:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyOTcxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNDgwNA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525434804", "bodyText": "I wonder if we can do something stronger here.  I wonder if we can parse the expression with FIQL/RSQL parser.  A regex is not expressive enough to capture all the legal values.", "author": "aklish", "createdAt": "2020-11-17T19:35:07Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideRSQLFilterFormatAttr.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideRSQLFilterFormatAttr extends AbstractFormatAttribute {\n+    private static final String RSQL_FILTER_FORMAT_REGEX = \"^[A-Za-z][0-9A-Za-z_]*(==|!=|>=|>|<|<=|=[a-z]+=)(.*)$\";", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNjMwOQ==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525436309", "bodyText": "This comment doesn't capture the breadth of what the user can define.  The semi-colon can also be a comma.  Each operator has its own rules.\nI think a pointer to the RSQL documentation might be better than trying to redefine here.", "author": "aklish", "createdAt": "2020-11-17T19:36:22Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideRSQLFilterFormatAttr.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideRSQLFilterFormatAttr extends AbstractFormatAttribute {\n+    private static final String RSQL_FILTER_FORMAT_REGEX = \"^[A-Za-z][0-9A-Za-z_]*(==|!=|>=|>|<|<=|=[a-z]+=)(.*)$\";\n+\n+    public static final String FORMAT_NAME = \"elideRSQLFilter\";\n+    public static final String FORMAT_KEY = \"elideRSQLFilter.error.format\";\n+    public static final String FORMAT_MSG = \"filterTemplate [%s] is not allowed. \"\n+                    + \"RSQL filter Template must follow the format 'XoperatorY;XoperatorY;XoperatorY'. \"\n+                    + \"Here `X` must start with an alphabet and can include alaphabets, numbers and '_' only. \"", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzOTY1OA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525439658", "bodyText": "This might have been too simplistic.  Check out:\nhttps://stackoverflow.com/questions/5205339/regular-expression-matching-fully-qualified-class-names", "author": "aklish", "createdAt": "2020-11-17T19:39:13Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideClassNameFormatAttr.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideClassNameFormatAttr extends AbstractFormatAttribute {\n+    private static final String CLASS_NAME_FORMAT_REGEX = \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class$\";", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NDc3OA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526374778", "bodyText": "updated.", "author": "rishi-aga", "createdAt": "2020-11-18T19:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzOTY1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MDg2Ng==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525440866", "bodyText": "Something simple here might be better:  \"[%s] is not a valid Java class name.\"", "author": "aklish", "createdAt": "2020-11-17T19:40:10Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideClassNameFormatAttr.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideClassNameFormatAttr extends AbstractFormatAttribute {\n+    private static final String CLASS_NAME_FORMAT_REGEX = \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class$\";\n+\n+    public static final String FORMAT_NAME = \"elideClassName\";\n+    public static final String FORMAT_KEY = \"elideClassName.error.format\";\n+    public static final String FORMAT_MSG = \"Class Name [%s] is not allowed. \"\n+                    + \"Class name must follow the format 'X.X.X.X.class'. \"", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NDgyMA==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526374820", "bodyText": "updated.", "author": "rishi-aga", "createdAt": "2020-11-18T19:48:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MDg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MjYwMQ==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525442601", "bodyText": "Neither of them is also an option.\nI would reword: \"tableSource and values cannot both be defined for a dimension.  Choose one or none.\"", "author": "aklish", "createdAt": "2020-11-17T19:41:37Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/EitherTableSourceOrValuesValidator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.processing.Processor;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.keyword.validator.AbstractKeywordValidator;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+import com.google.common.collect.Sets;\n+\n+import java.util.Set;\n+\n+public class EitherTableSourceOrValuesValidator extends AbstractKeywordValidator {\n+\n+    public static final String KEYWORD = \"eitherTableSourceOrValues\";\n+    public static final String ERROR_KEY = \"eitherTableSourceOrValues.error\";\n+    public static final String ERROR_MSG =\n+                    \"Either tableSource or values should be defined for a dimension, Both are not allowed.\";", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NDkxNQ==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526374915", "bodyText": "updated.", "author": "rishi-aga", "createdAt": "2020-11-18T19:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MjYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MzI2MQ==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525443261", "bodyText": "Why do we define toString here but nowhere else?", "author": "aklish", "createdAt": "2020-11-17T19:42:12Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/EitherTableSourceOrValuesValidator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.processing.Processor;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.keyword.validator.AbstractKeywordValidator;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+import com.google.common.collect.Sets;\n+\n+import java.util.Set;\n+\n+public class EitherTableSourceOrValuesValidator extends AbstractKeywordValidator {\n+\n+    public static final String KEYWORD = \"eitherTableSourceOrValues\";\n+    public static final String ERROR_KEY = \"eitherTableSourceOrValues.error\";\n+    public static final String ERROR_MSG =\n+                    \"Either tableSource or values should be defined for a dimension, Both are not allowed.\";\n+\n+    public EitherTableSourceOrValuesValidator(final JsonNode digest) {\n+        super(KEYWORD);\n+    }\n+\n+    @Override\n+    public void validate(Processor<FullData, FullData> processor, ProcessingReport report, MessageBundle bundle,\n+                    FullData data) throws ProcessingException {\n+\n+        JsonNode instance = data.getInstance().getNode();\n+        Set<String> fields = Sets.newHashSet(instance.fieldNames());\n+\n+        if (fields.contains(\"values\") && fields.contains(\"tableSource\")) {\n+            report.error(newMsg(data, bundle, ERROR_KEY));\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NTUyMw==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526375523", "bodyText": "this one extends AbstractKeywordValidator which has abstract toString method. Others extends AbstractFormatAttribute which doesn't have toString method.", "author": "rishi-aga", "createdAt": "2020-11-18T19:49:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MzI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0NjExNw==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525446117", "bodyText": "Do we need to validate that we have an object node here?  Do we need to check for fields that are not tableSource or values?", "author": "aklish", "createdAt": "2020-11-17T19:44:30Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/EitherTableSourceOrValuesKeyword.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jackson.jsonpointer.JsonPointer;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.keyword.syntax.checkers.AbstractSyntaxChecker;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.core.tree.SchemaTree;\n+import com.github.fge.jsonschema.keyword.digest.AbstractDigester;\n+import com.github.fge.jsonschema.library.Keyword;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+import lombok.Getter;\n+\n+import java.util.Collection;\n+\n+public class EitherTableSourceOrValuesKeyword {\n+\n+    @Getter\n+    private Keyword keyword;\n+\n+    public EitherTableSourceOrValuesKeyword() {\n+        keyword = Keyword.newBuilder(EitherTableSourceOrValuesValidator.KEYWORD)\n+                        .withSyntaxChecker(new EitherTableSourceOrValuesSyntaxChecker())\n+                        .withDigester(new EitherTableSourceOrValuesDigesters())\n+                        .withValidatorClass(EitherTableSourceOrValuesValidator.class)\n+                        .freeze();\n+    }\n+\n+    private class EitherTableSourceOrValuesSyntaxChecker extends AbstractSyntaxChecker {\n+\n+        public EitherTableSourceOrValuesSyntaxChecker() {\n+            super(EitherTableSourceOrValuesValidator.KEYWORD, NodeType.OBJECT);\n+        }\n+\n+        @Override\n+        protected void checkValue(Collection<JsonPointer> pointers, MessageBundle bundle, ProcessingReport report,\n+                        SchemaTree tree) throws ProcessingException {\n+            // No Checks Required", "originalCommit": "a41358110f78732b686dad10525387de1f1e710c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NjU3Ng==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526376576", "bodyText": "Constructor verifies the type of node.", "author": "rishi-aga", "createdAt": "2020-11-18T19:51:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0NjExNw=="}], "type": "inlineReview"}, {"oid": "4edc7a6cb330ee46ae4c65398d7c89ee407ef777", "url": "https://github.com/yahoo/elide/commit/4edc7a6cb330ee46ae4c65398d7c89ee407ef777", "message": "Review Comments", "committedDate": "2020-11-18T19:17:01Z", "type": "forcePushed"}, {"oid": "1bf2988aaa313cc51b24e698642a1e0c29134038", "url": "https://github.com/yahoo/elide/commit/1bf2988aaa313cc51b24e698642a1e0c29134038", "message": "RSQL validator", "committedDate": "2020-11-18T21:07:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NzI1Ng==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526487256", "bodyText": "You can provide a URL fragment (https://something.com#fragment) to link to a section in the documentation.", "author": "aklish", "createdAt": "2020-11-18T23:18:35Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideRSQLFilterFormatAttr.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import static com.yahoo.elide.core.filter.dialect.RSQLFilterDialect.getDefaultOperatorsWithIsnull;\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+import cz.jirutka.rsql.parser.RSQLParser;\n+import cz.jirutka.rsql.parser.RSQLParserException;\n+\n+/**\n+ * Format specifier for {@code elideRSQLFilter} format attribute.\n+ * <p>\n+ * This specifier will check if a string instance is a valid RSQL filter.\n+ * </p>\n+ */\n+public class ElideRSQLFilterFormatAttr extends AbstractFormatAttribute {\n+\n+    public static final String FORMAT_NAME = \"elideRSQLFilter\";\n+    public static final String FORMAT_KEY = \"elideRSQLFilter.error.format\";\n+    public static final String FORMAT_MSG = \"Input value[%s] is not a valid RSQL filter expression. Please visit page \"\n+                    + \"https://elide.io/pages/guide/v5/11-graphql.html and search 'RSQL operators' for samples.\";", "originalCommit": "1bf2988aaa313cc51b24e698642a1e0c29134038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkyOTI2Ng==", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526929266", "bodyText": "updated.", "author": "rishi-aga", "createdAt": "2020-11-19T14:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NzI1Ng=="}], "type": "inlineReview"}, {"oid": "bfe17c89bb21472289177790144a87405dc89c09", "url": "https://github.com/yahoo/elide/commit/bfe17c89bb21472289177790144a87405dc89c09", "message": "Display user friendly messages for Json Schema validation failures", "committedDate": "2020-11-19T14:27:42Z", "type": "commit"}, {"oid": "a833594d7d1d10dba5e470e4927510d76e96313e", "url": "https://github.com/yahoo/elide/commit/a833594d7d1d10dba5e470e4927510d76e96313e", "message": "Review Comments", "committedDate": "2020-11-19T14:27:42Z", "type": "commit"}, {"oid": "b6ced6b0450ab4d8d4162b946e56f517f8dedaf8", "url": "https://github.com/yahoo/elide/commit/b6ced6b0450ab4d8d4162b946e56f517f8dedaf8", "message": "minor fixes", "committedDate": "2020-11-19T14:27:42Z", "type": "commit"}, {"oid": "1cd3d24e7091f091b827717dcfda71ed8185c625", "url": "https://github.com/yahoo/elide/commit/1cd3d24e7091f091b827717dcfda71ed8185c625", "message": "RSQL validator", "committedDate": "2020-11-19T14:27:42Z", "type": "commit"}, {"oid": "16ea8154377c0569f71a619be56d8a413d282a2b", "url": "https://github.com/yahoo/elide/commit/16ea8154377c0569f71a619be56d8a413d282a2b", "message": "Review Comments", "committedDate": "2020-11-19T14:27:42Z", "type": "commit"}, {"oid": "16ea8154377c0569f71a619be56d8a413d282a2b", "url": "https://github.com/yahoo/elide/commit/16ea8154377c0569f71a619be56d8a413d282a2b", "message": "Review Comments", "committedDate": "2020-11-19T14:27:42Z", "type": "forcePushed"}]}