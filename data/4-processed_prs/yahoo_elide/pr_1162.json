{"pr_number": 1162, "pr_title": "Core tests", "pr_createdAt": "2020-01-25T16:44:37Z", "pr_url": "https://github.com/yahoo/elide/pull/1162", "timeline": [{"oid": "2d39fbb30f8486bdf44d333e489fdfa7f8a0506e", "url": "https://github.com/yahoo/elide/commit/2d39fbb30f8486bdf44d333e489fdfa7f8a0506e", "message": "Add tests for field lookup and collection coercion", "committedDate": "2020-01-25T16:40:45Z", "type": "commit"}, {"oid": "9b2ea15889452f578840220cc3a26c3611aa7408", "url": "https://github.com/yahoo/elide/commit/9b2ea15889452f578840220cc3a26c3611aa7408", "message": "Test exceptions for lifecycle handling", "committedDate": "2020-01-25T16:41:43Z", "type": "commit"}, {"oid": "d5216bdb34c75b24268509aee00d06c5b68d9556", "url": "https://github.com/yahoo/elide/commit/d5216bdb34c75b24268509aee00d06c5b68d9556", "message": "Test Field Paths", "committedDate": "2020-01-25T16:42:11Z", "type": "commit"}, {"oid": "61ba960a3b7754e747f57cc054ac84662e3cfd56", "url": "https://github.com/yahoo/elide/commit/61ba960a3b7754e747f57cc054ac84662e3cfd56", "message": "Check Invalid value message", "committedDate": "2020-01-25T17:00:00Z", "type": "commit"}, {"oid": "77b476ca818c4005670308d2a7071a24002fc434", "url": "https://github.com/yahoo/elide/commit/77b476ca818c4005670308d2a7071a24002fc434", "message": "test PatchRequestScope", "committedDate": "2020-01-25T22:19:23Z", "type": "forcePushed"}, {"oid": "a8294ec2c44b29aa27f884154597ad1e554f4ac3", "url": "https://github.com/yahoo/elide/commit/a8294ec2c44b29aa27f884154597ad1e554f4ac3", "message": "test PatchRequestScope", "committedDate": "2020-01-25T22:24:10Z", "type": "forcePushed"}, {"oid": "ca04691b997443cd3ca97bf5e1ff6cd3a476e1ef", "url": "https://github.com/yahoo/elide/commit/ca04691b997443cd3ca97bf5e1ff6cd3a476e1ef", "message": "test PatchRequestScope", "committedDate": "2020-01-25T22:27:13Z", "type": "commit"}, {"oid": "ca04691b997443cd3ca97bf5e1ff6cd3a476e1ef", "url": "https://github.com/yahoo/elide/commit/ca04691b997443cd3ca97bf5e1ff6cd3a476e1ef", "message": "test PatchRequestScope", "committedDate": "2020-01-25T22:27:13Z", "type": "forcePushed"}, {"oid": "4274628268e9a6c01cb084924cd3e2aed58f3e9d", "url": "https://github.com/yahoo/elide/commit/4274628268e9a6c01cb084924cd3e2aed58f3e9d", "message": "relationship terminal state test", "committedDate": "2020-01-25T23:38:36Z", "type": "commit"}, {"oid": "6cd204f31c46cafa3b606cc33209b7c3967afb37", "url": "https://github.com/yahoo/elide/commit/6cd204f31c46cafa3b606cc33209b7c3967afb37", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T00:22:22Z", "type": "forcePushed"}, {"oid": "bc30a70f8115edfdfd0133f4929e8f93335fa2c9", "url": "https://github.com/yahoo/elide/commit/bc30a70f8115edfdfd0133f4929e8f93335fa2c9", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T00:24:27Z", "type": "forcePushed"}, {"oid": "eaaef8f3fbc82a91aa6a9a68b0e5fc93129bd144", "url": "https://github.com/yahoo/elide/commit/eaaef8f3fbc82a91aa6a9a68b0e5fc93129bd144", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T00:26:58Z", "type": "forcePushed"}, {"oid": "c65abe1b26d18b1e742791c18191bcbf170b5e27", "url": "https://github.com/yahoo/elide/commit/c65abe1b26d18b1e742791c18191bcbf170b5e27", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T01:26:35Z", "type": "forcePushed"}, {"oid": "35b80d7ff9ef38622ee6207571ff69e07512ee87", "url": "https://github.com/yahoo/elide/commit/35b80d7ff9ef38622ee6207571ff69e07512ee87", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T01:37:50Z", "type": "forcePushed"}, {"oid": "75d8630dc3391a4b549acef1b8f55b47dd990cb8", "url": "https://github.com/yahoo/elide/commit/75d8630dc3391a4b549acef1b8f55b47dd990cb8", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T01:42:04Z", "type": "forcePushed"}, {"oid": "d773dd0db25a8788273819b64542bef71a5fd7b6", "url": "https://github.com/yahoo/elide/commit/d773dd0db25a8788273819b64542bef71a5fd7b6", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T01:59:01Z", "type": "commit"}, {"oid": "d773dd0db25a8788273819b64542bef71a5fd7b6", "url": "https://github.com/yahoo/elide/commit/d773dd0db25a8788273819b64542bef71a5fd7b6", "message": "JsonApiDocument equality test", "committedDate": "2020-01-26T01:59:01Z", "type": "forcePushed"}, {"oid": "5e5482eb9bf90382b71fa132b630a973bc038fbe", "url": "https://github.com/yahoo/elide/commit/5e5482eb9bf90382b71fa132b630a973bc038fbe", "message": "work around for empty data", "committedDate": "2020-01-26T02:27:31Z", "type": "commit"}, {"oid": "5e5482eb9bf90382b71fa132b630a973bc038fbe", "url": "https://github.com/yahoo/elide/commit/5e5482eb9bf90382b71fa132b630a973bc038fbe", "message": "work around for empty data", "committedDate": "2020-01-26T02:27:31Z", "type": "forcePushed"}, {"oid": "d2975317f188fa2184829797efef312dd7e46b7f", "url": "https://github.com/yahoo/elide/commit/d2975317f188fa2184829797efef312dd7e46b7f", "message": "import static Assertions", "committedDate": "2020-01-26T03:12:27Z", "type": "commit"}, {"oid": "c1fd17b3342a946f310dad96a24dbd3d60607aa3", "url": "https://github.com/yahoo/elide/commit/c1fd17b3342a946f310dad96a24dbd3d60607aa3", "message": "DataStoreTransaction testing", "committedDate": "2020-01-26T06:03:54Z", "type": "forcePushed"}, {"oid": "b8b3eaa077b42622bf59f43133c8c2600d4a2b1f", "url": "https://github.com/yahoo/elide/commit/b8b3eaa077b42622bf59f43133c8c2600d4a2b1f", "message": "DataStoreTransaction testing", "committedDate": "2020-01-26T06:04:40Z", "type": "forcePushed"}, {"oid": "21265e85b9faf96118b8f38d05b3fdfa3ec10182", "url": "https://github.com/yahoo/elide/commit/21265e85b9faf96118b8f38d05b3fdfa3ec10182", "message": "DataStoreTransaction testing", "committedDate": "2020-01-26T06:46:02Z", "type": "forcePushed"}, {"oid": "649ff8134547f6c528571ffa93b5e99d4b79ea35", "url": "https://github.com/yahoo/elide/commit/649ff8134547f6c528571ffa93b5e99d4b79ea35", "message": "DataStoreTransaction testing", "committedDate": "2020-01-26T07:52:43Z", "type": "commit"}, {"oid": "649ff8134547f6c528571ffa93b5e99d4b79ea35", "url": "https://github.com/yahoo/elide/commit/649ff8134547f6c528571ffa93b5e99d4b79ea35", "message": "DataStoreTransaction testing", "committedDate": "2020-01-26T07:52:43Z", "type": "forcePushed"}, {"oid": "208acf4639b3e7bd071a5e6a410f05d9c32f3d65", "url": "https://github.com/yahoo/elide/commit/208acf4639b3e7bd071a5e6a410f05d9c32f3d65", "message": "unnecessary verify", "committedDate": "2020-01-26T08:02:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzMzMw==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371027333", "bodyText": "What's this for?", "author": "aklish", "createdAt": "2020-01-26T20:31:45Z", "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "originalCommit": "208acf4639b3e7bd071a5e6a410f05d9c32f3d65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1MzQyMQ==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371053421", "bodyText": "See #1163.  Moved there.", "author": "wcekan", "createdAt": "2020-01-27T03:04:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzY5OA==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371027698", "bodyText": "This is not a test.  Why use assert here?", "author": "aklish", "createdAt": "2020-01-26T20:38:01Z", "path": "elide-core/src/test/java/com/yahoo/elide/core/PersistentResourceTest.java", "diffHunk": "@@ -110,6 +117,7 @@ public PersistentResourceTest() {\n         badUserScope = new RequestScope(null, null, mock(DataStoreTransaction.class),\n                 new User(-1), null, elideSettings);\n         reset(goodUserScope.getTransaction());\n+        assertFalse(goodUserScope.isUseFilterExpressions());", "originalCommit": "208acf4639b3e7bd071a5e6a410f05d9c32f3d65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1Mzc1OA==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371053758", "bodyText": "Why is this not a test?  Will move.", "author": "wcekan", "createdAt": "2020-01-27T03:07:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzc4OA==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371027788", "bodyText": "Does the code actually nest patch scopes like this?  I thought patch was the parent scope - but child scopes were always normal request scopes.", "author": "aklish", "createdAt": "2020-01-26T20:39:42Z", "path": "elide-core/src/test/java/com/yahoo/elide/core/PersistentResourceTest.java", "diffHunk": "@@ -2167,6 +2176,57 @@ public void testRelationChangeSpecType() {\n             assertTrue(model.updateRelation(\"child\", null));\n     }\n \n+    @Test\n+    public void testPatchRequestScope() {\n+        DataStoreTransaction tx = mock(DataStoreTransaction.class);\n+        PatchRequestScope parentScope =", "originalCommit": "208acf4639b3e7bd071a5e6a410f05d9c32f3d65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1NjU4Mw==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371056583", "bodyText": "Yes, they are nested.  A new wrapper is generated for each operation in the patch extension.  That is what this tests.  See\nhttps://github.com/yahoo/elide/blob/master/elide-core/src/main/java/com/yahoo/elide/extensions/JsonApiPatch.java#L65", "author": "wcekan", "createdAt": "2020-01-27T03:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzc4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzkyNw==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371027927", "bodyText": "Do we want to leave this log level on?", "author": "aklish", "createdAt": "2020-01-26T20:42:19Z", "path": "elide-core/src/test/java/com/yahoo/elide/core/LifeCycleTest.java", "diffHunk": "@@ -115,22 +127,21 @@ public TestEntityDictionary(Map<String, Class<? extends Check>> checks) {\n         dictionary.bindEntity(Author.class);\n         dictionary.bindEntity(Publisher.class);\n         dictionary.bindEntity(Editor.class);\n-        dictionary.bindTrigger(Book.class, OnCreatePostCommit.class, callback);\n-        dictionary.bindTrigger(Book.class, OnCreatePreCommit.class, callback);\n-        dictionary.bindTrigger(Book.class, OnCreatePreSecurity.class, callback);\n-        dictionary.bindTrigger(Book.class, OnReadPostCommit.class, callback);\n-        dictionary.bindTrigger(Book.class, OnReadPreCommit.class, callback);\n-        dictionary.bindTrigger(Book.class, OnReadPreSecurity.class, callback);\n-        dictionary.bindTrigger(Book.class, OnDeletePostCommit.class, callback);\n-        dictionary.bindTrigger(Book.class, OnDeletePreCommit.class, callback);\n-        dictionary.bindTrigger(Book.class, OnDeletePreSecurity.class, callback);\n-        dictionary.bindTrigger(Book.class, OnUpdatePostCommit.class, \"title\", callback);\n-        dictionary.bindTrigger(Book.class, OnUpdatePreCommit.class, \"title\", callback);\n-        dictionary.bindTrigger(Book.class, OnUpdatePreSecurity.class, \"title\", callback);\n+        ImmutableList.of(\n+                OnCreatePostCommit.class, OnCreatePreCommit.class, OnCreatePreSecurity.class,\n+                OnReadPostCommit.class, OnReadPreCommit.class, OnReadPreSecurity.class,\n+                OnDeletePostCommit.class, OnDeletePreCommit.class, OnDeletePreSecurity.class)\n+                .stream().forEach(cls -> dictionary.bindTrigger(Book.class, cls, callback));\n+        ImmutableList.of(\n+                OnUpdatePostCommit.class, OnUpdatePreCommit.class, OnUpdatePreSecurity.class)\n+                .stream().forEach(cls -> dictionary.bindTrigger(Book.class, cls, \"title\", callback));\n         dictionary.bindTrigger(Book.class, OnUpdatePreCommit.class, onUpdateDeferredCallback, true);\n         dictionary.bindTrigger(Book.class, OnUpdatePreSecurity.class, onUpdateImmediateCallback, true);\n         dictionary.bindTrigger(Book.class, OnUpdatePostCommit.class, onUpdatePostCommitCallback, true);\n         dictionary.bindTrigger(Author.class, OnUpdatePostCommit.class, onUpdatePostCommitAuthor, true);\n+        // enable trace\n+        Logger rootLogger = (Logger) LoggerFactory.getILoggerFactory().getLogger(Logger.ROOT_LOGGER_NAME);\n+        rootLogger.setLevel(Level.TRACE);", "originalCommit": "208acf4639b3e7bd071a5e6a410f05d9c32f3d65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1Mzk1Mw==", "url": "https://github.com/yahoo/elide/pull/1162#discussion_r371053953", "bodyText": "Yes, otherwise we are not testing logging works without throwing exceptions.\nOtherwise you need to duplicate all these same tests except with logging on.", "author": "wcekan", "createdAt": "2020-01-27T03:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzkyNw=="}], "type": "inlineReview"}, {"oid": "23919e14a9f454c8daad32e0718afed71acd40d7", "url": "https://github.com/yahoo/elide/commit/23919e14a9f454c8daad32e0718afed71acd40d7", "message": "Moved to separate PR", "committedDate": "2020-01-27T03:13:33Z", "type": "commit"}, {"oid": "065f42574c524ff6466c83d4f2d5914c1f435bbf", "url": "https://github.com/yahoo/elide/commit/065f42574c524ff6466c83d4f2d5914c1f435bbf", "message": "Consolidate buildRequestScope", "committedDate": "2020-01-27T03:55:33Z", "type": "commit"}, {"oid": "065f42574c524ff6466c83d4f2d5914c1f435bbf", "url": "https://github.com/yahoo/elide/commit/065f42574c524ff6466c83d4f2d5914c1f435bbf", "message": "Consolidate buildRequestScope", "committedDate": "2020-01-27T03:55:33Z", "type": "forcePushed"}, {"oid": "773285cd3096e226af837424852d4a11f9c099de", "url": "https://github.com/yahoo/elide/commit/773285cd3096e226af837424852d4a11f9c099de", "message": "Move test to wrap validations", "committedDate": "2020-01-27T05:20:52Z", "type": "commit"}, {"oid": "f4ad93a8c352bc66259a6813661ecc6a67d84709", "url": "https://github.com/yahoo/elide/commit/f4ad93a8c352bc66259a6813661ecc6a67d84709", "message": "Merge branch 'master' into coreTests", "committedDate": "2020-01-27T19:23:49Z", "type": "commit"}, {"oid": "b9bfda03f5ca36a6f0d9d4ecd838cd09c2b84581", "url": "https://github.com/yahoo/elide/commit/b9bfda03f5ca36a6f0d9d4ecd838cd09c2b84581", "message": "Merge branch 'master' into coreTests", "committedDate": "2020-01-27T19:28:39Z", "type": "commit"}, {"oid": "f775f5c1ffbb99303e3bc97fde12d3d95c700e20", "url": "https://github.com/yahoo/elide/commit/f775f5c1ffbb99303e3bc97fde12d3d95c700e20", "message": "Refactor PersistentResourceTest", "committedDate": "2020-01-27T20:10:20Z", "type": "commit"}, {"oid": "b3537795d7826b6c0b912de217504259e527feb5", "url": "https://github.com/yahoo/elide/commit/b3537795d7826b6c0b912de217504259e527feb5", "message": "use assertThrows", "committedDate": "2020-01-27T20:26:24Z", "type": "commit"}]}