{"pr_number": 2134, "pr_title": "PartRepairType Enum", "pr_createdAt": "2020-10-09T20:44:44Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2134", "timeline": [{"oid": "50882e4ab217393e1da6d962fe312c64c893f24e", "url": "https://github.com/MegaMek/mekhq/commit/50882e4ab217393e1da6d962fe312c64c893f24e", "message": "Starting to implement PartRepairType", "committedDate": "2020-10-09T16:53:57Z", "type": "commit"}, {"oid": "445b9fde5edde9a25413a2e358767c4aa1c19168", "url": "https://github.com/MegaMek/mekhq/commit/445b9fde5edde9a25413a2e358767c4aa1c19168", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_PartRepairType", "committedDate": "2020-10-09T16:54:17Z", "type": "commit"}, {"oid": "d98320a55b92c41d12dfd6688e621d69bb1be1bb", "url": "https://github.com/MegaMek/mekhq/commit/d98320a55b92c41d12dfd6688e621d69bb1be1bb", "message": "Continuing to implement PartRepairType", "committedDate": "2020-10-09T17:05:18Z", "type": "commit"}, {"oid": "3e6f56a49af5d434b2be5233cf3d3d7911c4ac30", "url": "https://github.com/MegaMek/mekhq/commit/3e6f56a49af5d434b2be5233cf3d3d7911c4ac30", "message": "BattleArmorAmmoBin", "committedDate": "2020-10-09T17:32:07Z", "type": "commit"}, {"oid": "3babb396e791a56cb9677c18b82a57cd8cc52d42", "url": "https://github.com/MegaMek/mekhq/commit/3babb396e791a56cb9677c18b82a57cd8cc52d42", "message": "Cleaning up IPartWork", "committedDate": "2020-10-09T17:35:30Z", "type": "commit"}, {"oid": "bfc41f1cbb215c20ca76cefd0d10c5c5035caf5f", "url": "https://github.com/MegaMek/mekhq/commit/bfc41f1cbb215c20ca76cefd0d10c5c5035caf5f", "message": "Fixing up some more type ints", "committedDate": "2020-10-09T17:36:05Z", "type": "commit"}, {"oid": "787f2868655de24be58f24cee6b46c6131021e80", "url": "https://github.com/MegaMek/mekhq/commit/787f2868655de24be58f24cee6b46c6131021e80", "message": "Continuing to work on PartRepairType", "committedDate": "2020-10-09T18:46:45Z", "type": "commit"}, {"oid": "024b513043f658dfcdb84126a5ba49b836a5717b", "url": "https://github.com/MegaMek/mekhq/commit/024b513043f658dfcdb84126a5ba49b836a5717b", "message": "Finishing up implementing the PartRepairType enum", "committedDate": "2020-10-09T19:20:57Z", "type": "commit"}, {"oid": "8eb60a828103cc2fad0c74b840bdce8f4613cbd2", "url": "https://github.com/MegaMek/mekhq/commit/8eb60a828103cc2fad0c74b840bdce8f4613cbd2", "message": "Implementing formatting fixes", "committedDate": "2020-10-09T20:27:43Z", "type": "commit"}, {"oid": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "url": "https://github.com/MegaMek/mekhq/commit/34d95735aaeeebad5747cf2e4c83ef66e5c60952", "message": "Fixing tab spacing", "committedDate": "2020-10-09T20:38:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5OTU5Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503599593", "bodyText": "\"improving readability\" lol", "author": "NickAragua", "createdAt": "2020-10-13T00:17:14Z", "path": "MekHQ/src/mekhq/campaign/CampaignOptions.java", "diffHunk": "@@ -3051,7 +3052,7 @@ public void addMassRepairOption(MassRepairOption mro) {\n             massRepairOptions.remove(foundIdx + 1);\n         }\n \n-        massRepairOptions.sort(Comparator.comparingInt(MassRepairOption::getType));\n+        massRepairOptions.sort((mro1, mro2) -> (((Comparable<Integer>) mro1.getType().ordinal()).compareTo(mro2.getType().ordinal())));", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyNzM5OA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503627398", "bodyText": "I wish Java would compare enums like most reasonable languages.", "author": "sixlettervariables", "createdAt": "2020-10-13T02:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5OTU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwMDA0MQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505600041", "bodyText": "Double checking the code, I removed this and swapped the base logic to the stream api. Backend we don't care about ordering", "author": "Windchild292", "createdAt": "2020-10-15T14:42:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5OTU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDM1OA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600358", "bodyText": "I assume ProtomekSensor doesn't have an implementation of getUnitTonnage()?", "author": "NickAragua", "createdAt": "2020-10-13T00:20:16Z", "path": "MekHQ/src/mekhq/campaign/parts/MissingProtomekSensor.java", "diffHunk": "@@ -112,7 +111,7 @@ public void fix() {\n     @Override\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyNzYwNg==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503627606", "bodyText": "Shouldn't need the cast to call it if it overrides the base method. (I don't think)", "author": "sixlettervariables", "createdAt": "2020-10-13T02:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjYwMA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556600", "bodyText": "@sixlettervariables is correct, you don't need to cast for an overridden method.", "author": "Windchild292", "createdAt": "2020-10-15T13:48:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDM1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDQ3Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600472", "bodyText": "I assume SpacecraftEngine doesn't have an implementation of getTonnage()?", "author": "NickAragua", "createdAt": "2020-10-13T00:20:47Z", "path": "MekHQ/src/mekhq/campaign/parts/MissingSpacecraftEngine.java", "diffHunk": "@@ -79,12 +78,12 @@ public double getTonnage() {\n     public boolean isAcceptableReplacement(Part part, boolean refit) {\n         return part instanceof SpacecraftEngine\n                 && getName().equals(part.getName())\n-                && getTonnage() == ((SpacecraftEngine)part).getTonnage();\n+                && getTonnage() == part.getTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjcwMA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556700", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDY1OQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600659", "bodyText": "Double check that ProtomekArmActuator doesn't have an implementation of getUnitTonnage()", "author": "NickAragua", "createdAt": "2020-10-13T00:21:40Z", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekArmActuator.java", "diffHunk": "@@ -85,7 +84,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekArmActuator\n-                && getUnitTonnage() == ((ProtomekArmActuator)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjczNg==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556736", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDY1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDgwNg==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600806", "bodyText": "Doublecheck that ProtomekLegActuator doesn't have implementation of getUnitTonnage()", "author": "NickAragua", "createdAt": "2020-10-13T00:22:05Z", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLegActuator.java", "diffHunk": "@@ -72,7 +71,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekLegActuator\n-                && getUnitTonnage() == ((ProtomekLegActuator)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1Njk3MQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556971", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDgwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDk0Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503600943", "bodyText": "Double check that ProtomekLocation doesn't have an implementation of getUnitTonnage()", "author": "NickAragua", "createdAt": "2020-10-13T00:22:42Z", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekLocation.java", "diffHunk": "@@ -165,7 +163,7 @@ public boolean forQuad() {\n     public boolean isSamePartType(Part part) {\n         return part instanceof ProtomekLocation\n                 && getLoc() == ((ProtomekLocation)part).getLoc()\n-                && getUnitTonnage() == ((ProtomekLocation)part).getUnitTonnage()\n+                && getUnitTonnage() == part.getUnitTonnage()", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1Njk1NQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556955", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMDk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTAwOA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601008", "bodyText": "Double check that ProtomekSensor doesn't have an implementation of getUnitTonnage()", "author": "NickAragua", "createdAt": "2020-10-13T00:22:57Z", "path": "MekHQ/src/mekhq/campaign/parts/ProtomekSensor.java", "diffHunk": "@@ -72,7 +70,7 @@ public Money getStickerPrice() {\n     @Override\n     public boolean isSamePartType (Part part) {\n         return part instanceof ProtomekSensor\n-                && getUnitTonnage() == ((ProtomekSensor)part).getUnitTonnage();\n+                && getUnitTonnage() == part.getUnitTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjkzOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556939", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTEwMw==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601103", "bodyText": "Double check that this doesn't have an implementation of getUnitTonnage()", "author": "NickAragua", "createdAt": "2020-10-13T00:23:24Z", "path": "MekHQ/src/mekhq/campaign/parts/SpacecraftEngine.java", "diffHunk": "@@ -124,12 +122,12 @@ public Money getStickerPrice() {\n     public boolean isSamePartType(Part part) {\n         return part instanceof SpacecraftEngine\n                 && getName().equals(part.getName())\n-                && getTonnage() == ((SpacecraftEngine)part).getTonnage();\n+                && getTonnage() == part.getTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjkxOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556919", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTE3Nw==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601177", "bodyText": "Double check that this doesn't have an implementation of getUnitTonnage()", "author": "NickAragua", "createdAt": "2020-10-13T00:23:39Z", "path": "MekHQ/src/mekhq/campaign/parts/TankLocation.java", "diffHunk": "@@ -104,8 +103,8 @@ protected void computeCost () {\n     @Override\n     public boolean isSamePartType(Part part) {\n         return part instanceof TankLocation\n-                && getLoc() == ((TankLocation)part).getLoc()\n-                && getUnitTonnage() == ((TankLocation)part).getUnitTonnage();\n+                && getLoc() == ((TankLocation) part).getLoc()\n+                && getUnitTonnage() == part.getUnitTonnage();", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1NjkwOA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505556908", "bodyText": "Same as above", "author": "Windchild292", "createdAt": "2020-10-15T13:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTE3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTc3Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601773", "bodyText": "Do all physical weapons have a club flag? Not that this PR will make it any worse, just curious.", "author": "NickAragua", "createdAt": "2020-10-13T00:25:52Z", "path": "MekHQ/src/mekhq/campaign/work/IPartWork.java", "diffHunk": "@@ -85,39 +85,41 @@ default boolean canChangeWorkMode() {\n      * @return A string containing details regarding the part.\n      */\n     String getDetails(boolean includeRepairDetails);\n+\n     int getLocation();\n-    \n+\n     Unit getUnit();\n-    \n+\n     boolean isSalvaging();\n-    \n+\n     String checkFixable();\n-    \n+\n     void reservePart();\n+\n     void cancelReservation();\n+\n     boolean isBeingWorkedOn();\n-    \n-    int getMassRepairOptionType();\n-    int getRepairPartType();\n-    \n-    public static int findCorrectMassRepairType(IPartWork part) {\n-        if (part instanceof EquipmentPart && ((EquipmentPart)part).getType() instanceof WeaponType) {\n-            return Part.REPAIR_PART_TYPE.WEAPON;\n-        } else {            \n+\n+    PartRepairType getMassRepairOptionType();\n+\n+    PartRepairType getRepairPartType();\n+\n+    static PartRepairType findCorrectMassRepairType(IPartWork part) {\n+        if ((part instanceof EquipmentPart) && (((EquipmentPart) part).getType() instanceof WeaponType)) {\n+            return PartRepairType.WEAPON;\n+        } else {\n             return part.getMassRepairOptionType();\n         }\n     }\n-    \n-    public static int findCorrectRepairType(IPartWork part) {\n-        if ((part instanceof EquipmentPart && ((EquipmentPart)part).getType() instanceof WeaponType) ||\n-                (part instanceof MissingEquipmentPart && ((MissingEquipmentPart)part).getType() instanceof WeaponType)) {\n-            return Part.REPAIR_PART_TYPE.WEAPON;\n+\n+    static PartRepairType findCorrectRepairType(IPartWork part) {\n+        if (((part instanceof EquipmentPart) && (((EquipmentPart) part).getType() instanceof WeaponType))\n+                || ((part instanceof MissingEquipmentPart) && (((MissingEquipmentPart) part).getType() instanceof WeaponType))) {\n+            return PartRepairType.WEAPON;\n+        } else if ((part instanceof EquipmentPart) && (((EquipmentPart) part).getType().hasFlag(MiscType.F_CLUB))) {", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU4MjA5NA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505582094", "bodyText": "No idea, but I'm actually not sure that is properly implemented as it is. However, given the overall PR size, that look can be left until later.", "author": "Windchild292", "createdAt": "2020-10-15T14:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTc3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTg1NQ==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r503601855", "bodyText": "What's with the addition of the 'version' parameter?", "author": "NickAragua", "createdAt": "2020-10-13T00:26:16Z", "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -2285,7 +2285,7 @@ protected void loadOptionsFile() {\n             String xn = wn.getNodeName();\n \n             if (xn.equalsIgnoreCase(\"campaignOptions\")) {\n-                options = CampaignOptions.generateCampaignOptionsFromXml(wn);\n+                options = CampaignOptions.generateCampaignOptionsFromXml(wn, version);", "originalCommit": "34d95735aaeeebad5747cf2e4c83ef66e5c60952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU5OTc4OA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r505599788", "bodyText": "It was required for a migration issue, but I swapped it to use a check because the alternative value is not valid for MRMS.\nHowever, I think it would make sense to include the version in the options xml itself because of presets.", "author": "Windchild292", "createdAt": "2020-10-15T14:42:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwMTg1NQ=="}], "type": "inlineReview"}, {"oid": "dbae89e405a2378049c716a0e75a966b72a5a9b0", "url": "https://github.com/MegaMek/mekhq/commit/dbae89e405a2378049c716a0e75a966b72a5a9b0", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_PartRepairType", "committedDate": "2020-10-15T13:49:25Z", "type": "commit"}, {"oid": "efc2a553858de7b5c251dc3b6f5401c5082bc190", "url": "https://github.com/MegaMek/mekhq/commit/efc2a553858de7b5c251dc3b6f5401c5082bc190", "message": "Applying changes per review", "committedDate": "2020-10-15T14:43:19Z", "type": "commit"}, {"oid": "a964c660567c06cd373b583abfe536f1ea396dfe", "url": "https://github.com/MegaMek/mekhq/commit/a964c660567c06cd373b583abfe536f1ea396dfe", "message": "Merge branch 'master' into dev_Windchild_PartRepairType", "committedDate": "2020-10-21T00:55:18Z", "type": "commit"}, {"oid": "3497fc1241221a09d3795363113d240daa017a52", "url": "https://github.com/MegaMek/mekhq/commit/3497fc1241221a09d3795363113d240daa017a52", "message": "Fixing merge conflicts", "committedDate": "2020-10-25T15:44:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwNjI5OA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512906298", "bodyText": "Future note: these sorts of changes have been making it difficult to keep some of my branches up to date. Lots of merge conflicts unrelated to changes.", "author": "sixlettervariables", "createdAt": "2020-10-27T17:52:23Z", "path": "MekHQ/src/mekhq/campaign/parts/MissingEnginePart.java", "diffHunk": "@@ -267,17 +266,16 @@ public boolean isInLocation(String loc) {\n              case Engine.XXL_ENGINE:\n                  needsSideTorso = true;\n                  break;\n+             default:\n+                 break;\n          }\n-         if (needsSideTorso\n-                 && (unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_LT\n-                         || unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_RT)) {\n-             return true;\n-         }\n-         return false;\n+        return needsSideTorso\n+                && ((unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_LT)\n+                || (unit.getEntity().getLocationFromAbbr(loc) == Mech.LOC_RT));", "originalCommit": "3497fc1241221a09d3795363113d240daa017a52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNjE2Ng==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512926166", "bodyText": "Parts have been a place that every time I load it I get incredibly annoyed by. This PR clears out a ton of my issues with them.\nSorry that it is causing annoying merge conflicts, but... I had thought you had moved away from working on parts and thus that this would be a good time to finally do the cleanup I had wanted to do.", "author": "Windchild292", "createdAt": "2020-10-27T18:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwNjI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkwOTM1Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512909352", "bodyText": "This change will certainly get me on a merge as I'm reworking a lot of this.", "author": "sixlettervariables", "createdAt": "2020-10-27T17:56:11Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "diffHunk": "@@ -701,17 +698,13 @@ public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n         if (campaign.getCampaignOptions().useAmmoByType()) {\n             Predicate<Part> predicate;\n             if (AmmoBin.ALLOWED_BY_TYPE.contains(ammoType.getAmmoType())) {\n-                predicate = part -> {\n-                    return part instanceof AmmoStorage\n-                            && ammoType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n-                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n-                };\n+                predicate = part -> part instanceof AmmoStorage\n+                        && ammoType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n+                        && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n             } else {\n-                predicate = part -> {\n-                    return part instanceof AmmoStorage\n-                            && ammoType.equals(((AmmoStorage) part).getType())\n-                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n-                };", "originalCommit": "3497fc1241221a09d3795363113d240daa017a52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMTA3NA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512911074", "bodyText": "Can we add an issue to track this fix?", "author": "sixlettervariables", "createdAt": "2020-10-27T17:58:16Z", "path": "MekHQ/src/mekhq/service/MassRepairOption.java", "diffHunk": "@@ -134,7 +132,14 @@ public void writeToXML(PrintWriter pw1, int indent) {\n \n             try {\n                 MassRepairOption mro = parseFromXML(mroNode);\n-                if ((mro.getType() == -1) || (mro.getType() >= VALID_REPAIR_TYPES.length)) {\n+\n+                // This fixes a migration issue from 0.47.10 to 0.47.11, and will need to be implemented\n+                // properly in future.\n+                if (mro.getType() == PartRepairType.HEAT_SINK) {\n+                    mro.setType(PartRepairType.POD_SPACE);\n+                }", "originalCommit": "3497fc1241221a09d3795363113d240daa017a52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNTE0OA==", "url": "https://github.com/MegaMek/mekhq/pull/2134#discussion_r512925148", "bodyText": "#2172", "author": "Windchild292", "createdAt": "2020-10-27T18:16:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMTA3NA=="}], "type": "inlineReview"}, {"oid": "598a5a2661d634e74cc8b53b041431df8f89977b", "url": "https://github.com/MegaMek/mekhq/commit/598a5a2661d634e74cc8b53b041431df8f89977b", "message": "Fixing merge conflicts", "committedDate": "2020-11-06T21:43:20Z", "type": "commit"}, {"oid": "d9a8228aa8b2536133b0d41bf585c91202b4b7e4", "url": "https://github.com/MegaMek/mekhq/commit/d9a8228aa8b2536133b0d41bf585c91202b4b7e4", "message": "Fixing merge conflicts", "committedDate": "2020-12-04T16:55:02Z", "type": "commit"}, {"oid": "d68e105297f2b8e24ec85d743f08caca59bf2f0f", "url": "https://github.com/MegaMek/mekhq/commit/d68e105297f2b8e24ec85d743f08caca59bf2f0f", "message": "Implementing properly versioned migration", "committedDate": "2020-12-04T17:15:59Z", "type": "commit"}, {"oid": "67d0c1af0790eceab223c5731e1252d94a93b423", "url": "https://github.com/MegaMek/mekhq/commit/67d0c1af0790eceab223c5731e1252d94a93b423", "message": "Fixing merge conflicts", "committedDate": "2020-12-13T17:35:10Z", "type": "commit"}]}