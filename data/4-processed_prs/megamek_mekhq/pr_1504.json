{"pr_number": 1504, "pr_title": "Fixing LGTM Issues", "pr_createdAt": "2020-02-21T17:20:02Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1504", "timeline": [{"oid": "2f8f680146a4e61a5b526502e49e5e01bc044eda", "url": "https://github.com/MegaMek/mekhq/commit/2f8f680146a4e61a5b526502e49e5e01bc044eda", "message": "Fixing Potential Resource Leaks", "committedDate": "2020-02-21T16:12:55Z", "type": "commit"}, {"oid": "1c28eb69c5b2773c0e99fbcb3908ab69a890490f", "url": "https://github.com/MegaMek/mekhq/commit/1c28eb69c5b2773c0e99fbcb3908ab69a890490f", "message": "Fixing type mismatch between Integer and ForceAlignment", "committedDate": "2020-02-21T16:16:14Z", "type": "commit"}, {"oid": "f06afaa5f94b27ad96de518a9b04520d9faaaafa", "url": "https://github.com/MegaMek/mekhq/commit/f06afaa5f94b27ad96de518a9b04520d9faaaafa", "message": "Fixing implicit casts of double to int", "committedDate": "2020-02-21T16:52:19Z", "type": "commit"}, {"oid": "279e2549e4c7f0701e5272edd060a244a53d1ce7", "url": "https://github.com/MegaMek/mekhq/commit/279e2549e4c7f0701e5272edd060a244a53d1ce7", "message": "Fixing useless comparison checks", "committedDate": "2020-02-21T16:56:18Z", "type": "commit"}, {"oid": "a07ffac75ac1415c30890f81bc86e2669644407a", "url": "https://github.com/MegaMek/mekhq/commit/a07ffac75ac1415c30890f81bc86e2669644407a", "message": "Removing useless null checks", "committedDate": "2020-02-21T17:08:34Z", "type": "commit"}, {"oid": "3d21244ab5a3821b907f3897e9f9f276abf2996d", "url": "https://github.com/MegaMek/mekhq/commit/3d21244ab5a3821b907f3897e9f9f276abf2996d", "message": "Fixing instances of boxed variables never being null", "committedDate": "2020-02-21T17:13:07Z", "type": "commit"}, {"oid": "b8eb4528f83633e550b08eab451019282a32f464", "url": "https://github.com/MegaMek/mekhq/commit/b8eb4528f83633e550b08eab451019282a32f464", "message": "Fixing new LGTM error", "committedDate": "2020-02-21T17:49:02Z", "type": "commit"}, {"oid": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "url": "https://github.com/MegaMek/mekhq/commit/f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "message": "Fixing formatting issue", "committedDate": "2020-02-21T17:49:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MDkyMg==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382780922", "bodyText": "Would this break if placed in a try (...) { with resources block instead?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:04:40Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -134,7 +134,9 @@ public void run() {\n                 } else {\n                     File mapgenFile = new File(\"data/mapgen/\" + scenario.getMap() + \".xml\");\n                     try {\n-                        mapSettings = MapSettings.getInstance(new FileInputStream(mapgenFile));\n+                        InputStream is = new FileInputStream(mapgenFile);", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc5MjkwMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382792901", "bodyText": "Maybe? I'll push a test and see if it does", "author": "Windchild292", "createdAt": "2020-02-21T20:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MDkyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgwMjQ2Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382802467", "bodyText": "It does not appear to break, so I'll swap over to try() with resources instead.", "author": "Windchild292", "createdAt": "2020-02-21T20:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MDkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTE3MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382781171", "bodyText": "Same comment regarding try-with-resources block.", "author": "sixlettervariables", "createdAt": "2020-02-21T20:05:20Z", "path": "MekHQ/src/mekhq/campaign/AtBConfiguration.java", "diffHunk": "@@ -398,10 +399,11 @@ public static AtBConfiguration loadFromXml() {\n \n         Document xmlDoc;\n         try {\n-            FileInputStream fis = new FileInputStream(\"data/universe/atbconfig.xml\");\n+            InputStream is = new FileInputStream(\"data/universe/atbconfig.xml\");", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTMzMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382781331", "bodyText": "Just cast to double, avoid multiplying by 1.0.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n          \n          \n            \n                        leasedLargeMechDropships = noMech / (double)largeDropshipMechCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:05:48Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc5ODUwNQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382798505", "bodyText": "I just realised why that didn't work originally... I put it on the divisor instead of the dividend...", "author": "Windchild292", "createdAt": "2020-02-21T20:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTY2Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382781667", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));\n          \n          \n            \n                        leasedAverageMechDropships = noMech / (double)averageDropshipMechCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:06:35Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n             noMech -= leasedLargeMechDropships * largeDropshipMechCapacity;\n-            mechCollars += leasedLargeMechDropships;\n+            mechCollars += (int) Math.ceil(leasedLargeMechDropships);\n \n             // If there's more than a company left over, lease another Overlord. Otherwise\n             // fall through and get a Union.\n-            if(noMech > 12) {\n+            if (noMech > 12) {\n                 leasedLargeMechDropships += 1;\n                 noMech -= largeDropshipMechCapacity;\n                 mechCollars += 1;\n             }\n \n             leasedASFCapacity += leasedLargeMechDropships * largeMechDropshipASFCapacity;\n-            leasedCargoCapacity += largeMechDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(largeMechDropshipCargoCapacity);\n         }\n \n         // Unions\n-        if(noMech > 0) {\n-            leasedAverageMechDropships = noMech / averageDropshipMechCapacity;\n+        if (noMech > 0) {\n+            leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTc5Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382781792", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            leasedAverageASFDropships = (noASF / (averageDropshipASFCapacity * 1.0));\n          \n          \n            \n                            leasedAverageASFDropships = noASF / (double)averageDropshipASFCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:06:53Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n             noMech -= leasedLargeMechDropships * largeDropshipMechCapacity;\n-            mechCollars += leasedLargeMechDropships;\n+            mechCollars += (int) Math.ceil(leasedLargeMechDropships);\n \n             // If there's more than a company left over, lease another Overlord. Otherwise\n             // fall through and get a Union.\n-            if(noMech > 12) {\n+            if (noMech > 12) {\n                 leasedLargeMechDropships += 1;\n                 noMech -= largeDropshipMechCapacity;\n                 mechCollars += 1;\n             }\n \n             leasedASFCapacity += leasedLargeMechDropships * largeMechDropshipASFCapacity;\n-            leasedCargoCapacity += largeMechDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(largeMechDropshipCargoCapacity);\n         }\n \n         // Unions\n-        if(noMech > 0) {\n-            leasedAverageMechDropships = noMech / averageDropshipMechCapacity;\n+        if (noMech > 0) {\n+            leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));\n             noMech -= leasedAverageMechDropships * averageDropshipMechCapacity;\n-            mechCollars += leasedAverageMechDropships;\n+            mechCollars += (int) Math.ceil(leasedAverageMechDropships);\n \n-            // If we can fit in a smaller dropship, lease one of those instead.\n-            if(noMech > 0 && noMech < (averageDropshipMechCapacity / 2)) {\n+            // If we can fit in a smaller DropShip, lease one of those instead.\n+            if ((noMech > 0) && (noMech < (averageDropshipMechCapacity / 2))) {\n                 leasedAverageMechDropships += 0.5;\n                 mechCollars += 1;\n-            }\n-            else if(noMech > 0){\n+            } else if (noMech > 0) {\n                 leasedAverageMechDropships += 1;\n                 mechCollars += 1;\n             }\n \n-            // Our Union-ish dropship can carry some ASFs and cargo.\n+            // Our Union-ish DropShip can carry some ASFs and cargo.\n             leasedASFCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipASFCapacity);\n             leasedCargoCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipCargoCapacity);\n         }\n \n         // Leopard CVs\n-        if(noASF > leasedASFCapacity) {\n+        if (noASF > leasedASFCapacity) {\n             noASF -= leasedASFCapacity;\n \n-            if(noASF > 0) {\n-                leasedAverageASFDropships = noASF / averageDropshipASFCapacity;\n+            if (noASF > 0) {\n+                leasedAverageASFDropships = (noASF / (averageDropshipASFCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MTkwMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382781901", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        leasedLargeVehicleDropships = (noVehicles / (largeDropshipVehicleCapacity * 1.0));\n          \n          \n            \n                        leasedLargeVehicleDropships = noVehicles / (double)largeDropshipVehicleCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:07:12Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n             noMech -= leasedLargeMechDropships * largeDropshipMechCapacity;\n-            mechCollars += leasedLargeMechDropships;\n+            mechCollars += (int) Math.ceil(leasedLargeMechDropships);\n \n             // If there's more than a company left over, lease another Overlord. Otherwise\n             // fall through and get a Union.\n-            if(noMech > 12) {\n+            if (noMech > 12) {\n                 leasedLargeMechDropships += 1;\n                 noMech -= largeDropshipMechCapacity;\n                 mechCollars += 1;\n             }\n \n             leasedASFCapacity += leasedLargeMechDropships * largeMechDropshipASFCapacity;\n-            leasedCargoCapacity += largeMechDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(largeMechDropshipCargoCapacity);\n         }\n \n         // Unions\n-        if(noMech > 0) {\n-            leasedAverageMechDropships = noMech / averageDropshipMechCapacity;\n+        if (noMech > 0) {\n+            leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));\n             noMech -= leasedAverageMechDropships * averageDropshipMechCapacity;\n-            mechCollars += leasedAverageMechDropships;\n+            mechCollars += (int) Math.ceil(leasedAverageMechDropships);\n \n-            // If we can fit in a smaller dropship, lease one of those instead.\n-            if(noMech > 0 && noMech < (averageDropshipMechCapacity / 2)) {\n+            // If we can fit in a smaller DropShip, lease one of those instead.\n+            if ((noMech > 0) && (noMech < (averageDropshipMechCapacity / 2))) {\n                 leasedAverageMechDropships += 0.5;\n                 mechCollars += 1;\n-            }\n-            else if(noMech > 0){\n+            } else if (noMech > 0) {\n                 leasedAverageMechDropships += 1;\n                 mechCollars += 1;\n             }\n \n-            // Our Union-ish dropship can carry some ASFs and cargo.\n+            // Our Union-ish DropShip can carry some ASFs and cargo.\n             leasedASFCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipASFCapacity);\n             leasedCargoCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipCargoCapacity);\n         }\n \n         // Leopard CVs\n-        if(noASF > leasedASFCapacity) {\n+        if (noASF > leasedASFCapacity) {\n             noASF -= leasedASFCapacity;\n \n-            if(noASF > 0) {\n-                leasedAverageASFDropships = noASF / averageDropshipASFCapacity;\n+            if (noASF > 0) {\n+                leasedAverageASFDropships = (noASF / (averageDropshipASFCapacity * 1.0));\n                 noASF -= leasedAverageASFDropships * averageDropshipASFCapacity;\n-                asfCollars += leasedAverageASFDropships;\n+                asfCollars += (int) Math.ceil(leasedAverageASFDropships);\n \n-                if (noASF > 0 && noASF < (averageDropshipASFCapacity / 2)) {\n+                if ((noASF > 0) && (noASF < (averageDropshipASFCapacity / 2))) {\n                     leasedAverageASFDropships += 0.5;\n                     asfCollars += 1;\n-                }\n-                else if (noASF > 0) {\n+                } else if (noASF > 0) {\n                     leasedAverageASFDropships += 1;\n                     asfCollars += 1;\n                 }\n             }\n \n-            // Our Leopard-ish dropship can carry some cargo.\n-            leasedCargoCapacity += (asfDropshipCargoCapacity * leasedAverageASFDropships);\n+            // Our Leopard-ish DropShip can carry some cargo.\n+            leasedCargoCapacity += (int) Math.floor(asfDropshipCargoCapacity * leasedAverageASFDropships);\n         }\n \n         // Triumphs\n-        if(noVehicles > averageDropshipVehicleCapacity) {\n-            leasedLargeVehicleDropships = noVehicles / largeDropshipVehicleCapacity;\n+        if (noVehicles > averageDropshipVehicleCapacity) {\n+            leasedLargeVehicleDropships = (noVehicles / (largeDropshipVehicleCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjA4Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382782086", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        leasedAverageVehicleDropships = ((nohv + newNolv) / (averageDropshipVehicleCapacity * 1.0));\n          \n          \n            \n                        leasedAverageVehicleDropships = (nohv + newNolv) / (double)averageDropshipVehicleCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:07:40Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n             noMech -= leasedLargeMechDropships * largeDropshipMechCapacity;\n-            mechCollars += leasedLargeMechDropships;\n+            mechCollars += (int) Math.ceil(leasedLargeMechDropships);\n \n             // If there's more than a company left over, lease another Overlord. Otherwise\n             // fall through and get a Union.\n-            if(noMech > 12) {\n+            if (noMech > 12) {\n                 leasedLargeMechDropships += 1;\n                 noMech -= largeDropshipMechCapacity;\n                 mechCollars += 1;\n             }\n \n             leasedASFCapacity += leasedLargeMechDropships * largeMechDropshipASFCapacity;\n-            leasedCargoCapacity += largeMechDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(largeMechDropshipCargoCapacity);\n         }\n \n         // Unions\n-        if(noMech > 0) {\n-            leasedAverageMechDropships = noMech / averageDropshipMechCapacity;\n+        if (noMech > 0) {\n+            leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));\n             noMech -= leasedAverageMechDropships * averageDropshipMechCapacity;\n-            mechCollars += leasedAverageMechDropships;\n+            mechCollars += (int) Math.ceil(leasedAverageMechDropships);\n \n-            // If we can fit in a smaller dropship, lease one of those instead.\n-            if(noMech > 0 && noMech < (averageDropshipMechCapacity / 2)) {\n+            // If we can fit in a smaller DropShip, lease one of those instead.\n+            if ((noMech > 0) && (noMech < (averageDropshipMechCapacity / 2))) {\n                 leasedAverageMechDropships += 0.5;\n                 mechCollars += 1;\n-            }\n-            else if(noMech > 0){\n+            } else if (noMech > 0) {\n                 leasedAverageMechDropships += 1;\n                 mechCollars += 1;\n             }\n \n-            // Our Union-ish dropship can carry some ASFs and cargo.\n+            // Our Union-ish DropShip can carry some ASFs and cargo.\n             leasedASFCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipASFCapacity);\n             leasedCargoCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipCargoCapacity);\n         }\n \n         // Leopard CVs\n-        if(noASF > leasedASFCapacity) {\n+        if (noASF > leasedASFCapacity) {\n             noASF -= leasedASFCapacity;\n \n-            if(noASF > 0) {\n-                leasedAverageASFDropships = noASF / averageDropshipASFCapacity;\n+            if (noASF > 0) {\n+                leasedAverageASFDropships = (noASF / (averageDropshipASFCapacity * 1.0));\n                 noASF -= leasedAverageASFDropships * averageDropshipASFCapacity;\n-                asfCollars += leasedAverageASFDropships;\n+                asfCollars += (int) Math.ceil(leasedAverageASFDropships);\n \n-                if (noASF > 0 && noASF < (averageDropshipASFCapacity / 2)) {\n+                if ((noASF > 0) && (noASF < (averageDropshipASFCapacity / 2))) {\n                     leasedAverageASFDropships += 0.5;\n                     asfCollars += 1;\n-                }\n-                else if (noASF > 0) {\n+                } else if (noASF > 0) {\n                     leasedAverageASFDropships += 1;\n                     asfCollars += 1;\n                 }\n             }\n \n-            // Our Leopard-ish dropship can carry some cargo.\n-            leasedCargoCapacity += (asfDropshipCargoCapacity * leasedAverageASFDropships);\n+            // Our Leopard-ish DropShip can carry some cargo.\n+            leasedCargoCapacity += (int) Math.floor(asfDropshipCargoCapacity * leasedAverageASFDropships);\n         }\n \n         // Triumphs\n-        if(noVehicles > averageDropshipVehicleCapacity) {\n-            leasedLargeVehicleDropships = noVehicles / largeDropshipVehicleCapacity;\n+        if (noVehicles > averageDropshipVehicleCapacity) {\n+            leasedLargeVehicleDropships = (noVehicles / (largeDropshipVehicleCapacity * 1.0));\n             noVehicles -= leasedLargeVehicleDropships * largeDropshipVehicleCapacity;\n-            vehicleCollars += leasedLargeVehicleDropships;\n+            vehicleCollars += (int) Math.ceil(leasedLargeVehicleDropships);\n \n-            if(noVehicles > averageDropshipVehicleCapacity) {\n+            if (noVehicles > averageDropshipVehicleCapacity) {\n                 leasedLargeVehicleDropships += 1;\n                 noVehicles -= largeDropshipVehicleCapacity;\n                 vehicleCollars += 1;\n             }\n \n-            leasedCargoCapacity += leasedLargeVehicleDropships * largeVehicleDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(leasedLargeVehicleDropships * largeVehicleDropshipCargoCapacity);\n         }\n \n         // Gazelles\n-        if(noVehicles > 0) {\n-            leasedAverageVehicleDropships = (nohv + newNolv) / averageDropshipVehicleCapacity;\n-            noVehicles = (int)((nohv + newNolv) - leasedAverageVehicleDropships * averageDropshipVehicleCapacity);\n-            vehicleCollars += leasedAverageVehicleDropships;\n+        if (noVehicles > 0) {\n+            leasedAverageVehicleDropships = ((nohv + newNolv) / (averageDropshipVehicleCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjE3NA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382782174", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        leasedLargeCargoDropships = (noCargo / (largeDropshipCargoCapacity * 1.0));\n          \n          \n            \n                        leasedLargeCargoDropships = noCargo / (double)largeDropshipCargoCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:07:53Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n             noMech -= leasedLargeMechDropships * largeDropshipMechCapacity;\n-            mechCollars += leasedLargeMechDropships;\n+            mechCollars += (int) Math.ceil(leasedLargeMechDropships);\n \n             // If there's more than a company left over, lease another Overlord. Otherwise\n             // fall through and get a Union.\n-            if(noMech > 12) {\n+            if (noMech > 12) {\n                 leasedLargeMechDropships += 1;\n                 noMech -= largeDropshipMechCapacity;\n                 mechCollars += 1;\n             }\n \n             leasedASFCapacity += leasedLargeMechDropships * largeMechDropshipASFCapacity;\n-            leasedCargoCapacity += largeMechDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(largeMechDropshipCargoCapacity);\n         }\n \n         // Unions\n-        if(noMech > 0) {\n-            leasedAverageMechDropships = noMech / averageDropshipMechCapacity;\n+        if (noMech > 0) {\n+            leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));\n             noMech -= leasedAverageMechDropships * averageDropshipMechCapacity;\n-            mechCollars += leasedAverageMechDropships;\n+            mechCollars += (int) Math.ceil(leasedAverageMechDropships);\n \n-            // If we can fit in a smaller dropship, lease one of those instead.\n-            if(noMech > 0 && noMech < (averageDropshipMechCapacity / 2)) {\n+            // If we can fit in a smaller DropShip, lease one of those instead.\n+            if ((noMech > 0) && (noMech < (averageDropshipMechCapacity / 2))) {\n                 leasedAverageMechDropships += 0.5;\n                 mechCollars += 1;\n-            }\n-            else if(noMech > 0){\n+            } else if (noMech > 0) {\n                 leasedAverageMechDropships += 1;\n                 mechCollars += 1;\n             }\n \n-            // Our Union-ish dropship can carry some ASFs and cargo.\n+            // Our Union-ish DropShip can carry some ASFs and cargo.\n             leasedASFCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipASFCapacity);\n             leasedCargoCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipCargoCapacity);\n         }\n \n         // Leopard CVs\n-        if(noASF > leasedASFCapacity) {\n+        if (noASF > leasedASFCapacity) {\n             noASF -= leasedASFCapacity;\n \n-            if(noASF > 0) {\n-                leasedAverageASFDropships = noASF / averageDropshipASFCapacity;\n+            if (noASF > 0) {\n+                leasedAverageASFDropships = (noASF / (averageDropshipASFCapacity * 1.0));\n                 noASF -= leasedAverageASFDropships * averageDropshipASFCapacity;\n-                asfCollars += leasedAverageASFDropships;\n+                asfCollars += (int) Math.ceil(leasedAverageASFDropships);\n \n-                if (noASF > 0 && noASF < (averageDropshipASFCapacity / 2)) {\n+                if ((noASF > 0) && (noASF < (averageDropshipASFCapacity / 2))) {\n                     leasedAverageASFDropships += 0.5;\n                     asfCollars += 1;\n-                }\n-                else if (noASF > 0) {\n+                } else if (noASF > 0) {\n                     leasedAverageASFDropships += 1;\n                     asfCollars += 1;\n                 }\n             }\n \n-            // Our Leopard-ish dropship can carry some cargo.\n-            leasedCargoCapacity += (asfDropshipCargoCapacity * leasedAverageASFDropships);\n+            // Our Leopard-ish DropShip can carry some cargo.\n+            leasedCargoCapacity += (int) Math.floor(asfDropshipCargoCapacity * leasedAverageASFDropships);\n         }\n \n         // Triumphs\n-        if(noVehicles > averageDropshipVehicleCapacity) {\n-            leasedLargeVehicleDropships = noVehicles / largeDropshipVehicleCapacity;\n+        if (noVehicles > averageDropshipVehicleCapacity) {\n+            leasedLargeVehicleDropships = (noVehicles / (largeDropshipVehicleCapacity * 1.0));\n             noVehicles -= leasedLargeVehicleDropships * largeDropshipVehicleCapacity;\n-            vehicleCollars += leasedLargeVehicleDropships;\n+            vehicleCollars += (int) Math.ceil(leasedLargeVehicleDropships);\n \n-            if(noVehicles > averageDropshipVehicleCapacity) {\n+            if (noVehicles > averageDropshipVehicleCapacity) {\n                 leasedLargeVehicleDropships += 1;\n                 noVehicles -= largeDropshipVehicleCapacity;\n                 vehicleCollars += 1;\n             }\n \n-            leasedCargoCapacity += leasedLargeVehicleDropships * largeVehicleDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(leasedLargeVehicleDropships * largeVehicleDropshipCargoCapacity);\n         }\n \n         // Gazelles\n-        if(noVehicles > 0) {\n-            leasedAverageVehicleDropships = (nohv + newNolv) / averageDropshipVehicleCapacity;\n-            noVehicles = (int)((nohv + newNolv) - leasedAverageVehicleDropships * averageDropshipVehicleCapacity);\n-            vehicleCollars += leasedAverageVehicleDropships;\n+        if (noVehicles > 0) {\n+            leasedAverageVehicleDropships = ((nohv + newNolv) / (averageDropshipVehicleCapacity * 1.0));\n+            noVehicles = (int) ((nohv + newNolv) - leasedAverageVehicleDropships * averageDropshipVehicleCapacity);\n+            vehicleCollars += (int) Math.ceil(leasedAverageVehicleDropships);\n \n             // Gazelles are pretty minimal, so no half-measures.\n-            if(noVehicles > 0) {\n+            if (noVehicles > 0) {\n                 leasedAverageVehicleDropships += 1;\n                 noVehicles -= averageDropshipVehicleCapacity;\n                 vehicleCollars += 1;\n             }\n \n-            // Our Gazelle-ish dropship can carry some cargo.\n-            leasedCargoCapacity += (vehicleDropshipCargoCapacity * leasedAverageVehicleDropships);\n+            // Our Gazelle-ish DropShip can carry some cargo.\n+            leasedCargoCapacity += (int) Math.floor(vehicleDropshipCargoCapacity * leasedAverageVehicleDropships);\n         }\n \n         // Do we have any leftover cargo?\n         noCargo -= leasedCargoCapacity;\n \n         // Mules\n-        if(noCargo > averageDropshipCargoCapacity) {\n-            leasedLargeCargoDropships = noCargo / largeDropshipCargoCapacity;\n+        if (noCargo > averageDropshipCargoCapacity) {\n+            leasedLargeCargoDropships = (noCargo / (largeDropshipCargoCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjI2NA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382782264", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        leasedAverageCargoDropships = (noCargo / (averageDropshipCargoCapacity * 1.0));\n          \n          \n            \n                        leasedAverageCargoDropships = noCargo / (double)averageDropshipCargoCapacity;", "author": "sixlettervariables", "createdAt": "2020-02-21T20:08:06Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -5249,126 +5249,123 @@ public Money calculateCostPerJump(boolean excludeOwnTransports, boolean campaign\n         // to transport the force. Smaller dropships are represented by half-dropships.\n \n         // If we're transporting more than a company, Overlord analogues are more efficient.\n-        if(noMech > 12) {\n-            leasedLargeMechDropships = noMech / largeDropshipMechCapacity;\n+        if (noMech > 12) {\n+            leasedLargeMechDropships = (noMech / (largeDropshipMechCapacity * 1.0));\n             noMech -= leasedLargeMechDropships * largeDropshipMechCapacity;\n-            mechCollars += leasedLargeMechDropships;\n+            mechCollars += (int) Math.ceil(leasedLargeMechDropships);\n \n             // If there's more than a company left over, lease another Overlord. Otherwise\n             // fall through and get a Union.\n-            if(noMech > 12) {\n+            if (noMech > 12) {\n                 leasedLargeMechDropships += 1;\n                 noMech -= largeDropshipMechCapacity;\n                 mechCollars += 1;\n             }\n \n             leasedASFCapacity += leasedLargeMechDropships * largeMechDropshipASFCapacity;\n-            leasedCargoCapacity += largeMechDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(largeMechDropshipCargoCapacity);\n         }\n \n         // Unions\n-        if(noMech > 0) {\n-            leasedAverageMechDropships = noMech / averageDropshipMechCapacity;\n+        if (noMech > 0) {\n+            leasedAverageMechDropships = (noMech / (averageDropshipMechCapacity * 1.0));\n             noMech -= leasedAverageMechDropships * averageDropshipMechCapacity;\n-            mechCollars += leasedAverageMechDropships;\n+            mechCollars += (int) Math.ceil(leasedAverageMechDropships);\n \n-            // If we can fit in a smaller dropship, lease one of those instead.\n-            if(noMech > 0 && noMech < (averageDropshipMechCapacity / 2)) {\n+            // If we can fit in a smaller DropShip, lease one of those instead.\n+            if ((noMech > 0) && (noMech < (averageDropshipMechCapacity / 2))) {\n                 leasedAverageMechDropships += 0.5;\n                 mechCollars += 1;\n-            }\n-            else if(noMech > 0){\n+            } else if (noMech > 0) {\n                 leasedAverageMechDropships += 1;\n                 mechCollars += 1;\n             }\n \n-            // Our Union-ish dropship can carry some ASFs and cargo.\n+            // Our Union-ish DropShip can carry some ASFs and cargo.\n             leasedASFCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipASFCapacity);\n             leasedCargoCapacity += (int) Math.floor(leasedAverageMechDropships * mechDropshipCargoCapacity);\n         }\n \n         // Leopard CVs\n-        if(noASF > leasedASFCapacity) {\n+        if (noASF > leasedASFCapacity) {\n             noASF -= leasedASFCapacity;\n \n-            if(noASF > 0) {\n-                leasedAverageASFDropships = noASF / averageDropshipASFCapacity;\n+            if (noASF > 0) {\n+                leasedAverageASFDropships = (noASF / (averageDropshipASFCapacity * 1.0));\n                 noASF -= leasedAverageASFDropships * averageDropshipASFCapacity;\n-                asfCollars += leasedAverageASFDropships;\n+                asfCollars += (int) Math.ceil(leasedAverageASFDropships);\n \n-                if (noASF > 0 && noASF < (averageDropshipASFCapacity / 2)) {\n+                if ((noASF > 0) && (noASF < (averageDropshipASFCapacity / 2))) {\n                     leasedAverageASFDropships += 0.5;\n                     asfCollars += 1;\n-                }\n-                else if (noASF > 0) {\n+                } else if (noASF > 0) {\n                     leasedAverageASFDropships += 1;\n                     asfCollars += 1;\n                 }\n             }\n \n-            // Our Leopard-ish dropship can carry some cargo.\n-            leasedCargoCapacity += (asfDropshipCargoCapacity * leasedAverageASFDropships);\n+            // Our Leopard-ish DropShip can carry some cargo.\n+            leasedCargoCapacity += (int) Math.floor(asfDropshipCargoCapacity * leasedAverageASFDropships);\n         }\n \n         // Triumphs\n-        if(noVehicles > averageDropshipVehicleCapacity) {\n-            leasedLargeVehicleDropships = noVehicles / largeDropshipVehicleCapacity;\n+        if (noVehicles > averageDropshipVehicleCapacity) {\n+            leasedLargeVehicleDropships = (noVehicles / (largeDropshipVehicleCapacity * 1.0));\n             noVehicles -= leasedLargeVehicleDropships * largeDropshipVehicleCapacity;\n-            vehicleCollars += leasedLargeVehicleDropships;\n+            vehicleCollars += (int) Math.ceil(leasedLargeVehicleDropships);\n \n-            if(noVehicles > averageDropshipVehicleCapacity) {\n+            if (noVehicles > averageDropshipVehicleCapacity) {\n                 leasedLargeVehicleDropships += 1;\n                 noVehicles -= largeDropshipVehicleCapacity;\n                 vehicleCollars += 1;\n             }\n \n-            leasedCargoCapacity += leasedLargeVehicleDropships * largeVehicleDropshipCargoCapacity;\n+            leasedCargoCapacity += (int) Math.floor(leasedLargeVehicleDropships * largeVehicleDropshipCargoCapacity);\n         }\n \n         // Gazelles\n-        if(noVehicles > 0) {\n-            leasedAverageVehicleDropships = (nohv + newNolv) / averageDropshipVehicleCapacity;\n-            noVehicles = (int)((nohv + newNolv) - leasedAverageVehicleDropships * averageDropshipVehicleCapacity);\n-            vehicleCollars += leasedAverageVehicleDropships;\n+        if (noVehicles > 0) {\n+            leasedAverageVehicleDropships = ((nohv + newNolv) / (averageDropshipVehicleCapacity * 1.0));\n+            noVehicles = (int) ((nohv + newNolv) - leasedAverageVehicleDropships * averageDropshipVehicleCapacity);\n+            vehicleCollars += (int) Math.ceil(leasedAverageVehicleDropships);\n \n             // Gazelles are pretty minimal, so no half-measures.\n-            if(noVehicles > 0) {\n+            if (noVehicles > 0) {\n                 leasedAverageVehicleDropships += 1;\n                 noVehicles -= averageDropshipVehicleCapacity;\n                 vehicleCollars += 1;\n             }\n \n-            // Our Gazelle-ish dropship can carry some cargo.\n-            leasedCargoCapacity += (vehicleDropshipCargoCapacity * leasedAverageVehicleDropships);\n+            // Our Gazelle-ish DropShip can carry some cargo.\n+            leasedCargoCapacity += (int) Math.floor(vehicleDropshipCargoCapacity * leasedAverageVehicleDropships);\n         }\n \n         // Do we have any leftover cargo?\n         noCargo -= leasedCargoCapacity;\n \n         // Mules\n-        if(noCargo > averageDropshipCargoCapacity) {\n-            leasedLargeCargoDropships = noCargo / largeDropshipCargoCapacity;\n+        if (noCargo > averageDropshipCargoCapacity) {\n+            leasedLargeCargoDropships = (noCargo / (largeDropshipCargoCapacity * 1.0));\n             noCargo -= leasedLargeCargoDropships * largeDropshipCargoCapacity;\n-            cargoCollars += leasedLargeCargoDropships;\n+            cargoCollars += (int) Math.ceil(leasedLargeCargoDropships);\n \n-            if(noCargo > averageDropshipCargoCapacity) {\n+            if (noCargo > averageDropshipCargoCapacity) {\n                 leasedLargeCargoDropships += 1;\n                 noCargo -= largeDropshipCargoCapacity;\n                 cargoCollars += 1;\n             }\n         }\n \n         // Buccaneers\n-        if(noCargo > 0) {\n-            leasedAverageCargoDropships = noCargo / averageDropshipCargoCapacity;\n-            cargoCollars += leasedAverageCargoDropships;\n+        if (noCargo > 0) {\n+            leasedAverageCargoDropships = (noCargo / (averageDropshipCargoCapacity * 1.0));", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjU4Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382782582", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:08:51Z", "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -429,19 +448,18 @@ private void writeForce(Force force, int parent) {\n     }\n \n     private void writePersonnelData() {\n-\n-\n         //check for a uuid column\n         try {\n             //add in a UUID column if not already present\n-            if(!hasColumn(statement.executeQuery(\"SELECT * FROM \" + table + \".crew\"), \"uuid\")) {\n+            ResultSet rs = statement.executeQuery(\"SELECT * FROM \" + table + \".crew\");", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjY2NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382782665", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:09:02Z", "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -534,9 +553,11 @@ private void writeEquipmentData() {\n         //check for a uuid column\n         try {\n             //add in a UUID column if not already present\n-            if(!hasColumn(statement.executeQuery(\"SELECT * FROM \" + table + \".equipment\"), \"uuid\")) {\n+            ResultSet rs = statement.executeQuery(\"SELECT * FROM \" + table + \".equipment\");", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MzM4Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382783386", "bodyText": "Put a break; here for good measure.", "author": "sixlettervariables", "createdAt": "2020-02-21T20:10:45Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1546,6 +1535,8 @@ private int getTimeMultiplier() {\n         case CLASS_F:\n             mult = 5;\n             break;\n+        case CLASS_A:\n+        case CLASS_B:\n         default:\n             mult = 1;\n         }", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc5NzcwMA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382797700", "bodyText": "Good idea, and I fixed the formatting for it too.", "author": "Windchild292", "createdAt": "2020-02-21T20:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MzM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NDIxMA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382784210", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:12:38Z", "path": "MekHQ/src/mekhq/campaign/personnel/AwardsFactory.java", "diffHunk": "@@ -148,13 +144,14 @@ private void loadAwards() {\n         if(files == null) {\n             return;\n         }\n-        \n+\n         for(File file : files) {\n             try{\n                 InputStream inputStream = new FileInputStream(file);", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NDI4Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382784287", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:12:48Z", "path": "MekHQ/src/mekhq/campaign/personnel/CustomOption.java", "diffHunk": "@@ -79,12 +95,13 @@ private static void initCustomAbilities() {\n \n \n         try {\n-            FileInputStream fis = new FileInputStream(\"data/universe/customspa.xml\");\n+            InputStream is = new FileInputStream(\"data/universe/customspa.xml\");", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NDkzMw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382784933", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (C) 2020 MegaMek team\n          \n          \n            \n             * Copyright (C) 2013, 2020 MegaMek team\n          \n      \n    \n    \n  \n\nPer:\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/campaign/MercRosterAccess.java\ncommit ab787b6\nAuthor: bombaijin bombaijin@4d104363-cc00-4a03-b0b8-302e3804504c\nDate:   Thu Apr 4 18:22:46 2013 +0000\n\nupload data to mercroster (wip)", "author": "sixlettervariables", "createdAt": "2020-02-21T20:14:31Z", "path": "MekHQ/src/mekhq/campaign/MercRosterAccess.java", "diffHunk": "@@ -1,3 +1,21 @@\n+/*\n+ * Copyright (C) 2020 MegaMek team", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NTI4Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382785282", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2020 The MegaMek Team. All rights reserved.\n          \n          \n            \n             * Copyright (c) 2018, 2020 The MegaMek Team. All rights reserved.\n          \n      \n    \n    \n  \n\nPer:\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/campaign/personnel/CustomOption.java\ncommit c6a217f\nAuthor: Carl Spain neoancient@megamek.org\nDate:   Thu Jan 18 22:19:18 2018 -0600\nFile in data/universe that lists custom SPAs/edge triggers/implants.\nThis file is parsed when PersonnelOption is initialized and added to the\nlist of options before it is locked.", "author": "sixlettervariables", "createdAt": "2020-02-21T20:15:23Z", "path": "MekHQ/src/mekhq/campaign/personnel/CustomOption.java", "diffHunk": "@@ -1,9 +1,25 @@\n-/**\n- * \n+/*\n+ * Copyright (c) 2020 The MegaMek Team. All rights reserved.", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NTQwOA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382785408", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:15:42Z", "path": "MekHQ/src/mekhq/campaign/personnel/Ranks.java", "diffHunk": "@@ -124,20 +124,20 @@ public Ranks(int system) {\n     public static void initializeRankSystems() {\n         final String METHOD_NAME = \"initializeRankSystems()\"; //$NON-NLS-1$\n \n-        rankSystems = new Hashtable<Integer, Ranks>();\n+        rankSystems = new Hashtable<>();\n         MekHQ.getLogger().log(Ranks.class, METHOD_NAME, LogLevel.INFO,\n                 \"Starting load of Rank Systems from XML...\"); //$NON-NLS-1$\n         // Initialize variables.\n         Document xmlDoc = null;\n \n-\n         try {\n-            FileInputStream fis = new FileInputStream(\"data/universe/ranks.xml\");\n+            InputStream is = new FileInputStream(\"data/universe/ranks.xml\");", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NTcxNw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382785717", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:16:26Z", "path": "MekHQ/src/mekhq/campaign/personnel/SpecialAbility.java", "diffHunk": "@@ -484,12 +479,13 @@ public static void initializeSPA() {\n         Document xmlDoc = null;\n \n         try {\n-            FileInputStream fis = new FileInputStream(\"data/universe/defaultspa.xml\");\n+            InputStream is = new FileInputStream(\"data/universe/defaultspa.xml\");", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjA2MA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382786060", "bodyText": "The cast here was to ensure static analysis tools knew we wanted integer division.", "author": "sixlettervariables", "createdAt": "2020-02-21T20:17:17Z", "path": "MekHQ/src/mekhq/campaign/rating/FieldManualMercRevDragoonsRating.java", "diffHunk": "@@ -305,7 +306,7 @@ private void calcMedicalSupportHoursNeeded() {\n         int activePersonnelCount = getCampaign().getActivePersonnel().size();\n \n         // Calculated based on 7-person squads\n-        int numSquads = (int) (activePersonnelCount / 7); // integer division intended", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc5NjkyMA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382796920", "bodyText": "Idea is detecting this fine, and it looks like LGTM is too, which makes the cast redundant (the comment is super useful if you look there though)", "author": "Windchild292", "createdAt": "2020-02-21T20:44:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjEyNA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382786124", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:17:29Z", "path": "MekHQ/src/mekhq/campaign/universe/FactionHints.java", "diffHunk": "@@ -458,10 +458,11 @@ private void loadFactionHints() throws DOMException, ParseException {\n         Document xmlDoc = null;\n \n         try {\n-            FileInputStream fis = new FileInputStream(FACTION_HINTS_FILE); //$NON-NLS-1$\n+            InputStream is = new FileInputStream(FACTION_HINTS_FILE); //$NON-NLS-1$", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjU3MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382786571", "bodyText": "try-with-resources? (the ones in this file)", "author": "sixlettervariables", "createdAt": "2020-02-21T20:18:37Z", "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -2296,7 +2295,7 @@ protected void loadPersonFile() throws IOException {\n \n         if (personnelFile != null) {\n             // Open up the file.\n-            InputStream fis = new FileInputStream(personnelFile);\n+            InputStream is = new FileInputStream(personnelFile);", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjYzNg==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382786636", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:18:47Z", "path": "MekHQ/src/mekhq/gui/GUI.java", "diffHunk": "@@ -58,10 +58,10 @@\n     static {\n         mhqPreferences = new Properties();\n         try {\n-            mhqPreferences.load(new FileInputStream(MekHQ.PREFERENCES_FILE));\n-        } catch (@SuppressWarnings(\"unused\") IOException e) {\n-            // ignored\n-        }\n+            InputStream is = new FileInputStream(MekHQ.PREFERENCES_FILE);", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4Njk5OA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382786998", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2020  - The MegaMek Team\n          \n          \n            \n             * Copyright (c) 2014, 2020  - The MegaMek Team\n          \n      \n    \n    \n  \n\nPer:\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/gui/adapter/ServicedUnitsTableMouseAdapter.java\ncommit 2790cb5\nAuthor: Dylan Myers Dylan-M@users.noreply.github.com\nDate:   Fri Dec 19 10:52:44 2014 +0000\n\nMajor refactor of CampaignGUI phase 2\nSplit out:\nOrgTreeMouseAdapter\nPartsTableMouseAdapter\nServicedUnitsTableMouseAdapter\nAll of the areAllXXX and doAllXXX check methods into a new mekhq.gui.utils.StaticChecks class,\nand made them all static", "author": "sixlettervariables", "createdAt": "2020-02-21T20:19:40Z", "path": "MekHQ/src/mekhq/gui/adapter/ServicedUnitsTableMouseAdapter.java", "diffHunk": "@@ -1,3 +1,21 @@\n+/*\n+ * Copyright (c) 2020  - The MegaMek Team", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NzI1NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382787255", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2020  - The MegaMek Team\n          \n          \n            \n             * Copyright (c) 2018, 2020  - The MegaMek Team\n          \n      \n    \n    \n  \n\nPer:\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/gui/adapter/TOEMouseAdapter.java\ncommit 2c0d4e5\nAuthor: Dylan Myers dylan.myers@bluemedora.com\nDate:   Tue Mar 13 07:39:32 2018 -0400\nRefactor the TOE classes to a clearer name", "author": "sixlettervariables", "createdAt": "2020-02-21T20:20:20Z", "path": "MekHQ/src/mekhq/gui/adapter/TOEMouseAdapter.java", "diffHunk": "@@ -1,3 +1,21 @@\n+/*\n+ * Copyright (c) 2020  - The MegaMek Team", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NzY0Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382787647", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2020  - The MegaMek Team\n          \n          \n            \n             * Copyright (c) 2009, 2016, 2020  - The MegaMek Team\n          \n      \n    \n    \n  \n\nPer:\n\nCreated on October 1, 2009, 3:10 PM\n\nand\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/gui/dialog/ImageChoiceDialog.java\ncommit 24cc46b\nAuthor: Dylan Myers ralgith@gmail.com\nDate:   Fri Sep 23 18:57:46 2016 -0400\n\nRefactored PortraitChoiceDialog to be ImageChoiceDialog since it's used for more than one thing", "author": "sixlettervariables", "createdAt": "2020-02-21T20:21:18Z", "path": "MekHQ/src/mekhq/gui/dialog/ImageChoiceDialog.java", "diffHunk": "@@ -1,9 +1,21 @@\n /*\n- * ImageChoiceDialog.java\n+ * Copyright (c) 2020  - The MegaMek Team", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4ODIyOA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382788228", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2020  - The MegaMek Team\n          \n          \n            \n             * Copyright (c) 2009, 2013, 2020  - The MegaMek Team\n          \n      \n    \n    \n  \n\nPer:\n\nCreated on August 21, 2009, 4:26 PM\n\nand\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\ncommit 8307934\nAuthor: Dylan Myers Dylan-M@users.noreply.github.com\nDate:   Mon Sep 16 05:51:14 2013 +0000\n\nRFE: Personnel Market - This market should be used in place of Hire and Hire in Bulk options and provides a more realistic atmosphere of transient personnel availability", "author": "sixlettervariables", "createdAt": "2020-02-21T20:22:39Z", "path": "MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java", "diffHunk": "@@ -1,9 +1,21 @@\n /*\n- * UnitSelectorDialog.java\n+ * Copyright (c) 2020  - The MegaMek Team", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4ODYxNw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382788617", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2020 The MegaMek Team. All rights reserved.\n          \n          \n            \n             * Copyright (c) 2018, 2020 The MegaMek Team. All rights reserved.\n          \n      \n    \n    \n  \n\nPer:\n\n$ git log --diff-filter=A -- MekHQ/src/mekhq/module/ScriptPluginManager.java\ncommit e568f25 (origin/plugin)\nAuthor: Carl Spain neoancient@megamek.org\nDate:   Sun Jun 17 22:07:36 2018 -0500\nAdded support for plugins requiring a script engine.\nThe JRE includes support for JavaScript. Users can add support for other\nlanguages by adding the engine jar to the plugin directory, where it\nwill be dynamically loaded as a service. The engine is selected based on\nthe script's file extension.", "author": "sixlettervariables", "createdAt": "2020-02-21T20:23:43Z", "path": "MekHQ/src/mekhq/module/ScriptPluginManager.java", "diffHunk": "@@ -1,11 +1,24 @@\n-/**\n- * \n+/*\n+ * Copyright (c) 2020 The MegaMek Team. All rights reserved.", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4ODczOA==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382788738", "bodyText": "try-with-resources?", "author": "sixlettervariables", "createdAt": "2020-02-21T20:23:59Z", "path": "MekHQ/src/mekhq/module/ScriptPluginManager.java", "diffHunk": "@@ -61,25 +74,27 @@ private void loadModules() {\n             }\n         }\n     }\n-    \n+\n     private void addModule(File script, String extension) {\n         final String METHOD_NAME = \"addModule(File)\"; //$NON-NLS-1$\n-        \n+\n         ScriptEngine engine = scriptEngineManager.getEngineByExtension(extension);\n         if (null == engine) {\n             MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.WARNING,\n                     \"Could not find script engine for extension \" + extension);\n             return;\n         }\n         try {\n-            engine.eval(new FileReader(script));\n+            Reader fileReader = new FileReader(script);", "originalCommit": "f2f867424d994c3c4af6e0f3ac4a0e4d44d23103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "669408476a71879cffc4a0acf605ffc85f653f2b", "url": "https://github.com/MegaMek/mekhq/commit/669408476a71879cffc4a0acf605ffc85f653f2b", "message": "Changing a try catch to a try(resources) catch", "committedDate": "2020-02-21T20:39:00Z", "type": "commit"}, {"oid": "02f5471e4e3640f8115ab3941a6fe90807faf4d3", "url": "https://github.com/MegaMek/mekhq/commit/02f5471e4e3640f8115ab3941a6fe90807faf4d3", "message": "1504: Fixing issues raised during review", "committedDate": "2020-02-21T20:58:32Z", "type": "commit"}, {"oid": "b2c411f09c81b080a16e56df12749eb5eb1719f7", "url": "https://github.com/MegaMek/mekhq/commit/b2c411f09c81b080a16e56df12749eb5eb1719f7", "message": "Changing try{} catch to try(resources){}catch statements", "committedDate": "2020-02-21T21:16:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0NzgzMw==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382847833", "bodyText": "Why was this commented out?", "author": "sixlettervariables", "createdAt": "2020-02-21T23:07:19Z", "path": "MekHQ/src/mekhq/gui/CampaignGUI.java", "diffHunk": "@@ -2278,37 +2256,34 @@ protected void loadListFile(boolean allowNewPilots) throws IOException {\n                 getCampaign().addUnit(entity, allowNewPilots, 0);\n             }\n \n-            // add any ejected pilots\n-            for (Crew pilot : parser.getPilots()) {\n-                if (pilot.isEjected()) {\n+            // TODO : re-add any ejected pilots", "originalCommit": "b2c411f09c81b080a16e56df12749eb5eb1719f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0ODMwMg==", "url": "https://github.com/MegaMek/mekhq/pull/1504#discussion_r382848302", "bodyText": "The inner code already was, so we were running a loop without processing anything.", "author": "Windchild292", "createdAt": "2020-02-21T23:09:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0NzgzMw=="}], "type": "inlineReview"}]}