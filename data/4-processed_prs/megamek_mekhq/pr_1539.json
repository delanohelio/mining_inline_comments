{"pr_number": 1539, "pr_title": "Add the initial design doc for Distributed MekHQ", "pr_createdAt": "2020-03-02T02:54:55Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1539", "timeline": [{"oid": "0c62d6d567ce22168e599fd40b9b22443495c266", "url": "https://github.com/MegaMek/mekhq/commit/0c62d6d567ce22168e599fd40b9b22443495c266", "message": "Add the initial design doc for Distributed MekHQ", "committedDate": "2020-03-02T02:50:21Z", "type": "commit"}, {"oid": "acf50c7a68d29ae1322e4921e543aa26b98bac10", "url": "https://github.com/MegaMek/mekhq/commit/acf50c7a68d29ae1322e4921e543aa26b98bac10", "message": "Describe more of the actual architecture", "committedDate": "2020-03-02T12:22:59Z", "type": "commit"}, {"oid": "11b8a69a1cc6d6c6b391eddfe56721473c51ad3b", "url": "https://github.com/MegaMek/mekhq/commit/11b8a69a1cc6d6c6b391eddfe56721473c51ad3b", "message": "Clarify daily log entry message timing", "committedDate": "2020-03-02T12:24:20Z", "type": "commit"}, {"oid": "4ab475b1fbdcd00d5317083eed4a2eb35ceef5d1", "url": "https://github.com/MegaMek/mekhq/commit/4ab475b1fbdcd00d5317083eed4a2eb35ceef5d1", "message": "Explain the semantics of wire transfers", "committedDate": "2020-03-02T12:28:44Z", "type": "commit"}, {"oid": "4e76b6b81af79abe54571219c76d9109041ca532", "url": "https://github.com/MegaMek/mekhq/commit/4e76b6b81af79abe54571219c76d9109041ca532", "message": "Flesh out trading", "committedDate": "2020-03-03T01:53:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NTQ3MA==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387255470", "bodyText": "This could be a PITA to implement, but would be a pretty cool way to use these expensive units during a contract. However, you'd need to ensure that those units can't be deployed and are unavailable if you start moving between systems, and I'm sure there are more issues than that. Also, the code for that should be written in such a way that renting out JumpShips and DropShips owned by your force is possible, as that would add more depth and life to your force. Also, a bunch of personnel methods would need to be changed to reflect a divided force, especially random marriages and procreation.", "author": "Windchild292", "createdAt": "2020-03-03T19:50:51Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.\n+- **Trading**: a mechanism by which connected Campaigns can exchange parts, units,\n+personnel, and money in exchange for any combination of the same.\n+\n+### Common Timeline\n+The fundamental feature of Distributed MekHQ is a common timeline shared among\n+the connected campaigns. Ultimately, each campaign will be managed and operated\n+independently, EXCEPT for advancing time. This is accomplished through one simple\n+invariant:\n+> No campaign may be further along in time than the Host campaign.\n+\n+This invariant is held through the following means:\n+1. Only the Host Campaign may advance the day without restrictions.\n+2. Remote Campaigns may advance the day without contacting the Host Campaign if\n+   they are at least one day behind the Host Campaign.\n+3. Remote Campaigns may inform the Host Campaign they are ready to advance\n+   the day, but their local campaign will not advance until their client has\n+   been informed that the Host Campaign has moved beyond their local date.\n+\n+#### Corner Cases\n+1. A Remote Campaign connects and is AHEAD of the Host Campaign.\n+    a. The Remote Campaign SHALL NOT advance time until the Host Campaign\n+       has moved beyond their local date.\n+2. A Remote Campaign connects and is markedly behind the Host Campaign.\n+    a. The Remote Campaign MAY advance time in bulk, but not past the\n+       Host Campaign.\n+    b. The Remote Campaign MAY be given the option to \"Jump\" to the Host\n+       Campaign's timeline, skipping all the usual checks. This should\n+       only be an option in GM Mode.\n+3. The Host Campaign disconnects.\n+    a. The Remote Campaign will be given the option to continue playing\n+       without a Host Campaign. If the timelines diverge before they\n+       reconnect, the invariants will be held through the aforementioned\n+       means.\n+\n+### Common Scenarios and Contracts\n+This objective is TBD on its design details.\n+\n+### Trading\n+If you give a mouse a cookie, it is said that they will want a glass of milk.\n+Trading is the natural extension to Distributed MekHQ.\n+\n+Initial support will be limited to the following actions:\n+- Same-day wiring of funds.\n+- JumpPath distance + 1 day shipping of parts for a fee.\n+- JumpPath distance + 1 day shipping of STOCK units for a fee.\n+- JumpPath distance + 1 day transit of personnel for a fee.\n+\n+Subsequent support will be added for the following actions:\n+- JumpPath distance + 1 day shipping of CUSTOM units for a fee.\n+\n+Support may be considered for the following actions:\n+- Usage of company JumpShips and DropShips to transport traded items.", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2MTYwMw==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387261603", "bodyText": "Do this mean each team will be tracked as if their own faction? And would this allow for campaign versus campaign battles?", "author": "Windchild292", "createdAt": "2020-03-03T20:02:14Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NDg2NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387364865", "bodyText": "Less so Faction more \"allies\" w.r.t. OpFor generation. And yes, eventually PvP.", "author": "sixlettervariables", "createdAt": "2020-03-03T23:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2MTYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2NDY3Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387264673", "bodyText": "Do we want to expand the number of potential personnel in the market for this? I find Dylan's Method generates lots of people, but I've only seen a few personnel generated from the other variants.\nMaybe we should create a new market variant based on one of the methods that is specifically for Distributed MekHQ? Or we could create a variant of each one, to provide options?", "author": "Windchild292", "createdAt": "2020-03-03T20:08:22Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.\n+- **Trading**: a mechanism by which connected Campaigns can exchange parts, units,\n+personnel, and money in exchange for any combination of the same.\n+\n+### Common Timeline\n+The fundamental feature of Distributed MekHQ is a common timeline shared among\n+the connected campaigns. Ultimately, each campaign will be managed and operated\n+independently, EXCEPT for advancing time. This is accomplished through one simple\n+invariant:\n+> No campaign may be further along in time than the Host campaign.\n+\n+This invariant is held through the following means:\n+1. Only the Host Campaign may advance the day without restrictions.\n+2. Remote Campaigns may advance the day without contacting the Host Campaign if\n+   they are at least one day behind the Host Campaign.\n+3. Remote Campaigns may inform the Host Campaign they are ready to advance\n+   the day, but their local campaign will not advance until their client has\n+   been informed that the Host Campaign has moved beyond their local date.\n+\n+#### Corner Cases\n+1. A Remote Campaign connects and is AHEAD of the Host Campaign.\n+    a. The Remote Campaign SHALL NOT advance time until the Host Campaign\n+       has moved beyond their local date.\n+2. A Remote Campaign connects and is markedly behind the Host Campaign.\n+    a. The Remote Campaign MAY advance time in bulk, but not past the\n+       Host Campaign.\n+    b. The Remote Campaign MAY be given the option to \"Jump\" to the Host\n+       Campaign's timeline, skipping all the usual checks. This should\n+       only be an option in GM Mode.\n+3. The Host Campaign disconnects.\n+    a. The Remote Campaign will be given the option to continue playing\n+       without a Host Campaign. If the timelines diverge before they\n+       reconnect, the invariants will be held through the aforementioned\n+       means.\n+\n+### Common Scenarios and Contracts\n+This objective is TBD on its design details.\n+\n+### Trading\n+If you give a mouse a cookie, it is said that they will want a glass of milk.\n+Trading is the natural extension to Distributed MekHQ.\n+\n+Initial support will be limited to the following actions:\n+- Same-day wiring of funds.\n+- JumpPath distance + 1 day shipping of parts for a fee.\n+- JumpPath distance + 1 day shipping of STOCK units for a fee.\n+- JumpPath distance + 1 day transit of personnel for a fee.\n+\n+Subsequent support will be added for the following actions:\n+- JumpPath distance + 1 day shipping of CUSTOM units for a fee.\n+\n+Support may be considered for the following actions:\n+- Usage of company JumpShips and DropShips to transport traded items.\n+\n+### Centralized Markets\n+Once Campaigns are connected they should operate under the same markets.\n+First-come, first-serve will be used, along with diversifying the selections", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NDQ4OQ==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387364489", "bodyText": "I imagine we'd pick one and expand it to directly support this. The rest would be \"local\".", "author": "sixlettervariables", "createdAt": "2020-03-03T23:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI2NDY3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MTgwNg==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387271806", "bodyText": "multiple times \ud83d\ude09", "author": "Windchild292", "createdAt": "2020-03-03T20:22:22Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.\n+- **Trading**: a mechanism by which connected Campaigns can exchange parts, units,\n+personnel, and money in exchange for any combination of the same.\n+\n+### Common Timeline\n+The fundamental feature of Distributed MekHQ is a common timeline shared among\n+the connected campaigns. Ultimately, each campaign will be managed and operated\n+independently, EXCEPT for advancing time. This is accomplished through one simple\n+invariant:\n+> No campaign may be further along in time than the Host campaign.\n+\n+This invariant is held through the following means:\n+1. Only the Host Campaign may advance the day without restrictions.\n+2. Remote Campaigns may advance the day without contacting the Host Campaign if\n+   they are at least one day behind the Host Campaign.\n+3. Remote Campaigns may inform the Host Campaign they are ready to advance\n+   the day, but their local campaign will not advance until their client has\n+   been informed that the Host Campaign has moved beyond their local date.\n+\n+#### Corner Cases\n+1. A Remote Campaign connects and is AHEAD of the Host Campaign.\n+    a. The Remote Campaign SHALL NOT advance time until the Host Campaign\n+       has moved beyond their local date.\n+2. A Remote Campaign connects and is markedly behind the Host Campaign.\n+    a. The Remote Campaign MAY advance time in bulk, but not past the\n+       Host Campaign.\n+    b. The Remote Campaign MAY be given the option to \"Jump\" to the Host\n+       Campaign's timeline, skipping all the usual checks. This should\n+       only be an option in GM Mode.\n+3. The Host Campaign disconnects.\n+    a. The Remote Campaign will be given the option to continue playing\n+       without a Host Campaign. If the timelines diverge before they\n+       reconnect, the invariants will be held through the aforementioned\n+       means.\n+\n+### Common Scenarios and Contracts\n+This objective is TBD on its design details.\n+\n+### Trading\n+If you give a mouse a cookie, it is said that they will want a glass of milk.\n+Trading is the natural extension to Distributed MekHQ.\n+\n+Initial support will be limited to the following actions:\n+- Same-day wiring of funds.\n+- JumpPath distance + 1 day shipping of parts for a fee.\n+- JumpPath distance + 1 day shipping of STOCK units for a fee.\n+- JumpPath distance + 1 day transit of personnel for a fee.\n+\n+Subsequent support will be added for the following actions:\n+- JumpPath distance + 1 day shipping of CUSTOM units for a fee.\n+\n+Support may be considered for the following actions:\n+- Usage of company JumpShips and DropShips to transport traded items.\n+\n+### Centralized Markets\n+Once Campaigns are connected they should operate under the same markets.\n+First-come, first-serve will be used, along with diversifying the selections\n+by having per-area markets. This will be accomplished by one simple invariant:\n+> The Host Campaign will be the arbiter of all sales and hires.\n+\n+This invariant is held through the following means:\n+1. All purchase or hiring will be made as requests through the Host Campaign.\n+2. All purchase or hiring requests will be timestamped.\n+3. The Host Campaign will make requests through the same mechanism.\n+4. The Host Campaign will advertise all market changes to the Remote Campaigns.\n+\n+Expansions to the existing markets will be needed to ensure sufficient diversity\n+exists to make this mode feel interesting.\n+\n+### Generating OpFor from Remote Campaigns\n+This objective is TBD on its design details.\n+\n+## Distributed MekHQ Architecture\n+Distributed MekHQ will be a standard Client-Server architecture, with one instance\n+serving as the host of the session. The underlying protocol will be gRPC and the\n+message flow will be roughly PUBSUB.\n+\n+The general message flow is as follows:\n+1. A Remote Campaign connects to a Host Campaign and sends a ConnectionRequest.\n+2. If the Host Campaign is compatible with the Remote Campaign, the Host Campaign responds with a ConnectionResponse.\n+3. If the Remote Campaign is compatible with the Host Campaign, the Remote Campaign sends a Message stream.\n+4. The Host Campaign responds with a Message stream.\n+5. Gameplay messages flow over these streams.\n+\n+Notes:\n+- If a Host Campaign cannot support the Remote Campaign version the connection is terminated.\n+- If a Remote Campaign cannot support the Host Campaign version the connection is terminated.\n+- If the Remote Campaign does not use the correct password the connection is terminated.\n+\n+### Security\n+As Distributed MekHQ uses gRPC, TLS will be made available as an option to secure the underlying transport. Further, a ConnectionRequest may include an optional password. Messages sent over the streams will use Protobuf and not support arbitrary serialization.\n+\n+### ConnectionRequest\n+The ConnectionRequest message is sent by the Remote Campaign when it first connects to the Host Campaign.\n+\n+The ConnectionRequest message has the following properties:\n+- Remote Campaign Version\n+- Remote Campaign Name\n+- Remote Campaign UUID\n+- Remote Campaign Date\n+- Password (*OPTIONAL*)\n+\n+The Host Campaign shall ignore additional ConnectRequest messages once a connection has been established for a Remote Campaign.\n+\n+### ConnectionResponse\n+The ConnectionResponse message is sent by the Host Campaign when it accepts a connection from a Remote Campaign.\n+\n+The ConnectionResponse message has the following properties:\n+- Host Campaign Version\n+- Host Campaign Name\n+- Host Campaign UUID\n+- Host Campaign Date\n+- Remote Campaign List\n+    - Remote Campaign Name\n+    - Remote Campaign UUID\n+    - Remote Campaign Date\n+    - Remote Campaign Team\n+\n+### Message Bus Messages\n+The Message Bus contains all client-to-server messages to be processed by the server and either redistributed or transformed.\n+\n+Each message is encapsulated over a bidirectional gRPC stream with the following format:\n+- Timestamp\n+- Message Type\n+- Metadata Map (String -> String)\n+- Message Bytes (protobuf)\n+\n+#### CampaignDateChanged\n+The CampaignDateChanged message notifies the Host Campaign that a Remote Campaign has advanced days.\n+\n+The CampaignDateChanged message has the following properties:\n+- Campaign UUID\n+- Campaign Date\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### GMModeChanged\n+The GMModeChanged message notifies the Host Campaign that a Remote Campaign has changed their GM Mode.\n+\n+The GMModeChanged message has the following properties:\n+- Campaign UUID\n+- Is GM?\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### TeamAssignment\n+The TeamAssignment message notifies a Remote Campaign of team assignments.\n+\n+The TeamAssignment message has the following properties:\n+- Team List\n+    - Remote Campaign UUID\n+    - Remote Campaign Team\n+\n+The Host Campaign is always Team 1.\n+\n+This message is only sent by the Host Campaign.\n+\n+#### DailyLog\n+The DailyLog message notifies the Host Campaign of a daily log activity.\n+\n+The DailyLog message has the following properties:\n+- Campaign UUID\n+- Log Date\n+- Log List\n+    - Log Entry\n+\n+This message may be sent at any point in a day and may be sent mulitple times, but implementations could delay sending this message until a day has completed.", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NDI1Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387364252", "bodyText": "For speeling and grammer feel free to use suggested edits.", "author": "sixlettervariables", "createdAt": "2020-03-03T23:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MTgwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODc1Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r389318757", "bodyText": "I was on my phone and didn't know how to on that device", "author": "Windchild292", "createdAt": "2020-03-07T23:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3MTgwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3Mjk0MA==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387272940", "bodyText": "Why not allow multiple active trades? I feel like this might be a place we'd get bug reports.", "author": "Windchild292", "createdAt": "2020-03-03T20:24:50Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.\n+- **Trading**: a mechanism by which connected Campaigns can exchange parts, units,\n+personnel, and money in exchange for any combination of the same.\n+\n+### Common Timeline\n+The fundamental feature of Distributed MekHQ is a common timeline shared among\n+the connected campaigns. Ultimately, each campaign will be managed and operated\n+independently, EXCEPT for advancing time. This is accomplished through one simple\n+invariant:\n+> No campaign may be further along in time than the Host campaign.\n+\n+This invariant is held through the following means:\n+1. Only the Host Campaign may advance the day without restrictions.\n+2. Remote Campaigns may advance the day without contacting the Host Campaign if\n+   they are at least one day behind the Host Campaign.\n+3. Remote Campaigns may inform the Host Campaign they are ready to advance\n+   the day, but their local campaign will not advance until their client has\n+   been informed that the Host Campaign has moved beyond their local date.\n+\n+#### Corner Cases\n+1. A Remote Campaign connects and is AHEAD of the Host Campaign.\n+    a. The Remote Campaign SHALL NOT advance time until the Host Campaign\n+       has moved beyond their local date.\n+2. A Remote Campaign connects and is markedly behind the Host Campaign.\n+    a. The Remote Campaign MAY advance time in bulk, but not past the\n+       Host Campaign.\n+    b. The Remote Campaign MAY be given the option to \"Jump\" to the Host\n+       Campaign's timeline, skipping all the usual checks. This should\n+       only be an option in GM Mode.\n+3. The Host Campaign disconnects.\n+    a. The Remote Campaign will be given the option to continue playing\n+       without a Host Campaign. If the timelines diverge before they\n+       reconnect, the invariants will be held through the aforementioned\n+       means.\n+\n+### Common Scenarios and Contracts\n+This objective is TBD on its design details.\n+\n+### Trading\n+If you give a mouse a cookie, it is said that they will want a glass of milk.\n+Trading is the natural extension to Distributed MekHQ.\n+\n+Initial support will be limited to the following actions:\n+- Same-day wiring of funds.\n+- JumpPath distance + 1 day shipping of parts for a fee.\n+- JumpPath distance + 1 day shipping of STOCK units for a fee.\n+- JumpPath distance + 1 day transit of personnel for a fee.\n+\n+Subsequent support will be added for the following actions:\n+- JumpPath distance + 1 day shipping of CUSTOM units for a fee.\n+\n+Support may be considered for the following actions:\n+- Usage of company JumpShips and DropShips to transport traded items.\n+\n+### Centralized Markets\n+Once Campaigns are connected they should operate under the same markets.\n+First-come, first-serve will be used, along with diversifying the selections\n+by having per-area markets. This will be accomplished by one simple invariant:\n+> The Host Campaign will be the arbiter of all sales and hires.\n+\n+This invariant is held through the following means:\n+1. All purchase or hiring will be made as requests through the Host Campaign.\n+2. All purchase or hiring requests will be timestamped.\n+3. The Host Campaign will make requests through the same mechanism.\n+4. The Host Campaign will advertise all market changes to the Remote Campaigns.\n+\n+Expansions to the existing markets will be needed to ensure sufficient diversity\n+exists to make this mode feel interesting.\n+\n+### Generating OpFor from Remote Campaigns\n+This objective is TBD on its design details.\n+\n+## Distributed MekHQ Architecture\n+Distributed MekHQ will be a standard Client-Server architecture, with one instance\n+serving as the host of the session. The underlying protocol will be gRPC and the\n+message flow will be roughly PUBSUB.\n+\n+The general message flow is as follows:\n+1. A Remote Campaign connects to a Host Campaign and sends a ConnectionRequest.\n+2. If the Host Campaign is compatible with the Remote Campaign, the Host Campaign responds with a ConnectionResponse.\n+3. If the Remote Campaign is compatible with the Host Campaign, the Remote Campaign sends a Message stream.\n+4. The Host Campaign responds with a Message stream.\n+5. Gameplay messages flow over these streams.\n+\n+Notes:\n+- If a Host Campaign cannot support the Remote Campaign version the connection is terminated.\n+- If a Remote Campaign cannot support the Host Campaign version the connection is terminated.\n+- If the Remote Campaign does not use the correct password the connection is terminated.\n+\n+### Security\n+As Distributed MekHQ uses gRPC, TLS will be made available as an option to secure the underlying transport. Further, a ConnectionRequest may include an optional password. Messages sent over the streams will use Protobuf and not support arbitrary serialization.\n+\n+### ConnectionRequest\n+The ConnectionRequest message is sent by the Remote Campaign when it first connects to the Host Campaign.\n+\n+The ConnectionRequest message has the following properties:\n+- Remote Campaign Version\n+- Remote Campaign Name\n+- Remote Campaign UUID\n+- Remote Campaign Date\n+- Password (*OPTIONAL*)\n+\n+The Host Campaign shall ignore additional ConnectRequest messages once a connection has been established for a Remote Campaign.\n+\n+### ConnectionResponse\n+The ConnectionResponse message is sent by the Host Campaign when it accepts a connection from a Remote Campaign.\n+\n+The ConnectionResponse message has the following properties:\n+- Host Campaign Version\n+- Host Campaign Name\n+- Host Campaign UUID\n+- Host Campaign Date\n+- Remote Campaign List\n+    - Remote Campaign Name\n+    - Remote Campaign UUID\n+    - Remote Campaign Date\n+    - Remote Campaign Team\n+\n+### Message Bus Messages\n+The Message Bus contains all client-to-server messages to be processed by the server and either redistributed or transformed.\n+\n+Each message is encapsulated over a bidirectional gRPC stream with the following format:\n+- Timestamp\n+- Message Type\n+- Metadata Map (String -> String)\n+- Message Bytes (protobuf)\n+\n+#### CampaignDateChanged\n+The CampaignDateChanged message notifies the Host Campaign that a Remote Campaign has advanced days.\n+\n+The CampaignDateChanged message has the following properties:\n+- Campaign UUID\n+- Campaign Date\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### GMModeChanged\n+The GMModeChanged message notifies the Host Campaign that a Remote Campaign has changed their GM Mode.\n+\n+The GMModeChanged message has the following properties:\n+- Campaign UUID\n+- Is GM?\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### TeamAssignment\n+The TeamAssignment message notifies a Remote Campaign of team assignments.\n+\n+The TeamAssignment message has the following properties:\n+- Team List\n+    - Remote Campaign UUID\n+    - Remote Campaign Team\n+\n+The Host Campaign is always Team 1.\n+\n+This message is only sent by the Host Campaign.\n+\n+#### DailyLog\n+The DailyLog message notifies the Host Campaign of a daily log activity.\n+\n+The DailyLog message has the following properties:\n+- Campaign UUID\n+- Log Date\n+- Log List\n+    - Log Entry\n+\n+This message may be sent at any point in a day and may be sent mulitple times, but implementations could delay sending this message until a day has completed.\n+\n+This message is redistributed to all Remote Campaigns on the same team as the sending Campaign.\n+\n+#### WireTransferRequest\n+The WireTransferRequest message notifies the Host Campaign of an intent to perform a wire transfer between two Campaigns.\n+\n+The WireTransferRequest message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- Money Amount\n+\n+The amount may be positive (debiting the source campaign) or negative (debiting the target campaign).\n+\n+The source Campaign must move any debited funds into a Pending account and may not use those funds until the transfer has been completed.\n+\n+This message is redistributed only to the target Campaign.\n+\n+#### WireTransferResponse\n+The WireTransferResponse message notifies the Host Campaign of the response to a wire transfer request.\n+\n+The WireTransferResponse message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- Accepted?\n+\n+The target Campaign must send a rejection response if the request if it has insufficient funds to process a debit.\n+\n+The target Campaign must move any debited funds into a Pending account and may not use those funds until the transfer has been completed.\n+\n+The Host Campaign must send a rejection WireTransferCompleted message if the request is not recognized.\n+\n+This message is only consumed by the Host Campaign.\n+\n+#### WireTransferCompleted\n+The WireTransferCompleted message notifies two participating Campaigns that their wire transfer has been accepted by the Host.\n+\n+The WireTransferCompleted message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- Accepted?\n+\n+This message must be rejected by the source or target Campaigns if they do not recognize it.\n+\n+This message is sent to the originating source and target Campaigns upon receipt of a WireTransferResponse.\n+\n+#### TradeRequest\n+The TradeRequest message notifies the Host Campaign of an intent to trade between two campaigns.\n+\n+The TradeRequest message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- ?\n+\n+Details TBD\n+\n+If the Source and Target Campaign already have an active trade, the Host Campaign shall send a rejection TradeCompleted to the Source Campaign.", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NDAyMg==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387364022", "bodyText": "Starting small and manageable.", "author": "sixlettervariables", "createdAt": "2020-03-03T23:50:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3Mjk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NDk5Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387274996", "bodyText": "This should only be allowed if neither party has sent any of their resources out, and would need to be enforced. Otherwise, I'm imaging shenanigans could easily occur.", "author": "Windchild292", "createdAt": "2020-03-03T20:29:03Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.\n+- **Trading**: a mechanism by which connected Campaigns can exchange parts, units,\n+personnel, and money in exchange for any combination of the same.\n+\n+### Common Timeline\n+The fundamental feature of Distributed MekHQ is a common timeline shared among\n+the connected campaigns. Ultimately, each campaign will be managed and operated\n+independently, EXCEPT for advancing time. This is accomplished through one simple\n+invariant:\n+> No campaign may be further along in time than the Host campaign.\n+\n+This invariant is held through the following means:\n+1. Only the Host Campaign may advance the day without restrictions.\n+2. Remote Campaigns may advance the day without contacting the Host Campaign if\n+   they are at least one day behind the Host Campaign.\n+3. Remote Campaigns may inform the Host Campaign they are ready to advance\n+   the day, but their local campaign will not advance until their client has\n+   been informed that the Host Campaign has moved beyond their local date.\n+\n+#### Corner Cases\n+1. A Remote Campaign connects and is AHEAD of the Host Campaign.\n+    a. The Remote Campaign SHALL NOT advance time until the Host Campaign\n+       has moved beyond their local date.\n+2. A Remote Campaign connects and is markedly behind the Host Campaign.\n+    a. The Remote Campaign MAY advance time in bulk, but not past the\n+       Host Campaign.\n+    b. The Remote Campaign MAY be given the option to \"Jump\" to the Host\n+       Campaign's timeline, skipping all the usual checks. This should\n+       only be an option in GM Mode.\n+3. The Host Campaign disconnects.\n+    a. The Remote Campaign will be given the option to continue playing\n+       without a Host Campaign. If the timelines diverge before they\n+       reconnect, the invariants will be held through the aforementioned\n+       means.\n+\n+### Common Scenarios and Contracts\n+This objective is TBD on its design details.\n+\n+### Trading\n+If you give a mouse a cookie, it is said that they will want a glass of milk.\n+Trading is the natural extension to Distributed MekHQ.\n+\n+Initial support will be limited to the following actions:\n+- Same-day wiring of funds.\n+- JumpPath distance + 1 day shipping of parts for a fee.\n+- JumpPath distance + 1 day shipping of STOCK units for a fee.\n+- JumpPath distance + 1 day transit of personnel for a fee.\n+\n+Subsequent support will be added for the following actions:\n+- JumpPath distance + 1 day shipping of CUSTOM units for a fee.\n+\n+Support may be considered for the following actions:\n+- Usage of company JumpShips and DropShips to transport traded items.\n+\n+### Centralized Markets\n+Once Campaigns are connected they should operate under the same markets.\n+First-come, first-serve will be used, along with diversifying the selections\n+by having per-area markets. This will be accomplished by one simple invariant:\n+> The Host Campaign will be the arbiter of all sales and hires.\n+\n+This invariant is held through the following means:\n+1. All purchase or hiring will be made as requests through the Host Campaign.\n+2. All purchase or hiring requests will be timestamped.\n+3. The Host Campaign will make requests through the same mechanism.\n+4. The Host Campaign will advertise all market changes to the Remote Campaigns.\n+\n+Expansions to the existing markets will be needed to ensure sufficient diversity\n+exists to make this mode feel interesting.\n+\n+### Generating OpFor from Remote Campaigns\n+This objective is TBD on its design details.\n+\n+## Distributed MekHQ Architecture\n+Distributed MekHQ will be a standard Client-Server architecture, with one instance\n+serving as the host of the session. The underlying protocol will be gRPC and the\n+message flow will be roughly PUBSUB.\n+\n+The general message flow is as follows:\n+1. A Remote Campaign connects to a Host Campaign and sends a ConnectionRequest.\n+2. If the Host Campaign is compatible with the Remote Campaign, the Host Campaign responds with a ConnectionResponse.\n+3. If the Remote Campaign is compatible with the Host Campaign, the Remote Campaign sends a Message stream.\n+4. The Host Campaign responds with a Message stream.\n+5. Gameplay messages flow over these streams.\n+\n+Notes:\n+- If a Host Campaign cannot support the Remote Campaign version the connection is terminated.\n+- If a Remote Campaign cannot support the Host Campaign version the connection is terminated.\n+- If the Remote Campaign does not use the correct password the connection is terminated.\n+\n+### Security\n+As Distributed MekHQ uses gRPC, TLS will be made available as an option to secure the underlying transport. Further, a ConnectionRequest may include an optional password. Messages sent over the streams will use Protobuf and not support arbitrary serialization.\n+\n+### ConnectionRequest\n+The ConnectionRequest message is sent by the Remote Campaign when it first connects to the Host Campaign.\n+\n+The ConnectionRequest message has the following properties:\n+- Remote Campaign Version\n+- Remote Campaign Name\n+- Remote Campaign UUID\n+- Remote Campaign Date\n+- Password (*OPTIONAL*)\n+\n+The Host Campaign shall ignore additional ConnectRequest messages once a connection has been established for a Remote Campaign.\n+\n+### ConnectionResponse\n+The ConnectionResponse message is sent by the Host Campaign when it accepts a connection from a Remote Campaign.\n+\n+The ConnectionResponse message has the following properties:\n+- Host Campaign Version\n+- Host Campaign Name\n+- Host Campaign UUID\n+- Host Campaign Date\n+- Remote Campaign List\n+    - Remote Campaign Name\n+    - Remote Campaign UUID\n+    - Remote Campaign Date\n+    - Remote Campaign Team\n+\n+### Message Bus Messages\n+The Message Bus contains all client-to-server messages to be processed by the server and either redistributed or transformed.\n+\n+Each message is encapsulated over a bidirectional gRPC stream with the following format:\n+- Timestamp\n+- Message Type\n+- Metadata Map (String -> String)\n+- Message Bytes (protobuf)\n+\n+#### CampaignDateChanged\n+The CampaignDateChanged message notifies the Host Campaign that a Remote Campaign has advanced days.\n+\n+The CampaignDateChanged message has the following properties:\n+- Campaign UUID\n+- Campaign Date\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### GMModeChanged\n+The GMModeChanged message notifies the Host Campaign that a Remote Campaign has changed their GM Mode.\n+\n+The GMModeChanged message has the following properties:\n+- Campaign UUID\n+- Is GM?\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### TeamAssignment\n+The TeamAssignment message notifies a Remote Campaign of team assignments.\n+\n+The TeamAssignment message has the following properties:\n+- Team List\n+    - Remote Campaign UUID\n+    - Remote Campaign Team\n+\n+The Host Campaign is always Team 1.\n+\n+This message is only sent by the Host Campaign.\n+\n+#### DailyLog\n+The DailyLog message notifies the Host Campaign of a daily log activity.\n+\n+The DailyLog message has the following properties:\n+- Campaign UUID\n+- Log Date\n+- Log List\n+    - Log Entry\n+\n+This message may be sent at any point in a day and may be sent mulitple times, but implementations could delay sending this message until a day has completed.\n+\n+This message is redistributed to all Remote Campaigns on the same team as the sending Campaign.\n+\n+#### WireTransferRequest\n+The WireTransferRequest message notifies the Host Campaign of an intent to perform a wire transfer between two Campaigns.\n+\n+The WireTransferRequest message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- Money Amount\n+\n+The amount may be positive (debiting the source campaign) or negative (debiting the target campaign).\n+\n+The source Campaign must move any debited funds into a Pending account and may not use those funds until the transfer has been completed.\n+\n+This message is redistributed only to the target Campaign.\n+\n+#### WireTransferResponse\n+The WireTransferResponse message notifies the Host Campaign of the response to a wire transfer request.\n+\n+The WireTransferResponse message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- Accepted?\n+\n+The target Campaign must send a rejection response if the request if it has insufficient funds to process a debit.\n+\n+The target Campaign must move any debited funds into a Pending account and may not use those funds until the transfer has been completed.\n+\n+The Host Campaign must send a rejection WireTransferCompleted message if the request is not recognized.\n+\n+This message is only consumed by the Host Campaign.\n+\n+#### WireTransferCompleted\n+The WireTransferCompleted message notifies two participating Campaigns that their wire transfer has been accepted by the Host.\n+\n+The WireTransferCompleted message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- Accepted?\n+\n+This message must be rejected by the source or target Campaigns if they do not recognize it.\n+\n+This message is sent to the originating source and target Campaigns upon receipt of a WireTransferResponse.\n+\n+#### TradeRequest\n+The TradeRequest message notifies the Host Campaign of an intent to trade between two campaigns.\n+\n+The TradeRequest message has the following properties:\n+- Source Campaign UUID\n+- Target Campaign UUID\n+- Request UUID\n+- ?\n+\n+Details TBD\n+\n+If the Source and Target Campaign already have an active trade, the Host Campaign shall send a rejection TradeCompleted to the Source Campaign.\n+\n+This message is redistributed to the target campaign by the Host Campaign.\n+\n+#### CancelTradeRequest\n+The CancelTradeRequest message notifies the Host Campaign that a trade partner has cancelled a request.", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNTUzNg==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r392535536", "bodyText": "Resources are in 'escrow' until the trade is accepted and the host notifies campaigns of its acceptance.", "author": "sixlettervariables", "createdAt": "2020-03-14T00:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0MzA1NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r392543055", "bodyText": "Perfect.", "author": "Windchild292", "createdAt": "2020-03-14T01:13:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NDk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NTg5NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r387275895", "bodyText": "Maintain current single player functionality should be a key objective.", "author": "Windchild292", "createdAt": "2020-03-03T20:30:48Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODc5MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1539#discussion_r389318791", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This message may be sent at any point in a day and may be sent mulitple times, but implementations could delay sending this message until a day has completed.\n          \n          \n            \n            This message may be sent at any point in a day and may be sent multiple times, but implementations could delay sending this message until a day has completed.", "author": "Windchild292", "createdAt": "2020-03-07T23:05:32Z", "path": "MekHQ/docs/DistributedMekHQ.md", "diffHunk": "@@ -0,0 +1,310 @@\n+# Distributed MekHQ\n+Distributed MekHQ is an idea to allow a slightly more sophisticated verison\n+of \"MekHQ by E-Mail\". This document describes the design and architecture\n+for Distributed MekHQ.\n+\n+## Objectives and Non-Goals\n+This section describes the objectives of Distributed MekHQ and what will\n+not be part of the design.\n+\n+### Objectives\n+1. Support a common timeline between Campaigns.\n+2. Support common scenarios and contracts between Campaigns.\n+3. Support trading of parts, vehicles, and personnel between Campaigns.\n+4. Support centralized contract, unit, and personnel markets.\n+5. Support generation of OpFor from other Campaigns.\n+\n+### Non-Goals\n+1. Distributed MekHQ will not support shared Campaigns.\n+2. Distributed MekHQ will not support shared parts, vehicles, or personnel.\n+3. Distributed MekHQ will not support controlling other Campaigns.\n+4. Distributed MekHQ will not support chat.\n+\n+## Distributed MekHQ Design\n+This section details the high level design of Distributed MekHQ and serves\n+as the Use-Case basis for the architecture.\n+\n+### Concepts\n+- **Host Campaign**: the Campaign which launched the distributed MekHQ session.\n+- **Remote Campaign**: any Campaign not running as part of the local MekHQ client.\n+- **Timeline**: the latest date among the connected Campaigns.\n+- **Teams**: connected Campaigns which cannot be generated as OpFor in a contract.\n+- **Trading**: a mechanism by which connected Campaigns can exchange parts, units,\n+personnel, and money in exchange for any combination of the same.\n+\n+### Common Timeline\n+The fundamental feature of Distributed MekHQ is a common timeline shared among\n+the connected campaigns. Ultimately, each campaign will be managed and operated\n+independently, EXCEPT for advancing time. This is accomplished through one simple\n+invariant:\n+> No campaign may be further along in time than the Host campaign.\n+\n+This invariant is held through the following means:\n+1. Only the Host Campaign may advance the day without restrictions.\n+2. Remote Campaigns may advance the day without contacting the Host Campaign if\n+   they are at least one day behind the Host Campaign.\n+3. Remote Campaigns may inform the Host Campaign they are ready to advance\n+   the day, but their local campaign will not advance until their client has\n+   been informed that the Host Campaign has moved beyond their local date.\n+\n+#### Corner Cases\n+1. A Remote Campaign connects and is AHEAD of the Host Campaign.\n+    a. The Remote Campaign SHALL NOT advance time until the Host Campaign\n+       has moved beyond their local date.\n+2. A Remote Campaign connects and is markedly behind the Host Campaign.\n+    a. The Remote Campaign MAY advance time in bulk, but not past the\n+       Host Campaign.\n+    b. The Remote Campaign MAY be given the option to \"Jump\" to the Host\n+       Campaign's timeline, skipping all the usual checks. This should\n+       only be an option in GM Mode.\n+3. The Host Campaign disconnects.\n+    a. The Remote Campaign will be given the option to continue playing\n+       without a Host Campaign. If the timelines diverge before they\n+       reconnect, the invariants will be held through the aforementioned\n+       means.\n+\n+### Common Scenarios and Contracts\n+This objective is TBD on its design details.\n+\n+### Trading\n+If you give a mouse a cookie, it is said that they will want a glass of milk.\n+Trading is the natural extension to Distributed MekHQ.\n+\n+Initial support will be limited to the following actions:\n+- Same-day wiring of funds.\n+- JumpPath distance + 1 day shipping of parts for a fee.\n+- JumpPath distance + 1 day shipping of STOCK units for a fee.\n+- JumpPath distance + 1 day transit of personnel for a fee.\n+\n+Subsequent support will be added for the following actions:\n+- JumpPath distance + 1 day shipping of CUSTOM units for a fee.\n+\n+Support may be considered for the following actions:\n+- Usage of company JumpShips and DropShips to transport traded items.\n+\n+### Centralized Markets\n+Once Campaigns are connected they should operate under the same markets.\n+First-come, first-serve will be used, along with diversifying the selections\n+by having per-area markets. This will be accomplished by one simple invariant:\n+> The Host Campaign will be the arbiter of all sales and hires.\n+\n+This invariant is held through the following means:\n+1. All purchase or hiring will be made as requests through the Host Campaign.\n+2. All purchase or hiring requests will be timestamped.\n+3. The Host Campaign will make requests through the same mechanism.\n+4. The Host Campaign will advertise all market changes to the Remote Campaigns.\n+\n+Expansions to the existing markets will be needed to ensure sufficient diversity\n+exists to make this mode feel interesting.\n+\n+### Generating OpFor from Remote Campaigns\n+This objective is TBD on its design details.\n+\n+## Distributed MekHQ Architecture\n+Distributed MekHQ will be a standard Client-Server architecture, with one instance\n+serving as the host of the session. The underlying protocol will be gRPC and the\n+message flow will be roughly PUBSUB.\n+\n+The general message flow is as follows:\n+1. A Remote Campaign connects to a Host Campaign and sends a ConnectionRequest.\n+2. If the Host Campaign is compatible with the Remote Campaign, the Host Campaign responds with a ConnectionResponse.\n+3. If the Remote Campaign is compatible with the Host Campaign, the Remote Campaign sends a Message stream.\n+4. The Host Campaign responds with a Message stream.\n+5. Gameplay messages flow over these streams.\n+\n+Notes:\n+- If a Host Campaign cannot support the Remote Campaign version the connection is terminated.\n+- If a Remote Campaign cannot support the Host Campaign version the connection is terminated.\n+- If the Remote Campaign does not use the correct password the connection is terminated.\n+\n+### Security\n+As Distributed MekHQ uses gRPC, TLS will be made available as an option to secure the underlying transport. Further, a ConnectionRequest may include an optional password. Messages sent over the streams will use Protobuf and not support arbitrary serialization.\n+\n+### ConnectionRequest\n+The ConnectionRequest message is sent by the Remote Campaign when it first connects to the Host Campaign.\n+\n+The ConnectionRequest message has the following properties:\n+- Remote Campaign Version\n+- Remote Campaign Name\n+- Remote Campaign UUID\n+- Remote Campaign Date\n+- Password (*OPTIONAL*)\n+\n+The Host Campaign shall ignore additional ConnectRequest messages once a connection has been established for a Remote Campaign.\n+\n+### ConnectionResponse\n+The ConnectionResponse message is sent by the Host Campaign when it accepts a connection from a Remote Campaign.\n+\n+The ConnectionResponse message has the following properties:\n+- Host Campaign Version\n+- Host Campaign Name\n+- Host Campaign UUID\n+- Host Campaign Date\n+- Remote Campaign List\n+    - Remote Campaign Name\n+    - Remote Campaign UUID\n+    - Remote Campaign Date\n+    - Remote Campaign Team\n+\n+### Message Bus Messages\n+The Message Bus contains all client-to-server messages to be processed by the server and either redistributed or transformed.\n+\n+Each message is encapsulated over a bidirectional gRPC stream with the following format:\n+- Timestamp\n+- Message Type\n+- Metadata Map (String -> String)\n+- Message Bytes (protobuf)\n+\n+#### CampaignDateChanged\n+The CampaignDateChanged message notifies the Host Campaign that a Remote Campaign has advanced days.\n+\n+The CampaignDateChanged message has the following properties:\n+- Campaign UUID\n+- Campaign Date\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### GMModeChanged\n+The GMModeChanged message notifies the Host Campaign that a Remote Campaign has changed their GM Mode.\n+\n+The GMModeChanged message has the following properties:\n+- Campaign UUID\n+- Is GM?\n+\n+This message is redistributed to all connected campaigns.\n+\n+#### TeamAssignment\n+The TeamAssignment message notifies a Remote Campaign of team assignments.\n+\n+The TeamAssignment message has the following properties:\n+- Team List\n+    - Remote Campaign UUID\n+    - Remote Campaign Team\n+\n+The Host Campaign is always Team 1.\n+\n+This message is only sent by the Host Campaign.\n+\n+#### DailyLog\n+The DailyLog message notifies the Host Campaign of a daily log activity.\n+\n+The DailyLog message has the following properties:\n+- Campaign UUID\n+- Log Date\n+- Log List\n+    - Log Entry\n+\n+This message may be sent at any point in a day and may be sent mulitple times, but implementations could delay sending this message until a day has completed.", "originalCommit": "4e76b6b81af79abe54571219c76d9109041ca532", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2f9cb86f668e6b950a0f293ecebc99b93fa91f02", "url": "https://github.com/MegaMek/mekhq/commit/2f9cb86f668e6b950a0f293ecebc99b93fa91f02", "message": "Update MekHQ/docs/DistributedMekHQ.md\n\nCo-Authored-By: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-03-08T03:54:14Z", "type": "commit"}, {"oid": "359a68124e975fe87863801334bd17f29dae6547", "url": "https://github.com/MegaMek/mekhq/commit/359a68124e975fe87863801334bd17f29dae6547", "message": "Flesh out Ping/Pong messages and add Campaign Details message", "committedDate": "2020-03-13T00:21:49Z", "type": "commit"}, {"oid": "ac52343e1d2be0922ba6698b284d8cdf2cb1d04a", "url": "https://github.com/MegaMek/mekhq/commit/ac52343e1d2be0922ba6698b284d8cdf2cb1d04a", "message": "Add messages to help with eventual consistency of trades", "committedDate": "2020-03-13T00:29:08Z", "type": "commit"}]}