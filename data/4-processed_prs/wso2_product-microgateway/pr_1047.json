{"pr_number": 1047, "pr_title": "Change ballerina base dist and docker image", "pr_createdAt": "2020-02-27T10:12:27Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1047", "timeline": [{"oid": "34f0cb6ac3e21caf6b522170082422febd9d82ca", "url": "https://github.com/wso2/product-microgateway/commit/34f0cb6ac3e21caf6b522170082422febd9d82ca", "message": "docker: Update base image\n\n1. Ballerina jdk requires a glib based base image. However default\nalpine image is built with musl not glibc. This causes mgw startup\nissues when http2 features are enabled. To resolve this we used a\nglib based alpine image 'alpine-glibc'. This image is shared in\nhttps://github.com/Docker-Hub-frolvlad/docker-alpine-glibc\n\n2. COPY command creates an unwanted layer in the docker image.\nTherefore we now use wget to pull the realeased runtime dist from\ngithub. This will increase both efficiency and portability of the\nDockerfile", "committedDate": "2020-02-27T10:13:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1OTg1OQ==", "url": "https://github.com/wso2/product-microgateway/pull/1047#discussion_r385159859", "bodyText": "Is this key has a expiry time", "author": "Rajith90", "createdAt": "2020-02-27T14:27:06Z", "path": "docker/Dockerfile", "diffHunk": "@@ -41,47 +41,78 @@ ARG MOTD='printf \"\\n\\\n  This Docker container comprises of a WSO2 product, running with its latest GA release \\n\\\n  which is under the Apache License, Version 2.0. \\n\\\n  Read more about Apache License, Version 2.0 here @ http://www.apache.org/licenses/LICENSE-2.0.\\n\"'\n-ENV ENV=${USER_HOME}\"/.bashrc\"\n-\n-# create the non-root user and group and set MOTD login message\n-RUN \\\n-    groupadd -r -g ${USER_GROUP_ID} ${USER_GROUP} \\\n-    && useradd -m -r -u ${USER_ID} -d ${USER_HOME} -g ${USER_GROUP} ${USER} \\\n-    && echo ${MOTD} > \"${ENV}\"\n-\n-# To avoid warning message due to APIIUtils\n-ENV DEBCONF_NOWARNINGS yes\n-\n+ENV ENV=${USER_HOME}\"/.ashrc\"\n+\n+# GLIB based alpine image (alpine-glib) source is generously borrowed\n+# From https://github.com/Docker-Hub-frolvlad/docker-alpine-glibc\n+# Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.\n+RUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n+    ALPINE_GLIBC_PACKAGE_VERSION=\"2.30-r0\" && \\\n+    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n+    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n+    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n+    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n+    echo \\\n+        \"-----BEGIN PUBLIC KEY-----\\\n+        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\\\n+        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\\\n+        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\\\n+        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\\\n+        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\\\n+        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\\\n+        1QIDAQAB\\\n+        -----END PUBLIC KEY-----\" | sed 's/   */\\n/g' > \"/etc/apk/keys/sgerrand.rsa.pub\" && \\", "originalCommit": "34f0cb6ac3e21caf6b522170082422febd9d82ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE3NDY3NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1047#discussion_r385174675", "bodyText": "This is the public key for the glibc for alpine software repository. This might expire but that doesn't effect the released docker images. This is just a build time dependency for fetching the required glibc packages. After that there is no use of this cert. So if it expires we can update it to latest when we are building the latest image.", "author": "praminda", "createdAt": "2020-02-27T15:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1OTg1OQ=="}], "type": "inlineReview"}, {"oid": "d5987365f3788dbe05c7c3f3e45dee1362db1b58", "url": "https://github.com/wso2/product-microgateway/commit/d5987365f3788dbe05c7c3f3e45dee1362db1b58", "message": "mvn: Remove unused artifacts\n\nplatform independent runtime artifact is no longer needed.\nAlso ballerina runtime generation is not required since we don't\ncreate a distribution containing ballerina runtime now. Everthing\nis packed into the final jar produced by ballerina build.", "committedDate": "2020-02-27T16:31:17Z", "type": "commit"}, {"oid": "f219bc8d428da8cf702431a40a539eaf62cc7a14", "url": "https://github.com/wso2/product-microgateway/commit/f219bc8d428da8cf702431a40a539eaf62cc7a14", "message": "mvn: Change wum tool download\n\nant plugin based method always downloads the update.zip file which\nis inefficient. With download plugin update.zip will be cached in\nlocal m2 repo and will be reused.", "committedDate": "2020-02-27T16:31:17Z", "type": "commit"}, {"oid": "2f78321a3f37faa030408cd7e1772755e5e65965", "url": "https://github.com/wso2/product-microgateway/commit/2f78321a3f37faa030408cd7e1772755e5e65965", "message": "mvn: Download b7a from dist\n\nNew ballerina distributions with docker and k8s dependencies should\nbe downloaded from product-dist. Maven artifacts doesn't contain\nabove mentioned artifacts.", "committedDate": "2020-02-27T16:31:17Z", "type": "commit"}, {"oid": "b4cea92857a8882a8d4bcc748ffcedbef63205cd", "url": "https://github.com/wso2/product-microgateway/commit/b4cea92857a8882a8d4bcc748ffcedbef63205cd", "message": "docker: Update base image\n\n1. Ballerina jdk requires a glib based base image. However default\nalpine image is built with musl not glibc. This causes mgw startup\nissues when http2 features are enabled. To resolve this we used a\nglib based alpine image 'alpine-glibc'. This image is shared in\nhttps://github.com/Docker-Hub-frolvlad/docker-alpine-glibc\n\n2. COPY command creates an unwanted layer in the docker image.\nTherefore we now use wget to pull the realeased runtime dist from\ngithub. This will increase both efficiency and portability of the\nDockerfile", "committedDate": "2020-02-27T16:31:49Z", "type": "commit"}, {"oid": "b4cea92857a8882a8d4bcc748ffcedbef63205cd", "url": "https://github.com/wso2/product-microgateway/commit/b4cea92857a8882a8d4bcc748ffcedbef63205cd", "message": "docker: Update base image\n\n1. Ballerina jdk requires a glib based base image. However default\nalpine image is built with musl not glibc. This causes mgw startup\nissues when http2 features are enabled. To resolve this we used a\nglib based alpine image 'alpine-glibc'. This image is shared in\nhttps://github.com/Docker-Hub-frolvlad/docker-alpine-glibc\n\n2. COPY command creates an unwanted layer in the docker image.\nTherefore we now use wget to pull the realeased runtime dist from\ngithub. This will increase both efficiency and portability of the\nDockerfile", "committedDate": "2020-02-27T16:31:49Z", "type": "forcePushed"}]}