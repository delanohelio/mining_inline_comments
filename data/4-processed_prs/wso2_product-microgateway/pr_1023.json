{"pr_number": 1023, "pr_title": "Multiple JWT issuers support", "pr_createdAt": "2020-02-23T13:36:23Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1023", "timeline": [{"oid": "659e13e01fe98271159f0e70a399b831f1a8d996", "url": "https://github.com/wso2/product-microgateway/commit/659e13e01fe98271159f0e70a399b831f1a8d996", "message": "Add multiple jwt issuer handlers", "committedDate": "2020-02-21T11:41:06Z", "type": "commit"}, {"oid": "5d23ac5ff6105fe4059456a143e39695e5def050", "url": "https://github.com/wso2/product-microgateway/commit/5d23ac5ff6105fe4059456a143e39695e5def050", "message": "Move subscription validation from filter to authn provider", "committedDate": "2020-02-23T13:33:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4ODYzOQ==", "url": "https://github.com/wso2/product-microgateway/pull/1023#discussion_r383088639", "bodyText": "Change order to mutualssl, jwts, opaque, basic, apikey", "author": "AmaliMatharaarachchi", "createdAt": "2020-02-24T05:16:43Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -107,26 +107,46 @@ public function initiateGatewayConfigurations(http:ListenerConfiguration config)\n     isConfigInitiated = true;\n }\n \n-public function getAuthHandlers() returns http:InboundAuthHandler[] {\n+public function getAuthHandlers(string[] appSecurity = [], boolean appSecurityOptional = false, boolean isMutualSSL = false) \n+        returns http:InboundAuthHandler[][] {\n     if (authHandlersMap.length() < 1) {\n         printDebug(KEY_GW_LISTNER, \"Initializing auth handlers\");\n         initAuthHandlers();\n     }\n-    return [authHandlersMap.get(MUTUAL_SSL_HANDLER), authHandlersMap.get(JWT_AUTH_HANDLER), authHandlersMap.get(KEY_VALIDATION_HANDLER),\n-        authHandlersMap.get(BASIC_AUTH_HANDLER), authHandlersMap.get(API_KEY_HANDLER)];\n-}\n-\n-public function getAPIAuthHandlers(boolean appSecurityOptional) returns http:InboundAuthHandler[][] {\n     if (appSecurityOptional) { \n-        return [getAuthHandlers()];\n+        if (isMutualSSL) {\n+            // add mutual ssl to the auth handlers\n+            appSecurity.push(AUTH_SCHEME_MUTUAL_SSL);\n+        }\n+        return [getHandlers(appSecurity)];\n     }\n-    if (authHandlersMap.length() < 1) {\n-        printDebug(KEY_GW_LISTNER, \"Initializing auth handlers\");\n-        initAuthHandlers();\n+    // if application security is mandatory, one of application handlers must pass. If mutual ssl enabled. it also should pass.\n+    // e.g. [mutualssl] && [jwt or basic or ...]\n+    if (isMutualSSL) {\n+        return [getHandlers([AUTH_SCHEME_MUTUAL_SSL]), getHandlers(appSecurity)];\n     }\n+    return [getHandlers(appSecurity)];\n+}\n \n-    return [[authHandlersMap.get(MUTUAL_SSL_HANDLER)], [authHandlersMap.get(JWT_AUTH_HANDLER), authHandlersMap.get(KEY_VALIDATION_HANDLER),\n-        authHandlersMap.get(BASIC_AUTH_HANDLER), authHandlersMap.get(API_KEY_HANDLER)]];\n+public function getHandlers(string[] appSecurity) returns http:InboundAuthHandler[] {\n+    http:InboundAuthHandler[] handlers = [];\n+    //enforce handler order mutualssl, opaque, basic, apikey, jwts", "originalCommit": "2b4ea2c674c472c1780f6c9e034d0a3f87918c99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "url": "https://github.com/wso2/product-microgateway/commit/ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "message": "Fix review comments", "committedDate": "2020-02-24T06:23:27Z", "type": "commit"}, {"oid": "ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "url": "https://github.com/wso2/product-microgateway/commit/ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "message": "Fix review comments", "committedDate": "2020-02-24T06:23:27Z", "type": "forcePushed"}, {"oid": "43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "url": "https://github.com/wso2/product-microgateway/commit/43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "message": "Skip subscription validation if GRPC", "committedDate": "2020-02-24T06:43:32Z", "type": "commit"}, {"oid": "43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "url": "https://github.com/wso2/product-microgateway/commit/43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "message": "Skip subscription validation if GRPC", "committedDate": "2020-02-24T06:43:32Z", "type": "forcePushed"}, {"oid": "8d7deaf6b8f31dc6f02610f7e4bddb1930c1aef3", "url": "https://github.com/wso2/product-microgateway/commit/8d7deaf6b8f31dc6f02610f7e4bddb1930c1aef3", "message": "Add code document comments", "committedDate": "2020-02-24T07:12:56Z", "type": "commit"}, {"oid": "3036537a72077e2480ba1b534dafbad5c7d0771a", "url": "https://github.com/wso2/product-microgateway/commit/3036537a72077e2480ba1b534dafbad5c7d0771a", "message": "Update issuer in test cases", "committedDate": "2020-02-24T09:32:14Z", "type": "commit"}]}