{"pr_number": 1223, "pr_title": "Fix #1181 #1184 - Support adding custom filters", "pr_createdAt": "2020-05-04T10:29:51Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1223", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3ODgwNQ==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r422578805", "bodyText": "gateway:printDebug ???", "author": "praminda", "createdAt": "2020-05-10T03:36:52Z", "path": "components/micro-gateway-cli/src/main/resources/templates/listeners.mustache", "diffHunk": "@@ -133,7 +134,40 @@ public function getFilters() returns (http:RequestFilter|http:ResponseFilter) []\n     // Extension filter\n     ExtensionFilter extensionFilter = new;\n \n-    return [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n+    (http:RequestFilter|http:ResponseFilter)[] defaultFilters = [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n             analyticsFilter, validationResponseFilter, extensionFilter];\n+\n+    (http:RequestFilter|http:ResponseFilter)[] customFilters = [];\n+    int[] customFilterIndexes = [];\n+    (http:RequestFilter|http:ResponseFilter)[] allFilters = defaultFilters.slice(0,defaultFilters.length());\n+{{#containerConfig.filters}}\n+    {{name}} {{variableName}} = new;\n+    customFilterIndexes[{{@index}}] = {{position}};\n+    customFilters[{{@index}}] = {{variableName}};\n+    allFilters.push({{variableName}}) ;\n+{{/containerConfig.filters}}\n+\n+    int customFilterIndex = 0;\n+    int authFilterPosition = gateway:getAuthFilterPosition();\n+\n+    foreach var filterIndex in customFilterIndexes {\n+        shiftArray(allFilters, filterIndex, customFilters[customFilterIndex]);\n+        if(filterIndex <= authFilterPosition) {\n+            authFilterPosition = authFilterPosition + 1;\n+        }\n+        customFilterIndex = customFilterIndex +1;\n+    }\n+\n+    gateway:setAuthFilterPosition(authFilterPosition);\n+    log:printDebug(allFilters.toString());", "originalCommit": "f9de522bf956fb9e3dcf2af75f44f0e8ff2b5d4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5NzU5MQ==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r422597591", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(filterIndex <= authFilterPosition) {\n          \n          \n            \n                    if (filterIndex <= authFilterPosition) {", "author": "praminda", "createdAt": "2020-05-10T06:49:55Z", "path": "components/micro-gateway-cli/src/main/resources/templates/listeners.mustache", "diffHunk": "@@ -133,7 +134,40 @@ public function getFilters() returns (http:RequestFilter|http:ResponseFilter) []\n     // Extension filter\n     ExtensionFilter extensionFilter = new;\n \n-    return [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n+    (http:RequestFilter|http:ResponseFilter)[] defaultFilters = [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n             analyticsFilter, validationResponseFilter, extensionFilter];\n+\n+    (http:RequestFilter|http:ResponseFilter)[] customFilters = [];\n+    int[] customFilterIndexes = [];\n+    (http:RequestFilter|http:ResponseFilter)[] allFilters = defaultFilters.slice(0,defaultFilters.length());\n+{{#containerConfig.filters}}\n+    {{name}} {{variableName}} = new;\n+    customFilterIndexes[{{@index}}] = {{position}};\n+    customFilters[{{@index}}] = {{variableName}};\n+    allFilters.push({{variableName}}) ;\n+{{/containerConfig.filters}}\n+\n+    int customFilterIndex = 0;\n+    int authFilterPosition = gateway:getAuthFilterPosition();\n+\n+    foreach var filterIndex in customFilterIndexes {\n+        shiftArray(allFilters, filterIndex, customFilters[customFilterIndex]);\n+        if(filterIndex <= authFilterPosition) {", "originalCommit": "f9de522bf956fb9e3dcf2af75f44f0e8ff2b5d4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5NzYyNQ==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r422597625", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function shiftArray((http:RequestFilter|http:ResponseFilter)[] allFilters, int position, (http:RequestFilter|http:ResponseFilter) customFilter){\n          \n          \n            \n            function shiftArray((http:RequestFilter|http:ResponseFilter)[] allFilters, int position, (http:RequestFilter|http:ResponseFilter) customFilter) {", "author": "praminda", "createdAt": "2020-05-10T06:50:18Z", "path": "components/micro-gateway-cli/src/main/resources/templates/listeners.mustache", "diffHunk": "@@ -133,7 +134,40 @@ public function getFilters() returns (http:RequestFilter|http:ResponseFilter) []\n     // Extension filter\n     ExtensionFilter extensionFilter = new;\n \n-    return [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n+    (http:RequestFilter|http:ResponseFilter)[] defaultFilters = [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n             analyticsFilter, validationResponseFilter, extensionFilter];\n+\n+    (http:RequestFilter|http:ResponseFilter)[] customFilters = [];\n+    int[] customFilterIndexes = [];\n+    (http:RequestFilter|http:ResponseFilter)[] allFilters = defaultFilters.slice(0,defaultFilters.length());\n+{{#containerConfig.filters}}\n+    {{name}} {{variableName}} = new;\n+    customFilterIndexes[{{@index}}] = {{position}};\n+    customFilters[{{@index}}] = {{variableName}};\n+    allFilters.push({{variableName}}) ;\n+{{/containerConfig.filters}}\n+\n+    int customFilterIndex = 0;\n+    int authFilterPosition = gateway:getAuthFilterPosition();\n+\n+    foreach var filterIndex in customFilterIndexes {\n+        shiftArray(allFilters, filterIndex, customFilters[customFilterIndex]);\n+        if(filterIndex <= authFilterPosition) {\n+            authFilterPosition = authFilterPosition + 1;\n+        }\n+        customFilterIndex = customFilterIndex +1;\n+    }\n+\n+    gateway:setAuthFilterPosition(authFilterPosition);\n+    log:printDebug(allFilters.toString());\n+    return allFilters;\n+}\n+\n+function shiftArray((http:RequestFilter|http:ResponseFilter)[] allFilters, int position, (http:RequestFilter|http:ResponseFilter) customFilter){", "originalCommit": "f9de522bf956fb9e3dcf2af75f44f0e8ff2b5d4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0ODc3NA==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r422648774", "bodyText": "Suggested change", "author": "AmaliMatharaarachchi", "createdAt": "2020-05-10T13:54:40Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/constants/constants.bal", "diffHunk": "@@ -426,3 +426,5 @@ public const string API_PUBLISHER = \"api_publisher\";\n public const string API_NAME = \"api_name\";\n public const string MATCHING_RESOURCE = \"matching_resource\";\n \n+", "originalCommit": "f9de522bf956fb9e3dcf2af75f44f0e8ff2b5d4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0OTA1OQ==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r424349059", "bodyText": "This separation is required to define different set of constants. Each separated block defines set of constants related to a single feature or capability", "author": "Rajith90", "createdAt": "2020-05-13T10:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0ODc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0OTEzMw==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r422649133", "bodyText": "It's better to the limit line length. There are several occurrences of this below as well.", "author": "AmaliMatharaarachchi", "createdAt": "2020-05-10T13:57:41Z", "path": "components/micro-gateway-cli/src/main/resources/templates/listeners.mustache", "diffHunk": "@@ -133,7 +134,40 @@ public function getFilters() returns (http:RequestFilter|http:ResponseFilter) []\n     // Extension filter\n     ExtensionFilter extensionFilter = new;\n \n-    return [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n+    (http:RequestFilter|http:ResponseFilter)[] defaultFilters = [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,", "originalCommit": "f9de522bf956fb9e3dcf2af75f44f0e8ff2b5d4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0OTU3Ng==", "url": "https://github.com/wso2/product-microgateway/pull/1223#discussion_r422649576", "bodyText": "It's better to provide meaningful variables for n and i", "author": "AmaliMatharaarachchi", "createdAt": "2020-05-10T14:00:54Z", "path": "components/micro-gateway-cli/src/main/resources/templates/listeners.mustache", "diffHunk": "@@ -133,7 +134,40 @@ public function getFilters() returns (http:RequestFilter|http:ResponseFilter) []\n     // Extension filter\n     ExtensionFilter extensionFilter = new;\n \n-    return [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n+    (http:RequestFilter|http:ResponseFilter)[] defaultFilters = [grpcFilter, preAuthnFilter, authorizationFilter, validationRequestFilter, throttleFilter,\n             analyticsFilter, validationResponseFilter, extensionFilter];\n+\n+    (http:RequestFilter|http:ResponseFilter)[] customFilters = [];\n+    int[] customFilterIndexes = [];\n+    (http:RequestFilter|http:ResponseFilter)[] allFilters = defaultFilters.slice(0,defaultFilters.length());\n+{{#containerConfig.filters}}\n+    {{name}} {{variableName}} = new;\n+    customFilterIndexes[{{@index}}] = {{position}};\n+    customFilters[{{@index}}] = {{variableName}};\n+    allFilters.push({{variableName}}) ;\n+{{/containerConfig.filters}}\n+\n+    int customFilterIndex = 0;\n+    int authFilterPosition = gateway:getAuthFilterPosition();\n+\n+    foreach var filterIndex in customFilterIndexes {\n+        shiftArray(allFilters, filterIndex, customFilters[customFilterIndex]);\n+        if(filterIndex <= authFilterPosition) {\n+            authFilterPosition = authFilterPosition + 1;\n+        }\n+        customFilterIndex = customFilterIndex +1;\n+    }\n+\n+    gateway:setAuthFilterPosition(authFilterPosition);\n+    log:printDebug(allFilters.toString());\n+    return allFilters;\n+}\n+\n+function shiftArray((http:RequestFilter|http:ResponseFilter)[] allFilters, int position, (http:RequestFilter|http:ResponseFilter) customFilter){\n+    int n = allFilters.length();", "originalCommit": "f9de522bf956fb9e3dcf2af75f44f0e8ff2b5d4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6340637b410b2edf592213464afa7a7e56e98b6f", "url": "https://github.com/wso2/product-microgateway/commit/6340637b410b2edf592213464afa7a7e56e98b6f", "message": "Fix #1181 #1184 - Support adding custom filters\nWith thid commit specifying custom filters are supported. Developer can define custom filters and the position of that filter in the filter chain in the deployment-config.toml, and then\nadd that filter inside the extension folder of the project.", "committedDate": "2020-05-13T11:58:48Z", "type": "commit"}, {"oid": "6340637b410b2edf592213464afa7a7e56e98b6f", "url": "https://github.com/wso2/product-microgateway/commit/6340637b410b2edf592213464afa7a7e56e98b6f", "message": "Fix #1181 #1184 - Support adding custom filters\nWith thid commit specifying custom filters are supported. Developer can define custom filters and the position of that filter in the filter chain in the deployment-config.toml, and then\nadd that filter inside the extension folder of the project.", "committedDate": "2020-05-13T11:58:48Z", "type": "forcePushed"}]}