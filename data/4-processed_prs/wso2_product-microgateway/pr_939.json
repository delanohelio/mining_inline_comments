{"pr_number": 939, "pr_title": "Fix issues with the distributed throttling feature", "pr_createdAt": "2020-01-17T08:15:12Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/939", "timeline": [{"oid": "ace843e0ed3b293fb2efd7b8252bc290c9ee1a1c", "url": "https://github.com/wso2/product-microgateway/commit/ace843e0ed3b293fb2efd7b8252bc290c9ee1a1c", "message": "remove ballerina.toml from microgateway runtime", "committedDate": "2020-01-17T05:08:27Z", "type": "commit"}, {"oid": "52120bede3f2ff177543e03bbd72c396e5886dc4", "url": "https://github.com/wso2/product-microgateway/commit/52120bede3f2ff177543e03bbd72c396e5886dc4", "message": "fix Distributed Throttling Implementation issues occured due to 1.1.0 upgrade", "committedDate": "2020-01-17T07:21:07Z", "type": "commit"}, {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "url": "https://github.com/wso2/product-microgateway/commit/c1946cf2d80f33d08487cf40e694bdd9741af51f", "message": "Extend test case to check the throttling after expiration", "committedDate": "2020-01-17T07:22:07Z", "type": "commit"}, {"oid": "a4d7358632b5757248974e911bca6b4dd846d66b", "url": "https://github.com/wso2/product-microgateway/commit/a4d7358632b5757248974e911bca6b4dd846d66b", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into dThrottleFix", "committedDate": "2020-01-17T07:23:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDQ2OA==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814468", "bodyText": "Lets log the error as well", "author": "Rajith90", "createdAt": "2020-01-17T08:20:19Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NTUyNg==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367855526", "bodyText": "added via ca383ba\nBy the way, please consider that there are two lines; printError and printFullError.\nPlease comment if that needs to be changed.", "author": "VirajSalaka", "createdAt": "2020-01-17T10:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDQ2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDUzOQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814539", "bodyText": "Lets log the error as well", "author": "Rajith90", "createdAt": "2020-01-17T08:20:37Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NTU5Nw==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367855597", "bodyText": "added via ca383ba", "author": "VirajSalaka", "createdAt": "2020-01-17T10:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDUzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDY3Ng==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814676", "bodyText": "Lets log the error as well", "author": "Rajith90", "createdAt": "2020-01-17T08:21:00Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");\n+            return session;\n+        } else {\n+        jms:Destination dest = check session->createTopic(\"throttleData\");\n+        jms:MessageConsumer | error subscriberEndpoint = trap session->createDurableSubscriber(dest, \"sub-1\");\n+        if (subscriberEndpoint is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms subscriber.\");", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NTY0NQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367855645", "bodyText": "added via ca383ba", "author": "VirajSalaka", "createdAt": "2020-01-17T10:02:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDkzNw==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814937", "bodyText": "Is it correct to log this as debug level rather than the error", "author": "Rajith90", "createdAt": "2020-01-17T08:21:49Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");\n+            return session;\n+        } else {\n+        jms:Destination dest = check session->createTopic(\"throttleData\");\n+        jms:MessageConsumer | error subscriberEndpoint = trap session->createDurableSubscriber(dest, \"sub-1\");\n+        if (subscriberEndpoint is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms subscriber.\");\n+        } else {\n+            var attachResult = subscriberEndpoint.__attach(messageServ);\n+            if (attachResult is error) {\n+                printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NTczMQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367855731", "bodyText": "added via ca383ba", "author": "VirajSalaka", "createdAt": "2020-01-17T10:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDkzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTAyMg==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367815022", "bodyText": "Lets log the error as well", "author": "Rajith90", "createdAt": "2020-01-17T08:22:06Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");\n+            return session;\n+        } else {\n+        jms:Destination dest = check session->createTopic(\"throttleData\");\n+        jms:MessageConsumer | error subscriberEndpoint = trap session->createDurableSubscriber(dest, \"sub-1\");\n+        if (subscriberEndpoint is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms subscriber.\");\n+        } else {\n+            var attachResult = subscriberEndpoint.__attach(messageServ);\n+            if (attachResult is error) {\n+                printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n+                return attachResult;\n+            }\n+            var startResult = subscriberEndpoint.__start();\n+            if (startResult is error) {\n+                printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NTc4MQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367855781", "bodyText": "added via ca383ba", "author": "VirajSalaka", "createdAt": "2020-01-17T10:02:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTAyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNjEwOQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367816109", "bodyText": "Lets change this as  MGW-TK_HOME", "author": "Rajith90", "createdAt": "2020-01-17T08:25:31Z", "path": "distribution/resources/conf/Ballerina.toml", "diffHunk": "@@ -6,6 +6,20 @@ version= \"3.1.0\"\n [platform]\n target = \"java8\"\n \n+        [[platform.libraries]]\n+        module = \"jms\"\n+        path = \"${MICROGW_HOME}/lib/dependencies/andes-client-3.3.9.jar\"", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNjIwMA==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367816200", "bodyText": "Lets change this as MGW-TK_HOME", "author": "Rajith90", "createdAt": "2020-01-17T08:25:46Z", "path": "distribution/resources/conf/Ballerina.toml", "diffHunk": "@@ -6,6 +6,20 @@ version= \"3.1.0\"\n [platform]\n target = \"java8\"\n \n+        [[platform.libraries]]\n+        module = \"jms\"\n+        path = \"${MICROGW_HOME}/lib/dependencies/andes-client-3.3.9.jar\"\n+        artifactId = \"andes-client\"\n+        version = \"3.3.9\"\n+        groupId = \"org.wso2.andes.wso2\"\n+\n+        [[platform.libraries]]\n+        module = \"jms\"\n+        path = \"${MICROGW_HOME}/lib/dependencies/org.wso2.securevault-1.1.1.jar\"", "originalCommit": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNzU5NQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367817595", "bodyText": "Better to add new line at the EOF", "author": "AmaliMatharaarachchi", "createdAt": "2020-01-17T08:29:22Z", "path": "components/micro-gateway-core/src/main/ballerina/Ballerina.toml", "diffHunk": "@@ -9,4 +9,4 @@ target = \"java8\"\n     path = \"../../../target/org.wso2.micro.gateway.core-3.1.0-SNAPSHOT.jar\"\n \n [dependencies]\n-\"wso2/jms\" = \"0.6.3\"\n\\ No newline at end of file\n+\"wso2/jms\" = \"0.7.0\"", "originalCommit": "9a4d023b0f82fbf50f54123478da837a6041eee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NTk3NQ==", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367855975", "bodyText": "added via bf45068", "author": "VirajSalaka", "createdAt": "2020-01-17T10:03:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNzU5NQ=="}], "type": "inlineReview"}, {"oid": "ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "url": "https://github.com/wso2/product-microgateway/commit/ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "message": "log Full Error Message", "committedDate": "2020-01-17T09:54:23Z", "type": "commit"}, {"oid": "ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "url": "https://github.com/wso2/product-microgateway/commit/ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "message": "log Full Error Message", "committedDate": "2020-01-17T09:54:23Z", "type": "forcePushed"}, {"oid": "bf45068358e281152bcabdbd91db90a8a9fd9a94", "url": "https://github.com/wso2/product-microgateway/commit/bf45068358e281152bcabdbd91db90a8a9fd9a94", "message": "add new line to the EOF toml", "committedDate": "2020-01-17T09:58:28Z", "type": "commit"}, {"oid": "b6beef3c167e26f696e9cf8c19363d46936bdbe2", "url": "https://github.com/wso2/product-microgateway/commit/b6beef3c167e26f696e9cf8c19363d46936bdbe2", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into dThrottleFix", "committedDate": "2020-01-20T05:11:33Z", "type": "commit"}]}