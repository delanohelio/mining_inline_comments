{"pr_number": 1014, "pr_title": "Fixes mutual ssl and api key test", "pr_createdAt": "2020-02-20T03:33:57Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1014", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc3OTEzNA==", "url": "https://github.com/wso2/product-microgateway/pull/1014#discussion_r381779134", "bodyText": "Lets remove this line. Since pre auth filter is doing this", "author": "Rajith90", "createdAt": "2020-02-20T05:48:45Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/authz_filter.bal", "diffHunk": "@@ -34,33 +34,28 @@ public type OAuthzFilter object {\n             printDebug(KEY_AUTHZ_FILTER, \"Skip all filter annotation set in the service. Skip the filter\");\n             return true;\n         }\n-        string checkAuthentication = getConfigValue(MTSL_CONF_INSTANCE_ID, MTSL_CONF_SSLVERIFYCLIENT, DEFAULT_SSL_VERIFY_CLIENT);\n-        if (checkAuthentication != \"require\") {\n-            //Setting UUID\n-            int startingTime = getCurrentTime();\n-            checkOrSetMessageID(context);\n-            printDebug(KEY_AUTHZ_FILTER, \"Processing request via Authorization filter.\");\n-            runtime:AuthenticationContext? authContext = runtime:getInvocationContext()?.authenticationContext;\n-            boolean result = true;\n-            if (authContext is runtime:AuthenticationContext) {\n-                string? authScheme = authContext?.scheme;\n-                // scope validation is done in authn filter for oauth2, hence we only need to\n-                //validate scopes if auth scheme is jwt.\n-                if (authScheme is string && authScheme == AUTH_SCHEME_JWT) {\n-                    //Start a new child span for the span.\n-                    int | error | () balSpan = startSpan(BALLERINA_AUTHZ_FILTER);\n-                    result = self.authzFilter.filterRequest(caller, request, context);\n-                    //finishing span\n-                    finishSpan(BALLERINA_AUTHZ_FILTER, balSpan);\n-                }\n+        //Setting UUID\n+        int startingTime = getCurrentTime();\n+        checkOrSetMessageID(context);", "originalCommit": "928dc4f181cc14f1f9da078c95984927035ccd64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc4MzUwOQ==", "url": "https://github.com/wso2/product-microgateway/pull/1014#discussion_r381783509", "bodyText": "Fixed. Thanks", "author": "AmaliMatharaarachchi", "createdAt": "2020-02-20T05:57:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc3OTEzNA=="}], "type": "inlineReview"}, {"oid": "1cc30e3397886d01fdad3c1a82293d7ba5835ce3", "url": "https://github.com/wso2/product-microgateway/commit/1cc30e3397886d01fdad3c1a82293d7ba5835ce3", "message": "Fixes mutual ssl and api key test", "committedDate": "2020-02-20T05:56:15Z", "type": "commit"}, {"oid": "1cc30e3397886d01fdad3c1a82293d7ba5835ce3", "url": "https://github.com/wso2/product-microgateway/commit/1cc30e3397886d01fdad3c1a82293d7ba5835ce3", "message": "Fixes mutual ssl and api key test", "committedDate": "2020-02-20T05:56:15Z", "type": "forcePushed"}]}