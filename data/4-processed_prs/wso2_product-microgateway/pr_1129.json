{"pr_number": 1129, "pr_title": "Fixes for schema validation feature", "pr_createdAt": "2020-03-11T13:33:04Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1129", "timeline": [{"oid": "f8549407266216abc4bdbe762277827598a2a56f", "url": "https://github.com/wso2/product-microgateway/commit/f8549407266216abc4bdbe762277827598a2a56f", "message": "changing jar vsersions", "committedDate": "2020-03-06T09:57:33Z", "type": "commit"}, {"oid": "ffb87eb7753ef3be8e0ef5fb65e5de93cd4fede0", "url": "https://github.com/wso2/product-microgateway/commit/ffb87eb7753ef3be8e0ef5fb65e5de93cd4fede0", "message": "fixes#936 #1033 #1125 #1081 #1080", "committedDate": "2020-03-11T12:55:07Z", "type": "commit"}, {"oid": "96e171f6bf7f75f85cc66b56927bb7d627833fa7", "url": "https://github.com/wso2/product-microgateway/commit/96e171f6bf7f75f85cc66b56927bb7d627833fa7", "message": "fix merge conflicts", "committedDate": "2020-03-11T13:00:36Z", "type": "commit"}, {"oid": "79d01671532d269c4094f173b9896383e3e7897f", "url": "https://github.com/wso2/product-microgateway/commit/79d01671532d269c4094f173b9896383e3e7897f", "message": "fix formatting issues", "committedDate": "2020-03-11T13:25:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1MzI5MQ==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391053291", "bodyText": "Isn't these responses used by other test cases to validate", "author": "Rajith90", "createdAt": "2020-03-11T15:24:49Z", "path": "tests/src/test/java/org/wso2/micro/gateway/tests/common/ResponseConstants.java", "diffHunk": "@@ -25,16 +25,15 @@\n     public static final String responseBodyV1 = \"{\\\"id\\\":222222222, \\\"category\\\":{ \\\"id\\\":1, \\\"name\\\":\\\"Test\\\" },\" +\n             \" \\\"name\\\":\\\"doggie\\\", \\\"photoUrls\\\":[ \\\"SampleImage1.png\\\" ], \\\"tags\\\":[ { \\\"id\\\":0, \" +\n             \"\\\"name\\\":\\\"TestTag1\\\" } ], \\\"status\\\":\\\"pending\\\"}\";\n-    public static final String petByIdResponse = \"{\\\"id\\\": 9199424981609281000,\" + \"  \\\"category\\\": {\"\n-            + \"    \\\"id\\\": 0,\" + \"    \\\"name\\\": \\\"string\\\"\" + \"  },\" + \"  \\\"name\\\": \\\"doggie\\\",\"\n-            + \"  \\\"photoUrls\\\": [\" + \"    \\\"string\\\"\" + \"  ],\" + \"  \\\"tags\\\": [\" + \"    {\"\n-            + \"      \\\"id\\\": 0,\" + \"      \\\"name\\\": \\\"string\\\"\" + \"    }\" + \"  ],\"\n-            + \"  \\\"status\\\": \\\"available\\\"\" + \"}\";\n-    public static final String petByIdResponseV1 = \"{\\\"id\\\": 33333333333333,\" + \"  \\\"category\\\": {\"\n-            + \"    \\\"id\\\": 0,\" + \"    \\\"name\\\": \\\"string\\\"\" + \"  },\" + \"  \\\"name\\\": \\\"doggieNew\\\",\"\n-            + \"  \\\"photoUrls\\\": [\" + \"    \\\"string\\\"\" + \"  ],\" + \"  \\\"tags\\\": [\" + \"    {\"\n-            + \"      \\\"id\\\": 0,\" + \"      \\\"name\\\": \\\"string\\\"\" + \"    }\" + \"  ],\"\n-            + \"  \\\"status\\\": \\\"available\\\"\" + \"}\";\n+    public static final String petByIdResponse = \"{\\\"id\\\":2, \\\"category\\\":{\\\"id\\\":1, \\\"name\\\":\\\"John Doe\\\"}, \" +\n+            \"\\\"name\\\":\\\"shre\\\", \\\"photoUrls\\\":[\\\"ArrayItem1\\\"], \\\"tags\\\":[{\\\"id\\\":1, \\\"name\\\":\\\"TfNSW\\\"}],\" +\n+            \" \\\"status\\\":\\\"hello\\\"}\";\n+    public static final String petByIdResponseV1 = \"{\\\"id\\\":2, \\\"category\\\":{\\\"id\\\":1, \\\"name\\\":\\\"John Doe\\\"}, \" +\n+            \"\\\"name\\\":\\\"shre\\\", \\\"photoUrls\\\":[\\\"ArrayItem1\\\"], \\\"tags\\\":[{\\\"id\\\":1, \\\"name\\\":\\\"TfNSW\\\"}], \" +\n+            \"\\\"status\\\":\\\"hello\\\"}\";\n+    public static final String getPetResponse = \"{\\\"id\\\":2, \\\"category\\\":{\\\"id\\\":1, \\\"name\\\":\\\"John Doe\\\"},\" +\n+            \" \\\"name\\\":\\\"shre\\\", \\\"photoUrls\\\":[\\\"ArrayItem1\\\"], \\\"tags\\\":[{\\\"id\\\":1, \\\"name\\\":\\\"TfNSW\\\"}],\" +\n+            \" \\\"status\\\":\\\"hello\\\"}\";", "originalCommit": "79d01671532d269c4094f173b9896383e3e7897f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2OTc0NA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391069744", "bodyText": "I checked other usages and verified it doesn't affect the functionality.", "author": "hasuniea", "createdAt": "2020-03-11T15:46:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1MzI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1Mzg1MA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391053850", "bodyText": "This test class no need to have after class. This will cause test failures", "author": "Rajith90", "createdAt": "2020-03-11T15:25:33Z", "path": "tests/src/test/java/org/wso2/micro/gateway/tests/extensions/OASAPIInvokeTestCase.java", "diffHunk": "@@ -67,4 +68,9 @@ public void testApiInvokeWithJWT() throws Exception {\n         Assert.assertEquals(response.getData(), ResponseConstants.petByIdResponse);\n         Assert.assertEquals(response.getResponseCode(), 200, \"Response code mismatched\");\n     }\n+\n+    @AfterClass\n+    public void stop() throws Exception {\n+        super.finalize();\n+    }", "originalCommit": "79d01671532d269c4094f173b9896383e3e7897f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2NTg3NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391365875", "bodyText": "fixed", "author": "hasuniea", "createdAt": "2020-03-12T02:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1Mzg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1NzE2Nw==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391057167", "bodyText": "Isn't this constant have usage in https://github.com/wso2/product-microgateway/blob/master/components/micro-gateway-core/src/main/ballerina/src/gateway/filters/throttle_filter.bal#L186", "author": "Rajith90", "createdAt": "2020-03-11T15:29:49Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/Constants.java", "diffHunk": "@@ -58,7 +56,6 @@\n     public static final String JSON_CONTENT = \".application/json.schema.$ref\";\n     public static final String SCHEMA = \".schema\";\n     public static final String EMPTY_ARRAY = \"[]\";\n-    public static final String INTERNAL_ERROR_CODE = \"500\";", "originalCommit": "79d01671532d269c4094f173b9896383e3e7897f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2ODYzMA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391068630", "bodyText": "It uses this constant\nhttps://github.com/wso2/product-microgateway/blob/master/components/micro-gateway-core/src/main/ballerina/src/gateway/constants/api_throttle_out_constants.bal#L21", "author": "hasuniea", "createdAt": "2020-03-11T15:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1NzE2Nw=="}], "type": "inlineReview"}, {"oid": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "url": "https://github.com/wso2/product-microgateway/commit/e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "message": "fix suggested changes", "committedDate": "2020-03-11T19:49:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMzUxMw==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391403513", "bodyText": "Handle the error scenario", "author": "Rajith90", "createdAt": "2020-03-12T05:06:49Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/validation_filter.bal", "diffHunk": "@@ -94,9 +94,14 @@\n         if (valResult is handle && stringutils:equalsIgnoreCase(valResult.toString(), VALIDATION_STATUS)) {\n             return true;\n         } else {\n+             json newPayload = { fault: {\n+                                    code: 400,\n+                                    message: \"Bad Request\",\n+                                    description: valResult.toString()\n+                                } };\n             http:Response res = new;\n             res.statusCode = 400;\n-            res.setPayload(valResult.toString());\n+            res.setJsonPayload(newPayload);\n             var rcal = caller->respond(res);", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODU3Mg==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428572", "bodyText": "handled the error.", "author": "hasuniea", "createdAt": "2020-03-12T06:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMzUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNDIxNg==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391404216", "bodyText": "Lets try to use the constants if available in b7a http module", "author": "Rajith90", "createdAt": "2020-03-12T05:10:21Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/validation_filter.bal", "diffHunk": "@@ -118,15 +124,22 @@\n          if (method is string) {\n             reqMethod = method;\n          }\n-         string resPayload = response.getJsonPayload().toString();\n+         var payload = response.getJsonPayload();\n+         if (payload is map<json>)  {\n+              resPayload = payload.toJsonString();\n+         }\n          string servName = context.getServiceName();\n-         printDebug(KEY_VALIDATION_FILTER, \"The Response payload : \" + resPayload);\n-         var valResult = responseValidate(resPath, requestMethod, responseCode, resPayload, servName);\n+         var valResult = responseValidate(resPath, reqMethod, responseCode, resPayload, servName);\n          if (valResult is handle && stringutils:equalsIgnoreCase(valResult.toString(), VALIDATION_STATUS)) {\n              return true;\n          } else {\n+             json newPayload = { fault: {\n+                                        code: 500,\n+                                        message: \"Bad Response\",\n+                                        description: valResult.toString()\n+                               } };\n              response.statusCode = 500;", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODUxOA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428518", "bodyText": "fixed.", "author": "hasuniea", "createdAt": "2020-03-12T06:49:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNDIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNDQ5OQ==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391404499", "bodyText": "Lets remove static imports", "author": "Rajith90", "createdAt": "2020-03-12T05:11:33Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/validation/Validate.java", "diffHunk": "@@ -44,6 +44,7 @@\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipInputStream;\n \n+import static org.wso2.micro.gateway.core.Constants.EMPTY_ARRAY;", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODQ4Ng==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428486", "bodyText": "removed.", "author": "hasuniea", "createdAt": "2020-03-12T06:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNDQ5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNTA4Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391405083", "bodyText": "If schema is available and payload is null then, this will gives the status as true", "author": "Rajith90", "createdAt": "2020-03-12T05:13:59Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/validation/Validate.java", "diffHunk": "@@ -70,7 +71,12 @@ public static String validateRequest(String requestPath, String reqMethod, Strin\n             return VALIDATED_STATUS;\n         }\n         String schema = extractSchemaFromRequest(requestPath, reqMethod, swagger);\n-        return validateContent(payload, schema);\n+        if (schema != null && !EMPTY_ARRAY.equals(schema) &&", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODQ0NA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428444", "bodyText": "fixed.", "author": "hasuniea", "createdAt": "2020-03-12T06:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNTA4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjA1MA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391406050", "bodyText": "use the || in if condition", "author": "Rajith90", "createdAt": "2020-03-12T05:18:29Z", "path": "components/micro-gateway-core/src/main/java/org/wso2/micro/gateway/core/validation/Validate.java", "diffHunk": "@@ -125,13 +140,13 @@ private static String extractSchemaFromRequest(String resourcePath, String reque\n         swaggerObject = swagger;\n         String value = JsonPath.read(swagger, Constants.JSON_PATH +\n                 Constants.OPEN_API).toString();\n-        if (value != null && !value.equals(Constants.EMPTY_ARRAY)) {\n+        if (value != null && !value.equals(EMPTY_ARRAY)) {\n             //refer schema\n             StringBuilder jsonPath = new StringBuilder();\n             jsonPath.append(Constants.PATHS)\n                     .append(resourcePath).append(Constants.BODY_CONTENT);\n             schema = JsonPath.read(swagger, jsonPath.toString()).toString();\n-            if (schema == null | Constants.EMPTY_ARRAY.equals(schema)) {\n+            if (schema == null | EMPTY_ARRAY.equals(schema)) {", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODQwNQ==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428405", "bodyText": "fixed.", "author": "hasuniea", "createdAt": "2020-03-12T06:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjY4MA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391406680", "bodyText": "lets keep the new version", "author": "Rajith90", "createdAt": "2020-03-12T05:21:32Z", "path": "pom.xml", "diffHunk": "@@ -596,15 +601,15 @@\n         <apache.commons.version>1.5.6.wso2v1</apache.commons.version>\n         <everit.version>1.5.0.wso2.v1</everit.version>\n         <jayway.jsonpath.version>2.4.0</jayway.jsonpath.version>\n-        <com.google.guava.version>27.1-jre</com.google.guava.version>\n+        <com.google.guava.version>27.0-jre</com.google.guava.version>", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODM0OQ==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428349", "bodyText": "upgrade to previous version.", "author": "hasuniea", "createdAt": "2020-03-12T06:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjY4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjg1MA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391406850", "bodyText": "Lets remove the orbit", "author": "Rajith90", "createdAt": "2020-03-12T05:22:20Z", "path": "pom.xml", "diffHunk": "@@ -596,15 +601,15 @@\n         <apache.commons.version>1.5.6.wso2v1</apache.commons.version>\n         <everit.version>1.5.0.wso2.v1</everit.version>\n         <jayway.jsonpath.version>2.4.0</jayway.jsonpath.version>\n-        <com.google.guava.version>27.1-jre</com.google.guava.version>\n+        <com.google.guava.version>27.0-jre</com.google.guava.version>\n         <commons-logging.version>1.1.1</commons-logging.version>\n         <commons-io.version>2.6</commons-io.version>\n         <commons-lang3.version>3.9</commons-lang3.version>\n-        <org.json.version>20160810</org.json.version>\n         <com.jayway.jsonpath.version>2.4.0.wso2v2</com.jayway.jsonpath.version>\n-        <json.orbit.version>3.0.0.wso2v1</json.orbit.version>\n-        <jackson-data-bind.version>2.9.10.1</jackson-data-bind.version>\n         <jackson-core.version>2.9.9</jackson-core.version>\n+        <everit.version>1.5.0.wso2.v1</everit.version>\n+        <fasterxml.jackson.databind.version>2.9.10</fasterxml.jackson.databind.version>\n+        <json.orbit.version>3.0.0.wso2v1</json.orbit.version>", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODI0Nw==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428247", "bodyText": "removed the version.", "author": "hasuniea", "createdAt": "2020-03-12T06:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDYyNA==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391410624", "bodyText": "We can remove these configs since we can use the default values for this test case.", "author": "AmaliMatharaarachchi", "createdAt": "2020-03-12T05:39:07Z", "path": "tests/src/test/resources/confs/validation.conf", "diffHunk": "@@ -4,32 +4,31 @@ httpsPort=9595\n tokenListenerPort=9596\n \n [b7a.users]\n-[b7a.users.generalUser1]\n-password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\"\n-\n-[validationConfig]\n-enableRequestValidation = true\n-enableResponseValidation = true\n+  [b7a.users.generalUser1]\n+    password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\"\n \n [apikey.tokenConfigs]\n-issuer=\"https://localhost:9095/apikey\"\n-audience=\"http://org.wso2.apimgt/gateway\"\n-certificateAlias=\"ballerina\"\n-validateAllowedAPIs=true\n+  issuer=\"https://localhost:9095/apikey\"\n+  audience=\"http://org.wso2.apimgt/gateway\"\n+  certificateAlias=\"ballerina\"\n+  validateAllowedAPIs=true\n \n [apikey.issuer]\n-[apikey.issuer.tokenConfig]\n-enabled=true\n-keyStorePath=\"${ballerina.home}/bre/security/ballerinaKeystore.p12\"\n-keyStorePassword=\"ballerina\"\n-issuer=\"https://localhost:9095/apikey\"\n-audience=\"http://org.wso2.apimgt/gateway\"\n-certificateAlias=\"ballerina\"\n-validityTime=600\n-[apikey.issuer.apis]\n-[apikey.issuer.apis.1]\n-name=\"PetStoreAPI\"\n-versions=\"1.0.0\"\n+  [apikey.issuer.tokenConfig]\n+   enabled=true\n+   keyStorePath=\"${ballerina.home}/bre/security/ballerinaKeystore.p12\"\n+   keyStorePassword=\"ballerina\"\n+   issuer=\"https://localhost:9095/apikey\"\n+   audience=\"http://org.wso2.apimgt/gateway\"\n+   certificateAlias=\"ballerina\"\n+   validityTime=600\n+[[apikey.issuer.api]]\n+   name=\"PetStoreAPI\"\n+   versions=\"1.0.0\"", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODIwMw==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428203", "bodyText": "fixed.", "author": "hasuniea", "createdAt": "2020-03-12T06:48:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDczNQ==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391410735", "bodyText": "Let's remove these configs since we can use the default values for this test case", "author": "AmaliMatharaarachchi", "createdAt": "2020-03-12T05:39:40Z", "path": "tests/src/test/resources/confs/validation.conf", "diffHunk": "@@ -4,32 +4,31 @@ httpsPort=9595\n tokenListenerPort=9596\n \n [b7a.users]\n-[b7a.users.generalUser1]\n-password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\"\n-\n-[validationConfig]\n-enableRequestValidation = true\n-enableResponseValidation = true\n+  [b7a.users.generalUser1]\n+    password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\"\n \n [apikey.tokenConfigs]\n-issuer=\"https://localhost:9095/apikey\"\n-audience=\"http://org.wso2.apimgt/gateway\"\n-certificateAlias=\"ballerina\"\n-validateAllowedAPIs=true\n+  issuer=\"https://localhost:9095/apikey\"\n+  audience=\"http://org.wso2.apimgt/gateway\"\n+  certificateAlias=\"ballerina\"\n+  validateAllowedAPIs=true", "originalCommit": "e8e4b9595f92da5f99c6959c0ac4d2847bb4e702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQyODE4Mw==", "url": "https://github.com/wso2/product-microgateway/pull/1129#discussion_r391428183", "bodyText": "fixed", "author": "hasuniea", "createdAt": "2020-03-12T06:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDczNQ=="}], "type": "inlineReview"}, {"oid": "0efe80a5ce404ae9feb28383a5273fdbf54831c3", "url": "https://github.com/wso2/product-microgateway/commit/0efe80a5ce404ae9feb28383a5273fdbf54831c3", "message": "fixed suggested changes", "committedDate": "2020-03-12T06:45:31Z", "type": "commit"}]}