{"pr_number": 1066, "pr_title": "Bug fixes", "pr_createdAt": "2020-02-29T04:06:46Z", "pr_url": "https://github.com/wso2/product-microgateway/pull/1066", "timeline": [{"oid": "fb6515b01f2ee35e761fb9009d854c356f06d0dc", "url": "https://github.com/wso2/product-microgateway/commit/fb6515b01f2ee35e761fb9009d854c356f06d0dc", "message": "bug fix: API creator field is not shown when request is throttled or failed", "committedDate": "2020-02-29T03:46:57Z", "type": "commit"}, {"oid": "fcead91c0e07eb64a0aba31f6e3a0f5322fa9e32", "url": "https://github.com/wso2/product-microgateway/commit/fcead91c0e07eb64a0aba31f6e3a0f5322fa9e32", "message": "bug fix: Null pointer exception log is printed in analytics console due to the unavailability of IP", "committedDate": "2020-02-29T03:55:11Z", "type": "commit"}, {"oid": "b7732b3ebc3c99ce2fa31bea5f95a9dee84b1b53", "url": "https://github.com/wso2/product-microgateway/commit/b7732b3ebc3c99ce2fa31bea5f95a9dee84b1b53", "message": "bug fix: token request fails when analytics has been enabled", "committedDate": "2020-02-29T03:59:13Z", "type": "commit"}, {"oid": "ee891547b6ca7e5961def9bcae80ab3d245b3ac5", "url": "https://github.com/wso2/product-microgateway/commit/ee891547b6ca7e5961def9bcae80ab3d245b3ac5", "message": "Merge branch 'master' into bug-fixes", "committedDate": "2020-02-29T04:10:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5OTEzNA==", "url": "https://github.com/wso2/product-microgateway/pull/1066#discussion_r385999134", "bodyText": "does this works properly", "author": "Rajith90", "createdAt": "2020-02-29T04:10:49Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -157,6 +157,9 @@ public function getClientIp(http:Request request, http:Caller caller) returns (s\n         }\n     } else {\n         clientIp = caller.remoteAddress.host;\n+        if (clientIp == \"\") {", "originalCommit": "b7732b3ebc3c99ce2fa31bea5f95a9dee84b1b53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5OTMyNg==", "url": "https://github.com/wso2/product-microgateway/pull/1066#discussion_r385999326", "bodyText": "Yes. I have tested.", "author": "VirajSalaka", "createdAt": "2020-02-29T04:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5OTEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5OTE4Ng==", "url": "https://github.com/wso2/product-microgateway/pull/1066#discussion_r385999186", "bodyText": "can we move this to separate function, used in two places", "author": "Rajith90", "createdAt": "2020-02-29T04:11:52Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/analytics_util.bal", "diffHunk": "@@ -73,6 +64,18 @@ function populateThrottleAnalyticsDTO(http:FilterContext context) returns (Throt\n         eventDto.subscriber = END_USER_ANONYMOUS;\n     }\n \n+    APIConfiguration? apiConfiguration = apiConfigAnnotationMap[context.getServiceName()];\n+    if (apiConfiguration is APIConfiguration) {\n+        eventDto.apiVersion = apiConfiguration.apiVersion;\n+        if (!stringutils:equalsIgnoreCase(\"\", <string>apiConfiguration.publisher)\n+                && stringutils:equalsIgnoreCase(\"\", <string>eventDto.apiCreator)) {\n+            eventDto.apiCreator = <string>apiConfiguration.publisher;\n+        } else if (stringutils:equalsIgnoreCase(\"\", <string>eventDto.apiCreator)) {\n+            //sets API creator if x-wso2-owner extension not specified.\n+            eventDto.apiCreator = UNKNOWN_VALUE;\n+        }\n+    }\n+", "originalCommit": "ee891547b6ca7e5961def9bcae80ab3d245b3ac5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5OTU0NA==", "url": "https://github.com/wso2/product-microgateway/pull/1066#discussion_r385999544", "bodyText": "It seems not possible since the DTO's are different in those two locations. And ballerina does not have the inhertance property AFAIK.", "author": "VirajSalaka", "createdAt": "2020-02-29T04:18:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5OTE4Ng=="}], "type": "inlineReview"}, {"oid": "9b3f23e9599f0ea7174b9d9ec0d1b71177ad7171", "url": "https://github.com/wso2/product-microgateway/commit/9b3f23e9599f0ea7174b9d9ec0d1b71177ad7171", "message": "Merge branch 'master' into bug-fixes", "committedDate": "2020-02-29T17:49:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzMTQ1NQ==", "url": "https://github.com/wso2/product-microgateway/pull/1066#discussion_r475331455", "bodyText": "invalid indentation", "author": "praminda", "createdAt": "2020-08-24T04:08:09Z", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/analytics_util.bal", "diffHunk": "@@ -127,7 +120,20 @@ function populateFaultAnalyticsDTO(http:FilterContext context, string err) retur\n         eventDto.applicationId = ANONYMOUS_APP_ID;\n         eventDto.userTenantDomain = ANONYMOUS_USER_TENANT_DOMAIN;\n     }\n-    metaInfo[\"correlationID\"] = <string>context.attributes[MESSAGE_ID];\n+\n+    APIConfiguration? apiConfig = apiConfigAnnotationMap[context.getServiceName()];\n+    if (apiConfig is APIConfiguration) {\n+        var api_Version = apiConfig.apiVersion;\n+        eventDto.apiVersion = api_Version;\n+        if (!stringutils:equalsIgnoreCase(\"\", <string>apiConfig.publisher)\n+                && stringutils:equalsIgnoreCase(\"\", <string>eventDto.apiCreator)) {\n+            eventDto.apiCreator = <string>apiConfig.publisher;\n+        } else if (stringutils:equalsIgnoreCase(\"\", <string>eventDto.apiCreator)) {\n+            //sets API creator if x-wso2-owner extension not specified.\n+            eventDto.apiCreator = UNKNOWN_VALUE;\n+        }\n+    }\n+metaInfo[\"correlationID\"] = <string>context.attributes[MESSAGE_ID];", "originalCommit": "9b3f23e9599f0ea7174b9d9ec0d1b71177ad7171", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}