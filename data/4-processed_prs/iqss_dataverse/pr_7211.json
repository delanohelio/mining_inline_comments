{"pr_number": 7211, "pr_title": "Add API methods for reporting and cleaning up inconsistencies between the database and Solr Index", "pr_createdAt": "2020-08-19T14:22:31Z", "pr_url": "https://github.com/IQSS/dataverse/pull/7211", "timeline": [{"oid": "77d12da8789629e2b59c72e5159f79da2613427f", "url": "https://github.com/IQSS/dataverse/commit/77d12da8789629e2b59c72e5159f79da2613427f", "message": "Updating existing API method for detecting orphan objects in the \ndatabase, and in Solr. Added a new API method for clearing all orphans. \n(#4225)", "committedDate": "2020-08-19T14:13:33Z", "type": "commit"}, {"oid": "c4d8cf710731d7263c5f773a7aa77c4590edd505", "url": "https://github.com/IQSS/dataverse/commit/c4d8cf710731d7263c5f773a7aa77c4590edd505", "message": "Add documentation for new API methods. \n(#4225)", "committedDate": "2020-08-20T14:03:51Z", "type": "commit"}, {"oid": "533aef3af7fb7b5e2318a375ffbf0523e25f2e87", "url": "https://github.com/IQSS/dataverse/commit/533aef3af7fb7b5e2318a375ffbf0523e25f2e87", "message": "skip datafiles when checking for missing solr permissions\n(#4225)", "committedDate": "2020-09-08T14:06:17Z", "type": "commit"}, {"oid": "4a42d2dde32d8d9b7f97e0022a3c357b91830c94", "url": "https://github.com/IQSS/dataverse/commit/4a42d2dde32d8d9b7f97e0022a3c357b91830c94", "message": "report on number of missing objects, rather than ids, to be consistent\nwith rest of the status message\n(#4225)", "committedDate": "2020-09-08T14:07:10Z", "type": "commit"}, {"oid": "125ea6fc1d83b14611eac3a7824412270d9ef1dc", "url": "https://github.com/IQSS/dataverse/commit/125ea6fc1d83b14611eac3a7824412270d9ef1dc", "message": "add integration test for Index status api call\n(#4225)", "committedDate": "2020-09-08T14:07:46Z", "type": "commit"}, {"oid": "1e91b2ea56de4df22a1d84174b780a10a6262238", "url": "https://github.com/IQSS/dataverse/commit/1e91b2ea56de4df22a1d84174b780a10a6262238", "message": "Merge branch 'develop' into 4225-stale-solr-record", "committedDate": "2020-09-08T14:40:50Z", "type": "commit"}, {"oid": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "url": "https://github.com/IQSS/dataverse/commit/fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "message": "adding release notes", "committedDate": "2020-09-08T14:49:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1OTU1OQ==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r485859559", "bodyText": "These docs look fine but I would prefer seeing them on this page: http://guides.dataverse.org/en/latest/admin/solr-search-index.html\nIt's nice having a single \"clear-orphans\" endpoint but is it fast enough? Will there be demand for a \"clear dataset orphan\"? I'm fine with putting \"clear-orphans\" out into the world and getting feedback about if more granularity is needed.", "author": "pdurbin", "createdAt": "2020-09-09T19:27:01Z", "path": "doc/sphinx-guides/source/api/native-api.rst", "diffHunk": "@@ -3061,6 +3061,20 @@ Note that if you are attempting to validate a very large number of datasets in y\n  \n      asadmin set server-config.network-config.protocols.protocol.http-listener-1.http.request-timeout-seconds=3600\n \n+\n+\n+Index and Database Consistency\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Get a list of all database objects that are missing in Solr, and Solr documents that are missing in the database::\n+\n+  curl $SERVER_URL/api/admin/index/status\n+\n+Remove all Solr documents that are orphaned (ie not associated with objects in the database)::\n+\n+  curl $SERVER_URL/api/admin/index/clear-orphans\n+\n+", "originalCommit": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzNjUyNQ==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r486436525", "bodyText": "moving the documentation to search-index.html.", "author": "ekraffmiller", "createdAt": "2020-09-10T15:30:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1OTU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg2MDA4Nw==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r485860087", "bodyText": "We should fill this in before it goes to QA. If my suggestion below is followed, we would point to http://guides.dataverse.org/en/latest/admin/solr-search-index.html", "author": "pdurbin", "createdAt": "2020-09-09T19:27:50Z", "path": "doc/release-notes/4225-stale-solr-records.md", "diffHunk": "@@ -0,0 +1,7 @@\n+## Major Use Cases\n+\n+- Administrators will be able to use new APIs to keep the Solr index and the DB in sync, allowing easier resolution of an issue that would occasionally cause search results to not load. \n+\n+## Notes for Dataverse Installation Administrators\n+\n+New API endpoints... point to Guides", "originalCommit": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg2MzU5Ng==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r485863596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             } catch (SearchException ex) {\n          \n          \n            \n                    } catch (SearchException ex) {", "author": "pdurbin", "createdAt": "2020-09-09T19:32:28Z", "path": "src/main/java/edu/harvard/iq/dataverse/api/Index.java", "diffHunk": "@@ -384,15 +384,16 @@ public Response indexStatus() {\n         JsonObjectBuilder contentInDatabaseButStaleInOrMissingFromSolr = getContentInDatabaseButStaleInOrMissingFromSolr();\n \n         JsonObjectBuilder contentInSolrButNotDatabase;\n+        JsonObjectBuilder permissionsInSolrButNotDatabase;\n         try {\n             contentInSolrButNotDatabase = getContentInSolrButNotDatabase();\n-        } catch (SearchException ex) {\n+            permissionsInSolrButNotDatabase = getPermissionsInSolrButNotDatabase();\n+ } catch (SearchException ex) {", "originalCommit": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3MzM2NQ==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r485873365", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * re-indexed Solr was down when a permission was added. The permission\n          \n          \n            \n                 * re-indexed because Solr was down when a permission was added. The permission", "author": "pdurbin", "createdAt": "2020-09-09T19:44:25Z", "path": "src/main/java/edu/harvard/iq/dataverse/search/SolrIndexServiceBean.java", "diffHunk": "@@ -532,12 +528,15 @@ public JsonObjectBuilder deleteAllFromSolrAndResetIndexTimes() throws SolrServer\n     }\n \n     /**\n-     * @todo Do we want to report the root dataverse (id 1, often) in\n-     * permissionsInDatabaseButMissingFromSolr?\n+     * \n      *\n      * @return A list of dvobject ids that should have their permissions\n      * re-indexed Solr was down when a permission was added. The permission", "originalCommit": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ0NjY2NA==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r486446664", "bodyText": "updated comments", "author": "ekraffmiller", "createdAt": "2020-09-10T15:44:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3MzM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3ODQ1OQ==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r485878459", "bodyText": "As a possible performance optimization, since we're skipping data files anyway, perhaps instead of the dvObjectService.findAll() above we could get just a list of dataverses and datasets. I don't know if it would help with performance or not, or if performance is even a problem.", "author": "pdurbin", "createdAt": "2020-09-09T19:50:16Z", "path": "src/main/java/edu/harvard/iq/dataverse/search/SolrIndexServiceBean.java", "diffHunk": "@@ -547,7 +546,7 @@ public JsonObjectBuilder deleteAllFromSolrAndResetIndexTimes() throws SolrServer\n             Timestamp permissionModificationTime = dvObject.getPermissionModificationTime();\n             Timestamp permissionIndexTime = dvObject.getPermissionIndexTime();\n             if (permissionIndexTime == null) {\n-                if (dvObject.getId() != rootDvId) {\n+                if (dvObject.getId() != rootDvId && !dvObject.isInstanceofDataFile()) {", "originalCommit": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ0NTQ3MA==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r486445470", "bodyText": "talked about this and decided to see how performance is in production before making a change", "author": "ekraffmiller", "createdAt": "2020-09-10T15:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3ODQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg4MjI0MA==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r485882240", "bodyText": "I go back and forth on cleanup like this. One one hand it's nice not to junk up your dev environment with test data. On the other hand, if the delete fails and the whole test suite fails as a result, it's frustrating. One thing I sometimes do is put the delete calls in but don't assert that they succeed. No need to changes anything here. It's just something that popped in my head.", "author": "pdurbin", "createdAt": "2020-09-09T19:54:30Z", "path": "src/test/java/edu/harvard/iq/dataverse/api/IndexIT.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package edu.harvard.iq.dataverse.api;\n+\n+import com.jayway.restassured.RestAssured;\n+import static com.jayway.restassured.RestAssured.given;\n+import com.jayway.restassured.path.json.JsonPath;\n+import com.jayway.restassured.response.Response;\n+import static edu.harvard.iq.dataverse.api.UtilIT.API_TOKEN_HTTP_HEADER;\n+import edu.harvard.iq.dataverse.settings.SettingsServiceBean;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.logging.Logger;\n+import static javax.ws.rs.core.Response.Status.CREATED;\n+import static javax.ws.rs.core.Response.Status.NO_CONTENT;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import static javax.ws.rs.core.Response.Status.OK;\n+import static junit.framework.Assert.assertEquals;\n+import org.hamcrest.CoreMatchers;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import org.junit.After;\n+\n+public class IndexIT {\n+\n+    private static final Logger logger = Logger.getLogger(IndexIT.class.getCanonicalName());\n+\n+    @BeforeClass\n+    public static void setUpClass() {\n+\n+        RestAssured.baseURI = UtilIT.getRestAssuredBaseUri();\n+\n+        Response makeSureTokenlessSearchIsEnabled = UtilIT.deleteSetting(SettingsServiceBean.Key.SearchApiRequiresToken);\n+        makeSureTokenlessSearchIsEnabled.then().assertThat()\n+                .statusCode(OK.getStatusCode());\n+\n+        Response remove = UtilIT.deleteSetting(SettingsServiceBean.Key.ThumbnailSizeLimitImage);\n+        remove.then().assertThat()\n+                .statusCode(200);\n+\n+    }\n+\n+  \n+    @Test\n+    public void testIndexStatus() {\n+\n+        Response createUser = UtilIT.createRandomUser();\n+        createUser.prettyPrint();\n+        String username = UtilIT.getUsernameFromResponse(createUser);\n+        String apiToken = UtilIT.getApiTokenFromResponse(createUser);\n+\n+        Response createDataverseResponse = UtilIT.createRandomDataverse(apiToken);\n+        createDataverseResponse.prettyPrint();\n+        String dataverseAlias = UtilIT.getAliasFromResponse(createDataverseResponse);\n+\n+        Response createDatasetResponse = UtilIT.createRandomDatasetViaNativeApi(dataverseAlias, apiToken);\n+        createDatasetResponse.prettyPrint();\n+        Integer datasetId = UtilIT.getDatasetIdFromResponse(createDatasetResponse);\n+        Response getDatasetJsonNoFiles = UtilIT.nativeGet(datasetId, apiToken);\n+        getDatasetJsonNoFiles.prettyPrint();\n+        String protocol1 = JsonPath.from(getDatasetJsonNoFiles.getBody().asString()).getString(\"data.protocol\");\n+        String authority1 = JsonPath.from(getDatasetJsonNoFiles.getBody().asString()).getString(\"data.authority\");\n+        String identifier1 = JsonPath.from(getDatasetJsonNoFiles.getBody().asString()).getString(\"data.identifier\");\n+        String dataset1PersistentId = protocol1 + \":\" + authority1 + \"/\" + identifier1;\n+\n+        Response uploadMd5File = UtilIT.uploadRandomFile(dataset1PersistentId, apiToken);\n+        uploadMd5File.prettyPrint();\n+        assertEquals(CREATED.getStatusCode(), uploadMd5File.getStatusCode());\n+   \n+        Response response = given()\n+                .header(API_TOKEN_HTTP_HEADER, apiToken)\n+                .get(\"/api/admin/index/status\");\n+        response.prettyPrint();\n+        ArrayList emptyList = new ArrayList<>();\n+        HashMap data = response.getBody().jsonPath().get(\"data.contentInDatabaseButStaleInOrMissingFromIndex\");\n+        System.out.println(data + \" \" + data.getClass());\n+        response.then().assertThat().statusCode(OK.getStatusCode())\n+                .body(\"data.contentInDatabaseButStaleInOrMissingFromIndex.dataverses\", CoreMatchers.equalTo(emptyList))\n+                .body(\"data.contentInDatabaseButStaleInOrMissingFromIndex.datasets\", CoreMatchers.equalTo(emptyList))\n+                .body(\"data.contentInIndexButNotDatabase.dataverses\", CoreMatchers.equalTo(emptyList))\n+                .body(\"data.contentInIndexButNotDatabase.datasets\", CoreMatchers.equalTo(emptyList))\n+                .body(\"data.contentInIndexButNotDatabase.files\", CoreMatchers.equalTo(emptyList))\n+                .body(\"data.permissionsInDatabaseButStaleInOrMissingFromIndex.dvobjects\", CoreMatchers.equalTo(emptyList))\n+                .body(\"data.permissionsInIndexButNotDatabase.permissions\", CoreMatchers.equalTo(emptyList));\n+        \n+        Response getDatasetJsonAfterMd5File = UtilIT.nativeGet(datasetId, apiToken);\n+        getDatasetJsonAfterMd5File.prettyPrint();\n+        getDatasetJsonAfterMd5File.then().assertThat()\n+                .body(\"data.latestVersion.files[0].dataFile.md5\", equalTo(\"0386269a5acb2c57b4eade587ff4db64\"))\n+                .body(\"data.latestVersion.files[0].dataFile.checksum.type\", equalTo(\"MD5\"))\n+                .body(\"data.latestVersion.files[0].dataFile.checksum.value\", equalTo(\"0386269a5acb2c57b4eade587ff4db64\"));\n+\n+        int fileId = JsonPath.from(getDatasetJsonAfterMd5File.getBody().asString()).getInt(\"data.latestVersion.files[0].dataFile.id\");\n+        Response deleteFile = UtilIT.deleteFile(fileId, apiToken);\n+        deleteFile.prettyPrint();\n+        deleteFile.then().assertThat()\n+                .statusCode(NO_CONTENT.getStatusCode());\n+\n+        Response deleteDatasetResponse = UtilIT.deleteDatasetViaNativeApi(datasetId, apiToken);\n+        deleteDatasetResponse.prettyPrint();\n+        deleteDatasetResponse.then().assertThat()\n+                .statusCode(OK.getStatusCode());\n+\n+        Response deleteDataverseResponse = UtilIT.deleteDataverse(dataverseAlias, apiToken);\n+        deleteDataverseResponse.prettyPrint();\n+        deleteDataverseResponse.then().assertThat()\n+                .statusCode(OK.getStatusCode());\n+\n+        Response deleteUserResponse = UtilIT.deleteUser(username);\n+        deleteUserResponse.prettyPrint();\n+        assertEquals(200, deleteUserResponse.getStatusCode());", "originalCommit": "fbdac70e25f59b83e54a76a2a6f55b7436af71d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ0NjI5MA==", "url": "https://github.com/IQSS/dataverse/pull/7211#discussion_r486446290", "bodyText": "removing the assert tests from the delete calls.", "author": "ekraffmiller", "createdAt": "2020-09-10T15:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg4MjI0MA=="}], "type": "inlineReview"}, {"oid": "1adbf71db532ef0d4e4108e90a229195cffb42b1", "url": "https://github.com/IQSS/dataverse/commit/1adbf71db532ef0d4e4108e90a229195cffb42b1", "message": "changes based on code review for #4225", "committedDate": "2020-09-10T15:45:58Z", "type": "commit"}, {"oid": "96e6be6af2c25a803e8b9d247dcfead5975969e0", "url": "https://github.com/IQSS/dataverse/commit/96e6be6af2c25a803e8b9d247dcfead5975969e0", "message": "changes based on code review for #4225 - removed asserts for delete calls", "committedDate": "2020-09-10T15:51:51Z", "type": "commit"}, {"oid": "abcc9d844d50391d8a6682932fb965086c41ee14", "url": "https://github.com/IQSS/dataverse/commit/abcc9d844d50391d8a6682932fb965086c41ee14", "message": "Merge branch '4225-stale-solr-record' of github.com:IQSS/dataverse into 4225-stale-solr-record\n\n# Conflicts:\n#\tdoc/release-notes/4225-stale-solr-records.md", "committedDate": "2020-09-10T16:10:58Z", "type": "commit"}, {"oid": "75146fb862e14c4da66c474f52a644614566d2bb", "url": "https://github.com/IQSS/dataverse/commit/75146fb862e14c4da66c474f52a644614566d2bb", "message": "Merge branch 'develop' into 4225-stale-solr-record", "committedDate": "2020-09-11T15:15:46Z", "type": "commit"}, {"oid": "68adf561b3fc90197c25e5726ac89b945e198442", "url": "https://github.com/IQSS/dataverse/commit/68adf561b3fc90197c25e5726ac89b945e198442", "message": "Improved performance of API methods by making the SQL queries more \nefficient. Have the API methods return immediately, and report progress\nand method result in server.log.", "committedDate": "2020-09-17T20:45:58Z", "type": "commit"}, {"oid": "d5e35ad1b20c2079b6a4c8ab6ff03237bd0e7c68", "url": "https://github.com/IQSS/dataverse/commit/d5e35ad1b20c2079b6a4c8ab6ff03237bd0e7c68", "message": "Merge branch '4225-stale-solr-record' of github.com:IQSS/dataverse into 4225-stale-solr-record", "committedDate": "2020-09-17T20:49:51Z", "type": "commit"}, {"oid": "3fee1b8bd8d27880aa1e747780964173eb483e07", "url": "https://github.com/IQSS/dataverse/commit/3fee1b8bd8d27880aa1e747780964173eb483e07", "message": "make the indexStatus and clearOrphans optionally synchronous", "committedDate": "2020-09-21T15:11:28Z", "type": "commit"}, {"oid": "5f1cc68f8bc0272d3a2ec53b363267eb506a769b", "url": "https://github.com/IQSS/dataverse/commit/5f1cc68f8bc0272d3a2ec53b363267eb506a769b", "message": "fix compile error in compareOrphans()", "committedDate": "2020-09-21T16:19:39Z", "type": "commit"}, {"oid": "d01ca830dc4e3df7719c3f1e85a95e374ed18e47", "url": "https://github.com/IQSS/dataverse/commit/d01ca830dc4e3df7719c3f1e85a95e374ed18e47", "message": "match style of other curl commands #4225", "committedDate": "2020-09-22T15:29:02Z", "type": "commit"}]}