{"pr_number": 2434, "pr_title": "GH-2415 allow parsing RDF* using standard sparql json result parser", "pr_createdAt": "2020-08-12T03:18:00Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2434", "timeline": [{"oid": "977cb51b56310077e5d13300205d2779920c9867", "url": "https://github.com/eclipse/rdf4j/commit/977cb51b56310077e5d13300205d2779920c9867", "message": "GH-2415 allow parsing RDF* using standard sparql json result parser\n\n- support Stardog syntax variant\n- support Jena syntax variant", "committedDate": "2020-08-12T05:45:07Z", "type": "commit"}, {"oid": "977cb51b56310077e5d13300205d2779920c9867", "url": "https://github.com/eclipse/rdf4j/commit/977cb51b56310077e5d13300205d2779920c9867", "message": "GH-2415 allow parsing RDF* using standard sparql json result parser\n\n- support Stardog syntax variant\n- support Jena syntax variant", "committedDate": "2020-08-12T05:45:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0NDI2MA==", "url": "https://github.com/eclipse/rdf4j/pull/2434#discussion_r469844260", "bodyText": "Does it make sense to also add a test for the statement-encoded-as-base64 variant of the backwards-compatible output? And speaking of which, maybe even any generic plain JSON-LD output, as the SPARQL* parser should also be able to read that, right?", "author": "jetztgradnet", "createdAt": "2020-08-13T10:09:09Z", "path": "core/queryresultio/sparqljson/src/test/resources/sparqljson/rdfstar-extendedformat-rdf4j.srj", "diffHunk": "@@ -0,0 +1,41 @@\n+{", "originalCommit": "977cb51b56310077e5d13300205d2779920c9867", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI5OTMwMw==", "url": "https://github.com/eclipse/rdf4j/pull/2434#discussion_r470299303", "bodyText": "Does it make sense to also add a test for the statement-encoded-as-base64 variant of the backwards-compatible output?\n\nThe base-64 encoding is something the writer uses to transform a triple value to a URI, so that it can be added to a result format serialization without the need for special extensions. It doesn't really make sense to add tests for it at the parser end because the whole point of it is that the parser treats it like any other URI.\nArguably we could have some tests in place for the writer to check that the encoding is properly applied when the selected format doesn't support RDF* extensions, but that's a little out of scope for what we're doing here I think. I may look at that in a followup though as I may want to change the logic there a little bit.\n\nAnd speaking of which, maybe even any generic plain JSON-LD output, as the SPARQL* parser should also be able to read that, right?\n\nNote that what we're fixing here is specifically the parser for the SPARQL table results format. JSON-LD is a different format, a serialization for RDF graphs (rather than table results), and it has a separate parser/writer. Currently, RDF4J's JSON-LD parser/writer does not support any RDF* extensions - the only RDF serialization formats that have been extended are Turtle (Turtle*), TriG (TriG*), and the RDF4J Binary RDF format. For all other formats, you can configure the writer to either convert RDF* triples to \"classic\" reification, or to use the same base64 encoding trick.", "author": "jeenbroekstra", "createdAt": "2020-08-13T23:16:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0NDI2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4MjA0NA==", "url": "https://github.com/eclipse/rdf4j/pull/2434#discussion_r470382044", "bodyText": "I've created a followup issue for more configurable writing behavior: #2437 . Separate PR coming up soon", "author": "jeenbroekstra", "createdAt": "2020-08-14T02:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0NDI2MA=="}], "type": "inlineReview"}]}