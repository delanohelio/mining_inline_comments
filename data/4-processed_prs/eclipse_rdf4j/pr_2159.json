{"pr_number": 2159, "pr_title": "Gh 2151 nativestore datastore benchmarks", "pr_createdAt": "2020-05-01T08:52:48Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2159", "timeline": [{"oid": "9ac7d14e988b8f68b99d565fb205029485276311", "url": "https://github.com/eclipse/rdf4j/commit/9ac7d14e988b8f68b99d565fb205029485276311", "message": "GH-2151 benchmarks and some required adjustments for robust benchmakrs\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-05-01T10:40:02Z", "type": "commit"}, {"oid": "2e524e791906f69be007e0492df05b4d5b1a56cd", "url": "https://github.com/eclipse/rdf4j/commit/2e524e791906f69be007e0492df05b4d5b1a56cd", "message": "more benchmarks and cleanup", "committedDate": "2020-05-01T10:40:02Z", "type": "commit"}, {"oid": "2e524e791906f69be007e0492df05b4d5b1a56cd", "url": "https://github.com/eclipse/rdf4j/commit/2e524e791906f69be007e0492df05b4d5b1a56cd", "message": "more benchmarks and cleanup", "committedDate": "2020-05-01T10:40:02Z", "type": "forcePushed"}, {"oid": "549467b570b79d429aafcfa7241f954763ae7cf4", "url": "https://github.com/eclipse/rdf4j/commit/549467b570b79d429aafcfa7241f954763ae7cf4", "message": "GH-2151 TPS benchmarks are more useful when they don't create a new native store for every measurement\n\nSigned-off-by: Ha\u030avard Ottestad <hmottestad@gmail.com>", "committedDate": "2020-05-02T08:15:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzMjU0Nw==", "url": "https://github.com/eclipse/rdf4j/pull/2159#discussion_r419232547", "bodyText": "new public method", "author": "hmottestad", "createdAt": "2020-05-04T06:27:43Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/datastore/DataFile.java", "diffHunk": "@@ -191,6 +191,10 @@ public void sync() throws IOException {\n \t\t}\n \t}\n \n+\tpublic void sync(boolean force) throws IOException {\n+\t\tnioFile.force(force);\n+\t}", "originalCommit": "549467b570b79d429aafcfa7241f954763ae7cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzMjY0Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2159#discussion_r419232646", "bodyText": "new public constructor", "author": "hmottestad", "createdAt": "2020-05-04T06:28:04Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/datastore/HashFile.java", "diffHunk": "@@ -91,6 +89,10 @@ public HashFile(File file) throws IOException {\n \t}\n \n \tpublic HashFile(File file, boolean forceSync) throws IOException {\n+\t\tthis(file, forceSync, 512); // 512 is default initial size\n+\t}\n+\n+\tpublic HashFile(File file, boolean forceSync, int initialSize) throws IOException {\n \t\tthis.nioFile = new NioFile(file);\n \t\tthis.forceSync = forceSync;\n \t\tloadFactor = 0.75f;", "originalCommit": "549467b570b79d429aafcfa7241f954763ae7cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzMjcwOQ==", "url": "https://github.com/eclipse/rdf4j/pull/2159#discussion_r419232709", "bodyText": "new public method", "author": "hmottestad", "createdAt": "2020-05-04T06:28:15Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/datastore/HashFile.java", "diffHunk": "@@ -255,6 +258,11 @@ public void sync() throws IOException {\n \t\t}\n \t}\n \n+\tpublic void sync(boolean force) throws IOException {\n+\t\tsync();\n+\t\tnioFile.force(force);\n+\t}", "originalCommit": "549467b570b79d429aafcfa7241f954763ae7cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzMjc3Ng==", "url": "https://github.com/eclipse/rdf4j/pull/2159#discussion_r419232776", "bodyText": "new public method", "author": "hmottestad", "createdAt": "2020-05-04T06:28:25Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/datastore/IDFile.java", "diffHunk": "@@ -249,6 +249,10 @@ public void sync() throws IOException {\n \t\t}\n \t}\n \n+\tpublic void sync(boolean force) throws IOException {\n+\t\tnioFile.force(false);\n+\t}", "originalCommit": "549467b570b79d429aafcfa7241f954763ae7cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzMjgwOQ==", "url": "https://github.com/eclipse/rdf4j/pull/2159#discussion_r419232809", "bodyText": "new public method", "author": "hmottestad", "createdAt": "2020-05-04T06:28:32Z", "path": "core/sail/nativerdf/src/main/java/org/eclipse/rdf4j/sail/nativerdf/datastore/IDFile.java", "diffHunk": "@@ -284,4 +288,11 @@ public void close() throws IOException {\n \t\t}\n \t\treturn cacheLine;\n \t}\n+\n+\tsynchronized public void clearCache() {\n+\t\tcache.clear();\n+\t\tgcReducingCacheIndex = -1;\n+\t\tgcReducingCache = null;\n+\t}", "originalCommit": "549467b570b79d429aafcfa7241f954763ae7cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzMzA5MA==", "url": "https://github.com/eclipse/rdf4j/pull/2159#discussion_r419233090", "bodyText": "to run benchmarks from eclipse", "author": "hmottestad", "createdAt": "2020-05-04T06:29:28Z", "path": "core/sail/nativerdf/src/test/java/org/eclipse/rdf4j/sail/nativerdf/benchmark/Main.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eclipse RDF4J contributors.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Distribution License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ *******************************************************************************/\n+\n+package org.eclipse.rdf4j.sail.nativerdf.benchmark;\n+\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * @author H\u00e5vard Ottestad\n+ */\n+\n+public class Main {\n+\n+\tpublic static void main(String[] args) throws RunnerException {\n+\t\tOptions opt = new OptionsBuilder()\n+\t\t\t\t.include(\"\")\n+//\t\t\t\t.include(\"DataFileBenchmark.write$\")\n+//\t\t\t\t.forks(0)\n+\t\t\t\t.build();\n+\n+\t\tnew Runner(opt).run();\n+\t}\n+\n+}", "originalCommit": "549467b570b79d429aafcfa7241f954763ae7cf4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}