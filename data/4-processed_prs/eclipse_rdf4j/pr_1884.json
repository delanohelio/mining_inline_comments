{"pr_number": 1884, "pr_title": "GH-1882: basic support for property path in FedX engine", "pr_createdAt": "2020-01-28T17:55:52Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/1884", "timeline": [{"oid": "932a036f88caac6569e3a342c87b08cce1fd1dd7", "url": "https://github.com/eclipse/rdf4j/commit/932a036f88caac6569e3a342c87b08cce1fd1dd7", "message": "GH-1882: basic support for property path in FedX engine\n\nThis change adds basic support for property paths in the federation\nengine.\n\nExample patterns:\n\n* ?subClass rdfs:subClassOf/rdfs:label ?label\n* ?class rdfs:subClassOf+ ?class\n* ?concept rdfs:label|skos:altLabel ?label\n\nNote that some adjustments to queryalgebra PathIteration were required:\n\n* as in FedX we generate SPARQL query strings, variables must not\ncontain the \"-\" character (which is invalid for SPARQL queries). This\ncharacter is replaced with _\n* in the FedX engine we are not seeing \"QueryBindingSet\" instances, but\n\"MapBindingSet\" instances. The addBinding method is made robust to\nsupport both instance types\n* in remote settings we even see ListBindingSet. In the check we make\nsure to convert the BindingSet instance if required\n\nNote also that the cost model estimation now only shows a warning if the\ntype of the node is unknown.", "committedDate": "2020-01-28T17:53:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MDYxMw==", "url": "https://github.com/eclipse/rdf4j/pull/1884#discussion_r372180613", "bodyText": "FWIW I have long thought that we are using the various bindingset implementations inconsistently throughout the framework. It could do with straightening out.", "author": "jeenbroekstra", "createdAt": "2020-01-29T04:12:20Z", "path": "core/queryalgebra/evaluation/src/main/java/org/eclipse/rdf4j/query/algebra/evaluation/iterator/PathIteration.java", "diffHunk": "@@ -190,6 +195,16 @@ protected BindingSet getNextElement() throws QueryEvaluationException {\n \t\t}\n \t}\n \n+\tprivate void addBinding(BindingSet bs, String name, Value value) {\n+\t\tif (bs instanceof QueryBindingSet) {\n+\t\t\t((QueryBindingSet) bs).addBinding(name, value);\n+\t\t} else if (bs instanceof MapBindingSet) {\n+\t\t\t((MapBindingSet) bs).addBinding(name, value);\n+\t\t} else {\n+\t\t\tthrow new IllegalStateException(\"Unexpected BindingSet implementation: \" + bs.getClass());", "originalCommit": "932a036f88caac6569e3a342c87b08cce1fd1dd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}