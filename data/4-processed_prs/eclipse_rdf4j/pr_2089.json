{"pr_number": 2089, "pr_title": "Extended instructions on how to build the project", "pr_createdAt": "2020-04-14T00:27:20Z", "pr_url": "https://github.com/eclipse/rdf4j/pull/2089", "timeline": [{"oid": "d0d1a14fd1683c52f2239728a29d5f0a087cd6cc", "url": "https://github.com/eclipse/rdf4j/commit/d0d1a14fd1683c52f2239728a29d5f0a087cd6cc", "message": "Extended instructions on how to build the project", "committedDate": "2020-04-14T00:26:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzOTM3NQ==", "url": "https://github.com/eclipse/rdf4j/pull/2089#discussion_r408139375", "bodyText": "I have a question about this. I notice that when I build the project it downloads rdf4j dependencies off of the eclipse snapshot server, does this mean that mvn verify could run a test that fixes an issue that doesn't get built but instead gets pulled from the remote server and doesn't contain the fix, thus making the test fail?", "author": "hmottestad", "createdAt": "2020-04-14T13:33:50Z", "path": "README.md", "diffHunk": "@@ -15,13 +15,22 @@ For installation and usage instructions of the RDF4J Java libaries, see [Program\n \n ### Building from source\n \n-To build the RDF4J project, including onejar and SDK files, from source, run:\n+RDF4J is a multi-module [maven](https://maven.apache.org/index.html) project. It can be compiled, tested, and installed with the [usual maven lifecycle phases](https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html) from the command line, for example:\n \n-     `mvn -Passembly package`\n+- `mvn verify` - compiles and runs all tests", "originalCommit": "d0d1a14fd1683c52f2239728a29d5f0a087cd6cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3Nzc4NA==", "url": "https://github.com/eclipse/rdf4j/pull/2089#discussion_r408477784", "bodyText": "No, that shouldn't happen - the maven reactor always gives modules included in the multi-module build preference over (snapshot) dependencies in the repo.\nOf course it would download snapshots if you are building only a part of the project (e.g. one module). Example: if you are running mvn verify while in core/rio/binary, it will download (a.o.) the rio-api snapshot dependency to make sure it has the most recent version. If you have made local changes to rio-api, those changes will only be included in the build if you have previously run mvn install on rio-api, so that the snapshot dependency in your local repo is the most recent version, and maven will pick that over the (older) downloaded snapshot.\nAre you sure you are seeing these downloads when building the entire project? If so can you open a ticket and attach the exact command you do and the output (you can use -l <filename> to log all maven's output to a file)? It's possible we have a misconfiguration somewhere of course, but I can't reproduce the problem locally.", "author": "jeenbroekstra", "createdAt": "2020-04-14T22:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzOTM3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2ODM2OQ==", "url": "https://github.com/eclipse/rdf4j/pull/2089#discussion_r408668369", "bodyText": "You are right of course. I've been seeing the downloads from the japicmp tool and not looked at them too closely.", "author": "hmottestad", "createdAt": "2020-04-15T08:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzOTM3NQ=="}], "type": "inlineReview"}]}