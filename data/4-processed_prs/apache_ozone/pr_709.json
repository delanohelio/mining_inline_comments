{"pr_number": 709, "pr_title": "HDDS-3244. Improve write efficiency by opening RocksDB only once", "pr_createdAt": "2020-03-23T13:30:04Z", "pr_url": "https://github.com/apache/ozone/pull/709", "timeline": [{"oid": "a6340a62366766a444ad20bb10cba2893f9be098", "url": "https://github.com/apache/ozone/commit/a6340a62366766a444ad20bb10cba2893f9be098", "message": "HDDS-3244. Improve write efficiency by opening RocksDB only once", "committedDate": "2020-03-23T13:08:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ==", "url": "https://github.com/apache/ozone/pull/709#discussion_r396498271", "bodyText": "Thanks for working on this @runzhiwang. Can we add to the cache here ?\nAlso the entry should be added to cache here and not in the apply transaction phase.", "author": "mukul1987", "createdAt": "2020-03-23T14:37:09Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/keyvalue/helpers/KeyValueContainerUtil.java", "diffHunk": "@@ -73,14 +71,6 @@ public static void createContainerMetaData(File containerMetaDataPath, File\n       throw new IOException(\"Unable to create directory for metadata storage.\" +\n           \" Path: \" + containerMetaDataPath);\n     }\n-    MetadataStore store = MetadataStoreBuilder.newBuilder().setConf(conf)\n-        .setCreateIfMissing(true).setDbFile(dbFile).build();", "originalCommit": "a6340a62366766a444ad20bb10cba2893f9be098", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwOTc3MA==", "url": "https://github.com/apache/ozone/pull/709#discussion_r396509770", "bodyText": "@mukul1987 This is in HddsDispatcher.WriteData, if add to the cache here, 2 follower datanodes will not execute RocksDB.open in their HddsDispatcher.WriteData until the leader datanode finish HddsDispatcher.WriteData including RocksDB.open, so leader and follower open RocksDB in sequential. But if in apply transaction phase, leader and follower can open RocksDB in parallel, it save 200ms. I think RocksDB was not used until HddsDispatcher.PutBlock, so add to cache in apply transaction phase does not matter. Please fix me if I am wrong.", "author": "runzhiwang", "createdAt": "2020-03-23T14:52:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE2MjU5OA==", "url": "https://github.com/apache/ozone/pull/709#discussion_r397162598", "bodyText": "@runzhiwang , createContainer happens as a part of writeStateMachineData which gets executed on all nodes(leader and follower) independent of each other. I would prefer to add it to the container cache as soon as it gets created on the datanode on disk.", "author": "bshashikant", "createdAt": "2020-03-24T13:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNDg5NA==", "url": "https://github.com/apache/ozone/pull/709#discussion_r397204894", "bodyText": "@bshashikant Hi, but it looks like they are not independent of each other, follower must wait leader finish createContainer.", "author": "runzhiwang", "createdAt": "2020-03-24T14:40:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzOTcxMw==", "url": "https://github.com/apache/ozone/pull/709#discussion_r397239713", "bodyText": "@bshashikant Hi, but it looks like they are not independent of each other, follower must wait leader finish createContainer.\n\nCan we point me to the code where you see this happening or we can have a call to discuss this further offline?", "author": "bshashikant", "createdAt": "2020-03-24T15:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2ODUyNw==", "url": "https://github.com/apache/ozone/pull/709#discussion_r397568527", "bodyText": "@bshashikant @mukul1987\n\nCan we point me to the code where you see this happening or we can have a call to discuss this further offline?\n\n\nFrom the code,  the future thread do getCachedStateMachineData  in readStateMachineData and the future thread do createContainer in writeStateMachineData are the same thread. Because writeStateMachineData  called before readStateMachineData. So leader must wait createContainer finish then getCachedStateMachineData and append logs to the follower, so leader and follower are not independent, follower must wait leader finish createContainer.\nHow to improve it:\nI think this order can be improved by distinguishing the thread used by getCachedStateMachineData   and createContainer , and  data = readStateMachineData(requestProto, term, logIndex)  use same thread with createContainer . If stateMachineDataCache.get(logIndex) does not return null,  leader can get stateMachineData from cache and need not wait createContainer finish, thus leader and follower can be independent. But if it return null, leader must finish createContainer and then apennd logs to the follower, so I think data = readStateMachineData(requestProto, term, logIndex) should use the same thread with createContainer rather than the whole getCachedStateMachineData, and in this case leader and follower are not independent, open RocksDB when commit data is still meaningful. What do you think ?\nFrom the jaeger UI, you can also see follower create container after leader finishing it currently.", "author": "runzhiwang", "createdAt": "2020-03-25T02:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTc5OA==", "url": "https://github.com/apache/ozone/pull/709#discussion_r398305798", "bodyText": "Thanks @runzhiwang . readStateMachine getting invoked after writeStateMachineData completes, is happening bcoz of recent change. i agree with ur proposal here. Can we fix this order first and then we can add the container to container cache as soon as creation of container is complete?", "author": "bshashikant", "createdAt": "2020-03-26T04:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMDQwMw==", "url": "https://github.com/apache/ozone/pull/709#discussion_r398310403", "bodyText": "@bshashikant Thanks, I will open another PR to fix the dependent of leader and follower.\nAnd do you think where we should put the RocksDB into cache ? Here or CommitData i.e. apply transaction phase. If place it here, once cache miss, follower must wait leader, the wait time including RocksDB.open which cost 200ms. If place it in CommitData, once cache miss, follower need not wait so long.", "author": "runzhiwang", "createdAt": "2020-03-26T04:24:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5ODI3MQ=="}], "type": "inlineReview"}, {"oid": "30943982300dcaee373e5dfe7499053eac24d3bb", "url": "https://github.com/apache/ozone/commit/30943982300dcaee373e5dfe7499053eac24d3bb", "message": "HDDS-3244. Open Rocksdb in createContainer", "committedDate": "2020-03-27T09:46:07Z", "type": "forcePushed"}, {"oid": "b55237d114e3d8e70acbbbdac7dfc93f6b5443fa", "url": "https://github.com/apache/ozone/commit/b55237d114e3d8e70acbbbdac7dfc93f6b5443fa", "message": "HDDS-3244. Open Rocksdb in createContainer", "committedDate": "2020-03-27T09:48:41Z", "type": "forcePushed"}, {"oid": "a145399c4d979244698d9dbef966671bc7e45cba", "url": "https://github.com/apache/ozone/commit/a145399c4d979244698d9dbef966671bc7e45cba", "message": "HDDS-3244. Open Rocksdb in createContainer", "committedDate": "2020-03-27T10:50:53Z", "type": "forcePushed"}, {"oid": "a145399c4d979244698d9dbef966671bc7e45cba", "url": "https://github.com/apache/ozone/commit/a145399c4d979244698d9dbef966671bc7e45cba", "message": "HDDS-3244. Open Rocksdb in createContainer", "committedDate": "2020-03-27T10:50:53Z", "type": "commit"}, {"oid": "01853b20d9fcdcd4660052ee7aace4ee19e6aee1", "url": "https://github.com/apache/ozone/commit/01853b20d9fcdcd4660052ee7aace4ee19e6aee1", "message": "retrigger build with empty commit", "committedDate": "2020-04-02T01:47:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE1NjQ4Mg==", "url": "https://github.com/apache/ozone/pull/709#discussion_r402156482", "bodyText": "I think its better to update the cache only at the end of function \"createContainerMetaData\" so that even if the chunk dir creation fails, it won't be added to the container cache.", "author": "bshashikant", "createdAt": "2020-04-02T08:57:14Z", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/keyvalue/helpers/KeyValueContainerUtil.java", "diffHunk": "@@ -73,14 +73,13 @@ public static void createContainerMetaData(File containerMetaDataPath, File\n       throw new IOException(\"Unable to create directory for metadata storage.\" +\n           \" Path: \" + containerMetaDataPath);\n     }\n+\n     MetadataStore store = MetadataStoreBuilder.newBuilder().setConf(conf)\n         .setCreateIfMissing(true).setDbFile(dbFile).build();\n-\n-    // we close since the SCM pre-creates containers.\n-    // we will open and put Db handle into a cache when keys are being created\n-    // in a container.\n-\n-    store.close();\n+    ReferenceCountedDB db =\n+        new ReferenceCountedDB(store, dbFile.getAbsolutePath());\n+    //add db handler into cache\n+    BlockUtils.addDB(db, dbFile.getAbsolutePath(), conf);", "originalCommit": "01853b20d9fcdcd4660052ee7aace4ee19e6aee1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "58096de61eaff93221180d6cc74dea55bdb9bfb7", "url": "https://github.com/apache/ozone/commit/58096de61eaff93221180d6cc74dea55bdb9bfb7", "message": "fix code review", "committedDate": "2020-04-02T09:40:59Z", "type": "commit"}]}