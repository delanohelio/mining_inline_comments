{"pr_number": 1051, "pr_title": "HDDS-3747. Redundancy if condition code in ListPipelinesSubcommand", "pr_createdAt": "2020-06-10T16:02:14Z", "pr_url": "https://github.com/apache/ozone/pull/1051", "timeline": [{"oid": "af290e2e401277e9e548b5bda3eebd4a3866fe77", "url": "https://github.com/apache/ozone/commit/af290e2e401277e9e548b5bda3eebd4a3866fe77", "message": "Redundancy if condition code in ListPipelinesSubcommand\n\nRemove the redundancy if condition code in ListPipelinesSubcommand", "committedDate": "2020-06-10T16:01:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4NTYwMA==", "url": "https://github.com/apache/ozone/pull/1051#discussion_r438285600", "bodyText": "Please reduce the indent to fix the checkstyle failure.", "author": "maobaolong", "createdAt": "2020-06-10T17:17:24Z", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "diffHunk": "@@ -54,17 +54,13 @@\n   @Override\n   public Void call() throws Exception {\n     try (ScmClient scmClient = parent.getParent().createScmClient()) {\n-      if (Strings.isNullOrEmpty(factor) && Strings.isNullOrEmpty(state)) {\n-        scmClient.listPipelines().forEach(System.out::println);\n-      } else {\n-        scmClient.listPipelines().stream()\n-            .filter(p -> ((Strings.isNullOrEmpty(factor) ||\n-                (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n-                && (Strings.isNullOrEmpty(state) ||\n-                (p.getPipelineState().toString().compareToIgnoreCase(state)\n-                    == 0))))\n+       scmClient.listPipelines().stream()", "originalCommit": "af290e2e401277e9e548b5bda3eebd4a3866fe77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "45d9b2760fe5ebe904890385cd52f9c55fbd25d1", "url": "https://github.com/apache/ozone/commit/45d9b2760fe5ebe904890385cd52f9c55fbd25d1", "message": "Update ListPipelinesSubcommand.java", "committedDate": "2020-06-12T18:33:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MTk4Nw==", "url": "https://github.com/apache/ozone/pull/1051#discussion_r439741987", "bodyText": "Structuring this as below would reduce duplication, and make it easier to add further filters if needed:\nStream<...> stream = scmClient.listPipelines().stream();\nif (!isNullOrEmpty(factor)) {\n  stream = stream.filter(...);\n}\nif (!isNullOrEmpty(state)) {\n  stream = stream.filter(...);\n}\nstream.forEach(...);", "author": "adoroszlai", "createdAt": "2020-06-13T14:11:07Z", "path": "hadoop-hdds/tools/src/main/java/org/apache/hadoop/hdds/scm/cli/pipeline/ListPipelinesSubcommand.java", "diffHunk": "@@ -54,17 +54,12 @@\n   @Override\n   public Void call() throws Exception {\n     try (ScmClient scmClient = parent.getParent().createScmClient()) {\n-      if (Strings.isNullOrEmpty(factor) && Strings.isNullOrEmpty(state)) {\n-        scmClient.listPipelines().forEach(System.out::println);\n-      } else {\n-        scmClient.listPipelines().stream()\n-            .filter(p -> ((Strings.isNullOrEmpty(factor) ||\n-                (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n-                && (Strings.isNullOrEmpty(state) ||\n-                (p.getPipelineState().toString().compareToIgnoreCase(state)\n-                    == 0))))\n-            .forEach(System.out::println);\n-      }\n+      scmClient.listPipelines().stream()\n+          .filter(p -> ((Strings.isNullOrEmpty(factor)\n+              || (p.getFactor().toString().compareToIgnoreCase(factor) == 0))\n+              && (Strings.isNullOrEmpty(state) || (p.getPipelineState()\n+                  .toString().compareToIgnoreCase(state) == 0))))\n+          .forEach(System.out::println);", "originalCommit": "45d9b2760fe5ebe904890385cd52f9c55fbd25d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYxNzIwNw==", "url": "https://github.com/apache/ozone/pull/1051#discussion_r442617207", "bodyText": "@bhemanthkumar i think the changes within the try block @adoroszlai is\n      Stream<Pipeline> stream = scmClient.listPipelines().stream();\n      if (!Strings.isNullOrEmpty(factor)) {\n        stream =\n            stream.filter(p -> p.getFactor().toString()\n                .compareToIgnoreCase(factor) == 0);\n      }\n      if (!Strings.isNullOrEmpty(state)) {\n        stream =\n            stream.filter(p -> p.getPipelineState().toString()\n                .compareToIgnoreCase(state) == 0);\n      }\n      stream.forEach(System.out::println);", "author": "maobaolong", "createdAt": "2020-06-19T03:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MTk4Nw=="}], "type": "inlineReview"}, {"oid": "f6020a02f74f2f671b62d2671da21bba5f39a5ae", "url": "https://github.com/apache/ozone/commit/f6020a02f74f2f671b62d2671da21bba5f39a5ae", "message": "Update ListPipelinesSubcommand.java", "committedDate": "2020-06-19T17:42:45Z", "type": "commit"}, {"oid": "09d9dd6ccb82f0ec6b37a2d95f6e1aa4e36dced8", "url": "https://github.com/apache/ozone/commit/09d9dd6ccb82f0ec6b37a2d95f6e1aa4e36dced8", "message": "Update ListPipelinesSubcommand.java", "committedDate": "2020-06-19T18:37:06Z", "type": "commit"}]}