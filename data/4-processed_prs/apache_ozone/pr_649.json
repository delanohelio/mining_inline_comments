{"pr_number": 649, "pr_title": "HDDS-3120. Freon work with OM HA.", "pr_createdAt": "2020-03-06T22:23:52Z", "pr_url": "https://github.com/apache/ozone/pull/649", "timeline": [{"oid": "3ef9dadcd0c43d62d709e9cd400722ab19e03315", "url": "https://github.com/apache/ozone/commit/3ef9dadcd0c43d62d709e9cd400722ab19e03315", "message": "HDDS-3120. Freon work with OM HA.", "committedDate": "2020-03-06T22:26:17Z", "type": "forcePushed"}, {"oid": "5bf977969ea8d0015fc12349908b95979a425d0f", "url": "https://github.com/apache/ozone/commit/5bf977969ea8d0015fc12349908b95979a425d0f", "message": "HDDS-3120. Freon work with OM HA.", "committedDate": "2020-03-06T22:28:17Z", "type": "forcePushed"}, {"oid": "f0649b9f03a8d226963e9c99e57b894f1d6a0e1b", "url": "https://github.com/apache/ozone/commit/f0649b9f03a8d226963e9c99e57b894f1d6a0e1b", "message": "HDDS-3120. Freon work with OM HA.", "committedDate": "2020-03-06T23:01:51Z", "type": "forcePushed"}, {"oid": "b1213a8905eedc7d3636dcd935055cf8a681cf4c", "url": "https://github.com/apache/ozone/commit/b1213a8905eedc7d3636dcd935055cf8a681cf4c", "message": "HDDS-3120. Freon work with OM HA.", "committedDate": "2020-03-06T23:05:36Z", "type": "forcePushed"}, {"oid": "33f6a38e80afba8973bb068ed66bdf3b582f2c4e", "url": "https://github.com/apache/ozone/commit/33f6a38e80afba8973bb068ed66bdf3b582f2c4e", "message": "HDDS-3120. Freon work with OM HA.", "committedDate": "2020-03-09T16:42:44Z", "type": "commit"}, {"oid": "81dc976e19c553af90191a915b24cd894c54a97d", "url": "https://github.com/apache/ozone/commit/81dc976e19c553af90191a915b24cd894c54a97d", "message": "fix ombg:", "committedDate": "2020-03-09T16:42:46Z", "type": "commit"}, {"oid": "33d4c074dd595b929bc72ff810ffdd06a3a00cd5", "url": "https://github.com/apache/ozone/commit/33d4c074dd595b929bc72ff810ffdd06a3a00cd5", "message": "freon test", "committedDate": "2020-03-09T16:42:46Z", "type": "commit"}, {"oid": "62cc3de6e7f44232e2f36607840d6f717ec38420", "url": "https://github.com/apache/ozone/commit/62cc3de6e7f44232e2f36607840d6f717ec38420", "message": "add check of isServiceIdsDefined in default getClient method", "committedDate": "2020-03-09T16:42:46Z", "type": "commit"}, {"oid": "3335790d7a2696e78bc66c9ebaaa88238e815b28", "url": "https://github.com/apache/ozone/commit/3335790d7a2696e78bc66c9ebaaa88238e815b28", "message": "fix checkstyle", "committedDate": "2020-03-09T16:42:46Z", "type": "commit"}, {"oid": "87ee02f0dd9a8d1605878b2418b63fc483164e4f", "url": "https://github.com/apache/ozone/commit/87ee02f0dd9a8d1605878b2418b63fc483164e4f", "message": "fix new test failure", "committedDate": "2020-03-09T16:42:46Z", "type": "commit"}, {"oid": "dc69bda71af4b7e6638537bb431995acef4176ff", "url": "https://github.com/apache/ozone/commit/dc69bda71af4b7e6638537bb431995acef4176ff", "message": "remove space'", "committedDate": "2020-03-09T16:42:46Z", "type": "commit"}, {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6", "url": "https://github.com/apache/ozone/commit/b7f4b31215f478febaba3951c764d4ea016a56c6", "message": "use env and make test work for ha and non-ha", "committedDate": "2020-03-09T18:13:15Z", "type": "commit"}, {"oid": "b7f4b31215f478febaba3951c764d4ea016a56c6", "url": "https://github.com/apache/ozone/commit/b7f4b31215f478febaba3951c764d4ea016a56c6", "message": "use env and make test work for ha and non-ha", "committedDate": "2020-03-09T18:13:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMjg3NA==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389912874", "bodyText": "What's the reason for changing to try-finally here?", "author": "adoroszlai", "createdAt": "2020-03-09T19:30:12Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OzoneClientKeyGenerator.java", "diffHunk": "@@ -86,22 +91,24 @@ public Void call() throws Exception {\n \n     OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n \n-    ensureVolumeAndBucketExist(ozoneConfiguration, volumeName, bucketName);\n \n     contentGenerator = new ContentGenerator(keySize, bufferSize);\n     metadata = new HashMap<>();\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      bucket =\n-          rpcClient.getObjectStore().getVolume(volumeName)\n-              .getBucket(bucketName);\n+    OzoneClient rpcClient = null;\n+    try {\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MzA3Mg==", "url": "https://github.com/apache/ozone/pull/649#discussion_r390463072", "bodyText": "Initially I was using if,else to create OzoneClient, later moved the code to a method. Used try with resource.", "author": "bharatviswa504", "createdAt": "2020-03-10T16:53:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMjg3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNTc5Ng==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389915796", "bodyText": "Now that rpcClient is passed as a parameter, can we merge this block and ensureVolumeExists?", "author": "adoroszlai", "createdAt": "2020-03-09T19:35:53Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -374,53 +369,45 @@ public String generateObjectName(long counter) {\n   /**\n    * Create missing target volume/bucket.\n    */\n-  public void ensureVolumeAndBucketExist(OzoneConfiguration ozoneConfiguration,\n+  public void ensureVolumeAndBucketExist(OzoneClient rpcClient,\n       String volumeName, String bucketName) throws IOException {\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      OzoneVolume volume = null;\n-      try {\n+    OzoneVolume volume = null;\n+    try {\n+      volume = rpcClient.getObjectStore().getVolume(volumeName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n+        rpcClient.getObjectStore().createVolume(volumeName);\n         volume = rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-          volume = rpcClient.getObjectStore().getVolume(volumeName);\n-        } else {\n-          throw ex;\n-        }\n+      } else {\n+        throw ex;", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyMjg5Ng==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389922896", "bodyText": "Please reuse createOzoneClient from parent class.", "author": "adoroszlai", "createdAt": "2020-03-09T19:49:41Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmBucketGenerator.java", "diffHunk": "@@ -46,24 +48,49 @@\n       defaultValue = \"vol1\")\n   private String volumeName;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer bucketCreationTimer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient ozoneClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      ozoneManagerClient = createOmClient(ozoneConfiguration, omServiceID);\n+\n+      if (omServiceID != null) {\n+        ozoneClient = OzoneClientFactory.getRpcClient(omServiceID,\n+            ozoneConfiguration);\n+      } else {\n+        ozoneClient = OzoneClientFactory.getRpcClient(ozoneConfiguration);\n+      }", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNTA0MQ==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389925041", "bodyText": "Leftover debug.", "author": "adoroszlai", "createdAt": "2020-03-09T19:53:37Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmKeyGenerator.java", "diffHunk": "@@ -62,24 +63,44 @@\n   )\n   private ReplicationFactor factor = ReplicationFactor.THREE;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer timer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient rpcClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);\n \n-    OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+      ensureVolumeAndBucketExist(rpcClient, volumeName, bucketName);\n \n-    ensureVolumeAndBucketExist(ozoneConfiguration, volumeName, bucketName);\n+      System.out.print(\"Bharat \" + omServiceID);", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNTM3Mw==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389925373", "bodyText": "Can rpcClient be closed right after creating volume/bucket?  Probably best to wrap in \"try-with-resources\" block.", "author": "adoroszlai", "createdAt": "2020-03-09T19:54:14Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmKeyGenerator.java", "diffHunk": "@@ -62,24 +63,44 @@\n   )\n   private ReplicationFactor factor = ReplicationFactor.THREE;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer timer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient rpcClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      rpcClient = createOzoneClient(omServiceID, ozoneConfiguration);", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyNjA0NQ==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389926045", "bodyText": "Can ozoneClient be closed right after creating volume?", "author": "adoroszlai", "createdAt": "2020-03-09T19:55:36Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/OmBucketGenerator.java", "diffHunk": "@@ -46,24 +48,49 @@\n       defaultValue = \"vol1\")\n   private String volumeName;\n \n+  @Option(\n+      names = \"--om-service-id\",\n+      description = \"OM Service ID\"\n+  )\n+  private String omServiceID = null;\n+\n   private OzoneManagerProtocol ozoneManagerClient;\n \n   private Timer bucketCreationTimer;\n \n   @Override\n   public Void call() throws Exception {\n \n-    init();\n+    OzoneClient ozoneClient = null;\n+    try {\n+      init();\n+\n+      OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+\n+      ozoneManagerClient = createOmClient(ozoneConfiguration, omServiceID);\n+\n+      if (omServiceID != null) {\n+        ozoneClient = OzoneClientFactory.getRpcClient(omServiceID,\n+            ozoneConfiguration);\n+      } else {\n+        ozoneClient = OzoneClientFactory.getRpcClient(ozoneConfiguration);\n+      }\n+      ensureVolumeExists(ozoneClient, volumeName);\n \n-    OzoneConfiguration ozoneConfiguration = createOzoneConfiguration();\n+      bucketCreationTimer = getMetrics().timer(\"bucket-create\");\n \n-    ozoneManagerClient = createOmClient(ozoneConfiguration);\n+      runTests(this::createBucket);\n \n-    ensureVolumeExists(ozoneConfiguration, volumeName);\n+    } finally {\n \n-    bucketCreationTimer = getMetrics().timer(\"bucket-create\");\n+      if (ozoneClient != null) {\n+        ozoneClient.close();", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMjAyNg==", "url": "https://github.com/apache/ozone/pull/649#discussion_r389932026", "bodyText": "I think here getClient should be used to validate presence of --om-service-id param.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return OzoneClientFactory.getRpcClient(conf);\n          \n          \n            \n                  return OzoneClientFactory.getClient(conf);\n          \n      \n    \n    \n  \n\nThere are two methods in OzoneClientFactory that take Configuration and return OzoneClient:\n\ngetClient(Configuration) throws exception if configuration has OM service ID, but\ngetRpcClient(Configuration) does not\n\nI'm getting timeout on OM HA cluster when --om-service-id is omitted.\n$ ozone freon ockg -n 1 -t 1\n...\n[main] INFO ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:9862. Already tried 0 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)\n...\n[main] ERROR ha.OMFailoverProxyProvider: Failed to connect to OMs: [nodeId=null,nodeAddress=0.0.0.0:9862]. Attempted 15 failovers.\n\nAfter making the suggested change locally, I get the error message as expected:\n$ ozone freon ockg -n 1 -t 1\n...\nFollowing ServiceID's [id1] are defined in the configuration. Use the method getClient which takes serviceID and configuration as param", "author": "adoroszlai", "createdAt": "2020-03-09T20:07:46Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -469,4 +456,13 @@ public AtomicLong getAttemptCounter() {\n   public int getThreadNo() {\n     return threadNo;\n   }\n+\n+  protected OzoneClient createOzoneClient(String omServiceID,\n+      OzoneConfiguration conf) throws Exception {\n+    if (omServiceID != null) {\n+      return OzoneClientFactory.getRpcClient(omServiceID, conf);\n+    } else {\n+      return OzoneClientFactory.getRpcClient(conf);", "originalCommit": "b7f4b31215f478febaba3951c764d4ea016a56c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ2MjI5MA==", "url": "https://github.com/apache/ozone/pull/649#discussion_r390462290", "bodyText": "Removed getClient, and used getRpcClient, to avoid these kind of mistakes instead of duplicating the same code in multiple functions.", "author": "bharatviswa504", "createdAt": "2020-03-10T16:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMjAyNg=="}], "type": "inlineReview"}, {"oid": "2216298ce583aa7aa6ee17ba3beee1a9a16f7910", "url": "https://github.com/apache/ozone/commit/2216298ce583aa7aa6ee17ba3beee1a9a16f7910", "message": "review comments", "committedDate": "2020-03-10T17:04:57Z", "type": "commit"}, {"oid": "2216298ce583aa7aa6ee17ba3beee1a9a16f7910", "url": "https://github.com/apache/ozone/commit/2216298ce583aa7aa6ee17ba3beee1a9a16f7910", "message": "review comments", "committedDate": "2020-03-10T17:04:57Z", "type": "forcePushed"}, {"oid": "0fd5dedc0b2a34f94805e2f5d447bc84af484a4e", "url": "https://github.com/apache/ozone/commit/0fd5dedc0b2a34f94805e2f5d447bc84af484a4e", "message": "change exception", "committedDate": "2020-03-10T17:10:22Z", "type": "commit"}, {"oid": "c181ce87cb447c35450f6e4ca7329a8cfe4f1aee", "url": "https://github.com/apache/ozone/commit/c181ce87cb447c35450f6e4ca7329a8cfe4f1aee", "message": "fix test", "committedDate": "2020-03-10T18:12:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5OTIwMQ==", "url": "https://github.com/apache/ozone/pull/649#discussion_r390599201", "bodyText": "Should throw ex in else branch, otherwise volume creation fails silently and will run into NPE elsewhere.", "author": "adoroszlai", "createdAt": "2020-03-10T20:44:11Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/BaseFreonGenerator.java", "diffHunk": "@@ -374,53 +369,37 @@ public String generateObjectName(long counter) {\n   /**\n    * Create missing target volume/bucket.\n    */\n-  public void ensureVolumeAndBucketExist(OzoneConfiguration ozoneConfiguration,\n+  public void ensureVolumeAndBucketExist(OzoneClient rpcClient,\n       String volumeName, String bucketName) throws IOException {\n \n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n+    OzoneVolume volume;\n+    ensureVolumeExists(rpcClient, volumeName);\n+    volume = rpcClient.getObjectStore().getVolume(volumeName);\n \n-      OzoneVolume volume = null;\n-      try {\n-        volume = rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-          volume = rpcClient.getObjectStore().getVolume(volumeName);\n-        } else {\n-          throw ex;\n-        }\n-      }\n-\n-      try {\n-        volume.getBucket(bucketName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {\n-          volume.createBucket(bucketName);\n-        } else {\n-          throw ex;\n-        }\n+    try {\n+      volume.getBucket(bucketName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {\n+        volume.createBucket(bucketName);\n+      } else {\n+        throw ex;\n       }\n     }\n+\n   }\n \n   /**\n    * Create missing target volume.\n    */\n   public void ensureVolumeExists(\n-      OzoneConfiguration ozoneConfiguration,\n+      OzoneClient rpcClient,\n       String volumeName) throws IOException {\n-    try (OzoneClient rpcClient = OzoneClientFactory\n-        .getRpcClient(ozoneConfiguration)) {\n-\n-      try {\n-        rpcClient.getObjectStore().getVolume(volumeName);\n-      } catch (OMException ex) {\n-        if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n-          rpcClient.getObjectStore().createVolume(volumeName);\n-        }\n+    try {\n+      rpcClient.getObjectStore().getVolume(volumeName);\n+    } catch (OMException ex) {\n+      if (ex.getResult() == ResultCodes.VOLUME_NOT_FOUND) {\n+        rpcClient.getObjectStore().createVolume(volumeName);", "originalCommit": "c181ce87cb447c35450f6e4ca7329a8cfe4f1aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYwODM3MQ==", "url": "https://github.com/apache/ozone/pull/649#discussion_r390608371", "bodyText": "Nice catch. But that should fail in the next steps in our case like during getVolume/CreateBucket. But it is better to throw an exception from here. Addressed in the latest commit.", "author": "bharatviswa504", "createdAt": "2020-03-10T21:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5OTIwMQ=="}], "type": "inlineReview"}, {"oid": "454fb9f0705f14ea9159214fcaeeedff8b5c0f3f", "url": "https://github.com/apache/ozone/commit/454fb9f0705f14ea9159214fcaeeedff8b5c0f3f", "message": "review comment.", "committedDate": "2020-03-10T20:59:10Z", "type": "commit"}]}