{"pr_number": 624, "pr_title": "HDDS-3110. Fix race condition in Recon's container and pipeline handling.", "pr_createdAt": "2020-03-02T17:32:48Z", "pr_url": "https://github.com/apache/ozone/pull/624", "timeline": [{"oid": "e12af0939f7e4a3c5e388e615742318d886e962b", "url": "https://github.com/apache/ozone/commit/e12af0939f7e4a3c5e388e615742318d886e962b", "message": "HDDS-3110. Fix race condition in Recon's container and pipeline handling.", "committedDate": "2020-02-28T20:27:39Z", "type": "commit"}, {"oid": "40212dfb62477ff4f307061f124815599ccfd4b5", "url": "https://github.com/apache/ozone/commit/40212dfb62477ff4f307061f124815599ccfd4b5", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3110-master", "committedDate": "2020-03-02T17:21:41Z", "type": "commit"}, {"oid": "e1dd1f8a1d4ef451d4630ac5520be4c6b3203a23", "url": "https://github.com/apache/ozone/commit/e1dd1f8a1d4ef451d4630ac5520be4c6b3203a23", "message": "trigger new CI check", "committedDate": "2020-03-02T19:40:46Z", "type": "commit"}, {"oid": "bd0744bef2fad20453fb0feff633563e30cadb97", "url": "https://github.com/apache/ozone/commit/bd0744bef2fad20453fb0feff633563e30cadb97", "message": "Remove duplicate code in PipelineReportHandler.", "committedDate": "2020-03-03T01:11:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzMzM4Mw==", "url": "https://github.com/apache/ozone/pull/624#discussion_r386833383", "bodyText": "Looks like this block could be shared between the two container report handlers.", "author": "adoroszlai", "createdAt": "2020-03-03T07:13:27Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconIncrementalContainerReportHandler.java", "diffHunk": "@@ -70,19 +70,22 @@ public void onMessage(final IncrementalContainerReportFromDatanode report,\n         final DatanodeDetails dd = report.getDatanodeDetails();\n         final ContainerID id = ContainerID.valueof(\n             replicaProto.getContainerID());\n-        if (!getContainerManager().exists(id)) {\n-          LOG.info(\"New container {} got from {}.\", id,\n-              report.getDatanodeDetails());\n-          try {\n-            ContainerWithPipeline containerWithPipeline =\n-                scmClient.getContainerWithPipeline(id.getId());\n-            LOG.info(\"Verified new container from SCM {} \",\n-                containerWithPipeline.getContainerInfo().containerID());\n-            containerManager.addNewContainer(id.getId(), containerWithPipeline);\n-          } catch (IOException ioEx) {\n-            LOG.error(\"Exception while getting new container info from SCM\",\n-                ioEx);\n-            return;\n+        synchronized (containerManager) {\n+          if (!containerManager.exists(id)) {\n+            LOG.info(\"New container {} got from {}.\", id,\n+                report.getDatanodeDetails());\n+            try {\n+              ContainerWithPipeline containerWithPipeline =\n+                  scmClient.getContainerWithPipeline(id.getId());\n+              LOG.info(\"Verified new container from SCM {} \",\n+                  containerWithPipeline.getContainerInfo().containerID());\n+              containerManager\n+                  .addNewContainer(id.getId(), containerWithPipeline);\n+            } catch (IOException ioEx) {\n+              LOG.error(\"Exception while getting new container info from SCM\",\n+                  ioEx);\n+              return;\n+            }", "originalCommit": "bd0744bef2fad20453fb0feff633563e30cadb97", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNDIxMQ==", "url": "https://github.com/apache/ozone/pull/624#discussion_r386834211", "bodyText": "Might this be improved in a followup to avoid RPC while holding the lock?", "author": "adoroszlai", "createdAt": "2020-03-03T07:16:09Z", "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerReportHandler.java", "diffHunk": "@@ -63,19 +63,21 @@ public void onMessage(final ContainerReportFromDatanode reportFromDatanode,\n     for (ContainerReplicaProto containerReplicaProto : reportsList) {\n       final ContainerID id = ContainerID.valueof(\n           containerReplicaProto.getContainerID());\n-      if (!getContainerManager().exists(id)) {\n-        LOG.info(\"New container {} got from {}.\", id,\n-            reportFromDatanode.getDatanodeDetails());\n-        try {\n-          ContainerWithPipeline containerWithPipeline =\n-              scmClient.getContainerWithPipeline(id.getId());\n-          LOG.debug(\"Verified new container from SCM {} \",\n-              containerWithPipeline.getContainerInfo().containerID());\n-          containerManager.addNewContainer(id.getId(), containerWithPipeline);\n-        } catch (IOException ioEx) {\n-          LOG.error(\"Exception while getting new container info from SCM\",\n-              ioEx);\n-          return;\n+      synchronized (containerManager) {\n+        if (!containerManager.exists(id)) {\n+          LOG.info(\"New container {} got from {}.\", id,\n+              reportFromDatanode.getDatanodeDetails());\n+          try {\n+            ContainerWithPipeline containerWithPipeline =\n+                scmClient.getContainerWithPipeline(id.getId());", "originalCommit": "bd0744bef2fad20453fb0feff633563e30cadb97", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}