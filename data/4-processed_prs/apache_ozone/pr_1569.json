{"pr_number": 1569, "pr_title": "HDDS-4448. Duplicate refreshPipeline in listStatus", "pr_createdAt": "2020-11-10T19:40:04Z", "pr_url": "https://github.com/apache/ozone/pull/1569", "timeline": [{"oid": "a1fdbe54195a35d67558854a791fed16b7bf90fb", "url": "https://github.com/apache/ozone/commit/a1fdbe54195a35d67558854a791fed16b7bf90fb", "message": "HDDS-4448. Duplicate refreshPipeline in listStatus", "committedDate": "2020-11-10T16:00:25Z", "type": "commit"}, {"oid": "7a50000a2992d45596c571bbeec9040c7118458d", "url": "https://github.com/apache/ozone/commit/7a50000a2992d45596c571bbeec9040c7118458d", "message": "Always refresh pipeline", "committedDate": "2020-11-10T17:38:01Z", "type": "commit"}, {"oid": "3911ce77eff5ceb28d627b4591698b122f0fa4d1", "url": "https://github.com/apache/ozone/commit/3911ce77eff5ceb28d627b4591698b122f0fa4d1", "message": "trigger new CI check", "committedDate": "2020-11-10T20:27:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MDY0NQ==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524750645", "bodyText": "This call still makes number of entries in listStatus call to put nodes in sorted order in pipeline when ozone.network.topology.aware.read is set. (Default false, so this will not be a problem, but we have still the problem of making number of entries in listStatus calls to SCM.", "author": "bharatviswa504", "createdAt": "2020-11-16T23:31:19Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2209,14 +2205,18 @@ private void listStatusFindKeyInTableCache(\n           bucketName);\n     }\n \n+    List<OmKeyInfo> keyInfoList = new ArrayList<>(fileStatusList.size());\n     for (OzoneFileStatus fileStatus : fileStatusList) {\n-      if (args.getRefreshPipeline()) {\n-        refreshPipeline(fileStatus.getKeyInfo());\n-      }\n-      if (args.getSortDatanodes()) {\n+      keyInfoList.add(fileStatus.getKeyInfo());\n+    }\n+    refreshPipeline(keyInfoList);\n+\n+    if (args.getSortDatanodes()) {\n+      for (OzoneFileStatus fileStatus : fileStatusList) {\n         sortDatanodeInPipeline(fileStatus.getKeyInfo(), clientAddress);", "originalCommit": "3911ce77eff5ceb28d627b4591698b122f0fa4d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0MDg5MQ==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524940891", "bodyText": "Thanks for highlighting this further possible improvement.  I'll file a separate Jira issue for this, as I think it's out of scope here.", "author": "adoroszlai", "createdAt": "2020-11-17T07:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MDY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0OTg0Mw==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524949843", "bodyText": "https://issues.apache.org/jira/browse/HDDS-4473", "author": "adoroszlai", "createdAt": "2020-11-17T08:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MDY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NTU0OA==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524965548", "bodyText": "Fine with me.", "author": "bharatviswa504", "createdAt": "2020-11-17T08:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MDY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MzIxMg==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524753212", "bodyText": "Just a question listStatus is limited by batch size.\nBut we are making a single Rpc Call to SCM for all the containers we got from this list, is this fine here? (My question is if it has a large number of containerIDs due to larger key sizes, will it have an issue in Rpc Response size.", "author": "bharatviswa504", "createdAt": "2020-11-16T23:33:47Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -2209,14 +2205,18 @@ private void listStatusFindKeyInTableCache(\n           bucketName);\n     }\n \n+    List<OmKeyInfo> keyInfoList = new ArrayList<>(fileStatusList.size());\n     for (OzoneFileStatus fileStatus : fileStatusList) {\n-      if (args.getRefreshPipeline()) {\n-        refreshPipeline(fileStatus.getKeyInfo());\n-      }\n-      if (args.getSortDatanodes()) {\n+      keyInfoList.add(fileStatus.getKeyInfo());\n+    }\n+    refreshPipeline(keyInfoList);", "originalCommit": "3911ce77eff5ceb28d627b4591698b122f0fa4d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkyOTg3OA==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524929878", "bodyText": "listKeys() is also limited by batch size and already does the same single refresh call:\n\n  \n    \n      ozone/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java\n    \n    \n        Lines 931 to 933\n      in\n      d0aa34c\n    \n    \n    \n    \n\n        \n          \n           List<OmKeyInfo> keyList = metadataManager.listKeys(volumeName, bucketName, \n        \n\n        \n          \n               startKey, keyPrefix, maxKeys); \n        \n\n        \n          \n           refreshPipeline(keyList);", "author": "adoroszlai", "createdAt": "2020-11-17T07:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MzIxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NTQwOQ==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r524965409", "bodyText": "My question is keyList/listStatus is limited by batch size, but if Keys are huge in size, then it might have a long list of  container IDS, and then calling SCM with all those containerIDS to fetch ContainerWithPipeline, will it cause an issue of exceeding Rpc response size.\n\nlistKeys() is also limited by batch size and already does the same single refresh call:\n\nThen this might be a problem for listKeys also, but do you see this as a problem?", "author": "bharatviswa504", "createdAt": "2020-11-17T08:25:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MzIxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3NDY0NQ==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r525874645", "bodyText": "Then this might be a problem for listKeys also, but do you see this as a problem?\n\nI don't see this as an immediate problem.\nAs far as I understand, batch size for listKeys and listStatus is a convenience for the client, not a safety guarantee for the server.  If RPC response size is a problem when performing getContainerWithPipelineBatch call for multiple keys, then the same can be triggered by the client simply by increasing batch size (if there are enough keys in the bucket).", "author": "adoroszlai", "createdAt": "2020-11-18T07:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MzIxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYwMDg4Mw==", "url": "https://github.com/apache/ozone/pull/1569#discussion_r526600883", "bodyText": "Ya agreed, not only that thinking more if with normal batch size it is causing issue for containerID's, then it will be same for OMResponse for listKeys also, as it adds KeyInfo and Pipeline.", "author": "bharatviswa504", "createdAt": "2020-11-19T05:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc1MzIxMg=="}], "type": "inlineReview"}]}