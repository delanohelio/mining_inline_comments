{"pr_number": 8206, "pr_title": "SAK-43598 remove fake itemgrading created in Linear Access to assessment", "pr_createdAt": "2020-05-04T21:32:56Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8206", "timeline": [{"oid": "c347e67801a513761030f4a68f451eb6cf99e85c", "url": "https://github.com/sakaiproject/sakai/commit/c347e67801a513761030f4a68f451eb6cf99e85c", "message": "SAK-43598 delete fake itemgrading record for FIN/FIB/CQ/IMAGE question", "committedDate": "2020-05-04T11:56:20Z", "type": "commit"}, {"oid": "55d2ee433325cb268d3db6d920e267800003aca3", "url": "https://github.com/sakaiproject/sakai/commit/55d2ee433325cb268d3db6d920e267800003aca3", "message": "SAK-43598 change fake detection order", "committedDate": "2020-05-04T21:18:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODQ3NQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421108475", "bodyText": "can you choose a better variable name here? what is the purpose of the variable?", "author": "ottenhoff", "createdAt": "2020-05-06T21:39:14Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;", "originalCommit": "55d2ee433325cb268d3db6d920e267800003aca3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzQyNQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443425", "bodyText": "changed to fakitemgrading", "author": "rmengod", "createdAt": "2020-05-27T21:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODQ3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODcwMQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421108701", "bodyText": "why the brackets around this? can you also space it out like the other code?", "author": "ottenhoff", "createdAt": "2020-05-06T21:39:42Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t ", "originalCommit": "55d2ee433325cb268d3db6d920e267800003aca3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzU4MQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443581", "bodyText": "sorry I forgot to delete", "author": "rmengod", "createdAt": "2020-05-27T21:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODcwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODk2Mg==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421108962", "bodyText": "can you make sure the tabs/spaces line up ?", "author": "ottenhoff", "createdAt": "2020-05-06T21:40:22Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {", "originalCommit": "55d2ee433325cb268d3db6d920e267800003aca3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzcyMw==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443723", "bodyText": "reviewed", "author": "rmengod", "createdAt": "2020-05-27T21:09:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTIzNg==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421109236", "bodyText": "can you make this a better debug message? What does s mean?\nAlso, please use debug substitution:\nlog.debug(\"xxxxx yyyyyy zzzz: {}\", s)", "author": "ottenhoff", "createdAt": "2020-05-06T21:40:59Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);", "originalCommit": "55d2ee433325cb268d3db6d920e267800003aca3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0MzgyOQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431443829", "bodyText": "changed", "author": "rmengod", "createdAt": "2020-05-27T21:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTIzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTM4MQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r421109381", "bodyText": "If StringUtils is available here, it's preferable", "author": "ottenhoff", "createdAt": "2020-05-06T21:41:18Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/delivery/SubmitToGradingActionListener.java", "diffHunk": "@@ -707,28 +707,40 @@ private void prepareItemGradingPerItem(ActionEvent ae, DeliveryBean delivery,\n \t\tcase 15: // CALCULATED_QUESTION\n \t\tcase 16: //IMAGEMAP_QUESTION \t\n \t\tcase 11: // FIN\n-\t\t\tboolean addedToAdds = false;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n \t\t\t\titemgrading.setAgentId(AgentFacade.getAgentString());\n \t\t\t\titemgrading.setSubmittedDate(new Date());\n \t\t\t}\n+\t\t\tint fake=-1;\n \t\t\tfor (int m = 0; m < grading.size(); m++) {\n \t\t\t\tItemGradingData itemgrading = grading.get(m);\n+\t\t\t\tString s = itemgrading.getAnswerText();\n \t\t\t\tif (itemgrading.getItemGradingId() != null\n \t\t\t\t\t\t&& itemgrading.getItemGradingId().intValue() > 0) {\n-\t\t\t\t\tadds.addAll(grading);\n-\t\t\t\t\tbreak;\n-\t\t\t\t} else if (itemgrading.getAnswerText() != null && !itemgrading.getAnswerText().equals(\"\")) {\n-\t\t\t\t\tString s = itemgrading.getAnswerText();\n+\t\t\t\t\t if (\"1\".equals(delivery.getNavigation()) && itemgrading.getPublishedAnswerId()==null && (s==null || s.equals(\"\"))) {\n+\t\t\t\t\t\t//Mark this as the fake itemgrading record\n+\t\t\t\t\t\t{fake=m;}\t \n+\t\t\t\t     } else {\n+\t\t\t\t\t\t log.debug(\"s = \" + s);\n+\t\t\t\t\t\t // Change to allow student submissions in rich-text [SAK-17021]\n+\t\t\t\t\t\t itemgrading.setAnswerText(s);\n+\t\t\t\t\t\t adds.add(itemgrading);\n+\t\t\t\t     }\t\n+\t\t\t\t}\n+\t\t\t\telse if (s != null && !s.equals(\"\")) {", "originalCommit": "55d2ee433325cb268d3db6d920e267800003aca3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDAwNQ==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r431444005", "bodyText": "changed and use in 2 placed in the modified code", "author": "rmengod", "createdAt": "2020-05-27T21:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTM4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAyOTUyMg==", "url": "https://github.com/sakaiproject/sakai/pull/8206#discussion_r439029522", "bodyText": "thanks", "author": "ottenhoff", "createdAt": "2020-06-11T19:48:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwOTM4MQ=="}], "type": "inlineReview"}, {"oid": "5842a13fbcfdbcd44a1653870ce1eceaff69edce", "url": "https://github.com/sakaiproject/sakai/commit/5842a13fbcfdbcd44a1653870ce1eceaff69edce", "message": "Change suggested changes in PR 8206", "committedDate": "2020-05-27T20:03:19Z", "type": "commit"}]}