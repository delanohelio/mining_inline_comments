{"pr_number": 8826, "pr_title": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "pr_createdAt": "2020-11-19T05:32:50Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8826", "timeline": [{"oid": "7ce3473f5b6b138185defd00035c7597194684e5", "url": "https://github.com/sakaiproject/sakai/commit/7ce3473f5b6b138185defd00035c7597194684e5", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T05:54:15Z", "type": "forcePushed"}, {"oid": "152184ae3b5f76e9ca6839c88908ce941894c1d8", "url": "https://github.com/sakaiproject/sakai/commit/152184ae3b5f76e9ca6839c88908ce941894c1d8", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T05:56:24Z", "type": "forcePushed"}, {"oid": "a084079c928129b6204c9cd00620e9b47ca68a32", "url": "https://github.com/sakaiproject/sakai/commit/a084079c928129b6204c9cd00620e9b47ca68a32", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T06:02:20Z", "type": "forcePushed"}, {"oid": "f7dd3907c408d0465eff7e59ad4cbd240ba4c449", "url": "https://github.com/sakaiproject/sakai/commit/f7dd3907c408d0465eff7e59ad4cbd240ba4c449", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T06:14:07Z", "type": "forcePushed"}, {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2", "url": "https://github.com/sakaiproject/sakai/commit/e71775ffc9e0d0c54b438222722cce740dfdace2", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T06:18:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTA1Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526895057", "bodyText": "This is a little redundant. Just return the result of the check:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return window.matchMedia('(prefers-color-scheme: dark)').matches;", "author": "bjones86", "createdAt": "2020-11-19T13:41:33Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTQxOA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526895418", "bodyText": "Same here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (portal.user.id) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return portal.user.id;", "author": "bjones86", "createdAt": "2020-11-19T13:42:09Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {\n+            return true;\n+        } else {\n+            return false;\n         }", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTE5Mg==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149192", "bodyText": "Won't that return the user id instead of a boolean?", "author": "fostersdesign", "createdAt": "2020-12-06T23:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTQxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NjIwOA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526896208", "bodyText": "Same here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (portal.themeUserPref === \"-1\") {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return portal.themeUserPref === \"-1\";", "author": "bjones86", "createdAt": "2020-11-19T13:43:20Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {\n+            return true;\n+        } else {\n+            return false;\n         }\n-        // Set to light mode\n-        else {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"true\");\n-            document.firstElementChild.classList.remove('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'light')\n+    }\n+\n+    function isPortalThemeUserPrefNull() {\n+        if (portal.themeUserPref === \"-1\") {\n+            return true;\n+        } else {\n+            return false;\n         }", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTI0MQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149241", "bodyText": "Yes, this was just temporary; I'm planning to replace this.", "author": "fostersdesign", "createdAt": "2020-12-06T23:28:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NjIwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NzgyMg==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526897822", "bodyText": "Shorten this with a ternary:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n          \n          \n            \n                                                    themeUserPref = 1;\n          \n          \n            \n                                                } else {\n          \n          \n            \n                                                    themeUserPref = 0;\n          \n          \n            \n                                                }\n          \n          \n            \n                                                themePrefs.getBooleanProperty(\"darkTheme\") ? themeUserPref = 1 : themeUserPref = 0;", "author": "bjones86", "createdAt": "2020-11-19T13:45:35Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5ODUwMA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526898500", "bodyText": "Boolean.valueOf() not necessary here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n          \n          \n            \n                                        rcontext.put(\"darkTheme\", darkTheme);", "author": "bjones86", "createdAt": "2020-11-19T13:46:38Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAwMjgwOA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527002808", "bodyText": "Change this to a Sakai generic theme class.", "author": "fostersdesign", "createdAt": "2020-11-19T16:00:55Z", "path": "portal/portal-render-engine-impl/impl/src/webapp/vm/morpheus/includeStandardHead.vm", "diffHunk": "@@ -2,7 +2,7 @@\n ## Don't put anything before the <!DOCTYPE or it breaks IE9\n ## DOCTYPE detection and puts it in quirks mode.\n <!DOCTYPE html>\n-<html lang=\"$!{locale}\" dir=\"$!{dir}\" class=\"Mrphs-html\">\n+<html lang=\"$!{locale}\" dir=\"$!{dir}\" class=\"Mrphs-html #if ( $!{darkTheme} ) sakai-dark-theme #end\">", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NTYxNA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526975614", "bodyText": "themeSwitcher && themeSwitcher.addEventListener('click', toggleDarkTheme, false);", "author": "adrianfish", "createdAt": "2020-11-19T15:26:57Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0ODkwOQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537148909", "bodyText": "Will that do the null check?", "author": "fostersdesign", "createdAt": "2020-12-06T23:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NTYxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzA1Mw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526977053", "bodyText": "should this be darkThemeClass?", "author": "adrianfish", "createdAt": "2020-11-19T15:28:52Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTAxMw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149013", "bodyText": "Good catch. Yes.", "author": "fostersdesign", "createdAt": "2020-12-06T23:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzA1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzY3OQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526977679", "bodyText": "I'd keep my formatting consistent here. So ..\nif (isPortalThemeUserPrefNull()) {", "author": "adrianfish", "createdAt": "2020-11-19T15:29:39Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0ODk2Mw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537148963", "bodyText": "Good catch.", "author": "fostersdesign", "createdAt": "2020-12-06T23:26:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzY3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3OTc0NQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526979745", "bodyText": "I'd just replace the function entirely, one line:\nif (portal.user.id) {\nstuff ...\n}", "author": "adrianfish", "createdAt": "2020-11-19T15:32:11Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,84 @@\n function themeSwitcher(){\n \n     let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    const darkThemeClass = 'sakai-dark-theme';\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    if(themeSwitcher !== null) {\n+        themeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+    }\n \n-    if(themeSwitcher != null) {\n-        \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+    if(isLoggedIn()) {\n+        // only check for null preference because light and dark themes are already set by Java\n+        if( isPortalThemeUserPrefNull() ) {\n+            if(isOsDarkThemeSet()) {\n+                setThemeSwitcherToggle(true);\n+                addThemeToHTMLTag(darkThemeClass);\n+                setPortalThemeUserPref(true);\n+            } else {\n+                // to define a user preference:\n+                setPortalThemeUserPref(false);\n+            }\n+        }\n+    } else if(isOsDarkThemeSet()) {\n+        addThemeToHTMLTag(darkThemeTag);\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addThemeToHTMLTag(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeThemeFromHTMLTag(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        if(window.matchMedia('(prefers-color-scheme: dark)').matches) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isLoggedIn() {\n+        if (portal.user.id) {", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0OTEzMA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r537149130", "bodyText": "I was just trying to make it easier to remember how to do that.", "author": "fostersdesign", "createdAt": "2020-12-06T23:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3OTc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526993250", "bodyText": "Or just one line rcontext.put(\"darkTheme\", themePrefs.getBooleanProperty(\"darkTheme\"));", "author": "adrianfish", "createdAt": "2020-11-19T15:49:14Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5MDE5Mg==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527090192", "bodyText": "Doesn't it need to be wrapped in the try-catch? And if I move it to the try block, then the default won't get put in the context.", "author": "fostersdesign", "createdAt": "2020-11-19T18:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0OTU0OQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527149549", "bodyText": "Yes, you still need the try/catch. Anyway, you want a string now, don't you?", "author": "adrianfish", "createdAt": "2020-11-19T19:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA=="}], "type": "inlineReview"}, {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "url": "https://github.com/sakaiproject/sakai/commit/993b310a1e7f44c03369f27bf11ee635eadebbb9", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-17T05:23:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5OTA5Ng==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545199096", "bodyText": "const isPortalThemeUserPrefUnset = () => !portal.userTheme;", "author": "adrianfish", "createdAt": "2020-12-17T15:54:24Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:\n+                    setPortalThemeUserPref(lightThemeClass);\n+                }\n+            }\n+        } else if(isOsDarkThemeSet()) {\n+            addCssClassToMarkup(darkThemeClass);\n+        }\n         \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+        if (document.documentElement.classList.contains(darkThemeClass)) {\n+            // the dark theme switch toggle is off by default, so toggle to on if dark theme is enabled\n+            setDarkThemeSwitcherToggle(true);\n+        }\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addCssClassToMarkup(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeCssClassFromMarkup(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    }\n+\n+    function isLoggedIn() {\n+        return portal.user.id;\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isPortalThemeUserPrefUnset() {\n+        if (portal.userTheme === \"\") {\n+            return true;\n+        } else {\n+            return false;", "originalCommit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI0MzAyNQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548243025", "bodyText": "This doesn't seem as readable to me, so I'm going to skip.", "author": "fostersdesign", "createdAt": "2020-12-23T21:13:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5OTA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMTcwMg==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545201702", "bodyText": "darkThemeSwitcher.getAttribute(\"aria-checked\") === \"false\" ? enableDarkTheme() : enableLightTheme();", "author": "adrianfish", "createdAt": "2020-12-17T15:57:34Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:\n+                    setPortalThemeUserPref(lightThemeClass);\n+                }\n+            }\n+        } else if(isOsDarkThemeSet()) {\n+            addCssClassToMarkup(darkThemeClass);\n+        }\n         \n-        initTheme(); // on page load, if user has already selected a specific theme -> apply it\n+        if (document.documentElement.classList.contains(darkThemeClass)) {\n+            // the dark theme switch toggle is off by default, so toggle to on if dark theme is enabled\n+            setDarkThemeSwitcherToggle(true);\n+        }\n+    }\n \n-        themeSwitcher.addEventListener('click', setTheme, false);\n+    function addCssClassToMarkup(themeClass) {\n+        document.documentElement.classList.add(themeClass);\n+    }\n \n+    function removeCssClassFromMarkup(themeClass) {\n+        document.documentElement.classList.remove(themeClass);\n     }\n \n-    function setTheme() {\n+    function isOsDarkThemeSet() {\n+        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    }\n+\n+    function isLoggedIn() {\n+        return portal.user.id;\n+    }\n \n-        // Set to dark mode\n-        if (themeSwitcher.getAttribute(\"aria-checked\") === \"true\") {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"false\");\n-            document.firstElementChild.classList.add('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'dark');\n+    function isPortalThemeUserPrefUnset() {\n+        if (portal.userTheme === \"\") {\n+            return true;\n+        } else {\n+            return false;\n         }\n-        // Set to light mode\n-        else {\n-            themeSwitcher.setAttribute(\"aria-checked\", \"true\");\n-            document.firstElementChild.classList.remove('sakai-dark-theme');\n-            localStorage.setItem('sakai-theme', 'light')\n+    }\n+\n+    function setDarkThemeSwitcherToggle(onOff) {\n+        darkThemeSwitcher.setAttribute(\"aria-checked\", onOff);\n+    }\n+\n+    function setPortalThemeUserPref(theme) {\n+        var url = '/direct/userPrefs/updateKey/' + portal.user.id + '/sakai:portal:theme?theme=' + theme;\n+        var ajaxRequest = new XMLHttpRequest();\n+        ajaxRequest.open(\"PUT\", url);\n+        ajaxRequest.send();\n+    }\n+\n+    function toggleDarkTheme() {\n+        // Set to dark theme\n+        if (darkThemeSwitcher.getAttribute(\"aria-checked\") === \"false\") {\n+            enableDarkTheme();\n+        } else {\n+            // Set to light theme\n+            enableLightTheme();", "originalCommit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI0MzQ5OA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548243498", "bodyText": "Thanks for the suggestion. I've updated this line now.", "author": "fostersdesign", "createdAt": "2020-12-23T21:14:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMTcwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMjk2Mw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545202963", "bodyText": "PEDANT ALERT: I like a single space after the if. You've done that in some places.", "author": "adrianfish", "createdAt": "2020-12-17T15:59:10Z", "path": "portal/portal-charon/charon/src/webapp/scripts/themeswitcher.js", "diffHunk": "@@ -1,43 +1,97 @@\n-function themeSwitcher(){\n+function sakaiThemeSwitcher(){\n \n-    let themeSwitcher = document.getElementById(\"themeSwitcher\");\n+    let darkThemeSwitcher = document.getElementById(\"sakai-darkThemeSwitcher\");\n \n-    SAK_THEME_SELECTION_KEY = portal.user.id + \"#theme\";\n+    const defaultThemeClass = 'sakaiUserTheme-notSet';\n+    const lightThemeClass = 'sakaiUserTheme-light';\n+    const darkThemeClass = 'sakaiUserTheme-dark';\n \n-    if(themeSwitcher != null) {\n+    init();\n+    \n+    function init() {\n+        // attach listener to dark theme toggle switch\n+        darkThemeSwitcher && darkThemeSwitcher.addEventListener('click', toggleDarkTheme, false);\n+\n+        if(isLoggedIn()) {\n+            // only check for unset theme preference because light and dark themes are already set by Java\n+            if(isPortalThemeUserPrefUnset()) {\n+                if(isOsDarkThemeSet()) {\n+                    enableDarkTheme();\n+                } else {\n+                    // to define a user preference:", "originalCommit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI0MjUxMw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548242513", "bodyText": "Good catch. Thanks.", "author": "fostersdesign", "createdAt": "2020-12-23T21:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwMjk2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNzQ0MA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545207440", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        String userTheme = \"sakaiUserTheme-notSet\";\n          \n          \n            \n                                        \n          \n          \n            \n                                        //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n          \n          \n            \n                                        userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n          \n          \n            \n                                        String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");", "author": "ern", "createdAt": "2020-12-17T16:05:03Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1735,13 +1735,18 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+                            \n+                            String userTheme = \"sakaiUserTheme-notSet\";\n+                            \n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");", "originalCommit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI1ODA3Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548258077", "bodyText": "Thanks for the suggestion. I've made this change.", "author": "fostersdesign", "createdAt": "2020-12-23T21:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNzQ0MA=="}], "type": "inlineReview"}, {"oid": "d05e1c7b05bd56973b874017ea29696a3c747055", "url": "https://github.com/sakaiproject/sakai/commit/d05e1c7b05bd56973b874017ea29696a3c747055", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-23T21:06:23Z", "type": "forcePushed"}, {"oid": "64766e5649fe8a59a4a06161a64063044c020f9a", "url": "https://github.com/sakaiproject/sakai/commit/64766e5649fe8a59a4a06161a64063044c020f9a", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-23T21:33:03Z", "type": "commit"}, {"oid": "64766e5649fe8a59a4a06161a64063044c020f9a", "url": "https://github.com/sakaiproject/sakai/commit/64766e5649fe8a59a4a06161a64063044c020f9a", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-23T21:33:03Z", "type": "forcePushed"}]}