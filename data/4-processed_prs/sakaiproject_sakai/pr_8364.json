{"pr_number": 8364, "pr_title": "SAK-41502: Excusing an individual grade should be reflected in score's", "pr_createdAt": "2020-07-14T11:14:56Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8364", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMzY3OA==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r454433678", "bodyText": "As with the reference PR, I believe this column should be not-nullable. Conceptually, there is only two states: grade is included, or grade is excluded. Eliminating the 3rd state (null) makes this feature cleaner, easier to understand, and better conforms to standard database design practises.", "author": "bjones86", "createdAt": "2020-07-14T15:14:53Z", "path": "edu-services/gradebook-service/hibernate/src/hibernate/org/sakaiproject/tool/gradebook/GradingEvent.hbm.xml", "diffHunk": "@@ -20,6 +20,7 @@\n \t\t<property name=\"studentId\" column=\"STUDENT_ID\" type=\"string\" not-null=\"true\"/>\n \t\t<property name=\"dateGraded\" column=\"DATE_GRADED\" type=\"timestamp\" not-null=\"true\"/>\n \t\t<property name=\"grade\" column=\"GRADE\" type=\"string\" />\n+\t\t<property name=\"excluded\" column=\"IS_EXCLUDED\" type=\"boolean\" not-null=\"false\"/>", "originalCommit": "ec8cf3d41009a9d1c702b041415f58f4c505431f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMTgzNw==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r454831837", "bodyText": "Hello, @bjones86, we've been testing this PR and we would need a null value because you can modify a grade but not modifying the \"excluding\" state so it's needed to be null because on the controller excluded value is generated null because is not modified in the event.\nNull is threated as it on line 1870 of GradebookServiceHibernateImpl. You can see it too GradeLogPanel.java, on line 79. This is what it was designed. If we need to remove null this should be entirely refactored.\nWhat do you think?", "author": "SedueRey", "createdAt": "2020-07-15T06:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMzY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEwNDAyNw==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r455104027", "bodyText": "Personally I feel that this should be refactored to remove null as a possible value. I don't think there is a use case for having these as nullable. What does null represent? Conceptually, the grade is either included (false) or excluded (true).\nWith regards to GradebookServiceHibernateImpl:1870:\npublic void saveGradeAndExcuseForStudent(final String gradebookUid, final Long gradableObjectId, final String studentUid,\n\t\t\tfinal String grade, final boolean excuse) {\n\nIn this case it is a primitive boolean, which cannot be null. Primitive booleans must be initialized as either true or false, so I don't think it's possible to have a null value here.\nLong story short, I think the code should be refactored to eliminate null as a possible value here, as it doesn't provide any value. The default should be false (grade is included), rather than null. I'm sorry if this causes you more work  :(\nIf anyone disagrees with me, or has another opinion, feel free to chime in.", "author": "bjones86", "createdAt": "2020-07-15T14:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMzY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MjkzMQ==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r455152931", "bodyText": "@bjones86 , the way it works is not exactly this way, sorry.\nThere are, right now, three scenarios in the UI (before this PR). You can exclude a grade, you can include a grade but you can also modify a grade without changing the state of included/excluded. In all this three scenarios the event is always the same. We are just mapping the UI behaviour to save consistent events.\nRight now, in the UI, you can do those three scenarios and you'll have the same event for all three. We are trying to avoid that (is weird for the instructor).\nMaybe we can talk if the approach is the best way to do it but, for now, there are three cases. Null would be \"not changed\".\nShould we map it to an integer? Thanks.", "author": "SedueRey", "createdAt": "2020-07-15T15:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMzY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDI5OA==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r458170298", "bodyText": "This would make a great enum", "author": "ern", "createdAt": "2020-07-21T15:06:17Z", "path": "edu-services/gradebook-service/api/src/java/org/sakaiproject/service/gradebook/shared/GradebookService.java", "diffHunk": "@@ -58,6 +58,10 @@\n \tpublic static final int CATEGORY_TYPE_ONLY_CATEGORY = 2;\n \tpublic static final int CATEGORY_TYPE_WEIGHTED_CATEGORY = 3;\n \n+\tpublic static final int GRADE_UPDATE_GRADE = 0;\n+\tpublic static final int GRADE_EXCLUDED_GRADE = 1;\n+\tpublic static final int GRADE_INCLUDED_GRADE = 2;\n+\n \tpublic static final String[] validLetterGrade = { \"a+\", \"a\", \"a-\", \"b+\", \"b\", \"b-\",", "originalCommit": "6625c922d9b40bf91cdfa00ffc4fb8feb29c3c93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDkxMQ==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r458170911", "bodyText": "With hibernate its best to use Objects that better map to the state of the database, so Integer makes more sense here.", "author": "ern", "createdAt": "2020-07-21T15:07:06Z", "path": "edu-services/gradebook-service/hibernate/src/java/org/sakaiproject/tool/gradebook/GradingEvent.java", "diffHunk": "@@ -37,6 +38,7 @@\n     private GradableObject gradableObject;\n     private String grade;\n     private Date dateGraded;\n+    private int excluded;", "originalCommit": "6625c922d9b40bf91cdfa00ffc4fb8feb29c3c93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d268121f89b31a6edf5546ee4ab5f96056699b7b", "url": "https://github.com/sakaiproject/sakai/commit/d268121f89b31a6edf5546ee4ab5f96056699b7b", "message": "SAK-41502: Resolve Issues", "committedDate": "2020-09-08T10:42:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5ODE5NA==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492798194", "bodyText": "The action the instructor takes is called \"Excuse\", so let's use this terminology:\nScore of <b>{1}</b> excused by {2}", "author": "fostersdesign", "createdAt": "2020-09-22T14:50:12Z", "path": "gradebookng/bundle/src/main/bundle/gradebookng.properties", "diffHunk": "@@ -389,6 +389,8 @@ grade.log.entry = {0} - Score set to <b>{1}</b> by {2}\n grade.log.none = No grades have been entered for this cell.\n grade.outof = /{0}\n grade.menulabel = Open menu for student {0} and assignment {1} cell\n+grade.log.excluded={0} - Score <b>{1}</b> excluded by {2}", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5OTg2OA==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492799868", "bodyText": "To match the above change, let's use:\nScore of <b>{1}</b> included by {2}", "author": "fostersdesign", "createdAt": "2020-09-22T14:52:18Z", "path": "gradebookng/bundle/src/main/bundle/gradebookng.properties", "diffHunk": "@@ -389,6 +389,8 @@ grade.log.entry = {0} - Score set to <b>{1}</b> by {2}\n grade.log.none = No grades have been entered for this cell.\n grade.outof = /{0}\n grade.menulabel = Open menu for student {0} and assignment {1} cell\n+grade.log.excluded={0} - Score <b>{1}</b> excluded by {2}\n+grade.log.included={0} - Score <b>{1}</b> included by {2}", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NjUyMg==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492796522", "bodyText": "maybe\nGradingEventStatus {\nGRADE_NONE(0)\nGRADE_EXCLUDED(1)\nGRADE_INCLUDED(2)\n}", "author": "ern", "createdAt": "2020-09-22T14:48:10Z", "path": "edu-services/gradebook-service/api/src/java/org/sakaiproject/service/gradebook/shared/GradebookService.java", "diffHunk": "@@ -57,6 +57,22 @@\n \tpublic static final int CATEGORY_TYPE_NO_CATEGORY = 1;\n \tpublic static final int CATEGORY_TYPE_ONLY_CATEGORY = 2;\n \tpublic static final int CATEGORY_TYPE_WEIGHTED_CATEGORY = 3;\n+\t\n+\tpublic enum GradeState {", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NzU1Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492797557", "bodyText": "this.excluded = GradebookService.GradeEventState.GRADE_UPDATE_GRADE;", "author": "ern", "createdAt": "2020-09-22T14:49:27Z", "path": "edu-services/gradebook-service/hibernate/src/java/org/sakaiproject/tool/gradebook/GradingEvent.java", "diffHunk": "@@ -50,6 +52,7 @@ public GradingEvent(GradableObject gradableObject, String graderId, String stude\n         \tthis.grade = grade.toString();\n         }\n         this.dateGraded = new Date();\n+        this.excluded = GradebookService.GradeState.GRADE_UPDATE_GRADE.getValue();", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5Nzk4MQ==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492797981", "bodyText": "private GradingEventStatus excluded;", "author": "ern", "createdAt": "2020-09-22T14:49:56Z", "path": "edu-services/gradebook-service/hibernate/src/java/org/sakaiproject/tool/gradebook/GradingEvent.java", "diffHunk": "@@ -37,6 +38,7 @@\n     private GradableObject gradableObject;\n     private String grade;\n     private Date dateGraded;\n+    private Integer excluded;", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5ODY0MQ==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492798641", "bodyText": "private final GradingEventStatus excluded;", "author": "ern", "createdAt": "2020-09-22T14:50:45Z", "path": "gradebookng/tool/src/java/org/sakaiproject/gradebookng/business/model/GbGradeLog.java", "diffHunk": "@@ -41,11 +41,15 @@\n \n \t@Getter\n \tprivate final String grade;\n-\n+\t\n+\t@Getter\n+\tprivate final Integer excluded;", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgwMTk2NA==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492801964", "bodyText": "this.status = ge.getStatus();", "author": "ern", "createdAt": "2020-09-22T14:54:47Z", "path": "gradebookng/tool/src/java/org/sakaiproject/gradebookng/business/model/GbGradeLog.java", "diffHunk": "@@ -41,11 +41,15 @@\n \n \t@Getter\n \tprivate final String grade;\n-\n+\t\n+\t@Getter\n+\tprivate final Integer excluded;\n+\t\n \tpublic GbGradeLog(final GradingEvent ge) {\n \t\tthis.dateGraded = ge.getDateGraded();\n \t\tthis.graderUuid = ge.getGraderId();\n \t\tthis.grade = ge.getGrade();\n+\t\tthis.excluded = ge.getExcluded();", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgwMjc1OA==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492802758", "bodyText": "public GradingEventStatus getStatus();", "author": "ern", "createdAt": "2020-09-22T14:55:44Z", "path": "edu-services/gradebook-service/hibernate/src/java/org/sakaiproject/tool/gradebook/GradingEvent.java", "diffHunk": "@@ -100,6 +103,14 @@ public void setStudentId(String studentId) {\n \t\tthis.studentId = studentId;\n \t}\n \n+\tpublic Integer getExcluded() {", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgwMzI2Mw==", "url": "https://github.com/sakaiproject/sakai/pull/8364#discussion_r492803263", "bodyText": "public GradingEventStatus setStatus(GradingEventStatus status);", "author": "ern", "createdAt": "2020-09-22T14:56:21Z", "path": "edu-services/gradebook-service/hibernate/src/java/org/sakaiproject/tool/gradebook/GradingEvent.java", "diffHunk": "@@ -100,6 +103,14 @@ public void setStudentId(String studentId) {\n \t\tthis.studentId = studentId;\n \t}\n \n+\tpublic Integer getExcluded() {\n+\t\treturn excluded;\n+\t}\n+\n+\tpublic void setExcluded(Integer excluded) {", "originalCommit": "e53b7899d8ddffa6e93ab90626c607f43c5beaf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc0915620ed116d4ef0c7ad800711305d3a13be2", "url": "https://github.com/sakaiproject/sakai/commit/fc0915620ed116d4ef0c7ad800711305d3a13be2", "message": "SAK-41502: Excusing an individual grade should be reflected in Grade Log scores", "committedDate": "2020-12-02T08:25:24Z", "type": "commit"}, {"oid": "fc0915620ed116d4ef0c7ad800711305d3a13be2", "url": "https://github.com/sakaiproject/sakai/commit/fc0915620ed116d4ef0c7ad800711305d3a13be2", "message": "SAK-41502: Excusing an individual grade should be reflected in Grade Log scores", "committedDate": "2020-12-02T08:25:24Z", "type": "forcePushed"}]}