{"pr_number": 7985, "pr_title": "SAK-42890 Site Info > Groups: Indicate which tools and items are lock\u2026", "pr_createdAt": "2020-03-06T10:46:21Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/7985", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgzNDUyNQ==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r388834525", "bodyText": "Looks like there's a label missing for this input. That makes it hard for people using screen readers or voice control to use the input.", "author": "accesslint", "createdAt": "2020-03-06T10:46:26Z", "path": "site-manage/site-group-manager/src/main/webapp/WEB-INF/templates/index.html", "diffHunk": "@@ -21,16 +23,37 @@\n         <tbody>\n           <tr th:each=\"group : ${groupList}\">\n             <td>\n-              <span th:if=\"${lockedGroupList.contains(group)}\" class=\"fa fa-fw fa-lock\" aria-hidden=\"true\" th:title=\"#{index.table.grouplocked}\"></span>\n-              <a th:if=\"${!lockedGroupList.contains(group)}\" th:href=\"@{/group(groupId=${group.id})}\" th:text=\"${group.title}\"></a>\n-              <span th:if=\"${lockedGroupList.contains(group)}\" th:text=\"${group.title}\"></span>\n+              <span th:if=\"${lockedGroupList.contains(group.id)}\" class=\"fa fa-fw fa-lock\" aria-hidden=\"true\" th:title=\"#{index.table.grouplocked}\"></span>\n+              <a th:if=\"${!lockedGroupList.contains(group.id)}\" th:href=\"@{/group(groupId=${group.id})}\" th:text=\"${group.title}\"></a>\n+              <span th:if=\"${lockedGroupList.contains(group.id)}\" th:text=\"${group.title}\"></span>\n+            </td>\n+            <td class=\"hidden-xs\" th:if=\"${anyGroupLocked}\">\n+              <div th:if=\"${lockedGroupsEntityMap.get(group.id) != null }\">\n+                <div th:if=\"${!lockedGroupsEntityMap.get(group.id).get('assignments').isEmpty()}\">\n+                  <span class=\"group-locked-info-collapsed\" data-toggle=\"collapse\" th:data-target=\"|#lockingassignments-${group.id}|\" tabindex=\"0\" role=\"button\" th:text=\"#{index.table.assignments}\"></span>\n+                  <div th:id=\"|lockingassignments-${group.id}|\" class=\"collapse\">\n+                    <ul th:each=\" assigment : ${lockedGroupsEntityMap.get(group.id).get('assignments')}\">\n+                      <li th:text=\"${assigment}\"></li>\n+                    </ul>\n+                  </div>\n+                </div>\n+                <div class=\"clearfix\"></div>\n+                <div th:if=\"${!lockedGroupsEntityMap.get(group.id).get('assessments').isEmpty()}\">\n+                <span class=\"group-locked-info-collapsed\" data-toggle=\"collapse\" th:data-target=\"|#lockingassessments-${group.id}|\" tabindex=\"0\" role=\"button\" th:text=\"#{index.table.assessments}\"></span>\n+                  <div th:id=\"|lockingassessments-${group.id}|\" class=\"collapse\">\n+                    <ul th:each=\" assessment : ${lockedGroupsEntityMap.get(group.id).get('assessments')}\">\n+                      <li th:text=\"${assessment}\"></li>\n+                    </ul>\n+                  </div>\n+                </div>\n+              </div>\n             </td>\n             <td><a th:if=\"${groupJoinableSetMap.get(group.id) != null}\" th:href=\"@{/joinableset(joinableSetId=${groupJoinableSetMap.get(group.id)})}\" th:text=\"${groupJoinableSetMap.get(group.id)}\"></a></td>\n             <td class=\"hidden-xs\"><span th:text=\"${group.getMembers().size()}\"></span> <span th:if=\"${groupJoinableSetSizeMap.get(group.id) != null}\" th:text=\"'('+${groupJoinableSetSizeMap.get(group.id)}+')'\"></span></td>\n             <td class=\"hidden-xs\" th:text=\"${groupMemberMap.get(group.id)}\"></td>\n             <td>\n-              <input th:if=\"${!lockedForDeletionGroupList.contains(group)}\" th:attr=\"groupInfo=|${group.title} - ${group.getMembers().size()} #{index.table.members}|\" type=\"checkbox\" name=\"deletedGroupList\" th:field=\"*{deletedGroupList}\" th:value=\"${group.id}\" onchange=\"indexFunctions.checkSubmitButton();\"/>\n-              <span th:if=\"${lockedForDeletionGroupList.contains(group)}\" class=\"fa fa-fw fa-lock\" aria-hidden=\"true\" th:title=\"#{index.table.grouplocked.deletion}\"></span>\n+              <input th:if=\"${!lockedForDeletionGroupList.contains(group.id)}\" th:attr=\"groupInfo=|${group.title} - ${group.getMembers().size()} #{index.table.members}|\" type=\"checkbox\" name=\"deletedGroupList\" th:field=\"*{deletedGroupList}\" th:value=\"${group.id}\" onchange=\"indexFunctions.checkSubmitButton();\"/>", "originalCommit": "f6a624767a75c308c7d8b5e027725962c199a336", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5ODkxMQ==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r391798911", "bodyText": "can use diamond operator here and in few other places\nArrayList<>()", "author": "ern", "createdAt": "2020-03-12T18:02:20Z", "path": "site-manage/site-group-manager/src/main/java/org/sakaiproject/groupmanager/controller/MainController.java", "diffHunk": "@@ -75,11 +75,15 @@ public int compare(Group g1, Group g2){\n                 return g1.getTitle().compareToIgnoreCase(g2.getTitle());\n         }});\n \n-        List<Group> lockedGroupList = site.getGroups().stream().filter(group -> RealmLockMode.ALL.equals(group.getRealmLock()) || RealmLockMode.MODIFY.equals(group.getRealmLock())).collect(Collectors.toList());\n-        List<Group> lockedForDeletionGroupList = site.getGroups().stream().filter(group -> RealmLockMode.ALL.equals(group.getRealmLock()) || RealmLockMode.DELETE.equals(group.getRealmLock())).collect(Collectors.toList());\n+        // Control the groups that are locked by entities\n+        boolean anyGroupLocked = false;\n+        List<String> lockedGroupList = new ArrayList<String>();", "originalCommit": "f6a624767a75c308c7d8b5e027725962c199a336", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MTk5OA==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r392171998", "bodyText": "Well, it's optional right? I like declaring the types but ok, I've changed them.", "author": "mpellicer", "createdAt": "2020-03-13T11:26:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5ODkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDE3Ng==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r391800176", "bodyText": "super generic and vague name SakaiService, also given that this is in a tool this shouldn't be named a service as it's misleading!\nmaybe something like:\nGroupManagerOperations\nGroupManagerActions", "author": "ern", "createdAt": "2020-03-12T18:04:37Z", "path": "site-manage/site-group-manager/src/main/java/org/sakaiproject/groupmanager/service/SakaiService.java", "diffHunk": "@@ -42,6 +51,9 @@\n @Slf4j\n public class SakaiService  {", "originalCommit": "f6a624767a75c308c7d8b5e027725962c199a336", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MjU1MA==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r392172550", "bodyText": "I don't agree with this, this is a \"service that interacts with some Sakai services\", SakaiService makes sense to me. I'm not going to change the name of the service and all the variables in this PR.", "author": "mpellicer", "createdAt": "2020-03-13T11:27:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDE3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzI1MA==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r391827250", "bodyText": "Use the AssignmentConstants in the pi that's the whole purpose so we don't recreate all these constants.", "author": "ern", "createdAt": "2020-03-12T18:55:11Z", "path": "site-manage/site-group-manager/src/main/java/org/sakaiproject/groupmanager/service/SakaiService.java", "diffHunk": "@@ -126,4 +138,44 @@ public void postEvent(String event, String userId) {\n         eventTrackingService.post(eventTrackingService.newEvent(event, userId, true/*update event*/));\n     }\n \n+    public Map<String, List<String>> getGroupLockingEntities (Group group) {\n+        Map<String, List<String>> lockingEntitiesMap = new HashMap<String, List<String>>();\n+        List<String[]> groupRealmLocks = group.getRealmLocks();\n+\n+        // Add one list per entity that locks groups.\n+        List<String> assignmentTitles = new ArrayList<String>();\n+        List<String> assessmentTitles = new ArrayList<String>();\n+\n+        for (String[] groupRealmLock : groupRealmLocks) {\n+            String objectReference = groupRealmLock[0];\n+            if (StringUtils.isNotBlank(objectReference)) {\n+                if (objectReference.startsWith(GroupManagerConstants.ASN_ENTITY_PREFIX)) {", "originalCommit": "f6a624767a75c308c7d8b5e027725962c199a336", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NzEwNw==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r392177107", "bodyText": "Ok, thanks for the constant!", "author": "mpellicer", "createdAt": "2020-03-13T11:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzcxNg==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r391827716", "bodyText": "Use the AssignmentReferenceReckoner to load an assignment reference which you can easily get the assignment to load", "author": "ern", "createdAt": "2020-03-12T18:55:59Z", "path": "site-manage/site-group-manager/src/main/java/org/sakaiproject/groupmanager/service/SakaiService.java", "diffHunk": "@@ -126,4 +138,44 @@ public void postEvent(String event, String userId) {\n         eventTrackingService.post(eventTrackingService.newEvent(event, userId, true/*update event*/));\n     }\n \n+    public Map<String, List<String>> getGroupLockingEntities (Group group) {\n+        Map<String, List<String>> lockingEntitiesMap = new HashMap<String, List<String>>();\n+        List<String[]> groupRealmLocks = group.getRealmLocks();\n+\n+        // Add one list per entity that locks groups.\n+        List<String> assignmentTitles = new ArrayList<String>();\n+        List<String> assessmentTitles = new ArrayList<String>();\n+\n+        for (String[] groupRealmLock : groupRealmLocks) {\n+            String objectReference = groupRealmLock[0];\n+            if (StringUtils.isNotBlank(objectReference)) {\n+                if (objectReference.startsWith(GroupManagerConstants.ASN_ENTITY_PREFIX)) {\n+                    String assignmentReference = objectReference.substring(objectReference.lastIndexOf(\"/\") + 1);", "originalCommit": "f6a624767a75c308c7d8b5e027725962c199a336", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NzMzNw==", "url": "https://github.com/sakaiproject/sakai/pull/7985#discussion_r392177337", "bodyText": "Thanks for that, implemented the change, now using the AssignmentReferenceReckoner.", "author": "mpellicer", "createdAt": "2020-03-13T11:39:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzcxNg=="}], "type": "inlineReview"}, {"oid": "1e6fbdfac39f994a10053df0a0829147ff6db5ff", "url": "https://github.com/sakaiproject/sakai/commit/1e6fbdfac39f994a10053df0a0829147ff6db5ff", "message": "SAK-42890 Site Info > Groups: Indicate which tools and items are locking each group", "committedDate": "2020-03-13T11:39:20Z", "type": "forcePushed"}, {"oid": "63c037c12503b132caf8162d294423c29d8efcea", "url": "https://github.com/sakaiproject/sakai/commit/63c037c12503b132caf8162d294423c29d8efcea", "message": "SAK-42890 Site Info > Groups: Indicate which tools and items are locking each group", "committedDate": "2020-03-13T11:50:03Z", "type": "commit"}, {"oid": "63c037c12503b132caf8162d294423c29d8efcea", "url": "https://github.com/sakaiproject/sakai/commit/63c037c12503b132caf8162d294423c29d8efcea", "message": "SAK-42890 Site Info > Groups: Indicate which tools and items are locking each group", "committedDate": "2020-03-13T11:50:03Z", "type": "forcePushed"}]}