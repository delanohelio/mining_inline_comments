{"pr_number": 8283, "pr_title": "SAK-43737 Added sakai-course-card component", "pr_createdAt": "2020-06-11T17:37:16Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8283", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NTc0Mg==", "url": "https://github.com/sakaiproject/sakai/pull/8283#discussion_r438955742", "bodyText": "Looks like there's a label missing for this input. That makes it hard for people using screen readers or voice control to use the input.", "author": "accesslint", "createdAt": "2020-06-11T17:37:23Z", "path": "webcomponents/tool/src/main/frontend/stories/sakai-options-menu.stories.js", "diffHunk": "@@ -0,0 +1,21 @@\n+import { html } from 'lit-html';\n+import { withKnobs, text, boolean, number } from \"@storybook/addon-knobs\";\n+\n+import '../js/sakai-options-menu.js';\n+\n+export default {\n+  title: 'Sakai Options Menu',\n+  decorators: [withKnobs]\n+};\n+\n+export const BasicDisplay = () => html`\n+\n+  <sakai-options-menu placement=\"${text('placement', 'right')}\">\n+    <div slot=\"content\">\n+      <div>Select some fruit options!</div>\n+      <div><input type=\"checkbox\" />Bananas</div>", "originalCommit": "2b5858f4e74b2eee73900cdbebc1f948440925e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NTc0Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8283#discussion_r438955747", "bodyText": "Looks like there's a label missing for this input. That makes it hard for people using screen readers or voice control to use the input.", "author": "accesslint", "createdAt": "2020-06-11T17:37:23Z", "path": "webcomponents/tool/src/main/frontend/stories/sakai-options-menu.stories.js", "diffHunk": "@@ -0,0 +1,21 @@\n+import { html } from 'lit-html';\n+import { withKnobs, text, boolean, number } from \"@storybook/addon-knobs\";\n+\n+import '../js/sakai-options-menu.js';\n+\n+export default {\n+  title: 'Sakai Options Menu',\n+  decorators: [withKnobs]\n+};\n+\n+export const BasicDisplay = () => html`\n+\n+  <sakai-options-menu placement=\"${text('placement', 'right')}\">\n+    <div slot=\"content\">\n+      <div>Select some fruit options!</div>\n+      <div><input type=\"checkbox\" />Bananas</div>\n+      <div><input type=\"checkbox\" />Apples</div>", "originalCommit": "2b5858f4e74b2eee73900cdbebc1f948440925e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NTc1MA==", "url": "https://github.com/sakaiproject/sakai/pull/8283#discussion_r438955750", "bodyText": "Looks like there's a label missing for this input. That makes it hard for people using screen readers or voice control to use the input.", "author": "accesslint", "createdAt": "2020-06-11T17:37:23Z", "path": "webcomponents/tool/src/main/frontend/stories/sakai-options-menu.stories.js", "diffHunk": "@@ -0,0 +1,21 @@\n+import { html } from 'lit-html';\n+import { withKnobs, text, boolean, number } from \"@storybook/addon-knobs\";\n+\n+import '../js/sakai-options-menu.js';\n+\n+export default {\n+  title: 'Sakai Options Menu',\n+  decorators: [withKnobs]\n+};\n+\n+export const BasicDisplay = () => html`\n+\n+  <sakai-options-menu placement=\"${text('placement', 'right')}\">\n+    <div slot=\"content\">\n+      <div>Select some fruit options!</div>\n+      <div><input type=\"checkbox\" />Bananas</div>\n+      <div><input type=\"checkbox\" />Apples</div>\n+      <div><input type=\"checkbox\" />Orange</div>", "originalCommit": "2b5858f4e74b2eee73900cdbebc1f948440925e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NTc1NQ==", "url": "https://github.com/sakaiproject/sakai/pull/8283#discussion_r438955755", "bodyText": "Looks like there's a label missing for this input. That makes it hard for people using screen readers or voice control to use the input.", "author": "accesslint", "createdAt": "2020-06-11T17:37:24Z", "path": "webcomponents/tool/src/main/frontend/js/sakai-course-card.js", "diffHunk": "@@ -0,0 +1,249 @@\n+import { html, css, LitElement } from './assets/lit-element/lit-element.js';\n+import './sakai-icon.js';\n+import './sakai-options-menu.js';\n+import { loadProperties, tr } from \"./sakai-i18n.js\";\n+\n+export class SakaiCourseCard extends LitElement {\n+\n+  static get styles() {\n+\n+    return css`\n+      :host {\n+        display: block;\n+        width: var(--sakai-course-card-width, 402px);\n+        font-family: var(--sakai-course-card-font-family, roboto, arial, sans-serif);\n+      }\n+      .info-block {\n+        height: var(--sakai-course-card-info-height, 90px);\n+        border: solid;\n+        border-width: var(--sakai-course-card-border-width, 0);\n+        border-color: var(--sakai-course-card-border-color, black);\n+        border-bottom: 0;\n+        border-radius: var(--sakai-course-card-border-radius, 4px) var(--sakai-course-card-border-radius, 4px) 0 0;\n+        padding: var(--sakai-course-card-padding, 20px);\n+        background: no-repeat;\n+        background-color: var(--sakai-course-card-info-block-bg-color, #0f4b6f);\n+        background-size: cover;\n+        background-position: center;\n+      }\n+        .top-bar { display: flex; justify-content: space-between;}\n+          .favourite { color: var(--sakai-icon-favourite-color, yellow); margin-right: 4px; }\n+          .title-block {\n+            flex: 2;\n+            color: var(--sakai-course-card-title-color, white);\n+          }\n+          .title-block span {\n+            font-size: var(--sakai-course-card-title-font-size, 16px);\n+          }\n+          .code-block {\n+            color: var(--sakai-course-card-code-color, white);\n+            font-size: var(--sakai-course-card-code-font-size, 12px);\n+          }\n+      .tool-alerts-block {\n+        display: flex;\n+        align-items: center;\n+        justify-content: left;\n+        height: var(--sakai-course-card-tool-alerts-height, 40px);\n+        padding: var(--sakai-course-card-tool-alerts-padding, 5px);\n+        border: solid;\n+        border-width: var(--sakai-course-card-border-width, 0);\n+        border-color: var(--sakai-course-card-border-color, black);\n+        border-radius: 0 0 var(--sakai-course-card-border-radius, 4px) var(--sakai-course-card-border-radius, 4px);\n+        border-top: 0;\n+        color: var(--sakai-course-card-tool-alerts-color, black);\n+        background-color: var(--sakai-course-card-bg-color, white);\n+      }\n+        .tool-alerts-block div { flex: 0; margin-left: 5px; margin-right: 5px; }\n+        .tool-alerts sakai-icon { margin: 0 5px 0 5px;}\n+        .alert { color: var(--sakai-course-card-tool-alert-icon-color, rgb(15,75,111)) }\n+\n+      #course-options { padding: 10px; }\n+      #course-options input { margin-right: 10px; }\n+        #favourite-block {\n+          color: var(--sakai-course-card-options-menu-favourites-block-color, black);\n+          font-size: var(--sakai-course-card-options-menu-favourites-block-font-size, inherit);\n+          font-weight: var(--sakai-course-card-options-menu-favourites-block-font-weight, bold);\n+        }\n+        #tools-block {\n+          margin-top: 10px;\n+          margin-left: 3px;\n+        }\n+          #tools-title {\n+            font-weight: var(--sakai-course-card-options-menu-tools-title-font-weight, bold);\n+          }\n+          #tools {\n+            margin-top: 5px;\n+            margin-left: 10px;\n+          }\n+\n+      /*\n+      #arrow, #arrow::before {\n+        position: absolute;\n+        width: 10px;\n+        height: 10px;\n+        z-index: -1;\n+        margin-top: 1px;\n+      }\n+\n+      #arrow::before {\n+        content: '';\n+        transform: rotate(45deg);\n+        background: white;\n+      }\n+\n+      #tooltip[data-popper-placement^='top'] > #arrow {\n+        bottom: -4px;\n+      }\n+\n+      #tooltip[data-popper-placement^='bottom'] > #arrow {\n+        top: -4px;\n+      }\n+\n+      #tooltip[data-popper-placement^='left'] > #arrow {\n+        right: -4px;\n+      }\n+\n+      #tooltip[data-popper-placement^='right'] > #arrow {\n+        left: -4px;\n+      }\n+      */\n+    `;\n+  }\n+\n+  static get properties() {\n+\n+    return {\n+      courseData: { attribute: \"course-data\", type: Object },\n+      toolUrls: { attribute: \"tool-urls\", type: Object },\n+      i18n: Object,\n+      toolnameMap: Object,\n+      _tools: Array,\n+    };\n+  }\n+\n+  constructor() {\n+\n+    super();\n+\n+    this._courseData = {\n+      id: \"xyz\",\n+      title: \"Course Title\",\n+      code: \"Course Code\",\n+      favourite: false,\n+      alerts: [],\n+    };\n+\n+    this._tools = [\"assignments\", \"gradebook\"];\n+\n+    loadProperties(\"toolname-mappings\").then((r) => {\n+\n+      this.toolnameMap = {\n+        assignments: r[\"assignments\"],\n+        gradebook: r[\"gradebook\"],\n+        forums: r[\"forums\"],\n+      };\n+    });\n+\n+    this._toolUrlDefaults = {\n+      assignments: \"http://www.theguardian.co.uk\",\n+      gradebook: \"http://www.oracle.com\",\n+      forums: \"http://www.twitter.com\",\n+    };\n+\n+    this._toolUrls = this._toolUrlDefaults;\n+\n+    loadProperties(\"coursecard\").then((r) => this.i18n = r);\n+  }\n+\n+  set courseData(value) {\n+\n+    this._courseData = value;\n+    this._courseData.alerts = this._courseData.alerts || [];\n+  }\n+\n+  get courseData() {\n+    return this._courseData;\n+  }\n+\n+  set toolUrls(value) {\n+    this._toolUrls = Object.assign(this._toolUrlDefaults, value);\n+  }\n+\n+  get toolUrls() {\n+    return this._toolUrls;\n+  }\n+\n+  _toolClicked(e) {\n+\n+    e.stopPropagation();\n+    if (e.target.checked) {\n+      if (!this._tools.includes(e.target.value)) {\n+        this._tools.push(e.target.value);\n+        this._tools = [...this._tools];\n+      }\n+    } else {\n+      if (this._tools.includes(e.target.value)) {\n+        this._tools.splice(this._tools.indexOf(e.target.value), 1);\n+        this._tools = [...this._tools];\n+      }\n+    }\n+\n+    return false;\n+  }\n+\n+  _toggleFavourite(e) {\n+\n+    const url = `/direct/site/${e.target.checked ? \"addfavourite\" : \"removefavourite\"}?siteId=${this._courseData.id}`;\n+\n+    fetch(url).then((r) => {\n+\n+      if (r.ok) {\n+        this._courseData.favourite = e.target.checked;\n+        this.requestUpdate();\n+      } else {\n+        throw new Error(`Failed to add/remove site with id ${this._courseData.id}`);\n+      }\n+    }).catch((error) =>  console.error(error));\n+  }\n+\n+  shouldUpdate(changed) {\n+    return this.i18n && this.toolnameMap;\n+  }\n+\n+  render() {\n+\n+    //<div id=\"arrow\" data-popper-arrow></div>\n+\n+    return html`\n+      <div class=\"info-block\" style=\"background-image: ${this._courseData.image ? `url(${this._courseData.image})` : \"\"}\">\n+        <div class=\"top-bar\">\n+          <div class=\"title-block\">\n+            ${this._courseData.favourite ? html`<sakai-icon class=\"favourite\" type=\"favourite\" size=\"small\"></sakai-icon>` : \"\"}\n+            <span>${this.courseData.title}</span>\n+          </div>\n+          <sakai-options-menu title=\"${this.i18n[\"options_menu_tooltip\"]}\">\n+            <div slot=\"content\" id=\"course-options\">\n+              <div id=\"favourite-block\"><input type=\"checkbox\" @click=${this._toggleFavourite} /><span>${this.i18n[\"favourite_this_course\"]}</span></div>", "originalCommit": "2b5858f4e74b2eee73900cdbebc1f948440925e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NTc1OA==", "url": "https://github.com/sakaiproject/sakai/pull/8283#discussion_r438955758", "bodyText": "Looks like there's a label missing for this input. That makes it hard for people using screen readers or voice control to use the input.", "author": "accesslint", "createdAt": "2020-06-11T17:37:24Z", "path": "webcomponents/tool/src/main/frontend/js/sakai-course-card.js", "diffHunk": "@@ -0,0 +1,249 @@\n+import { html, css, LitElement } from './assets/lit-element/lit-element.js';\n+import './sakai-icon.js';\n+import './sakai-options-menu.js';\n+import { loadProperties, tr } from \"./sakai-i18n.js\";\n+\n+export class SakaiCourseCard extends LitElement {\n+\n+  static get styles() {\n+\n+    return css`\n+      :host {\n+        display: block;\n+        width: var(--sakai-course-card-width, 402px);\n+        font-family: var(--sakai-course-card-font-family, roboto, arial, sans-serif);\n+      }\n+      .info-block {\n+        height: var(--sakai-course-card-info-height, 90px);\n+        border: solid;\n+        border-width: var(--sakai-course-card-border-width, 0);\n+        border-color: var(--sakai-course-card-border-color, black);\n+        border-bottom: 0;\n+        border-radius: var(--sakai-course-card-border-radius, 4px) var(--sakai-course-card-border-radius, 4px) 0 0;\n+        padding: var(--sakai-course-card-padding, 20px);\n+        background: no-repeat;\n+        background-color: var(--sakai-course-card-info-block-bg-color, #0f4b6f);\n+        background-size: cover;\n+        background-position: center;\n+      }\n+        .top-bar { display: flex; justify-content: space-between;}\n+          .favourite { color: var(--sakai-icon-favourite-color, yellow); margin-right: 4px; }\n+          .title-block {\n+            flex: 2;\n+            color: var(--sakai-course-card-title-color, white);\n+          }\n+          .title-block span {\n+            font-size: var(--sakai-course-card-title-font-size, 16px);\n+          }\n+          .code-block {\n+            color: var(--sakai-course-card-code-color, white);\n+            font-size: var(--sakai-course-card-code-font-size, 12px);\n+          }\n+      .tool-alerts-block {\n+        display: flex;\n+        align-items: center;\n+        justify-content: left;\n+        height: var(--sakai-course-card-tool-alerts-height, 40px);\n+        padding: var(--sakai-course-card-tool-alerts-padding, 5px);\n+        border: solid;\n+        border-width: var(--sakai-course-card-border-width, 0);\n+        border-color: var(--sakai-course-card-border-color, black);\n+        border-radius: 0 0 var(--sakai-course-card-border-radius, 4px) var(--sakai-course-card-border-radius, 4px);\n+        border-top: 0;\n+        color: var(--sakai-course-card-tool-alerts-color, black);\n+        background-color: var(--sakai-course-card-bg-color, white);\n+      }\n+        .tool-alerts-block div { flex: 0; margin-left: 5px; margin-right: 5px; }\n+        .tool-alerts sakai-icon { margin: 0 5px 0 5px;}\n+        .alert { color: var(--sakai-course-card-tool-alert-icon-color, rgb(15,75,111)) }\n+\n+      #course-options { padding: 10px; }\n+      #course-options input { margin-right: 10px; }\n+        #favourite-block {\n+          color: var(--sakai-course-card-options-menu-favourites-block-color, black);\n+          font-size: var(--sakai-course-card-options-menu-favourites-block-font-size, inherit);\n+          font-weight: var(--sakai-course-card-options-menu-favourites-block-font-weight, bold);\n+        }\n+        #tools-block {\n+          margin-top: 10px;\n+          margin-left: 3px;\n+        }\n+          #tools-title {\n+            font-weight: var(--sakai-course-card-options-menu-tools-title-font-weight, bold);\n+          }\n+          #tools {\n+            margin-top: 5px;\n+            margin-left: 10px;\n+          }\n+\n+      /*\n+      #arrow, #arrow::before {\n+        position: absolute;\n+        width: 10px;\n+        height: 10px;\n+        z-index: -1;\n+        margin-top: 1px;\n+      }\n+\n+      #arrow::before {\n+        content: '';\n+        transform: rotate(45deg);\n+        background: white;\n+      }\n+\n+      #tooltip[data-popper-placement^='top'] > #arrow {\n+        bottom: -4px;\n+      }\n+\n+      #tooltip[data-popper-placement^='bottom'] > #arrow {\n+        top: -4px;\n+      }\n+\n+      #tooltip[data-popper-placement^='left'] > #arrow {\n+        right: -4px;\n+      }\n+\n+      #tooltip[data-popper-placement^='right'] > #arrow {\n+        left: -4px;\n+      }\n+      */\n+    `;\n+  }\n+\n+  static get properties() {\n+\n+    return {\n+      courseData: { attribute: \"course-data\", type: Object },\n+      toolUrls: { attribute: \"tool-urls\", type: Object },\n+      i18n: Object,\n+      toolnameMap: Object,\n+      _tools: Array,\n+    };\n+  }\n+\n+  constructor() {\n+\n+    super();\n+\n+    this._courseData = {\n+      id: \"xyz\",\n+      title: \"Course Title\",\n+      code: \"Course Code\",\n+      favourite: false,\n+      alerts: [],\n+    };\n+\n+    this._tools = [\"assignments\", \"gradebook\"];\n+\n+    loadProperties(\"toolname-mappings\").then((r) => {\n+\n+      this.toolnameMap = {\n+        assignments: r[\"assignments\"],\n+        gradebook: r[\"gradebook\"],\n+        forums: r[\"forums\"],\n+      };\n+    });\n+\n+    this._toolUrlDefaults = {\n+      assignments: \"http://www.theguardian.co.uk\",\n+      gradebook: \"http://www.oracle.com\",\n+      forums: \"http://www.twitter.com\",\n+    };\n+\n+    this._toolUrls = this._toolUrlDefaults;\n+\n+    loadProperties(\"coursecard\").then((r) => this.i18n = r);\n+  }\n+\n+  set courseData(value) {\n+\n+    this._courseData = value;\n+    this._courseData.alerts = this._courseData.alerts || [];\n+  }\n+\n+  get courseData() {\n+    return this._courseData;\n+  }\n+\n+  set toolUrls(value) {\n+    this._toolUrls = Object.assign(this._toolUrlDefaults, value);\n+  }\n+\n+  get toolUrls() {\n+    return this._toolUrls;\n+  }\n+\n+  _toolClicked(e) {\n+\n+    e.stopPropagation();\n+    if (e.target.checked) {\n+      if (!this._tools.includes(e.target.value)) {\n+        this._tools.push(e.target.value);\n+        this._tools = [...this._tools];\n+      }\n+    } else {\n+      if (this._tools.includes(e.target.value)) {\n+        this._tools.splice(this._tools.indexOf(e.target.value), 1);\n+        this._tools = [...this._tools];\n+      }\n+    }\n+\n+    return false;\n+  }\n+\n+  _toggleFavourite(e) {\n+\n+    const url = `/direct/site/${e.target.checked ? \"addfavourite\" : \"removefavourite\"}?siteId=${this._courseData.id}`;\n+\n+    fetch(url).then((r) => {\n+\n+      if (r.ok) {\n+        this._courseData.favourite = e.target.checked;\n+        this.requestUpdate();\n+      } else {\n+        throw new Error(`Failed to add/remove site with id ${this._courseData.id}`);\n+      }\n+    }).catch((error) =>  console.error(error));\n+  }\n+\n+  shouldUpdate(changed) {\n+    return this.i18n && this.toolnameMap;\n+  }\n+\n+  render() {\n+\n+    //<div id=\"arrow\" data-popper-arrow></div>\n+\n+    return html`\n+      <div class=\"info-block\" style=\"background-image: ${this._courseData.image ? `url(${this._courseData.image})` : \"\"}\">\n+        <div class=\"top-bar\">\n+          <div class=\"title-block\">\n+            ${this._courseData.favourite ? html`<sakai-icon class=\"favourite\" type=\"favourite\" size=\"small\"></sakai-icon>` : \"\"}\n+            <span>${this.courseData.title}</span>\n+          </div>\n+          <sakai-options-menu title=\"${this.i18n[\"options_menu_tooltip\"]}\">\n+            <div slot=\"content\" id=\"course-options\">\n+              <div id=\"favourite-block\"><input type=\"checkbox\" @click=${this._toggleFavourite} /><span>${this.i18n[\"favourite_this_course\"]}</span></div>\n+              <div id=\"tools-block\">\n+                <div id=\"tools-title\">${this.i18n[\"select_tools_to_display\"]}</div>\n+                <div id=\"tools\">\n+                  ${Object.keys(this.toolnameMap).map(k => html`\n+                  <div><input type=\"checkbox\" value=\"${k}\" .checked=${this._tools.includes(k)} @click=${this._toolClicked} />${this.toolnameMap[k]}</div>", "originalCommit": "2b5858f4e74b2eee73900cdbebc1f948440925e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "36eb2d3eb4cf5209c1ba907b52496d707366ade4", "url": "https://github.com/sakaiproject/sakai/commit/36eb2d3eb4cf5209c1ba907b52496d707366ade4", "message": "SAK-43737 Added sakai-course-card component\n\nhttps://jira.sakaiproject.org/browse/SAK-43737", "committedDate": "2020-06-11T17:43:34Z", "type": "forcePushed"}, {"oid": "cbeac31e6af4f135c8bcd1220e3c8ffe882eca14", "url": "https://github.com/sakaiproject/sakai/commit/cbeac31e6af4f135c8bcd1220e3c8ffe882eca14", "message": "SAK-43737 Added sakai-course-card component\n\nhttps://jira.sakaiproject.org/browse/SAK-43737", "committedDate": "2020-06-11T17:56:55Z", "type": "forcePushed"}, {"oid": "70eeb37a697d217e91cdf484a7eec1b0c673085a", "url": "https://github.com/sakaiproject/sakai/commit/70eeb37a697d217e91cdf484a7eec1b0c673085a", "message": "SAK-43737 Added sakai-course-card component\n\nhttps://jira.sakaiproject.org/browse/SAK-43737", "committedDate": "2020-06-16T12:21:25Z", "type": "forcePushed"}, {"oid": "023b7de1f06dbf5cf5a955568fcff80f889f4ebb", "url": "https://github.com/sakaiproject/sakai/commit/023b7de1f06dbf5cf5a955568fcff80f889f4ebb", "message": "SAK-43737 Added sakai-course-card component\n\nhttps://jira.sakaiproject.org/browse/SAK-43737", "committedDate": "2020-06-16T12:34:20Z", "type": "forcePushed"}, {"oid": "e0239d68f6fd8bb8eccdc8e85d0f9efdc3502286", "url": "https://github.com/sakaiproject/sakai/commit/e0239d68f6fd8bb8eccdc8e85d0f9efdc3502286", "message": "SAK-43737 Added sakai-course-card component\n\nhttps://jira.sakaiproject.org/browse/SAK-43737", "committedDate": "2020-06-16T13:51:09Z", "type": "commit"}, {"oid": "e0239d68f6fd8bb8eccdc8e85d0f9efdc3502286", "url": "https://github.com/sakaiproject/sakai/commit/e0239d68f6fd8bb8eccdc8e85d0f9efdc3502286", "message": "SAK-43737 Added sakai-course-card component\n\nhttps://jira.sakaiproject.org/browse/SAK-43737", "committedDate": "2020-06-16T13:51:09Z", "type": "forcePushed"}]}