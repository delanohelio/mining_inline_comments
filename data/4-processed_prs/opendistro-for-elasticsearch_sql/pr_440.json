{"pr_number": 440, "pr_title": "[PPL] Implemeted full functionality of commands in phase0", "pr_createdAt": "2020-04-24T22:37:02Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440", "timeline": [{"oid": "8a44cfc3e1246d3f39012aa5e476f5e5717a01c4", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8a44cfc3e1246d3f39012aa5e476f5e5717a01c4", "message": "m", "committedDate": "2020-04-06T18:25:14Z", "type": "commit"}, {"oid": "204bb818b31ba0e2726f2cfc9c7b3a27e4994515", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/204bb818b31ba0e2726f2cfc9c7b3a27e4994515", "message": "Merge branch 'feature/ppl' of github.com:opendistro-for-elasticsearch/sql into ppl-parser", "committedDate": "2020-04-09T04:45:46Z", "type": "commit"}, {"oid": "3bfdb2844147556cd37a51a325f1f599ec9b4ab5", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3bfdb2844147556cd37a51a325f1f599ec9b4ab5", "message": "Added antlr files", "committedDate": "2020-04-09T17:10:56Z", "type": "commit"}, {"oid": "c2f63c040031556f3ad154c09ae996c9b34b55ec", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c2f63c040031556f3ad154c09ae996c9b34b55ec", "message": "Merge remote-tracking branch 'upstream/feature/ppl' into ppl-parser", "committedDate": "2020-04-10T01:05:24Z", "type": "commit"}, {"oid": "084f380ec79e76c8665e780f40e921564ba33b8d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/084f380ec79e76c8665e780f40e921564ba33b8d", "message": "Added wildcard", "committedDate": "2020-04-12T00:40:23Z", "type": "commit"}, {"oid": "8c45b24b366fb80b3aa67e5dd68ede0f3d765d83", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8c45b24b366fb80b3aa67e5dd68ede0f3d765d83", "message": "Implemented parser for commands of simple syntax", "committedDate": "2020-04-14T04:31:04Z", "type": "commit"}, {"oid": "6b542eb5496b0034f8506a8b15e53071d56686ad", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6b542eb5496b0034f8506a8b15e53071d56686ad", "message": "addressed comments", "committedDate": "2020-04-14T16:39:34Z", "type": "commit"}, {"oid": "46bb1dc41b5154bd4274c2dc9b0c2b63b8582a24", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/46bb1dc41b5154bd4274c2dc9b0c2b63b8582a24", "message": "Enabled parsing nested fields and arrays in field", "committedDate": "2020-04-16T22:00:14Z", "type": "commit"}, {"oid": "80b06294773f7013a2f51b72ebce3c71f54257f8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/80b06294773f7013a2f51b72ebce3c71f54257f8", "message": "Added unit tests for nested fields", "committedDate": "2020-04-17T18:00:26Z", "type": "commit"}, {"oid": "ddf9c5a0dd4fc45dab4737cbd122396ddce87b6f", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ddf9c5a0dd4fc45dab4737cbd122396ddce87b6f", "message": "Added Java doc for classes", "committedDate": "2020-04-17T21:30:08Z", "type": "commit"}, {"oid": "17a8503378d37e5ba5d76ef0a888aedd909d3ea4", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/17a8503378d37e5ba5d76ef0a888aedd909d3ea4", "message": "Replaced the imported parser with static methods in the parser", "committedDate": "2020-04-17T21:49:03Z", "type": "commit"}, {"oid": "784df880868ef82a3062bbded3b28a5a3d8412f0", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/784df880868ef82a3062bbded3b28a5a3d8412f0", "message": "Addressed comments", "committedDate": "2020-04-17T22:01:36Z", "type": "commit"}, {"oid": "c251f030006ab69ee24a1aa8c7b1d905d2701703", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c251f030006ab69ee24a1aa8c7b1d905d2701703", "message": "Addressed comments", "committedDate": "2020-04-17T22:22:36Z", "type": "commit"}, {"oid": "3a92f1169381a911bde9adb31a9e0aa28700be24", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3a92f1169381a911bde9adb31a9e0aa28700be24", "message": "Addressed comments", "committedDate": "2020-04-18T01:58:44Z", "type": "commit"}, {"oid": "412f6f05349a36433d8f9697b21591295de0a3ac", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/412f6f05349a36433d8f9697b21591295de0a3ac", "message": "changed LogicalPlan to UnresolvedPlan; added test for index name with dots; changed the funcName to String in Function expression", "committedDate": "2020-04-20T18:03:35Z", "type": "commit"}, {"oid": "5430902214ce490e7f4b21371ed9dd5ca903af05", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5430902214ce490e7f4b21371ed9dd5ca903af05", "message": "Merge branch 'feature/ppl' of github.com:opendistro-for-elasticsearch/sql into ppl-parser", "committedDate": "2020-04-20T20:01:15Z", "type": "commit"}, {"oid": "ceced2d3e7a3f4597c764491080249c5fd81b686", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ceced2d3e7a3f4597c764491080249c5fd81b686", "message": "Enabled the rest of comparison operations; modified related tests", "committedDate": "2020-04-20T21:19:04Z", "type": "commit"}, {"oid": "3ae148076b73717aae5fb3ddd225886442044302", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3ae148076b73717aae5fb3ddd225886442044302", "message": "Added optional arguments in commands", "committedDate": "2020-04-21T03:55:03Z", "type": "commit"}, {"oid": "bd56129da5bede67cdaca9ee743c57e4304481bb", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bd56129da5bede67cdaca9ee743c57e4304481bb", "message": "Reverted nest", "committedDate": "2020-04-21T19:33:53Z", "type": "commit"}, {"oid": "9489e4166b66a0ce8f3682bc195b314477a5d8a5", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9489e4166b66a0ce8f3682bc195b314477a5d8a5", "message": "Removed constant and replaced it with literalValue in antlr parser", "committedDate": "2020-04-21T19:45:13Z", "type": "commit"}, {"oid": "a898546c411297b33e149ce4249ae7376a1db5ac", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a898546c411297b33e149ce4249ae7376a1db5ac", "message": "Simplified the accept methods", "committedDate": "2020-04-22T06:22:37Z", "type": "commit"}, {"oid": "daf4767ec7586c8892dd54580f3658058ff268ed", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/daf4767ec7586c8892dd54580f3658058ff268ed", "message": "Update", "committedDate": "2020-04-22T19:14:05Z", "type": "commit"}, {"oid": "384eec6325fd698f673076e829fef61d30cf2323", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/384eec6325fd698f673076e829fef61d30cf2323", "message": "Merge branch 'ppl-parser' into parser\n\n# Conflicts:\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/node/AbstractNodeVisitor.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/dsl/DSL.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/Aggregation.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/Project.java\n#\tppl/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilderTest.java", "committedDate": "2020-04-22T21:16:43Z", "type": "commit"}, {"oid": "acb157508ae78ee1fa08975d7bbbbfc36aa45576", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/acb157508ae78ee1fa08975d7bbbbfc36aa45576", "message": "Added builder pattern", "committedDate": "2020-04-23T08:44:41Z", "type": "commit"}, {"oid": "2cc689bbf0177d0cea7e6a90a9b45302e5edfdd5", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2cc689bbf0177d0cea7e6a90a9b45302e5edfdd5", "message": "Rolled back to remove builder", "committedDate": "2020-04-23T18:06:10Z", "type": "commit"}, {"oid": "42609bcc4ac80ae121a22115702e5622a823fe0a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/42609bcc4ac80ae121a22115702e5622a823fe0a", "message": "update", "committedDate": "2020-04-23T19:31:49Z", "type": "commit"}, {"oid": "092adbfbb4b647dffddacca21efa39d8ec601c33", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/092adbfbb4b647dffddacca21efa39d8ec601c33", "message": "Revert \"Added builder pattern\"\n\nThis reverts commit acb15750", "committedDate": "2020-04-23T19:33:08Z", "type": "commit"}, {"oid": "e8c2eff609a8f831ccc215bccd6271aecd059cd8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e8c2eff609a8f831ccc215bccd6271aecd059cd8", "message": "update", "committedDate": "2020-04-23T19:58:36Z", "type": "commit"}, {"oid": "0c78efa4c6617f6f94bb62ee3f98152989b33f41", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0c78efa4c6617f6f94bb62ee3f98152989b33f41", "message": "Merge remote-tracking branch 'upstream/feature/ppl' into ppl-parser", "committedDate": "2020-04-23T20:33:48Z", "type": "commit"}, {"oid": "bdddc2cf16d6d853a35789b47cf764d9aec1c518", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bdddc2cf16d6d853a35789b47cf764d9aec1c518", "message": "Merge remote-tracking branch 'upstream/feature/ppl' into parser\n\n# Conflicts:\n#\tppl/src/main/antlr/OpenDistroPPLParser.g4\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/node/AbstractNodeVisitor.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstBuilder.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/dsl/DSL.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/Aggregation.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/Filter.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/Project.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/Relation.java\n#\tppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/plans/logical/UnresolvedPlan.java\n#\tppl/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstBuilderTest.java\n#\tppl/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilderTest.java", "committedDate": "2020-04-23T21:42:35Z", "type": "commit"}, {"oid": "09db3e57e9833bce2d2b64d46d45f7b53e13b7ad", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/09db3e57e9833bce2d2b64d46d45f7b53e13b7ad", "message": "fac", "committedDate": "2020-04-23T22:20:47Z", "type": "commit"}, {"oid": "370c83d6de4c7f2b6e94f0d088db4a6f91cd5dec", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/370c83d6de4c7f2b6e94f0d088db4a6f91cd5dec", "message": "resolved conflicts & merged d4147a981ea0ef364c247fd4da92487dfe629ea1", "committedDate": "2020-04-24T02:02:13Z", "type": "commit"}, {"oid": "5698a1b37a4ba9b57ef42597a59a36d39adef640", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5698a1b37a4ba9b57ef42597a59a36d39adef640", "message": "Added argument factory; refracted in tests", "committedDate": "2020-04-24T22:14:55Z", "type": "commit"}, {"oid": "d309aac122fcafe5efe2223f92deb2d10643a589", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d309aac122fcafe5efe2223f92deb2d10643a589", "message": "Added sparkline aggregation", "committedDate": "2020-04-27T18:28:03Z", "type": "commit"}, {"oid": "bfbb3f979612d6d0045a8442a9b1bb75facdd038", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bfbb3f979612d6d0045a8442a9b1bb75facdd038", "message": "update", "committedDate": "2020-04-27T23:08:05Z", "type": "commit"}, {"oid": "08ae59f0c7fe006e73ea37593c96ab6ec2f17fc6", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/08ae59f0c7fe006e73ea37593c96ab6ec2f17fc6", "message": "improved parser and argument factory test coverage", "committedDate": "2020-04-28T20:40:10Z", "type": "commit"}, {"oid": "2c3df826d42de99bd01aae8477f0c72ce541a0a3", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2c3df826d42de99bd01aae8477f0c72ce541a0a3", "message": "improved parser and argument factory test coverage", "committedDate": "2020-04-28T21:47:14Z", "type": "commit"}, {"oid": "4241f5f1182baa6a04aaaf65d70217c7b2721a52", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4241f5f1182baa6a04aaaf65d70217c7b2721a52", "message": "Added java doc for ArgumentFactory class", "committedDate": "2020-04-28T21:53:28Z", "type": "commit"}, {"oid": "de40c88eafe22fadaa5d3495d947719f0ff3419b", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/de40c88eafe22fadaa5d3495d947719f0ff3419b", "message": "Added field with optional arguments; added tests", "committedDate": "2020-04-29T01:33:22Z", "type": "commit"}, {"oid": "11ebadbbe2c0d3a68a66fd104817f810162e426e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/11ebadbbe2c0d3a68a66fd104817f810162e426e", "message": "Added qualifiedname node as nested field", "committedDate": "2020-04-29T23:25:28Z", "type": "commit"}, {"oid": "f3a097ba145303a535f572c4cec6cb678439e90c", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f3a097ba145303a535f572c4cec6cb678439e90c", "message": "Expression -> UnresolvedExpression; DSL -> AstDSL", "committedDate": "2020-05-02T22:29:34Z", "type": "commit"}, {"oid": "72583c62c5db4322cde5bd8dc3390eb02734a577", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/72583c62c5db4322cde5bd8dc3390eb02734a577", "message": "Updated copyright 2019 -> 2020", "committedDate": "2020-05-02T22:58:38Z", "type": "commit"}, {"oid": "c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "message": "Replaced getMethod in Relation with string return type", "committedDate": "2020-05-03T00:34:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4OTcwMA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r417489700", "bodyText": "could be this(funcName, field, emptyList());?", "author": "dai-chen", "createdAt": "2020-04-29T17:32:16Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/expression/AggregateFunction.java", "diffHunk": "@@ -34,6 +34,13 @@\n public class AggregateFunction extends Expression {\n     private final String funcName;\n     private final Expression field;\n+    private final List<Expression> argList;\n+\n+    public AggregateFunction(String funcName, Expression field) {\n+        this.funcName = funcName;\n+        this.field = field;\n+        this.argList = null;", "originalCommit": "de40c88eafe22fadaa5d3495d947719f0ff3419b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY2MTYxMg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419661612", "bodyText": "Yes", "author": "chloe-zh", "createdAt": "2020-05-04T19:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4OTcwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5MzYxNQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r417493615", "bodyText": "Should we add assertion in callback methods?", "author": "dai-chen", "createdAt": "2020-04-29T17:38:46Z", "path": "ppl/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/PPLServiceTest.java", "diffHunk": "@@ -15,19 +15,33 @@\n \n package com.amazon.opendistroforelasticsearch.sql.ppl;\n \n-import com.amazon.opendistroforelasticsearch.sql.ppl.antlr.PPLSyntaxParser;\n import com.amazon.opendistroforelasticsearch.sql.ppl.config.PPLServiceConfig;\n import com.amazon.opendistroforelasticsearch.sql.ppl.domain.PPLQueryRequest;\n import com.amazon.opendistroforelasticsearch.sql.ppl.domain.PPLQueryResponse;\n import org.junit.Test;\n import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n \n public class PPLServiceTest {\n+    private AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n+            PPLServiceConfig.class);\n+    private PPLService pplService = context.getBean(PPLService.class);\n     @Test\n     public void testExecuteShouldPass() {\n-        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(\n-                PPLServiceConfig.class);\n-        PPLService pplService = context.getBean(PPLService.class);\n+        pplService.execute(new PPLQueryRequest(\"search source=t a=1\", null), new ResponseListener<PPLQueryResponse>() {\n+            @Override\n+            public void onResponse(PPLQueryResponse pplQueryResponse) {\n+\n+            }\n+\n+            @Override\n+            public void onFailure(Exception e) {\n+\n+            }", "originalCommit": "de40c88eafe22fadaa5d3495d947719f0ff3419b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NzE3OQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r421677179", "bodyText": "Yes sounds good, done! Could you take a look if the assertion I added is proper? Thanks!", "author": "chloe-zh", "createdAt": "2020-05-07T17:37:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5MzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4NTMyMw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r421685323", "bodyText": "Approved. Thanks for addressing all the comments!", "author": "dai-chen", "createdAt": "2020-05-07T17:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5MzYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MDg5OQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419570899", "bodyText": "return attrList?", "author": "dai-chen", "createdAt": "2020-05-04T16:38:41Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/expression/AttributeList.java", "diffHunk": "@@ -29,12 +29,12 @@\n @ToString\n @EqualsAndHashCode(callSuper = false)\n @AllArgsConstructor\n-public class AttributeList extends Expression {\n+public class AttributeList extends UnresolvedExpression {\n     @Getter\n-    private List<Expression> attrList;\n+    private List<UnresolvedExpression> attrList;\n \n     @Override\n-    public List<Expression> getChild() {\n+    public List<UnresolvedExpression> getChild() {\n         return ImmutableList.of();", "originalCommit": "c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MTg4Mg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419571882", "bodyText": "return fieldArgs?", "author": "dai-chen", "createdAt": "2020-05-04T16:40:18Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/expression/Field.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.ast.expression;\n+\n+import com.amazon.opendistroforelasticsearch.sql.ast.AbstractNodeVisitor;\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.ToString;\n+\n+@Getter\n+@ToString\n+@EqualsAndHashCode(callSuper = false)\n+@AllArgsConstructor\n+public class Field extends UnresolvedExpression {\n+    private QualifiedName field;\n+    private List<UnresolvedExpression> fieldArgs;\n+\n+    public Field(QualifiedName field) {\n+        this.field = field;\n+        this.fieldArgs = null;\n+    }\n+\n+    public Field(String field) {\n+        this.field = new QualifiedName(field);\n+    }\n+\n+    public Field(String field, List<UnresolvedExpression> fieldArgs) {\n+        this.field = new QualifiedName(field);\n+        this.fieldArgs = fieldArgs;\n+    }\n+\n+    @Override\n+    public List<UnresolvedExpression> getChild() {\n+        return ImmutableList.of();", "originalCommit": "c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MzQxNQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419573415", "bodyText": "Please make them final if not optional and prefer emptyList over null.", "author": "dai-chen", "createdAt": "2020-05-04T16:42:42Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/expression/Field.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.ast.expression;\n+\n+import com.amazon.opendistroforelasticsearch.sql.ast.AbstractNodeVisitor;\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.ToString;\n+\n+@Getter\n+@ToString\n+@EqualsAndHashCode(callSuper = false)\n+@AllArgsConstructor\n+public class Field extends UnresolvedExpression {\n+    private QualifiedName field;\n+    private List<UnresolvedExpression> fieldArgs;", "originalCommit": "c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3ODUzNQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419678535", "bodyText": "Ok, I've changed the optional to emptyList, thanks!", "author": "chloe-zh", "createdAt": "2020-05-04T19:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MzQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MTE2Ng==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419641166", "bodyText": "Use util methods in AstDSL?", "author": "dai-chen", "createdAt": "2020-05-04T18:31:12Z", "path": "ppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java", "diffHunk": "@@ -102,40 +103,53 @@ public Expression visitInExpr(InExprContext ctx) {\n                         .collect(Collectors.toList()));\n     }\n \n-    /** Boolean expression */\n+    /** Field expression */\n     @Override\n-    public Expression visitBooleanExpression(BooleanExpressionContext ctx) {\n-        return new Literal(ctx.booleanLiteral().getText(), DataType.BOOLEAN);\n+    public UnresolvedExpression visitFieldExpression(FieldExpressionContext ctx) {\n+        return new Field((QualifiedName) visit(ctx.qualifiedName()));\n     }\n \n-\n-    /** Field expression */\n     @Override\n-    public Expression visitFieldExpression(FieldExpressionContext ctx) {\n-        return new UnresolvedAttribute(ctx.getText());\n+    public UnresolvedExpression visitWcFieldExpression(WcFieldExpressionContext ctx) {\n+        return new Field((QualifiedName) visit(ctx.wcQualifiedName()));\n     }\n \n     @Override\n-    public Expression visitWcFieldExpression(WcFieldExpressionContext ctx) {\n-        return new UnresolvedAttribute(ctx.getText());\n+    public UnresolvedExpression visitSortField(SortFieldContext ctx) {\n+        return new Field(\n+                ctx.sortFieldExpression().fieldExpression().getText(),\n+                Arrays.asList(\n+                        ctx.MINUS() != null\n+                                ? new Argument(\"exclude\", new Literal(true, DataType.BOOLEAN))\n+                                : new Argument(\"exclude\", new Literal(false, DataType.BOOLEAN)),\n+                        ctx.sortFieldExpression().AUTO() != null\n+                                ? new Argument(\"type\", new Literal(\"auto\", DataType.STRING))\n+                                : ctx.sortFieldExpression().IP() != null\n+                                ? new Argument(\"type\", new Literal(\"ip\", DataType.STRING))\n+                                : ctx.sortFieldExpression().NUM() != null\n+                                ? new Argument(\"type\", new Literal(\"num\", DataType.STRING))\n+                                : ctx.sortFieldExpression().STR() != null\n+                                ? new Argument(\"type\", new Literal(\"str\", DataType.STRING))\n+                                : new Argument(\"type\", new Literal(null, DataType.NULL))", "originalCommit": "c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NzE4Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419677187", "bodyText": "Added into ArgumentFactory class", "author": "chloe-zh", "createdAt": "2020-05-04T19:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MTE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MzkyOA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419643928", "bodyText": "Could tableName be only QualifiedName? Or it could some other UnresolvedExpression in some case?", "author": "dai-chen", "createdAt": "2020-05-04T18:36:01Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/tree/Relation.java", "diffHunk": "@@ -16,22 +16,25 @@\n package com.amazon.opendistroforelasticsearch.sql.ast.tree;\n \n import com.amazon.opendistroforelasticsearch.sql.ast.AbstractNodeVisitor;\n+import com.amazon.opendistroforelasticsearch.sql.ast.expression.UnresolvedExpression;\n import com.google.common.collect.ImmutableList;\n import java.util.List;\n import lombok.EqualsAndHashCode;\n-import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.ToString;\n \n /**\n  * Logical plan node of Relation, the interface for building the searching sources\n  */\n-@Getter\n @ToString\n @EqualsAndHashCode(callSuper = false)\n @RequiredArgsConstructor\n public class Relation extends UnresolvedPlan {\n-    private final String tableName;\n+    private final UnresolvedExpression tableName;", "originalCommit": "c3c1445258c9cff3684f5bd57dc0dd3e6634fde1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NzM2Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/440#discussion_r419677367", "bodyText": "It should always be QualifiedName", "author": "chloe-zh", "createdAt": "2020-05-04T19:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0MzkyOA=="}], "type": "inlineReview"}, {"oid": "d2c13caafa700ec4c6e88b79673adb55b966424b", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d2c13caafa700ec4c6e88b79673adb55b966424b", "message": "Addressed comments", "committedDate": "2020-05-04T19:33:45Z", "type": "commit"}, {"oid": "d9ddd4cdec1c413bb26371d6426ffa8408e0e04f", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d9ddd4cdec1c413bb26371d6426ffa8408e0e04f", "message": "Added assert in ppl service test", "committedDate": "2020-05-07T17:34:01Z", "type": "commit"}]}