{"pr_number": 573, "pr_title": "Support SELECT * and FROM clause in new SQL parser", "pr_createdAt": "2020-07-13T22:41:41Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/573", "timeline": [{"oid": "aef681b01ad1ac0f709924b5c3447d9a8afd98ad", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/aef681b01ad1ac0f709924b5c3447d9a8afd98ad", "message": "Support from", "committedDate": "2020-07-07T17:56:24Z", "type": "commit"}, {"oid": "bbb8caa8e674bb7794f6aff338364f117eb8434b", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bbb8caa8e674bb7794f6aff338364f117eb8434b", "message": "Add more UT", "committedDate": "2020-07-07T18:40:57Z", "type": "commit"}, {"oid": "6848f9712bbc8dadaa2d42a006a1d7de6b1cdede", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6848f9712bbc8dadaa2d42a006a1d7de6b1cdede", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-08T21:59:29Z", "type": "commit"}, {"oid": "2d89a3553f4ef4333cda8973119c1846b0136790", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2d89a3553f4ef4333cda8973119c1846b0136790", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-08T22:11:12Z", "type": "commit"}, {"oid": "bde1b51198388911e7f8a07a687f74bd711315ee", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bde1b51198388911e7f8a07a687f74bd711315ee", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-10T20:57:57Z", "type": "commit"}, {"oid": "92fe877d2e5244b29343468ac913a199d6b863e0", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/92fe877d2e5244b29343468ac913a199d6b863e0", "message": "Update doc", "committedDate": "2020-07-13T16:14:12Z", "type": "commit"}, {"oid": "7dc8a0e8806299f635370b7bc6f8f8a214181032", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7dc8a0e8806299f635370b7bc6f8f8a214181032", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-13T16:17:59Z", "type": "commit"}, {"oid": "683d53bab9fee01afde16f18b1dc279a9869636e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/683d53bab9fee01afde16f18b1dc279a9869636e", "message": "Update doc", "committedDate": "2020-07-13T18:41:44Z", "type": "commit"}, {"oid": "9fffdd0599f163585fae2b6e02f41889cde312f4", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9fffdd0599f163585fae2b6e02f41889cde312f4", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-13T18:49:30Z", "type": "commit"}, {"oid": "ae3d756b89c944a0b2a4a9e16d84ec83bccba812", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ae3d756b89c944a0b2a4a9e16d84ec83bccba812", "message": "Add doctest", "committedDate": "2020-07-13T20:23:40Z", "type": "commit"}, {"oid": "a17651fcbd19b84e785c7b63e393356b24cb23bb", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a17651fcbd19b84e785c7b63e393356b24cb23bb", "message": "Add IT", "committedDate": "2020-07-13T22:17:32Z", "type": "commit"}, {"oid": "af1422f9fa73e5ece00d9932e195b19991786a70", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/af1422f9fa73e5ece00d9932e195b19991786a70", "message": "Change doc and grammar for ANSI SQL", "committedDate": "2020-07-15T00:43:55Z", "type": "commit"}, {"oid": "f32dcb9f4b483ed0b8772d0d9da6c3394454621d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f32dcb9f4b483ed0b8772d0d9da6c3394454621d", "message": "Change doc and grammar", "committedDate": "2020-07-15T18:43:03Z", "type": "commit"}, {"oid": "3f98057f2266a5e0d52580c60d6f30f63e4e6314", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3f98057f2266a5e0d52580c60d6f30f63e4e6314", "message": "Split grammar file", "committedDate": "2020-07-15T18:54:26Z", "type": "commit"}, {"oid": "54d772288d6c94f28358e8a2f727155966953db7", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/54d772288d6c94f28358e8a2f727155966953db7", "message": "Prepare PR", "committedDate": "2020-07-15T22:52:03Z", "type": "commit"}, {"oid": "b6bb2895520c35ad810bbbe6a4f39f6afdd68efa", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b6bb2895520c35ad810bbbe6a4f39f6afdd68efa", "message": "Prepare PR", "committedDate": "2020-07-15T23:15:24Z", "type": "commit"}, {"oid": "8b2d2129898464d567d55f84a8a85d1568d34f44", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8b2d2129898464d567d55f84a8a85d1568d34f44", "message": "Run IT with/without new engine", "committedDate": "2020-07-16T17:50:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyODM0OA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/573#discussion_r456128348", "bodyText": "could you add test with single quota identifier, e.g. SELECT * FROM 'hello+world'", "author": "penghuo", "createdAt": "2020-07-16T23:12:23Z", "path": "sql/src/test/java/com/amazon/opendistroforelasticsearch/sql/sql/antlr/SQLSyntaxParserTest.java", "diffHunk": "@@ -29,13 +28,36 @@\n \n   @Test\n   public void canParseSelectLiterals() {\n-    ParseTree parseTree = parser.parse(\"SELECT 123, 'hello'\");\n-    assertNotNull(parseTree);\n+    assertNotNull(parser.parse(\"SELECT 123, 'hello'\"));\n+  }\n+\n+  @Test\n+  public void canParseIndexNameWithDate() {\n+    assertNotNull(parser.parse(\"SELECT * FROM logs_2020_01\"));\n+    assertNotNull(parser.parse(\"SELECT * FROM logs-2020-01\"));\n+  }\n+\n+  @Test\n+  public void canParseHiddenIndexName() {\n+    assertNotNull(parser.parse(\"SELECT * FROM .kibana\"));\n+  }\n+\n+  @Test\n+  public void canNotParseIndexNameWithSpecialChar() {\n+    assertThrows(SyntaxCheckException.class,\n+        () -> parser.parse(\"SELECT * FROM hello+world\"));\n+  }\n+\n+  @Test\n+  public void canParseIndexNameWithSpecialCharQuoted() {\n+    assertNotNull(parser.parse(\"SELECT * FROM `hello+world`\"));\n+    assertNotNull(parser.parse(\"SELECT * FROM \\\"hello$world\\\"\"));", "originalCommit": "b6bb2895520c35ad810bbbe6a4f39f6afdd68efa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzODk0Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/573#discussion_r457538947", "bodyText": "I missed this. Will add test case and change grammar. Thanks!", "author": "dai-chen", "createdAt": "2020-07-20T16:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyODM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyODU3MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/573#discussion_r456128571", "bodyText": "what is the difference between back ticks and double quotation?", "author": "penghuo", "createdAt": "2020-07-16T23:13:08Z", "path": "docs/user/general/identifiers.rst", "diffHunk": "@@ -0,0 +1,108 @@\n+===========\n+Identifiers\n+===========\n+\n+.. rubric:: Table of contents\n+\n+.. contents::\n+   :local:\n+   :depth: 2\n+\n+\n+Introduction\n+============\n+\n+Identifiers are used for naming your database objects, such as index name, field name etc. Basically there are two types of identifiers: regular identifiers and delimited identifiers.\n+\n+\n+Regular Identifiers\n+===================\n+\n+Description\n+-----------\n+\n+According to ANSI SQL standard, a regular identifier can start with ASCII letter (lower or upper case) or digit. The subsequent character can consist of letter, digit, underscore (``_``). It cannot be a reversed key word. And whitespace and other special characters are not allowed. In our SQL parser, we make extension to the rule for Elasticsearch storage as shown in next sub-section.\n+\n+Extensions\n+----------\n+\n+Additionally for Elasticsearch, the following identifiers are supported extensionally by our SQL parser for convenience (without the need of being delimited as shown in next section):\n+\n+1. Identifiers prefixed by dot ``.``: this is called hidden index in Elasticsearch, for example ``.kibana``.\n+2. Identifiers prefixed by at sign ``@``: this is common for meta fields generated in Logstash ingestion.\n+3. Identifiers with ``-`` in the middle: this is mostly the case for index name with date information.\n+4. Identifiers with star ``*`` present: this is mostly an index pattern for wildcard match.\n+\n+Examples\n+--------\n+\n+Here are examples for using index pattern directly without quotes::\n+\n+    od> SELECT * FROM *cc*nt*;\n+    fetched rows / total rows = 4/4\n+    +------------------+-------------+----------------------+-----------+----------+--------+------------+---------+-------+-----------------------+------------+\n+    | account_number   | firstname   | address              | balance   | gender   | city   | employer   | state   | age   | email                 | lastname   |\n+    |------------------+-------------+----------------------+-----------+----------+--------+------------+---------+-------+-----------------------+------------|\n+    | 1                | Amber       | 880 Holmes Lane      | 39225     | M        | Brogan | Pyrami     | IL      | 32    | amberduke@pyrami.com  | Duke       |\n+    | 6                | Hattie      | 671 Bristol Street   | 5686      | M        | Dante  | Netagy     | TN      | 36    | hattiebond@netagy.com | Bond       |\n+    | 13               | Nanette     | 789 Madison Street   | 32838     | F        | Nogal  | Quility    | VA      | 28    | null                  | Bates      |\n+    | 18               | Dale        | 467 Hutchinson Court | 4180      | M        | Orick  | null       | MD      | 33    | daleadams@boink.com   | Adams      |\n+    +------------------+-------------+----------------------+-----------+----------+--------+------------+---------+-------+-----------------------+------------+\n+\n+\n+Delimited Identifiers\n+=====================\n+\n+Description\n+-----------\n+\n+A delimited identifier is an identifier enclosed in back ticks ````` or double quotation marks ``\"``. In this case, the identifier enclosed is not necessarily a regular identifier. In other words, it can contain any special character not allowed by regular identifier.\n+\n+Please note the difference between single quote and double quotes in SQL syntax. The former is used to enclose a string literal while the latter is for escaping special characters in an identifier.", "originalCommit": "b6bb2895520c35ad810bbbe6a4f39f6afdd68efa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMjg0Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/573#discussion_r457632847", "bodyText": "Sure, make it clear now. Thanks.", "author": "dai-chen", "createdAt": "2020-07-20T19:12:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyODU3MQ=="}], "type": "inlineReview"}, {"oid": "85c4b051b8751b62f6cda20e5fb021910cb2db55", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/85c4b051b8751b62f6cda20e5fb021910cb2db55", "message": "Address PR comments", "committedDate": "2020-07-20T18:44:45Z", "type": "commit"}, {"oid": "fe867f42f291f818e0313c4b9e034c74bc044ea5", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/fe867f42f291f818e0313c4b9e034c74bc044ea5", "message": "Address PR comments", "committedDate": "2020-07-20T19:07:06Z", "type": "commit"}, {"oid": "e18ee9c91bce002b7139764ddbf12783dc9d7f94", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e18ee9c91bce002b7139764ddbf12783dc9d7f94", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-20T19:23:17Z", "type": "commit"}, {"oid": "6a33e69ce239cd12d6b61fb1611efaf31913a8a2", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6a33e69ce239cd12d6b61fb1611efaf31913a8a2", "message": "Merge branch 'develop' into support-select-all-from", "committedDate": "2020-07-21T17:43:09Z", "type": "commit"}]}