{"pr_number": 493, "pr_title": "[PPL] Support Count aggregator and OR operator", "pr_createdAt": "2020-05-27T01:11:16Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493", "timeline": [{"oid": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28", "message": "[PPL] Support Count aggregator and OR operator", "committedDate": "2020-05-27T01:09:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MTY0MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431271641", "bodyText": "Is this meant for JavaDoc on CountAggregator ?", "author": "dai-chen", "createdAt": "2020-05-27T16:18:43Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AvgAggregator.java", "diffHunk": "@@ -29,7 +29,7 @@\n import static com.amazon.opendistroforelasticsearch.sql.utils.ExpressionUtils.format;\n \n /**\n- * The average aggregator aggregate the value evaluated by the expression.\n+ * The count aggregator aggregate the value evaluated by the expression.", "originalCommit": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNDk3OQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431434979", "bodyText": "done.", "author": "penghuo", "createdAt": "2020-05-27T20:52:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MTY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5NDYyNg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431294626", "bodyText": "Np: since the only difference is input type, this can be simplified into a for loop on input type array.", "author": "dai-chen", "createdAt": "2020-05-27T16:52:31Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AggregatorFunction.java", "diffHunk": "@@ -54,6 +55,31 @@ private static FunctionResolver avg() {\n         );\n     }\n \n+    private static FunctionResolver count() {\n+        FunctionName functionName = BuiltinFunctionName.COUNT.getName();\n+        return new FunctionResolver(\n+            functionName,\n+            new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+                .put(new FunctionSignature(functionName, Collections.singletonList(ExprType.INTEGER)),", "originalCommit": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNTQ1Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431435457", "bodyText": "totally agree, let's fix the bug firstly, then think how we could better define built in funciton.", "author": "penghuo", "createdAt": "2020-05-27T20:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0MDgxNQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r432040815", "bodyText": "Sounds good!", "author": "dai-chen", "createdAt": "2020-05-28T18:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5NDYyNg=="}], "type": "inlineReview"}, {"oid": "5dd2845ca29352a40cf43287640ba27bc7c4a6de", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5dd2845ca29352a40cf43287640ba27bc7c4a6de", "message": "address comments", "committedDate": "2020-05-27T20:51:57Z", "type": "commit"}]}