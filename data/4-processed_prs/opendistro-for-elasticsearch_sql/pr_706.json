{"pr_number": 706, "pr_title": "Add PPL stats endpoint", "pr_createdAt": "2020-08-24T20:21:24Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/706", "timeline": [{"oid": "1c23ffa0c2653fb217a0ea028d4eb3c41c2162a1", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/1c23ffa0c2653fb217a0ea028d4eb3c41c2162a1", "message": "Add PPL stats endpoint", "committedDate": "2020-08-24T20:18:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5ODc4Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/706#discussion_r475898783", "bodyText": "np: not required by PPL?", "author": "dai-chen", "createdAt": "2020-08-24T21:15:52Z", "path": "plugin/src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/rest/RestPPLStatsAction.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.plugin.rest;\n+\n+import static org.elasticsearch.rest.RestStatus.SERVICE_UNAVAILABLE;\n+\n+import com.amazon.opendistroforelasticsearch.sql.legacy.executor.format.ErrorMessageFactory;\n+import com.amazon.opendistroforelasticsearch.sql.legacy.metrics.Metrics;\n+import com.amazon.opendistroforelasticsearch.sql.legacy.utils.LogUtils;\n+import com.google.common.collect.ImmutableList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.rest.BaseRestHandler;\n+import org.elasticsearch.rest.BytesRestResponse;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestStatus;\n+\n+/**\n+ * PPL Node level status.\n+ */\n+public class RestPPLStatsAction extends BaseRestHandler {\n+\n+  private static final Logger LOG = LogManager.getLogger(RestPPLStatsAction.class);\n+\n+  /**\n+   * API endpoint path.\n+   */\n+  public static final String PPL_STATS_API_ENDPOINT = \"/_opendistro/_ppl/stats\";\n+\n+  public RestPPLStatsAction(Settings settings, RestController restController) {\n+    super();\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return \"ppl_stats_action\";\n+  }\n+\n+  @Override\n+  public List<Route> routes() {\n+    return ImmutableList.of(\n+        new Route(RestRequest.Method.POST, PPL_STATS_API_ENDPOINT),\n+        new Route(RestRequest.Method.GET, PPL_STATS_API_ENDPOINT)\n+    );\n+  }\n+\n+  @Override\n+  protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) {\n+\n+    LogUtils.addRequestId();\n+\n+    try {\n+      return channel -> channel.sendResponse(new BytesRestResponse(RestStatus.OK,\n+          Metrics.getInstance().collectToJSON()));\n+    } catch (Exception e) {\n+      LOG.error(\"Failed during Query PPL STATS Action.\", e);\n+\n+      return channel -> channel.sendResponse(new BytesRestResponse(SERVICE_UNAVAILABLE,\n+          ErrorMessageFactory.createErrorMessage(e, SERVICE_UNAVAILABLE.getStatus()).toString()));\n+    }\n+  }\n+\n+  @Override\n+  protected Set<String> responseParams() {\n+    Set<String> responseParams = new HashSet<>(super.responseParams());\n+    responseParams.addAll(\n+        Arrays.asList(\"sql\", \"flat\", \"separator\", \"_score\", \"_type\", \"_id\", \"newLine\", \"format\"));\n+    return responseParams;\n+  }", "originalCommit": "1c23ffa0c2653fb217a0ea028d4eb3c41c2162a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyNTI2MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/706#discussion_r475925261", "bodyText": "done. removed.", "author": "penghuo", "createdAt": "2020-08-24T22:16:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5ODc4Mw=="}], "type": "inlineReview"}, {"oid": "bb88f3a913705abcc5057891a1a271181a8ed925", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bb88f3a913705abcc5057891a1a271181a8ed925", "message": "update", "committedDate": "2020-08-25T01:28:08Z", "type": "commit"}]}