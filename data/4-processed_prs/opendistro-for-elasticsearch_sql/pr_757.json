{"pr_number": 757, "pr_title": "Support date and time function: week", "pr_createdAt": "2020-09-25T19:38:40Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757", "timeline": [{"oid": "a41aaad711d10112f2dff8048d3f8f3c37a4e7cc", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a41aaad711d10112f2dff8048d3f8f3c37a4e7cc", "message": "add week", "committedDate": "2020-09-19T00:26:08Z", "type": "commit"}, {"oid": "7f571585ad13ef6bd3323b7e4b15da0cfeded263", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7f571585ad13ef6bd3323b7e4b15da0cfeded263", "message": "Merge branch 'develop' of https://github.com/rupal-bq/sql into date-time-function-week\n\n# Conflicts:\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/DSL.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/function/BuiltinFunctionName.java\n#\tcore/src/test/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunctionTest.java", "committedDate": "2020-09-24T19:05:38Z", "type": "commit"}, {"oid": "498bdf02f7a3d7f19ead93befb3cdf5362a26f20", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/498bdf02f7a3d7f19ead93befb3cdf5362a26f20", "message": "edge case", "committedDate": "2020-09-24T20:32:36Z", "type": "commit"}, {"oid": "365b0002b7a650105ffd100bf0b4b15790e2a50a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/365b0002b7a650105ffd100bf0b4b15790e2a50a", "message": "fix case 5 & 7", "committedDate": "2020-09-24T23:48:27Z", "type": "commit"}, {"oid": "7840b12a2a270000e38c6b16a1b9d2ed1ff32c4e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7840b12a2a270000e38c6b16a1b9d2ed1ff32c4e", "message": "Merge branch 'develop' of https://github.com/rupal-bq/sql into date-time-function-week", "committedDate": "2020-09-24T23:49:42Z", "type": "commit"}, {"oid": "081400436bed733e567d55bb7ad9a371f9569eea", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/081400436bed733e567d55bb7ad9a371f9569eea", "message": "add IT", "committedDate": "2020-09-25T17:39:27Z", "type": "commit"}, {"oid": "8567662fdd89ff44c376503685fbf4ffd6b368b6", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8567662fdd89ff44c376503685fbf4ffd6b368b6", "message": "update doc", "committedDate": "2020-09-25T18:23:05Z", "type": "commit"}, {"oid": "9d51b9c5ebc7461aea3358d04d4417a12b469d37", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9d51b9c5ebc7461aea3358d04d4417a12b469d37", "message": "fix table", "committedDate": "2020-09-25T18:25:16Z", "type": "commit"}, {"oid": "c869ff0e392bedea510c1a38d6d044fe727902f8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c869ff0e392bedea510c1a38d6d044fe727902f8", "message": "rename", "committedDate": "2020-09-25T18:28:45Z", "type": "commit"}, {"oid": "6d19513d22c3fd35840e4f20c73707b6f2c40b95", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6d19513d22c3fd35840e4f20c73707b6f2c40b95", "message": "add string type", "committedDate": "2020-09-25T19:26:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxMjM1MA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r495212350", "bodyText": "Nit: Add newline", "author": "lyndonb-bq", "createdAt": "2020-09-25T20:20:42Z", "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/DateTimeFunctionIT.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.ppl;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.legacy.TestsConstants.TEST_INDEX_DATE;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.rows;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.schema;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.verifySchema;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.verifySome;\n+\n+import java.io.IOException;\n+import org.json.JSONObject;\n+import org.junit.jupiter.api.Test;\n+\n+public class DateTimeFunctionIT extends PPLIntegTestCase {\n+\n+  @Override\n+  public void init() throws IOException {\n+    loadIndex(Index.DATE);\n+  }\n+\n+  private void week(String date, int mode, int expectedResult) throws IOException {\n+    JSONObject result = executeQuery(String.format(\n+        \"source=%s | eval f = week(date('%s'), %d) | fields f\", TEST_INDEX_DATE, date, mode));\n+    verifySchema(result, schema(\"f\", null, \"integer\"));\n+    verifySome(result.getJSONArray(\"datarows\"), rows(expectedResult));\n+  }\n+\n+  @Test\n+  public void testWeek() throws IOException {\n+    JSONObject result = executeQuery(String.format(\n+        \"source=%s | eval f = week(date('2008-02-20')) | fields f\", TEST_INDEX_DATE));\n+    verifySchema(result, schema(\"f\", null, \"integer\"));\n+    verifySome(result.getJSONArray(\"datarows\"), rows(7));\n+\n+    week(\"2008-02-20\", 0, 7);\n+    week(\"2008-02-20\", 1, 8);\n+    week(\"2008-12-31\", 1, 53);\n+    week(\"2000-01-01\", 0, 0);\n+    week(\"2000-01-01\", 2, 52);\n+  }\n+}", "originalCommit": "6d19513d22c3fd35840e4f20c73707b6f2c40b95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxNDc1NA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r495214754", "bodyText": "done", "author": "rupal-bq", "createdAt": "2020-09-25T20:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxMjM1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxMjM3NQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r495212375", "bodyText": "Nit: Add newline", "author": "lyndonb-bq", "createdAt": "2020-09-25T20:20:45Z", "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/sql/DateTimeFunctionIT.java", "diffHunk": "@@ -64,4 +84,4 @@ protected JSONObject executeQuery(String query) throws IOException {\n     Response response = client().performRequest(request);\n     return new JSONObject(getResponseBody(response));\n   }\n-}\n+}", "originalCommit": "6d19513d22c3fd35840e4f20c73707b6f2c40b95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxNDc5Mg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r495214792", "bodyText": "done", "author": "rupal-bq", "createdAt": "2020-09-25T20:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIxMjM3NQ=="}], "type": "inlineReview"}, {"oid": "5ab8631a8721bc9d5ef6922319ce220ce14a90f6", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5ab8631a8721bc9d5ef6922319ce220ce14a90f6", "message": "nit: add newline", "committedDate": "2020-09-25T20:25:57Z", "type": "commit"}, {"oid": "ce4473b47fc28e7a17de4aeb0f041b1c4751f4cf", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ce4473b47fc28e7a17de4aeb0f041b1c4751f4cf", "message": "fix type in comment", "committedDate": "2020-09-25T20:28:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4MjE1OA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r496082158", "bodyText": "Sorry for the late nit comment, but this should be CalendarLookup", "author": "lyndonb-bq", "createdAt": "2020-09-28T16:30:22Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/CalenderLookup.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.datetime;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.exception.SemanticCheckException;\n+import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class CalenderLookup {", "originalCommit": "ce4473b47fc28e7a17de4aeb0f041b1c4751f4cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwMDU1MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r496100551", "bodyText": "Thanks for noticing. I fixed it.", "author": "rupal-bq", "createdAt": "2020-09-28T17:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4MjE1OA=="}], "type": "inlineReview"}, {"oid": "6dc155c2a54fc681ee317fc02a245f5bca79c2aa", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6dc155c2a54fc681ee317fc02a245f5bca79c2aa", "message": "nit", "committedDate": "2020-09-28T16:58:16Z", "type": "commit"}, {"oid": "126890ba4ed2519cc5062849dee76cb3c87f5bb7", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/126890ba4ed2519cc5062849dee76cb3c87f5bb7", "message": "Merge branch 'develop' of https://github.com/rupal-bq/sql into date-time-function-week\n\n# Conflicts:\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprStringValue.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/DSL.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/function/BuiltinFunctionName.java\n#\tdocs/user/dql/functions.rst\n#\tinteg-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/DateTimeFunctionIT.java\n#\tppl/src/main/antlr/OpenDistroPPLParser.g4\n#\tsql/src/main/antlr/OpenDistroSQLParser.g4", "committedDate": "2020-09-29T18:36:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5MjE5MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r496992191", "bodyText": "could you also add the cases with null and missing values of datetime, timestamp, string; and the case where the integer arg of the double arguments is null or missing", "author": "chloe-zh", "createdAt": "2020-09-29T19:30:45Z", "path": "core/src/test/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunctionTest.java", "diffHunk": "@@ -726,6 +728,83 @@ public void timestamp() {\n     assertEquals(\"timestamp(TIMESTAMP '2020-08-17 01:01:01')\", expr.toString());\n   }\n \n+  private void testWeek(String date, int mode, int expectedResult) {\n+    FunctionExpression expression = dsl\n+        .week(DSL.literal(new ExprDateValue(date)), DSL.literal(mode));\n+    assertEquals(INTEGER, expression.type());\n+    assertEquals(String.format(\"week(DATE '%s', %d)\", date, mode), expression.toString());\n+    assertEquals(integerValue(expectedResult), eval(expression));\n+  }\n+\n+  @Test\n+  public void week() {\n+    when(nullRef.type()).thenReturn(DATE);\n+    when(missingRef.type()).thenReturn(DATE);\n+    assertEquals(nullValue(), eval(dsl.week(nullRef)));\n+    assertEquals(missingValue(), eval(dsl.week(missingRef)));\n+", "originalCommit": "126890ba4ed2519cc5062849dee76cb3c87f5bb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA1MTIwNg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r497051206", "bodyText": "Thanks. I added these cases.", "author": "rupal-bq", "createdAt": "2020-09-29T20:57:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5MjE5MQ=="}], "type": "inlineReview"}, {"oid": "c73e4309ee0594006dea8d1b865a6326cf3d7a96", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c73e4309ee0594006dea8d1b865a6326cf3d7a96", "message": "add unit tests for null, missing values", "committedDate": "2020-09-29T20:19:40Z", "type": "commit"}, {"oid": "4d3eff0bbd256e808be93fecbcf867d19e889944", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4d3eff0bbd256e808be93fecbcf867d19e889944", "message": "nit", "committedDate": "2020-09-29T20:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4OTUzOQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r497789539", "bodyText": "could this function be static to avoid consturct CalendarLookup every time?\ne.g. getWeekNumber(ExprValue date, ExprValue mode)\nthen define getCalendar(int firstDayOfWeek, int minimalDaysInWeek, Supplier dateProvider)", "author": "penghuo", "createdAt": "2020-09-30T20:45:41Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/CalendarLookup.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.datetime;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.exception.SemanticCheckException;\n+import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class CalendarLookup {\n+\n+  private Map<Integer, Calendar> map = new HashMap<>();\n+\n+  /**\n+   * Set Calendar in map for all modes.\n+   * @param date ExprValue of Date/Datetime/Timestamp/String type.\n+   */\n+  public CalendarLookup(ExprValue date) {\n+    map.put(0, getCalendar(Calendar.SUNDAY, 7, date));\n+    map.put(1, getCalendar(Calendar.MONDAY, 5, date));\n+    map.put(2, getCalendar(Calendar.SUNDAY, 7, date));\n+    map.put(3, getCalendar(Calendar.MONDAY, 5, date));\n+    map.put(4, getCalendar(Calendar.SUNDAY, 4, date));\n+    map.put(5, getCalendar(Calendar.MONDAY, 7, date));\n+    map.put(6, getCalendar(Calendar.SUNDAY, 4, date));\n+    map.put(7, getCalendar(Calendar.MONDAY, 7, date));\n+  }\n+\n+  /**\n+   * Set first day of week, minimal days in first week and date in calendar.\n+   * @param firstDayOfWeek the given first day of the week.\n+   * @param minimalDaysInWeek the given minimal days required in the first week of the year.\n+   * @param date the ExprValue of Date/Datetime/Timestamp/String type.\n+   */\n+  private Calendar getCalendar(int firstDayOfWeek, int minimalDaysInWeek, ExprValue date) {\n+    Calendar calendar = Calendar.getInstance();\n+    calendar.setFirstDayOfWeek(firstDayOfWeek);\n+    calendar.setMinimalDaysInFirstWeek(minimalDaysInWeek);\n+    calendar.set(date.dateValue().getYear(), date.dateValue().getMonthValue() - 1,\n+        date.dateValue().getDayOfMonth());\n+    return calendar;\n+  }\n+\n+  /**\n+   * Returns week number for date according to mode.\n+   * @param mode Integer for mode. Valid mode values are 0 to 7.\n+   */\n+  public int getWeekNumber(int mode) {", "originalCommit": "4d3eff0bbd256e808be93fecbcf867d19e889944", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNzU4Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/757#discussion_r497817587", "bodyText": "Thanks for the suggestion. added this change.", "author": "rupal-bq", "createdAt": "2020-09-30T21:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4OTUzOQ=="}], "type": "inlineReview"}, {"oid": "76cd45b3066dddc4bc294dbebc235bdaa865fc8e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/76cd45b3066dddc4bc294dbebc235bdaa865fc8e", "message": "address PR comment", "committedDate": "2020-09-30T21:32:15Z", "type": "commit"}]}