{"pr_number": 393, "pr_title": "Fix failure in IT test with external cluster", "pr_createdAt": "2020-03-24T18:57:13Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/393", "timeline": [{"oid": "2a9c563a496cb23ca424a8b92d52f97b916edc42", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2a9c563a496cb23ca424a8b92d52f97b916edc42", "message": "fix failure in IT test with external cluster", "committedDate": "2020-03-24T18:29:22Z", "type": "commit"}, {"oid": "59e43ac5686abc8cd8a572c111cff65b386878c3", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/59e43ac5686abc8cd8a572c111cff65b386878c3", "message": "Merge pull request #3 from zhongnansu/fixExternal\n\nfix failure in IT test with external cluster", "committedDate": "2020-03-24T18:42:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyNzkwOA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/393#discussion_r397427908", "bodyText": "Would be better if we keep the full error stack by throw new RuntimeException(\"Failed to dump coverage\", ex);", "author": "dai-chen", "createdAt": "2020-03-24T20:05:51Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/SQLIntegTestCase.java", "diffHunk": "@@ -107,23 +106,25 @@ protected boolean preserveClusterUponCompletion() {\n     }\n \n     @AfterClass\n-    public static void dumpCoverage() throws IOException, MalformedObjectNameException {\n+    public static void dumpCoverage() {\n         // jacoco.dir is set in sqlplugin-coverage.gradle, if it doesn't exist we don't\n         // want to collect coverage so we can return early\n         String jacocoBuildPath = System.getProperty(\"jacoco.dir\");\n-        if (jacocoBuildPath.isEmpty()) {\n+        if (jacocoBuildPath == null || jacocoBuildPath.isEmpty()) {\n             return;\n         }\n \n         String serverUrl = \"service:jmx:rmi:///jndi/rmi://127.0.0.1:7777/jmxrmi\";\n-        JMXConnector connector = JMXConnectorFactory.connect(new JMXServiceURL(serverUrl));\n-        IProxy proxy = MBeanServerInvocationHandler.newProxyInstance(\n-                connector.getMBeanServerConnection(), new ObjectName(\"org.jacoco:type=Runtime\"), IProxy.class,\n-                false);\n-\n-        Path path = Paths.get(jacocoBuildPath + \"/integTest.exec\");\n-        Files.write(path, proxy.getExecutionData(false));\n-        connector.close();\n+        try(JMXConnector connector = JMXConnectorFactory.connect(new JMXServiceURL(serverUrl))) {\n+            IProxy proxy = MBeanServerInvocationHandler.newProxyInstance(\n+                    connector.getMBeanServerConnection(), new ObjectName(\"org.jacoco:type=Runtime\"), IProxy.class,\n+                    false);\n+\n+            Path path = Paths.get(jacocoBuildPath + \"/integTest.exec\");\n+            Files.write(path, proxy.getExecutionData(false));\n+        } catch (Exception ex) {\n+            throw new RuntimeException(\"Failed to dump coverage: \" + ex);", "originalCommit": "59e43ac5686abc8cd8a572c111cff65b386878c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQzOTc0NQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/393#discussion_r397439745", "bodyText": "Agreed.", "author": "zhongnansu", "createdAt": "2020-03-24T20:28:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyNzkwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyODI4Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/393#discussion_r397428283", "bodyText": "np: isNullOrEmpty in Strings or StringUtils is cleaner.", "author": "dai-chen", "createdAt": "2020-03-24T20:06:36Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/SQLIntegTestCase.java", "diffHunk": "@@ -107,23 +106,25 @@ protected boolean preserveClusterUponCompletion() {\n     }\n \n     @AfterClass\n-    public static void dumpCoverage() throws IOException, MalformedObjectNameException {\n+    public static void dumpCoverage() {\n         // jacoco.dir is set in sqlplugin-coverage.gradle, if it doesn't exist we don't\n         // want to collect coverage so we can return early\n         String jacocoBuildPath = System.getProperty(\"jacoco.dir\");\n-        if (jacocoBuildPath.isEmpty()) {\n+        if (jacocoBuildPath == null || jacocoBuildPath.isEmpty()) {", "originalCommit": "59e43ac5686abc8cd8a572c111cff65b386878c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQzOTgwNQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/393#discussion_r397439805", "bodyText": "good catch, use Strings.isNullOrEmpty(Guava) instead.", "author": "zhongnansu", "createdAt": "2020-03-24T20:28:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyODI4Mw=="}], "type": "inlineReview"}, {"oid": "b03492594d33bd2d0b55d73119ec9152bf75ba29", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b03492594d33bd2d0b55d73119ec9152bf75ba29", "message": "fix message and clean code", "committedDate": "2020-03-24T20:27:41Z", "type": "commit"}, {"oid": "29a3ffd49f17c24a64802f82f7b06bd37ceccd3e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/29a3ffd49f17c24a64802f82f7b06bd37ceccd3e", "message": "update release doc", "committedDate": "2020-03-24T21:24:23Z", "type": "commit"}]}