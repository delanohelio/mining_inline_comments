{"pr_number": 1589, "pr_title": "Adding extension class to build and push Operator image and more", "pr_createdAt": "2020-04-24T06:04:22Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589", "timeline": [{"oid": "4cde6596b7a4cd53089f1ede09bcfc30e2a817f5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4cde6596b7a4cd53089f1ede09bcfc30e2a817f5", "message": "script to build and push operator image to ocir for jenkins to work", "committedDate": "2020-04-21T05:22:10Z", "type": "commit"}, {"oid": "4d4599ec7290f4b126cb42e4c74bb31fe3b3931a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4d4599ec7290f4b126cb42e4c74bb31fe3b3931a", "message": "Revert \"script to build and push operator image to ocir for jenkins to work\"\n\nThis reverts commit 4cde6596b7a4cd53089f1ede09bcfc30e2a817f5.", "committedDate": "2020-04-21T05:24:07Z", "type": "commit"}, {"oid": "5e1650bb3c281b2ad55f703ac71887eeb8c5431d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5e1650bb3c281b2ad55f703ac71887eeb8c5431d", "message": "script to build and push operator image to ocir for jenkins to work", "committedDate": "2020-04-21T05:27:00Z", "type": "commit"}, {"oid": "04440af825e4f8dd4350dd41585a8beefc83cb2a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/04440af825e4f8dd4350dd41585a8beefc83cb2a", "message": "Add try finally", "committedDate": "2020-04-22T21:03:50Z", "type": "commit"}, {"oid": "cea3fbc485d789b2cdda9e5b744dddbc0882c9fb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cea3fbc485d789b2cdda9e5b744dddbc0882c9fb", "message": "moving constants to a interface", "committedDate": "2020-04-22T23:46:51Z", "type": "commit"}, {"oid": "78586f48be87d13fab1ac7ebe61a224df5b0fe2e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/78586f48be87d13fab1ac7ebe61a224df5b0fe2e", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into fix-new-mii-jenkins", "committedDate": "2020-04-22T23:47:02Z", "type": "commit"}, {"oid": "71c670cbeb5a27970b4995b74b6caf4efb3ca8e0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/71c670cbeb5a27970b4995b74b6caf4efb3ca8e0", "message": "Adding imagebuilder", "committedDate": "2020-04-23T00:18:26Z", "type": "commit"}, {"oid": "e84257dd1938e2d88d3d88d1428842d95d8c0268", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e84257dd1938e2d88d3d88d1428842d95d8c0268", "message": "adding imagebuilder class", "committedDate": "2020-04-23T04:09:08Z", "type": "commit"}, {"oid": "f0d92bb5b66bb22155330d3b9b63678a7a15796b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f0d92bb5b66bb22155330d3b9b63678a7a15796b", "message": "Synchronization for one-time initialization logic", "committedDate": "2020-04-22T20:52:37Z", "type": "commit"}, {"oid": "df0be4949fedc113b07a2c7cfd6ce6606c3b9e33", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/df0be4949fedc113b07a2c7cfd6ce6606c3b9e33", "message": "build and push operator image in extension", "committedDate": "2020-04-23T12:51:39Z", "type": "commit"}, {"oid": "fddc8a1ef90fe86a1d50deb1aa10fef905921963", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fddc8a1ef90fe86a1d50deb1aa10fef905921963", "message": "Resolve conflicts", "committedDate": "2020-04-23T12:58:00Z", "type": "commit"}, {"oid": "f591a02bc95f85276d7cf2b70b47d0a9318928d0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f591a02bc95f85276d7cf2b70b47d0a9318928d0", "message": "adding imagePullSecrets to helm install", "committedDate": "2020-04-24T05:45:18Z", "type": "commit"}, {"oid": "642083951a11173d5f23915a5f3f2b7c25905d36", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/642083951a11173d5f23915a5f3f2b7c25905d36", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into fix-new-mii-jenkins", "committedDate": "2020-04-24T05:47:03Z", "type": "commit"}, {"oid": "95f15f247dee3be11d53266d2c351ecdedad7078", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/95f15f247dee3be11d53266d2c351ecdedad7078", "message": "fix command run", "committedDate": "2020-04-24T05:52:11Z", "type": "commit"}, {"oid": "5a35f497bcb2206d2c0250b8dd08a195a0db4b6b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5a35f497bcb2206d2c0250b8dd08a195a0db4b6b", "message": "use BRANCH env var for JENKINS", "committedDate": "2020-04-24T06:13:37Z", "type": "commit"}, {"oid": "e4941a70713c35c21214606c3728c7f8984370d4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e4941a70713c35c21214606c3728c7f8984370d4", "message": "fix image name for Jenkins", "committedDate": "2020-04-24T06:24:12Z", "type": "commit"}, {"oid": "8c7976ea492408cf94e5f110991d9ab875e310bf", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8c7976ea492408cf94e5f110991d9ab875e310bf", "message": "remove double REPO_NAME", "committedDate": "2020-04-24T09:19:04Z", "type": "commit"}, {"oid": "cc872bcc524ca33e991cec1ec84e0d95792f96c9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cc872bcc524ca33e991cec1ec84e0d95792f96c9", "message": "remove double REPO_NAME", "committedDate": "2020-04-24T09:55:34Z", "type": "commit"}, {"oid": "a7d02dba6c196447db2238999b7aeb6356dd1a12", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a7d02dba6c196447db2238999b7aeb6356dd1a12", "message": "fix domain image name", "committedDate": "2020-04-24T10:22:33Z", "type": "commit"}, {"oid": "f17954c9409ba70105786754df69d5f2882727fc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f17954c9409ba70105786754df69d5f2882727fc", "message": "fix domain image name", "committedDate": "2020-04-24T10:46:54Z", "type": "commit"}, {"oid": "e348b4fe3f18d53bbfa8d4a4ce66736657fcb06e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e348b4fe3f18d53bbfa8d4a4ce66736657fcb06e", "message": "fix domain image name", "committedDate": "2020-04-24T11:07:11Z", "type": "commit"}, {"oid": "9e56146e8a1fce3c0ff4ec37baed67ee448c95b3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9e56146e8a1fce3c0ff4ec37baed67ee448c95b3", "message": "checking operator helm release status", "committedDate": "2020-04-24T12:20:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MzY3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414553678", "bodyText": "please include the namespace in the message too", "author": "markxnelson", "createdAt": "2020-04-24T12:55:12Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -148,6 +146,39 @@ public static void initAll(@Namespaces(2) List<String> namespaces) {\n                 .name(serviceAccountName))));\n     logger.info(\"Created service account: {0}\", serviceAccountName);\n \n+    // get Operator image name\n+    String operatorImage = getOperatorImageName();\n+    assertFalse(operatorImage.isEmpty(), \"Operator image name can not be empty\");\n+    logger.info(\"Operator image name {0}\", operatorImage);\n+\n+    // Create docker registry secret in the operator namespace to pull the image from repository\n+    if (System.getenv(\"REPO_REGISTRY\") != null && System.getenv(\"REPO_USERNAME\") != null\n+        && System.getenv(\"REPO_PASSWORD\") != null && System.getenv(\"REPO_EMAIL\") != null) {\n+      repoRegistry = System.getenv(\"REPO_REGISTRY\");\n+      repoUserName = System.getenv(\"REPO_USERNAME\");\n+      repoPassword = System.getenv(\"REPO_PASSWORD\");\n+      repoEmail = System.getenv(\"REPO_EMAIL\");\n+    }\n+    logger.info(\"Creating docker registry secret in namespace {0}\", opNamespace);\n+    JsonObject dockerConfigJsonObject = createDockerConfigJson(\n+        repoUserName, repoPassword, repoEmail, repoRegistry);\n+    dockerConfigJson = dockerConfigJsonObject.toString();\n+\n+    // Create the V1Secret configuration\n+    V1Secret repoSecret = new V1Secret()\n+        .metadata(new V1ObjectMeta()\n+            .name(repoSecretName)\n+            .namespace(opNamespace))\n+        .type(\"kubernetes.io/dockerconfigjson\")\n+        .putDataItem(\".dockerconfigjson\", dockerConfigJson.getBytes());\n+\n+    boolean secretCreated = assertDoesNotThrow(() -> createSecret(repoSecret),\n+        String.format(\"createSecret failed for %s\", repoSecretName));\n+    assertTrue(secretCreated, String.format(\"createSecret failed while creating secret %s\", repoSecretName));", "originalCommit": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MDA3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414680078", "bodyText": "done", "author": "vanajamukkara", "createdAt": "2020-04-24T15:49:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1MzY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1NDYwMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414554601", "bodyText": "is this all duplicated? maybe refactor it?", "author": "markxnelson", "createdAt": "2020-04-24T12:56:36Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSimpleOperatorValidation.java", "diffHunk": "@@ -86,131 +77,135 @@ public void testInstallingOperator(@Namespaces(3) List<String> namespaces) {\n     domainNamespace2 = namespaces.get(2);\n \n     // Create a service account for the unique opNamespace\n-    final String serviceAccountName = opNamespace + \"-sa\";\n-    serviceAccount = new V1ServiceAccount()\n+    logger.info(\"Creating service account\");\n+    String serviceAccountName = opNamespace + \"-sa\";\n+    assertDoesNotThrow(() -> createServiceAccount(new V1ServiceAccount()\n         .metadata(\n             new V1ObjectMeta()\n                 .namespace(opNamespace)\n-                .name(serviceAccountName));\n-\n-    assertThatCode(\n-        () -> createServiceAccount(serviceAccount))\n-        .as(\"Test that createServiceAccount doesn not throw an exception\")\n-        .withFailMessage(\"createServiceAccount() threw an exception\")\n-        .doesNotThrowAnyException();\n-    logger.info(\"Created service account: \" + serviceAccountName);\n+                .name(serviceAccountName))));\n+    logger.info(\"Created service account: {0}\", serviceAccountName);\n+\n+    String image = getOperatorImageName();\n+    assertFalse(image.isEmpty(), \"Operator image name can not be empty\");\n+    logger.info(\"Operator image name {0}\", image);\n+\n+    // Create docker registry secret in the operator namespace to pull the image from repository\n+    String repoRegistry = \"dummy\";", "originalCommit": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4Mzg2NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414583864", "bodyText": "I'm okay with doing the refactoring in a separate step because I was going to come after and have a third \"strategy\" for kind.", "author": "rjeberhard", "createdAt": "2020-04-24T13:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1NDYwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MDMxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414680310", "bodyText": "I moved to TestConstants.java", "author": "vanajamukkara", "createdAt": "2020-04-24T15:50:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1NDYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1NTc0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414555743", "bodyText": "remove if not needed", "author": "markxnelson", "createdAt": "2020-04-24T12:58:28Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/extensions/ImageBuilders.java", "diffHunk": "@@ -0,0 +1,89 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.extensions;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import oracle.weblogic.kubernetes.actions.impl.Operator;\n+import org.junit.jupiter.api.extension.BeforeAllCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import static oracle.weblogic.kubernetes.actions.TestActions.dockerLogin;\n+import static oracle.weblogic.kubernetes.actions.TestActions.dockerPush;\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.extension.ExtensionContext.Namespace.GLOBAL;\n+\n+//import static org.junit.jupiter.api.Assertions.assertTrue;", "originalCommit": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MDM3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414680376", "bodyText": "done", "author": "vanajamukkara", "createdAt": "2020-04-24T15:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1NTc0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU1NjQ3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414556471", "bodyText": "very nice", "author": "markxnelson", "createdAt": "2020-04-24T12:59:40Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/extensions/ImageBuilders.java", "diffHunk": "@@ -0,0 +1,89 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.extensions;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import oracle.weblogic.kubernetes.actions.impl.Operator;\n+import org.junit.jupiter.api.extension.BeforeAllCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import static oracle.weblogic.kubernetes.actions.TestActions.dockerLogin;\n+import static oracle.weblogic.kubernetes.actions.TestActions.dockerPush;\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.extension.ExtensionContext.Namespace.GLOBAL;\n+\n+//import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Class to build the required images for the tests.\n+ */\n+public class ImageBuilders implements BeforeAllCallback, ExtensionContext.Store.CloseableResource {\n+  private static final AtomicBoolean started = new AtomicBoolean(false);\n+  private static final CountDownLatch initializationLatch = new CountDownLatch(1);\n+\n+  @Override\n+  public void beforeAll(ExtensionContext context) {\n+    /* The pattern is that we have initialization code that we want to run once to completion", "originalCommit": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "662340f7988563e631f4736ebbc3ec41f06c00f7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/662340f7988563e631f4736ebbc3ec41f06c00f7", "message": "workaround for image check", "committedDate": "2020-04-24T13:12:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4MDk1NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414580955", "bodyText": "This is a little weird in that it doesn't take the value of any variable unless all are set.  You could check each value in line like this:\nrepoRegistry = Optional.ofNullable(System.getenv(\"REPO_REGISTRY\")).orElse(\"dummy\");", "author": "rjeberhard", "createdAt": "2020-04-24T13:35:49Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -148,6 +146,39 @@ public static void initAll(@Namespaces(2) List<String> namespaces) {\n                 .name(serviceAccountName))));\n     logger.info(\"Created service account: {0}\", serviceAccountName);\n \n+    // get Operator image name\n+    String operatorImage = getOperatorImageName();\n+    assertFalse(operatorImage.isEmpty(), \"Operator image name can not be empty\");\n+    logger.info(\"Operator image name {0}\", operatorImage);\n+\n+    // Create docker registry secret in the operator namespace to pull the image from repository\n+    if (System.getenv(\"REPO_REGISTRY\") != null && System.getenv(\"REPO_USERNAME\") != null\n+        && System.getenv(\"REPO_PASSWORD\") != null && System.getenv(\"REPO_EMAIL\") != null) {\n+      repoRegistry = System.getenv(\"REPO_REGISTRY\");", "originalCommit": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MDQ3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414680470", "bodyText": "done", "author": "vanajamukkara", "createdAt": "2020-04-24T15:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4MDk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4NDk4Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414584983", "bodyText": "Can you Optional.ofNullable(...).orElse(...) pattern here too.", "author": "rjeberhard", "createdAt": "2020-04-24T13:41:27Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Operator.java", "diffHunk": "@@ -40,4 +52,53 @@ public static boolean uninstall(HelmParams params) {\n   public static boolean scaleDomain(String domainUid, String clusterName, int numOfServers) {\n     return true;\n   }\n+\n+  /**\n+   * Image Name for the Operator. Uses branch name for tag in local runs\n+   * and branch name, build id for tag in Jenkins runs.\n+   * @return image name\n+   */\n+  public static String getImageName() {\n+    String image = \"\";\n+    String imageName = System.getenv(\"IMAGE_NAME_OPERATOR\") != null", "originalCommit": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MDU0OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1589#discussion_r414680548", "bodyText": "done", "author": "vanajamukkara", "createdAt": "2020-04-24T15:50:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4NDk4Mw=="}], "type": "inlineReview"}, {"oid": "7b4a09f765d538795d550c9db956ca49b6f9bc67", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7b4a09f765d538795d550c9db956ca49b6f9bc67", "message": "adding assertions for checking docker image and helm release status", "committedDate": "2020-04-24T13:48:29Z", "type": "commit"}, {"oid": "078291e56782a4d91b80bc548873fdead9d53f09", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/078291e56782a4d91b80bc548873fdead9d53f09", "message": "address review comments", "committedDate": "2020-04-24T23:25:19Z", "type": "commit"}]}