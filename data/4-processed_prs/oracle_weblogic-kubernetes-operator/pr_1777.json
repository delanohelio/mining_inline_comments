{"pr_number": 1777, "pr_title": "Improve test verification", "pr_createdAt": "2020-06-30T15:49:20Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777", "timeline": [{"oid": "dd2413aa5f2d2481ba264cbcacc87a1048401fd6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dd2413aa5f2d2481ba264cbcacc87a1048401fd6", "message": "Improve test verification", "committedDate": "2020-06-29T22:05:14Z", "type": "commit"}, {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8", "message": "Fail application availability check early", "committedDate": "2020-06-30T00:51:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447882519", "bodyText": "This is an odd programming style. Why not use break?", "author": "rjeberhard", "createdAt": "2020-06-30T18:08:49Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1075,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");\n+        failed = true;", "originalCommit": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzE2Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447883163", "bodyText": "Related question... why aren't you using our ordinary retry pattern?", "author": "rjeberhard", "createdAt": "2020-06-30T18:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4OTUyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447889527", "bodyText": "This is an odd programming style. Why not use break?\n\nYes, actually I can just exit the loop with break.", "author": "doxiao", "createdAt": "2020-06-30T18:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5MzExMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447893110", "bodyText": "Related question... why aren't you using our ordinary retry pattern?\n\nDid you mean using ConditionFactory?", "author": "doxiao", "createdAt": "2020-06-30T18:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2NTM3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447965371", "bodyText": "The pattern that we use in the JUnit5 test cases are easier for a simple condition retries. Here we have additional operation to perform. So I did not think that was a better pattern for this.", "author": "doxiao", "createdAt": "2020-06-30T20:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxODc1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447918753", "bodyText": "you already have operator pod name in this method, you can directly call isPodRestarted(podName, namespace, timestamp)?", "author": "vanajamukkara", "createdAt": "2020-06-30T19:10:54Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorRestartWhenPodRoll.java", "diffHunk": "@@ -235,18 +234,14 @@ private void restartOperatorAndVerify() {\n             opNamespace,\n             condition.getElapsedTimeInMS(),\n             condition.getRemainingTimeInMS()))\n-        .until(assertDoesNotThrow(() -> operatorIsReady(opNamespace),\n-          \"operatorIsReady failed with ApiException\"));\n+        .until(assertDoesNotThrow(() -> isOperatorPodRestarted(opNamespace, opPodCreationTime),", "originalCommit": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTkxMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447925912", "bodyText": "I only have the old name, and a restarted operator pod has a different name.", "author": "doxiao", "createdAt": "2020-06-30T19:24:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxODc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjYzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447926634", "bodyText": "isOperatorPodRestarted() does not require the operator pod name because we'll only have one operator in a namespace.", "author": "doxiao", "createdAt": "2020-06-30T19:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxODc1Mw=="}], "type": "inlineReview"}, {"oid": "31ba6083a7474c90f070160d5100d83bc0c5a7e5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/31ba6083a7474c90f070160d5100d83bc0c5a7e5", "message": "Address a review comment", "committedDate": "2020-06-30T19:26:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAzNDA5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r448034098", "bodyText": "What are the \"XXX\" and \"YYY\"? What application is it?", "author": "rjeberhard", "createdAt": "2020-06-30T23:28:45Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1074,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");", "originalCommit": "31ba6083a7474c90f070160d5100d83bc0c5a7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NDA3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r448044074", "bodyText": "Those \"XXX\" and \"YYY\" are tokens to make it easier for people to notice the failure/healthy conditions. The failure case \"XXX\" is INFO, and \"YYY\" is \"FINE\".", "author": "doxiao", "createdAt": "2020-07-01T00:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAzNDA5OA=="}], "type": "inlineReview"}]}