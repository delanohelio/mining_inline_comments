{"pr_number": 1814, "pr_title": "Update the Traefik Version to 2.x ", "pr_createdAt": "2020-07-16T16:38:23Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814", "timeline": [{"oid": "b7eae38b2f5e75326ed2d9e4745b21ccd0e86723", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b7eae38b2f5e75326ed2d9e4745b21ccd0e86723", "message": "Initial check-in for traefik version update", "committedDate": "2020-07-14T04:40:21Z", "type": "commit"}, {"oid": "6a326b45c8ad8a1e4ad7c3c64bf530bcdee4a477", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6a326b45c8ad8a1e4ad7c3c64bf530bcdee4a477", "message": "Modified the doc and sample artifacts files", "committedDate": "2020-07-15T22:19:53Z", "type": "commit"}, {"oid": "d430260835d8f3894b5f17948a41c44fca36d628", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d430260835d8f3894b5f17948a41c44fca36d628", "message": "Merge into develop branch", "committedDate": "2020-07-15T22:26:36Z", "type": "commit"}, {"oid": "5b3530a6b006f2ca0d31248466836e93668df04a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5b3530a6b006f2ca0d31248466836e93668df04a", "message": "Foramt the document", "committedDate": "2020-07-15T23:22:55Z", "type": "commit"}, {"oid": "f0c691f7a0cd9171bf1beccf4a264840996b0d98", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f0c691f7a0cd9171bf1beccf4a264840996b0d98", "message": "More doc changes", "committedDate": "2020-07-16T14:52:52Z", "type": "commit"}, {"oid": "d22e69057041897e97a09c093b74102ea5f1ec35", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d22e69057041897e97a09c093b74102ea5f1ec35", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into traefik-update", "committedDate": "2020-07-16T14:53:07Z", "type": "commit"}, {"oid": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "message": "Renamed setup.sh to setupLoadBalancer.sh to be more specific as per suggestion on OWLS-77806", "committedDate": "2020-07-16T16:21:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NjEyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455956128", "bodyText": "with helm chart -> with the Helm chart (OR, at https://github.com/containous/traefik-helm-chart, I see the term written as HelmChart. Is that what you are referring to? If so, use that term.)", "author": "rosemarymarano", "createdAt": "2020-07-16T17:34:55Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTY1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455991653", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NjEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NjY3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455956675", "bodyText": "about Traefik refer to -> about Traefik, see", "author": "rosemarymarano", "createdAt": "2020-07-16T17:35:49Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTcxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455991718", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NjY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NzY3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455957676", "bodyText": "Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail. -> For more detailed information, see https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml.", "author": "rosemarymarano", "createdAt": "2020-07-16T17:37:30Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTg3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455991870", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NzY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1OTUyMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455959523", "bodyText": "Now we need -> First, we need", "author": "rosemarymarano", "createdAt": "2020-07-16T17:40:45Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTc3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455991775", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1OTUyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MTA5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455961099", "bodyText": "if you want to change some configurations of the operator, use helm upgrade to achieve this. -> if you want to change some operator configuration, use helm upgrade.", "author": "rosemarymarano", "createdAt": "2020-07-16T17:43:34Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTk0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455991943", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MTA5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MTQzNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455961435", "bodyText": "In this section we'll -> In this section, we'll", "author": "rosemarymarano", "createdAt": "2020-07-16T17:44:09Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMTMzMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457731332", "bodyText": "Modified :  This document is based on Traefik version 2.x with the Helm chart at Traefik Helm Repository. For more information about Traefik, see the Traefik Official Site.", "author": "anpanigr", "createdAt": "2020-07-20T22:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MTQzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MjUzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455962534", "bodyText": "Each domain has a web application installed with the URL context testwebapp. -> Each domain has a web application installed with the URL context testwebapp. (This sentence should not be a bulleted item. Remove the dash preceding it.)", "author": "rosemarymarano", "createdAt": "2020-07-16T17:45:48Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA5MTAyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456091020", "bodyText": "Removed the dash before the sentences", "author": "anpanigr", "createdAt": "2020-07-16T21:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MjUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMTUyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457731520", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T22:40:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MjUzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NTU1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455965553", "bodyText": "unique entry point of Traefik with different paths -> unique Traefik entry point of different paths", "author": "rosemarymarano", "createdAt": "2020-07-16T17:50:33Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+#### Install a path-routing IngressRoute\n ```\n $ kubectl create -f samples/path-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MjAyMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455992022", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NTU1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NTkzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455965934", "bodyText": "unique entry point of Traefik with different hostnames -> unique Traefik entry point of different hostnames", "author": "rosemarymarano", "createdAt": "2020-07-16T17:51:12Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MjA4NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455992084", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NTkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NjUwMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455966503", "bodyText": "To make this sample work, -> For this sample to work,", "author": "rosemarymarano", "createdAt": "2020-07-16T17:52:06Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+#### Install a path-routing IngressRoute\n ```\n $ kubectl create -f samples/path-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n+#### Install a TLS-enabled IngressRoute\n This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n \n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n+To make this sample work, you need to enable the TLS endpoint in the Traefik operator.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MjEyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455992127", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NjUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NzExMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455967113", "bodyText": "access application on the WLS domain with hostname in HTTP header -> access the application on the WLS domain with the hostname in HTTP header", "author": "rosemarymarano", "createdAt": "2020-07-16T17:53:05Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+#### Install a path-routing IngressRoute\n ```\n $ kubectl create -f samples/path-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n+#### Install a TLS-enabled IngressRoute\n This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n \n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n+To make this sample work, you need to enable the TLS endpoint in the Traefik operator.\n \n First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WLS domain.\n ```\n # create a TLS secret for domain1\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj \"/CN=domain1.org\"\n-$ kubectl create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n-\n+$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n # create a TLS secret for domain2\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj \"/CN=domain2.org\"\n-$ kubectl -n test1 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n-```\n-Then deploy the TLS Ingress.\n-```\n+$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n+\n+# deploy the TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n ```\n-Now you can access the two WLS domains with different hostnames using the HTTPS endpoint.\n+Now you can access application on the WLS domain with hostname in HTTP header.", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MjE4OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455992188", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:35:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NzExMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2ODAzNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455968036", "bodyText": "The loadbalancer secure port can be obtained dynamically form traefik-operator service on traefik namespace. -> The load balancer secure port can be obtained dynamically from the traefik-operator service in the traefik namespace.", "author": "rosemarymarano", "createdAt": "2020-07-16T17:54:41Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik refer to https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n ```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm upgrade traefik-operator traefik/traefik --values values.yaml \n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+Now we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+#### Install a path-routing IngressRoute\n ```\n $ kubectl create -f samples/path-routing.yaml\n ```\n Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n+#### Install a TLS-enabled IngressRoute\n This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n \n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n+To make this sample work, you need to enable the TLS endpoint in the Traefik operator.\n \n First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WLS domain.\n ```\n # create a TLS secret for domain1\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj \"/CN=domain1.org\"\n-$ kubectl create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n-\n+$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n # create a TLS secret for domain2\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj \"/CN=domain2.org\"\n-$ kubectl -n test1 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n-```\n-Then deploy the TLS Ingress.\n-```\n+$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n+\n+# deploy the TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n ```\n-Now you can access the two WLS domains with different hostnames using the HTTPS endpoint.\n+Now you can access application on the WLS domain with hostname in HTTP header.\n+The loadbalancer secure port can be obtained dynamically form traefik-operator service on traefik namespace. ", "originalCommit": "1fd8d84927a2e8ec84d672d37846e8d43fe56ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MTU3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455991576", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:34:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2ODAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MjI3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456162275", "bodyText": "its an \"ingress controller\", not a \"load balancer\" - they are different things", "author": "markxnelson", "createdAt": "2020-07-17T01:08:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2ODAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMzMzNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457733336", "bodyText": "The ingress controller secure port can be obtained dynamically from the traefik-operator service in the traefik namespace.", "author": "anpanigr", "createdAt": "2020-07-20T22:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2ODAzNg=="}], "type": "inlineReview"}, {"oid": "f9226a361edcb7e024f52cceb88a98091e07ab51", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f9226a361edcb7e024f52cceb88a98091e07ab51", "message": "Addressed doc comments on PR review", "committedDate": "2020-07-16T18:32:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Mjc5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455992798", "bodyText": "make these links?", "author": "markxnelson", "createdAt": "2020-07-16T18:36:24Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with Helm chart at https://github.com/containous/traefik-helm-chart.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxNjcxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456016714", "bodyText": "This document is based on Traefik version 2.x with the Helm chart at Traefik Repository", "author": "anpanigr", "createdAt": "2020-07-16T19:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Mjc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDE0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455994142", "bodyText": "this sentence does not make sense", "author": "markxnelson", "createdAt": "2020-07-16T18:38:46Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with Helm chart at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik, see https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+Or, with a given `values.yaml` For more detailed information, see https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxODA3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456018075", "bodyText": "Re formatted the description as follows ...\nYou can also install the Traefik operator, with a given values.yaml. For more detailed information, see Traefik GitHub Project for more detail.", "author": "anpanigr", "createdAt": "2020-07-16T19:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyMDgzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456020831", "bodyText": "No, the idea here was to get rid of the phrase \"for more detail\" at the end of the sentence. It should be, \"For more detailed information, see [something].", "author": "rosemarymarano", "createdAt": "2020-07-16T19:25:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyNDE1NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456024155", "bodyText": "Modified the sentences as follows ...\nYou can also install the Traefik operator, with a custom values.yaml. For more detailed information, see Traefik GitHub Project.", "author": "anpanigr", "createdAt": "2020-07-16T19:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDc1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455994758", "bodyText": "these instructions do not work - says namespace traefik does not exist", "author": "markxnelson", "createdAt": "2020-07-16T18:39:53Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,95 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with Helm chart at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik, see https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ helm install traefik-operator traefik/traefik --namespace traefik", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyMTE1MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456021150", "bodyText": "Add a command   ( $ kubectl create namespace traefik )", "author": "anpanigr", "createdAt": "2020-07-16T19:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDk4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455994985", "bodyText": "with Helm chart -> with the Helm chart", "author": "rosemarymarano", "createdAt": "2020-07-16T18:40:16Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,22 +4,22 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n-For more information about Traefik refer to https://docs.traefik.io/\n+This document is based on Traefik version 2.x with Helm chart at https://github.com/containous/traefik-helm-chart.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNTIwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456005200", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T18:58:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NDk4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NTU5NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455995595", "bodyText": "use helm upgrade to achieve this. -> use helm upgrade:", "author": "rosemarymarano", "createdAt": "2020-07-16T18:41:19Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,22 +4,22 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-This document is based on Traefik version 2.x with helm chart located at https://github.com/containous/traefik-helm-chart.\n-For more information about Traefik refer to https://docs.traefik.io/\n+This document is based on Traefik version 2.x with Helm chart at https://github.com/containous/traefik-helm-chart.\n+For more information about Traefik, see https://docs.traefik.io/\n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n $ helm repo add traefik https://containous.github.io/traefik-helm-chart\n $ helm repo update\n $ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml` Refer to https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n+Or, with a given `values.yaml` For more detailed information, see https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml for more detail.\n ```\n $ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n+After the Traefik operator is installed and running, if you want to change some operator configurations, use `helm upgrade` to achieve this.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNjE4Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456006182", "bodyText": "sample does not need upgrade. the default values.yaml is sufficient enough to run the sample", "author": "anpanigr", "createdAt": "2020-07-16T19:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NTU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNzA2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456007065", "bodyText": "Then you can remove these sentences.", "author": "rosemarymarano", "createdAt": "2020-07-16T19:02:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NTU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNzIzMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459727232", "bodyText": "removed", "author": "anpanigr", "createdAt": "2020-07-23T21:04:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NTU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NjEwMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455996101", "bodyText": "In this section, we'll (put a comma after the word section.)", "author": "rosemarymarano", "createdAt": "2020-07-16T18:42:13Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -28,7 +28,7 @@ $ helm upgrade traefik-operator traefik/traefik --values values.yaml\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNjYzMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456006632", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T19:01:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NjEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NjQxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455996414", "bodyText": "First, we (comma after the word first)", "author": "rosemarymarano", "createdAt": "2020-07-16T18:42:47Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -28,7 +28,7 @@ $ helm upgrade traefik-operator traefik/traefik --values values.yaml\n In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare two domains for Traefik load balancing.\n+First we need to prepare two domains for Traefik load balancing.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNjg5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456006899", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T19:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NjQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Njc4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455996780", "bodyText": "with hostname -> with the hostname", "author": "rosemarymarano", "createdAt": "2020-07-16T18:43:30Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -73,8 +73,8 @@ $ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2\n # deploy the TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n ```\n-Now you can access application on the WLS domain with hostname in HTTP header.\n-The loadbalancer secure port can be obtained dynamically form traefik-operator service on traefik namespace. \n+Now you can access the application on the WLS domain with hostname in HTTP header.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwNzU1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456007559", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T19:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Njc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Nzc0OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r455997748", "bodyText": "traefik-operator - put traefik-operator in code font by surrounding it in back ticks\ntraefik namespace - same with traefik", "author": "rosemarymarano", "createdAt": "2020-07-16T18:45:18Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -73,8 +73,8 @@ $ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2\n # deploy the TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n ```\n-Now you can access application on the WLS domain with hostname in HTTP header.\n-The loadbalancer secure port can be obtained dynamically form traefik-operator service on traefik namespace. \n+Now you can access the application on the WLS domain with hostname in HTTP header.\n+The load balancer secure port can be obtained dynamically from the traefik-operator service in the traefik namespace.", "originalCommit": "f9226a361edcb7e024f52cceb88a98091e07ab51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwOTIxNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456009217", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-16T19:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5Nzc0OA=="}], "type": "inlineReview"}, {"oid": "4df4c34ceea9fbf0e5ba51f717d4385d99eaf91d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4df4c34ceea9fbf0e5ba51f717d4385d99eaf91d", "message": "More doc review comments", "committedDate": "2020-07-16T19:24:22Z", "type": "commit"}, {"oid": "046aa37d2a0947e821c22d78edb63df35698938d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/046aa37d2a0947e821c22d78edb63df35698938d", "message": "Minor hypelink name  change", "committedDate": "2020-07-16T19:57:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4NzQ3Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456087473", "bodyText": "I think logLevel should be changed to INFO or remove the additionalArguments completely.", "author": "ankedia", "createdAt": "2020-07-16T21:26:42Z", "path": "kubernetes/samples/charts/traefik/values.yaml", "diffHunk": "@@ -1,16 +1,12 @@\n-serviceType: NodePort\n-service:\n-  nodePorts:\n-    http: \"30305\"\n-    https: \"30443\"\n-dashboard:\n-  enabled: true\n-  domain: traefik.example.com\n-rbac:\n-  enabled: true\n-ssl:\n-  enabled: true\n-  #enforced: true \n-  #upstream: true\n-  #insecureSkipVerify: false\n-  tlsMinVersion: VersionTLS12\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+# Ref https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml\n+ports:\n+  web:\n+    nodePort: 30305\n+  websecure:\n+    nodePort: 30443\n+\n+additionalArguments: \n+  - \"--log.level=DEBUG\"", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MjYwMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456162602", "bodyText": "agree", "author": "markxnelson", "createdAt": "2020-07-17T01:09:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4NzQ3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3MDY5Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456170696", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-17T01:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4NzQ3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4ODQ1Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456088457", "bodyText": "It might be good to create an IngressRoute for the dashboard.\n ingressRoute:\n   dashboard:\n      enabled: true", "author": "ankedia", "createdAt": "2020-07-16T21:28:50Z", "path": "kubernetes/samples/charts/traefik/values.yaml", "diffHunk": "@@ -1,16 +1,12 @@\n-serviceType: NodePort\n-service:\n-  nodePorts:\n-    http: \"30305\"\n-    https: \"30443\"\n-dashboard:\n-  enabled: true\n-  domain: traefik.example.com\n-rbac:\n-  enabled: true\n-ssl:\n-  enabled: true\n-  #enforced: true \n-  #upstream: true\n-  #insecureSkipVerify: false\n-  tlsMinVersion: VersionTLS12\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+# Ref https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml\n+ports:\n+  web:\n+    nodePort: 30305\n+  websecure:\n+    nodePort: 30443\n+", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA5NDIxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456094210", "bodyText": "I think this configuration has changed, you need to set serviceType to NodePort to expose ports.\nports:\n  web:\n    nodePort: 30305\n  websecure:\n    nodePort: 30443\nservice:\n  type: NodePort", "author": "ankedia", "createdAt": "2020-07-16T21:41:24Z", "path": "kubernetes/samples/charts/traefik/values.yaml", "diffHunk": "@@ -1,16 +1,12 @@\n-serviceType: NodePort\n-service:\n-  nodePorts:\n-    http: \"30305\"\n-    https: \"30443\"\n-dashboard:\n-  enabled: true\n-  domain: traefik.example.com\n-rbac:\n-  enabled: true\n-ssl:\n-  enabled: true\n-  #enforced: true \n-  #upstream: true\n-  #insecureSkipVerify: false\n-  tlsMinVersion: VersionTLS12\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+# Ref https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml\n+ports:\n+  web:", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDc1Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456160756", "bodyText": "spurious comma between operator and with", "author": "markxnelson", "createdAt": "2020-07-17T01:03:08Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,90 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator, with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2NzI5NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456167295", "bodyText": "modified", "author": "anpanigr", "createdAt": "2020-07-17T01:27:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDc1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDkwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456160904", "bodyText": "@rosemarymarano style question - \"This section describes...\" ??", "author": "markxnelson", "createdAt": "2020-07-17T01:03:43Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,90 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator, with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+In this section, we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3MDExMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456170113", "bodyText": "Modified In this section, we'll demonstrate -> This section describes how to use Traefik to handle traffic to backend WebLogic domains", "author": "anpanigr", "createdAt": "2020-07-17T01:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDkwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDk5MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456160991", "bodyText": "Do not abbreviate WebLogic", "author": "markxnelson", "createdAt": "2020-07-17T01:03:57Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,90 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator, with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+In this section, we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3MDM3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456170376", "bodyText": "Replaced all the occurrence of WLS to WebLogic", "author": "anpanigr", "createdAt": "2020-07-17T01:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MDk5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTI2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456161262", "bodyText": "should be a lead in sentence to explain the context, not just a heading then a command", "author": "markxnelson", "createdAt": "2020-07-17T01:04:51Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,90 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator, with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+In this section, we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+First, we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2OTg3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456169876", "bodyText": "Now I added 3 sub headings under a section 2\n2. Web request routing\nHost-based routing\nPath-based routing\nHost-based secured routing\nEach section/subsection has a descriptions explaining the content", "author": "anpanigr", "createdAt": "2020-07-17T01:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTMyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456161329", "bodyText": "Don't abbreviate WebLogic", "author": "markxnelson", "createdAt": "2020-07-17T01:05:09Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,90 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator, with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+In this section, we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+First, we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WLS domains with the unique Traefik entry point of different hostnames.", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTUzMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456161530", "bodyText": "you probably need to explain what that file does.  what are these magical hostnames? where did they come from?", "author": "markxnelson", "createdAt": "2020-07-17T01:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2NzgzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456167834", "bodyText": "Replaced all the occurrence of WLS to WebLogic", "author": "anpanigr", "createdAt": "2020-07-17T01:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3NDExOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456174118", "bodyText": "Modified :\nNow you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of host-routing.yaml.", "author": "anpanigr", "createdAt": "2020-07-17T01:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTYyMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456161621", "bodyText": "explain what this does", "author": "markxnelson", "createdAt": "2020-07-17T01:06:11Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,90 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator, with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n ## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+In this section, we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n \n ### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+First, we need to prepare two domains for Traefik load balancing.\n \n Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+- One domain with name `domain1` under namespace `weblogic-domain1`.\n+- One domain with name `domain2` under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Install the Traefik IngressRoute\n+#### Install a host-routing IngressRoute\n ```\n $ kubectl create -f samples/host-routing.yaml\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WLS domains with the unique Traefik entry point of different hostnames.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')", "originalCommit": "046aa37d2a0947e821c22d78edb63df35698938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3NDI3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456174275", "bodyText": "Added a line - Get the ingress controller web port", "author": "anpanigr", "createdAt": "2020-07-17T01:53:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MTYyMQ=="}], "type": "inlineReview"}, {"oid": "daf9dba128b259bb16262f279461d495dc43a49f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/daf9dba128b259bb16262f279461d495dc43a49f", "message": "More doc changes", "committedDate": "2020-07-17T03:47:57Z", "type": "commit"}, {"oid": "49ea53b7d5488ab7ca9da6e5a6b7feefc5ed28f7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/49ea53b7d5488ab7ca9da6e5a6b7feefc5ed28f7", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into traefik-update", "committedDate": "2020-07-17T03:48:20Z", "type": "commit"}, {"oid": "16e44a7cf6a644cf8b6cae210248137c1d3afe93", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16e44a7cf6a644cf8b6cae210248137c1d3afe93", "message": "Fixed the broken links", "committedDate": "2020-07-17T04:00:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzMxNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456527316", "bodyText": "traefik is an ingress controller, not a load balancer, they are different things", "author": "markxnelson", "createdAt": "2020-07-17T15:50:33Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,107 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+Install a host-routing [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path based routing  \n+Install a path-routing [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/)\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n-This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n+#### Host based secured routing \n+Install a TLS-enabled [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n+This sample demonstrates how to access application on two WebLogic domains using a HTTPS endpoint.\n \n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n+For this sample to work, you need to enable the TLS endpoint in the Traefik operator.\n \n-First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WLS domain.\n+First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WebLogic domain.\n ```\n # create a TLS secret for domain1\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj \"/CN=domain1.org\"\n-$ kubectl create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n-\n+$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n # create a TLS secret for domain2\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj \"/CN=domain2.org\"\n-$ kubectl -n test1 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n-```\n-Then deploy the TLS Ingress.\n-```\n+$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n+\n+# Deploy a TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n+ingressroute.traefik.containo.us/traefik-tls-1 created\n+ingressroute.traefik.containo.us/traefik-tls-2 created\n ```\n-Now you can access the two WLS domains with different hostnames using the HTTPS endpoint.\n+Now you can access the application on the WebLogic domain with the hostname in HTTP header.\n+The ingress controller secure port can be obtained dynamically from the `traefik-operator` service in the `traefik` namespace.\n ```\n-$ curl -k -H 'host: domain1.org' https://${HOSTNAME}:30443/testwebapp/\n-$ curl -k -H 'host: domain2.org' https://${HOSTNAME}:30443/testwebapp/\n+# Get the ingress controller secure web port\n+TLS_PORT=`kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"websecure\")].nodePort}'`\n+$ curl -k -H 'host: domain1.org' https://${HOSTNAME}:${TLS_PORT}/testwebapp/\n ```\n \n ## Uninstall the Traefik operator\n After removing all the Ingress resources, uninstall the Traefik operator:\n ```\n-$ helm delete --purge traefik-operator\n+$ helm uninstall traefik-operator --namespace traefik --keep-history\n ```\n-## Install and uninstall the Traefik operator with setup.sh\n-Alternatively, you can run the helper script `setup.sh`, under the `kubernetes/samples/charts/util` folder, to install and uninstall Traefik.\n+## Install and uninstall the Traefik operator with setupLoadBalancer.sh\n+Alternatively, you can run the helper script `setupLoadBalancer.sh`, under the `kubernetes/samples/charts/util` folder, to install and uninstall Traefik.\n \n To install Traefik:\n ```\n-$ ./setup.sh create traefik\n+$ ./setupLoadBalancer.sh create traefik", "originalCommit": "16e44a7cf6a644cf8b6cae210248137c1d3afe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU2ODkwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456568904", "bodyText": "One of the suggestion by @tbarnes-us to ( Rename to something less generic than 'setup.sh'  ( e.g. setupLoadBalancer.sh ).  Here we are not referring to K8s object rather a generic fronted load balancer to route web request.  Should I rename to setupProxy.sh  or any other suggestion ?", "author": "anpanigr", "createdAt": "2020-07-17T17:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4MDA4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r462980080", "bodyText": "Traefik still describes itself as an Ingress Controller, but using a CustomResourceDefinition: https://docs.traefik.io/providers/kubernetes-crd/. It's still confusing to call it a load balancer.", "author": "rjeberhard", "createdAt": "2020-07-30T13:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzMxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyODQzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456528433", "bodyText": "this file was created in 2018, so the copyright notice should be\n# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n\nthis applies to all of these files that you are adding notices to.  you need to check all of them and see what years should be added to the notice", "author": "markxnelson", "createdAt": "2020-07-17T15:52:40Z", "path": "kubernetes/samples/charts/traefik/values.yaml", "diffHunk": "@@ -1,16 +1,12 @@\n-serviceType: NodePort\n-service:\n-  nodePorts:\n-    http: \"30305\"\n-    https: \"30443\"\n-dashboard:\n-  enabled: true\n-  domain: traefik.example.com\n-rbac:\n-  enabled: true\n-ssl:\n-  enabled: true\n-  #enforced: true \n-  #upstream: true\n-  #insecureSkipVerify: false\n-  tlsMinVersion: VersionTLS12\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.", "originalCommit": "16e44a7cf6a644cf8b6cae210248137c1d3afe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUzMTY0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456531643", "bodyText": "@markxnelson shouldn't he also remove the word, \"Corporation\" from the copyright statement?", "author": "rosemarymarano", "createdAt": "2020-07-17T15:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyODQzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUzMjU2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456532569", "bodyText": "Yes, you are right, thanks @rosemarymarano", "author": "markxnelson", "createdAt": "2020-07-17T15:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyODQzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU2ODk5Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456568993", "bodyText": "As you see, there was no copyright information in original files. Somehow er missed it.  Since I added this information first time, I added only year 2020. Anyhow updated notice with Y 21018.  I also updated few yaml files in voyager directory which had no copyright information at all.", "author": "anpanigr", "createdAt": "2020-07-17T17:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyODQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTEwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456529104", "bodyText": "People will wonder what contianous is... it would be better to say \"Traefik chart repository....\"", "author": "markxnelson", "createdAt": "2020-07-17T15:53:50Z", "path": "kubernetes/samples/charts/util/setupLoadBalancer.sh", "diffHunk": "@@ -74,18 +82,22 @@ function createTraefik() {\n   createNameSpace $TSPACE\n   echo \"Creating Traefik operator on namespace ${TSPACE}\" \n \n-  if [ \"$(helm search stable/traefik | grep traefik |  wc -l)\" = 0 ]; then\n-    echo \"Add K8SGoogle chart repository\"\n-    helm repo add stable https://kubernetes-charts.storage.googleapis.com\n+  if [ \"$(helm search repo traefik/traefik | grep traefik |  wc -l)\" = 0 ]; then\n+    # https://containous.github.io/traefik-helm-chart/\n+    # https://docs.traefik.io/getting-started/install-traefik/\n+    echo \"Add containous.github.io chart repository\"\n+    helm repo add traefik https://containous.github.io/traefik-helm-chart\n     helm repo update\n   else\n-    echo \"K8SGoogle chart repository is already added.\"\n+    echo \"Containous chart repository is already added.\"", "originalCommit": "16e44a7cf6a644cf8b6cae210248137c1d3afe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU2OTAyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456569027", "bodyText": "Earlier description says K8sGoogle so I followed the same pattern.  I moved it back to Traefik", "author": "anpanigr", "createdAt": "2020-07-17T17:12:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTEwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTIxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456529210", "bodyText": "spelling", "author": "markxnelson", "createdAt": "2020-07-17T15:54:03Z", "path": "kubernetes/samples/charts/util/setupLoadBalancer.sh", "diffHunk": "@@ -163,13 +177,15 @@ function deleteTraefik() {\n     echo \"Deleting Traefik operator.\" \n     helm uninstall --namespace $TSPACE  $TNAME\n     kubectl delete ns ${TSPACE}\n+    echo \"Remove traefik chart repository.\"", "originalCommit": "16e44a7cf6a644cf8b6cae210248137c1d3afe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU2OTA3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r456569077", "bodyText": "Modified: Remove Traefik chart repository.", "author": "anpanigr", "createdAt": "2020-07-17T17:12:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTIxMA=="}], "type": "inlineReview"}, {"oid": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "message": "Updated copyright inforrmation", "committedDate": "2020-07-17T17:11:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMTQwMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457621402", "bodyText": "see Traefik Official Site -> see the Traefik Official Site. (add the word \"the\" and a period at the end of the sentence.)", "author": "rosemarymarano", "createdAt": "2020-07-20T18:51:27Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) ", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MzE3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457643174", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T19:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMTQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMTkzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457621933", "bodyText": "with default settings: -> with the default settings: (add the word \"the\")", "author": "rosemarymarano", "createdAt": "2020-07-20T18:52:27Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MzI1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457643259", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T19:32:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMTkzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMjYyMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457622623", "bodyText": "with a custom values.yaml. -> with a custom values.yaml file.\nsee Traefik Official Site -> see the Traefik Official Site. (add the word \"the\")", "author": "rosemarymarano", "createdAt": "2020-07-20T18:53:39Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MzMxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457643313", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T19:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMjYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMzYxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457623613", "bodyText": "as domain uid under namespace  -> as the domain UID and namespace", "author": "rosemarymarano", "createdAt": "2020-07-20T18:55:23Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MzM5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457643394", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T19:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMzYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMzk1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457623958", "bodyText": "as domain uid under namespace -> as the domain UID and namespace", "author": "rosemarymarano", "createdAt": "2020-07-20T18:55:57Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MzkwOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457643908", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T19:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyMzk1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNTk5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457625997", "bodyText": "managed server -> Managed Server", "author": "rosemarymarano", "createdAt": "2020-07-20T18:59:26Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MTQ4NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457671484", "bodyText": "I don't see this change: managed server -> Managed Server\n(Pani)  Modified to Managed Server", "author": "rosemarymarano", "createdAt": "2020-07-20T20:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNTk5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzAzNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457627036", "bodyText": "You need to add a sentence under the heading, \"Web request routing\", maybe something that describes what the next three sections show.", "author": "rosemarymarano", "createdAt": "2020-07-20T19:01:17Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing ", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MTkxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457671914", "bodyText": "I don't see this change: You need to add a sentence under the heading, \"Web request routing\", maybe something that describes what the next three sections show.\n(Pani)  I am not sure, how you can not see the change. I have updated it few days back\nhttps://github.com/oracle/weblogic-kubernetes-operator/tree/traefik-update/kubernetes/samples/charts/traefik\nNow the document  is read follows ...\n2. Web request routing\nThe following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\nHost-based routing\nThis sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik IngressRoute.\nPath-based routing\nThis sample demonstrates how to access an application on two WebLogic domains using path-based routing. Install a path-based routing Traefik IngressRoute and Middleware.", "author": "rosemarymarano", "createdAt": "2020-07-20T20:27:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzU5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457627594", "bodyText": "Host based routing  -> Host-based routing (lets hyphenate the different routing types)", "author": "rosemarymarano", "createdAt": "2020-07-20T19:02:17Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing ", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MjM2MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457672361", "bodyText": "I don't see this change: Host based routing -> Host-based routing (hyphenated)\n(pani) Updated the doc few days back\nhttps://github.com/oracle/weblogic-kubernetes-operator/tree/traefik-update/kubernetes/samples/charts/traefik", "author": "rosemarymarano", "createdAt": "2020-07-20T20:28:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyODI4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457628285", "bodyText": "access application -> access an application\nhost-based routing\nInstall a host-routing Traefik IngressRoute. (period at the end of the sentence)", "author": "rosemarymarano", "createdAt": "2020-07-20T19:03:40Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTExMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457629112", "bodyText": "I don't see this change:\nhostnames as defined in route section of host-routing.yaml -> hostnames, as defined in the route section of the host-routing.yaml file.", "author": "rosemarymarano", "createdAt": "2020-07-20T19:05:12Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTQzNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457629435", "bodyText": "Path based routing -> Path-based routing", "author": "rosemarymarano", "createdAt": "2020-07-20T19:05:46Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path based routing  ", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyODk4NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459728985", "bodyText": "Modified to  Path-based routing", "author": "anpanigr", "createdAt": "2020-07-23T21:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTQzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTcxNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457629717", "bodyText": "access application on two WebLogic domains using path based routing -> access an application on two WebLogic domains using path-based routing\nInstall a path-routing Traefik IngressRoute and Middleware.  (period at the end of the sentence)", "author": "rosemarymarano", "createdAt": "2020-07-20T19:06:20Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path based routing  \n+This sample demonstrates how to access application on two WebLogic domains using path based routing. Install a path-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/)", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczNDk4OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457734989", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T22:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTcxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMDQwOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457630408", "bodyText": "paths as defined in route section of path-routing.yaml. -> paths, as defined in the route section of the path-routing.yaml file.", "author": "rosemarymarano", "createdAt": "2020-07-20T19:07:32Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path based routing  \n+This sample demonstrates how to access application on two WebLogic domains using path based routing. Install a path-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/)\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths as defined in route section of `path-routing.yaml`.", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczNTA5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457735092", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T22:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMDQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMTEwMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457631101", "bodyText": "access application -> access an application\na HTTPS -> an HTTPS\nInstall a TLS-enabled Traefik IngressRoute.  (period at the end of the sentence)", "author": "rosemarymarano", "createdAt": "2020-07-20T19:08:50Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path based routing  \n+This sample demonstrates how to access application on two WebLogic domains using path based routing. Install a path-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/)\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths as defined in route section of `path-routing.yaml`.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n-This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n+#### Host based secured routing \n+This sample demonstrates how to access application on two WebLogic domains using a HTTPS endpoint. Install a TLS-enabled Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1ODgyNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457658825", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T20:01:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMTEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMjMzOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457632339", "bodyText": "Ingress  -> ingress", "author": "rosemarymarano", "createdAt": "2020-07-20T19:11:12Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see [Traefik Official Site](https://traefik.io/) \n \n To install the Traefik operator in the `traefik` namespace with default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n+- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+#### Host based routing \n+This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path based routing  \n+This sample demonstrates how to access application on two WebLogic domains using path based routing. Install a path-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/)\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths as defined in route section of `path-routing.yaml`.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n-This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n+#### Host based secured routing \n+This sample demonstrates how to access application on two WebLogic domains using a HTTPS endpoint. Install a TLS-enabled Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n \n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n-\n-First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WLS domain.\n+First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WebLogic domain.\n ```\n # create a TLS secret for domain1\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj \"/CN=domain1.org\"\n-$ kubectl create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n-\n+$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n # create a TLS secret for domain2\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj \"/CN=domain2.org\"\n-$ kubectl -n test1 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n-```\n-Then deploy the TLS Ingress.\n-```\n+$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n+\n+# Deploy a TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n+ingressroute.traefik.containo.us/traefik-tls-1 created\n+ingressroute.traefik.containo.us/traefik-tls-2 created\n ```\n-Now you can access the two WLS domains with different hostnames using the HTTPS endpoint.\n+Now you can access the application on the WebLogic domain with the hostname in HTTP header.\n+The ingress controller secure port can be obtained dynamically from the `traefik-operator` service in the `traefik` namespace.\n ```\n-$ curl -k -H 'host: domain1.org' https://${HOSTNAME}:30443/testwebapp/\n-$ curl -k -H 'host: domain2.org' https://${HOSTNAME}:30443/testwebapp/\n+# Get the ingress controller secure web port\n+TLS_PORT=`kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"websecure\")].nodePort}'`\n+$ curl -k -H 'host: domain1.org' https://${HOSTNAME}:${TLS_PORT}/testwebapp/\n ```\n \n ## Uninstall the Traefik operator\n After removing all the Ingress resources, uninstall the Traefik operator:", "originalCommit": "c04ea748acc28b2096a96d0f2efdb26e5e47a13e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1ODcxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457658718", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T20:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMjMzOQ=="}], "type": "inlineReview"}, {"oid": "47a2c05e292309e956ac7b3450cd760de184352b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/47a2c05e292309e956ac7b3450cd760de184352b", "message": "Doc review comments", "committedDate": "2020-07-20T19:29:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NTA1Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457655052", "bodyText": "Why were the instructions for accessing the Traefik dashboard, downloading the Traefik helm chart locally, and updating the Traefik values removed? This all seems like useful information.", "author": "tbarnes-us", "createdAt": "2020-07-20T19:54:25Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,104 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.", "originalCommit": "47a2c05e292309e956ac7b3450cd760de184352b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MzQ4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457663480", "bodyText": "Here we give reference to Official Website for more detail to avoid duplicate information.  There is a sample value.yaml is already there in kubernetes/samples/charts/traefik/vlaues.yaml", "author": "anpanigr", "createdAt": "2020-07-20T20:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MjcwNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457672707", "bodyText": "I don't see links to the doc for these areas - just a top level link to https://traefik.io/", "author": "tbarnes-us", "createdAt": "2020-07-20T20:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMDQ3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457730476", "bodyText": "https://docs.traefik.io/operations/dashboard/", "author": "anpanigr", "createdAt": "2020-07-20T22:37:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NTA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457656013", "bodyText": "Does this also work for older versions of Traefik? Or are we dropping support for older versions of Traefik?", "author": "tbarnes-us", "createdAt": "2020-07-20T19:56:22Z", "path": "kubernetes/samples/charts/traefik/samples/host-routing.yaml", "diffHunk": "@@ -1,35 +1,34 @@\n-apiVersion: networking.k8s.io/v1beta1\n-kind: Ingress\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+apiVersion: traefik.containo.us/v1alpha1\n+kind: IngressRoute", "originalCommit": "47a2c05e292309e956ac7b3450cd760de184352b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1ODAxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457658019", "bodyText": "Note that the MII sample uses older version of Traefik ingresses - it directly supplies the YAML in kubernetes/samples/scripts/create-weblogic-domain/model-in-image/ingresses.", "author": "tbarnes-us", "createdAt": "2020-07-20T20:00:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1ODI2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457658266", "bodyText": "We are not supporting older 1.x version of Traefik  as decided by PM", "author": "anpanigr", "createdAt": "2020-07-20T20:00:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MTE0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457661144", "bodyText": "Then the kubernetes/samples/scripts/create-weblogic-domain/model-in-image/ingresses need to be updated.  This is a multi-step process:\n\nalter the script that generates the ingresses\nrerun the generator\ncheck in a new version of the ingresses to the same locations\nupdate the MII sample documentation that describes the ingresses\nmake sure the ItMiiSample test passes", "author": "tbarnes-us", "createdAt": "2020-07-20T20:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MTc5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457661798", "bodyText": "I will send you the specific steps in slack.", "author": "tbarnes-us", "createdAt": "2020-07-20T20:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczNTU2OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457735568", "bodyText": "I will create another PR to update the MII sample.", "author": "anpanigr", "createdAt": "2020-07-20T22:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0NTU1Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457745556", "bodyText": "Seems OK, as long as the MII sample and ItMiiSample continue to work with this PR in place.  But if the sample or ItMiiSample break, then IT and samples break. They have a dependency on the old 'Quick Start' instructions for starting Traefik.", "author": "tbarnes-us", "createdAt": "2020-07-20T23:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyOTQzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459729433", "bodyText": "Updated the MiiSample code and related doc files. Run the tests on Kind Cluster", "author": "anpanigr", "createdAt": "2020-07-23T21:09:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NjAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MjY3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457672670", "bodyText": "host-based routing", "author": "rosemarymarano", "createdAt": "2020-07-20T20:28:54Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -26,14 +26,14 @@ This section describes how to use Traefik to handle traffic to backend WebLogic\n First, we need to prepare two domains for Traefik load balancing.\n \n Create two WebLogic domains:\n-- One domain with `domain1` as domain uid under namespace `weblogic-domain1`.\n-- One domain with `domain2` as domain uid under namespace `weblogic-domain2`.\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n - Each domain has a WebLogic cluster `cluster-1` where each managed server listens on port `8001`.\n \n ### 2. Web request routing \n #### Host based routing \n-This sample demonstrates how to access application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n+This sample demonstrates how to access an application on two WebLogic domains using host based routing. Install a host-routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)", "originalCommit": "47a2c05e292309e956ac7b3450cd760de184352b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMzg4Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457733887", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T22:46:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MjY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3Mjk5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457672997", "bodyText": "in the route section\nof the path-routing.yaml file.", "author": "rosemarymarano", "createdAt": "2020-07-20T20:29:35Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -57,15 +57,15 @@ middleware.traefik.containo.us/middleware-domain1 created\n ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths as defined in route section of `path-routing.yaml`.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths, as defined in route section of `path-routing.yaml`.", "originalCommit": "47a2c05e292309e956ac7b3450cd760de184352b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzczMzk0OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457733949", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T22:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3Mjk5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3Mzc4Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457673783", "bodyText": "Host-based secured routing", "author": "rosemarymarano", "createdAt": "2020-07-20T20:31:04Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -57,15 +57,15 @@ middleware.traefik.containo.us/middleware-domain1 created\n ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths as defined in route section of `path-routing.yaml`.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths, as defined in route section of `path-routing.yaml`.\n ```\n # Get the ingress controller web port\n $ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n $ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n $ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n #### Host based secured routing ", "originalCommit": "47a2c05e292309e956ac7b3450cd760de184352b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyNTQ5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r457725499", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-20T22:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3Mzc4Mw=="}], "type": "inlineReview"}, {"oid": "f7afd0411d5a672606c1882e33eacf9cb270f009", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f7afd0411d5a672606c1882e33eacf9cb270f009", "message": "More doc changes", "committedDate": "2020-07-20T22:20:37Z", "type": "commit"}, {"oid": "db1de82b4aa46ddd865f979261db4a884b5220cd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/db1de82b4aa46ddd865f979261db4a884b5220cd", "message": "Minor typo", "committedDate": "2020-07-20T22:33:36Z", "type": "commit"}, {"oid": "53ae551b44162a7ba296b9dcdd71a55fdb3fbc57", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/53ae551b44162a7ba296b9dcdd71a55fdb3fbc57", "message": "Modified the mii sample wraper scripts", "committedDate": "2020-07-21T03:47:56Z", "type": "commit"}, {"oid": "b7f6e1a54d34f0b9c3f5e83c9bfcf866801c8190", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b7f6e1a54d34f0b9c3f5e83c9bfcf866801c8190", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into traefik-update", "committedDate": "2020-07-21T04:06:00Z", "type": "commit"}, {"oid": "f43e0be543a1ac52bc2577e0010fccad281eac58", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f43e0be543a1ac52bc2577e0010fccad281eac58", "message": "Update Mii Sample script", "committedDate": "2020-07-22T15:37:48Z", "type": "commit"}, {"oid": "718b889dae48edb8798f2ed89f1d72412313d49c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/718b889dae48edb8798f2ed89f1d72412313d49c", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into traefik-update", "committedDate": "2020-07-22T15:37:57Z", "type": "commit"}, {"oid": "a41f261149a1ab575236088bedf01e5f725ebf8f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a41f261149a1ab575236088bedf01e5f725ebf8f", "message": "Resync develop branch. Modified more scripts and yaml files for mii-sample", "committedDate": "2020-07-22T17:30:02Z", "type": "commit"}, {"oid": "2861f3e2bca5705d9ec17497958d303b8c273447", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2861f3e2bca5705d9ec17497958d303b8c273447", "message": "update MII sample generation/test instructions", "committedDate": "2020-07-22T20:56:29Z", "type": "commit"}, {"oid": "f19e06fd4fc701bedfb0455dd94ed00f20ea0e7b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f19e06fd4fc701bedfb0455dd94ed00f20ea0e7b", "message": "Missing modification", "committedDate": "2020-07-22T23:09:51Z", "type": "commit"}, {"oid": "a2bfa6e7a70eaec352be817b020e2691a68e3fab", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a2bfa6e7a70eaec352be817b020e2691a68e3fab", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into traefik-update", "committedDate": "2020-07-22T23:10:08Z", "type": "commit"}, {"oid": "acfbe79eac5d4391a8e1e544d46f0ae8f4c696e5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/acfbe79eac5d4391a8e1e544d46f0ae8f4c696e5", "message": "Modified traefik ingress syntax", "committedDate": "2020-07-23T16:14:55Z", "type": "commit"}, {"oid": "071c99686fbc8006b5d1020591ef6fe7aa78b263", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/071c99686fbc8006b5d1020591ef6fe7aa78b263", "message": "Modifoe md files from docs-source directory", "committedDate": "2020-07-23T19:54:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyODY0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459628644", "bodyText": "a custom values.yaml. -> a custom values.yaml file.", "author": "rosemarymarano", "createdAt": "2020-07-23T17:57:28Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).", "originalCommit": "acfbe79eac5d4391a8e1e544d46f0ae8f4c696e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MjI0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459742244", "bodyText": "add a word \"file\" to all the custom yaml occurrence,   such as host-routing.yaml, path-routing.yaml and values.yaml", "author": "anpanigr", "createdAt": "2020-07-23T21:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyODY0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyOTY3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459629677", "bodyText": "Need a period at the end of this sentence, \"This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik IngressRoute.\"", "author": "rosemarymarano", "createdAt": "2020-07-23T17:59:09Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each Managed Server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+The following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\n+\n+#### Host-based routing \n+This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)", "originalCommit": "acfbe79eac5d4391a8e1e544d46f0ae8f4c696e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MjQzNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459742436", "bodyText": "Yes, add a period to the end of sentence.", "author": "anpanigr", "createdAt": "2020-07-23T21:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyOTY3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMTExOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459711119", "bodyText": "the path-routing.yaml. -> the path-routing.yaml file.", "author": "rosemarymarano", "createdAt": "2020-07-23T20:32:29Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each Managed Server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+The following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\n+\n+#### Host-based routing \n+This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path-based routing  \n+This sample demonstrates how to access an application on two WebLogic domains using path-based routing. Install a path-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/).\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths, as defined in the route section of the `path-routing.yaml`.", "originalCommit": "071c99686fbc8006b5d1020591ef6fe7aa78b263", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MjUyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459742529", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-23T21:37:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMTExOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMTg5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459711899", "bodyText": "hostname in HTTP header. -> host name in the HTTP header.", "author": "rosemarymarano", "createdAt": "2020-07-23T20:33:58Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each Managed Server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+The following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\n+\n+#### Host-based routing \n+This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path-based routing  \n+This sample demonstrates how to access an application on two WebLogic domains using path-based routing. Install a path-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/).\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths, as defined in the route section of the `path-routing.yaml`.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n-This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n-\n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n+#### Host-based secured routing \n+This sample demonstrates how to access an application on two WebLogic domains using an HTTPS endpoint. Install a TLS-enabled Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute).\n \n-First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WLS domain.\n+First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WebLogic domain.\n ```\n # create a TLS secret for domain1\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj \"/CN=domain1.org\"\n-$ kubectl create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n-\n+$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n # create a TLS secret for domain2\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj \"/CN=domain2.org\"\n-$ kubectl -n test1 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n-```\n-Then deploy the TLS Ingress.\n-```\n+$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n+\n+# Deploy a TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n+ingressroute.traefik.containo.us/traefik-tls-1 created\n+ingressroute.traefik.containo.us/traefik-tls-2 created\n ```\n-Now you can access the two WLS domains with different hostnames using the HTTPS endpoint.\n+Now you can access the application on the WebLogic domain with the hostname in HTTP header.", "originalCommit": "071c99686fbc8006b5d1020591ef6fe7aa78b263", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MjU4Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459742582", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-23T21:37:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMTg5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMjU0Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459712546", "bodyText": "hostnames -> host names (two words)", "author": "rosemarymarano", "createdAt": "2020-07-23T20:35:09Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml`. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each Managed Server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+The following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\n+\n+#### Host-based routing \n+This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute)\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different hostnames as defined in route section of `host-routing.yaml`.", "originalCommit": "071c99686fbc8006b5d1020591ef6fe7aa78b263", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MjYzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459742631", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-23T21:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMjU0Ng=="}], "type": "inlineReview"}, {"oid": "4967ae53dd2610960ad94b0b880006c9f3c06910", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4967ae53dd2610960ad94b0b880006c9f3c06910", "message": "More doc review comment", "committedDate": "2020-07-23T21:40:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NDQzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459744434", "bodyText": "There are indentation errors in a few places in this yaml.", "author": "tbarnes-us", "createdAt": "2020-07-23T21:42:07Z", "path": "docs-source/content/samples/simple/domains/model-in-image/prerequisites.md", "diffHunk": "@@ -53,8 +53,8 @@ weight: 1\n     - Option 1: To create the ingresses, use the following YAML file to create a file called `/tmp/mii-sample/ingresses/myingresses.yaml` and then call `kubectl apply -f /tmp/mii-sample/ingresses/myingresses.yaml`:\n \n        ```yaml\n-       apiVersion: networking.k8s.io/v1beta1\n-       kind: Ingress\n+       apiVersion: traefik.containo.us/v1alpha1", "originalCommit": "4967ae53dd2610960ad94b0b880006c9f3c06910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4ODg1Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r459788856", "bodyText": "Fixed the indention issue", "author": "anpanigr", "createdAt": "2020-07-23T23:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NDQzNA=="}], "type": "inlineReview"}, {"oid": "674bf018f013b450d341b53a32670b0d34d6616b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/674bf018f013b450d341b53a32670b0d34d6616b", "message": "Fixed the indention issue in inline ingress file", "committedDate": "2020-07-23T23:47:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExNTAxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460115013", "bodyText": "Is there a test that covers this script?  I wonder because (a) no integration test that calls this script appears to have changed in this pull, and (b) the namespace doesn't seem to be configurable where-as I thought the integration tests are expected to use a dynamic namespace for its load balancers.   If not, perhaps file a JIRA to have this addressed?", "author": "tbarnes-us", "createdAt": "2020-07-24T15:11:16Z", "path": "kubernetes/samples/charts/util/setupLoadBalancer.sh", "diffHunk": "@@ -3,15 +3,22 @@\n # Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n \n # This script is to create or delete Ingress controllers. \n-# We support two ingress controllers: Traefik and Voyager.\n+# Currently the script supports two ingress controllers: Traefik and Voyager.\n+# Usage $0 create|delete traefik|voyager traefik_version|voyager_version\n \n UTILDIR=\"$(dirname \"$(readlink -f \"$0\")\")\"", "originalCommit": "674bf018f013b450d341b53a32670b0d34d6616b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzMjE3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460132177", "bodyText": "As of now (in develop) we do not have Traefik integration test, as Traefik 1.x has been unstable in Helm3.  We have automated tests for Ngnix and Voyager.  Currently Sankar is working on adding Traefik LoadBalancer. In integration we build the ingress object from the scratch using kubectl API not thru setupLodBalacer.sh scripts. I see  2 references to the script in our doc\nkubernetes/samples/charts/voyager/README.md\nkubernetes/samples/charts/traefik/README.md\nWe can add a extra parameter to add load balancer namespace with suitable default in another JIRA", "author": "anpanigr", "createdAt": "2020-07-24T15:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExNTAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3OTYwNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460179606", "bodyText": "The MII sample uses Traefik, and there's an IT test for it - but the MII IT test doesn't use this particular script. Also, I think Sankar has a pull out for Traefik IT testing - but, again, I doubt it uses this script. We should have IT tests for this sample script (and similarly other shell/yaml).", "author": "tbarnes-us", "createdAt": "2020-07-24T17:06:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExNTAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5ODg3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460198877", "bodyText": "We try to avoid usage of script(s)/artifacts  in integration test. That was the decision taken when we start writing JUNIT5 tests.  May be Mii Sample is a candidate to use the script. Sample using sample script.", "author": "anpanigr", "createdAt": "2020-07-24T17:44:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExNTAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwMTkxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460201914", "bodyText": "We try to avoid usage of script(s)/artifacts in integration test. That was the decision taken when we start writing JUNIT5 tests.\n\nI think it's reasonable to point out that the samples should be easily tested, but, apart from the MII sample, aren't. There's no requirement that the samples should form the core of the test framework, but the fact that they aren't the core should not prevent them from being tested IMO.\nRegardless, I've voted up with the assumption that all doc, shell, and YAML changes have been at least manually tested...", "author": "tbarnes-us", "createdAt": "2020-07-24T17:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExNTAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI4MTUzMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460281530", "bodyText": "If so can you approve the PR.", "author": "anpanigr", "createdAt": "2020-07-24T20:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExNTAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4MTM5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460881392", "bodyText": "as defined in route section -> as defined in the route section (add missing word, the)\nof host-routing.yaml file. -> of the host-routing.yaml file. (add missing word, the)", "author": "rosemarymarano", "createdAt": "2020-07-27T13:16:15Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml` file. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each Managed Server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+The following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\n+\n+#### Host-based routing \n+This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute).\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different host names as defined in route section of `host-routing.yaml` file.", "originalCommit": "674bf018f013b450d341b53a32670b0d34d6616b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NTYwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460955604", "bodyText": "done in latest commit", "author": "anpanigr", "createdAt": "2020-07-27T15:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4MTM5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4MzA0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460883041", "bodyText": "host name in HTTP header. -> host name in the HTTP header. (add missing word, the)", "author": "rosemarymarano", "createdAt": "2020-07-27T13:19:04Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -4,102 +4,106 @@ This sample demonstrates how to install the Traefik ingress controller to provid\n load balancing for WebLogic clusters.\n \n ## Install the Traefik operator with a Helm chart\n-The Traefik Helm chart is located in the official Helm project `charts` directory at https://github.com/helm/charts/tree/master/stable/traefik.\n-The chart is in the default repository for Helm.\n+This document is based on Traefik version 2.x with the Helm chart at [Traefik Helm Repository](https://github.com/containous/traefik-helm-chart).\n+For more information about Traefik, see the [Traefik Official Site](https://traefik.io/).\n \n-To install the Traefik operator in the `traefik` namespace with default settings:\n+To install the Traefik operator in the `traefik` namespace with the default settings:\n ```\n-$ helm install --name traefik-operator --namespace traefik stable/traefik\n+$ helm repo add traefik https://containous.github.io/traefik-helm-chart\n+$ helm repo update\n+$ kubectl create namespace traefik\n+$ helm install traefik-operator traefik/traefik --namespace traefik\n ```\n-Or, with a given `values.yaml`:\n+You can also install the Traefik operator with a custom `values.yaml` file. For more detailed information, see the [Traefik GitHub Project](https://github.com/containous/traefik-helm-chart/blob/master/traefik/values.yaml).\n ```\n-$ helm install --name traefik-operator --namespace traefik --values values.yaml stable/traefik\n-```\n-With the dashboard enabled, you can access the Traefik dashboard with the URL `http://${HOSTNAME}:30305`, with the HTTP host `traefik.example.com`.\n-```\n-$ curl -H 'host: traefik.example.com' http://${HOSTNAME}:30305/\n-```\n-\n-## Optionally, download the Traefik Helm chart\n-If you want, you can download the Traefik Helm chart and untar it into a local folder:\n-```\n-$ helm fetch  stable/traefik --untar\n-```\n-\n-## Update the Traefik operator\n-After the Traefik operator is installed and running, if you want to change some configurations of the operator, use `helm upgrade` to achieve this.\n-```\n-$ helm upgrade traefik-operator stable/traefik --values values.yaml \n+$ helm install traefik-operator traefik/traefik --namespace traefik --values values.yaml\n ```\n \n-## Configure Traefik as a load balancer for WLS domains\n-In this section we'll demonstrate how to use Traefik to handle traffic to backend WLS domains.\n+## Configure Traefik as a load balancer for WebLogic domains\n+This section describes how to use Traefik to handle traffic to backend WebLogic domains.\n \n-### 1. Install WLS domains\n-Now we need to prepare some domains for Traefik load balancing.\n+### 1. Install WebLogic domains\n+First, we need to prepare two domains for Traefik load balancing.\n \n-Create two WLS domains:\n-- One domain with name `domain1` under namespace `default`.\n-- One domain with name `domain2` under namespace `test1`.\n+Create two WebLogic domains:\n+- One domain with `domain1` as the domain UID and namespace `weblogic-domain1`.\n+- One domain with `domain2` as the domain UID and namespace `weblogic-domain2`.\n - Each domain has a web application installed with the URL context `testwebapp`.\n+- Each domain has a WebLogic cluster `cluster-1` where each Managed Server listens on port `8001`.\n \n-### 2. Install the Traefik Ingress\n-#### Install a host-routing Ingress\n+### 2. Web request routing \n+The following sections describe how to route an application web request to the WebLogic domain through a Traefik frontend.\n+\n+#### Host-based routing \n+This sample demonstrates how to access an application on two WebLogic domains using host-based routing. Install a host-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute).\n ```\n $ kubectl create -f samples/host-routing.yaml\n+ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n+ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different hostnames.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different host names as defined in route section of `host-routing.yaml` file.\n ```\n-$ curl -H 'host: domain1.org' http://${HOSTNAME}:30305/testwebapp/\n-$ curl -H 'host: domain2.org' http://${HOSTNAME}:30305/testwebapp/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl -H 'host: domain1.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n+$ curl -H 'host: domain2.org' http://${HOSTNAME}:${LB_PORT}/testwebapp/\n ```\n-#### Install a path-routing Ingress\n+\n+#### Path-based routing  \n+This sample demonstrates how to access an application on two WebLogic domains using path-based routing. Install a path-based routing Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute) and [Middleware](https://docs.traefik.io/middlewares/overview/).\n+\n ```\n $ kubectl create -f samples/path-routing.yaml\n+ingressroute.traefik.containo.us/traefik-pathrouting-1 created\n+middleware.traefik.containo.us/middleware-domain1 created\n+ingressroute.traefik.containo.us/traefik-pathrouting-2 created\n+middleware.traefik.containo.us/middleware-domain2 created\n ```\n-Now you can send requests to different WLS domains with the unique entry point of Traefik with different paths.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different paths, as defined in the route section of the `path-routing.yaml` file.\n ```\n-$ curl http://${HOSTNAME}:30305/domain1/\n-$ curl http://${HOSTNAME}:30305/domain2/\n+# Get the ingress controller web port\n+$ export LB_PORT=$(kubectl -n traefik get service traefik-operator -o jsonpath='{.spec.ports[?(@.name==\"web\")].nodePort}')\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain1/\n+$ curl http://${HOSTNAME}:${LB_PORT}/domain2/\n ```\n-#### Install a TLS-enabled Ingress\n-This sample demonstrates accessing the two WLS domains using an HTTPS endpoint and the WLS domains are protected by different TLS certificates.\n-\n-To make this sample work, you need to enable the TLS endpoint in the Traefik operator. If you use the `values.yaml` file in the same folder as this README, the TLS endpoint is already enabled.\n+#### Host-based secured routing \n+This sample demonstrates how to access an application on two WebLogic domains using an HTTPS endpoint. Install a TLS-enabled Traefik [IngressRoute](https://docs.traefik.io/routing/providers/kubernetes-crd/#kind-ingressroute).\n \n-First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WLS domain.\n+First, you need to create two secrets with TLS certificates, one with the common name `domain1.org`, the other with the common name `domain2.org`. We use `openssl` to generate self-signed certificates for demonstration purposes. Note that the TLS secret needs to be in the same namespace as the WebLogic domain.\n ```\n # create a TLS secret for domain1\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj \"/CN=domain1.org\"\n-$ kubectl create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n-\n+$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt\n # create a TLS secret for domain2\n $ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj \"/CN=domain2.org\"\n-$ kubectl -n test1 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n-```\n-Then deploy the TLS Ingress.\n-```\n+$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt\n+\n+# Deploy a TLS IngressRoute.\n $ kubectl create -f samples/tls.yaml\n+ingressroute.traefik.containo.us/traefik-tls-1 created\n+ingressroute.traefik.containo.us/traefik-tls-2 created\n ```\n-Now you can access the two WLS domains with different hostnames using the HTTPS endpoint.\n+Now you can access the application on the WebLogic domain with the host name in HTTP header.", "originalCommit": "674bf018f013b450d341b53a32670b0d34d6616b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NTg2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460955866", "bodyText": "done in the latest commit", "author": "anpanigr", "createdAt": "2020-07-27T15:00:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4MzA0MQ=="}], "type": "inlineReview"}, {"oid": "98eb1d616ac8139c2f6e7bb0c15f0413bf0f5c34", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/98eb1d616ac8139c2f6e7bb0c15f0413bf0f5c34", "message": "More doc review resolution", "committedDate": "2020-07-27T14:37:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NDk3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460964977", "bodyText": "defined in route section -> defined in the route section", "author": "rosemarymarano", "createdAt": "2020-07-27T15:13:35Z", "path": "kubernetes/samples/charts/traefik/README.md", "diffHunk": "@@ -41,7 +41,7 @@ $ kubectl create -f samples/host-routing.yaml\n ingressroute.traefik.containo.us/traefik-hostrouting-1 created\n ingressroute.traefik.containo.us/traefik-hostrouting-2 created\n ```\n-Now you can send requests to different WebLogic domains with the unique Traefik entry point of different host names as defined in route section of `host-routing.yaml` file.\n+Now you can send requests to different WebLogic domains with the unique Traefik entry point of different host names as defined in route section of the `host-routing.yaml` file.", "originalCommit": "98eb1d616ac8139c2f6e7bb0c15f0413bf0f5c34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4NzEwMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1814#discussion_r460987103", "bodyText": "done", "author": "anpanigr", "createdAt": "2020-07-27T15:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NDk3Nw=="}], "type": "inlineReview"}, {"oid": "9be887f3749f1adc1e6c7ec4a741bc0d9c76fc62", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9be887f3749f1adc1e6c7ec4a741bc0d9c76fc62", "message": "Minor doc update", "committedDate": "2020-07-27T15:42:14Z", "type": "commit"}, {"oid": "92416ea1067933342ff0293793298809279b9b83", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/92416ea1067933342ff0293793298809279b9b83", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into traefik-update", "committedDate": "2020-07-27T16:44:00Z", "type": "commit"}, {"oid": "6835a069baa6adef2a51aa0bc6e555577dba3dc9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6835a069baa6adef2a51aa0bc6e555577dba3dc9", "message": "Move the istio istallatiion to RESULTS_ROOT directory", "committedDate": "2020-07-29T01:11:53Z", "type": "commit"}]}