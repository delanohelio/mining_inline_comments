{"pr_number": 1772, "pr_title": "Review and update descriptions for schema", "pr_createdAt": "2020-06-26T19:16:57Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772", "timeline": [{"oid": "3955f91d8de9abab578a2294f1967af9562a9df8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3955f91d8de9abab578a2294f1967af9562a9df8", "message": "Review and update descriptions for schema", "committedDate": "2020-06-26T18:53:30Z", "type": "commit"}, {"oid": "cdf2fbcd69c8cdef6b90068065a1c2cd95facb49", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cdf2fbcd69c8cdef6b90068065a1c2cd95facb49", "message": "Merge remote-tracking branch 'origin/develop' into schema-doc-review", "committedDate": "2020-06-26T18:53:56Z", "type": "commit"}, {"oid": "df7bb519347aedf6b171670725ba88ece705483c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/df7bb519347aedf6b171670725ba88ece705483c", "message": "Correct typos", "committedDate": "2020-06-26T19:14:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3NDMzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446374333", "bodyText": "Default?", "author": "tbarnes-us", "createdAt": "2020-06-26T19:37:30Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -1,30 +1,28 @@\n {\n   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n-  \"description\": \"Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\",\n   \"type\": \"object\",\n   \"definitions\": {\n     \"AdminServer\": {\n-      \"description\": \"AdminServer represents the operator configuration for the Administration Server.\",\n       \"type\": \"object\",\n       \"properties\": {\n         \"serverStartState\": {\n-          \"description\": \"The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n+          \"description\": \"The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n           \"type\": \"string\",\n           \"enum\": [\n             \"RUNNING\",\n             \"ADMIN\"\n           ]\n         },\n         \"serverService\": {\n-          \"description\": \"Customization affecting ClusterIP Kubernetes services for WebLogic Server instances.\",\n+          \"description\": \"Customization affecting the generation of Kubernetes services for WebLogic Server instances.\",\n           \"$ref\": \"#/definitions/ServerService\"\n         },\n         \"serverPod\": {\n-          \"description\": \"Configuration affecting server pods.\",\n+          \"description\": \"Customization affecting the generation of Pods for WebLogic Server instances.\",\n           \"$ref\": \"#/definitions/ServerPod\"\n         },\n         \"serverStartPolicy\": {\n-          \"description\": \"The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED.\",\n+          \"description\": \"The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3NzAyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446377020", "bodyText": "We don't use the configuration ordering any more - it's not clear if there is a reliable one available, as returns admin queries were not always in the expected ordere.  Instead, the ordering of instances is alphabetical (or more accurately 'numero lexi' where we canonicalize numbers within strings to a fixed number of digits internally for sorting purposes - this assures 'foo-10' sorts after 'foo-9' etc).", "author": "tbarnes-us", "createdAt": "2020-06-26T19:44:13Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -101,41 +97,41 @@\n           \"minimum\": 1\n         },\n         \"replicas\": {\n-          \"description\": \"The number of cluster members to run.\",\n+          \"description\": \"The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2OTg1NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446369855", "bodyText": "Kubernetes services -> Kubernetes Services (Kubernetes Service is a resource name)", "author": "rosemarymarano", "createdAt": "2020-06-26T19:26:35Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -1,30 +1,28 @@\n {\n   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n-  \"description\": \"Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\",\n   \"type\": \"object\",\n   \"definitions\": {\n     \"AdminServer\": {\n-      \"description\": \"AdminServer represents the operator configuration for the Administration Server.\",\n       \"type\": \"object\",\n       \"properties\": {\n         \"serverStartState\": {\n-          \"description\": \"The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n+          \"description\": \"The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n           \"type\": \"string\",\n           \"enum\": [\n             \"RUNNING\",\n             \"ADMIN\"\n           ]\n         },\n         \"serverService\": {\n-          \"description\": \"Customization affecting ClusterIP Kubernetes services for WebLogic Server instances.\",\n+          \"description\": \"Customization affecting the generation of Kubernetes services for WebLogic Server instances.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3MDA2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446370062", "bodyText": "WebLogic server instance -> WebLogic Server instance", "author": "rosemarymarano", "createdAt": "2020-06-26T19:27:11Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -1,30 +1,28 @@\n {\n   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n-  \"description\": \"Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\",\n   \"type\": \"object\",\n   \"definitions\": {\n     \"AdminServer\": {\n-      \"description\": \"AdminServer represents the operator configuration for the Administration Server.\",\n       \"type\": \"object\",\n       \"properties\": {\n         \"serverStartState\": {\n-          \"description\": \"The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n+          \"description\": \"The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n           \"type\": \"string\",\n           \"enum\": [\n             \"RUNNING\",\n             \"ADMIN\"\n           ]\n         },\n         \"serverService\": {\n-          \"description\": \"Customization affecting ClusterIP Kubernetes services for WebLogic Server instances.\",\n+          \"description\": \"Customization affecting the generation of Kubernetes services for WebLogic Server instances.\",\n           \"$ref\": \"#/definitions/ServerService\"\n         },\n         \"serverPod\": {\n-          \"description\": \"Configuration affecting server pods.\",\n+          \"description\": \"Customization affecting the generation of Pods for WebLogic Server instances.\",\n           \"$ref\": \"#/definitions/ServerPod\"\n         },\n         \"serverStartPolicy\": {\n-          \"description\": \"The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED.\",\n+          \"description\": \"The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3MzgzOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446373838", "bodyText": "WebLogic servers -> WebLogic Servers", "author": "rosemarymarano", "createdAt": "2020-06-26T19:36:13Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -181,23 +177,23 @@\n       \"type\": \"object\",\n       \"properties\": {\n         \"overrideDistributionStrategy\": {\n-          \"description\": \"Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion.\",\n+          \"description\": \"Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3NDY5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446374698", "bodyText": "Status is the status of the condition. -> The status of the condition.", "author": "rosemarymarano", "createdAt": "2020-06-26T19:38:26Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -250,13 +246,13 @@\n           \"$ref\": \"#/definitions/DateTime\"\n         },\n         \"status\": {\n-          \"description\": \"Status is the status of the condition. Can be True, False, Unknown. Required.\",\n+          \"description\": \"Status is the status of the condition. Can be True, False, Unknown.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3NzYwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446377604", "bodyText": "username  -> user name", "author": "rosemarymarano", "createdAt": "2020-06-26T19:45:35Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -301,46 +297,46 @@\n           ]\n         },\n         \"httpAccessLogInLogHome\": {\n-          \"description\": \"If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration.\",\n+          \"description\": \"Specifies whether the server HTTP access log files will be written to the same directory specified in logHome. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. Not required. Defaults to true.\",\n           \"type\": \"boolean\"\n         },\n         \"webLogicCredentialsSecret\": {\n-          \"description\": \"The name of a pre-created Kubernetes secret, in the domain\\u0027s namespace, that holds the username and password needed to boot WebLogic Server under the \\u0027username\\u0027 and \\u0027password\\u0027 fields.\",\n+          \"description\": \"Reference to a Kubernetes Secret that contains the username and password needed to boot a WebLogic Server under the \\u0027username\\u0027 and \\u0027password\\u0027 fields.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3OTMwMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446379303", "bodyText": "is in overloaded state -> is in the overloaded state", "author": "rosemarymarano", "createdAt": "2020-06-26T19:49:50Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -584,7 +579,7 @@\n       \"type\": \"object\",\n       \"properties\": {\n         \"overallHealth\": {\n-          \"description\": \"Server health of this WebLogic Server. If the value is \\\"Not available\\\", the operator has failed to read the health. If the value is \\\"Not available (possibly overloaded)\\\", the operator has failed to read the health of the server possibly due to the server is in overloaded state.\",\n+          \"description\": \"Server health of this WebLogic Server instance. If the value is \\\"Not available\\\", the operator has failed to read the health. If the value is \\\"Not available (possibly overloaded)\\\", the operator has failed to read the health of the server possibly due to the server is in overloaded state.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4MDY0OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446380649", "bodyText": "will be default -> will be the default", "author": "rosemarymarano", "createdAt": "2020-06-26T19:53:16Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -601,120 +596,119 @@\n       }\n     },\n     \"ServerPod\": {\n-      \"description\": \"ServerPod describes the configuration for a Kubernetes pod for a server.\",\n       \"type\": \"object\",\n       \"properties\": {\n         \"nodeName\": {\n-          \"description\": \"NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.\",\n+          \"description\": \"NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.\",\n           \"type\": \"string\"\n         },\n         \"livenessProbe\": {\n-          \"description\": \"Settings for the liveness probe associated with a server.\",\n+          \"description\": \"Settings for the liveness probe associated with a WebLogic Server instance.\",\n           \"$ref\": \"#/definitions/ProbeTuning\"\n         },\n         \"readinessGates\": {\n-          \"description\": \"If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \\\"True\\\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md\",\n+          \"description\": \"If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \\\"True\\\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md\",\n           \"type\": \"array\",\n           \"items\": {\n             \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.PodReadinessGate\"\n           }\n         },\n         \"serviceAccountName\": {\n-          \"description\": \"Name of the ServiceAccount to be used to run this pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the pod is created.\",\n+          \"description\": \"Name of the ServiceAccount to be used to run this Pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the Pod is created.\",\n           \"type\": \"string\"\n         },\n         \"podSecurityContext\": {\n           \"description\": \"Pod-level security attributes.\",\n           \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext\"\n         },\n         \"priorityClassName\": {\n-          \"description\": \"If specified, indicates the pod\\u0027s priority. \\\"system-node-critical\\\" and \\\"system-cluster-critical\\\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.\",\n+          \"description\": \"If specified, indicates the Pod\\u0027s priority. \\\"system-node-critical\\\" and \\\"system-cluster-critical\\\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4Mjk0Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446382946", "bodyText": "Domain -> domain", "author": "rosemarymarano", "createdAt": "2020-06-26T19:59:01Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,53 +1,51 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this representation of a Domain. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMTI3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446431278", "bodyText": "This one actually is \"Domain\" because it's referring to the Kubernetes resource.", "author": "rjeberhard", "createdAt": "2020-06-26T22:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4Mjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMTQwNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446431405", "bodyText": "I'll drop \"representation of a\"", "author": "rjeberhard", "createdAt": "2020-06-26T22:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4Mjk0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4MzczNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446383736", "bodyText": "clusterName -> clusterName (code font)", "author": "rosemarymarano", "createdAt": "2020-06-26T20:00:46Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,53 +1,51 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this representation of a Domain. |\n+| `kind` | string | The type of the REST resource. Must be 'Domain'. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain resource metadata. Must include the name and namespace. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the clusters field. Not required. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The clusterName field of each entry must name a cluster that already exists in the WebLogic domain configuration. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NDE5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446384197", "bodyText": "dataHome -> dataHome (code font)", "author": "rosemarymarano", "createdAt": "2020-06-26T20:01:56Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,53 +1,51 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this representation of a Domain. |\n+| `kind` | string | The type of the REST resource. Must be 'Domain'. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain resource metadata. Must include the name and namespace. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the clusters field. Not required. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The clusterName field of each entry must name a cluster that already exists in the WebLogic domain configuration. |\n | `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n | `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain home configuration. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NDkyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446384920", "bodyText": "domainHomeSourceType -> domainHomeSourceType (code font is a \"nice to have\" for code syntax when included in a description. If it's too much trouble to change them all, I understand)", "author": "rosemarymarano", "createdAt": "2020-06-26T20:03:43Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,53 +1,51 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this representation of a Domain. |\n+| `kind` | string | The type of the REST resource. Must be 'Domain'. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain resource metadata. Must include the name and namespace. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the clusters field. Not required. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The clusterName field of each entry must name a cluster that already exists in the WebLogic domain configuration. |\n | `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n | `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain home configuration. |\n+| `domainHome` | string | The directory containing the WebLogic domain configuration inside the container. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMjkxNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446432916", "bodyText": "Let me see if I can do something... the Java code is the single source both for the CRD description where I probably don't want the backticks and here where I would.", "author": "rjeberhard", "createdAt": "2020-06-26T22:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NDkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NTYyMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446385623", "bodyText": "latest, -> latest; (semi-colon)", "author": "rosemarymarano", "createdAt": "2020-06-26T20:05:22Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,53 +1,51 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this representation of a Domain. |\n+| `kind` | string | The type of the REST resource. Must be 'Domain'. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain resource metadata. Must include the name and namespace. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the clusters field. Not required. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The clusterName field of each entry must name a cluster that already exists in the WebLogic domain configuration. |\n | `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n | `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain home configuration. |\n+| `domainHome` | string | The directory containing the WebLogic domain configuration inside the container. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n+| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is present in the container image specified by the image field. False indicates that the domain home file system is located on a persistent volume. Not required. Defaults to unset. |\n+| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is present in the container image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume. FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. Not required. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n+| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. This value is distinct and need not match the domain name from the WebLogic domain configuration. Not required. Defaults to the value of metadata.name. |\n+| `httpAccessLogInLogHome` | Boolean | Specifies whether the server HTTP access log files will be written to the same directory specified in logHome. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. Not required. Defaults to true. |\n+| `image` | string | The WebLogic container image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n+| `imagePullPolicy` | string | The image pull policy for the WebLogic container image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent, otherwise. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NzE4Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446387182", "bodyText": "WebLogic server instance -> WebLogic Server instance", "author": "rosemarymarano", "createdAt": "2020-06-26T20:09:21Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,53 +1,51 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this representation of a Domain. |\n+| `kind` | string | The type of the REST resource. Must be 'Domain'. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain resource metadata. Must include the name and namespace. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the clusters field. Not required. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The clusterName field of each entry must name a cluster that already exists in the WebLogic domain configuration. |\n | `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n | `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain home configuration. |\n+| `domainHome` | string | The directory containing the WebLogic domain configuration inside the container. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n+| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is present in the container image specified by the image field. False indicates that the domain home file system is located on a persistent volume. Not required. Defaults to unset. |\n+| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is present in the container image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume. FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. Not required. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n+| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. This value is distinct and need not match the domain name from the WebLogic domain configuration. Not required. Defaults to the value of metadata.name. |\n+| `httpAccessLogInLogHome` | Boolean | Specifies whether the server HTTP access log files will be written to the same directory specified in logHome. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. Not required. Defaults to true. |\n+| `image` | string | The WebLogic container image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n+| `imagePullPolicy` | string | The image pull policy for the WebLogic container image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent, otherwise. |\n+| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic container image. |\n+| `includeServerOutInPodLog` | Boolean | Specifies whether the server .out file will be included in the Pod's log. Not required. Defaults to true. |\n+| `introspectVersion` | string | Changes to this field cause the operator to repeat its introspection of the WebLogic domain configuration. Repeating introspection is required for the operator to recognize changes to the domain configuration, such as adding a new WebLogic cluster or Manager Server instance, to regenerate configuration overrides, or to regenerate the WebLogic domain home when the domainHomeSourceType is FromModel. Introspection occurs automatically, without requiring change to this field, when servers are first started or restarted after a full domain shutdown. For the FromModel domainHomeSourceType, introspection also occurs when a running server must be restarted because of changes to any of the fields listed here: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#properties-that-cause-servers-to-be-restarted. See also overridesConfigurationStrategy. |\n+| `logHome` | string | The directory in a server's container in which to store the domain, Node Manager, server logs, server *.out, and optionally HTTP access log files if httpAccessLogInLogHome is true. Ignored if logHomeEnabled is false. |\n+| `logHomeEnabled` | Boolean | Specifies whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n+| `managedServers` | array of [Managed Server](#managed-server) | Lifecycle options for individual Managed Servers, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart a named server instance. The serverName field of each entry must name a Managed Server that already exists in the WebLogic domain configuration. |\n+| `maxClusterConcurrentStartup` | number | The maximum number of cluster member Managed Server instances that the operator will start in parallel for a given cluster, if `maxConcurrentStartup` is not specified for a specific cluster under the clusters field. A value of 0 means there is no configured limit. Not required. Defaults to 0. |\n+| `replicas` | number | The default number of cluster member Managed Server instances to start, if this is not specified for a specific cluster under the clusters field. For each cluster, the first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then a cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5MTk3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446391977", "bodyText": "Kubernetes services -> Kubernetes Services", "author": "rosemarymarano", "createdAt": "2020-06-26T20:20:58Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5MjMwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446392304", "bodyText": "WebLogic server -> WebLogic Server", "author": "rosemarymarano", "createdAt": "2020-06-26T20:21:49Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5MjUxNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446392516", "bodyText": "specified then the Operator's -> specified, then the operator's", "author": "rosemarymarano", "createdAt": "2020-06-26T20:22:21Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5Mjc0MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446392740", "bodyText": "WebLogic servers -> WebLogic Servers", "author": "rosemarymarano", "createdAt": "2020-06-26T20:22:53Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5MzE0Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446393147", "bodyText": "If this field is specified then -> If this field is specified, then  (if...,(comma) then...)", "author": "rosemarymarano", "createdAt": "2020-06-26T20:24:00Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5MzQ4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446393480", "bodyText": "constraints -> constraints. (period)", "author": "rosemarymarano", "createdAt": "2020-06-26T20:24:48Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored. |\n+| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified then the value of spec.configOverrideSecrets is ignored. |\n \n ### Managed Server\n \n-ManagedServer represents the operator configuration for a single Managed Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverName` | string | The name of the Managed Server. Required. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverName` | string | The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Server Pod\n \n-ServerPod describes the configuration for a Kubernetes pod for a server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the pod's scheduling constraints |\n-| `annotations` | Map | The annotations to be attached to generated resources. |\n-| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server pod. |\n-| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching pod-level attributes. |\n-| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to add to a server. |\n-| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server pod. |\n-| `labels` | Map | The labels to be attached to generated resources. The label names must not start with 'weblogic.'. |\n-| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a server. |\n-| `nodeName` | string | NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n-| `nodeSelector` | Map | Selector which must match a node's labels for the pod to be scheduled on that node. |\n+| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the Pod's scheduling constraints |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5Mzk2OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446393968", "bodyText": "fits resource requirements -> fits the resource requirements", "author": "rosemarymarano", "createdAt": "2020-06-26T20:26:01Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored. |\n+| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified then the value of spec.configOverrideSecrets is ignored. |\n \n ### Managed Server\n \n-ManagedServer represents the operator configuration for a single Managed Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverName` | string | The name of the Managed Server. Required. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverName` | string | The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Server Pod\n \n-ServerPod describes the configuration for a Kubernetes pod for a server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the pod's scheduling constraints |\n-| `annotations` | Map | The annotations to be attached to generated resources. |\n-| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server pod. |\n-| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching pod-level attributes. |\n-| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to add to a server. |\n-| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server pod. |\n-| `labels` | Map | The labels to be attached to generated resources. The label names must not start with 'weblogic.'. |\n-| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a server. |\n-| `nodeName` | string | NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n-| `nodeSelector` | Map | Selector which must match a node's labels for the pod to be scheduled on that node. |\n+| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the Pod's scheduling constraints |\n+| `annotations` | Map | The annotations to be added to generated resources. |\n+| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server Pod. |\n+| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching Pod-level attributes. |\n+| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to set in the container running a WebLogic Server instance. |\n+| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server Pod. |\n+| `labels` | Map | The labels to be added to generated resources. The label names must not start with 'weblogic.'. |\n+| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a WebLogic Server instance. |\n+| `nodeName` | string | NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NDUwOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446394509", "bodyText": "be default or zero if there is no default. -> be the default or zero, if there is no default.", "author": "rosemarymarano", "createdAt": "2020-06-26T20:27:20Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored. |\n+| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified then the value of spec.configOverrideSecrets is ignored. |\n \n ### Managed Server\n \n-ManagedServer represents the operator configuration for a single Managed Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverName` | string | The name of the Managed Server. Required. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverName` | string | The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Server Pod\n \n-ServerPod describes the configuration for a Kubernetes pod for a server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the pod's scheduling constraints |\n-| `annotations` | Map | The annotations to be attached to generated resources. |\n-| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server pod. |\n-| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching pod-level attributes. |\n-| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to add to a server. |\n-| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server pod. |\n-| `labels` | Map | The labels to be attached to generated resources. The label names must not start with 'weblogic.'. |\n-| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a server. |\n-| `nodeName` | string | NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n-| `nodeSelector` | Map | Selector which must match a node's labels for the pod to be scheduled on that node. |\n+| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the Pod's scheduling constraints |\n+| `annotations` | Map | The annotations to be added to generated resources. |\n+| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server Pod. |\n+| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching Pod-level attributes. |\n+| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to set in the container running a WebLogic Server instance. |\n+| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server Pod. |\n+| `labels` | Map | The labels to be added to generated resources. The label names must not start with 'weblogic.'. |\n+| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a WebLogic Server instance. |\n+| `nodeName` | string | NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n+| `nodeSelector` | Map | Selector which must match a node's labels for the Pod to be scheduled on that Node. |\n | `podSecurityContext` | [Pod Security Context](k8s1.13.5.md#pod-security-context) | Pod-level security attributes. |\n-| `priorityClassName` | string | If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |\n-| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md |\n-| `readinessProbe` | [Probe Tuning](#probe-tuning) | Settings for the readiness probe associated with a server. |\n-| `resources` | [Resource Requirements](k8s1.13.5.md#resource-requirements) | Memory and CPU minimum requirements and limits for the server. |\n-| `restartPolicy` | string | Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy |\n-| `runtimeClassName` | string | RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. |\n-| `schedulerName` | string | If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler. |\n-| `serviceAccountName` | string | Name of the ServiceAccount to be used to run this pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the pod is created. |\n-| `shutdown` | [Shutdown](#shutdown) | Configures how the operator should shutdown the server instance. |\n-| `tolerations` | array of [Toleration](k8s1.13.5.md#toleration) | If specified, the pod's tolerations. |\n-| `volumeMounts` | array of [Volume Mount](k8s1.13.5.md#volume-mount) | Additional volume mounts for the server pod. |\n-| `volumes` | array of [Volume](k8s1.13.5.md#volume) | Additional volumes to be created in the server pod. |\n+| `priorityClassName` | string | If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NDY5Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446394697", "bodyText": "have status equal -> have a status equal", "author": "rosemarymarano", "createdAt": "2020-06-26T20:27:47Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored. |\n+| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified then the value of spec.configOverrideSecrets is ignored. |\n \n ### Managed Server\n \n-ManagedServer represents the operator configuration for a single Managed Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverName` | string | The name of the Managed Server. Required. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverName` | string | The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Server Pod\n \n-ServerPod describes the configuration for a Kubernetes pod for a server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the pod's scheduling constraints |\n-| `annotations` | Map | The annotations to be attached to generated resources. |\n-| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server pod. |\n-| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching pod-level attributes. |\n-| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to add to a server. |\n-| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server pod. |\n-| `labels` | Map | The labels to be attached to generated resources. The label names must not start with 'weblogic.'. |\n-| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a server. |\n-| `nodeName` | string | NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n-| `nodeSelector` | Map | Selector which must match a node's labels for the pod to be scheduled on that node. |\n+| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the Pod's scheduling constraints |\n+| `annotations` | Map | The annotations to be added to generated resources. |\n+| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server Pod. |\n+| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching Pod-level attributes. |\n+| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to set in the container running a WebLogic Server instance. |\n+| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server Pod. |\n+| `labels` | Map | The labels to be added to generated resources. The label names must not start with 'weblogic.'. |\n+| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a WebLogic Server instance. |\n+| `nodeName` | string | NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n+| `nodeSelector` | Map | Selector which must match a node's labels for the Pod to be scheduled on that Node. |\n | `podSecurityContext` | [Pod Security Context](k8s1.13.5.md#pod-security-context) | Pod-level security attributes. |\n-| `priorityClassName` | string | If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |\n-| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md |\n-| `readinessProbe` | [Probe Tuning](#probe-tuning) | Settings for the readiness probe associated with a server. |\n-| `resources` | [Resource Requirements](k8s1.13.5.md#resource-requirements) | Memory and CPU minimum requirements and limits for the server. |\n-| `restartPolicy` | string | Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy |\n-| `runtimeClassName` | string | RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. |\n-| `schedulerName` | string | If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler. |\n-| `serviceAccountName` | string | Name of the ServiceAccount to be used to run this pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the pod is created. |\n-| `shutdown` | [Shutdown](#shutdown) | Configures how the operator should shutdown the server instance. |\n-| `tolerations` | array of [Toleration](k8s1.13.5.md#toleration) | If specified, the pod's tolerations. |\n-| `volumeMounts` | array of [Volume Mount](k8s1.13.5.md#volume-mount) | Additional volume mounts for the server pod. |\n-| `volumes` | array of [Volume](k8s1.13.5.md#volume) | Additional volumes to be created in the server pod. |\n+| `priorityClassName` | string | If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |\n+| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NTA4OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446395089", "bodyText": "by specified scheduler -> by the specified scheduler\nby default scheduler -> by the default scheduler", "author": "rosemarymarano", "createdAt": "2020-06-26T20:28:46Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -61,108 +59,100 @@ DomainStatus represents information about the status of a domain. Status may tra\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Not required. Defaults to true |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in replicas count. If more Managed Servers need to be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start. The first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then this cluster may have more cluster members running than its replicas count. Not required. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified then the Operator's ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC and ON_RESTART. See also introspectVersion. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored. |\n+| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified then the value of spec.configOverrideSecrets is ignored. |\n \n ### Managed Server\n \n-ManagedServer represents the operator configuration for a single Managed Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverName` | string | The name of the Managed Server. Required. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers |\n+| `serverName` | string | The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Server Pod\n \n-ServerPod describes the configuration for a Kubernetes pod for a server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the pod's scheduling constraints |\n-| `annotations` | Map | The annotations to be attached to generated resources. |\n-| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server pod. |\n-| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching pod-level attributes. |\n-| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to add to a server. |\n-| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server pod. |\n-| `labels` | Map | The labels to be attached to generated resources. The label names must not start with 'weblogic.'. |\n-| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a server. |\n-| `nodeName` | string | NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n-| `nodeSelector` | Map | Selector which must match a node's labels for the pod to be scheduled on that node. |\n+| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the Pod's scheduling constraints |\n+| `annotations` | Map | The annotations to be added to generated resources. |\n+| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server Pod. |\n+| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching Pod-level attributes. |\n+| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to set in the container running a WebLogic Server instance. |\n+| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server Pod. |\n+| `labels` | Map | The labels to be added to generated resources. The label names must not start with 'weblogic.'. |\n+| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a WebLogic Server instance. |\n+| `nodeName` | string | NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n+| `nodeSelector` | Map | Selector which must match a node's labels for the Pod to be scheduled on that Node. |\n | `podSecurityContext` | [Pod Security Context](k8s1.13.5.md#pod-security-context) | Pod-level security attributes. |\n-| `priorityClassName` | string | If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |\n-| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md |\n-| `readinessProbe` | [Probe Tuning](#probe-tuning) | Settings for the readiness probe associated with a server. |\n-| `resources` | [Resource Requirements](k8s1.13.5.md#resource-requirements) | Memory and CPU minimum requirements and limits for the server. |\n-| `restartPolicy` | string | Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy |\n-| `runtimeClassName` | string | RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. |\n-| `schedulerName` | string | If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler. |\n-| `serviceAccountName` | string | Name of the ServiceAccount to be used to run this pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the pod is created. |\n-| `shutdown` | [Shutdown](#shutdown) | Configures how the operator should shutdown the server instance. |\n-| `tolerations` | array of [Toleration](k8s1.13.5.md#toleration) | If specified, the pod's tolerations. |\n-| `volumeMounts` | array of [Volume Mount](k8s1.13.5.md#volume-mount) | Additional volume mounts for the server pod. |\n-| `volumes` | array of [Volume](k8s1.13.5.md#volume) | Additional volumes to be created in the server pod. |\n+| `priorityClassName` | string | If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |\n+| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md |\n+| `readinessProbe` | [Probe Tuning](#probe-tuning) | Settings for the readiness probe associated with a WebLogic Server instance. |\n+| `resources` | [Resource Requirements](k8s1.13.5.md#resource-requirements) | Memory and CPU minimum requirements and limits for the WebLogic Server instance. |\n+| `restartPolicy` | string | Restart policy for all containers within the Pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy |\n+| `runtimeClassName` | string | RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this Pod. If no RuntimeClass resource matches the named class, the Pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. |\n+| `schedulerName` | string | If specified, the Pod will be dispatched by specified scheduler. If not specified, the Pod will be dispatched by default scheduler. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NTkwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446395900", "bodyText": "Status is the status of the condition. -> The status of the condition.", "author": "rosemarymarano", "createdAt": "2020-06-26T20:30:49Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -172,56 +162,56 @@ ServerPod describes the configuration for a Kubernetes pod for a server.\n | `lastTransitionTime` | DateTime | Last time the condition transitioned from one status to another. |\n | `message` | string | Human-readable message indicating details about last transition. |\n | `reason` | string | Unique, one-word, CamelCase reason for the condition's last transition. |\n-| `status` | string | Status is the status of the condition. Can be True, False, Unknown. Required. |\n-| `type` | string | The type of the condition. Valid types are Progressing, Available, and Failed. Required. |\n+| `status` | string | Status is the status of the condition. Can be True, False, Unknown. |", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5Njk1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446396959", "bodyText": "Domain -> domain", "author": "rosemarymarano", "createdAt": "2020-06-26T20:33:28Z", "path": "docs/domains/index.html", "diffHunk": "@@ -841,23 +841,23 @@\n       ],\n       \"properties\": {\n         \"metadata\": {\n-          \"description\": \"The domain meta-data. Must include the name and namespace.\",\n+          \"description\": \"The domain resource metadata. Must include the name and namespace.\",\n           \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n         },\n         \"apiVersion\": {\n-          \"description\": \"The API version for the Domain.\",\n+          \"description\": \"The API version defines the versioned schema of this representation of a Domain.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMjE1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446402158", "bodyText": "Default is 120 seconds.", "author": "tbarnes-us", "createdAt": "2020-06-26T20:46:32Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -208,11 +204,11 @@\n           \"$ref\": \"#/definitions/Istio\"\n         },\n         \"overridesConfigMap\": {\n-          \"description\": \"The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides.\",\n+          \"description\": \"The name of the ConfigMap for WebLogic configuration overrides. If this field is specified then the value of spec.configOverrides is ignored.\",\n           \"type\": \"string\"\n         },\n         \"introspectorJobActiveDeadlineSeconds\": {\n-          \"description\": \"The introspector job timeout value in seconds. If this field is specified it overrides the Operator\\u0027s config map data.introspectorJobActiveDeadlineSeconds value.\",\n+          \"description\": \"The introspector job timeout value in seconds. If this field is specified then the Operator\\u0027s ConfigMap data.introspectorJobActiveDeadlineSeconds value is ignored.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMjk3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446402974", "bodyText": "I thought the UID uniqueness requirement is more relaxed, e.g. per Operator, or even per namespace?", "author": "tbarnes-us", "createdAt": "2020-06-26T20:48:25Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -272,27 +268,27 @@\n           }\n         },\n         \"imagePullSecrets\": {\n-          \"description\": \"A list of image pull secrets for the WebLogic Docker image.\",\n+          \"description\": \"A list of image pull secrets for the WebLogic container image.\",\n           \"type\": \"array\",\n           \"items\": {\n             \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference\"\n           }\n         },\n         \"domainUID\": {\n           \"pattern\": \"^[a-z0-9-.]{1,253}$\",\n-          \"description\": \"Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name.\",\n+          \"description\": \"Domain unique identifier. Must be unique across the Kubernetes cluster. This value is distinct and need not match the domain name from the WebLogic domain configuration. Not required. Defaults to the value of metadata.name.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNTM0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446405342", "bodyText": "Again - it's pseudo-alphabetical (numero lexi), not configured ordering.", "author": "tbarnes-us", "createdAt": "2020-06-26T20:54:18Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -349,22 +345,22 @@\n           ]\n         },\n         \"maxClusterConcurrentStartup\": {\n-          \"description\": \"The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit.\",\n+          \"description\": \"The maximum number of cluster member Managed Server instances that the operator will start in parallel for a given cluster, if `maxConcurrentStartup` is not specified for a specific cluster under the clusters field. A value of 0 means there is no configured limit. Not required. Defaults to 0.\",\n           \"type\": \"number\",\n           \"minimum\": 0\n         },\n         \"replicas\": {\n-          \"description\": \"The number of managed servers to run in any cluster that does not specify a replica count.\",\n+          \"description\": \"The default number of cluster member Managed Server instances to start, if this is not specified for a specific cluster under the clusters field. For each cluster, the first cluster members defined in the WebLogic domain configuration will be selected to start, up to the replicas count, unless specific Managed Servers are specified as starting in their entry under the managedServers field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the replicas count, by finding the first cluster members in the WebLogic domain configuration that are not already started. If cluster members are started because of their related entries under managedServers then a cluster may have more cluster members running than its replicas count. Not required. Defaults to 0.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwNjkyNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446406925", "bodyText": "Default?", "author": "tbarnes-us", "createdAt": "2020-06-26T20:58:03Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -471,41 +467,40 @@\n       \"type\": \"object\",\n       \"properties\": {\n         \"annotations\": {\n-          \"description\": \"The annotations to be attached to generated resources.\",\n+          \"description\": \"The annotations to be added to generated resources.\",\n           \"$ref\": \"#/definitions/Map\"\n         },\n         \"labels\": {\n-          \"description\": \"The labels to be attached to generated resources. The label names must not start with \\u0027weblogic.\\u0027.\",\n+          \"description\": \"The labels to be added to generated resources. The label names must not start with \\u0027weblogic.\\u0027.\",\n           \"$ref\": \"#/definitions/Map\"\n         }\n       }\n     },\n     \"ManagedServer\": {\n-      \"description\": \"ManagedServer represents the operator configuration for a single Managed Server.\",\n       \"type\": \"object\",\n       \"properties\": {\n         \"serverStartState\": {\n-          \"description\": \"The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n+          \"description\": \"The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING.\",\n           \"type\": \"string\",\n           \"enum\": [\n             \"RUNNING\",\n             \"ADMIN\"\n           ]\n         },\n         \"serverService\": {\n-          \"description\": \"Customization affecting ClusterIP Kubernetes services for WebLogic Server instances.\",\n+          \"description\": \"Customization affecting the generation of Kubernetes services for WebLogic Server instances.\",\n           \"$ref\": \"#/definitions/ServerService\"\n         },\n         \"serverName\": {\n-          \"description\": \"The name of the Managed Server. Required.\",\n+          \"description\": \"The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required.\",\n           \"type\": \"string\"\n         },\n         \"serverPod\": {\n-          \"description\": \"Configuration affecting server pods.\",\n+          \"description\": \"Customization affecting the generation of Pods for WebLogic Server instances.\",\n           \"$ref\": \"#/definitions/ServerPod\"\n         },\n         \"serverStartPolicy\": {\n-          \"description\": \"The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED.\",\n+          \"description\": \"The strategy for deciding whether to start a WebLogic server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwODQyNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r446408424", "bodyText": "Might be nice to link to the JVM memory/option arguments discussion in our docs:  https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables", "author": "tbarnes-us", "createdAt": "2020-06-26T21:02:02Z", "path": "docs/domains/Domain.json", "diffHunk": "@@ -601,120 +596,119 @@\n       }\n     },\n     \"ServerPod\": {\n-      \"description\": \"ServerPod describes the configuration for a Kubernetes pod for a server.\",\n       \"type\": \"object\",\n       \"properties\": {\n         \"nodeName\": {\n-          \"description\": \"NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.\",\n+          \"description\": \"NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.\",\n           \"type\": \"string\"\n         },\n         \"livenessProbe\": {\n-          \"description\": \"Settings for the liveness probe associated with a server.\",\n+          \"description\": \"Settings for the liveness probe associated with a WebLogic Server instance.\",\n           \"$ref\": \"#/definitions/ProbeTuning\"\n         },\n         \"readinessGates\": {\n-          \"description\": \"If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \\\"True\\\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md\",\n+          \"description\": \"If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \\\"True\\\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md\",\n           \"type\": \"array\",\n           \"items\": {\n             \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.PodReadinessGate\"\n           }\n         },\n         \"serviceAccountName\": {\n-          \"description\": \"Name of the ServiceAccount to be used to run this pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the pod is created.\",\n+          \"description\": \"Name of the ServiceAccount to be used to run this Pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the Pod is created.\",\n           \"type\": \"string\"\n         },\n         \"podSecurityContext\": {\n           \"description\": \"Pod-level security attributes.\",\n           \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext\"\n         },\n         \"priorityClassName\": {\n-          \"description\": \"If specified, indicates the pod\\u0027s priority. \\\"system-node-critical\\\" and \\\"system-cluster-critical\\\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.\",\n+          \"description\": \"If specified, indicates the Pod\\u0027s priority. \\\"system-node-critical\\\" and \\\"system-cluster-critical\\\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.\",\n           \"type\": \"string\"\n         },\n         \"volumes\": {\n-          \"description\": \"Additional volumes to be created in the server pod.\",\n+          \"description\": \"Additional volumes to be created in the server Pod.\",\n           \"type\": \"array\",\n           \"items\": {\n             \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.Volume\"\n           }\n         },\n         \"resources\": {\n-          \"description\": \"Memory and CPU minimum requirements and limits for the server.\",\n+          \"description\": \"Memory and CPU minimum requirements and limits for the WebLogic Server instance.\",\n           \"$ref\": \"https://github.com/garethr/kubernetes-json-schema/blob/master/v1.13.5/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements\"\n         },\n         \"annotations\": {\n-          \"description\": \"The annotations to be attached to generated resources.\",\n+          \"description\": \"The annotations to be added to generated resources.\",\n           \"$ref\": \"#/definitions/Map\"\n         },\n         \"env\": {\n-          \"description\": \"A list of environment variables to add to a server.\",\n+          \"description\": \"A list of environment variables to set in the container running a WebLogic Server instance.\",", "originalCommit": "df7bb519347aedf6b171670725ba88ece705483c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b10824f53f782e49516832952edc137de163b245", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b10824f53f782e49516832952edc137de163b245", "message": "Review comments", "committedDate": "2020-06-26T22:43:41Z", "type": "commit"}, {"oid": "c8af655532d82916658a62b610d9c1e2094962e4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c8af655532d82916658a62b610d9c1e2094962e4", "message": "More comments", "committedDate": "2020-06-26T23:46:09Z", "type": "commit"}, {"oid": "c2c7e08f52c51618b4a0effea17bbd8d3e04805f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c2c7e08f52c51618b4a0effea17bbd8d3e04805f", "message": "A couple more, minor changes", "committedDate": "2020-06-29T12:28:22Z", "type": "commit"}, {"oid": "c72724866ec32776126d3776117daec4388dde47", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c72724866ec32776126d3776117daec4388dde47", "message": "A couple more missing periods", "committedDate": "2020-06-29T12:39:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyMDE1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r447020151", "bodyText": "An optional, directory -> An optional directory (no comma needed here)\nempty then ->  empty, then (comma needed here for the if..., then... construct)", "author": "rosemarymarano", "createdAt": "2020-06-29T14:36:04Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,168 +1,158 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this Domain. Required. |\n+| `kind` | string | The type of the REST resource. Must be \"Domain\". Required. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The resource metadata. Must include the `name` and `namespace`. Required. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n-| `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n-| `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the `clusters` field. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The `clusterName` field of each entry must match a cluster that already exists in the WebLogic domain configuration. |\n+| `configOverrides` | string | Deprecated. Use `configuration.overridesConfigMap` instead. Ignored if `configuration.overridesConfigMap` is specified. The name of the ConfigMap for optional WebLogic configuration overrides. |\n+| `configOverrideSecrets` | array of string | Deprecated. Use `configuration.secrets` instead. Ignored if `configuration.secrets` is specified. A list of names of the Secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If `dataHome` is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain configuration. |", "originalCommit": "c72724866ec32776126d3776117daec4388dde47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNTYxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r447025613", "bodyText": "under managedServers then -> under managedServers, then (comma before then)", "author": "rosemarymarano", "createdAt": "2020-06-29T14:43:17Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,168 +1,158 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this Domain. Required. |\n+| `kind` | string | The type of the REST resource. Must be \"Domain\". Required. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The resource metadata. Must include the `name` and `namespace`. Required. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n-| `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n-| `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the `clusters` field. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The `clusterName` field of each entry must match a cluster that already exists in the WebLogic domain configuration. |\n+| `configOverrides` | string | Deprecated. Use `configuration.overridesConfigMap` instead. Ignored if `configuration.overridesConfigMap` is specified. The name of the ConfigMap for optional WebLogic configuration overrides. |\n+| `configOverrideSecrets` | array of string | Deprecated. Use `configuration.secrets` instead. Ignored if `configuration.secrets` is specified. A list of names of the Secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If `dataHome` is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain configuration. |\n+| `domainHome` | string | The directory containing the WebLogic domain configuration inside the container. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n+| `domainHomeInImage` | Boolean | Deprecated. Use `domainHomeSourceType` instead. Ignored if `domainHomeSourceType` is specified. True indicates that the domain home file system is present in the container image specified by the image field. False indicates that the domain home file system is located on a persistent volume. Defaults to unset. |\n+| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is present in the container image specified by the `image` field. PersistentVolume indicates that the domain home file system is located on a persistent volume. FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified, it overrides the value of `domainHomeInImage`. If both fields are unspecified, then `domainHomeSourceType` defaults to Image. |\n+| `domainUID` | string | Domain unique identifier. It is recommended that this value be unique to assist in future work to identify related domains in active-passive scenarios across data centers; however, it is only required that this value be unique within the namespace, similarly to the names of Kubernetes resources. This value is distinct and need not match the domain name from the WebLogic domain configuration. Defaults to the value of `metadata.name`. |\n+| `httpAccessLogInLogHome` | Boolean | Specifies whether the server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain configuration. Defaults to true. |\n+| `image` | string | The WebLogic container image; required when `domainHomeSourceType` is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n+| `imagePullPolicy` | string | The image pull policy for the WebLogic container image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise. |\n+| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull Secrets for the WebLogic container image. |\n+| `includeServerOutInPodLog` | Boolean | Specifies whether the server .out file will be included in the Pod's log. Defaults to true. |\n+| `introspectVersion` | string | Changes to this field cause the operator to repeat its introspection of the WebLogic domain configuration. Repeating introspection is required for the operator to recognize changes to the domain configuration, such as adding a new WebLogic cluster or Managed Server instance, to regenerate configuration overrides, or to regenerate the WebLogic domain home when the `domainHomeSourceType` is FromModel. Introspection occurs automatically, without requiring change to this field, when servers are first started or restarted after a full domain shutdown. For the FromModel `domainHomeSourceType`, introspection also occurs when a running server must be restarted because of changes to any of the fields listed here: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#properties-that-cause-servers-to-be-restarted. See also `overridesConfigurationStrategy`. |\n+| `logHome` | string | The directory in a server's container in which to store the domain, Node Manager, server logs, server *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if `logHomeEnabled` is false. |\n+| `logHomeEnabled` | Boolean | Specifies whether the log home folder is enabled. Defaults to true if `domainHomeSourceType` is PersistentVolume; false, otherwise. |\n+| `managedServers` | array of [Managed Server](#managed-server) | Lifecycle options for individual Managed Servers, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart a named server instance. The `serverName` field of each entry must match a Managed Server that already exists in the WebLogic domain configuration or that matches a dynamic cluster member based on the server template. |\n+| `maxClusterConcurrentStartup` | number | The maximum number of cluster member Managed Server instances that the operator will start in parallel for a given cluster, if `maxConcurrentStartup` is not specified for a specific cluster under the `clusters` field. A value of 0 means there is no configured limit. Defaults to 0. |\n+| `replicas` | number | The default number of cluster member Managed Server instances to start for each WebLogic cluster in the domain configuration, unless `replicas` is specified for that cluster under the `clusters` field. For each cluster, the operator will sort cluster member Managed Server names from the WebLogic domain configuration by normalizing any numbers in the Managed Server name and then sorting alphabetically. This is done so that server names such as \"managed-server10\" come after \"managed-server9\". The operator will then start Managed Servers from the sorted list, up to the `replicas` count, unless specific Managed Servers are specified as starting in their entry under the `managedServers` field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the `replicas` count, by finding further cluster members in the sorted list that are not already started. If cluster members are started because of their entries under `managedServers` then a cluster may have more cluster members running than its `replicas` count. Defaults to 0. |", "originalCommit": "c72724866ec32776126d3776117daec4388dde47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNjQwNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r447026404", "bodyText": "Use ADMIN if server should start -> Use ADMIN if the server should start", "author": "rosemarymarano", "createdAt": "2020-06-29T14:44:23Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,168 +1,158 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this Domain. Required. |\n+| `kind` | string | The type of the REST resource. Must be \"Domain\". Required. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The resource metadata. Must include the `name` and `namespace`. Required. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n-| `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n-| `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the `clusters` field. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The `clusterName` field of each entry must match a cluster that already exists in the WebLogic domain configuration. |\n+| `configOverrides` | string | Deprecated. Use `configuration.overridesConfigMap` instead. Ignored if `configuration.overridesConfigMap` is specified. The name of the ConfigMap for optional WebLogic configuration overrides. |\n+| `configOverrideSecrets` | array of string | Deprecated. Use `configuration.secrets` instead. Ignored if `configuration.secrets` is specified. A list of names of the Secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If `dataHome` is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain configuration. |\n+| `domainHome` | string | The directory containing the WebLogic domain configuration inside the container. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n+| `domainHomeInImage` | Boolean | Deprecated. Use `domainHomeSourceType` instead. Ignored if `domainHomeSourceType` is specified. True indicates that the domain home file system is present in the container image specified by the image field. False indicates that the domain home file system is located on a persistent volume. Defaults to unset. |\n+| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is present in the container image specified by the `image` field. PersistentVolume indicates that the domain home file system is located on a persistent volume. FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified, it overrides the value of `domainHomeInImage`. If both fields are unspecified, then `domainHomeSourceType` defaults to Image. |\n+| `domainUID` | string | Domain unique identifier. It is recommended that this value be unique to assist in future work to identify related domains in active-passive scenarios across data centers; however, it is only required that this value be unique within the namespace, similarly to the names of Kubernetes resources. This value is distinct and need not match the domain name from the WebLogic domain configuration. Defaults to the value of `metadata.name`. |\n+| `httpAccessLogInLogHome` | Boolean | Specifies whether the server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain configuration. Defaults to true. |\n+| `image` | string | The WebLogic container image; required when `domainHomeSourceType` is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n+| `imagePullPolicy` | string | The image pull policy for the WebLogic container image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise. |\n+| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull Secrets for the WebLogic container image. |\n+| `includeServerOutInPodLog` | Boolean | Specifies whether the server .out file will be included in the Pod's log. Defaults to true. |\n+| `introspectVersion` | string | Changes to this field cause the operator to repeat its introspection of the WebLogic domain configuration. Repeating introspection is required for the operator to recognize changes to the domain configuration, such as adding a new WebLogic cluster or Managed Server instance, to regenerate configuration overrides, or to regenerate the WebLogic domain home when the `domainHomeSourceType` is FromModel. Introspection occurs automatically, without requiring change to this field, when servers are first started or restarted after a full domain shutdown. For the FromModel `domainHomeSourceType`, introspection also occurs when a running server must be restarted because of changes to any of the fields listed here: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#properties-that-cause-servers-to-be-restarted. See also `overridesConfigurationStrategy`. |\n+| `logHome` | string | The directory in a server's container in which to store the domain, Node Manager, server logs, server *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if `logHomeEnabled` is false. |\n+| `logHomeEnabled` | Boolean | Specifies whether the log home folder is enabled. Defaults to true if `domainHomeSourceType` is PersistentVolume; false, otherwise. |\n+| `managedServers` | array of [Managed Server](#managed-server) | Lifecycle options for individual Managed Servers, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart a named server instance. The `serverName` field of each entry must match a Managed Server that already exists in the WebLogic domain configuration or that matches a dynamic cluster member based on the server template. |\n+| `maxClusterConcurrentStartup` | number | The maximum number of cluster member Managed Server instances that the operator will start in parallel for a given cluster, if `maxConcurrentStartup` is not specified for a specific cluster under the `clusters` field. A value of 0 means there is no configured limit. Defaults to 0. |\n+| `replicas` | number | The default number of cluster member Managed Server instances to start for each WebLogic cluster in the domain configuration, unless `replicas` is specified for that cluster under the `clusters` field. For each cluster, the operator will sort cluster member Managed Server names from the WebLogic domain configuration by normalizing any numbers in the Managed Server name and then sorting alphabetically. This is done so that server names such as \"managed-server10\" come after \"managed-server9\". The operator will then start Managed Servers from the sorted list, up to the `replicas` count, unless specific Managed Servers are specified as starting in their entry under the `managedServers` field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the `replicas` count, by finding further cluster members in the sorted list that are not already started. If cluster members are started because of their entries under `managedServers` then a cluster may have more cluster members running than its `replicas` count. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes Services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic Server instance. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers. |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |", "originalCommit": "c72724866ec32776126d3776117daec4388dde47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzNjU1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1772#discussion_r447036551", "bodyText": "to \"True\" More info: -> to \"True\". More info: (missing period)", "author": "rosemarymarano", "createdAt": "2020-06-29T14:58:00Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -1,168 +1,158 @@\n ### Domain\n \n-Domain represents a WebLogic domain and how it will be realized in the Kubernetes cluster.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `apiVersion` | string | The API version for the Domain. |\n-| `kind` | string | The type of resource. Must be 'Domain'. |\n-| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The domain meta-data. Must include the name and namespace. |\n-| `spec` | [Domain Spec](#domain-spec) | The specification of the domain. Required. |\n-| `status` | [Domain Status](#domain-status) | The current status of the domain. Updated by the operator. |\n+| `apiVersion` | string | The API version defines the versioned schema of this Domain. Required. |\n+| `kind` | string | The type of the REST resource. Must be \"Domain\". Required. |\n+| `metadata` | [Object Meta](k8s1.13.5.md#object-meta) | The resource metadata. Must include the `name` and `namespace`. Required. |\n+| `spec` | [Domain Spec](#domain-spec) | The specification of the operation of the WebLogic domain. Required. |\n+| `status` | [Domain Status](#domain-status) | The current status of the operation of the WebLogic domain. Updated automatically by the operator. |\n \n ### Domain Spec\n \n-DomainSpec is a description of a domain.\n+The specification of the operation of the WebLogic domain. Required.\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminServer` | [Admin Server](#admin-server) | Configuration for the Administration Server. |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of replicas to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration, if this is not specified at the cluster level. Defaults to true. |\n-| `clusters` | array of [Cluster](#cluster) | Configuration for the clusters. |\n-| `configOverrides` | string | Deprecated. Use configuration.overridesConfigMap instead. Ignored if configuration.overridesConfigMap is specified. The name of the config map for optional WebLogic configuration overrides. |\n-| `configOverrideSecrets` | array of string | Deprecated. Use configuration.secrets instead. Ignored if configuration.secrets is specified. A list of names of the secrets for optional WebLogic configuration overrides. |\n+| `adminServer` | [Admin Server](#admin-server) | Lifecycle options for the Administration Server, including Java options, environment variables, additional Pod content, and which channels or network access points should be exposed using a NodePort Service. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Whether to allow the number of running cluster member Managed Server instances to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration, if this is not specified for a specific cluster under the `clusters` field. Defaults to true. |\n+| `clusters` | array of [Cluster](#cluster) | Lifecycle options for all of the Managed Server members of a WebLogic cluster, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart cluster members. The `clusterName` field of each entry must match a cluster that already exists in the WebLogic domain configuration. |\n+| `configOverrides` | string | Deprecated. Use `configuration.overridesConfigMap` instead. Ignored if `configuration.overridesConfigMap` is specified. The name of the ConfigMap for optional WebLogic configuration overrides. |\n+| `configOverrideSecrets` | array of string | Deprecated. Use `configuration.secrets` instead. Ignored if `configuration.secrets` is specified. A list of names of the Secrets for optional WebLogic configuration overrides. |\n | `configuration` | [Configuration](#configuration) | Models and overrides affecting the WebLogic domain configuration. |\n-| `dataHome` | string | An optional, in-pod location for data storage of default and custom file stores. If dataHome is not specified or its value is either not set or empty (e.g. dataHome: \"\") then the data storage directories are determined from the WebLogic domain home configuration. |\n-| `domainHome` | string | The folder for the WebLogic Domain. Not required. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n-| `domainHomeInImage` | Boolean | Deprecated. Use domainHomeSourceType instead. Ignored if domainHomeSourceType is specified. True indicates that the domain home file system is contained in the Docker image specified by the image field. False indicates that the domain home file system is located on a persistent volume. |\n-| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is contained in the Docker image specified by the image field. PersistentVolume indicates that the domain home file system is located on a persistent volume.  FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified it overrides the value of domainHomeInImage. If both fields are unspecified then domainHomeSourceType defaults to Image. |\n-| `domainUID` | string | Domain unique identifier. Must be unique across the Kubernetes cluster. Not required. Defaults to the value of metadata.name. |\n-| `httpAccessLogInLogHome` | Boolean | If true (the default), then server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain home configuration. |\n-| `image` | string | The WebLogic Docker image; required when domainHomeSourceType is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n-| `imagePullPolicy` | string | The image pull policy for the WebLogic Docker image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest, IfNotPresent otherwise. |\n-| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull secrets for the WebLogic Docker image. |\n-| `includeServerOutInPodLog` | Boolean | If true (the default), then the server .out file will be included in the pod's stdout. |\n-| `introspectVersion` | string | If the domain is running, the operator will restart its introspector job when this value is changed. This field is ignored when the domainHomeSourceType is FromModel. See also overridesConfigurationStrategy. |\n-| `logHome` | string | The in-pod name of the directory in which to store the domain, Node Manager, server logs, server  *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if logHomeEnabled is false. |\n-| `logHomeEnabled` | Boolean | Specified whether the log home folder is enabled. Not required. Defaults to true if domainHomeSourceType is PersistentVolume; false, otherwise. |\n-| `managedServers` | array of [Managed Server](#managed-server) | Configuration for individual Managed Servers. |\n-| `maxClusterConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for a cluster, if `maxConcurrentStartup` is not specified at the cluster level. A value of 0 (the default) means there is no configured limit. |\n-| `replicas` | number | The number of managed servers to run in any cluster that does not specify a replica count. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n-| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | The name of a pre-created Kubernetes secret, in the domain's namespace, that holds the username and password needed to boot WebLogic Server under the 'username' and 'password' fields. |\n+| `dataHome` | string | An optional, directory in a server's container for data storage of default and custom file stores. If `dataHome` is not specified or its value is either not set or empty then the data storage directories are determined from the WebLogic domain configuration. |\n+| `domainHome` | string | The directory containing the WebLogic domain configuration inside the container. Defaults to /shared/domains/domains/<domainUID> if domainHomeSourceType is PersistentVolume. Defaults to /u01/oracle/user_projects/domains/ if domainHomeSourceType is Image. Defaults to /u01/domains/<domainUID> if domainHomeSourceType is FromModel. |\n+| `domainHomeInImage` | Boolean | Deprecated. Use `domainHomeSourceType` instead. Ignored if `domainHomeSourceType` is specified. True indicates that the domain home file system is present in the container image specified by the image field. False indicates that the domain home file system is located on a persistent volume. Defaults to unset. |\n+| `domainHomeSourceType` | string | Domain home file system source type: Legal values: Image, PersistentVolume, FromModel. Image indicates that the domain home file system is present in the container image specified by the `image` field. PersistentVolume indicates that the domain home file system is located on a persistent volume. FromModel indicates that the domain home file system will be created and managed by the operator based on a WDT domain model. If this field is specified, it overrides the value of `domainHomeInImage`. If both fields are unspecified, then `domainHomeSourceType` defaults to Image. |\n+| `domainUID` | string | Domain unique identifier. It is recommended that this value be unique to assist in future work to identify related domains in active-passive scenarios across data centers; however, it is only required that this value be unique within the namespace, similarly to the names of Kubernetes resources. This value is distinct and need not match the domain name from the WebLogic domain configuration. Defaults to the value of `metadata.name`. |\n+| `httpAccessLogInLogHome` | Boolean | Specifies whether the server HTTP access log files will be written to the same directory specified in `logHome`. Otherwise, server HTTP access log files will be written to the directory configured in the WebLogic domain configuration. Defaults to true. |\n+| `image` | string | The WebLogic container image; required when `domainHomeSourceType` is Image or FromModel; otherwise, defaults to container-registry.oracle.com/middleware/weblogic:12.2.1.4. |\n+| `imagePullPolicy` | string | The image pull policy for the WebLogic container image. Legal values are Always, Never and IfNotPresent. Defaults to Always if image ends in :latest; IfNotPresent, otherwise. |\n+| `imagePullSecrets` | array of [Local Object Reference](k8s1.13.5.md#local-object-reference) | A list of image pull Secrets for the WebLogic container image. |\n+| `includeServerOutInPodLog` | Boolean | Specifies whether the server .out file will be included in the Pod's log. Defaults to true. |\n+| `introspectVersion` | string | Changes to this field cause the operator to repeat its introspection of the WebLogic domain configuration. Repeating introspection is required for the operator to recognize changes to the domain configuration, such as adding a new WebLogic cluster or Managed Server instance, to regenerate configuration overrides, or to regenerate the WebLogic domain home when the `domainHomeSourceType` is FromModel. Introspection occurs automatically, without requiring change to this field, when servers are first started or restarted after a full domain shutdown. For the FromModel `domainHomeSourceType`, introspection also occurs when a running server must be restarted because of changes to any of the fields listed here: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#properties-that-cause-servers-to-be-restarted. See also `overridesConfigurationStrategy`. |\n+| `logHome` | string | The directory in a server's container in which to store the domain, Node Manager, server logs, server *.out, and optionally HTTP access log files if `httpAccessLogInLogHome` is true. Ignored if `logHomeEnabled` is false. |\n+| `logHomeEnabled` | Boolean | Specifies whether the log home folder is enabled. Defaults to true if `domainHomeSourceType` is PersistentVolume; false, otherwise. |\n+| `managedServers` | array of [Managed Server](#managed-server) | Lifecycle options for individual Managed Servers, including Java options, environment variables, additional Pod content, and the ability to explicitly start, stop, or restart a named server instance. The `serverName` field of each entry must match a Managed Server that already exists in the WebLogic domain configuration or that matches a dynamic cluster member based on the server template. |\n+| `maxClusterConcurrentStartup` | number | The maximum number of cluster member Managed Server instances that the operator will start in parallel for a given cluster, if `maxConcurrentStartup` is not specified for a specific cluster under the `clusters` field. A value of 0 means there is no configured limit. Defaults to 0. |\n+| `replicas` | number | The default number of cluster member Managed Server instances to start for each WebLogic cluster in the domain configuration, unless `replicas` is specified for that cluster under the `clusters` field. For each cluster, the operator will sort cluster member Managed Server names from the WebLogic domain configuration by normalizing any numbers in the Managed Server name and then sorting alphabetically. This is done so that server names such as \"managed-server10\" come after \"managed-server9\". The operator will then start Managed Servers from the sorted list, up to the `replicas` count, unless specific Managed Servers are specified as starting in their entry under the `managedServers` field. In that case, the specified Managed Servers will be started and then additional cluster members will be started, up to the `replicas` count, by finding further cluster members in the sorted list that are not already started. If cluster members are started because of their entries under `managedServers` then a cluster may have more cluster members running than its `replicas` count. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes Services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic Server instance. Legal values are ADMIN_ONLY, NEVER, or IF_NEEDED. Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers. |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `webLogicCredentialsSecret` | [Secret Reference](k8s1.13.5.md#secret-reference) | Reference to a Kubernetes Secret that contains the user name and password needed to boot a WebLogic Server under the `username` and `password` fields. |\n \n ### Domain Status\n \n-DomainStatus represents information about the status of a domain. Status may trail the actual state of a system.\n+The current status of the operation of the WebLogic domain. Updated automatically by the operator.\n \n | Name | Type | Description |\n | --- | --- | --- |\n | `clusters` | array of [Cluster Status](#cluster-status) | Status of WebLogic clusters in this domain. |\n-| `conditions` | array of [Domain Condition](#domain-condition) | Current service state of domain. |\n+| `conditions` | array of [Domain Condition](#domain-condition) | Current service state of the domain. |\n | `message` | string | A human readable message indicating details about why the domain is in this condition. |\n | `reason` | string | A brief CamelCase message indicating details about why the domain is in this state. |\n-| `replicas` | number | The number of running Managed Servers in the WebLogic cluster if there is only one cluster in the domain and where the cluster does not explicitly configure its replicas in a cluster specification. |\n+| `replicas` | number | The number of running cluster member Managed Servers in the WebLogic cluster if there is exactly one cluster defined in the domain configuration and where the `replicas` field is set at the `spec` level rather than for the specific cluster under `clusters`. This field is provided to support use of Kubernetes scaling for this limited use case. |\n | `servers` | array of [Server Status](#server-status) | Status of WebLogic Servers in this domain. |\n | `startTime` | DateTime | RFC 3339 date and time at which the operator started the domain. This will be when the operator begins processing and will precede when the various servers or clusters are available. |\n \n ### Admin Server\n \n-AdminServer represents the operator configuration for the Administration Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `adminService` | [Admin Service](#admin-service) | Configures which of the Administration Server's WebLogic admin channels should be exposed outside the Kubernetes cluster via a node port service. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `adminService` | [Admin Service](#admin-service) | Customization affecting the generation of the Kubernetes Service for the Administration Server. These settings can also specify the creation of a second NodePort Service to expose specific channels or network access points outside the Kubernetes cluster. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes Services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic Server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers. |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Cluster\n \n-An element representing a cluster in the domain configuration.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `allowReplicasBelowMinDynClusterSize` | Boolean | If true (the default), then the number of replicas is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain home configuration. Otherwise, the operator will ensure that the number of replicas is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. |\n-| `clusterName` | string | The name of this cluster. Required |\n-| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting ClusterIP Kubernetes services for the WebLogic cluster. |\n-| `maxConcurrentStartup` | number | The maximum number of Managed Servers that the operator will start in parallel for the cluster in response to a change in replicas count for the cluster. If more Managed Servers need to be started, the operator will wait until a Managed Server pod is in the `Ready` and `Running` state before starting the next Managed Server. A value of 0 (the default) means all Managed Servers will start in parallel. |\n+| `allowReplicasBelowMinDynClusterSize` | Boolean | Specifies whether the number of running cluster members is allowed to drop below the minimum dynamic cluster size configured in the WebLogic domain configuration. Otherwise, the operator will ensure that the number of running cluster members is not less than the minimum dynamic cluster setting. This setting applies to dynamic clusters only. Defaults to true. |\n+| `clusterName` | string | The name of the cluster. This value must match the name of a WebLogic cluster already defined in the WebLogic domain configuration. Required. |\n+| `clusterService` | [Kubernetes Resource](#kubernetes-resource) | Customization affecting Kubernetes Service generated for this WebLogic cluster. |\n+| `maxConcurrentStartup` | number | The maximum number of Managed Servers instances that the operator will start in parallel for this cluster in response to a change in the `replicas` count. If more Managed Server instances must be started, the operator will wait until a Managed Server Pod is in the `Ready` state before starting the next Managed Server instance. A value of 0 means all Managed Server instances will start in parallel. Defaults to 0. |\n | `maxUnavailable` | number | The maximum number of cluster members that can be temporarily unavailable. Defaults to 1. |\n-| `replicas` | number | The number of cluster members to run. |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `replicas` | number | The number of cluster member Managed Server instances to start for this WebLogic cluster. The operator will sort cluster member Managed Server names from the WebLogic domain configuration by normalizing any numbers in the Managed Server name and then sorting alphabetically. This is done so that server names such as \"managed-server10\" come after \"managed-server9\". The operator will then start Managed Server instances from the sorted list, up to the `replicas` count, unless specific Managed Servers are specified as starting in their entry under the `managedServers` field. In that case, the specified Managed Server instances will be started and then additional cluster members will be started, up to the `replicas` count, by finding further cluster members in the sorted list that are not already started. If cluster members are started because of their related entries under `managedServers` then this cluster may have more cluster members running than its `replicas` count. Defaults to 0. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes Services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic Server instance. Legal values are NEVER, or IF_NEEDED. Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers. |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Configuration\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified, then the operator's ConfigMap `data.introspectorJobActiveDeadlineSeconds` value is ignored. Defaults to 120 seconds. |\n | `istio` | [Istio](#istio) | The Istio service mesh integration settings. |\n | `model` | [Model](#model) | Model in image model files and properties. |\n-| `opss` | [Opss](#opss) | Configuration for OPSS security. |\n-| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n-| `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n-| `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `opss` | [Opss](#opss) | Settings for OPSS security. |\n+| `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic Servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from Secrets, the `overrideConfigMap` field, and WebLogic domain topology. Legal values are DYNAMIC, which means that the operator will distribute updated configuration overrides dynamically to running servers, and ON_RESTART, which means that servers will use updated configuration overrides only after the server's next restart. The selection of ON_RESTART will not cause servers to restart when there are updated configuration overrides available. See also `introspectVersion`. Defaults to DYNAMIC. |\n+| `overridesConfigMap` | string | The name of the ConfigMap for WebLogic configuration overrides. If this field is specified, then the value of spec.configOverrides is ignored. |\n+| `secrets` | array of string | A list of names of the Secrets for WebLogic configuration overrides or model. If this field is specified, then the value of spec.configOverrideSecrets is ignored. |\n \n ### Managed Server\n \n-ManagedServer represents the operator configuration for a single Managed Server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `restartVersion` | string | If present, every time this value is updated the operator will restart the required servers. |\n-| `serverName` | string | The name of the Managed Server. Required. |\n-| `serverPod` | [Server Pod](#server-pod) | Configuration affecting server pods. |\n-| `serverService` | [Server Service](#server-service) | Customization affecting ClusterIP Kubernetes services for WebLogic Server instances. |\n-| `serverStartPolicy` | string | The strategy for deciding whether to start a server. Legal values are ALWAYS, NEVER, or IF_NEEDED. |\n-| `serverStartState` | string | The state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n+| `restartVersion` | string | Changes to this field cause the operator to restart WebLogic Server instances. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#restarting-servers. |\n+| `serverName` | string | The name of the Managed Server. This name must match the name of a Managed Server instance or of a dynamic cluster member name from a server template already defined in the WebLogic domain configuration. Required. |\n+| `serverPod` | [Server Pod](#server-pod) | Customization affecting the generation of Pods for WebLogic Server instances. |\n+| `serverService` | [Server Service](#server-service) | Customization affecting the generation of Kubernetes Services for WebLogic Server instances. |\n+| `serverStartPolicy` | string | The strategy for deciding whether to start a WebLogic Server instance. Legal values are ALWAYS, NEVER, or IF_NEEDED. Defaults to IF_NEEDED. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-lifecycle/startup/#starting-and-stopping-servers. |\n+| `serverStartState` | string | The WebLogic runtime state in which the server is to be started. Use ADMIN if server should start in the admin state. Defaults to RUNNING. |\n \n ### Server Pod\n \n-ServerPod describes the configuration for a Kubernetes pod for a server.\n-\n | Name | Type | Description |\n | --- | --- | --- |\n-| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the pod's scheduling constraints |\n-| `annotations` | Map | The annotations to be attached to generated resources. |\n-| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server pod. |\n-| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching pod-level attributes. |\n-| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to add to a server. |\n-| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server pod. |\n-| `labels` | Map | The labels to be attached to generated resources. The label names must not start with 'weblogic.'. |\n-| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a server. |\n-| `nodeName` | string | NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements. |\n-| `nodeSelector` | Map | Selector which must match a node's labels for the pod to be scheduled on that node. |\n+| `affinity` | [Affinity](k8s1.13.5.md#affinity) | If specified, the Pod's scheduling constraints. |\n+| `annotations` | Map | The annotations to be added to generated resources. |\n+| `containers` | array of [Container](k8s1.13.5.md#container) | Additional containers to be included in the server Pod. |\n+| `containerSecurityContext` | [Security Context](k8s1.13.5.md#security-context) | Container-level security attributes. Will override any matching Pod-level attributes. |\n+| `env` | array of [Env Var](k8s1.13.5.md#env-var) | A list of environment variables to set in the container running a WebLogic Server instance. More info: https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#jvm-memory-and-java-option-environment-variables. |\n+| `initContainers` | array of [Container](k8s1.13.5.md#container) | Initialization containers to be included in the server Pod. |\n+| `labels` | Map | The labels to be added to generated resources. The label names must not start with \"weblogic.\". |\n+| `livenessProbe` | [Probe Tuning](#probe-tuning) | Settings for the liveness probe associated with a WebLogic Server instance. |\n+| `nodeName` | string | NodeName is a request to schedule this Pod onto a specific Node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits the resource requirements. |\n+| `nodeSelector` | Map | Selector which must match a Node's labels for the Pod to be scheduled on that Node. |\n | `podSecurityContext` | [Pod Security Context](k8s1.13.5.md#pod-security-context) | Pod-level security attributes. |\n-| `priorityClassName` | string | If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default. |\n-| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md |\n-| `readinessProbe` | [Probe Tuning](#probe-tuning) | Settings for the readiness probe associated with a server. |\n-| `resources` | [Resource Requirements](k8s1.13.5.md#resource-requirements) | Memory and CPU minimum requirements and limits for the server. |\n-| `restartPolicy` | string | Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy |\n-| `runtimeClassName` | string | RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://github.com/kubernetes/community/blob/master/keps/sig-node/0014-runtime-class.md This is an alpha feature and may change in the future. |\n-| `schedulerName` | string | If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler. |\n-| `serviceAccountName` | string | Name of the ServiceAccount to be used to run this pod. If it is not set, default ServiceAccount will be used. The ServiceAccount has to exist at the time the pod is created. |\n-| `shutdown` | [Shutdown](#shutdown) | Configures how the operator should shutdown the server instance. |\n-| `tolerations` | array of [Toleration](k8s1.13.5.md#toleration) | If specified, the pod's tolerations. |\n-| `volumeMounts` | array of [Volume Mount](k8s1.13.5.md#volume-mount) | Additional volume mounts for the server pod. |\n-| `volumes` | array of [Volume](k8s1.13.5.md#volume) | Additional volumes to be created in the server pod. |\n+| `priorityClassName` | string | If specified, indicates the Pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be the default or zero, if there is no default. |\n+| `readinessGates` | array of [Pod Readiness Gate](k8s1.13.5.md#pod-readiness-gate) | If specified, all readiness gates will be evaluated for Pod readiness. A Pod is ready when all its containers are ready AND all conditions specified in the readiness gates have a status equal to \"True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md. |", "originalCommit": "c72724866ec32776126d3776117daec4388dde47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "913667fc01feeaa57ce9bb37085ba01c8299ed67", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/913667fc01feeaa57ce9bb37085ba01c8299ed67", "message": "Even more review", "committedDate": "2020-06-29T16:10:56Z", "type": "commit"}]}