{"pr_number": 1518, "pr_title": "overall doc edits", "pr_createdAt": "2020-03-31T18:56:48Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518", "timeline": [{"oid": "0e94c94f0d7df93dbe446264acf5025dbd667f6b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0e94c94f0d7df93dbe446264acf5025dbd667f6b", "message": "overall doc edits", "committedDate": "2020-03-31T18:44:25Z", "type": "commit"}, {"oid": "6ff45a81cf5049a5047614db531277391aa4fde3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6ff45a81cf5049a5047614db531277391aa4fde3", "message": "fix a mistake I created", "committedDate": "2020-03-31T19:00:38Z", "type": "commit"}, {"oid": "409901708f2af9ee4681c90b1111f62c6d233358", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/409901708f2af9ee4681c90b1111f62c6d233358", "message": "update Kubernetes prereqs", "committedDate": "2020-04-01T12:32:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzI1Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401577257", "bodyText": "I don't think that \"deploy\" makes sense here, \"create\" is probably more accurate, or \"define\" or \"expose\"", "author": "markxnelson", "createdAt": "2020-04-01T12:30:28Z", "path": "docs-source/content/faq/external-clients.md", "diffHunk": "@@ -29,15 +29,15 @@ Here are the steps:\n \n - Review the [Security notes](#security-notes).\n \n-##### Kubernetes NodePorts\n+##### Kubernetes `NodePorts`\n \n-The Kubernetes NodePorts approach for giving external WebLogic EJB or JMS clients access to a Kubernetes hosted WebLogic cluster involves configuring a network channel on the desired WebLogic cluster that accepts T3 protocol traffic, and deploying a Kubernetes NodePort that redirects external network traffic on the Kubernetes nodes to the network channel.\n+The Kubernetes `NodePorts` approach for giving external WebLogic EJB or JMS clients access to a Kubernetes hosted WebLogic cluster involves configuring a network channel on the desired WebLogic cluster that accepts T3 protocol traffic, and deploying a Kubernetes `NodePort` that redirects external network traffic on the Kubernetes nodes to the network channel.\n \n Here are the steps:\n \n - Configure a custom channel for the T3 protocol in WebLogic that specifies an external address and port that are suitable for remote client use.  See [Adding a WebLogic Custom Channel](#adding-a-weblogic-custom-channel).\n \n-- Deploy a Kubernetes NodePort to publicly expose the WebLogic ports. See [Setting up a NodePort](#setting-up-a-nodeport).\n+- Deploy a Kubernetes `NodePort` to publicly expose the WebLogic ports. See [Setting up a `NodePort`](#setting-up-a-nodeport).", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMTc2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401611765", "bodyText": "I like \"expose\".  Kubernetes documentation uses this term: https://kubernetes.io/docs/concepts/services-networking/service/", "author": "rjeberhard", "createdAt": "2020-04-01T13:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MTA0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401641043", "bodyText": "I changed all the instances of \"deploy\" to \"expose\", except in this one bulleted item, where I thought that \"define\" was the correct term to use, \"Define a Kubernetes NodePort to publicly expose the WebLogic ports. Please correct me if I'm wrong and I will change it to \"expose.\"", "author": "rosemarymarano", "createdAt": "2020-04-01T14:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MjA0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401642042", "bodyText": "That sounds reasonable to me.", "author": "rjeberhard", "createdAt": "2020-04-01T14:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzI1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Nzc2Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401577767", "bodyText": "each machine that hosts -> each worker node in", "author": "markxnelson", "createdAt": "2020-04-01T12:31:24Z", "path": "docs-source/content/faq/external-clients.md", "diffHunk": "@@ -136,21 +136,21 @@ In this example:\n \n - Additional steps are required for external clients beyond configuring the custom channel - see [Approaches](#approaches).\n \n-#### Setting up a NodePort\n+#### Setting up a `NodePort`\n \n ##### Getting started\n \n-A Kubernetes NodePort exposes a port on each machine that hosts the Kubernetes cluster where the port is accessible from outside of a Kubernetes cluster. This port redirects network traffic to pods within the Kubernetes cluster. Setting up a Kubernetes NodePort is one approach for giving external WebLogic clients access to JMS or EJBs.\n+A Kubernetes `NodePort` exposes a port on each machine that hosts the Kubernetes cluster where the port is accessible from outside of a Kubernetes cluster. This port redirects network traffic to pods within the Kubernetes cluster. Setting up a Kubernetes `NodePort` is one approach for giving external WebLogic clients access to JMS or EJBs.", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Nzg1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401577851", "bodyText": "(they are not exposed on masters)", "author": "markxnelson", "createdAt": "2020-04-01T12:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Nzc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5NTExMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401595111", "bodyText": "Do you want this parenthetical comment, (they are not exposed on masters), added also?", "author": "rosemarymarano", "createdAt": "2020-04-01T12:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Nzc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5ODE5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401598192", "bodyText": "i think it is subject to configuration... either leave it out, or say ..not *normally* exposed..", "author": "markxnelson", "createdAt": "2020-04-01T13:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Nzc2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3ODE2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401578165", "bodyText": "deployed -> created/exposed/defined", "author": "markxnelson", "createdAt": "2020-04-01T12:32:09Z", "path": "docs-source/content/faq/external-clients.md", "diffHunk": "@@ -136,21 +136,21 @@ In this example:\n \n - Additional steps are required for external clients beyond configuring the custom channel - see [Approaches](#approaches).\n \n-#### Setting up a NodePort\n+#### Setting up a `NodePort`\n \n ##### Getting started\n \n-A Kubernetes NodePort exposes a port on each machine that hosts the Kubernetes cluster where the port is accessible from outside of a Kubernetes cluster. This port redirects network traffic to pods within the Kubernetes cluster. Setting up a Kubernetes NodePort is one approach for giving external WebLogic clients access to JMS or EJBs.\n+A Kubernetes `NodePort` exposes a port on each machine that hosts the Kubernetes cluster where the port is accessible from outside of a Kubernetes cluster. This port redirects network traffic to pods within the Kubernetes cluster. Setting up a Kubernetes `NodePort` is one approach for giving external WebLogic clients access to JMS or EJBs.\n \n-If an EJB or JMS service is running on an Administration Server, then you can skip the rest of this section and use the `spec.adminServer.adminService.channels` domain resource attribute to have the operator create a NodePort for you. See [Reference - Domain resource]({{<relref \"/reference/domain-resource/_index.md\">}}). Otherwise, if the EJB or JMS service is running in a WebLogic cluster or standalone WebLogic Managed Server, and you desire to provide access to the service using a NodePort, then the NodePort must be deployed 'manually' - see the following sample and table.\n+If an EJB or JMS service is running on an Administration Server, then you can skip the rest of this section and use the `spec.adminServer.adminService.channels` domain resource attribute to have the operator create a `NodePort` for you. See [Reference - Domain resource]({{<relref \"/reference/domain-resource/_index.md\">}}). Otherwise, if the EJB or JMS service is running in a WebLogic cluster or standalone WebLogic Managed Server, and you desire to provide access to the service using a `NodePort`, then the `NodePort` must be deployed 'manually' - see the following sample and table.", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3ODI5Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401578293", "bodyText": "deploys ..", "author": "markxnelson", "createdAt": "2020-04-01T12:32:21Z", "path": "docs-source/content/faq/external-clients.md", "diffHunk": "@@ -136,21 +136,21 @@ In this example:\n \n - Additional steps are required for external clients beyond configuring the custom channel - see [Approaches](#approaches).\n \n-#### Setting up a NodePort\n+#### Setting up a `NodePort`\n \n ##### Getting started\n \n-A Kubernetes NodePort exposes a port on each machine that hosts the Kubernetes cluster where the port is accessible from outside of a Kubernetes cluster. This port redirects network traffic to pods within the Kubernetes cluster. Setting up a Kubernetes NodePort is one approach for giving external WebLogic clients access to JMS or EJBs.\n+A Kubernetes `NodePort` exposes a port on each machine that hosts the Kubernetes cluster where the port is accessible from outside of a Kubernetes cluster. This port redirects network traffic to pods within the Kubernetes cluster. Setting up a Kubernetes `NodePort` is one approach for giving external WebLogic clients access to JMS or EJBs.\n \n-If an EJB or JMS service is running on an Administration Server, then you can skip the rest of this section and use the `spec.adminServer.adminService.channels` domain resource attribute to have the operator create a NodePort for you. See [Reference - Domain resource]({{<relref \"/reference/domain-resource/_index.md\">}}). Otherwise, if the EJB or JMS service is running in a WebLogic cluster or standalone WebLogic Managed Server, and you desire to provide access to the service using a NodePort, then the NodePort must be deployed 'manually' - see the following sample and table.\n+If an EJB or JMS service is running on an Administration Server, then you can skip the rest of this section and use the `spec.adminServer.adminService.channels` domain resource attribute to have the operator create a `NodePort` for you. See [Reference - Domain resource]({{<relref \"/reference/domain-resource/_index.md\">}}). Otherwise, if the EJB or JMS service is running in a WebLogic cluster or standalone WebLogic Managed Server, and you desire to provide access to the service using a `NodePort`, then the `NodePort` must be deployed 'manually' - see the following sample and table.\n \n {{% notice note %}}\n-Setting up a NodePort usually also requires setting up a custom network channel. See [Adding a WebLogic Custom Channel](#adding-a-weblogic-custom-channel).\n+Setting up a `NodePort` usually also requires setting up a custom network channel. See [Adding a WebLogic Custom Channel](#adding-a-weblogic-custom-channel).\n {{% /notice %}}\n \n-##### Sample NodePort resource\n+##### Sample `NodePort` resource\n \n-The following NodePort YAML deploys an external node port of `30999` and internal port `7999` for a domain UID of `DOMAIN_UID`, a domain name of `DOMAIN_NAME`, and a cluster name of `CLUSTER_NAME`. It assumes that `7999` corresponds to a T3 protocol port of a channel that's configured on your WebLogic cluster.\n+The following `NodePort` YAML deploys an external node port of `30999` and internal port `7999` for a domain UID of `DOMAIN_UID`, a domain name of `DOMAIN_NAME`, and a cluster name of `CLUSTER_NAME`. It assumes that `7999` corresponds to a T3 protocol port of a channel that's configured on your WebLogic cluster.", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MDAwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401580000", "bodyText": "I would add a note:  The NodePort approach is only available when worker nodes are accessible by the clients, for example when they have public IP addresses.  If private worker nodes are used and access to them is only possible through a load balancer or bastion, then the NodePort approach is not a valid option to provide access to external clients.", "author": "markxnelson", "createdAt": "2020-04-01T12:35:15Z", "path": "docs-source/content/faq/external-clients.md", "diffHunk": "@@ -29,15 +29,15 @@ Here are the steps:\n \n - Review the [Security notes](#security-notes).\n \n-##### Kubernetes NodePorts\n+##### Kubernetes `NodePorts`\n \n-The Kubernetes NodePorts approach for giving external WebLogic EJB or JMS clients access to a Kubernetes hosted WebLogic cluster involves configuring a network channel on the desired WebLogic cluster that accepts T3 protocol traffic, and deploying a Kubernetes NodePort that redirects external network traffic on the Kubernetes nodes to the network channel.\n+The Kubernetes `NodePorts` approach for giving external WebLogic EJB or JMS clients access to a Kubernetes hosted WebLogic cluster involves configuring a network channel on the desired WebLogic cluster that accepts T3 protocol traffic, and deploying a Kubernetes `NodePort` that redirects external network traffic on the Kubernetes nodes to the network channel.\n ", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MDY3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401580670", "bodyText": "\"setting domain namespaces\" feels awkward", "author": "markxnelson", "createdAt": "2020-04-01T12:36:28Z", "path": "docs-source/content/faq/namespace-management.md", "diffHunk": "@@ -5,23 +5,23 @@ draft: false\n weight: 1\n ---\n \n-Each WebLogic operator deployment manages a number of Kubernetes namespaces. For information about setting domain namespaces, see [Operator Helm configuration values]({{< relref \"/userguide/managing-operators/using-the-operator/using-helm#operator-helm-configuration-values\" >}}). A number of Kubernetes resources\n+Each operator deployment manages a number of Kubernetes namespaces. For information about setting domain namespaces, see [Operator Helm configuration values]({{< relref \"/userguide/managing-operators/using-the-operator/using-helm#operator-helm-configuration-values\" >}}). A number of Kubernetes resources", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MTU3Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401581573", "bodyText": "probably should add a note to say that there can be multiple operators in a k8s cluster, and in that case, care must be taken to ensure their respective lists of domainNamespaces do not overlap.", "author": "markxnelson", "createdAt": "2020-04-01T12:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MDY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MTkyMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401581920", "bodyText": "to be pre-created -> already exist", "author": "markxnelson", "createdAt": "2020-04-01T12:38:31Z", "path": "docs-source/content/faq/namespace-management.md", "diffHunk": "@@ -53,8 +53,8 @@ If you don't know the release name of the operator, you can use `helm ls` to lis\n $ helm ls\n ```\n \n-#### Add a Kubernetes namespace to an operator\n-If you want a WebLogic operator deployment to manage a namespace, you need to add the namespace to the operator's `domainNamespaces` list. Note that the namespace has to be pre-created, for example, using the `kubectl create` command.\n+#### Add a Kubernetes namespace to the operator\n+If you want an operator deployment to manage a namespace, you need to add the namespace to the operator's `domainNamespaces` list. Note that the namespace has to be pre-created, for example, using the `kubectl create` command.", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4Mjk0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401582941", "bodyText": "we need to update this -- our recommendation should be to use both an oci lb which sends traffic to the ingress controller and then handle routing on the ingress.  this is fine for now - but we should probably make a jira so we (i) don't forget to update this", "author": "markxnelson", "createdAt": "2020-04-01T12:40:09Z", "path": "docs-source/content/faq/oci-lb.md", "diffHunk": "@@ -9,19 +9,19 @@ If you are running your Kubernetes cluster on Oracle Container Engine\n for Kubernetes (commonly known as OKE), you can have OCI automatically\n provision load balancers for you by creating a `Service` of type\n `LoadBalancer` instead of (or in addition to) installing an\n-ingress controller like Traefik or Voyager.\n+Ingress controller like Traefik or Voyager.\n \n OKE Kubernetes worker nodes normally do not have public IP addresses.\n This means that the `NodePort` services created by the operator are\n not usable, because they would expose ports on the worker node's private\n IP addresses only, which are not reachable from outside the cluster.  \n-Instead, you can use an OCI Load Balancer to provide access\n+Instead, you can use an OCI load balancer to provide access\n to services running in OKE.\n \n {{% notice note %}}\n-It is also possible, if desirable, to have an OCI Load Balancer route\n-traffic to an ingress controller running inside the Kubernetes cluster\n-and have that ingress controller in turn route traffic to services in the\n+It is also possible, if desirable, to have an OCI load balancer route", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MzE1Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401583152", "bodyText": "I think \"Ingress Controller\" might be more correct for this", "author": "markxnelson", "createdAt": "2020-04-01T12:40:30Z", "path": "docs-source/content/faq/oci-lb.md", "diffHunk": "@@ -9,19 +9,19 @@ If you are running your Kubernetes cluster on Oracle Container Engine\n for Kubernetes (commonly known as OKE), you can have OCI automatically\n provision load balancers for you by creating a `Service` of type\n `LoadBalancer` instead of (or in addition to) installing an\n-ingress controller like Traefik or Voyager.\n+Ingress controller like Traefik or Voyager.\n \n OKE Kubernetes worker nodes normally do not have public IP addresses.\n This means that the `NodePort` services created by the operator are\n not usable, because they would expose ports on the worker node's private\n IP addresses only, which are not reachable from outside the cluster.  \n-Instead, you can use an OCI Load Balancer to provide access\n+Instead, you can use an OCI load balancer to provide access\n to services running in OKE.\n \n {{% notice note %}}\n-It is also possible, if desirable, to have an OCI Load Balancer route\n-traffic to an ingress controller running inside the Kubernetes cluster\n-and have that ingress controller in turn route traffic to services in the\n+It is also possible, if desirable, to have an OCI load balancer route\n+traffic to an Ingress controller running inside the Kubernetes cluster", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxOTUyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401619527", "bodyText": "Hmmm. We don't capitalize controller anywhere else in the docs, except where it is part of a product name, such as Voyager Ingress Controller. In the Kubernetes docs, it's not capitalized (and Ingress is not consistently capitalized! Sheesh). Still want me to capitalize these two instances of controller or all of them?", "author": "rosemarymarano", "createdAt": "2020-04-01T13:35:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MzE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyMDQyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401620429", "bodyText": "ok that's fine, leave it as is", "author": "markxnelson", "createdAt": "2020-04-01T13:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MzE1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4NDg4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401584880", "bodyText": "2.3 and later\n1.2.2 and later", "author": "markxnelson", "createdAt": "2020-04-01T12:43:23Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -6,7 +6,7 @@ weight: 1\n \n ### Overview\n \n-WebLogic Kubernetes Operator version 2.3 includes experimental support for Istio 1.2.2.\n+WebLogic Server Kubernetes Operator version 2.3 includes experimental support for Istio 1.2.2.", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4NTA2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401585065", "bodyText": "only -> and later (up to 1.5)", "author": "markxnelson", "createdAt": "2020-04-01T12:43:40Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -16,22 +16,22 @@ other components and services that have tracing enabled.\n \n ### Limitations\n \n-The current experimental support for Istio has the current limitations:\n+The current experimental support for Istio has these limitations:\n \n-* It is tested only with Istio 1.2.2, however it is tested with both single and \n+* It is tested with Istio 1.2.2 only, however it is tested with both single and", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4NTc2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1518#discussion_r401585769", "bodyText": "I think Azure Load Balancer is a product name", "author": "markxnelson", "createdAt": "2020-04-01T12:44:53Z", "path": "docs-source/content/userguide/introduction/introduction.md", "diffHunk": "@@ -53,15 +53,15 @@ Container Services for use with Kubernetes* on OCI Compute, and on \"authorized c\n ### Microsoft Azure Kubernetes Service\n \n [Azure Kubernetes Service (AKS)](https://docs.microsoft.com/en-us/azure/aks/) is a hosted Kubernetes environment.  The WebLogic Kubernetes\n-Operator, Oracle WebLogic Sever 12c and Oracle Fusion Middleware Infrastructure 12c are fully supported and certified on Azure Kubernetes Service (as per the documents\n+Operator, Oracle WebLogic Sever 12c, and Oracle Fusion Middleware Infrastructure 12c are fully supported and certified on Azure Kubernetes Service (as per the documents\n referenced above).\n \n AKE support and limitations:\n \n-* Both \"domain in image\" and \"domain on persistent volume\" models are supported.  \n-* For domain on persistent volume we support Azure Files volumes accessed through\n+* Both Domain in Image and Domain in PV domain home source types are supported.  \n+* For Domain in PV, we support Azure Files volumes accessed through\n   a persistent volume claim - see [here](https://docs.microsoft.com/en-us/azure/aks/azure-files-volume).\n-* Azure Load Balancers are supported when provisioned using a Kubernetes service of `type=LoadBalancer`.\n+* Azure load balancers are supported when provisioned using a Kubernetes service of `type=LoadBalancer`.", "originalCommit": "6ff45a81cf5049a5047614db531277391aa4fde3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e2b4d065fc1312d4619fc1ee88bc5ce4247b301a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e2b4d065fc1312d4619fc1ee88bc5ce4247b301a", "message": "incorporate edits from Ryan and Mark", "committedDate": "2020-04-01T14:21:10Z", "type": "commit"}, {"oid": "b3a0a9b320c2dbd7e3d1c72a260c2eefa3decb1c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b3a0a9b320c2dbd7e3d1c72a260c2eefa3decb1c", "message": "fix typo", "committedDate": "2020-04-01T18:40:25Z", "type": "commit"}, {"oid": "5a4c66543834b253bb6db74529b0b39de24a5d4b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5a4c66543834b253bb6db74529b0b39de24a5d4b", "message": "fix my mistake", "committedDate": "2020-04-01T19:28:34Z", "type": "commit"}, {"oid": "8705c79f1cfc7aca95ea7899dbb30503438e74ec", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8705c79f1cfc7aca95ea7899dbb30503438e74ec", "message": "minor fixes", "committedDate": "2020-04-01T19:50:31Z", "type": "commit"}]}