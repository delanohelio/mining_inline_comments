{"pr_number": 1702, "pr_title": "Correct affinity merging logic", "pr_createdAt": "2020-06-03T11:57:28Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702", "timeline": [{"oid": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c", "message": "Correct affinity merging logic", "committedDate": "2020-06-02T22:44:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434696334", "bodyText": "If to.getPreferred..() was null, does the array preferredDuringSchedulingIgnoredDuringExecution contains element from from.getPreferred...()?", "author": "alai8", "createdAt": "2020-06-03T16:24:02Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);", "originalCommit": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNjgzMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434706833", "bodyText": "Good catch... This bug is also in the code I copied this from (look at copyValues(V1Capabilities, V1Capabilities)).", "author": "rjeberhard", "createdAt": "2020-06-03T16:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NzI1Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434747257", "bodyText": "@alai8, this is fixed... can you please recheck?", "author": "rjeberhard", "createdAt": "2020-06-03T17:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5ODA0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434698042", "bodyText": "do we need deep copy here?", "author": "alai8", "createdAt": "2020-06-03T16:26:34Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);\n     }\n+\n     if (to.getRequiredDuringSchedulingIgnoredDuringExecution() == null) {\n       to.setRequiredDuringSchedulingIgnoredDuringExecution(from.getRequiredDuringSchedulingIgnoredDuringExecution());", "originalCommit": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNzM1NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434707354", "bodyText": "No, I don't think we do. You will get lists that contain all of collected terms, which is the intent.", "author": "rjeberhard", "createdAt": "2020-06-03T16:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5ODA0Mg=="}], "type": "inlineReview"}, {"oid": "72615b07dcd264c06a652fb7fb76e3aeffbfdba1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/72615b07dcd264c06a652fb7fb76e3aeffbfdba1", "message": "Address review comments", "committedDate": "2020-06-03T17:42:44Z", "type": "commit"}]}