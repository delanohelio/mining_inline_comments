{"pr_number": 2077, "pr_title": "OWLS-77957 - Populate server and domain related env variables to init containers", "pr_createdAt": "2020-11-30T14:53:12Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077", "timeline": [{"oid": "a71372d742c359585a965a9ac42a49c4f1d945e7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a71372d742c359585a965a9ac42a49c4f1d945e7", "message": "OWLS-77957 - Populate server and domain related env variables to init containers", "committedDate": "2020-11-30T03:56:44Z", "type": "commit"}, {"oid": "3a3a6a781b1e598e1f5b5208affd4bf37c19b8ec", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3a3a6a781b1e598e1f5b5208affd4bf37c19b8ec", "message": "Revised change to include existing init containers env variables in addition to server and domain related env variables.", "committedDate": "2020-12-01T13:58:12Z", "type": "commit"}, {"oid": "97838bbc19d1e78d0c3fc27a2ca0278fe9ff5bf3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/97838bbc19d1e78d0c3fc27a2ca0278fe9ff5bf3", "message": "Added new unit test and minor change", "committedDate": "2020-12-01T18:00:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTAwNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533645005", "bodyText": "should env var configued in initContainer take precedence over those configured in server or cluster?", "author": "alai8", "createdAt": "2020-12-01T18:52:06Z", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/PodStepContext.java", "diffHunk": "@@ -588,14 +589,22 @@ private static String formatHashLabel(String hash) {\n   protected V1PodSpec createSpec(TuningParameters tuningParameters) {\n     V1PodSpec podSpec = createPodSpec(tuningParameters)\n         .readinessGates(getReadinessGates())\n-        .initContainers(getServerSpec().getInitContainers());\n+        .initContainers(getServerSpec().getInitContainers().stream()\n+                .map(c -> c.env(createEnv(c, tuningParameters))).collect(Collectors.toList()));\n \n     for (V1Volume additionalVolume : getVolumes(getDomainUid())) {\n       podSpec.addVolumesItem(additionalVolume);\n     }\n     return podSpec;\n   }\n \n+  private List<V1EnvVar> createEnv(V1Container c, TuningParameters tuningParameters) {\n+    List<V1EnvVar> envVars = new ArrayList<>();\n+    Optional.ofNullable(c.getEnv()).ifPresent(envVars::addAll);", "originalCommit": "97838bbc19d1e78d0c3fc27a2ca0278fe9ff5bf3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY1MDE4MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533650181", "bodyText": "That's a good point. I had thought that the env var list will be mutually exclusive or env variables configured in server or cluster will take precedence. I'm not sure if customers would want to override  server/domain env variables in the init containers. @rjeberhard thoughts? Thanks.", "author": "ankedia", "createdAt": "2020-12-01T19:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY2OTIxNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533669216", "bodyText": "I guess that I would lean the other direction... That is, the highest precedence would be the most local configuration, which in this case, I think would be the environment variables specifically on the initContainer.", "author": "rjeberhard", "createdAt": "2020-12-01T19:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzczNjU1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533736559", "bodyText": "I have made the change to set higher precedence for environment variables set in init containers in cad0c30. Please let me know if I missed something. Thanks.", "author": "ankedia", "createdAt": "2020-12-01T21:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MjQ5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533742498", "bodyText": "please add a test case for testing the precedence. Thanks", "author": "alai8", "createdAt": "2020-12-01T21:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNDExNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533804115", "bodyText": "Added whenInitContainersHaveEnvVar_verifyInitContainersEnvVarTakesPrecedenceOverPreConfiguredEnvVar test in 66f56c5", "author": "ankedia", "createdAt": "2020-12-02T00:02:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTAwNQ=="}], "type": "inlineReview"}, {"oid": "cad0c306067ef3650d61a9194a560443bb3e1e24", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cad0c306067ef3650d61a9194a560443bb3e1e24", "message": "Change to set higher precedence for env var configured in initContainer over those configured in server or cluster as per review comments.", "committedDate": "2020-12-01T21:30:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MjIyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533742228", "bodyText": "addDefaultEnvVarIfMissing does not handle V1EnvVar with ValueFrom.", "author": "alai8", "createdAt": "2020-12-01T21:46:40Z", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/PodStepContext.java", "diffHunk": "@@ -599,10 +599,11 @@ protected V1PodSpec createSpec(TuningParameters tuningParameters) {\n   }\n \n   private List<V1EnvVar> createEnv(V1Container c, TuningParameters tuningParameters) {\n-    List<V1EnvVar> envVars = new ArrayList<>();\n-    Optional.ofNullable(c.getEnv()).ifPresent(envVars::addAll);\n-    envVars.addAll(getEnvironmentVariables(tuningParameters));\n-    return envVars;\n+    List<V1EnvVar> initContainerEnvVars = new ArrayList<>();\n+    Optional.ofNullable(c.getEnv()).ifPresent(initContainerEnvVars::addAll);\n+    getEnvironmentVariables(tuningParameters).forEach(envVar ->\n+            addDefaultEnvVarIfMissing(initContainerEnvVars, envVar.getName(), envVar.getValue()));", "originalCommit": "cad0c306067ef3650d61a9194a560443bb3e1e24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNTg5Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533805893", "bodyText": "As discussed, V1EnvVar with ValueFrom is already handled in getEnvironmentVariables(tuningParameters) method.  I have created a new method addIfMissing to add the env variable to list only if it's missing from the list. I also tested setting env var with ValueFrom in init containers and it's handled correctly.", "author": "ankedia", "createdAt": "2020-12-02T00:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgzODI5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r533838292", "bodyText": "can you also verify env var with ValueFrom in server spec are also set correctly in initContainer? Thanks", "author": "alai8", "createdAt": "2020-12-02T01:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyNTIxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r534325218", "bodyText": "I have pushed a change in 4646578 to handle ValueFrom in addIfMissing which will add the env variable with ValueFrom if env value is empty or null. I have also functionally tested that env var is set in initContainer. Thanks.", "author": "ankedia", "createdAt": "2020-12-02T16:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc0MjIyOA=="}], "type": "inlineReview"}, {"oid": "66f56c5b8b30e933f89e0726e0a12a0596ba686c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/66f56c5b8b30e933f89e0726e0a12a0596ba686c", "message": "Added a unit test case for testing the precedence and created \"addIfMissing\" method to avoid confusion.", "committedDate": "2020-12-01T23:37:02Z", "type": "commit"}, {"oid": "46465788b1bc17357e3ff9c659af74f24ff77159", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/46465788b1bc17357e3ff9c659af74f24ff77159", "message": "Changes to handle environment variables with value from config map or secret.", "committedDate": "2020-12-02T16:21:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYyNDMxMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r535624312", "bodyText": "Those new methods (createXXX, listXXX and addXXX) do not seem to belong to this class.", "author": "doxiao", "createdAt": "2020-12-03T21:11:49Z", "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/Matchers.java", "diffHunk": "@@ -66,6 +78,39 @@ private static V1Container createContainer(String name, String image, String...\n     return new V1Container().name(name).image(image).command(Arrays.asList(command));\n   }\n \n+  private static V1Container createInitContainer(String name, String image, String serverName, String... command) {\n+    return new V1Container().name(name).image(image).command(Arrays.asList(command))\n+            .env(PodHelperTestBase.getPredefinedEnvVariables(serverName));\n+  }\n+\n+  private static V1Container createInitContainerWithEnvVar(String name, String image, String serverName,\n+                                                           V1EnvVar envVar, String... command) {\n+    List<V1EnvVar> envVars = new ArrayList<>(Arrays.asList(envVar));\n+    PodHelperTestBase.getPredefinedEnvVariables(serverName).forEach(predefEnvVar ->\n+            addIfMissing(envVars, predefEnvVar.getName(), predefEnvVar.getValue()));\n+    return new V1Container().name(name).image(image).command(Arrays.asList(command))\n+            .env(envVars);\n+  }\n+\n+  protected static void addEnvVar(List<V1EnvVar> vars, String name, String value) {\n+    vars.add(new V1EnvVar().name(name).value(value));\n+  }\n+\n+  protected static boolean listHasEnvVar(List<V1EnvVar> vars, String name) {\n+    for (V1EnvVar var : vars) {\n+      if (name.equals(var.getName())) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  protected static void addIfMissing(List<V1EnvVar> vars, String name, String value) {\n+    if (!listHasEnvVar(vars, name)) {\n+      addEnvVar(vars, name, value);\n+    }\n+  }\n+", "originalCommit": "46465788b1bc17357e3ff9c659af74f24ff77159", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NDU4OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r535684588", "bodyText": "Thanks. These methods are used by the helper methods hasInitContainer and hasInitContainerWithEnvVar to verify if the init containers in the pod has appropriate pre-populated environment variables. Any suggestions on what would be a good place to move them?", "author": "ankedia", "createdAt": "2020-12-03T22:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYyNDMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4NzU4Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2077#discussion_r535787583", "bodyText": "Now I see other helper methods in this class too.", "author": "doxiao", "createdAt": "2020-12-04T02:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYyNDMxMg=="}], "type": "inlineReview"}]}