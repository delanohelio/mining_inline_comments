{"pr_number": 1725, "pr_title": "Add test to verify interserver communication", "pr_createdAt": "2020-06-11T06:01:08Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725", "timeline": [{"oid": "a9d4d10bdfc384a4b47f2b3dc86fe4a306a1b368", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a9d4d10bdfc384a4b47f2b3dc86fe4a306a1b368", "message": "Adding cluster member communication application", "committedDate": "2020-06-10T17:35:41Z", "type": "commit"}, {"oid": "2d0a5ade013c40b5da180c5674fec83f3364e9ef", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2d0a5ade013c40b5da180c5674fec83f3364e9ef", "message": "Fix the build application to copy application folder recursively", "committedDate": "2020-06-10T18:41:48Z", "type": "commit"}, {"oid": "fa789d0278f5842a306f8db882c4ca2e59cca302", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fa789d0278f5842a306f8db882c4ca2e59cca302", "message": "Add checks for pv and pvc delete", "committedDate": "2020-06-10T19:28:29Z", "type": "commit"}, {"oid": "ba9a4de9e043aae00c7847f71419ce0a2ac9c829", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ba9a4de9e043aae00c7847f71419ce0a2ac9c829", "message": "Fix checkstyle errors", "committedDate": "2020-06-10T19:37:15Z", "type": "commit"}, {"oid": "c60804ae57f78e82a89fe59ed08ab0c168cdb722", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c60804ae57f78e82a89fe59ed08ab0c168cdb722", "message": "Build the application in a separate directory so that pv can be cleaned up", "committedDate": "2020-06-10T19:57:37Z", "type": "commit"}, {"oid": "02acc253d583a4411f64a3d5ab76833393ae9933", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/02acc253d583a4411f64a3d5ab76833393ae9933", "message": "Remove pv delete check", "committedDate": "2020-06-10T20:20:44Z", "type": "commit"}, {"oid": "1c9bdda5dbb8c411607f2f5c0cdd3046f33a8e51", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c9bdda5dbb8c411607f2f5c0cdd3046f33a8e51", "message": "Create secret only if it doesn't exist", "committedDate": "2020-06-10T20:47:22Z", "type": "commit"}, {"oid": "b0768c87bc6e2fc19b23d8f1cd668705a6b4fd44", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b0768c87bc6e2fc19b23d8f1cd668705a6b4fd44", "message": "Create unique names for all artifacts", "committedDate": "2020-06-10T21:14:01Z", "type": "commit"}, {"oid": "797a491b62e19450da26f161a65baa2c2e9eb5b1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/797a491b62e19450da26f161a65baa2c2e9eb5b1", "message": "Fix param name", "committedDate": "2020-06-10T21:37:18Z", "type": "commit"}, {"oid": "829b7b81e4529fecdf9a0829f1e66c7c3926f54d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/829b7b81e4529fecdf9a0829f1e66c7c3926f54d", "message": "Fix persistent volume claim  deletion when there is no label", "committedDate": "2020-06-10T22:21:37Z", "type": "commit"}, {"oid": "b3bfccb0ba5d308aa3a3280c4f0c15249dd0b5fd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b3bfccb0ba5d308aa3a3280c4f0c15249dd0b5fd", "message": "wip", "committedDate": "2020-06-10T23:19:49Z", "type": "commit"}, {"oid": "2a05a894c24bf82a0ac9e67eadae0287c4fbebf0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2a05a894c24bf82a0ac9e67eadae0287c4fbebf0", "message": "Add new check for bound status", "committedDate": "2020-06-11T01:02:14Z", "type": "commit"}, {"oid": "f5e0b690e919837b448a157ac2450e33c7c29777", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f5e0b690e919837b448a157ac2450e33c7c29777", "message": "Fix", "committedDate": "2020-06-11T01:13:23Z", "type": "commit"}, {"oid": "948f43b825ef5c27f2c28af69b78ff47b9cf145a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/948f43b825ef5c27f2c28af69b78ff47b9cf145a", "message": "Remove the configmap", "committedDate": "2020-06-11T03:04:40Z", "type": "commit"}, {"oid": "05b6a47f5711bb5d9a07de5d65453dbdc9b6a3e5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/05b6a47f5711bb5d9a07de5d65453dbdc9b6a3e5", "message": "change the reclaim policy to recycle", "committedDate": "2020-06-11T03:27:03Z", "type": "commit"}, {"oid": "f7f6ece50f59cfb21146c4d90fbbd31725b46b69", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f7f6ece50f59cfb21146c4d90fbbd31725b46b69", "message": "Fix copyright", "committedDate": "2020-06-11T03:41:19Z", "type": "commit"}, {"oid": "3034259fa3fe64ea8ef42622e03f7bb7f81e505f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3034259fa3fe64ea8ef42622e03f7bb7f81e505f", "message": "Fix the clusterview app to bind and unbind in lifecycle methods", "committedDate": "2020-06-11T04:29:02Z", "type": "commit"}, {"oid": "2602debbca6fbfe54fd31aa733eb6d9b4a532eb4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2602debbca6fbfe54fd31aa733eb6d9b4a532eb4", "message": "Add a label", "committedDate": "2020-06-11T04:38:20Z", "type": "commit"}, {"oid": "76cac0be1d779ec9c94b83afc40d60c5d6b2a144", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/76cac0be1d779ec9c94b83afc40d60c5d6b2a144", "message": "Use servlet", "committedDate": "2020-06-11T05:35:03Z", "type": "commit"}, {"oid": "6357075d49633388beff22c4ee56e86ec31cdda7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6357075d49633388beff22c4ee56e86ec31cdda7", "message": "fix url", "committedDate": "2020-06-11T05:39:19Z", "type": "commit"}, {"oid": "6029169103bba1d1f178117a3f51fcf592403c27", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6029169103bba1d1f178117a3f51fcf592403c27", "message": "Add label in pvc", "committedDate": "2020-06-11T05:54:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzI4Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438827286", "bodyText": "Another possible reason is that the response contained unexpected content (did not contain ServerName/Bound).  It'd be helpful to accumulate an 'error' string that contains 'unexpected' responses (e.g. does not contain at least ServerName of one of the servers), and dump the String here on a failure.", "author": "tbarnes-us", "createdAt": "2020-06-11T14:27:01Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/TestUtils.java", "diffHunk": "@@ -88,6 +89,66 @@ public static boolean callWebAppAndCheckForServerNameInResponse(\n     return false;\n   }\n \n+  /**\n+   * Call the curl command and check the managed servers can see each other.\n+   *\n+   * @param curlCmd curl command to call the clusterview app\n+   * @param managedServerNames managed server names that should be see other\n+   * @param maxIterations max iterations to call the curl command\n+   * @return true if the managed servers can see each other, false otherwise\n+   */\n+  public static boolean verifyClusterMemberCommunication(\n+      String curlCmd,\n+      List<String> managedServerNames,\n+      int maxIterations) {\n+\n+    // first map all server names with false\n+    HashMap<String, Boolean> managedServers = new HashMap<>();\n+    managedServerNames.forEach(managedServerName\n+        -> managedServers.put(managedServerName, false)\n+    );\n+\n+    logger.info(\"Calling clusterview at most {0} times using command: {1}\", maxIterations, curlCmd);\n+\n+    // check the response contains managed server name\n+    ExecResult result = null;\n+    for (int i = 0; i < maxIterations; i++) {\n+      if (managedServers.containsValue(false)) {\n+        try {\n+          TimeUnit.MILLISECONDS.sleep(100);\n+          result = ExecCommand.exec(curlCmd, true);\n+          String response = result.stdout().trim();\n+          for (var entry : managedServers.entrySet()) {\n+            if (response.contains(\"ServerName:\" + entry.getKey())) {\n+              boolean bound = true;\n+              for (String managedServerName : managedServerNames) {\n+                bound = bound && response.contains(\"Bound:\" + managedServerName);\n+              }\n+              if (bound) {\n+                managedServers.put(entry.getKey(), true);\n+              }\n+            }\n+          }\n+        } catch (IOException | InterruptedException e) {\n+          logger.info(e.toString());\n+          return false;\n+        }\n+      } else {\n+        return true;\n+      }\n+    }\n+    // after the max iterations, if hit here, one or more servers cannot see other\n+    managedServers.forEach((key, value) -> {\n+      if (value) {\n+        logger.info(\"The server {0} can see other cluster members\", key);\n+      } else {\n+        logger.info(\"The server {0} cannot see other cluster members\", key);", "originalCommit": "6029169103bba1d1f178117a3f51fcf592403c27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0MzI2MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438843261", "bodyText": "And yet another is that all managedServers didn't respond.   Or an 'extra' managed server responded.", "author": "tbarnes-us", "createdAt": "2020-06-11T14:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMDM0Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438900343", "bodyText": "Another possible reason is that the response contained unexpected content (did not contain ServerName/Bound). It'd be helpful to accumulate an 'error' string that contains 'unexpected' responses (e.g. does not contain at least ServerName of one of the servers), and dump the String here on a failure.\n\nIts already there, when http requests are made in a loop it will print this until all expected servers are bound.\n\n\n\n<title>ClusterViewServlet</title>\n\n\nServerName:ms-2\nAlive:3\nHealth:0\nMembers:ms-3,ms-1,ms-2\nUnable to resolve 'ms-3'. Resolved ''\nUnable to resolve 'ms-1'. Resolved ''\nBound:ms-2", "author": "sankarpn", "createdAt": "2020-06-11T16:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNTM4Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438905383", "bodyText": "I don't see how it's already there? I see line 120 String response = result.stdout().trim(); but no corresponding print for the response if the response doesn't contain ServerName:.\nRegardless, the error message at line 145 itself is misleading if it hits the error cases I mentioned above (e.g. an error case that isn't due to 'unbound').", "author": "tbarnes-us", "createdAt": "2020-06-11T16:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0ODU3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438948571", "bodyText": "The response from the server is always printed, that happens when the curl command is executed. line # 119\nSo it unnecessary to accumulate the unexpected response and print it again.\nI can change the error message in line # 145 to include the case for unbound.\nPlease see the https://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/323/consoleFull\nsearch for Unable to resolve 'ms-1'. Resolved ''", "author": "sankarpn", "createdAt": "2020-06-11T17:24:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0NzU5Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438847596", "bodyText": "I'm not sure about this, but if you were to view this output in a browser, I suspect the newlines would be ignored and it'd all end up munged into one line. If so, you can put a <pre> after <body> and a </pre> before </body> to correct this.\nDitto for the JSPs.", "author": "tbarnes-us", "createdAt": "2020-06-11T14:55:48Z", "path": "new-integration-tests/src/test/resources/apps/clusterview/src/java/oracle/weblogic/kubernetes/applications/clusterview/ClusterViewServlet.java", "diffHunk": "@@ -0,0 +1,150 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.applications.clusterview;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NameNotFoundException;\n+import javax.naming.NamingException;\n+import javax.servlet.ServletConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import weblogic.management.jmx.MBeanServerInvocationHandler;\n+import weblogic.management.mbeanservers.runtime.RuntimeServiceMBean;\n+import weblogic.management.runtime.ClusterRuntimeMBean;\n+import weblogic.management.runtime.ServerRuntimeMBean;\n+\n+/**\n+ * Servlet to print all MBeans names and attributes in the server runtime.\n+ */\n+public class ClusterViewServlet extends HttpServlet {\n+\n+  Context ctx = null;\n+  MBeanServer localMBeanServer;\n+  ServerRuntimeMBean serverRuntime;\n+\n+  @Override\n+  public void init(ServletConfig config) throws ServletException {\n+    try {\n+      ctx = new InitialContext();\n+      localMBeanServer = (MBeanServer) ctx.lookup(\"java:comp/env/jmx/runtime\");\n+      // get ServerRuntimeMBean\n+      ObjectName runtimeserviceObjectName = new ObjectName(RuntimeServiceMBean.OBJECT_NAME);\n+      RuntimeServiceMBean runtimeService = (RuntimeServiceMBean) MBeanServerInvocationHandler\n+          .newProxyInstance(localMBeanServer, runtimeserviceObjectName);\n+      serverRuntime = runtimeService.getServerRuntime();\n+      try {\n+        ctx.lookup(serverRuntime.getName());\n+      } catch (NameNotFoundException nnfe) {\n+        ctx.bind(serverRuntime.getName(), serverRuntime.getName());\n+      }\n+    } catch (NamingException | MalformedObjectNameException ex) {\n+      Logger.getLogger(ClusterViewServlet.class.getName()).log(Level.SEVERE, null, ex);\n+    }\n+  }\n+\n+  @Override\n+  public void destroy() {\n+    try {\n+      ctx.unbind(serverRuntime.getName());\n+      ctx.close();\n+    } catch (NamingException ex) {\n+      Logger.getLogger(ClusterViewServlet.class.getName()).log(Level.SEVERE, null, ex);\n+    }\n+  }\n+\n+  /**\n+   * Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.\n+   *\n+   * @param request servlet request\n+   * @param response servlet response\n+   * @throws ServletException if a servlet-specific error occurs\n+   * @throws IOException if an I/O error occurs\n+   */\n+  protected void processRequest(HttpServletRequest request, HttpServletResponse response)\n+      throws ServletException, IOException {\n+    response.setContentType(\"text/html;charset=UTF-8\");\n+    try (PrintWriter out = response.getWriter()) {\n+      out.println(\"<!DOCTYPE html>\");\n+      out.println(\"<html>\");\n+      out.println(\"<head>\");\n+      out.println(\"<title>ClusterViewServlet</title>\");\n+      out.println(\"</head>\");\n+      out.println(\"<body>\");", "originalCommit": "6029169103bba1d1f178117a3f51fcf592403c27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMTAwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1725#discussion_r438901000", "bodyText": "Added pre tag", "author": "sankarpn", "createdAt": "2020-06-11T16:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0NzU5Ng=="}], "type": "inlineReview"}, {"oid": "c63ebe3095848c304d9dbefad16fc3ab58f4abb6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c63ebe3095848c304d9dbefad16fc3ab58f4abb6", "message": "Address review comments from Tom B", "committedDate": "2020-06-11T16:04:01Z", "type": "commit"}, {"oid": "b6686a13d151cfd91ff40ff6c3d4517d4386547d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b6686a13d151cfd91ff40ff6c3d4517d4386547d", "message": "Fix url", "committedDate": "2020-06-11T16:17:13Z", "type": "commit"}, {"oid": "7e5cac77af3e0f79d5100bcb7bb21cb4f632572e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7e5cac77af3e0f79d5100bcb7bb21cb4f632572e", "message": "Change ti NamingException instead of namenotfoundexception", "committedDate": "2020-06-11T16:23:51Z", "type": "commit"}, {"oid": "7d6b6495c3379e0f5c807df871808242f79e46c2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7d6b6495c3379e0f5c807df871808242f79e46c2", "message": "cleanup comments and docs", "committedDate": "2020-06-11T16:47:38Z", "type": "commit"}, {"oid": "b282408ff0b5fc30626491f299226fa7b1c8a012", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b282408ff0b5fc30626491f299226fa7b1c8a012", "message": "Change error message", "committedDate": "2020-06-11T17:25:22Z", "type": "commit"}, {"oid": "cb732601c0864e5875eba7fd072ce5deff6272a9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cb732601c0864e5875eba7fd072ce5deff6272a9", "message": "wip", "committedDate": "2020-06-11T17:33:36Z", "type": "commit"}, {"oid": "c77a7afc6c17ec149c3d602c32bff59ad6423941", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c77a7afc6c17ec149c3d602c32bff59ad6423941", "message": "change error message", "committedDate": "2020-06-11T18:29:39Z", "type": "commit"}, {"oid": "feb453b42ee7fe60c2b3bface37b7a76f4c7d848", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/feb453b42ee7fe60c2b3bface37b7a76f4c7d848", "message": "remove comment", "committedDate": "2020-06-11T19:29:21Z", "type": "commit"}, {"oid": "d58fd3005d9e5ed3461b86016a602c07c18cd8c8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d58fd3005d9e5ed3461b86016a602c07c18cd8c8", "message": "wip", "committedDate": "2020-06-11T22:03:29Z", "type": "commit"}]}