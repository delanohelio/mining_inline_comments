{"pr_number": 1689, "pr_title": "Istio productization Owls 81599", "pr_createdAt": "2020-05-29T13:09:22Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyNTMwNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441025306", "bodyText": "Protocol should be \"http\"", "author": "rjeberhard", "createdAt": "2020-06-16T17:35:07Z", "path": "operator/src/main/resources/scripts/introspectDomain.py", "diffHunk": "@@ -760,23 +743,91 @@ def addNonClusteredServers(self):\n         self.addServer(server)\n     self.undent()\n \n-  def addNetworkAccessPoints(self, server):\n+  def addNetworkAccessPoints(self, server, is_server_template=False):\n+    \"\"\"\n+    Add network access points for server or server template\n+    :param server:  server or server template\n+    \"\"\"\n     naps = server.getNetworkAccessPoints()\n-    if len(naps) == 0:\n-      return\n-    self.writeln(\"  networkAccessPoints:\")\n-    self.indent()\n-    for nap in naps:\n-      self.addNetworkAccessPoint(nap)\n-    self.undent()\n+    added_nap = False\n+    if len(naps) != 0:\n+      added_nap = True\n+      self.writeln(\"  networkAccessPoints:\")\n+      self.indent()\n+      for nap in naps:\n+        self.addNetworkAccessPoint(nap)\n+\n+    added_istio_yaml = self.addIstioNetworkAccessPoints(server, is_server_template, added_nap)\n+    if len(naps) != 0 or added_istio_yaml:\n+      self.undent()\n \n   def addNetworkAccessPoint(self, nap):\n-    name=self.name(nap)\n+\n+    # Change the name to follow the istio port naming convention\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+\n+    if istio_enabled == 'true':\n+      http_protocol = [ 'http' ]\n+      https_protocol = ['https','admin']\n+      tcp_protocol = [ 't3', 'snmp', 'ldap', 'cluster-broadcast', 'iiop']\n+      tls_protocol = [ 't3s', 'iiops', 'cluster-broadcast-secure']\n+      if nap.getProtocol() in http_protocol:\n+        name = 'http-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in https_protocol:\n+        name = 'https-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in tcp_protocol:\n+        name = 'tcp-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in tls_protocol:\n+        name = 'tls-' + nap.getName().replace(' ', '_')\n+      else:\n+        name = 'tcp-' + nap.getName().replace(' ', '_')\n+    else:\n+      name=self.name(nap)\n     self.writeln(\"  - name: \" + name)\n     self.writeln(\"    protocol: \" + self.quote(nap.getProtocol()))\n     self.writeln(\"    listenPort: \" + str(nap.getListenPort()))\n     self.writeln(\"    publicPort: \" + str(nap.getPublicPort()))\n \n+  def addIstioNetworkAccessPoints(self, server, is_server_template, added_nap):\n+    '''\n+    Write the container ports information for operator to create the container ports\n+    :param server:   server or template mbean\n+    :param is_server_template:  true if it is from ServerTemplate\n+    :param added_nap:  true if there are existing nap section in the output\n+    '''\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+    if istio_enabled == 'false':\n+      return False\n+\n+    if not added_nap:\n+      self.writeln(\"  networkAccessPoints:\")\n+      self.indent()\n+\n+    self.addIstioNetworkAccessPoint(\"tcp-ldap\", \"ldap\", server.getListenPort(), 0)\n+    self.addIstioNetworkAccessPoint(\"tcp-default\", \"t3\", server.getListenPort(), 0)\n+    # No need to to http default, PodStepContext already handle it\n+    self.addIstioNetworkAccessPoint(\"http-default\", \"t3\", server.getListenPort(), 0)", "originalCommit": "dee26299663fcbd0cf03ee8a3f75f81ddadd340c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f35d9c7a03ded5e6bbfaa23a6c7772707d2eafb1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f35d9c7a03ded5e6bbfaa23a6c7772707d2eafb1", "message": "fix protocol", "committedDate": "2020-06-16T17:41:42Z", "type": "commit"}, {"oid": "09de534a510c7f87cd234c3aead3545bef7ea31d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/09de534a510c7f87cd234c3aead3545bef7ea31d", "message": "Merge remote-tracking branch 'origin/develop' into owls-81599", "committedDate": "2020-06-17T14:25:01Z", "type": "commit"}, {"oid": "d65843da91661b4a035ec162947a5f43c526c158", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d65843da91661b4a035ec162947a5f43c526c158", "message": "Rebuild schemas", "committedDate": "2020-06-17T14:33:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU5ODcwMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441598702", "bodyText": "Remove ISTIO_ENVOY_PORT", "author": "rjeberhard", "createdAt": "2020-06-17T14:41:22Z", "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -102,6 +105,9 @@ export CLUSTER_TYPE=\"${CLUSTER_TYPE:-DYNAMIC}\"\n export T3CHANNEL1_PORT=${T3CHANNEL1_PORT:-30012}\n export T3CHANNEL2_PORT=${T3CHANNEL2_PORT:-30013}\n export T3CHANNEL3_PORT=${T3CHANNEL3_PORT:-30014}\n+export ISTIO_ENABLED=${ISTIO_ENABLED:-false}\n+export ISTIO_READINESS_PORT=${ISTIO_READINESS_PORT:-8888}\n+export ISTIO_ENVOY_PORT=${ISTIO_ENVOY_PORT:-31111}", "originalCommit": "d65843da91661b4a035ec162947a5f43c526c158", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU5ODkyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441598927", "bodyText": "Remove ISTIO_ENVOY_PORT", "author": "rjeberhard", "createdAt": "2020-06-17T14:41:39Z", "path": "src/integration-tests/introspector/wl-introspect-pod.yamlt", "diffHunk": "@@ -37,6 +37,12 @@ spec:\n       value: \"${DOMAIN_SOURCE_TYPE}\"\n     - name: WDT_DOMAIN_TYPE\n       value: \"${WDT_DOMAIN_TYPE:-WLS}\"\n+    - name: ISTIO_ENABLED\n+      value: \"${ISTIO_ENABLED:-false}\"\n+    - name: ISTIO_READINESS_PORT\n+      value: \"${ISTIO_READINESS_PORT:-8888}\"\n+    - name: ISTIO_ENVOY_PORT", "originalCommit": "d65843da91661b4a035ec162947a5f43c526c158", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "message": "remove ISTIO_ENVOY_PORT", "committedDate": "2020-06-17T14:49:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyODIxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441628210", "bodyText": "settings -> settings. (period at the end of the sentence)", "author": "rosemarymarano", "createdAt": "2020-06-17T15:18:52Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -93,18 +92,13 @@ An element representing a cluster in the domain configuration.\n | Name | Type | Description |\n | --- | --- | --- |\n | `introspectorJobActiveDeadlineSeconds` | number | The introspector job timeout value in seconds. If this field is specified it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value. |\n+| `istio` | [Istio](#istio) | The Istio service mesh integration settings |", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzNzIxNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441637215", "bodyText": "\"Istio at Istio.\" is awkward wording", "author": "markxnelson", "createdAt": "2020-06-17T15:31:29Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MDQxMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441640411", "bodyText": "probably more correct to say \"the Istio ingress gateway\"", "author": "markxnelson", "createdAt": "2020-06-17T15:36:25Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic domain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readinessPort` is optional\n+and defaults to `8888` if not provided; it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled, the WebLogic Server Kubernetes Operator automatically adds the following network\n+channels using configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`http-probe`|`From configuration istio readinessPort`|`http`|`N`|\n+|`tcp-default`|`Server listening port`|`t3`|`Y`|\n+|`http-default`|`Server listening port`|`http`|`Y`|\n+|`tcp-snmp`|`Server listening port`|`snmp`|`Y`|\n+|`tcp-cbt`|`server listening port`|`CLUSTER-BROADCAST`|`N`|\n+|`tcp-iiop`|`server listening port`|`http`|`N`|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`tls-default`|`Server SSL listening port`|`t3s`|`Y`|\n+|`https-secure`|`Server SSL listening port`|`https`|`Y`|\n+|`tls-iiops`|`Server SSL listening port`|`iiops`|`N`|\n+|`tls-ldaps`|`Server SSL listening port`|`ldaps`|`N`|\n+|`tls-cbts`|`Server listening port`|`CLUSTER-BROADCAST-SECURE`|`N`|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|`https-admin`|`WebLogic administration port`|`https`|`Y`|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML file is modified, apply it by:\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MDc1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441640751", "bodyText": "the last two clauses make no sense", "author": "markxnelson", "createdAt": "2020-06-17T15:36:53Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic domain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readinessPort` is optional\n+and defaults to `8888` if not provided; it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled, the WebLogic Server Kubernetes Operator automatically adds the following network\n+channels using configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`http-probe`|`From configuration istio readinessPort`|`http`|`N`|\n+|`tcp-default`|`Server listening port`|`t3`|`Y`|\n+|`http-default`|`Server listening port`|`http`|`Y`|\n+|`tcp-snmp`|`Server listening port`|`snmp`|`Y`|\n+|`tcp-cbt`|`server listening port`|`CLUSTER-BROADCAST`|`N`|\n+|`tcp-iiop`|`server listening port`|`http`|`N`|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`tls-default`|`Server SSL listening port`|`t3s`|`Y`|\n+|`https-secure`|`Server SSL listening port`|`https`|`Y`|\n+|`tls-iiops`|`Server SSL listening port`|`iiops`|`N`|\n+|`tls-ldaps`|`Server SSL listening port`|`ldaps`|`N`|\n+|`tls-cbts`|`Server listening port`|`CLUSTER-BROADCAST-SECURE`|`N`|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|`https-admin`|`WebLogic administration port`|`https`|`Y`|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML file is modified, apply it by:\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio\n+gateway to provide external access to applications, instead of using an ingress\n+controller like Traefik.  Using the Istio gateway will enable you to view the\n+traffic in Kiali and to use distributed tracing all the way from the entry point to\n+the cluster, for example, the Istio gateway.", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MTA3Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441641073", "bodyText": "captial S in VirtualService", "author": "markxnelson", "createdAt": "2020-06-17T15:37:22Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic domain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readinessPort` is optional\n+and defaults to `8888` if not provided; it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled, the WebLogic Server Kubernetes Operator automatically adds the following network\n+channels using configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`http-probe`|`From configuration istio readinessPort`|`http`|`N`|\n+|`tcp-default`|`Server listening port`|`t3`|`Y`|\n+|`http-default`|`Server listening port`|`http`|`Y`|\n+|`tcp-snmp`|`Server listening port`|`snmp`|`Y`|\n+|`tcp-cbt`|`server listening port`|`CLUSTER-BROADCAST`|`N`|\n+|`tcp-iiop`|`server listening port`|`http`|`N`|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`tls-default`|`Server SSL listening port`|`t3s`|`Y`|\n+|`https-secure`|`Server SSL listening port`|`https`|`Y`|\n+|`tls-iiops`|`Server SSL listening port`|`iiops`|`N`|\n+|`tls-ldaps`|`Server SSL listening port`|`ldaps`|`N`|\n+|`tls-cbts`|`Server listening port`|`CLUSTER-BROADCAST-SECURE`|`N`|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|`https-admin`|`WebLogic administration port`|`https`|`Y`|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML file is modified, apply it by:\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio\n+gateway to provide external access to applications, instead of using an ingress\n+controller like Traefik.  Using the Istio gateway will enable you to view the\n+traffic in Kiali and to use distributed tracing all the way from the entry point to\n+the cluster, for example, the Istio gateway.\n+\n+To configure external access to your domain, you need to create an Istio `Gateway` and\n+`Virtualservice` as shown in the example below:", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MTc3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441641776", "bodyText": "Include a note to say that in real life you should put a proper dns name, not \"*\"", "author": "markxnelson", "createdAt": "2020-06-17T15:38:28Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic domain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readinessPort` is optional\n+and defaults to `8888` if not provided; it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled, the WebLogic Server Kubernetes Operator automatically adds the following network\n+channels using configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`http-probe`|`From configuration istio readinessPort`|`http`|`N`|\n+|`tcp-default`|`Server listening port`|`t3`|`Y`|\n+|`http-default`|`Server listening port`|`http`|`Y`|\n+|`tcp-snmp`|`Server listening port`|`snmp`|`Y`|\n+|`tcp-cbt`|`server listening port`|`CLUSTER-BROADCAST`|`N`|\n+|`tcp-iiop`|`server listening port`|`http`|`N`|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`tls-default`|`Server SSL listening port`|`t3s`|`Y`|\n+|`https-secure`|`Server SSL listening port`|`https`|`Y`|\n+|`tls-iiops`|`Server SSL listening port`|`iiops`|`N`|\n+|`tls-ldaps`|`Server SSL listening port`|`ldaps`|`N`|\n+|`tls-cbts`|`Server listening port`|`CLUSTER-BROADCAST-SECURE`|`N`|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|`https-admin`|`WebLogic administration port`|`https`|`Y`|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML file is modified, apply it by:\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio\n+gateway to provide external access to applications, instead of using an ingress\n+controller like Traefik.  Using the Istio gateway will enable you to view the\n+traffic in Kiali and to use distributed tracing all the way from the entry point to\n+the cluster, for example, the Istio gateway.\n+\n+To configure external access to your domain, you need to create an Istio `Gateway` and\n+`Virtualservice` as shown in the example below:\n+\n+```\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: Gateway\n+metadata:\n+  name: domain1-gateway\n+  namespace: domain1\n+spec:\n+  selector:\n+    istio: ingressgateway\n+  servers:\n+    - hosts:\n+        - '*'\n+      port:\n+        name: http\n+        number: 80\n+        protocol: HTTP\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: VirtualService\n+metadata:\n+  name: domain1-virtualservice\n+  namespace: domain1\n+spec:\n+  gateways:\n+    - domain1-gateway\n+  hosts:\n+    - '*'\n+  http:\n+    - match:\n+        - uri:\n+            prefix: /console\n+        - port: 7001\n+      route:\n+        - destination:\n+            host: sample-domain1-admin-server.sample-domain1-ns.svc.cluster.local\n+            port:\n+              number: 7001\n+    - match:\n+        - uri:\n+            prefix: /testwebapp\n+        - port: 8001\n+      route:\n+        - destination:\n+            host: sample-domain1-cluster-cluster-1.domain1.svc.cluster.local\n+            port:\n+              number: 8001\n+```\n+\n+This example creates a gateway that will accept requests with any host name", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NTYyOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441645629", "bodyText": "Istio has a capital I", "author": "markxnelson", "createdAt": "2020-06-17T15:44:09Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/DomainConfigurator.java", "diffHunk": "@@ -469,6 +469,13 @@ public abstract DomainConfigurator withPodSecurityContext(\n    */\n   public abstract DomainConfigurator withOpssWalletFileSecret(String secret);\n \n+  /**\n+   * Add istio for the domain resource.", "originalCommit": "2ab91695e2d53ac29f3820fe053b5a3991fd73dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ea46a0dc0b3464375b12ac202ef1a1400899904", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6ea46a0dc0b3464375b12ac202ef1a1400899904", "message": "update doc", "committedDate": "2020-06-17T16:55:20Z", "type": "commit"}, {"oid": "739d371c834fb7c9fcf30fb88e3cb164f3616d24", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/739d371c834fb7c9fcf30fb88e3cb164f3616d24", "message": "doc updates", "committedDate": "2020-06-17T17:27:21Z", "type": "commit"}, {"oid": "09b21a592c4a3ec58079bd0ac933f792074f36f8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/09b21a592c4a3ec58079bd0ac933f792074f36f8", "message": "doc update", "committedDate": "2020-06-17T17:30:54Z", "type": "commit"}, {"oid": "f370aa928417c53186c8dadfd838c146125bcdfd", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f370aa928417c53186c8dadfd838c146125bcdfd", "message": "final review/edits", "committedDate": "2020-06-18T14:59:47Z", "type": "commit"}, {"oid": "325bf524dbf5fc4646386835287d16ff3e3b6041", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/325bf524dbf5fc4646386835287d16ff3e3b6041", "message": "Rebuild domain documentation", "committedDate": "2020-06-18T15:20:16Z", "type": "commit"}, {"oid": "55d621adf322a481d9cc75710f872883ab3c759b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/55d621adf322a481d9cc75710f872883ab3c759b", "message": "add istio support", "committedDate": "2020-05-20T22:40:49Z", "type": "commit"}, {"oid": "64031a84f1aa037fd0f62b1af2be91846f114688", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/64031a84f1aa037fd0f62b1af2be91846f114688", "message": "update script", "committedDate": "2020-05-21T13:03:13Z", "type": "commit"}, {"oid": "ab74114405e12885bc95b4dbc0700ea44d651427", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ab74114405e12885bc95b4dbc0700ea44d651427", "message": "update sample for istio", "committedDate": "2020-05-21T15:07:39Z", "type": "commit"}, {"oid": "00031fc18d744a05e64dfbeddf8cd02a647b813e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/00031fc18d744a05e64dfbeddf8cd02a647b813e", "message": "restore deleted token", "committedDate": "2020-05-21T15:21:23Z", "type": "commit"}, {"oid": "9220c9109252bc7a72660291496c9f668b7dd058", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9220c9109252bc7a72660291496c9f668b7dd058", "message": "formatting", "committedDate": "2020-05-21T15:23:24Z", "type": "commit"}, {"oid": "a23d80eef69bbaecb45f910fc29e7bd87d99e1fe", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a23d80eef69bbaecb45f910fc29e7bd87d99e1fe", "message": "add envoyPort to Istio and change nap override logic", "committedDate": "2020-05-21T23:02:20Z", "type": "commit"}, {"oid": "a9aff2c1889dd187721aad2b55d21649bf9dbcc4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a9aff2c1889dd187721aad2b55d21649bf9dbcc4", "message": "update add/replace action", "committedDate": "2020-05-22T00:41:36Z", "type": "commit"}, {"oid": "7c5a878bfc10502f95ec695aa59032459b5a1924", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7c5a878bfc10502f95ec695aa59032459b5a1924", "message": "fix override logic", "committedDate": "2020-05-22T14:57:52Z", "type": "commit"}, {"oid": "3070b20cc2a375349f81b03d017433af17cf8961", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3070b20cc2a375349f81b03d017433af17cf8961", "message": "Fix add and replace logic", "committedDate": "2020-05-22T16:09:16Z", "type": "commit"}, {"oid": "c62317c900fe63d987b11a6e60c4bcbaf9b49731", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c62317c900fe63d987b11a6e60c4bcbaf9b49731", "message": "Update doc for Istio", "committedDate": "2020-05-22T16:22:34Z", "type": "commit"}, {"oid": "61589aa6e8c18eaf8344f47a806d32949c401f04", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/61589aa6e8c18eaf8344f47a806d32949c401f04", "message": "minor refactoring", "committedDate": "2020-05-26T19:04:38Z", "type": "commit"}, {"oid": "b050b5bfe010a8445da7ac444502c541d5ca3f15", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b050b5bfe010a8445da7ac444502c541d5ca3f15", "message": "update doc", "committedDate": "2020-05-27T00:52:47Z", "type": "commit"}, {"oid": "f3d1ccd953a4a63d4a1b2b406d4c270137600823", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f3d1ccd953a4a63d4a1b2b406d4c270137600823", "message": "doc update", "committedDate": "2020-05-27T00:58:30Z", "type": "commit"}, {"oid": "58469de9de2317b2bf7cf04f4fff92486a23914b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/58469de9de2317b2bf7cf04f4fff92486a23914b", "message": "correct spelling", "committedDate": "2020-05-27T01:01:03Z", "type": "commit"}, {"oid": "692c5de1f487ba258823db61dedd5ffed843faa9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/692c5de1f487ba258823db61dedd5ffed843faa9", "message": "remove 'experimental'", "committedDate": "2020-05-27T01:04:04Z", "type": "commit"}, {"oid": "5cc5253413dced8ebcd5122352b927494b7e8f90", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5cc5253413dced8ebcd5122352b927494b7e8f90", "message": "doc update", "committedDate": "2020-05-27T01:15:17Z", "type": "commit"}, {"oid": "d7dec22ffe8020462a89407e3ff55e54df928121", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d7dec22ffe8020462a89407e3ff55e54df928121", "message": "fix typo", "committedDate": "2020-05-28T03:23:48Z", "type": "commit"}, {"oid": "1df43c753f60f2f8ff007aaf90bd915935cea941", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1df43c753f60f2f8ff007aaf90bd915935cea941", "message": "add simple test for istio network channels", "committedDate": "2020-05-28T03:34:48Z", "type": "commit"}, {"oid": "e080e5269011d326eea616ce14a465cd59bb0381", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e080e5269011d326eea616ce14a465cd59bb0381", "message": "correct side effect of cd", "committedDate": "2020-05-28T22:03:40Z", "type": "commit"}, {"oid": "16a91b8e98edddef9f2cf3a89b7cb00f9eba8199", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16a91b8e98edddef9f2cf3a89b7cb00f9eba8199", "message": "add protocol check", "committedDate": "2020-05-29T00:02:08Z", "type": "commit"}, {"oid": "86ebe093a225dea5e5eea3dca0f15082b191bd3a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/86ebe093a225dea5e5eea3dca0f15082b191bd3a", "message": "remove working file", "committedDate": "2020-05-29T00:18:18Z", "type": "commit"}, {"oid": "393c40ed11ec798fae17d92e4f51b308fa74c3b8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/393c40ed11ec798fae17d92e4f51b308fa74c3b8", "message": "restore istio fix python but remove all standard istio protocols leaving user external channel", "committedDate": "2020-05-29T01:28:33Z", "type": "commit"}, {"oid": "edbd4f348d6bc650580dc31cb15878fb6dccf400", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/edbd4f348d6bc650580dc31cb15878fb6dccf400", "message": "update test data", "committedDate": "2020-05-29T02:46:57Z", "type": "commit"}, {"oid": "0b5fc210f076cddaa719ca1bbb4a969296414635", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0b5fc210f076cddaa719ca1bbb4a969296414635", "message": "Merge branch 'develop' into owls-81599", "committedDate": "2020-05-29T12:14:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4MTkxNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432481914", "bodyText": "as shown in the example below -> as shown in the following example:   (that is, if it is the following example; I couldn't quite tell.)", "author": "rosemarymarano", "createdAt": "2020-05-29T13:27:58Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -68,16 +64,10 @@ $ kubectl create namespace domain1\n $ kubectl label namespace domain1 istio-injection=enabled\n ```\n \n-Currently, the experimental Istio support is provided only for domains stored on\n-persistent volumes.  To enable the support for a domain, you need to add the\n-`experimental` section to your domain custom resource YAML file as shown in the\n+To enable the support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4MjUxNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432482516", "bodyText": "introspect job  -> introspector job\nwill automatcially create -> automatically creates\nsatisy -> satisfy\nrequirements: -> requirements, including:", "author": "rosemarymarano", "createdAt": "2020-05-29T13:28:58Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4Njk2MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432486961", "bodyText": "introspect job will not create -> introspector job does not create\nexternal access for you. -> external access.\nin your regular WebLogic domain configuration. -> in your WebLogic domain configuration.", "author": "rosemarymarano", "createdAt": "2020-05-29T13:36:30Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MTgxNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432491817", "bodyText": "You can set it to according to your environment of omit it to use the default (31111) -> You can set it according to your environment or omit it, to use the default (31111).", "author": "rosemarymarano", "createdAt": "2020-05-29T13:44:29Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MjA5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432492099", "bodyText": "when the Istio support -> when Istio support", "author": "rosemarymarano", "createdAt": "2020-05-29T13:44:57Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)\n+\n \n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Additionally, when the Istio support is enabled for a domain, the operator will", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MjU1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432492558", "bodyText": "domain resource yaml -> domain resource YAML file", "author": "rosemarymarano", "createdAt": "2020-05-29T13:45:36Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)\n+\n \n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Additionally, when the Istio support is enabled for a domain, the operator will\n ensure that the Istio sidecar is not injected into the introspector job's pods.\n \n+\n+### Apply the domain resource yaml", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5Mjg0OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432492849", "bodyText": "Once the domain resource yaml is modified -> After the domain resource YAML file is modified\nyou can apply it by -> apply it by:", "author": "rosemarymarano", "createdAt": "2020-05-29T13:46:05Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)\n+\n \n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Additionally, when the Istio support is enabled for a domain, the operator will\n ensure that the Istio sidecar is not injected into the introspector job's pods.\n \n+\n+### Apply the domain resource yaml\n+\n+Once the domain resource yaml is modified, you can apply it by", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MzY3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432493678", "bodyText": "and after all the servers are up, you should see something like this -> After all the servers are up, you will see output like this:", "author": "rosemarymarano", "createdAt": "2020-05-29T13:47:26Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)\n+\n \n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Additionally, when the Istio support is enabled for a domain, the operator will\n ensure that the Istio sidecar is not injected into the introspector job's pods.\n \n+\n+### Apply the domain resource yaml\n+\n+Once the domain resource yaml is modified, you can apply it by\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+and after all the servers are up, you should see something like this", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NDA0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432494044", "bodyText": "and if you use istioctl proxy-status, you should see the mesh status -> If you use istioctl proxy-status, you will see the mesh status:", "author": "rosemarymarano", "createdAt": "2020-05-29T13:47:59Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)\n+\n \n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Additionally, when the Istio support is enabled for a domain, the operator will\n ensure that the Istio sidecar is not injected into the introspector job's pods.\n \n+\n+### Apply the domain resource yaml\n+\n+Once the domain resource yaml is modified, you can apply it by\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+and after all the servers are up, you should see something like this\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+and if you use `istioctl proxy-status`, you should see the mesh status", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NDQxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432494419", "bodyText": "with the Istio support -> with Istio support", "author": "rosemarymarano", "createdAt": "2020-05-29T13:48:34Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspect job will automatcially create configuration overrrides with the necessary channels for the domain to satisy Istio's requirements:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspect job will not create any configuration network channel for external access for you.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your regular WebLogic domain configuration.\n * In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting) and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port and the public address\n       set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-cluster` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n       and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n+    * A channel called `istio-http` with listen address `127.0.0.1:31111` and the\n       public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n+      is the Istio proxy (envoy) port.  You can set it to according to your environment of omit it to use the default (31111)\n+\n \n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Additionally, when the Istio support is enabled for a domain, the operator will\n ensure that the Istio sidecar is not injected into the introspector job's pods.\n \n+\n+### Apply the domain resource yaml\n+\n+Once the domain resource yaml is modified, you can apply it by\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+and after all the servers are up, you should see something like this\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+and if you use `istioctl proxy-status`, you should see the mesh status\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n #### Exposing applications in Istio-enabled domains\n \n-When a domain is running with the experimental Istio support, you should use the Istio\n+When a domain is running with the Istio support, you should use the Istio", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NDc1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432494758", "bodyText": "The Istio support does enable -> The Istio support enables", "author": "rosemarymarano", "createdAt": "2020-05-29T13:49:11Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -195,7 +218,7 @@ For more information about providing ingress using Istio, refer to the [Istio do\n Istio provides traffic management capabilities, including the ability to\n visualize traffic in Kiali.  You do not need to change your applications to use\n this feature.  The Istio proxy (envoy) sidecar that is injected into your pods\n-provides this visibility. The experimental Istio support does enable\n+provides this visibility. The Istio support does enable", "originalCommit": "0b5fc210f076cddaa719ca1bbb4a969296414635", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "message": "doc changes", "committedDate": "2020-05-29T14:10:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyMzY0Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432523642", "bodyText": "Let's bump the Istio version up to the one that we will test, which I believe is 1.4.6. It's the same version as is supported by OLCNE 1.1.", "author": "rjeberhard", "createdAt": "2020-05-29T14:28:12Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -6,7 +6,7 @@ weight: 1\n \n #### Overview\n \n-WebLogic Server Kubernetes Operator version 2.3 and later includes experimental support for Istio 1.2.2 and later.\n+WebLogic Server Kubernetes Operator version 2.3 and later includes support for Istio 1.2.2 and later.", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNDU2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432524566", "bodyText": "I think we can support this now ;).  It's a good test case. I'm pretty sure this statement is here because we only had the support built-in to the sample.", "author": "rjeberhard", "createdAt": "2020-05-29T14:29:09Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -16,18 +16,14 @@ other components and services that have tracing enabled.\n \n #### Limitations\n \n-The current experimental support for Istio has these limitations:\n+The current support for Istio has these limitations:\n \n * It is tested with Istio 1.2.2 and later (up to 1.5), however it is tested with both single and\n   multicluster installations of Istio.\n-* Support is provided only for domains that are stored in persistent\n-  volumes and created with the provided sample using the WLST option.\n-  We intend to support Domain in Image and WDT options as well, but that is not currently\n-  available.\n * Support is provided only for domains with a single dynamic cluster.\n-  Multiple clusters and configured clusters are not currently supported.\n+  Multiple clusters and configured clusters are not currently supported ???", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMjE4Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432532187", "bodyText": "I can remove the statement, but I need to update the introspector to support configured cluster", "author": "jshum2479", "createdAt": "2020-05-29T14:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNDU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyODQ3Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432528473", "bodyText": "There is nothing special about the \"istio-T3Channel\" name.\n@jshum2479, we probably need to discuss this more.  Here's what I was intuitively expecting...  that the WebLogic default, default admin, and default secure channels (if enabled) would be replaced with a set of single-protocol channels with some naming pattern that avoids overlaps and then similarly for any configured NAP's.", "author": "rjeberhard", "createdAt": "2020-05-29T14:33:41Z", "path": "docs-source/content/userguide/experimental/istio.md", "diffHunk": "@@ -89,52 +79,85 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n+      envoyPort: 31111\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided.  The `envoyPort` is optional and defaults to `31111` if not provided.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n \n * On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n+    * A network channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n       the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n+    * A network channel called `istio-t3` with listen address `127.0.0.1` and the port\n       you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n+    * A channel called `istio-ldap` with listen address `127.0.0.1` and the port\n       you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n+    * The introspector job does not create any configuration network channel for external access.  You can create a channel called `istio-T3Channel` with listen address `127.0.0.1` and the port you specified as the T3 port in your WebLogic domain configuration.", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyOTQ1OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432529458", "bodyText": "I think this entire file should go away.", "author": "rjeberhard", "createdAt": "2020-05-29T14:35:15Z", "path": "kubernetes/samples/scripts/create-weblogic-domain/domain-home-on-pv/wlst/istio-fix-domain.py", "diffHunk": "@@ -27,52 +27,9 @@ def toDNS1123Legal(address):\n managed_server_name_base_svc = getEnvVar(\"MANAGED_SERVER_NAME_BASE_SVC\")\n domain_logs                  = getEnvVar(\"DOMAIN_LOGS_DIR\")\n script_dir                   = getEnvVar(\"CREATE_DOMAIN_SCRIPT_DIR\")", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzODAwOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432538009", "bodyText": "The sample has the option of specifying an external T3Channel, since the introspector does not automatically change it to istio-T3Channel, that's why I restore it and only leaves the logic of setting up the input as istio-T3Channel.", "author": "jshum2479", "createdAt": "2020-05-29T14:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyOTQ1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMDQ4Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432530487", "bodyText": "Let's put this on the next line.", "author": "rjeberhard", "createdAt": "2020-05-29T14:36:55Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/Configuration.java", "diffHunk": "@@ -113,7 +131,7 @@ public String toString() {\n   public int hashCode() {\n     HashCodeBuilder builder = new HashCodeBuilder()\n         .append(model).append(opss).append(secrets).append(overridesConfigMap)\n-        .append(introspectorJobActiveDeadlineSeconds);\n+        .append(introspectorJobActiveDeadlineSeconds).append(istio);", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMTM5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432531394", "bodyText": "It's probably easiest for our Verrazzano friends if we keep Istio under Experimental and then add it under Configuration as you've done. If the value under Configuration is present then that is normative -- no merging if Istio is present at both places.", "author": "rjeberhard", "createdAt": "2020-05-29T14:38:22Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/DomainSpec.java", "diffHunk": "@@ -655,8 +655,8 @@ public void setConfigOverrideSecrets(@Nullable List<String> overridesSecretNames\n    * @return istioEnabled\n    */\n   boolean isIstioEnabled() {\n-    return Optional.ofNullable(experimental)\n-        .map(Experimental::getIstio)\n+    return Optional.ofNullable(configuration)", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMzAxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432533018", "bodyText": "As mentioned above, I think we're going to need to look at default, default-secure, and default-admin and adjust based on what is currently enabled.", "author": "rjeberhard", "createdAt": "2020-05-29T14:40:57Z", "path": "operator/src/main/resources/scripts/introspectDomain.py", "diffHunk": "@@ -1072,6 +1075,213 @@ def customizeNetworkAccessPoint(self, nap, listen_address):\n         self.undent()\n         self.writeln(\"</d:network-access-point>\")\n \n+  def _getNapConfigOverrideAction(self, svr, testname):\n+    found = False\n+    add_action = 'f:combine-mode=\"add\"'\n+    replace_action = 'f:combine-mode=\"replace\"'\n+\n+    for nap in svr.getNetworkAccessPoints():\n+      if nap.getName() == testname:\n+        found = True\n+        break\n+\n+    if found:\n+      return replace_action, \"replace\"\n+    else:\n+      return add_action, \"add\"\n+\n+  def customizeAdminIstioNetworkAccessPoint(self, listen_address, server):\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+    if istio_enabled == 'false':\n+      return\n+    istio_readiness_port = self.env.getEnvOrDef(\"ISTIO_READINESS_PORT\", None)\n+    if istio_readiness_port is None:\n+      return\n+\n+    admin_port = server.getListenPort()\n+    action, type = self._getNapConfigOverrideAction(server, \"istio-probe\")\n+\n+    # For add, we must put the combine mode as add\n+    # For replace, we must omit it\n+\n+    if type == \"add\":\n+      self.writeln('<d:network-access-point %s>' % action)\n+    else:\n+      self.writeln('<d:network-access-point>')\n+\n+    self.indent()\n+    if type == \"add\":\n+      self.writeln('<d:name %s>istio-probe</d:name>' % action)\n+    else:\n+      self.writeln('<d:name>istio-probe</d:name>')\n+\n+    self.writeln('<d:protocol %s>http</d:protocol>' % action)\n+    self.writeln('<d:listen-address %s>127.0.0.1</d:listen-address>' % action)\n+    self.writeln('<d:public-address %s>%s</d:public-address>' % (action, listen_address))\n+    self.writeln('<d:listen-port %s>%s</d:listen-port>' % (action, istio_readiness_port))\n+    self.writeln('<d:http-enabled-for-this-protocol %s>true</d:http-enabled-for-this-protocol>' % action)\n+    self.writeln('<d:tunneling-enabled %s>false</d:tunneling-enabled>' % action)\n+    self.writeln('<d:outbound-enabled %s>false</d:outbound-enabled>' % action)\n+    self.writeln('<d:enabled %s>true</d:enabled>' % action)\n+    self.writeln('<d:two-way-ssl-enabled %s>false</d:two-way-ssl-enabled>' % action)\n+    self.writeln('<d:client-certificate-enforced %s>false</d:client-certificate-enforced>' % action)\n+    self.undent()\n+    self.writeln('</d:network-access-point>')\n+\n+    action, type = self._getNapConfigOverrideAction(server, \"istio-ldap\")\n+    if type == \"add\":\n+      self.writeln('<d:network-access-point %s>' % action)\n+    else:\n+      self.writeln('<d:network-access-point>')\n+    self.indent()\n+    if type == \"add\":\n+      self.writeln('<d:name %s>istio-ldap</d:name>' % action)\n+    else:\n+      self.writeln('<d:name>istio-ldap</d:name>')\n+\n+    self.writeln('<d:protocol %s>ldap</d:protocol>' % action)\n+    self.writeln('<d:listen-address %s>127.0.0.1</d:listen-address>' % action)\n+    self.writeln('<d:public-address %s>%s</d:public-address>' % (action, listen_address))\n+    self.writeln('<d:listen-port %s>%s</d:listen-port>' % (action, admin_port))\n+    self.writeln('<d:tunneling-enabled %s>false</d:tunneling-enabled>' % action)\n+    self.writeln('<d:outbound-enabled %s>false</d:outbound-enabled>' % action)\n+    self.writeln('<d:enabled %s>true</d:enabled>' % action)\n+    self.writeln('<d:two-way-ssl-enabled %s>false</d:two-way-ssl-enabled>' % action)", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzNDI0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432534241", "bodyText": "This looks odd... The customer shouldn't have to add these channels to the model.  What is this testing?", "author": "rjeberhard", "createdAt": "2020-05-29T14:42:48Z", "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "diffHunk": "@@ -35,6 +35,37 @@ topology:\n                     PublicAddress: '@@PROP:T3CHANNEL2_PUBLIC_LISTEN_ADDR@@'\n                 T3Channel3:\n                     ListenPort: 30014\n+                'istio-probe':", "originalCommit": "dd6c57e1dd0d005ccdeb8089589a1b7e534469d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MDc0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r432690741", "bodyText": "This is just to test the 'replace' option if the user just happened already have this defined in their model (e.g. previous verazzano wdt models that have public address set to something else)", "author": "jshum2479", "createdAt": "2020-05-29T19:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzNDI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1MDc3Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440350772", "bodyText": "This is no longer a \"replace option\" test, correct? ... since the name doesn't match. I think this is just confusing :)", "author": "rjeberhard", "createdAt": "2020-06-15T18:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzNDI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1NjExNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440356117", "bodyText": "Correct, forgot I added this, removed", "author": "jshum2479", "createdAt": "2020-06-15T18:10:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzNDI0MQ=="}], "type": "inlineReview"}, {"oid": "f99c20b74ea02fa24251e2be6908f97d5b4f2ddf", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f99c20b74ea02fa24251e2be6908f97d5b4f2ddf", "message": "Restore Experimental and other updates", "committedDate": "2020-05-29T16:15:25Z", "type": "commit"}, {"oid": "a5a96373b77a378e0a02703a40799b590a761c87", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a5a96373b77a378e0a02703a40799b590a761c87", "message": "refactor and add ports to pod", "committedDate": "2020-05-30T03:06:50Z", "type": "commit"}, {"oid": "fad16b45c10eab53570c4c43834ff1c5ca74367d", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fad16b45c10eab53570c4c43834ff1c5ca74367d", "message": "some refactoring", "committedDate": "2020-05-30T15:09:37Z", "type": "commit"}, {"oid": "72174579bcfc3e116890f7883daa9059518a3cdc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/72174579bcfc3e116890f7883daa9059518a3cdc", "message": "Merge branch 'develop' into owls-81599", "committedDate": "2020-06-01T15:41:02Z", "type": "commit"}, {"oid": "2c8725c986d03af4ce47d2c38f34ba74dbbcd5e2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2c8725c986d03af4ce47d2c38f34ba74dbbcd5e2", "message": "fix script to append istio- for generated channel names", "committedDate": "2020-06-01T20:20:30Z", "type": "commit"}, {"oid": "540c49a531cbc72f85d0d38fa802f5d277f5498a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/540c49a531cbc72f85d0d38fa802f5d277f5498a", "message": "make sure the istio-* overrides channel ports are also created by the pod", "committedDate": "2020-06-02T16:01:23Z", "type": "commit"}, {"oid": "47be10f66a07d5102611031f8a92dd29ae9e93af", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/47be10f66a07d5102611031f8a92dd29ae9e93af", "message": "update sample for external channel port", "committedDate": "2020-06-04T17:04:24Z", "type": "commit"}, {"oid": "ecb8b08488287422d82597288b83e2273aca3104", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ecb8b08488287422d82597288b83e2273aca3104", "message": "undo the changes", "committedDate": "2020-06-04T18:30:01Z", "type": "commit"}, {"oid": "9b8f48d0a903a56c49a005bad18eeadfa82269f8", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9b8f48d0a903a56c49a005bad18eeadfa82269f8", "message": "replace token when istioEnabled = false", "committedDate": "2020-06-05T16:41:36Z", "type": "commit"}, {"oid": "f58816c3c0588342f474e3c7850489d6b11005f7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f58816c3c0588342f474e3c7850489d6b11005f7", "message": "correct external channel name when istio is enabled for sample", "committedDate": "2020-06-07T20:46:44Z", "type": "commit"}, {"oid": "bcc0796a4b489041b455cbc236ca1cc975ea419c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bcc0796a4b489041b455cbc236ca1cc975ea419c", "message": "disable expose channel as service when in istio, let the mesh handle it.", "committedDate": "2020-06-08T22:57:11Z", "type": "commit"}, {"oid": "8b2dc1b2b215c1f27623428a28e1c5db8b7e9e1c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8b2dc1b2b215c1f27623428a28e1c5db8b7e9e1c", "message": "Merge branch 'develop' into owls-81599", "committedDate": "2020-06-11T05:05:30Z", "type": "commit"}, {"oid": "791c41ff292fdd1b2214644c46012ea237e09360", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/791c41ff292fdd1b2214644c46012ea237e09360", "message": "fix merge", "committedDate": "2020-06-11T05:06:28Z", "type": "commit"}, {"oid": "87b5b2ffacb12dd9e34a7d64ce316c313c493a54", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/87b5b2ffacb12dd9e34a7d64ce316c313c493a54", "message": "Change naming convention I.", "committedDate": "2020-06-12T00:02:11Z", "type": "commit"}, {"oid": "4ba9465a3c3fefbd04d1891a935e64376d6e6d1c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4ba9465a3c3fefbd04d1891a935e64376d6e6d1c", "message": "add admin port support", "committedDate": "2020-06-12T01:49:52Z", "type": "commit"}, {"oid": "4ee759a6d37d37bd6eabbbbd1c23a3422c57c00b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4ee759a6d37d37bd6eabbbbd1c23a3422c57c00b", "message": "added comments for TODO", "committedDate": "2020-06-12T04:37:51Z", "type": "commit"}, {"oid": "0ebe1b6cf3c93baff702065644b1ec35e0f74ce4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0ebe1b6cf3c93baff702065644b1ec35e0f74ce4", "message": "update doc", "committedDate": "2020-06-12T13:09:26Z", "type": "commit"}, {"oid": "4b49282bf1d9c72c346d45b486a321019da69b88", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4b49282bf1d9c72c346d45b486a321019da69b88", "message": "update doc and add additional protocols ports for default", "committedDate": "2020-06-12T15:28:08Z", "type": "commit"}, {"oid": "b8d8f5aeeb5e05f20d84b8244fa0184e9100ec30", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b8d8f5aeeb5e05f20d84b8244fa0184e9100ec30", "message": "Add support for channel name search when creating ports", "committedDate": "2020-06-12T19:22:37Z", "type": "commit"}, {"oid": "65838547ebf14fe7364bf2679af46bcd5361f4cb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/65838547ebf14fe7364bf2679af46bcd5361f4cb", "message": "add domain validation against exposing default channel when istio is enabled", "committedDate": "2020-06-12T20:59:55Z", "type": "commit"}, {"oid": "d27d41dc3468749887f794ef4ae429392a1650e7", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d27d41dc3468749887f794ef4ae429392a1650e7", "message": "minor fix", "committedDate": "2020-06-12T21:32:21Z", "type": "commit"}, {"oid": "a03826415d4fc4d9d046be5bace35ab9629c18a5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a03826415d4fc4d9d046be5bace35ab9629c18a5", "message": "refactoring", "committedDate": "2020-06-12T23:50:15Z", "type": "commit"}, {"oid": "b67be431ded4bac9f3b0f835ce01780d2b6b378f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b67be431ded4bac9f3b0f835ce01780d2b6b378f", "message": "doc update", "committedDate": "2020-06-13T01:01:30Z", "type": "commit"}, {"oid": "82661afc9a4a483826591f2485e4344d16e438be", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/82661afc9a4a483826591f2485e4344d16e438be", "message": "fix introspectorTest", "committedDate": "2020-06-13T07:55:08Z", "type": "commit"}, {"oid": "3731663bedd7decba910d1e74b2b941835528c09", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3731663bedd7decba910d1e74b2b941835528c09", "message": "doc update", "committedDate": "2020-06-14T14:13:24Z", "type": "commit"}, {"oid": "7d4f19a6f91104f9bbb9b6c94e83fdc8b7ec6f06", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7d4f19a6f91104f9bbb9b6c94e83fdc8b7ec6f06", "message": "doc update", "committedDate": "2020-06-14T14:18:52Z", "type": "commit"}, {"oid": "a0036b2b47f81b20a018fc35ccb7a4753e518811", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a0036b2b47f81b20a018fc35ccb7a4753e518811", "message": "doc update", "committedDate": "2020-06-14T14:22:17Z", "type": "commit"}, {"oid": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "message": "update sample", "committedDate": "2020-06-14T23:51:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDE3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440334177", "bodyText": "version 2.3 -> version 2.6, Istio 1.2.2 -> Istio 1.4.2?", "author": "rjeberhard", "createdAt": "2020-06-15T17:29:37Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -6,32 +6,31 @@ weight: 1\n \n #### Overview\n \n-WebLogic Server Kubernetes Operator version 2.3 and later includes experimental support for Istio 1.2.2 and later.\n+WebLogic Server Kubernetes Operator version 2.3 and later includes support for Istio 1.2.2 and later.", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDQxNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440334417", "bodyText": "Just to clarify, what Istio versions are we testing?", "author": "rjeberhard", "createdAt": "2020-06-15T17:30:05Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -6,32 +6,31 @@ weight: 1\n \n #### Overview\n \n-WebLogic Server Kubernetes Operator version 2.3 and later includes experimental support for Istio 1.2.2 and later.\n+WebLogic Server Kubernetes Operator version 2.3 and later includes support for Istio 1.2.2 and later.\n This support allows you to run the operator itself, and WebLogic domains managed by\n the operator, with Istio sidecar injection enabled.  It will allow you to use\n Istio gateways and virtual services to access applications deployed in these domains.\n If your applications have suitable tracing code in them, then you will also be able to\n use distributed tracing, such as Jaeger, to trace requests across domains and to\n other components and services that have tracing enabled.\n \n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n #### Limitations\n \n-The current experimental support for Istio has these limitations:\n+The current support for Istio has these limitations:\n \n-* It is tested with Istio 1.2.2 and later (up to 1.5), however it is tested with both single and\n+* It is tested with Istio 1.2.2 and later (up to 1.5.4), however it is tested with both single and", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMzMwNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440413305", "bodyText": "Pani have tested 1.4.2 and also 1.5.4.  I am using 1.6.0 and latest 1.6.1 but I didn't do all the QA testings.", "author": "jshum2479", "createdAt": "2020-06-15T19:59:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDk5NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440334995", "bodyText": "the default channel -> any of the default channels", "author": "rjeberhard", "createdAt": "2020-06-15T17:31:07Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -6,32 +6,31 @@ weight: 1\n \n #### Overview\n \n-WebLogic Server Kubernetes Operator version 2.3 and later includes experimental support for Istio 1.2.2 and later.\n+WebLogic Server Kubernetes Operator version 2.3 and later includes support for Istio 1.2.2 and later.\n This support allows you to run the operator itself, and WebLogic domains managed by\n the operator, with Istio sidecar injection enabled.  It will allow you to use\n Istio gateways and virtual services to access applications deployed in these domains.\n If your applications have suitable tracing code in them, then you will also be able to\n use distributed tracing, such as Jaeger, to trace requests across domains and to\n other components and services that have tracing enabled.\n \n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n #### Limitations\n \n-The current experimental support for Istio has these limitations:\n+The current support for Istio has these limitations:\n \n-* It is tested with Istio 1.2.2 and later (up to 1.5), however it is tested with both single and\n+* It is tested with Istio 1.2.2 and later (up to 1.5.4), however it is tested with both single and\n   multicluster installations of Istio.\n-* Support is provided only for domains that are stored in persistent\n-  volumes and created with the provided sample using the WLST option.\n-  We intend to support Domain in Image and WDT options as well, but that is not currently\n-  available.\n-* Support is provided only for domains with a single dynamic cluster.\n-  Multiple clusters and configured clusters are not currently supported.\n+* You cannot expose the default channel, any attempt will result in an error when deploying the domain.  ", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMjU4OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440412589", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:57:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDk5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNTIxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440335218", "bodyText": "separate channel -> network access point (NAP)", "author": "rjeberhard", "createdAt": "2020-06-15T17:31:33Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -6,32 +6,31 @@ weight: 1\n \n #### Overview\n \n-WebLogic Server Kubernetes Operator version 2.3 and later includes experimental support for Istio 1.2.2 and later.\n+WebLogic Server Kubernetes Operator version 2.3 and later includes support for Istio 1.2.2 and later.\n This support allows you to run the operator itself, and WebLogic domains managed by\n the operator, with Istio sidecar injection enabled.  It will allow you to use\n Istio gateways and virtual services to access applications deployed in these domains.\n If your applications have suitable tracing code in them, then you will also be able to\n use distributed tracing, such as Jaeger, to trace requests across domains and to\n other components and services that have tracing enabled.\n \n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n #### Limitations\n \n-The current experimental support for Istio has these limitations:\n+The current support for Istio has these limitations:\n \n-* It is tested with Istio 1.2.2 and later (up to 1.5), however it is tested with both single and\n+* It is tested with Istio 1.2.2 and later (up to 1.5.4), however it is tested with both single and\n   multicluster installations of Istio.\n-* Support is provided only for domains that are stored in persistent\n-  volumes and created with the provided sample using the WLST option.\n-  We intend to support Domain in Image and WDT options as well, but that is not currently\n-  available.\n-* Support is provided only for domains with a single dynamic cluster.\n-  Multiple clusters and configured clusters are not currently supported.\n+* You cannot expose the default channel, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a separate channel in your WebLogic Domain and the expose as a `NodePort` ", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMjMxMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440412310", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNTIxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjQ2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440336462", "bodyText": "pods -> Pods (We capitalize specific references to Kubernetes resources to match the style of the Kubernetes documentation).", "author": "rjeberhard", "createdAt": "2020-06-15T17:33:56Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -89,59 +82,101 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided, it is used for readiness health check.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n-\n-* On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n-* In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting) and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n-      and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n-      public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n-\n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMjIzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440412234", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjU5Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440336592", "bodyText": "sidecare -> sidecar", "author": "rjeberhard", "createdAt": "2020-06-15T17:34:10Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -89,59 +82,101 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided, it is used for readiness health check.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n-\n-* On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n-* In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting) and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n-      and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n-      public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n-\n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecare injection enabled.  WebLogic Operator automatically add the following network", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjgwOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440336809", "bodyText": "Either \"The operator\" or \"The WebLogic Server Kubernetes Operator\"", "author": "rjeberhard", "createdAt": "2020-06-15T17:34:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMjEyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440412128", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjkzMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440336932", "bodyText": "non-SSL (add hyphen)", "author": "rjeberhard", "createdAt": "2020-06-15T17:34:51Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -89,59 +82,101 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided, it is used for readiness health check.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n-\n-* On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n-* In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting) and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n-      and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n-      public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n-\n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecare injection enabled.  WebLogic Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non SSL traffic:", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMjA0MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440412040", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjkzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNzM0Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440337346", "bodyText": "the Administration Server:", "author": "rjeberhard", "createdAt": "2020-06-15T17:35:36Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -89,59 +82,101 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided, it is used for readiness health check.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n-\n-* On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n-* In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting) and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n-      and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n-      public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n-\n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecare injection enabled.  WebLogic Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-t3|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-t3s|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the admin server:", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTk2OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411969", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNzM0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNzcxOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440337718", "bodyText": "ensure -> ensures", "author": "rjeberhard", "createdAt": "2020-06-15T17:36:18Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -89,59 +82,101 @@ metadata:\n     weblogic.domainUID: domain2\n spec:\n   ... other content ...\n-  experimental:\n+  configuration:\n     istio:\n       enabled: true\n       readinessPort: 8888\n ```\n \n-To enable the experimental Istio support, you must include the `istio` section\n+To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided.  \n+and defaults to `8888` if not provided, it is used for readiness health check.\n \n ##### How Istio-enabled domains differ from regular domains\n \n-Istio enforces a number of requirements on pods.  When you enable Istio support, the\n-domain on a persistent volume sample scripts will make the following adjustments\n-to your domain in order to satisy Istio's requirements:\n-\n-* On the Administration Server:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting).\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port.\n-    * Create a channel called `istio-ldap` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the LDAP protocol enabled.\n-    * Create a channel called `istio-T3Channel` with listen\n-      address `127.0.0.1` and the port you specified as the T3 port.\n-* In the server template that is used to create Managed Servers in clusters:\n-    * Create a channel called `istio-probe` with listen address `127.0.0.1:8888` (or\n-      the port you specified in the `readinessPort` setting) and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-t3` with listen address `127.0.0.1` and the port\n-      you specified as the admin port and the public address\n-      set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-cluster` with listen address `127.0.0.1` and the port\n-      you specified as the admin port, with only the CLUSTER_BROADCAST protocol enabled,\n-      and the public address set to the Kubernetes Service for the Managed Server.\n-    * Create a channel called `istio-http` with listen address `127.0.0.1:31111` and the\n-      public address set to the Kubernetes Service for the Managed Server. Note that `31111`\n-      is the Istio proxy (envoy) port.\n-* The create domain job will be configured to disable injection of the Istio sidecar.\n-\n-Additionally, when the experimental Istio support is enabled for a domain, the operator will\n+Istio enforces a number of requirements on pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecare injection enabled.  WebLogic Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-t3|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-t3s|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the admin server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|htps-admin|WebLogic Administration Port|https|Y|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n ensure that the Istio sidecar is not injected into the introspector job's pods.", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTg3Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411877", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNzcxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzODQzMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440338430", "bodyText": "Use the specific link: https://istio.io/latest/docs/setup/getting-started/#determining-the-ingress-ip-and-ports", "author": "rjeberhard", "createdAt": "2020-06-15T17:37:38Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -188,22 +232,23 @@ using HTTP on port 80, and a virtual service that will route all of\n those requests to the cluster service for `cluster-1` in `domain1` in\n the namespace `domain1`.\n \n+Once the gateway and virtual service has been setup, you can access it through your ingress host and port, \n+refer to the section `Determining the ingress IP and ports` in [Istio Getting Started](https://istio.io/latest/docs/setup/getting-started/)\n+", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTgxMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411812", "bodyText": "Fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzODQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzODg3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440338871", "bodyText": "Yes, per Mark's response, let's go ahead and remove experimental.", "author": "rjeberhard", "createdAt": "2020-06-15T17:38:30Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -98,12 +98,13 @@ An element representing a cluster in the domain configuration.\n | `overrideDistributionStrategy` | string | Determines how updated configuration overrides are distributed to already running WebLogic servers following introspection when the domainHomeSourceType is PersistentVolume or Image.  Configuration overrides are generated during introspection from secrets, the overrideConfigMap field, and WebLogic domain topology. Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion. |\n | `overridesConfigMap` | string | The name of the config map for WebLogic configuration overrides. If this field is specified it overrides the value of spec.configOverrides. |\n | `secrets` | array of string | A list of names of the secrets for WebLogic configuration overrides or model. If this field is specified it overrides the value of spec.configOverrideSecrets. |\n+| `istio` | [Istio](#istio) | Moved under configuration. Should we remove this ??? |\n \n ### Experimental\n \n | Name | Type | Description |\n | --- | --- | --- |\n-| `istio` | [Istio](#istio) | Istio service mesh integration configuration. |\n+| `istio` | [Istio](#istio) | Moved under configuration. Should we remove this ??? |", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTcwMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411700", "bodyText": "removed", "author": "jshum2479", "createdAt": "2020-06-15T19:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzODg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTA1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440339051", "bodyText": "Let's ping Mark on this today... I think we should kill this.", "author": "rjeberhard", "createdAt": "2020-06-15T17:38:51Z", "path": "docs/domains/Domain.md", "diffHunk": "@@ -225,6 +226,7 @@ ServerPod describes the configuration for a Kubernetes pod for a server.\n | --- | --- | --- |\n | `enabled` | Boolean | True, if this domain is deployed under an Istio service mesh. Defaults to true when the 'istio' element is included. Not required. |\n | `readinessPort` | number | The WebLogic readiness port for Istio. Defaults to 8888. Not required. |\n+| `envoyPort` | number | The envoy port for Istio. Defaults to 31111. Not required. |", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTU1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411553", "bodyText": "removed", "author": "jshum2479", "createdAt": "2020-06-15T19:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTY2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440339665", "bodyText": "Let's delete this", "author": "rjeberhard", "createdAt": "2020-06-15T17:39:53Z", "path": "kubernetes/samples/scripts/common/utility.sh", "diffHunk": "@@ -450,6 +450,7 @@ function createFiles {\n     sed -i -e \"s:%ISTIO_PREFIX%:${istioPrefix}:g\" ${createJobOutput}\n     sed -i -e \"s:%ISTIO_ENABLED%:${istioEnabled}:g\" ${createJobOutput}\n     sed -i -e \"s:%ISTIO_READINESS_PORT%:${istioReadinessPort}:g\" ${createJobOutput}\n+    #sed -i -e \"s:%ISTIO_ENVOY_PORT%:${istioEnvoyPort}:g\" ${createJobOutput}", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTQ1Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411452", "bodyText": "deleted", "author": "jshum2479", "createdAt": "2020-06-15T19:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTY2NQ=="}], "type": "inlineReview"}, {"oid": "8b44d7162179f366a86ea4090ae289d3ea511035", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8b44d7162179f366a86ea4090ae289d3ea511035", "message": "doc update", "committedDate": "2020-06-15T17:40:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTgzMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440339831", "bodyText": "Same", "author": "rjeberhard", "createdAt": "2020-06-15T17:40:09Z", "path": "kubernetes/samples/scripts/common/utility.sh", "diffHunk": "@@ -511,15 +512,21 @@ function createFiles {\n   sed -i -e \"s:%JAVA_OPTIONS%:${javaOptions}:g\" ${dcrOutput}\n   sed -i -e \"s:%DOMAIN_PVC_NAME%:${persistentVolumeClaimName}:g\" ${dcrOutput}\n   sed -i -e \"s:%DOMAIN_ROOT_DIR%:${domainPVMountPath}:g\" ${dcrOutput}\n+\n+  if [ \"${istioEnabled}\" == \"true\" ]; then\n+      exposeAdminNodePortPrefix=\"${disabledPrefix}\"\n+  fi\n+\n+  sed -i -e \"s:%EXPOSE_T3_CHANNEL_PREFIX%:${exposeAdminT3ChannelPrefix}:g\" ${dcrOutput}\n   sed -i -e \"s:%EXPOSE_ANY_CHANNEL_PREFIX%:${exposeAnyChannelPrefix}:g\" ${dcrOutput}\n   sed -i -e \"s:%EXPOSE_ADMIN_PORT_PREFIX%:${exposeAdminNodePortPrefix}:g\" ${dcrOutput}\n   sed -i -e \"s:%ADMIN_NODE_PORT%:${adminNodePort}:g\" ${dcrOutput}\n-  sed -i -e \"s:%EXPOSE_T3_CHANNEL_PREFIX%:${exposeAdminT3ChannelPrefix}:g\" ${dcrOutput}\n   sed -i -e \"s:%CLUSTER_NAME%:${clusterName}:g\" ${dcrOutput}\n   sed -i -e \"s:%INITIAL_MANAGED_SERVER_REPLICAS%:${initialManagedServerReplicas}:g\" ${dcrOutput}\n   sed -i -e \"s:%ISTIO_PREFIX%:${istioPrefix}:g\" ${dcrOutput}\n   sed -i -e \"s:%ISTIO_ENABLED%:${istioEnabled}:g\" ${dcrOutput}\n   sed -i -e \"s:%ISTIO_READINESS_PORT%:${istioReadinessPort}:g\" ${dcrOutput}\n+  #  sed -i -e \"s:%ISTIO_ENVOY_PORT%:${istioEnvoyPort}:g\" ${dcrOutput}", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTM1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411353", "bodyText": "removed", "author": "jshum2479", "createdAt": "2020-06-15T19:55:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTk5NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440339995", "bodyText": "Assuming our ping with Mark is as expected, delete this.", "author": "rjeberhard", "createdAt": "2020-06-15T17:40:29Z", "path": "kubernetes/samples/scripts/create-weblogic-domain/domain-home-on-pv/create-domain-inputs.yaml", "diffHunk": "@@ -162,6 +162,8 @@ createDomainFilesDir: wlst\n # istioEnabled specifies whether or not it is deployed under Istio.\n istioEnabled: false\n \n-# Istio service mesh support is experimental.\n # istioReadinessPort specifies the WebLogic NAP port for use by the readiness probe\n istioReadinessPort: 8888\n+\n+# istioEnvoyPort specifies the WebLogic NAP port for use by the readiness probe", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTE1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411153", "bodyText": "removed", "author": "jshum2479", "createdAt": "2020-06-15T19:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzOTk5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MDUzNA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440340534", "bodyText": "Extra newline", "author": "rjeberhard", "createdAt": "2020-06-15T17:41:25Z", "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/Configuration.java", "diffHunk": "@@ -34,6 +34,10 @@\n           + \" it overrides the Operator's config map data.introspectorJobActiveDeadlineSeconds value.\")\n   private Long introspectorJobActiveDeadlineSeconds;\n \n+  @ApiModelProperty(\"Istio property\")\n+  private Istio istio;\n+\n+", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDI3MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440410270", "bodyText": "removed", "author": "jshum2479", "createdAt": "2020-06-15T19:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MDUzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MzE4MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440343181", "bodyText": "\"Istio service mesh integration\" or something like that", "author": "rjeberhard", "createdAt": "2020-06-15T17:46:18Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/Configuration.java", "diffHunk": "@@ -39,6 +39,9 @@\n       + \"Legal values are DYNAMIC (the default) and ON_RESTART. See also introspectVersion.\")\n   private OverrideDistributionStrategy overrideDistributionStrategy;\n \n+  @Description(\"Configuration for istio property.\")", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMTAyNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440411027", "bodyText": "The Istio service mesh integration settings", "author": "jshum2479", "createdAt": "2020-06-15T19:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MzE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MzU5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440343598", "bodyText": "Shouldn't this be checking for \"default\", \"default-secure\" or \"default-admin\"?", "author": "rjeberhard", "createdAt": "2020-06-15T17:47:08Z", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/Domain.java", "diffHunk": "@@ -693,6 +702,18 @@ private void addIllegalSitConfigForMii() {\n       }\n     }\n \n+    private void verifyIstioExposingDefaultChannel() {\n+      if (spec.isIstioEnabled()) {\n+        spec.getAdminServer().getAdminService().getChannels().forEach(this::checkForDefaultNameExposed);\n+      }\n+    }\n+\n+    private void checkForDefaultNameExposed(Channel channel) {\n+      if (channel.getChannelName().contains(\"-default\")) {", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440348041", "bodyText": "The introspectDomain.py already splitted the channel and passed them to the operator, so the channels are xxx-default filtered in\nprivate void checkForDefaultNameExposed(Channel channel) {\n      if (channel.getChannelName().contains(\"-default\")) {\n        failures.add(DomainValidationMessages.cannotExposeDefaultChannelIstio());\n      }\n    }```\n\nShould we check fo others like *-snmp, *-iiop *-ldap", "author": "jshum2479", "createdAt": "2020-06-15T17:55:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MzU5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDE1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440410153", "bodyText": "fixed", "author": "jshum2479", "createdAt": "2020-06-15T19:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MzU5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDQ3Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440344476", "bodyText": "Needs to also mention default-secure and default-admin. Collapse to one sentence.", "author": "rjeberhard", "createdAt": "2020-06-15T17:48:47Z", "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -194,7 +194,7 @@ WLSDO-0009=The secret ''{0}'' must be specified if ''domainHomeSourceType'' is c\n WLSDO-0010=The secret ''{0}'' must be specified if ''domainHomeSourceType'' is configured as ''FromModel'' and spec.configuration.model.domainType is configured as ''JRF''.\n WLSDO-0011=Cluster ''{0}'' specified in the domain resource does not exist in the WebLogic domain home configuration.\n WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exist in the WebLogic domain home configuration.\n-\n+WLSDO-0013=Istio is enabled and the domain resource specified to expose default channel in adminServices, this is not allowed. Please create a separeate network channel and then expose it", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwODg5MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440408890", "bodyText": "done", "author": "jshum2479", "createdAt": "2020-06-15T19:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NjM0MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440346341", "bodyText": "I see you are refactoring this... We just fixed a bug in this area for CGBU where they weren't able to start a domain with the SSL MBean enabled. I want to make sure we don't regress this.", "author": "rjeberhard", "createdAt": "2020-06-15T17:52:10Z", "path": "operator/src/main/resources/scripts/introspectDomain.py", "diffHunk": "@@ -395,21 +395,6 @@ def getDynamicServersOrNone(self,cluster):\n       ret = None\n     return ret\n \n-  # Work-around bugs in off-line WLST when accessing an SSL mbean", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwOTc2Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440409762", "bodyText": "It should be fine, I am familiar with the change as I mentioned to DongBo the probelm.", "author": "jshum2479", "createdAt": "2020-06-15T19:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NjM0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Nzc1NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440347754", "bodyText": "This doesn't match the doc at the top...\n|tcp-t3|server listening port|t3|Y|\n|http-default|server listening port|http|Y|\n|tcp-snmp|server listening port|snmp|Y|\n|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n|tcp-iiop|server listening port|http|N|", "author": "rjeberhard", "createdAt": "2020-06-15T17:54:47Z", "path": "operator/src/main/resources/scripts/introspectDomain.py", "diffHunk": "@@ -760,23 +745,99 @@ def addNonClusteredServers(self):\n         self.addServer(server)\n     self.undent()\n \n-  def addNetworkAccessPoints(self, server):\n+  def addNetworkAccessPoints(self, server, is_server_template=False):\n+    \"\"\"\n+    Add network access points for server or server template\n+    :param server:  server or server template\n+    \"\"\"\n     naps = server.getNetworkAccessPoints()\n-    if len(naps) == 0:\n-      return\n-    self.writeln(\"  networkAccessPoints:\")\n-    self.indent()\n-    for nap in naps:\n-      self.addNetworkAccessPoint(nap)\n-    self.undent()\n+    added_nap = False\n+    if len(naps) != 0:\n+      added_nap = True\n+      self.writeln(\"  networkAccessPoints:\")\n+      self.indent()\n+      for nap in naps:\n+        self.addNetworkAccessPoint(nap)\n+\n+    self.addIstioNetworkAccessPoints(server, is_server_template, added_nap)\n+    if len(naps) != 0:\n+      self.undent()\n \n   def addNetworkAccessPoint(self, nap):\n-    name=self.name(nap)\n+\n+    # Change the name to follow the istio port naming convention\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+\n+    if istio_enabled == 'true':\n+      http_protocol = [ 'http' ]\n+      https_protocol = ['https','admin']\n+      tcp_protocol = [ 't3', 'snmp', 'ldap', 'cluster-broadcast', 'iiop']\n+      tls_protocol = [ 't3s', 'iiops', 'cluster-broadcast-secure']\n+      if nap.getProtocol() in http_protocol:\n+        name = 'http-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in https_protocol:\n+        name = 'https-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in tcp_protocol:\n+        name = 'tcp-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in tls_protocol:\n+        name = 'tls-' + nap.getName().replace(' ', '_')\n+      else:\n+        name = 'tcp-' + nap.getName().replace(' ', '_')\n+    else:\n+      name=self.name(nap)\n     self.writeln(\"  - name: \" + name)\n     self.writeln(\"    protocol: \" + self.quote(nap.getProtocol()))\n     self.writeln(\"    listenPort: \" + str(nap.getListenPort()))\n     self.writeln(\"    publicPort: \" + str(nap.getPublicPort()))\n \n+  def addIstioNetworkAccessPoints(self, server, is_server_template, added_nap):\n+    '''\n+    Write the container ports information for operator to create the container ports\n+    :param server:   server or template mbean\n+    :param is_server_template:  true if it is from ServerTemplate\n+    :param added_nap:  true if there are existing nap section in the output\n+    '''\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+    if istio_enabled == 'false':\n+      return\n+\n+    if not added_nap:\n+      self.writeln(\"  networkAccessPoints:\")\n+      self.indent()\n+\n+    # istio probe is not exposed\n+    # istio_readiness_port = self.env.getEnvOrDef(\"ISTIO_READINESS_PORT\", None)\n+    # # self.addIstioNetworkAccessPoint(\"http-probe\", \"http\", istio_readiness_port, 0)\n+\n+    self.addIstioNetworkAccessPoint(\"tcp-ldap\", \"ldap\", server.getListenPort(), 0)\n+    self.addIstioNetworkAccessPoint(\"tcp-default\", \"t3\", server.getListenPort(), 0)", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTM1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440349351", "bodyText": "Remove commented out assuming we're sure we don't need :)", "author": "rjeberhard", "createdAt": "2020-06-15T17:57:32Z", "path": "operator/src/main/resources/scripts/introspectDomain.py", "diffHunk": "@@ -760,23 +745,99 @@ def addNonClusteredServers(self):\n         self.addServer(server)\n     self.undent()\n \n-  def addNetworkAccessPoints(self, server):\n+  def addNetworkAccessPoints(self, server, is_server_template=False):\n+    \"\"\"\n+    Add network access points for server or server template\n+    :param server:  server or server template\n+    \"\"\"\n     naps = server.getNetworkAccessPoints()\n-    if len(naps) == 0:\n-      return\n-    self.writeln(\"  networkAccessPoints:\")\n-    self.indent()\n-    for nap in naps:\n-      self.addNetworkAccessPoint(nap)\n-    self.undent()\n+    added_nap = False\n+    if len(naps) != 0:\n+      added_nap = True\n+      self.writeln(\"  networkAccessPoints:\")\n+      self.indent()\n+      for nap in naps:\n+        self.addNetworkAccessPoint(nap)\n+\n+    self.addIstioNetworkAccessPoints(server, is_server_template, added_nap)\n+    if len(naps) != 0:\n+      self.undent()\n \n   def addNetworkAccessPoint(self, nap):\n-    name=self.name(nap)\n+\n+    # Change the name to follow the istio port naming convention\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+\n+    if istio_enabled == 'true':\n+      http_protocol = [ 'http' ]\n+      https_protocol = ['https','admin']\n+      tcp_protocol = [ 't3', 'snmp', 'ldap', 'cluster-broadcast', 'iiop']\n+      tls_protocol = [ 't3s', 'iiops', 'cluster-broadcast-secure']\n+      if nap.getProtocol() in http_protocol:\n+        name = 'http-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in https_protocol:\n+        name = 'https-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in tcp_protocol:\n+        name = 'tcp-' + nap.getName().replace(' ', '_')\n+      elif nap.getProtocol() in tls_protocol:\n+        name = 'tls-' + nap.getName().replace(' ', '_')\n+      else:\n+        name = 'tcp-' + nap.getName().replace(' ', '_')\n+    else:\n+      name=self.name(nap)\n     self.writeln(\"  - name: \" + name)\n     self.writeln(\"    protocol: \" + self.quote(nap.getProtocol()))\n     self.writeln(\"    listenPort: \" + str(nap.getListenPort()))\n     self.writeln(\"    publicPort: \" + str(nap.getPublicPort()))\n \n+  def addIstioNetworkAccessPoints(self, server, is_server_template, added_nap):\n+    '''\n+    Write the container ports information for operator to create the container ports\n+    :param server:   server or template mbean\n+    :param is_server_template:  true if it is from ServerTemplate\n+    :param added_nap:  true if there are existing nap section in the output\n+    '''\n+    istio_enabled = self.env.getEnvOrDef(\"ISTIO_ENABLED\", \"false\")\n+    if istio_enabled == 'false':\n+      return\n+\n+    if not added_nap:\n+      self.writeln(\"  networkAccessPoints:\")\n+      self.indent()\n+\n+    # istio probe is not exposed\n+    # istio_readiness_port = self.env.getEnvOrDef(\"ISTIO_READINESS_PORT\", None)\n+    # # self.addIstioNetworkAccessPoint(\"http-probe\", \"http\", istio_readiness_port, 0)\n+\n+    self.addIstioNetworkAccessPoint(\"tcp-ldap\", \"ldap\", server.getListenPort(), 0)\n+    self.addIstioNetworkAccessPoint(\"tcp-default\", \"t3\", server.getListenPort(), 0)\n+    # No need to to http default, PodStepContext already handle it\n+    self.addIstioNetworkAccessPoint(\"http-default\", \"t3\", server.getListenPort(), 0)\n+    self.addIstioNetworkAccessPoint(\"tcp-snmp\", \"snmp\", server.getListenPort(), 0)\n+    self.addIstioNetworkAccessPoint(\"tcp-iiop\", \"iiop\", server.getListenPort(), 0)\n+\n+    ssl = getSSLOrNone(server)\n+    if ssl is not None and ssl.isEnabled():\n+      ssl_listen_port = ssl.getListenPort()\n+      self.addIstioNetworkAccessPoint(\"https-secure\", \"https\", ssl_listen_port, 0)\n+      self.addIstioNetworkAccessPoint(\"tls-ldaps\", \"ldaps\", ssl_listen_port, 0)\n+      self.addIstioNetworkAccessPoint(\"tls-default\", \"t3s\", ssl_listen_port, 0)\n+      self.addIstioNetworkAccessPoint(\"tls-iiops\", \"iiops\", ssl_listen_port, 0)\n+\n+    if server.isAdministrationPortEnabled():\n+      self.addIstioNetworkAccessPoint(\"https-admin\", \"https\", server.getAdministrationPort(), 0)\n+\n+    # if is_server_template:", "originalCommit": "a8e757fae13055658bdb97ce89e2b3a9a7a91c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwOTk3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440409978", "bodyText": "done", "author": "jshum2479", "createdAt": "2020-06-15T19:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTM1MQ=="}], "type": "inlineReview"}, {"oid": "b13d4990c84ff5f73544a654d1dd89784a9bdeaf", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b13d4990c84ff5f73544a654d1dd89784a9bdeaf", "message": "PR responses", "committedDate": "2020-06-15T19:22:12Z", "type": "commit"}, {"oid": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "message": "Correct error message text", "committedDate": "2020-06-15T19:29:35Z", "type": "commit"}, {"oid": "385b8384694f21ad1f4f6b6d8b7337b1d3df3193", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/385b8384694f21ad1f4f6b6d8b7337b1d3df3193", "message": "update error message for domain validation", "committedDate": "2020-06-15T19:49:48Z", "type": "commit"}, {"oid": "8078cd6045f0166920e668fec91c2106c3ea8edb", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8078cd6045f0166920e668fec91c2106c3ea8edb", "message": "remove Experimental from the domain crd.", "committedDate": "2020-06-15T20:54:32Z", "type": "commit"}, {"oid": "5884aa5561bda911d7c6c561091305bd73aa793b", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5884aa5561bda911d7c6c561091305bd73aa793b", "message": "remove experimental phrase in comment", "committedDate": "2020-06-15T20:57:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNTUxOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440435519", "bodyText": "Add a period at the end of this sentence, \"You can learn more about Istio at Istio.\"", "author": "rosemarymarano", "createdAt": "2020-06-15T20:43:34Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODU0OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440438549", "bodyText": "default channels, -> default channels; (semi-colon - these are two complete sentences)\nYou cannot expose any of the default channels; any attempt will result in an error when deploying the domain.", "author": "rosemarymarano", "createdAt": "2020-06-15T20:49:39Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  ", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODc0NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440438745", "bodyText": "WLST command -> WLST commands\nyou can define a network access point (NAP) -> define a network access point (NAP)\nWebLogic Domain -> WebLogic domain", "author": "rosemarymarano", "createdAt": "2020-06-15T20:50:04Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` ", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MDYzOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440440638", "bodyText": "YAML -> YAML file", "author": "rosemarymarano", "createdAt": "2020-06-15T20:53:46Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  ", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTQ3OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440441479", "bodyText": "with Istio Installation installed -> with Istio installed", "author": "rosemarymarano", "createdAt": "2020-06-15T20:55:22Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MjE1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440442151", "bodyText": "namespace you wish to run the operator in, and label it -> namespace in which you want to run the operator and label it", "author": "rosemarymarano", "createdAt": "2020-06-15T20:56:47Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NDcwNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440444705", "bodyText": "you can install the operator using the normal method. ->  you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).", "author": "rosemarymarano", "createdAt": "2020-06-15T21:01:22Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NTIxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440445213", "bodyText": "check this -> validate this", "author": "rosemarymarano", "createdAt": "2020-06-15T21:02:28Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NTkxMw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440445913", "bodyText": "namespace you wish to run the domain in, and label it -> namespace in which you want to run the domain and label it", "author": "rosemarymarano", "createdAt": "2020-06-15T21:03:55Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NzM4OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440447388", "bodyText": "provided, it is used for readiness health check. -> provided; it is used for readiness health check. (semi-colon joins two complete sentences)", "author": "rosemarymarano", "createdAt": "2020-06-15T21:07:01Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NzY5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440447694", "bodyText": "add  -> adds", "author": "rosemarymarano", "createdAt": "2020-06-15T21:07:38Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NzkzNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440447937", "bodyText": "via  -> using", "author": "rosemarymarano", "createdAt": "2020-06-15T21:08:01Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTk2NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440449965", "bodyText": "In this table and the following one, all the entries in the Name and Protocol columns should be in code font, that means surrounded by back ticks. For example, http-probe -> http-probe", "author": "rosemarymarano", "createdAt": "2020-06-15T21:12:19Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzODU2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441638566", "bodyText": "i don't think the content in the second column should be backticked", "author": "markxnelson", "createdAt": "2020-06-17T15:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzOTMzMA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441639330", "bodyText": "or the last one.. and \"Yes\"/\"No\" is probably better than \"Y\"/\"N\"", "author": "markxnelson", "createdAt": "2020-06-17T15:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTk2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDU3NQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440450575", "bodyText": "If WebLogic Administration Port -> If the WebLogic administration port", "author": "rosemarymarano", "createdAt": "2020-06-15T21:13:29Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-default|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-default|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTM4MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441625381", "bodyText": "I don't see this correction: If WebLogic Administration Port -> If the WebLogic administration port", "author": "rosemarymarano", "createdAt": "2020-06-17T15:15:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDk5NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440450994", "bodyText": "yaml -> YAML file (always capitalized and always followed by the word, file)", "author": "rosemarymarano", "createdAt": "2020-06-15T21:14:27Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-default|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-default|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|htps-admin|WebLogic Administration Port|https|Y|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTk1OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r441625959", "bodyText": "I don't see this correction: yaml -> YAML file (always capitalized and always followed by the word, file)", "author": "rosemarymarano", "createdAt": "2020-06-17T15:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTg4Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440451886", "bodyText": "Once  -> After\nsetup -> set up\nport, -> port. (End of sentence)", "author": "rosemarymarano", "createdAt": "2020-06-15T21:16:20Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-default|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-default|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|htps-admin|WebLogic Administration Port|https|Y|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML is modified, apply it by\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio\n+gateway to provide external access to applications, instead of using an ingress\n+controller like Traefik.  Using the Istio gateway will enable you to view the\n+traffic in Kiali and to use distributed tracing all the way from the entry point to\n+the cluster, for example, the Istio gateway.\n+\n+To configure external access to your domain, you need to create an Istio `Gateway` and\n+`Virtualservice` as shown in the example below:\n+\n+```\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: Gateway\n+metadata:\n+  name: domain1-gateway\n+  namespace: domain1\n+spec:\n+  selector:\n+    istio: ingressgateway\n+  servers:\n+    - hosts:\n+        - '*'\n+      port:\n+        name: http\n+        number: 80\n+        protocol: HTTP\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: VirtualService\n+metadata:\n+  name: domain1-virtualservice\n+  namespace: domain1\n+spec:\n+  gateways:\n+    - domain1-gateway\n+  hosts:\n+    - '*'\n+  http:\n+    - match:\n+        - uri:\n+            prefix: /console\n+        - port: 7001\n+      route:\n+        - destination:\n+            host: sample-domain1-admin-server.sample-domain1-ns.svc.cluster.local\n+            port:\n+              number: 7001\n+    - match:\n+        - uri:\n+            prefix: /testwebapp\n+        - port: 8001\n+      route:\n+        - destination:\n+            host: sample-domain1-cluster-cluster-1.domain1.svc.cluster.local\n+            port:\n+              number: 8001\n+```\n+\n+This example creates a gateway that will accept requests with any host name\n+using HTTP on port 80, and a virtual service that will route all of\n+those requests to the cluster service for `cluster-1` in `domain1` in\n+the namespace `domain1`.\n+\n+Once the gateway and virtual service has been setup, you can access it through your ingress host and port, ", "originalCommit": "b4475a0a8a0cb80e83a0991c0e50f54787f126c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1Mjg4OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440452888", "bodyText": "Put a period at the end of this sentence, \"Refer to Determining the ingress IP and ports.\"", "author": "rosemarymarano", "createdAt": "2020-06-15T21:18:24Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-default|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-default|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|htps-admin|WebLogic Administration Port|https|Y|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML is modified, apply it by\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio\n+gateway to provide external access to applications, instead of using an ingress\n+controller like Traefik.  Using the Istio gateway will enable you to view the\n+traffic in Kiali and to use distributed tracing all the way from the entry point to\n+the cluster, for example, the Istio gateway.\n+\n+To configure external access to your domain, you need to create an Istio `Gateway` and\n+`Virtualservice` as shown in the example below:\n+\n+```\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: Gateway\n+metadata:\n+  name: domain1-gateway\n+  namespace: domain1\n+spec:\n+  selector:\n+    istio: ingressgateway\n+  servers:\n+    - hosts:\n+        - '*'\n+      port:\n+        name: http\n+        number: 80\n+        protocol: HTTP\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: VirtualService\n+metadata:\n+  name: domain1-virtualservice\n+  namespace: domain1\n+spec:\n+  gateways:\n+    - domain1-gateway\n+  hosts:\n+    - '*'\n+  http:\n+    - match:\n+        - uri:\n+            prefix: /console\n+        - port: 7001\n+      route:\n+        - destination:\n+            host: sample-domain1-admin-server.sample-domain1-ns.svc.cluster.local\n+            port:\n+              number: 7001\n+    - match:\n+        - uri:\n+            prefix: /testwebapp\n+        - port: 8001\n+      route:\n+        - destination:\n+            host: sample-domain1-cluster-cluster-1.domain1.svc.cluster.local\n+            port:\n+              number: 8001\n+```\n+\n+This example creates a gateway that will accept requests with any host name\n+using HTTP on port 80, and a virtual service that will route all of\n+those requests to the cluster service for `cluster-1` in `domain1` in\n+the namespace `domain1`.\n+\n+Once the gateway and virtual service has been setup, you can access it through your ingress host and port, \n+refer to [Determining the ingress IP and ports](https://istio.io/latest/docs/setup/getting-started/#determining-the-ingress-ip-and-ports)", "originalCommit": "5884aa5561bda911d7c6c561091305bd73aa793b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzU4MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440453580", "bodyText": "example  -> example,", "author": "rosemarymarano", "createdAt": "2020-06-15T21:19:55Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 1\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n+* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n+in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio Installation](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace you\n+wish to run the operator in, and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can install the operator using the normal\n+method.  When the operator pod starts, you will notice that Istio automatically\n+injects an `initContainer` called `istio-init` and the envoy container `istio-proxy`.\n+\n+You can check this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace you wish to run the domain in,\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided, it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n+channels via configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|http-probe|From configuration istio readinessPort|http|N|\n+|tcp-default|server listening port|t3|Y|\n+|http-default|server listening port|http|Y|\n+|tcp-snmp|server listening port|snmp|Y|\n+|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n+|tcp-iiop|server listening port|http|N|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|tls-default|server SSL listening port|t3s|Y|\n+|https-secure|server SSL listening port|https|Y|\n+|tls-iiops|server SSL listening port|iiops|N|\n+|tls-ldaps|server SSL listening port|ldaps|N|\n+|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|htps-admin|WebLogic Administration Port|https|Y|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML is modified, apply it by\n+\n+```\n+kubect apply -f domain.yaml\n+```\n+\n+After all the servers are up, you will see output like this:\n+\n+```\n+kubectl -n sample-domain1-ns get pods\n+\n+NAME                             READY   STATUS    RESTARTS   AGE\n+sample-domain1-admin-server      2/2     Running   0          154m\n+sample-domain1-managed-server1   2/2     Running   0          153m\n+sample-domain1-managed-server2   2/2     Running   0          153m\n+\n+```\n+\n+If you use `istioctl proxy-status`, you will see the mesh status:\n+\n+```\n+istioctl proxy-status \n+NAME                                                               CDS        LDS        EDS        RDS          PILOT                            VERSION\n+istio-ingressgateway-5c7d8d7b5d-tjgtd.istio-system                 SYNCED     SYNCED     SYNCED     NOT SENT     istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-admin-server.sample-domain1-ns                      SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server1.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+sample-domain1-managed-server2.sample-domain1-ns                   SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+weblogic-operator-7d86fffbdd-5dxzt.sample-weblogic-operator-ns     SYNCED     SYNCED     SYNCED     SYNCED       istio-pilot-6cfcdb75dd-87lqm     1.5.4\n+\n+```\n+\n+#### Exposing applications in Istio-enabled domains\n+\n+When a domain is running with Istio support, you should use the Istio\n+gateway to provide external access to applications, instead of using an ingress\n+controller like Traefik.  Using the Istio gateway will enable you to view the\n+traffic in Kiali and to use distributed tracing all the way from the entry point to\n+the cluster, for example, the Istio gateway.\n+\n+To configure external access to your domain, you need to create an Istio `Gateway` and\n+`Virtualservice` as shown in the example below:\n+\n+```\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: Gateway\n+metadata:\n+  name: domain1-gateway\n+  namespace: domain1\n+spec:\n+  selector:\n+    istio: ingressgateway\n+  servers:\n+    - hosts:\n+        - '*'\n+      port:\n+        name: http\n+        number: 80\n+        protocol: HTTP\n+---\n+apiVersion: networking.istio.io/v1alpha3\n+kind: VirtualService\n+metadata:\n+  name: domain1-virtualservice\n+  namespace: domain1\n+spec:\n+  gateways:\n+    - domain1-gateway\n+  hosts:\n+    - '*'\n+  http:\n+    - match:\n+        - uri:\n+            prefix: /console\n+        - port: 7001\n+      route:\n+        - destination:\n+            host: sample-domain1-admin-server.sample-domain1-ns.svc.cluster.local\n+            port:\n+              number: 7001\n+    - match:\n+        - uri:\n+            prefix: /testwebapp\n+        - port: 8001\n+      route:\n+        - destination:\n+            host: sample-domain1-cluster-cluster-1.domain1.svc.cluster.local\n+            port:\n+              number: 8001\n+```\n+\n+This example creates a gateway that will accept requests with any host name\n+using HTTP on port 80, and a virtual service that will route all of\n+those requests to the cluster service for `cluster-1` in `domain1` in\n+the namespace `domain1`.\n+\n+Once the gateway and virtual service has been setup, you can access it through your ingress host and port, \n+refer to [Determining the ingress IP and ports](https://istio.io/latest/docs/setup/getting-started/#determining-the-ingress-ip-and-ports)\n+\n+\n+For more information about providing ingress using Istio, refer to the [Istio documentation](https://istio.io/docs/tasks/traffic-management/ingress/).\n+\n+#### Traffic management\n+\n+Istio provides traffic management capabilities, including the ability to\n+visualize traffic in Kiali.  You do not need to change your applications to use\n+this feature.  The Istio proxy (envoy) sidecar that is injected into your pods\n+provides this visibility. The Istio support enables\n+traffic management.  The image below shows an example with traffic\n+flowing:\n+\n+* In from the Istio gateway on the left.\n+* To a domain called `domain1`.\n+\n+In this example you can see how the traffic flows to the cluster services and", "originalCommit": "5884aa5561bda911d7c6c561091305bd73aa793b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "068a6c1f777b6ac46c4d8064c4fdb70d99ceef06", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/068a6c1f777b6ac46c4d8064c4fdb70d99ceef06", "message": "update doc", "committedDate": "2020-06-15T21:59:52Z", "type": "commit"}, {"oid": "12ecbb04b5f562f1242b34da536bcb30a9795966", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/12ecbb04b5f562f1242b34da536bcb30a9795966", "message": "Change weight of experimental index and istio md doc", "committedDate": "2020-06-15T22:02:26Z", "type": "commit"}, {"oid": "84b86e8cfe6a6e7f46b8b5f7afcb600fbbbd56c6", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/84b86e8cfe6a6e7f46b8b5f7afcb600fbbbd56c6", "message": "Fixed NPE", "committedDate": "2020-06-16T02:20:50Z", "type": "commit"}, {"oid": "f15a63ce06423bf652bdffe7a2b628068db63a0f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f15a63ce06423bf652bdffe7a2b628068db63a0f", "message": "refactor code", "committedDate": "2020-06-16T02:47:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3MTg1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440771851", "bodyText": "typo, omain -> domain", "author": "rosemarymarano", "createdAt": "2020-06-16T11:13:02Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -14,40 +14,39 @@ If your applications have suitable tracing code in them, then you will also be a\n use distributed tracing, such as Jaeger, to trace requests across domains and to\n other components and services that have tracing enabled.\n \n-You can learn more about Istio at [Istio](https://istio.io/latest/docs/concepts/what-is-istio/)\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n \n #### Limitations\n \n The current support for Istio has these limitations:\n \n * It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n   multicluster installations of Istio.\n-* You cannot expose any of the default channels, any attempt will result in an error when deploying the domain.  \n-* In order to use WLST command, you can define a network access point (NAP) in your WebLogic Domain and expose it as a `NodePort` \n-in your domain resource YAML instead of accessing the channel through the Istio mesh network.  \n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic omain and expose it as a `NodePort` ", "originalCommit": "068a6c1f777b6ac46c4d8064c4fdb70d99ceef06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3MjExNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440772116", "bodyText": "typo, dministration -> administration", "author": "rosemarymarano", "createdAt": "2020-06-16T11:13:36Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -90,44 +89,44 @@ spec:\n \n To enable the Istio support, you must include the `istio` section\n and you must set `enabled: true` as shown.  The `readniessPort` is optional\n-and defaults to `8888` if not provided, it is used for readiness health check.\n+and defaults to `8888` if not provided; it is used for readiness health check.\n \n ##### How Istio-enabled domains differ from regular domains\n \n Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n \n-When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically add the following network\n-channels via configuration overrides.\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically adds the following network\n+channels using configuration overrides.\n \n https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n \n For non-SSL traffic:\n \n |Name|Port|Protocol|Exposed as a container port|\n |----|----|--------|-----|\n-|http-probe|From configuration istio readinessPort|http|N|\n-|tcp-default|server listening port|t3|Y|\n-|http-default|server listening port|http|Y|\n-|tcp-snmp|server listening port|snmp|Y|\n-|tcp-cbt|server listening port|CLUSTER-BROADCAST|N|\n-|tcp-iiop|server listening port|http|N|\n+|`http-probe`|`From configuration istio readinessPort`|`http`|`N`|\n+|`tcp-default`|`Server listening port`|`t3`|`Y`|\n+|`http-default`|`Server listening port`|`http`|`Y`|\n+|`tcp-snmp`|`Server listening port`|`snmp`|`Y`|\n+|`tcp-cbt`|`server listening port`|`CLUSTER-BROADCAST`|`N`|\n+|`tcp-iiop`|`server listening port`|`http`|`N`|\n \n For SSL traffic, if SSL is enabled on the server:\n \n |Name|Port|Protocol|Exposed as a container port|\n |----|----|--------|-----|\n-|tls-default|server SSL listening port|t3s|Y|\n-|https-secure|server SSL listening port|https|Y|\n-|tls-iiops|server SSL listening port|iiops|N|\n-|tls-ldaps|server SSL listening port|ldaps|N|\n-|tls-cbts|server listening port|CLUSTER-BROADCAST-SECURE|N|\n+|`tls-default`|`Server SSL listening port`|`t3s`|`Y`|\n+|`https-secure`|`Server SSL listening port`|`https`|`Y`|\n+|`tls-iiops`|`Server SSL listening port`|`iiops`|`N`|\n+|`tls-ldaps`|`Server SSL listening port`|`ldaps`|`N`|\n+|`tls-cbts`|`Server listening port`|`CLUSTER-BROADCAST-SECURE`|`N`|\n \n If WebLogic Administration Port is enabled on the Administration Server:\n \n |Name|Port|Protocol|Exposed in the container port|\n |----|----|--------|-----|\n-|htps-admin|WebLogic Administration Port|https|Y|\n+|`https-admin`|`WebLogic dministration port`|`https`|`Y`|", "originalCommit": "068a6c1f777b6ac46c4d8064c4fdb70d99ceef06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3NDI1Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440774252", "bodyText": "To enable the Istio support -> To enable Istio support", "author": "rosemarymarano", "createdAt": "2020-06-16T11:17:50Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic omain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the", "originalCommit": "f15a63ce06423bf652bdffe7a2b628068db63a0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3NDQ1Mg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440774452", "bodyText": "To enable the Istio support -> To enable Istio support", "author": "rosemarymarano", "createdAt": "2020-06-16T11:18:14Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic omain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section", "originalCommit": "f15a63ce06423bf652bdffe7a2b628068db63a0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3NDc1Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440774753", "bodyText": "typo, readniessPort -> readinessPort", "author": "rosemarymarano", "createdAt": "2020-06-16T11:18:53Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic omain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional", "originalCommit": "f15a63ce06423bf652bdffe7a2b628068db63a0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3NTc5MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440775791", "bodyText": "enabled.  The WebLogic Server Kubernetes Operator -> enabled, the WebLogic Server Kubernetes Operator (I think this is supposed to be one sentence)", "author": "rosemarymarano", "createdAt": "2020-06-16T11:21:01Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic omain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided; it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically adds the following network", "originalCommit": "f15a63ce06423bf652bdffe7a2b628068db63a0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMTcyOA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1689#discussion_r440801728", "bodyText": "by -> by:", "author": "rosemarymarano", "createdAt": "2020-06-16T12:12:02Z", "path": "docs-source/content/userguide/istio/istio.md", "diffHunk": "@@ -0,0 +1,274 @@\n+---\n+title: \"Istio support\"\n+date: 2019-08-15T13:30:04-04:00\n+weight: 6\n+---\n+\n+#### Overview\n+\n+WebLogic Server Kubernetes Operator version 2.6 and later includes support for Istio 1.4.2 and later.\n+This support allows you to run the operator itself, and WebLogic domains managed by\n+the operator, with Istio sidecar injection enabled.  It will allow you to use\n+Istio gateways and virtual services to access applications deployed in these domains.\n+If your applications have suitable tracing code in them, then you will also be able to\n+use distributed tracing, such as Jaeger, to trace requests across domains and to\n+other components and services that have tracing enabled.\n+\n+You can learn more about Istio at [Istio.](https://istio.io/latest/docs/concepts/what-is-istio/)\n+\n+#### Limitations\n+\n+The current support for Istio has these limitations:\n+\n+* It is tested with Istio 1.4.2 and later (up to 1.5.4), however it is tested with both single and\n+  multicluster installations of Istio.\n+* You cannot expose any of the default channels; any attempt will result in an error when deploying the domain.  \n+* In order to use WLST commands, define a network access point (NAP) in your WebLogic omain and expose it as a `NodePort` \n+in your domain resource YAML file instead of accessing the channel through the Istio mesh network.  \n+\n+#### Using the operator with Istio support\n+\n+{{% notice note %}}\n+These instructions assume that you are using a Kubernetes cluster with\n+[Istio](https://istio.io/latest/docs/setup/install/) installed and configured already.  The operator will not install\n+Istio for you.\n+{{% /notice %}}\n+\n+You can deploy the operator into a namespace which has Istio automatic sidecar\n+injection enabled.  Before installing the operator, create the namespace in which you want to run the domain and label it.\n+\n+```\n+$ kubectl create namespace weblogic-operator\n+$ kubectl label namespace weblogic-operator istio-injection=enabled\n+```\n+\n+After the namespace is labeled, you can [install the operator]({{< relref \"/userguide/managing-operators/installation/_index.md\" >}}).  \n+When the operator pod starts, you will notice that Istio automatically injects an `initContainer` called `istio-init` \n+and the envoy container `istio-proxy`.\n+\n+You can validate this using the following commands:\n+\n+```\n+$ kubectl --namespace weblogic-operator get pods\n+$ kubectl --namespace weblogic-operator get pod weblogic-operator-xxx-xxx -o yaml\n+```\n+\n+In the second command, change `weblogic-operator-xxx-xxx` to the name of your pod.\n+\n+#### Creating a domain with Istio support\n+\n+You can configure your domains to run with Istio automatic sidecar injection enabled.\n+Before creating your domain, create the namespace in which you want to run the operator\n+and label it for automatic injection.\n+\n+```\n+$ kubectl create namespace domain1\n+$ kubectl label namespace domain1 istio-injection=enabled\n+```\n+\n+To enable the Istio support for a domain, you need to add the\n+`configuration` section to your domain custom resource YAML file as shown in the\n+following example:  \n+\n+```\n+apiVersion: \"weblogic.oracle/v7\"\n+kind: Domain\n+metadata:\n+  name: domain2\n+  namespace: domain1\n+  labels:\n+    weblogic.resourceVersion: domain-v2\n+    weblogic.domainUID: domain2\n+spec:\n+  ... other content ...\n+  configuration:\n+    istio:\n+      enabled: true\n+      readinessPort: 8888\n+```\n+\n+To enable the Istio support, you must include the `istio` section\n+and you must set `enabled: true` as shown.  The `readniessPort` is optional\n+and defaults to `8888` if not provided; it is used for readiness health check.\n+\n+##### How Istio-enabled domains differ from regular domains\n+\n+Istio enforces a number of requirements on Pods.  When you enable Istio support in the domain resource, the\n+introspector job automatically creates configuration overrides with the necessary channels for the domain to satisfy Istio's requirements, including:\n+\n+When deploying a domain with Istio sidecar injection enabled.  The WebLogic Server Kubernetes Operator automatically adds the following network\n+channels using configuration overrides.\n+\n+https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/\n+\n+For non-SSL traffic:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`http-probe`|`From configuration istio readinessPort`|`http`|`N`|\n+|`tcp-default`|`Server listening port`|`t3`|`Y`|\n+|`http-default`|`Server listening port`|`http`|`Y`|\n+|`tcp-snmp`|`Server listening port`|`snmp`|`Y`|\n+|`tcp-cbt`|`server listening port`|`CLUSTER-BROADCAST`|`N`|\n+|`tcp-iiop`|`server listening port`|`http`|`N`|\n+\n+For SSL traffic, if SSL is enabled on the server:\n+\n+|Name|Port|Protocol|Exposed as a container port|\n+|----|----|--------|-----|\n+|`tls-default`|`Server SSL listening port`|`t3s`|`Y`|\n+|`https-secure`|`Server SSL listening port`|`https`|`Y`|\n+|`tls-iiops`|`Server SSL listening port`|`iiops`|`N`|\n+|`tls-ldaps`|`Server SSL listening port`|`ldaps`|`N`|\n+|`tls-cbts`|`Server listening port`|`CLUSTER-BROADCAST-SECURE`|`N`|\n+\n+If WebLogic Administration Port is enabled on the Administration Server:\n+\n+|Name|Port|Protocol|Exposed in the container port|\n+|----|----|--------|-----|\n+|`https-admin`|`WebLogic dministration port`|`https`|`Y`|\n+\n+\n+Additionally, when Istio support is enabled for a domain, the operator\n+ensures that the Istio sidecar is not injected into the introspector job's pods.\n+\n+\n+### Apply the domain resource yaml\n+\n+After the domain resource YAML file is modified, apply it by", "originalCommit": "f15a63ce06423bf652bdffe7a2b628068db63a0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f55c5e6c6b925dc691363fcbf2f79e92199d370f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f55c5e6c6b925dc691363fcbf2f79e92199d370f", "message": "doc update", "committedDate": "2020-06-16T13:28:38Z", "type": "commit"}, {"oid": "dc76508312058680eb63d189d204d89627053d8f", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dc76508312058680eb63d189d204d89627053d8f", "message": "restore readinessPort removed by accident", "committedDate": "2020-06-16T15:32:37Z", "type": "commit"}, {"oid": "57535d698e33b3fb7160089f181196a03d1b2b81", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/57535d698e33b3fb7160089f181196a03d1b2b81", "message": "add istio options lines in template", "committedDate": "2020-06-16T15:51:55Z", "type": "commit"}, {"oid": "dee26299663fcbd0cf03ee8a3f75f81ddadd340c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dee26299663fcbd0cf03ee8a3f75f81ddadd340c", "message": "correct sample script because naming convention changed", "committedDate": "2020-06-16T16:14:55Z", "type": "commit"}]}