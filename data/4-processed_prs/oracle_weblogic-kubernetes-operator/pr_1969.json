{"pr_number": 1969, "pr_title": "re-enable ItTwoDomainsLoadBalancers.testApacheLoadBalancingCustomSample", "pr_createdAt": "2020-10-02T16:25:20Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969", "timeline": [{"oid": "275936ebe4aef38ee2205aa9836c7c669142b8d9", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/275936ebe4aef38ee2205aa9836c7c669142b8d9", "message": "initial commit for apache custom sample update", "committedDate": "2020-10-01T22:09:55Z", "type": "commit"}, {"oid": "7b36fe5e4df8c73d6b9cd30f164b17840abdc177", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7b36fe5e4df8c73d6b9cd30f164b17840abdc177", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84932", "committedDate": "2020-10-01T22:10:02Z", "type": "commit"}, {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e46a69417b0b7655599b778e14948ba4916eec7e", "message": "re-enable ItTwoDomainsLoadBalancers.testApacheLoadBalancingCustomSample", "committedDate": "2020-10-02T05:53:45Z", "type": "commit"}, {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/84a80347052410ae16b1a06413f76a2ac5a2b142", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84932", "committedDate": "2020-10-02T16:39:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyOTIwNw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498929207", "bodyText": "Don't we have common utility to create a generic PV/PVC. Check with Sankar", "author": "anpanigr", "createdAt": "2020-10-02T16:36:10Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -1941,4 +1946,46 @@ private void checkIngressReady(boolean isHostRouting, String ingressHost, boolea\n       assertTrue(callWebAppAndWaitTillReady(curlCmd, 60));\n     }\n   }\n+\n+  /**\n+   * Create PV and PVC for Apache custom configuration file in specified namespace.\n+   * @param apacheNamespace namespace in which to create PVC\n+   */", "originalCommit": "e46a69417b0b7655599b778e14948ba4916eec7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzNDE3OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498934178", "bodyText": "I used the common utility to create PV/PVC:\ncreatePVPVCAndVerify(v1pv, v1pvc, labelSelector, apacheNamespace);\nWe need to pass the V1PersistentVolume and V1PersistentVolumeClaim objects to that method.", "author": "xiancao", "createdAt": "2020-10-02T16:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyOTIwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzMDg2MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498930860", "bodyText": "Is it not available in OCR. When customer run the tests, they many not have access to OCIR.  It is an internal repository.", "author": "anpanigr", "createdAt": "2020-10-02T16:39:35Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -169,7 +169,7 @@\n \n   // Apache constants\n   public static final String APACHE_IMAGE_NAME = \"phx.ocir.io/weblogick8s/oracle/apache\";", "originalCommit": "e46a69417b0b7655599b778e14948ba4916eec7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzNTA2NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498935064", "bodyText": "The apache image is not in OCR. I built the image myself. I can ask Monica again whether we have official Apache image.", "author": "xiancao", "createdAt": "2020-10-02T16:48:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzMDg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjQ5Mw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032493", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolume getPersistentVolumes(String pvname) {\n          \n          \n            \n              public static V1PersistentVolume getPersistentVolume(String pvname) {", "author": "vanajamukkara", "createdAt": "2020-10-02T20:20:11Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -649,6 +649,14 @@ public static boolean createImage(WitParams params) {\n   }\n \n   // -------------------------   pv/pvc  ---------------------------------\n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "originalCommit": "84a80347052410ae16b1a06413f76a2ac5a2b142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTc5OQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069799", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-10-02T22:07:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjQ5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjYwNg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032606", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {\n          \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaim(String namespace, String pvcname) {", "author": "vanajamukkara", "createdAt": "2020-10-02T20:20:31Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -672,6 +680,16 @@ public static boolean deletePersistentVolume(String name) {\n     return PersistentVolume.delete(name);\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "originalCommit": "84a80347052410ae16b1a06413f76a2ac5a2b142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTg0MA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069840", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-10-02T22:07:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjY5OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032698", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolume getPersistentVolumes(String pvname) {\n          \n          \n            \n              public static V1PersistentVolume getPersistentVolume(String pvname) {", "author": "vanajamukkara", "createdAt": "2020-10-02T20:20:48Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1558,6 +1558,22 @@ public static V1PersistentVolumeList listPersistentVolumes(String labels) throws\n     return listPersistentVolume;\n   }\n \n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "originalCommit": "84a80347052410ae16b1a06413f76a2ac5a2b142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTg2MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069861", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-10-02T22:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjc3MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032771", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {\n          \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaim(String namespace, String pvcname) {", "author": "vanajamukkara", "createdAt": "2020-10-02T20:21:00Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1574,6 +1590,23 @@ public static V1PersistentVolumeClaimList listPersistentVolumeClaims(String name\n     }\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "originalCommit": "84a80347052410ae16b1a06413f76a2ac5a2b142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTg4OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069888", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-10-02T22:07:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzE0Nw==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499033147", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n          \n          \n            \n                  V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaim(apacheNamespace, pvcName);", "author": "vanajamukkara", "createdAt": "2020-10-02T20:21:58Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);", "originalCommit": "84a80347052410ae16b1a06413f76a2ac5a2b142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTkyNQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069925", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-10-02T22:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzI1MQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499033251", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  V1PersistentVolume v1pv = getPersistentVolumes(pvName);\n          \n          \n            \n                  V1PersistentVolume v1pv = getPersistentVolume(pvName);", "author": "vanajamukkara", "createdAt": "2020-10-02T20:22:12Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n+      assertNotNull(v1pvc);\n+      assertNotNull(v1pvc.getSpec());\n+      String pvName = v1pvc.getSpec().getVolumeName();\n+      logger.info(\"Got PV {0} from PVC {1} in namespace {2}\", pvName, pvcName, apacheNamespace);\n+\n+      V1PersistentVolume v1pv = getPersistentVolumes(pvName);", "originalCommit": "84a80347052410ae16b1a06413f76a2ac5a2b142", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTk0OA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069948", "bodyText": "fixed", "author": "xiancao", "createdAt": "2020-10-02T22:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzI1MQ=="}], "type": "inlineReview"}, {"oid": "07526ba1edc0032870322f9cf2d412fb3c1aec22", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/07526ba1edc0032870322f9cf2d412fb3c1aec22", "message": "address Vanaja's comments", "committedDate": "2020-10-02T22:04:54Z", "type": "commit"}]}