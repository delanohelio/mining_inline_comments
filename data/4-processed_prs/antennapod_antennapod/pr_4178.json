{"pr_number": 4178, "pr_title": "Redesign filter dialog", "pr_createdAt": "2020-05-21T03:08:56Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4178", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429426946", "bodyText": "This looks a bit fragile, to be honest. What happens if there are suddenly 3 options? I suggest to use something like the following. That would also make it easier to test (separating filters from each other) and would no longer need the big optionSwitch method below.\npublic enum FeedItemFilterGroup {\n    DOWNLOADED(R.string.downloaded_label,\n            new FeedItemFilter(\"downloaded\", R.string.downloaded_label,\n                    feedItem -> feedItem.getMedia().isDownloaded()),\n            new FeedItemFilter(\"not_downloaded\", R.string.not_downloaded_label,\n                    feedItem -> !feedItem.getMedia().isDownloaded())),\n\n    QUEUED(R.string.queue_label,\n            new FeedItemFilter(\"queued\", R.string.queued_label,\n                    feedItem -> feedItem.isTagged(FeedItem.TAG_QUEUE)),\n            new FeedItemFilter(\"not_queued\", R.string.not_queued_label,\n                    feedItem -> !feedItem.isTagged(FeedItem.TAG_QUEUE)));\n\n    private final int nameResId;\n    private final FeedItemFilter[] values;\n\n    FeedItemFilterGroup(int nameResId, FeedItemFilter... values) {\n        this.nameResId = nameResId;\n        this.values = values;\n    }\n\n    public static class FeedItemFilter {\n        public final String filterId;\n        public final int nameResId;\n        public final Function<FeedItem, Boolean> filter;\n\n        public FeedItemFilter(String filterId, int nameResId, Function<FeedItem, Boolean> filter) {\n            this.filterId = filterId;\n            this.nameResId = nameResId;\n            this.filter = filter;\n        }\n        \n        public static FeedItemFilter fromId(String filterId) {\n            for (FeedItemFilterGroup group : FeedItemFilterGroup.values()) {\n                for (FeedItemFilter itemFilter : group.values) {\n                    if (itemFilter.filterId.equals(filterId)) {\n                        return itemFilter;\n                    }\n                }\n            }\n            throw new IllegalArgumentException(\"Id unknown\");\n        }\n    }\n}", "author": "ByteHamster", "createdAt": "2020-05-22T19:46:03Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1NDM0NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429454345", "bodyText": "Ok, what if we didn't have to handle it at all?; which is what's going on in the openDialog method. Looks like even more unnecessary code to me. I intended the optionSwitch hack to be temporary because I assumed we could add values to the filter that were missing.\n<string-array name=\"episode_filter_values\">\n    <item>unplayed</item>\n    <item>paused</item>\n\nnot paused\nnot favorite\nno media\n    <item>played</item>\n    <item>queued</item>\n    <item>not_queued</item>\n    <item>downloaded</item>\n    <item>not_downloaded</item>\n    <item>has_media</item>\n    <item>is_favorite</item>\n</string-array>\n\nWhy does downloaded have an off/on state but paused does not?\nwe just need \"not paused\", \"not favorite\" and \"no media\" added to the available options( i just don't know where i thought it was beyond the scope of this design) . If you want to add more later you just add an on and off state for each new option. \"on new, off new\"\nIt looks like what you're saying is you want to get rid of \"episode_filter_values\" array and come up with something new based on an enum. I understand deflating the rows, designing in android studio, more maintainable etc. ok\n[edit]\nthe episode_filter_values array should be consistent. (i.e. all on state \"paused\" or all off state, or they all have a on/off state). the value being used to display text is also the value of the option if you look at openDialog()\n\"StateListDrawable, which automatically picks drawables depending on state (selected or not)\" -- i'll check it out. I also need to check for rounded left or right corner", "author": "bws9000", "createdAt": "2020-05-22T21:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NjgyMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429676822", "bodyText": "If you want to add more later you just add an on and off state for each new option. \"on new, off new\"\n\nThere are options that are 3-state, for example New/Unplayed/Played. New is currently not filterable (would clutter the UI) but I want to keep the possibility to do that. That's why I do not really like the arrays that need to be kept in sync and only allow 2 states. Having to keep 4 arrays in sync (keys+translations for 2 columns) sounds like it will cause trouble later.\n\nthe value being used to display text is also the value of the option if you look at openDialog()\n\nYeah, that's a problem for translation. My enum approach would allow to specify ID (for saving) and UI string separately.", "author": "ByteHamster", "createdAt": "2020-05-24T21:24:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4NTAxMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429685012", "bodyText": "ok, sounds good", "author": "bws9000", "createdAt": "2020-05-24T23:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2MTA5OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r433461099", "bodyText": "okay, i've updated the pull request", "author": "bws9000", "createdAt": "2020-06-01T20:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzUzNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429427534", "bodyText": "Instead of doing all this in Java, please create a layout file for a row and inflate it here. This makes it a lot easier to manage the layout (you get a preview in Android Studio, etc).", "author": "ByteHamster", "createdAt": "2020-05-22T19:47:50Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n+\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n+        LinearLayout linearLayout = (LinearLayout) customLayout;\n+\n+        builder.setView(customLayout);\n+\n+        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n+        tableLayout.setPadding(90, 70, 60, 0);\n+\n+        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n+        rowParams.setMargins(0, 0, 0, 10);\n+        rowParams.width = 800;\n+\n+        for (int i = 0; i < selection1.length; i++) {\n+\n+            TableRow row = new TableRow(customLayout.getContext());\n+\n+            TextView textView1 = new TextView(customLayout.getContext());\n+            TextView textView2 = new TextView(customLayout.getContext());\n+            TextView textView3 = new TextView(customLayout.getContext());\n+            textView1.setText(selection1[i]);\n+            textView2.setText(selection2[i]);\n+            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+            textView3.setBackgroundResource(R.drawable.x_custom_off);\n+\n+            if (this.noValueForOption(selection1[i])) {\n+                /* no options */\n+            }\n+\n+            String checked1 = this.optionSwitch(selection1[i]);\n+            for (int j = 0; j < checkedItems.length; j++) {\n+                if (checked1.equals(checkedItems[j])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView1.getText());\n+                }\n+            }\n+            String checked2 = this.optionSwitch(selection2[i]);\n+            for (int k = 0; k < checkedItems.length; k++) {\n+                if (checked2.equals(checkedItems[k])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView2.getText());\n+                }\n+            }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView1.getText());\n+                selectedValues.remove(textView2.getText());\n+                textView1.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView2.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView1.setTextColor(Color.GRAY);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+                selectedValues.remove(textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView1.setTextColor(Color.GRAY);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+\n+            textView1.setHeight(90);\n+            textView1.setWidth(340);\n+            textView1.setGravity(Gravity.CENTER_VERTICAL);\n+            textView1.setPadding(50, 0, 0, 0);\n+\n+            textView2.setHeight(90);\n+            textView2.setWidth(340);\n+            textView2.setGravity(Gravity.CENTER_VERTICAL);\n+            textView2.setPadding(50, 0, 0, 0);", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzQ2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429473462", "bodyText": "ok, got it", "author": "bws9000", "createdAt": "2020-05-22T22:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzUzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzg2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429427865", "bodyText": "The table can be added directly in R.layout.custom_filter_dialog_layout, so it does not need to be created manually in Java.", "author": "ByteHamster", "createdAt": "2020-05-22T19:48:58Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n+\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n+        LinearLayout linearLayout = (LinearLayout) customLayout;\n+\n+        builder.setView(customLayout);\n+\n+        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n+        tableLayout.setPadding(90, 70, 60, 0);\n+\n+        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n+        rowParams.setMargins(0, 0, 0, 10);\n+        rowParams.width = 800;\n+\n+        for (int i = 0; i < selection1.length; i++) {\n+\n+            TableRow row = new TableRow(customLayout.getContext());\n+\n+            TextView textView1 = new TextView(customLayout.getContext());\n+            TextView textView2 = new TextView(customLayout.getContext());\n+            TextView textView3 = new TextView(customLayout.getContext());\n+            textView1.setText(selection1[i]);\n+            textView2.setText(selection2[i]);\n+            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+            textView3.setBackgroundResource(R.drawable.x_custom_off);\n+\n+            if (this.noValueForOption(selection1[i])) {\n+                /* no options */\n+            }\n+\n+            String checked1 = this.optionSwitch(selection1[i]);\n+            for (int j = 0; j < checkedItems.length; j++) {\n+                if (checked1.equals(checkedItems[j])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView1.getText());\n+                }\n+            }\n+            String checked2 = this.optionSwitch(selection2[i]);\n+            for (int k = 0; k < checkedItems.length; k++) {\n+                if (checked2.equals(checkedItems[k])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView2.getText());\n+                }\n+            }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView1.getText());\n+                selectedValues.remove(textView2.getText());\n+                textView1.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView2.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView1.setTextColor(Color.GRAY);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+                selectedValues.remove(textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView1.setTextColor(Color.GRAY);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+\n+            textView1.setHeight(90);\n+            textView1.setWidth(340);\n+            textView1.setGravity(Gravity.CENTER_VERTICAL);\n+            textView1.setPadding(50, 0, 0, 0);\n+\n+            textView2.setHeight(90);\n+            textView2.setWidth(340);\n+            textView2.setGravity(Gravity.CENTER_VERTICAL);\n+            textView2.setPadding(50, 0, 0, 0);\n+\n+            textView3.setGravity(Gravity.CENTER_VERTICAL);\n+\n+            row.addView(textView1);\n+            row.addView(textView2);\n+            row.addView(textView3);\n+\n+            tableLayout.addView(row);\n+            row.setLayoutParams(rowParams);\n+\n+        }\n+        linearLayout.addView(tableLayout, 0);", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzM1MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429473351", "bodyText": "ok", "author": "bws9000", "createdAt": "2020-05-22T22:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzg2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429428455", "bodyText": "Why did you add a second method instead of just replacing the old one? Do we still need the old one?", "author": "ByteHamster", "createdAt": "2020-05-22T19:50:54Z", "path": "app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java", "diffHunk": "@@ -113,7 +113,7 @@ protected void updateFilter(Set<String> filterValues) {\n             }\n         };\n \n-        filterDialog.openDialog();\n+        filterDialog.openCustomDialog();", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ0NTM1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429445354", "bodyText": "I had no idea but I assumed you would let me know :)", "author": "bws9000", "createdAt": "2020-05-22T20:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjMzMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436402333", "bodyText": "Why is the function called custom? I think it would be better to just keep the old name.", "author": "ByteHamster", "createdAt": "2020-06-07T21:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjg5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436402896", "bodyText": "I would make the filters independent from the filter UI. This allows (among other things) to automatically test filters instead of having to start the UI every time. Please move this to a new class de.danoeh.antennapod.core.feed.FeedItemFilterGroup. Also, those enums should not store data. If you directly add/remove the filterId in the filterValues array, you do not need to store state in the enums themselves. Storing state there can lead to problems when re-opening the dialog for different podcasts.", "author": "ByteHamster", "createdAt": "2020-06-07T21:19:48Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    textView2.setSelected(true);\n+                    textView1.setSelected(false);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n             }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                item.values[1].setSelected(true);\n+                item.values[0].setSelected(false);\n+                textView2.setSelected(false);\n+                textView2.setTextColor(Color.DKGRAY);\n+                textView1.setSelected(true);\n+                textView1.setTextColor(Color.WHITE);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(true);\n+                item.values[1].setSelected(false);\n+                textView1.setSelected(false);\n+                textView1.setTextColor(Color.DKGRAY);\n+                textView2.setSelected(true);\n+                textView2.setTextColor(Color.WHITE);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(false);\n+                item.values[1].setSelected(false);\n+                textView2.setTextColor(Color.DKGRAY);\n+                textView2.setSelected(false);\n+                textView1.setTextColor(Color.DKGRAY);\n+                textView1.setSelected(false);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+            });\n+            tableLayout.addView(row);\n         }\n \n-        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n-        builder.setTitle(R.string.filter);\n-        builder.setMultiChoiceItems(items, checkedItems, (dialog, which, isChecked) -> {\n-            if (isChecked) {\n-                filterValues.add(values[which]);\n-            } else {\n-                filterValues.remove(values[which]);\n-            }\n-        });\n+\n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n+            filterValues.clear();\n+            for (FeedItemEnum item : FeedItemEnum.values()) {\n+                for (int i = 0; i < item.values.length; i++) {\n+                    if (item.values[i].getSelected()) {\n+                        Log.d(\"**added***\", \"\" + item.values[i].filterId);\n+                        filterValues.add(item.values[i].filterId);\n+                    }\n+                }\n+            }\n             updateFilter(filterValues);\n         });\n+\n         builder.setNegativeButton(R.string.cancel_label, null);\n         builder.create().show();\n     }\n \n+    public enum FeedItemEnum {", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NTMxNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r441165314", "bodyText": "okay", "author": "bws9000", "createdAt": "2020-06-16T21:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzE5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403196", "bodyText": "This is now fixed with 3 TextViews. My idea was to keep it independent from the number of options. So the views should be inflated one by one from another layout, just as needed. This should also make the code less verbose because you do not have to write everything multiple times (instead, using loops).", "author": "ByteHamster", "createdAt": "2020-06-07T21:23:33Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzQyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403421", "bodyText": "The text color can also be specified with a color selector (similar to the backgrounds). That way, you do not need to set it in code. Additionally, this will make it easier to support both light and dark theme. Details: https://stackoverflow.com/a/3565624/4193263", "author": "ByteHamster", "createdAt": "2020-06-07T21:26:20Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    textView2.setSelected(true);\n+                    textView1.setSelected(false);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.DKGRAY);", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzU3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403571", "bodyText": "If you use RadioButtons instead of TextViews, you do not need to un-check other items in the row manually. They can be styled just like the TextViews (background etc). Details: https://stackoverflow.com/a/55139080/4193263", "author": "ByteHamster", "createdAt": "2020-06-07T21:28:31Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NjU1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436956554", "bodyText": "radio buttons it is", "author": "bws9000", "createdAt": "2020-06-08T19:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzY3Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403672", "bodyText": "Please rename the files to something like filter_dialog_... instead of custom_dialog_.... This makes it easier for other developers to understand what the files are used for.", "author": "ByteHamster", "createdAt": "2020-06-07T21:30:09Z", "path": "core/src/main/res/drawable/custom_dialog_shape_selector_left.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyMDc5Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r437720793", "bodyText": "ok", "author": "bws9000", "createdAt": "2020-06-09T21:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzk0Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403947", "bodyText": "Specifying them here in vector format should be enough. You do not need to add the png files. Instead of having a on and off version, please use android:alpha on the views. This way, you need fewer different drawables. Having to support each version for each theme will otherwise require a ton of drawables.", "author": "ByteHamster", "createdAt": "2020-06-07T21:33:50Z", "path": "core/src/main/res/drawable/ic_x_custom_off.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNDAxMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436404011", "bodyText": "I think those are no longer needed. Also, the array above (old dialog names/values) is no longer needed, as well.", "author": "ByteHamster", "createdAt": "2020-06-07T21:34:53Z", "path": "core/src/main/res/values/arrays.xml", "diffHunk": "@@ -269,6 +269,25 @@\n         <item>is_favorite</item>\n     </string-array>\n \n+    <string-array name=\"episode_filter_selection_text1\">", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNDE3NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436404174", "bodyText": "Please use accent_light and background_light instead of creating new colors. Having them duplicated will likely lead to inconsistent colors throughout the app. This is currently a problem in 1.8.1 (up to 3 different shades of blue on one screen) and I want to prevent that from happening again.", "author": "ByteHamster", "createdAt": "2020-06-07T21:36:58Z", "path": "core/src/main/res/values/colors.xml", "diffHunk": "@@ -28,4 +28,9 @@\n     <color name=\"master_switch_background_light\">#DDDDDD</color>\n     <color name=\"master_switch_background_dark\">#191919</color>\n \n+    <!-- filter dialog -->\n+    <color name=\"color_custom_dialog_off\">#FFFFFF</color>\n+    <color name=\"color_custom_dialog_on\">#3D8BFF</color>\n+    <color name=\"color_custom_dialog_border\">#3D8BFF</color>", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzNjAwNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r438436007", "bodyText": "ok", "author": "bws9000", "createdAt": "2020-06-10T22:11:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNDE3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436405196", "bodyText": "Hmm now that I think about it, this will lead to a lot of different drawables. All combinations of on/off, left/right, light/dark. This means there will be at least 8 files just for handling the backgrounds. If you use a CardView with app:borderRadius around the items, you can achieve something like the following without custom drawables. I think this makes the code easier to understand. I know that it looks a bit different than the initial drawing but I think that it is worth the change because it makes the code a lot shorter and easier to understand.\n\nThe layout xml would then have the following structure:\n<CardView>\n    <RadioGroup>\n        <RadioButton />\n        <RadioButton />\n        ...\n        <RadioButton />\n        <ImageView />\n    </RadioGroup>\n</CardView>", "author": "ByteHamster", "createdAt": "2020-06-07T21:51:33Z", "path": "core/src/main/res/drawable/custom_dialog_shape_drawable_left_off.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" >", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NjEwMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436956103", "bodyText": "CardView ok -so we are removing the blue border and this is the design now", "author": "bws9000", "createdAt": "2020-06-08T19:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NjgyMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436976822", "bodyText": "Sorry for requesting so many changes and causing you additional work. I just try to keep the code base as clean as possible and realized that having 8 copies of basically the same file will probably lead to issues and inconsistencies sooner or later.", "author": "ByteHamster", "createdAt": "2020-06-08T20:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDU0NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r437020544", "bodyText": "so we are removing the blue border and this is the design now\n\nHmm. With the new set-up it's not possible to have a line? Maybe, then, in that case, should it be two separate 'blubs' instead (so that the buttons are clearly separated, while still 'interacting' with each-other)?", "author": "keunes", "createdAt": "2020-06-08T21:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyODkyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r437028921", "bodyText": "The outer lines can only be done using lots of images while just rounding can be done using CardView. I think separate buttons could introduce the problem that it is harder to see that they interact with each other. If you worry about a separator when both buttons are de-selected, this can still be done by moving the buttons apart with margin (within the CardView).", "author": "ByteHamster", "createdAt": "2020-06-08T22:09:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0NjEyMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r437046122", "bodyText": "No problem , just ran out of time last week. I think it's a good idea. From what I understand we're going to have 3 images a left-active, right-active and a \"x\" deselected empty active state.", "author": "bws9000", "createdAt": "2020-06-08T22:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5OTgzNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r437699837", "bodyText": "From what I understand we're going to have 3 images\n\nMy idea was to have no image at all for the backgrounds. Everything is added to a CardView for rounding and then we just set the background of the RadioButtons using a color selector for on/off state (https://stackoverflow.com/a/3565624/4193263).", "author": "ByteHamster", "createdAt": "2020-06-09T20:31:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwMzAyNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r437703027", "bodyText": "okay", "author": "bws9000", "createdAt": "2020-06-09T20:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NzQ4MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r439157480", "bodyText": "I've gone through the UI portion, I haven't added the enum update yet...\n\nIf I use the method you were thinking about, the card shape backgrounds will be similar to the example above and I'm going to have to put 3 cardviews per row for it to operate anything similar to what you want, which doesn't make sense to me. There is no borderRadiusLEFT or RIGHT borderRadius covers all corners for a card background as far as I know. Even though the design you want is simple it seems more complicated than what the cardView is currently made for.\nI tried getting something working as close to what I think you want as I could while looking exactly how you want it with only 3 different drawables. Three files loading into a background image of the cardview.\nfilter_dialog_2_clear.xml\nfilter_dialog_2_left_on.xml\nfilter_dialog_2_right_on.xml\n\nI can't find a lighter shade of grey in the colors that are already specified.\nIf you decide later you want 3 elements per row you just need to update in 3 different layout files and the filterdialog radiobuttons.", "author": "bws9000", "createdAt": "2020-06-12T01:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2NjA2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r439266062", "bodyText": "If I use the method you were thinking about, the card shape backgrounds will be similar to the example above and I'm going to have to put 3 cardviews per row for it to operate anything similar to what you want\n\nYou can use one single CardView to round the outer shape and then add RadioButtons with simple color backgrounds (no images) like below. My example is missing the color state selector but I hope that it is now more clear what I meant.\n\n<androidx.cardview.widget.CardView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"32dp\"\n        app:cardCornerRadius=\"16dp\"\n        app:cardElevation=\"0dp\"\n        android:clipChildren=\"true\">\n\n    <RadioGroup\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"horizontal\">\n\n        <RadioButton\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"1\"\n                android:background=\"#ddd\"\n                android:layout_marginRight=\"2dp\"\n                android:layout_marginEnd=\"2dp\"\n                android:text=\"Text1\"\n                android:gravity=\"center\"\n                android:button=\"@android:color/transparent\" />\n\n        <RadioButton\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"1\"\n                android:background=\"#ddd\"\n                android:text=\"Text2\"\n                android:gravity=\"center\"\n                android:button=\"@android:color/transparent\" />\n\n    </RadioGroup>\n\n</androidx.cardview.widget.CardView>", "author": "ByteHamster", "createdAt": "2020-06-12T07:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzNzUwMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r439637500", "bodyText": "okay we've eliminated the confusion it seems\n<CardView>\n    <RadioGroup>\n        <RadioButton />\n        <RadioButton />\n        ...\n        <RadioButton />\n        <ImageView /> <--------- where you lost me\n    </RadioGroup>\n</CardView>\n\nThat's a little easier isn't it.\nWhat about the clear button. Do you want the drawable for the on/off state or do you want that simple background as well?", "author": "bws9000", "createdAt": "2020-06-12T20:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0NDQ2MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r439644460", "bodyText": "where you lost me\n\nYou are right. What I wrote is wrong and confusing. What about using something like this?\n<RadioGroup>\n    <CardView>\n        <LinearLayout>\n            <RadioButton />\n            <RadioButton />\n            ...\n            <RadioButton />\n        </LinearLayout>\n    </CardView>\n    <RadioButton /> <!-- Clear button -->\n</RadioGroup>\nI would use a single drawable for the clear button but use android:buttonTint together with a color state selector to achieve the effect with as few images as possible.", "author": "ByteHamster", "createdAt": "2020-06-12T21:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjY3Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r440336672", "bodyText": "okay", "author": "bws9000", "createdAt": "2020-06-15T17:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTIzMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436405232", "bodyText": "This only shows an image, so ImageView would be better here.", "author": "ByteHamster", "createdAt": "2020-06-07T21:52:01Z", "path": "app/src/main/res/layout/custom_dialog_filter_row.xml", "diffHunk": "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\">\n+\n+    <TableRow\n+        android:id=\"@+id/custom_dialog_tableRow1\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginLeft=\"20dp\"\n+        android:layout_marginTop=\"0dp\"\n+        android:layout_marginRight=\"0dp\"\n+        android:layout_marginBottom=\"10dp\"\n+        android:minWidth=\"100dp\">\n+\n+        <TextView\n+            android:id=\"@+id/custom_dialog_textView1\"\n+            android:layout_width=\"120dp\"\n+            android:layout_height=\"30dp\"\n+            android:paddingLeft=\"15dp\"\n+            android:paddingTop=\"0dp\"\n+            android:paddingRight=\"0dp\"\n+            android:clickable=\"true\"\n+            android:gravity=\"left|center_vertical\"\n+            android:background=\"@drawable/custom_dialog_shape_selector_left\" />\n+\n+        <TextView\n+            android:id=\"@+id/custom_dialog_textView2\"\n+            android:layout_width=\"120dp\"\n+            android:layout_height=\"30dp\"\n+            android:paddingLeft=\"15dp\"\n+            android:paddingTop=\"0dp\"\n+            android:paddingRight=\"0dp\"\n+            android:clickable=\"true\"\n+            android:gravity=\"left|center_vertical\"\n+            android:background=\"@drawable/custom_dialog_shape_selector_right\" />\n+\n+        <TextView", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzNjE5Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r438436197", "bodyText": "ok", "author": "bws9000", "createdAt": "2020-06-10T22:11:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwNTIzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzE2Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442687167", "bodyText": "Was this change intended?", "author": "ByteHamster", "createdAt": "2020-06-19T07:48:07Z", "path": "app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java", "diffHunk": "@@ -293,7 +293,7 @@ private String generateDeviceID(List<GpodnetDevice> gpodnetDevices) {\n         int num = 0;\n \n         while (isDeviceWithIdInList(id, gpodnetDevices)) {\n-            id = baseId + \"_\" + num;\n+            id = baseId + \"filterdialog_\" + num;", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5NDg3Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442794877", "bodyText": "no, definitely not.", "author": "bws9000", "createdAt": "2020-06-19T11:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzE2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzUwMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442687500", "bodyText": "The method is still named Custom. Please just use the old name, so it does not require changes to other (unrelated) files", "author": "ByteHamster", "createdAt": "2020-06-19T07:48:50Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,39 +28,103 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442688759", "bodyText": "I do not really like this duplicated code. Things like this are always hard to maintain.\n\nOne thing; no selectors because every time an element is clicked it needs to update another element, if you can do that with a radio group I still need to update the clear image drawable and it seems to make more sense just to use a couple lines of code where everything else is.\n\nIf you make the clear button a RadioButton and move the RadioGroup out of the CardView, so that it contains the clear button, you do not have to care about de-selecting other items and changing their background. This can then be done automatically.", "author": "ByteHamster", "createdAt": "2020-06-19T07:51:27Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,39 +28,103 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n+\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n+\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    radioButton1.setBackgroundResource(R.color.accent_light);\n+                    radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton1.setSelected(true);\n+                    radioButton2.setSelected(false);\n+                    radioButton1.setTextColor(Color.WHITE);\n+                    radioButton2.setTextColor(Color.BLACK);", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5NTI5Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442795293", "bodyText": "right", "author": "bws9000", "createdAt": "2020-06-19T11:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzODQ4OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443138488", "bodyText": "Here is the problem:\nYou want rounded corners with no graphics. The clear button was always a radioButton because I've tried to make that work. It doesn't.\nThe left and right radioButtons have to be nested in the cardView so the cardView can handle giving the rounded corner effect on the radioButtons. The only way I can have 3 is if I do something like this -->\n( left  | middle | right )\ndoing...\n( left | right ) (clear)\nwould require 2 cardViews and why would you want to do that?\nSo I can only fit a radioGroup with 2 radioButtons to give the desired effect that you want.\nTo keep the effect you want I had to hardcode the setSelected because I need the clear button outside the radioGroup and if I'm going to keep it outside the radioGroup because I have to I can't use a selection because each element changes another... (ie I can't set \"set clear button to dark\" inside the on/off selection element)\nIf you want I can put the drawables back and keep everything in 1 radioGroup but you can't have both and still get the rounded corner overlay on the radioButton colors.", "author": "bws9000", "createdAt": "2020-06-20T15:18:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTQyMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443139420", "bodyText": "Doesn't it work to put the RadioGroup around both, the CardView and the Clear button? Then all buttons are in one RadioGroup and only two of them are in the CardView.\n<RadioGroup>\n    <CardView>\n        <LinearLayout>\n            <RadioButton />\n            <RadioButton />\n        </LinearLayout>\n    </CardView>\n    <RadioButton /> <!-- Clear button -->\n</RadioGroup>", "author": "ByteHamster", "createdAt": "2020-06-20T15:32:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTc0Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443139746", "bodyText": "Ooh wait. Now I get the problem. RadioButtons only work that way if they are direct children of the RadioGroup. I will try to find a solution for this.", "author": "ByteHamster", "createdAt": "2020-06-20T15:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTk3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443139971", "bodyText": "Okay, another thing I could do is just have the 2 on/off in the radioGroup and selector and only update 1 thing(clear button) in the code onclick event() to simplify it more.", "author": "bws9000", "createdAt": "2020-06-20T15:42:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4OTMwMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442689303", "bodyText": "If this is not required for your PR, please keep other things untouched. In case there is a problem, this makes it a lot easier to see where the problem came from.", "author": "ByteHamster", "createdAt": "2020-06-19T07:52:35Z", "path": "build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ buildscript {\n         maven { url \"https://plugins.gradle.org/m2/\" }\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:3.6.3'\n+        classpath 'com.android.tools.build:gradle:4.0.0'", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5NzUyNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442797527", "bodyText": "i see. no problem", "author": "bws9000", "createdAt": "2020-06-19T11:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4OTMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4OTU2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442689565", "bodyText": "I am pretty sure that this should not be changed", "author": "ByteHamster", "createdAt": "2020-06-19T07:53:08Z", "path": "core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java", "diffHunk": "@@ -44,7 +44,7 @@ public static String generateFileName(String string) {\n         if (TextUtils.isEmpty(filename)) {\n             return randomString(8);\n         } else if (filename.length() >= MAX_FILENAME_LENGTH) {\n-            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"_\" + md5(filename);\n+            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"filterdialog_\" + md5(filename);", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY5MDA1NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442690055", "bodyText": "I think the two arrays above are unused now. Please remove them.", "author": "ByteHamster", "createdAt": "2020-06-19T07:54:15Z", "path": "core/src/main/res/values/arrays.xml", "diffHunk": "@@ -269,6 +269,7 @@\n         <item>is_favorite</item>\n     </string-array>\n \n+", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEyNjgzMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443126830", "bodyText": "got it", "author": "bws9000", "createdAt": "2020-06-20T12:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY5MDA1NQ=="}], "type": "inlineReview"}, {"oid": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "url": "https://github.com/AntennaPod/AntennaPod/commit/f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "message": "Redesign filter dialog", "committedDate": "2020-06-21T10:59:05Z", "type": "commit"}, {"oid": "7de9e0d4c1807bff054c1aef999fc600088ab521", "url": "https://github.com/AntennaPod/AntennaPod/commit/7de9e0d4c1807bff054c1aef999fc600088ab521", "message": "Using state lists for colors", "committedDate": "2020-06-21T11:17:36Z", "type": "commit"}, {"oid": "7de9e0d4c1807bff054c1aef999fc600088ab521", "url": "https://github.com/AntennaPod/AntennaPod/commit/7de9e0d4c1807bff054c1aef999fc600088ab521", "message": "Using state lists for colors", "committedDate": "2020-06-21T11:17:36Z", "type": "forcePushed"}, {"oid": "a4ce162491cb93535ee1a03d526c8d1228d58fd2", "url": "https://github.com/AntennaPod/AntennaPod/commit/a4ce162491cb93535ee1a03d526c8d1228d58fd2", "message": "Redesign filter dialog", "committedDate": "2020-06-27T14:24:26Z", "type": "commit"}, {"oid": "ecf4b60fcee3d8a180a269a6560e6182ea09110d", "url": "https://github.com/AntennaPod/AntennaPod/commit/ecf4b60fcee3d8a180a269a6560e6182ea09110d", "message": "Merge pull request #7 from AntennaPod/develop\n\nupdate me", "committedDate": "2020-07-03T00:25:15Z", "type": "commit"}, {"oid": "f4677c0d9a7812b7c6e0c3f473bd8f50e7c03901", "url": "https://github.com/AntennaPod/AntennaPod/commit/f4677c0d9a7812b7c6e0c3f473bd8f50e7c03901", "message": "Redesign filter dialog", "committedDate": "2020-07-03T00:34:11Z", "type": "commit"}, {"oid": "70aa6b1f6d8a409fd68b81d71b7a5d32575f3e99", "url": "https://github.com/AntennaPod/AntennaPod/commit/70aa6b1f6d8a409fd68b81d71b7a5d32575f3e99", "message": "Redesign filter dialog", "committedDate": "2020-07-03T00:50:11Z", "type": "commit"}, {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "url": "https://github.com/AntennaPod/AntennaPod/commit/e221602f8fbf4c135ac4cf1b50977559b06d470b", "message": "Redesign filter dialog", "committedDate": "2020-07-03T01:02:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTU3OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450501578", "bodyText": "Please make the color an attr, too. Additionally, I think that assigning a drawable to a color resource could lead to problems. Please move the color state list to the color directory.", "author": "ByteHamster", "createdAt": "2020-07-06T21:59:07Z", "path": "app/src/main/res/layout/filter_dialog_row.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<de.danoeh.antennapod.view.RecursiveRadioGroup xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"horizontal\">\n+\n+    <androidx.cardview.widget.CardView\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"48dp\"\n+        android:layout_marginBottom=\"10dp\"\n+        android:layout_weight=\"1\"\n+        android:clipChildren=\"true\"\n+        app:cardCornerRadius=\"24dp\"\n+        app:cardElevation=\"0dp\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"horizontal\">\n+\n+            <RadioButton\n+                android:id=\"@+id/filter_dialog_radioButton1\"\n+                android:layout_width=\"0dp\"\n+                android:layout_height=\"match_parent\"\n+                android:layout_marginEnd=\"2dp\"\n+                android:layout_marginRight=\"2dp\"\n+                android:layout_weight=\"1\"\n+                android:background=\"?attr/filter_dialog_button_background\"\n+                android:button=\"@android:color/transparent\"\n+                android:checked=\"false\"\n+                android:gravity=\"center\"\n+                android:textColor=\"@drawable/filter_dialog_button_text_light\" />", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyNjEwOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450826109", "bodyText": "\ud83d\udc4d", "author": "bws9000", "createdAt": "2020-07-07T12:28:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTc3Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450501773", "bodyText": "Why is this needed?", "author": "ByteHamster", "createdAt": "2020-07-06T21:59:36Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -11,33 +13,41 @@\n import static de.danoeh.antennapod.core.feed.FeedItem.TAG_FAVORITE;\n \n public class FeedItemFilter {\n+\n     private final String[] mProperties;\n \n     private boolean showPlayed = false;\n     private boolean showUnplayed = false;\n     private boolean showPaused = false;\n+    private boolean showNotPaused = false;\n     private boolean showQueued = false;\n     private boolean showNotQueued = false;\n     private boolean showDownloaded = false;\n     private boolean showNotDownloaded = false;\n     private boolean showHasMedia = false;\n+    private boolean showNoMedia = false;\n     private boolean showIsFavorite = false;\n+    private boolean showNotFavorite = false;\n \n     public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n     public FeedItemFilter(String[] properties) {\n         this.mProperties = properties;\n-        for(String property : properties) {\n+        Log.d(\"***xxx***\", Arrays.toString(properties));\n+        for (String property : properties) {\n             // see R.arrays.feed_filter_values\n-            switch(property) {\n+            switch (\"\" + property) {", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1ODgxNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450858815", "bodyText": "corrected in filterDialog, when nothing is selected and confirmed\nif (filterValues.contains(null)) { filterValues.clear()  }", "author": "bws9000", "createdAt": "2020-07-07T13:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTc3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjExNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450502115", "bodyText": "This means that the filter will stop completely and silently if there is an unknown value. I think it would be better to just ignore that value by calling break instead.", "author": "ByteHamster", "createdAt": "2020-07-06T22:00:32Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -56,9 +66,17 @@ public FeedItemFilter(String[] properties) {\n                 case \"has_media\":\n                     showHasMedia = true;\n                     break;\n+                case \"no_media\":\n+                    showNoMedia = true;\n+                    break;\n                 case \"is_favorite\":\n                     showIsFavorite = true;\n                     break;\n+                case \"not_favorite\":\n+                    showNotFavorite = true;\n+                    break;\n+                default:\n+                    return;", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTk3Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450855977", "bodyText": "Okay  \ud83d\udc4d\nThere should be no unknown values now.", "author": "bws9000", "createdAt": "2020-07-07T13:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjExNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450502996", "bodyText": "Checkstyle does not like this change. Please either keep the line as it is or add braces. The other checkstyle violations about missing braces can be ignored, for now. I can merge it without those tests passing.", "author": "ByteHamster", "createdAt": "2020-07-06T22:02:37Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -67,7 +85,7 @@ public FeedItemFilter(String[] properties) {\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if(mProperties.length == 0) return items;\n+        if (mProperties.length == 0) return items;", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTgwNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450855806", "bodyText": "\ud83d\udc4d i'm using intelliJ to format the code, i guess it's not so good huh", "author": "bws9000", "createdAt": "2020-07-07T13:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2NjM2OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450866369", "bodyText": "Code styles can be different. There is no \"right\" or \"wrong\" way to format files. The most important thing is that it is consistent throughout the project. For AntennaPod, we started to use the Google Java code style a few months ago, which does not permit if statements without braces. If you remember the goto fail vulnerability, you know why ;)\nTo prevent a huge commit that touches every file, only new code needs to comply. The CI only complains about lines that were changed, so if you do not change the line, it will not complain here. I will make an exception in this PR: The new filters you added can stay single-line to be consistent within the file, even if it does not comply with the code style.", "author": "ByteHamster", "createdAt": "2020-07-07T13:32:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMzcyOA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450503728", "bodyText": "Please do not re-format unrelated lines, here.", "author": "ByteHamster", "createdAt": "2020-07-06T22:04:38Z", "path": "core/src/main/res/values/attrs.xml", "diffHunk": "@@ -1,69 +1,73 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <resources>\n-    <attr name=\"action_about\" format=\"reference\"/>\n-    <attr name=\"action_search\" format=\"reference\"/>\n-    <attr name=\"action_stream\" format=\"reference\"/>\n-    <attr name=\"av_download\" format=\"reference\"/>\n-    <attr name=\"av_fast_forward\" format=\"reference\"/>\n-    <attr name=\"av_pause\" format=\"reference\"/>\n-    <attr name=\"av_play\" format=\"reference\"/>\n-    <attr name=\"av_skip\" format=\"reference\"/>\n-    <attr name=\"av_rewind\" format=\"reference\"/>\n-    <attr name=\"ic_delete\" format=\"reference\"/>\n-    <attr name=\"content_new\" format=\"reference\"/>\n-    <attr name=\"content_remove_from_queue\" format=\"reference\"/>\n-    <attr name=\"storage\" format=\"reference\"/>\n-    <attr name=\"statistics\" format=\"reference\"/>\n-    <attr name=\"feed\" format=\"reference\"/>\n-    <attr name=\"location_web_site\" format=\"reference\"/>\n-    <attr name=\"navigation_accept\" format=\"reference\"/>\n-    <attr name=\"navigation_cancel\" format=\"reference\"/>\n-    <attr name=\"ic_load_more\" format=\"reference\"/>\n-    <attr name=\"navigation_refresh\" format=\"reference\"/>\n-    <attr name=\"navigation_up\" format=\"reference\"/>\n-    <attr name=\"stat_playlist\" format=\"reference\"/>\n-    <attr name=\"ic_folder\" format=\"reference\"/>\n-    <attr name=\"type_video\" format=\"reference\"/>\n-    <attr name=\"dragview_background\" format=\"reference\"/>\n-    <attr name=\"ic_history\" format=\"reference\"/>\n-    <attr name=\"ic_sliders\" format=\"reference\"/>\n-    <attr name=\"ic_settings_playback\" format=\"reference\"/>\n-    <attr name=\"ic_settings\" format=\"reference\"/>\n-    <attr name=\"ic_lock_open\" format=\"reference\"/>\n-    <attr name=\"ic_lock_closed\" format=\"reference\"/>\n-    <attr name=\"ic_filter\" format=\"reference\"/>\n-    <attr name=\"progressBarTheme\" format=\"reference\"/>\n-    <attr name=\"ic_fav\" format=\"reference\"/>\n-    <attr name=\"ic_unfav\" format=\"reference\"/>\n-    <attr name=\"ic_sleep\" format=\"reference\"/>\n-    <attr name=\"ic_sleep_off\" format=\"reference\"/>\n-    <attr name=\"checkbox_multiple\" format=\"reference\"/>\n-    <attr name=\"ic_select_all\" format=\"reference\"/>\n-    <attr name=\"ic_select_none\" format=\"reference\"/>\n-    <attr name=\"ic_sort\" format=\"reference\"/>\n-    <attr name=\"ic_key\" format=\"reference\"/>\n-    <attr name=\"ic_volume_adaption\" format=\"reference\"/>\n-    <attr name=\"ic_network\" format=\"reference\"/>\n-    <attr name=\"ic_appearance\" format=\"reference\"/>\n+    <attr name=\"filter_dialog_button_background\" format=\"reference\" />\n+    <attr name=\"filter_dialog_button_clear\" format=\"reference\" />\n+    <attr name=\"filter_dialog_clear_active\" format=\"reference\" />\n+    <attr name=\"filter_dialog_clear_inactive\" format=\"reference\" />\n+    <attr name=\"action_about\" format=\"reference\" />\n+    <attr name=\"action_search\" format=\"reference\" />\n+    <attr name=\"action_stream\" format=\"reference\" />\n+    <attr name=\"av_download\" format=\"reference\" />\n+    <attr name=\"av_fast_forward\" format=\"reference\" />\n+    <attr name=\"av_pause\" format=\"reference\" />\n+    <attr name=\"av_play\" format=\"reference\" />\n+    <attr name=\"av_skip\" format=\"reference\" />\n+    <attr name=\"av_rewind\" format=\"reference\" />\n+    <attr name=\"ic_delete\" format=\"reference\" />\n+    <attr name=\"content_new\" format=\"reference\" />\n+    <attr name=\"content_remove_from_queue\" format=\"reference\" />\n+    <attr name=\"storage\" format=\"reference\" />\n+    <attr name=\"statistics\" format=\"reference\" />\n+    <attr name=\"feed\" format=\"reference\" />\n+    <attr name=\"location_web_site\" format=\"reference\" />", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NzY3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450857671", "bodyText": "\ud83d\udc4d IntelliJ magic again", "author": "bws9000", "createdAt": "2020-07-07T13:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMzcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDI0OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450504248", "bodyText": "I would prefer if you could move this to the bottom of the theme definition. I think that the primary accent color should be on top, so that it is easier to see the key aspects of the theme directly.", "author": "ByteHamster", "createdAt": "2020-07-06T22:06:11Z", "path": "core/src/main/res/values/styles.xml", "diffHunk": "@@ -1,11 +1,17 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources xmlns:tools=\"http://schemas.android.com/tools\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\">\n \n     <style name=\"Theme.AntennaPod.Light\" parent=\"Theme.Base.AntennaPod.Light\">\n         <!-- Room for API dependent attributes -->\n     </style>\n \n     <style name=\"Theme.Base.AntennaPod.Light\" parent=\"Theme.MaterialComponents.Light\">\n+        <item name=\"filter_dialog_button_background\">\n+            @drawable/filter_dialog_button_background_light\n+        </item>\n+        <item name=\"filter_dialog_button_clear\">@drawable/filter_dialog_button_clear</item>\n+        <item name=\"filter_dialog_clear_active\">@color/dialog_filter_clear_active_light</item>\n+        <item name=\"filter_dialog_clear_inactive\">@color/dialog_filter_clear_inactive_light</item>", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1MjA3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450852071", "bodyText": "\ud83d\udc4d", "author": "bws9000", "createdAt": "2020-07-07T13:11:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNjIxOA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450506218", "bodyText": "I am not 100% sure but I think that this file does not need to be copied two times. When using an attr for the color, it can support light and dark theme with only one drawable file:\n\nic_filter_close includes with attr ?attr/filter_close_color\n\n@color/filter_close_light is a selector depending on state\n\n@color/dialog_filter_button_active_light\n@color/dialog_filter_button_inactive_light\n\n\n@color/filter_close_dark is a selector depending on state\n\n@color/dialog_filter_button_active_dark\n@color/dialog_filter_button_inactive_dark\n\n\n\n\n\nI hope that it is clear what I mean. This would reduce code duplication of a rather complex file.", "author": "ByteHamster", "createdAt": "2020-07-06T22:11:42Z", "path": "core/src/main/res/drawable/ic_filter_close_light.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <item", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxMjA4MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450912080", "bodyText": "\ud83d\udc4d 100% correct", "author": "bws9000", "createdAt": "2020-07-07T14:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNjIxOA=="}], "type": "inlineReview"}, {"oid": "06f36d12d8ac3e9f00e39f47eda4dfd48dd5e69a", "url": "https://github.com/AntennaPod/AntennaPod/commit/06f36d12d8ac3e9f00e39f47eda4dfd48dd5e69a", "message": "Merge pull request #8 from AntennaPod/develop\n\nupdate me", "committedDate": "2020-07-07T14:44:29Z", "type": "commit"}, {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "url": "https://github.com/AntennaPod/AntennaPod/commit/2ce23f6868a1205996955f7cbbbb004246ebf9b1", "message": "Redesign filter dialog", "committedDate": "2020-07-07T14:55:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3OTgyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451079821", "bodyText": "Please also move this to the bottom. Why did you add line breaks here? The other theme definitions do not use line breaks.", "author": "ByteHamster", "createdAt": "2020-07-07T19:02:24Z", "path": "core/src/main/res/values/styles.xml", "diffHunk": "@@ -1,11 +1,14 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<resources xmlns:tools=\"http://schemas.android.com/tools\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+<resources xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\">\n \n     <style name=\"Theme.AntennaPod.Light\" parent=\"Theme.Base.AntennaPod.Light\">\n         <!-- Room for API dependent attributes -->\n     </style>\n \n     <style name=\"Theme.Base.AntennaPod.Light\" parent=\"Theme.MaterialComponents.Light\">\n+        <item name=\"filter_dialog_button_background\">\n+            @drawable/filter_dialog_button_background_light\n+        </item>", "originalCommit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4MzI3NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451683275", "bodyText": "how did that happen?", "author": "bws9000", "createdAt": "2020-07-08T16:43:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3OTgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTA0OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451081048", "bodyText": "Those are only colors, so they can be moved to the color directory.", "author": "ByteHamster", "createdAt": "2020-07-07T19:04:55Z", "path": "core/src/main/res/drawable/filter_dialog_button_background_dark.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@color/dialog_filter_button_active_dark\" android:state_checked=\"true\" />\n+    <item android:drawable=\"@color/dialog_filter_button_inactive_dark\" />", "originalCommit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNzY3OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451707678", "bodyText": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:color=\"@color/dialog_filter_button_active_dark\" android:state_checked=\"true\" />\n    <item android:color=\"@color/dialog_filter_button_inactive_dark\" />\n</selector>``", "author": "bws9000", "createdAt": "2020-07-08T17:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTA0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNzY3NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r453207674", "bodyText": "Yeah, something like that and then moving the file to the color directory would be cool.", "author": "ByteHamster", "createdAt": "2020-07-11T15:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTY1OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451081658", "bodyText": "This should be a different resource for light and dark theme, I think", "author": "ByteHamster", "createdAt": "2020-07-07T19:06:05Z", "path": "core/src/main/res/values/styles.xml", "diffHunk": "@@ -148,6 +157,13 @@\n         <item name=\"ic_key\">@drawable/ic_key_white</item>\n         <item name=\"ic_volume_adaption\">@drawable/ic_volume_adaption_white</item>\n         <item name=\"scrollbar_thumb\">@drawable/scrollbar_thumb_dark</item>\n+\n+        <item name=\"filter_dialog_button_background\">\n+            @drawable/filter_dialog_button_background_dark\n+        </item>\n+        <item name=\"filter_dialog_clear_active\">@color/dialog_filter_clear_active_dark</item>\n+        <item name=\"filter_dialog_clear_inactive\">@color/dialog_filter_clear_inactive_dark</item>\n+        <item name=\"filter_dialog_close\">@color/filter_dialog_close</item>", "originalCommit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwODIyMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r453208223", "bodyText": "<item name=\"filter_dialog_clear_active\">@color/dialog_filter_clear_active_light</item>\n    <item name=\"filter_dialog_clear_inactive\">@color/dialog_filter_clear_inactive_light</item>", "author": "bws9000", "createdAt": "2020-07-11T15:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzNjMwOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r453236309", "bodyText": "They are. It gets confusing. color/filter_dialog_close.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:color=\"?attr/filter_dialog_clear_active\" android:state_checked=\"true\" />\n    <item android:color=\"?attr/filter_dialog_clear_inactive\" />\n</selector>\n\nOr I can make two more files in the color directory like I've done with color radio button background.\n\nfilter_dialog_background_dark.xml\n\"\" light.xml\nWhich is the only way you can do it with the radio button background attribute because for some reason the inflater doesn't want to inflate a selector with attributes on a background, possibly because of the custom of the custom radiobutton class?\n\nAnyway, everything is in the color directory now.", "author": "bws9000", "createdAt": "2020-07-11T21:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTY1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDIwMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451084203", "bodyText": "Instead of using new attrs, I think you can re-use ?attr/colorOnSecondary (when active) and ?attr/textColorPrimary (when not active). This saves a few additional definition and therefore ensures consistency.", "author": "ByteHamster", "createdAt": "2020-07-07T19:10:55Z", "path": "core/src/main/res/color/filter_dialog_button_text.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:color=\"?attr/filter_dialog_text_active\" android:state_checked=\"true\" />\n+    <item android:color=\"?attr/filter_dialog_text_inactive\" />", "originalCommit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwMzY2OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451703668", "bodyText": "\ud83d\udc4d", "author": "bws9000", "createdAt": "2020-07-08T17:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDIwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDc5Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451084797", "bodyText": "Material Design uses multiples of 8dp for spacing (see https://material.io/design/layout/spacing-methods.html#baseline-grid). Other dialogs in AntennaPod use 16dp for padding.", "author": "ByteHamster", "createdAt": "2020-07-07T19:12:03Z", "path": "app/src/main/res/layout/filter_dialog.xml", "diffHunk": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n+    android:paddingLeft=\"20dp\"\n+    android:paddingTop=\"25dp\"\n+    android:paddingRight=\"20dp\"\n+    android:paddingBottom=\"0dp\">", "originalCommit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5MzE0Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r451693147", "bodyText": "\ud83d\udc4d", "author": "bws9000", "createdAt": "2020-07-08T16:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDc5Nw=="}], "type": "inlineReview"}, {"oid": "d90ca124c0f755651334011d11584f58dd0ce3bc", "url": "https://github.com/AntennaPod/AntennaPod/commit/d90ca124c0f755651334011d11584f58dd0ce3bc", "message": "Merge pull request #9 from AntennaPod/develop\n\nupdate me", "committedDate": "2020-07-11T16:01:41Z", "type": "commit"}, {"oid": "722bc2616ef25a7f209d4603f04963fec10d3d06", "url": "https://github.com/AntennaPod/AntennaPod/commit/722bc2616ef25a7f209d4603f04963fec10d3d06", "message": "Redesign filter dialog", "committedDate": "2020-07-11T16:07:39Z", "type": "commit"}, {"oid": "051714dff81061d33fe8cbc14aa9f278b97ccbfe", "url": "https://github.com/AntennaPod/AntennaPod/commit/051714dff81061d33fe8cbc14aa9f278b97ccbfe", "message": "Redesign filter dialog", "committedDate": "2020-07-11T21:09:50Z", "type": "commit"}, {"oid": "a26a41514ae79af7cd9bdfa8838ce62bde1b1c35", "url": "https://github.com/AntennaPod/AntennaPod/commit/a26a41514ae79af7cd9bdfa8838ce62bde1b1c35", "message": "Resize filter rows automatically", "committedDate": "2020-07-13T09:45:01Z", "type": "commit"}, {"oid": "03f2198ed5e977c37f0413483a10ad421d06d153", "url": "https://github.com/AntennaPod/AntennaPod/commit/03f2198ed5e977c37f0413483a10ad421d06d153", "message": "Fixed colors in dark theme", "committedDate": "2020-07-13T10:06:34Z", "type": "commit"}, {"oid": "655c7a9884504206747b2789f0c10cdf72ac3608", "url": "https://github.com/AntennaPod/AntennaPod/commit/655c7a9884504206747b2789f0c10cdf72ac3608", "message": "Fixed clear button clearing all values", "committedDate": "2020-07-13T10:10:00Z", "type": "commit"}, {"oid": "364444e4d64f31ba8d3f8f551680448b2e48edb8", "url": "https://github.com/AntennaPod/AntennaPod/commit/364444e4d64f31ba8d3f8f551680448b2e48edb8", "message": "Reverted unrelated changes", "committedDate": "2020-07-13T10:14:23Z", "type": "commit"}]}