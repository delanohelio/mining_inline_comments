{"pr_number": 4515, "pr_title": "Discovery filter by country & hide discovery on first subscribe screen", "pr_createdAt": "2020-10-09T15:54:14Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4515", "timeline": [{"oid": "4a21e36112563c249b5206c0c73e6bd1cf4e86db", "url": "https://github.com/AntennaPod/AntennaPod/commit/4a21e36112563c249b5206c0c73e6bd1cf4e86db", "message": "first", "committedDate": "2020-10-09T05:13:49Z", "type": "commit"}, {"oid": "7f8decd533ec55d06ec4e15993e33bc83d9f9383", "url": "https://github.com/AntennaPod/AntennaPod/commit/7f8decd533ec55d06ec4e15993e33bc83d9f9383", "message": "browse by country", "committedDate": "2020-10-09T15:52:08Z", "type": "commit"}, {"oid": "d3a7b3fc91edc8b954a91c258aca86933e67dc73", "url": "https://github.com/AntennaPod/AntennaPod/commit/d3a7b3fc91edc8b954a91c258aca86933e67dc73", "message": "clean code", "committedDate": "2020-10-09T16:07:58Z", "type": "commit"}, {"oid": "6cbca4c6fc24f4ffa498e4a706c07e5d44b0e10b", "url": "https://github.com/AntennaPod/AntennaPod/commit/6cbca4c6fc24f4ffa498e4a706c07e5d44b0e10b", "message": "clean", "committedDate": "2020-10-09T16:11:24Z", "type": "commit"}, {"oid": "49d025a2ce28f6402ddcd8942e3881e469312827", "url": "https://github.com/AntennaPod/AntennaPod/commit/49d025a2ce28f6402ddcd8942e3881e469312827", "message": "checkstyle fun", "committedDate": "2020-10-09T21:35:16Z", "type": "commit"}, {"oid": "e1b5875d6e330ad006afc3fc82104270994b47d3", "url": "https://github.com/AntennaPod/AntennaPod/commit/e1b5875d6e330ad006afc3fc82104270994b47d3", "message": "Trigger Build", "committedDate": "2020-10-09T21:38:26Z", "type": "commit"}, {"oid": "d1a4ad8f054a2ab4bafcb1da46af34fe01d15d00", "url": "https://github.com/AntennaPod/AntennaPod/commit/d1a4ad8f054a2ab4bafcb1da46af34fe01d15d00", "message": "Trigger Build", "committedDate": "2020-10-09T21:39:16Z", "type": "commit"}, {"oid": "a0bfb0ddc4d061db76398231a1fc9d0c42647d32", "url": "https://github.com/AntennaPod/AntennaPod/commit/a0bfb0ddc4d061db76398231a1fc9d0c42647d32", "message": "dynamic list", "committedDate": "2020-10-10T01:57:36Z", "type": "commit"}, {"oid": "ec28c1c049268f125875c639e4b6f9455964fe0a", "url": "https://github.com/AntennaPod/AntennaPod/commit/ec28c1c049268f125875c639e4b6f9455964fe0a", "message": "checkstyle", "committedDate": "2020-10-10T02:23:32Z", "type": "commit"}, {"oid": "1251c8c13fb2d2c4142a392e45f0f00503cc37af", "url": "https://github.com/AntennaPod/AntennaPod/commit/1251c8c13fb2d2c4142a392e45f0f00503cc37af", "message": "checkstyle", "committedDate": "2020-10-10T02:33:20Z", "type": "commit"}, {"oid": "99b4f74fcd47e47595467cdee7124869556ada71", "url": "https://github.com/AntennaPod/AntennaPod/commit/99b4f74fcd47e47595467cdee7124869556ada71", "message": "clean up", "committedDate": "2020-10-10T06:00:24Z", "type": "commit"}, {"oid": "3c4a54293608f748e1d978d098bcc4bc5936de72", "url": "https://github.com/AntennaPod/AntennaPod/commit/3c4a54293608f748e1d978d098bcc4bc5936de72", "message": "us -> US", "committedDate": "2020-10-10T06:46:26Z", "type": "commit"}, {"oid": "6c81f75c20a55ddf6e28e1aa2c7215addbb97822", "url": "https://github.com/AntennaPod/AntennaPod/commit/6c81f75c20a55ddf6e28e1aa2c7215addbb97822", "message": "checkstyle", "committedDate": "2020-10-10T07:11:40Z", "type": "commit"}, {"oid": "da72c7280500f20cfebc677b9b97f21cf067eeeb", "url": "https://github.com/AntennaPod/AntennaPod/commit/da72c7280500f20cfebc677b9b97f21cf067eeeb", "message": "support hiding discovery", "committedDate": "2020-10-11T03:56:20Z", "type": "commit"}, {"oid": "c3a1c359c97381be5ce9499a40b67ae962c7b411", "url": "https://github.com/AntennaPod/AntennaPod/commit/c3a1c359c97381be5ce9499a40b67ae962c7b411", "message": "checkstyle", "committedDate": "2020-10-11T04:02:01Z", "type": "commit"}, {"oid": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "url": "https://github.com/AntennaPod/AntennaPod/commit/4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "message": "checkstyle", "committedDate": "2020-10-11T04:06:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MjY1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502882654", "bodyText": "What do you think about only falling back to US when no country was selected yet? Other countries could display something like \"Sorry, we do not have suggestions for your region\".", "author": "ByteHamster", "createdAt": "2020-10-11T08:15:04Z", "path": "app/src/main/java/de/danoeh/antennapod/discovery/ItunesTopListLoader.java", "diffHunk": "@@ -23,23 +24,33 @@\n import java.util.Locale;\n import java.util.concurrent.TimeUnit;\n \n+import static android.content.Context.MODE_PRIVATE;\n+\n public class ItunesTopListLoader {\n     private static final String TAG = \"ITunesTopListLoader\";\n     private final Context context;\n+    public static final String PREF_KEY_COUNTRY_CODE = \"country_code\";\n+    public static final String PREFS = \"CountryRegionPrefs\";\n \n     public ItunesTopListLoader(Context context) {\n         this.context = context;\n     }\n \n-    public Single<List<PodcastSearchResult>> loadToplist(int limit) {\n+    public Single<List<PodcastSearchResult>> loadToplist() {\n+        String defaultCountry = Locale.getDefault().getCountry();\n+        SharedPreferences prefs = context.getSharedPreferences(PREFS, MODE_PRIVATE);\n+        String countryCode = prefs.getString(PREF_KEY_COUNTRY_CODE, defaultCountry);\n+        return this.loadToplist(countryCode, 25);\n+    }\n+\n+    public Single<List<PodcastSearchResult>> loadToplist(String country, int limit) {\n         return Single.create((SingleOnSubscribe<List<PodcastSearchResult>>) emitter -> {\n-            String country = Locale.getDefault().getCountry();\n             OkHttpClient client = AntennapodHttpClient.getHttpClient();\n             String feedString;\n             try {\n                 feedString = getTopListFeed(client, country, limit);\n             } catch (IOException e) {\n-                feedString = getTopListFeed(client, \"us\", limit);\n+                feedString = getTopListFeed(client, \"US\", limit);", "originalCommit": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MjA1Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502952056", "bodyText": "up in line 40, I pick the default country of the device, so there will always be a country even if you don't select it.  I personally don't want to default to US all the time, but that is the safe option.\nLet me know if want me to fix this and maybe you can tell me how you think the flow should be?", "author": "tonytamsf", "createdAt": "2020-10-11T18:52:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MjY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1ODI3NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502958275", "bodyText": "Displaying the US as fallback makes it harder to see if a region supports localized suggestions. If I explicitly select a region, I would expect to either see suggestions from that region or an error message, not US suggestions. Contrarily, if I use the app without ever selecting a region, I would expect to get suggestions, even if they are not completely relevant.\nWhat about something like this?\nString countryCode = prefs.getString(PREF_KEY_COUNTRY_CODE, COUNTRY_CODE_UNSET);\nreturn this.loadToplist(countryCode, 25);\n\nString loadCountry = country;\nif (COUNTRY_CODE_UNSET.equals(country)) {\n    loadCountry = Locale.getDefault().getCountry();\n}\ntry {\n    feedString = getTopListFeed(client, country, limit);\n} catch (IOException e) {\n    if (COUNTRY_CODE_UNSET.equals(country)) {\n        feedString = getTopListFeed(client, \"US\", limit);\n    }\n}", "author": "ByteHamster", "createdAt": "2020-10-11T19:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MjY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4MjEwMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502982100", "bodyText": "Great idea. Togo doesn't have data.  The new code tells the user", "author": "tonytamsf", "createdAt": "2020-10-11T23:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MjY1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4Mjk2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502882962", "bodyText": "Hiding like this only works directly after changing the setting, right? What about moving the hiding code to loadToplist?", "author": "ByteHamster", "createdAt": "2020-10-11T08:18:29Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DiscoveryFragment.java", "diffHunk": "@@ -97,12 +120,81 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\n             intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, podcast.feedUrl);\n             startActivity(intent);\n         });\n+\n+        List<String> countryCodeArray = new ArrayList<String>(Arrays.asList(Locale.getISOCountries()));\n+        HashMap<String, String> countryCodeNames = new HashMap<String, String>();\n+        for (String code: countryCodeArray) {\n+            Locale locale = new Locale(\"\", code);\n+            String countryName = locale.getDisplayCountry();\n+            if (countryName != null) {\n+                countryCodeNames.put(code, countryName);\n+            }\n+        }\n+        //countryCodeArray.add(0, getResources().getString(R.string.discover_hide_fake_code));\n+        // countryCodeNames.put(getResources().getString(R.string.discover_hide_fake_code),\n+        //                 getResources().getString(R.string.discover_hide));\n+\n+        List<String> countryNamesSort = new ArrayList<String>(countryCodeNames.values());\n+        Collections.sort(countryNamesSort);\n+        countryNamesSort.add(0, getResources().getString(R.string.discover_hide));\n+\n+        Spinner countrySpinner = root.findViewById(R.id.spinner_country);\n+        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this.getContext(), \n+                android.R.layout.simple_spinner_item, \n+                countryNamesSort);\n+        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n+        countrySpinner.setAdapter(dataAdapter);\n+        int pos = countryNamesSort.indexOf(countryCodeNames.get(countryCode));\n+        countrySpinner.setSelection(pos);\n+\n+        countrySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n+            @Override\n+            public void onItemSelected(AdapterView<?> countrySpinner, View view, int position, long id) {\n+                String countryName = (String) countrySpinner.getItemAtPosition(position);\n+\n+                if (countryName.equals(getResources().getString(R.string.discover_hide))) {\n+                    countryCode = getResources().getString(R.string.discover_hide_fake_code);\n+                    gridView.setVisibility(View.GONE);", "originalCommit": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MjA4Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502952082", "bodyText": "done", "author": "tonytamsf", "createdAt": "2020-10-11T18:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4Mjk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MzAzMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502883032", "bodyText": "I don't think this line is needed. You already initialize it in onCreate", "author": "ByteHamster", "createdAt": "2020-10-11T08:19:21Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DiscoveryFragment.java", "diffHunk": "@@ -97,12 +120,81 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\n             intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, podcast.feedUrl);\n             startActivity(intent);\n         });\n+\n+        List<String> countryCodeArray = new ArrayList<String>(Arrays.asList(Locale.getISOCountries()));\n+        HashMap<String, String> countryCodeNames = new HashMap<String, String>();\n+        for (String code: countryCodeArray) {\n+            Locale locale = new Locale(\"\", code);\n+            String countryName = locale.getDisplayCountry();\n+            if (countryName != null) {\n+                countryCodeNames.put(code, countryName);\n+            }\n+        }\n+        //countryCodeArray.add(0, getResources().getString(R.string.discover_hide_fake_code));\n+        // countryCodeNames.put(getResources().getString(R.string.discover_hide_fake_code),\n+        //                 getResources().getString(R.string.discover_hide));\n+\n+        List<String> countryNamesSort = new ArrayList<String>(countryCodeNames.values());\n+        Collections.sort(countryNamesSort);\n+        countryNamesSort.add(0, getResources().getString(R.string.discover_hide));\n+\n+        Spinner countrySpinner = root.findViewById(R.id.spinner_country);\n+        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this.getContext(), \n+                android.R.layout.simple_spinner_item, \n+                countryNamesSort);\n+        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n+        countrySpinner.setAdapter(dataAdapter);\n+        int pos = countryNamesSort.indexOf(countryCodeNames.get(countryCode));\n+        countrySpinner.setSelection(pos);\n+\n+        countrySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n+            @Override\n+            public void onItemSelected(AdapterView<?> countrySpinner, View view, int position, long id) {\n+                String countryName = (String) countrySpinner.getItemAtPosition(position);\n+\n+                if (countryName.equals(getResources().getString(R.string.discover_hide))) {\n+                    countryCode = getResources().getString(R.string.discover_hide_fake_code);\n+                    gridView.setVisibility(View.GONE);\n+                    txtvError.setVisibility(View.VISIBLE);\n+                    txtvError.setText(String.format(getResources().getString(R.string.discover_will_be_hidden),\n+                            getResources().getString(R.string.discover_hide)));\n+                    butRetry.setVisibility(View.GONE);\n+                    txtvEmpty.setVisibility(View.GONE);\n+                    progressBar.setVisibility(View.GONE);\n+                } else {\n+                    for (Object o : countryCodeNames.keySet()) {\n+                        if (countryCodeNames.get(o).equals(countryName)) {\n+                            countryCode = o.toString();\n+                            break;\n+                        }\n+                    }\n+                }\n+\n+                prefs = getActivity().getSharedPreferences(ItunesTopListLoader.PREFS, MODE_PRIVATE);", "originalCommit": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MjEyNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502952126", "bodyText": "removed", "author": "tonytamsf", "createdAt": "2020-10-11T18:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MzAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MzE1MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502883150", "bodyText": "I would make this a public static final String instead", "author": "ByteHamster", "createdAt": "2020-10-11T08:20:25Z", "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -724,6 +724,9 @@\n     <string name=\"add_podcast_by_url_hint\" translatable=\"false\">www.example.com/feed</string>\n     <string name=\"browse_gpoddernet_label\">Browse gpodder.net</string>\n     <string name=\"discover\">Discover</string>\n+    <string name=\"discover_hide\">Hide</string>\n+    <string name=\"discover_will_be_hidden\">You selected to hide podcasts using [%s].</string>\n+    <string name=\"discover_hide_fake_code\">00</string>", "originalCommit": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MzE4NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502883185", "bodyText": "Are those still needed?", "author": "ByteHamster", "createdAt": "2020-10-11T08:20:43Z", "path": "core/src/main/res/values/arrays.xml", "diffHunk": "@@ -350,4 +350,12 @@\n         <item>EpisodesFragment</item>\n         <item>SubscriptionFragment</item>\n     </string-array>\n+\n+    <string-array name=\"country_name\">\n+        <item>United States</item>\n+    </string-array>\n+\n+    <string-array name=\"country_code\">\n+        <item>US</item>\n+    </string-array>", "originalCommit": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MzI2OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502883269", "bodyText": "Please remove the unrelated code change to keep the git history clean (and also reduce the probability of merge conflicts)", "author": "ByteHamster", "createdAt": "2020-10-11T08:21:36Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java", "diffHunk": "@@ -51,6 +51,7 @@\n  */\n public class SearchFragment extends Fragment {\n     private static final String TAG = \"SearchFragment\";\n+", "originalCommit": "4f3339da89c3d8d02cfc37512e33bb5ccd6e36c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "94a0ec57aabea2008817d1bcc34b63b41ead1024", "url": "https://github.com/AntennaPod/AntennaPod/commit/94a0ec57aabea2008817d1bcc34b63b41ead1024", "message": "code review 1", "committedDate": "2020-10-11T18:54:19Z", "type": "commit"}, {"oid": "5f8684597fa925629f198c53eebd76d566420b6d", "url": "https://github.com/AntennaPod/AntennaPod/commit/5f8684597fa925629f198c53eebd76d566420b6d", "message": "cleanup", "committedDate": "2020-10-11T19:00:40Z", "type": "commit"}, {"oid": "e5032db7ec099f43bf8fdead4053166fcabec4b4", "url": "https://github.com/AntennaPod/AntennaPod/commit/e5032db7ec099f43bf8fdead4053166fcabec4b4", "message": "cleanup", "committedDate": "2020-10-11T19:07:43Z", "type": "commit"}, {"oid": "27c36f4aa704199281991260c4aff97508c7773b", "url": "https://github.com/AntennaPod/AntennaPod/commit/27c36f4aa704199281991260c4aff97508c7773b", "message": "clean", "committedDate": "2020-10-11T19:16:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1ODY1NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502958655", "bodyText": "I would simply use You selected to hide suggestions.. Having the text there again looks pretty technical.\nInstead of discover_will_be_hidden I would use discover_is_hidden", "author": "ByteHamster", "createdAt": "2020-10-11T19:55:16Z", "path": "core/src/main/res/values/strings.xml", "diffHunk": "@@ -724,6 +724,8 @@\n     <string name=\"add_podcast_by_url_hint\" translatable=\"false\">www.example.com/feed</string>\n     <string name=\"browse_gpoddernet_label\">Browse gpodder.net</string>\n     <string name=\"discover\">Discover</string>\n+    <string name=\"discover_hide\">Hide</string>\n+    <string name=\"discover_will_be_hidden\">You selected to hide podcasts using [%s].</string>", "originalCommit": "27c36f4aa704199281991260c4aff97508c7773b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1OTA3NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r502959074", "bodyText": "Oh, nice :) I did not know that this is the way to make Checkstyle happy about multiple lambda functions. I always used different indention for success and error.", "author": "ByteHamster", "createdAt": "2020-10-11T19:59:23Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DiscoveryFragment.java", "diffHunk": "@@ -116,28 +190,40 @@ public void onDestroy() {\n         adapter = null;\n     }\n \n-    private void loadToplist() {\n+    private void loadToplist(String country) {\n         if (disposable != null) {\n             disposable.dispose();\n         }\n+\n         gridView.setVisibility(View.GONE);\n         txtvError.setVisibility(View.GONE);\n         butRetry.setVisibility(View.GONE);\n         txtvEmpty.setVisibility(View.GONE);\n         progressBar.setVisibility(View.VISIBLE);\n \n-        ItunesTopListLoader loader = new ItunesTopListLoader(getContext());\n-        disposable = loader.loadToplist(25).subscribe(podcasts -> {\n+        if (country.equals(ItunesTopListLoader.DISCOVER_HIDE_FAKE_COUNTRY_CODE)) {\n+            gridView.setVisibility(View.GONE);\n+            txtvError.setVisibility(View.VISIBLE);\n+            txtvError.setText(String.format(getResources().getString(R.string.discover_will_be_hidden),\n+                    getResources().getString(R.string.discover_hide)));\n+            butRetry.setVisibility(View.GONE);\n+            txtvEmpty.setVisibility(View.GONE);\n             progressBar.setVisibility(View.GONE);\n-            topList = podcasts;\n-            updateData(topList);\n-        }, error -> {\n-                Log.e(TAG, Log.getStackTraceString(error));\n-                progressBar.setVisibility(View.GONE);\n-                txtvError.setText(error.toString());\n-                txtvError.setVisibility(View.VISIBLE);\n-                butRetry.setOnClickListener(v -> loadToplist());\n-                butRetry.setVisibility(View.VISIBLE);\n-            });\n+        } else {\n+            ItunesTopListLoader loader = new ItunesTopListLoader(getContext());\n+            disposable = loader.loadToplist(country, 25).subscribe(\n+                    podcasts -> {\n+                        progressBar.setVisibility(View.GONE);\n+                        topList = podcasts;\n+                        updateData(topList); },", "originalCommit": "27c36f4aa704199281991260c4aff97508c7773b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "67267a8adaf90bd1964d9c6ad43e03eed7ba8fc1", "url": "https://github.com/AntennaPod/AntennaPod/commit/67267a8adaf90bd1964d9c6ad43e03eed7ba8fc1", "message": "handle when a country data has problems, be explicit", "committedDate": "2020-10-11T23:36:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgyNTg3Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r503825872", "bodyText": "I think there should be a return call. Otherwise, the program continues to parse the non-existing feed.", "author": "ByteHamster", "createdAt": "2020-10-13T10:01:56Z", "path": "app/src/main/java/de/danoeh/antennapod/discovery/ItunesTopListLoader.java", "diffHunk": "@@ -23,24 +24,45 @@\n import java.util.Locale;\n import java.util.concurrent.TimeUnit;\n \n+import static android.content.Context.MODE_PRIVATE;\n+\n public class ItunesTopListLoader {\n     private static final String TAG = \"ITunesTopListLoader\";\n     private final Context context;\n+    public static final String PREF_KEY_COUNTRY_CODE = \"country_code\";\n+    public static final String PREFS = \"CountryRegionPrefs\";\n+    public static final String DISCOVER_HIDE_FAKE_COUNTRY_CODE = \"00\";\n+    public static final String COUNTRY_CODE_UNSET = \"99\";\n \n     public ItunesTopListLoader(Context context) {\n         this.context = context;\n     }\n \n-    public Single<List<PodcastSearchResult>> loadToplist(int limit) {\n+    public Single<List<PodcastSearchResult>> loadToplist() {\n+        String defaultCountry = Locale.getDefault().getCountry();\n+        SharedPreferences prefs = context.getSharedPreferences(PREFS, MODE_PRIVATE);\n+        String countryCode = prefs.getString(PREF_KEY_COUNTRY_CODE, COUNTRY_CODE_UNSET);\n+        return this.loadToplist(countryCode, 25);\n+    }\n+\n+    public Single<List<PodcastSearchResult>> loadToplist(String country, int limit) {\n         return Single.create((SingleOnSubscribe<List<PodcastSearchResult>>) emitter -> {\n-            String country = Locale.getDefault().getCountry();\n             OkHttpClient client = AntennapodHttpClient.getHttpClient();\n-            String feedString;\n+            String feedString = \"{}\";\n+            String loadCountry = country;\n+            if (COUNTRY_CODE_UNSET.equals(country)) {\n+                loadCountry = Locale.getDefault().getCountry();\n+            }\n             try {\n-                feedString = getTopListFeed(client, country, limit);\n+                feedString = getTopListFeed(client, loadCountry, limit);\n             } catch (IOException e) {\n-                feedString = getTopListFeed(client, \"us\", limit);\n+                if (COUNTRY_CODE_UNSET.equals(country)) {\n+                    feedString = getTopListFeed(client, \"US\", limit);\n+                } else {\n+                    emitter.onError(e);", "originalCommit": "67267a8adaf90bd1964d9c6ad43e03eed7ba8fc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgwNzE5Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r505807197", "bodyText": "\ud83d\udc07 done", "author": "tonytamsf", "createdAt": "2020-10-15T20:05:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgyNTg3Mg=="}], "type": "inlineReview"}, {"oid": "dd401b3f4034cea323f61b9cda023e3498d02e16", "url": "https://github.com/AntennaPod/AntennaPod/commit/dd401b3f4034cea323f61b9cda023e3498d02e16", "message": "handle zero results from a country", "committedDate": "2020-10-14T18:08:31Z", "type": "commit"}, {"oid": "81a9ea145be0187c12bf75dc28bcb244c325a023", "url": "https://github.com/AntennaPod/AntennaPod/commit/81a9ea145be0187c12bf75dc28bcb244c325a023", "message": "indent", "committedDate": "2020-10-14T18:14:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2MzM5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r504963396", "bodyText": "Is this still needed? I think there is no code path where the parser could end up with an empty string. The method either returns or throws an exception. While it wouldn't affect the runtime behavior, I think the code would be easier to understand if this was just kept uninitialized.", "author": "ByteHamster", "createdAt": "2020-10-14T20:49:08Z", "path": "app/src/main/java/de/danoeh/antennapod/discovery/ItunesTopListLoader.java", "diffHunk": "@@ -23,24 +24,46 @@\n import java.util.Locale;\n import java.util.concurrent.TimeUnit;\n \n+import static android.content.Context.MODE_PRIVATE;\n+\n public class ItunesTopListLoader {\n     private static final String TAG = \"ITunesTopListLoader\";\n     private final Context context;\n+    public static final String PREF_KEY_COUNTRY_CODE = \"country_code\";\n+    public static final String PREFS = \"CountryRegionPrefs\";\n+    public static final String DISCOVER_HIDE_FAKE_COUNTRY_CODE = \"00\";\n+    public static final String COUNTRY_CODE_UNSET = \"99\";\n \n     public ItunesTopListLoader(Context context) {\n         this.context = context;\n     }\n \n-    public Single<List<PodcastSearchResult>> loadToplist(int limit) {\n+    public Single<List<PodcastSearchResult>> loadToplist() {\n+        String defaultCountry = Locale.getDefault().getCountry();\n+        SharedPreferences prefs = context.getSharedPreferences(PREFS, MODE_PRIVATE);\n+        String countryCode = prefs.getString(PREF_KEY_COUNTRY_CODE, COUNTRY_CODE_UNSET);\n+        return this.loadToplist(countryCode, 25);\n+    }\n+\n+    public Single<List<PodcastSearchResult>> loadToplist(String country, int limit) {\n         return Single.create((SingleOnSubscribe<List<PodcastSearchResult>>) emitter -> {\n-            String country = Locale.getDefault().getCountry();\n             OkHttpClient client = AntennapodHttpClient.getHttpClient();\n-            String feedString;\n+            String feedString = \"{}\";", "originalCommit": "81a9ea145be0187c12bf75dc28bcb244c325a023", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "edd6945eab74004384c70d6aa66bd7668b9bf98c", "url": "https://github.com/AntennaPod/AntennaPod/commit/edd6945eab74004384c70d6aa66bd7668b9bf98c", "message": "handle 400 error", "committedDate": "2020-10-14T21:19:43Z", "type": "commit"}, {"oid": "f6101bcb65a895a327ba7935a039f759ffdfbec2", "url": "https://github.com/AntennaPod/AntennaPod/commit/f6101bcb65a895a327ba7935a039f759ffdfbec2", "message": "checkstyle", "committedDate": "2020-10-14T21:53:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxODQ2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r505818462", "bodyText": "This looks like a lot of log spam. Is it still needed?", "author": "ByteHamster", "createdAt": "2020-10-15T20:27:11Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DiscoveryFragment.java", "diffHunk": "@@ -97,13 +115,65 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\n             intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, podcast.feedUrl);\n             startActivity(intent);\n         });\n+\n+        List<String> countryCodeArray = new ArrayList<String>(Arrays.asList(Locale.getISOCountries()));\n+        HashMap<String, String> countryCodeNames = new HashMap<String, String>();\n+        for (String code: countryCodeArray) {\n+            Log.d(\"Country=\", code);", "originalCommit": "f6101bcb65a895a327ba7935a039f759ffdfbec2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgzMjE2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r505832162", "bodyText": "Looks like the reason why this works for checkstyle is that you added a line break after .subscribe. I thought this was about moving the closing braces to the end of the line. Looks like it is not, so could you please move the closing braces to the next line?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    updateData(topList); },\n          \n          \n            \n                                error -> {\n          \n          \n            \n                                    updateData(topList);\n          \n          \n            \n                                }, error -> {", "author": "ByteHamster", "createdAt": "2020-10-15T20:44:17Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DiscoveryFragment.java", "diffHunk": "@@ -116,28 +186,40 @@ public void onDestroy() {\n         adapter = null;\n     }\n \n-    private void loadToplist() {\n+    private void loadToplist(String country) {\n         if (disposable != null) {\n             disposable.dispose();\n         }\n+\n         gridView.setVisibility(View.GONE);\n         txtvError.setVisibility(View.GONE);\n         butRetry.setVisibility(View.GONE);\n         txtvEmpty.setVisibility(View.GONE);\n         progressBar.setVisibility(View.VISIBLE);\n \n-        ItunesTopListLoader loader = new ItunesTopListLoader(getContext());\n-        disposable = loader.loadToplist(25).subscribe(podcasts -> {\n+        if (country.equals(ItunesTopListLoader.DISCOVER_HIDE_FAKE_COUNTRY_CODE)) {\n+            gridView.setVisibility(View.GONE);\n+            txtvError.setVisibility(View.VISIBLE);\n+            txtvError.setText(String.format(getResources().getString(R.string.discover_is_hidden),\n+                    getResources().getString(R.string.discover_hide)));\n+            butRetry.setVisibility(View.GONE);\n+            txtvEmpty.setVisibility(View.GONE);\n             progressBar.setVisibility(View.GONE);\n-            topList = podcasts;\n-            updateData(topList);\n-        }, error -> {\n-                Log.e(TAG, Log.getStackTraceString(error));\n-                progressBar.setVisibility(View.GONE);\n-                txtvError.setText(error.toString());\n-                txtvError.setVisibility(View.VISIBLE);\n-                butRetry.setOnClickListener(v -> loadToplist());\n-                butRetry.setVisibility(View.VISIBLE);\n-            });\n+        } else {\n+            ItunesTopListLoader loader = new ItunesTopListLoader(getContext());\n+            disposable = loader.loadToplist(country, 25).subscribe(\n+                    podcasts -> {\n+                        progressBar.setVisibility(View.GONE);\n+                        topList = podcasts;\n+                        updateData(topList); },\n+                    error -> {", "originalCommit": "f6101bcb65a895a327ba7935a039f759ffdfbec2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "048db5b850f0b7e2b40703c060d0c77ec6fe5730", "url": "https://github.com/AntennaPod/AntennaPod/commit/048db5b850f0b7e2b40703c060d0c77ec6fe5730", "message": "checkstyle and less logs", "committedDate": "2020-10-16T00:48:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyMDE2MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r506120160", "bodyText": "Sorry, I noticed another thing. Here, String.format is no longer needed.", "author": "ByteHamster", "createdAt": "2020-10-16T07:26:38Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DiscoveryFragment.java", "diffHunk": "@@ -116,28 +185,40 @@ public void onDestroy() {\n         adapter = null;\n     }\n \n-    private void loadToplist() {\n+    private void loadToplist(String country) {\n         if (disposable != null) {\n             disposable.dispose();\n         }\n+\n         gridView.setVisibility(View.GONE);\n         txtvError.setVisibility(View.GONE);\n         butRetry.setVisibility(View.GONE);\n         txtvEmpty.setVisibility(View.GONE);\n         progressBar.setVisibility(View.VISIBLE);\n \n-        ItunesTopListLoader loader = new ItunesTopListLoader(getContext());\n-        disposable = loader.loadToplist(25).subscribe(podcasts -> {\n+        if (country.equals(ItunesTopListLoader.DISCOVER_HIDE_FAKE_COUNTRY_CODE)) {\n+            gridView.setVisibility(View.GONE);\n+            txtvError.setVisibility(View.VISIBLE);\n+            txtvError.setText(String.format(getResources().getString(R.string.discover_is_hidden),\n+                    getResources().getString(R.string.discover_hide)));", "originalCommit": "048db5b850f0b7e2b40703c060d0c77ec6fe5730", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYxNTUyNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4515#discussion_r506615525", "bodyText": "Done", "author": "tonytamsf", "createdAt": "2020-10-16T17:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyMDE2MA=="}], "type": "inlineReview"}, {"oid": "c4c1aecf556c6733accd1a1db4c1f429fa418909", "url": "https://github.com/AntennaPod/AntennaPod/commit/c4c1aecf556c6733accd1a1db4c1f429fa418909", "message": "no need for string.format()", "committedDate": "2020-10-16T17:19:24Z", "type": "commit"}]}