{"pr_number": 2, "pr_title": "FM2-2: Implement the Task Resource", "pr_createdAt": "2020-01-07T02:11:23Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NTM3NA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363685374", "bodyText": "How about using the same license as that used in FhirTaskService?", "author": "dkayiwa", "createdAt": "2020-01-07T10:31:41Z", "path": "api/src/main/java/org/openmrs/module/fhir2/Task.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * The contents of this file are subject to the OpenMRS Public License\n+ * Version 1.0 (the \"License\"); you may not use this file except in", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NjYyMQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363686621", "bodyText": "Tests or Tasks?", "author": "dkayiwa", "createdAt": "2020-01-07T10:34:58Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;\n+\n+/**\n+ * Contains methods pertaining to creating/updating/voiding Tests", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NjgyNg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363686826", "bodyText": "Would be great to document the uuid param. \ud83d\ude0a", "author": "dkayiwa", "createdAt": "2020-01-07T10:35:37Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;\n+\n+/**\n+ * Contains methods pertaining to creating/updating/voiding Tests\n+ */\n+public interface FhirTaskService {\n+\n+\t/**\n+\t * Get task by the UUID\n+\t * \n+\t * @param uuid", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY4NzI2OA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363687268", "bodyText": "Are we using the above import?", "author": "dkayiwa", "createdAt": "2020-01-07T10:36:44Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/FhirTaskService.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDM4Mw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720383", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-Donotcommentoutcode", "author": "dkayiwa", "createdAt": "2020-01-07T12:12:38Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDQ2MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720461", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-Donotcommentoutcode", "author": "dkayiwa", "createdAt": "2020-01-07T12:12:52Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//\n+\t//\tprivate static final Task.TaskPriority INITIAL_PRIORITY = Task.TaskPriority.ROUTINE;\n+\t//\n+\t//\tprivate static final Task.TaskIntent INITIAL_INTENT = Task.TaskIntent.ORDER;\n+\t\n+\t@Inject\n+\tprivate FhirTaskDaoImpl dao;\n+\t\n+\tprivate static final String TASK_JSON = \"example-task.json\";\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\t//", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDQ4OA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720488", "bodyText": "https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-Donotcommentoutcode", "author": "dkayiwa", "createdAt": "2020-01-07T12:12:58Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//\n+\t//\tprivate static final Task.TaskPriority INITIAL_PRIORITY = Task.TaskPriority.ROUTINE;\n+\t//\n+\t//\tprivate static final Task.TaskIntent INITIAL_INTENT = Task.TaskIntent.ORDER;\n+\t\n+\t@Inject\n+\tprivate FhirTaskDaoImpl dao;\n+\t\n+\tprivate static final String TASK_JSON = \"example-task.json\";\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\t//\n+\t}\n+\t\n+\t/**\n+\t * @see {@link FhirTaskDaoImpl#saveTask(Task)}\n+\t * @throws Exception\n+\t */\n+\t//\t@Test\n+\t//\tpublic void saveTask_shouldSaveTask() {", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDY5NA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720694", "bodyText": "Could we just remove this empty method?", "author": "dkayiwa", "createdAt": "2020-01-07T12:13:38Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/db/hibernate/HibernateTaskDAOTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.openmrs.module.fhir2.api.db.hibernate;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.openmrs.module.fhir2.Task;\n+import org.openmrs.module.fhir2.api.dao.impl.FhirTaskDaoImpl;\n+import org.openmrs.test.BaseContextSensitiveTest;\n+\n+/**\n+ * Tests the saving of orders as part of the OrderGroup\n+ */\n+public class HibernateTaskDAOTest extends BaseContextSensitiveTest {\n+\t\n+\tprivate static final String TASK_UUID = \"256ccf6d-6b41-455c-9be2-51ff4386ae76\";\n+\t\n+\tprivate static final String WRONG_IDENTIFIER_TYPE_UUID = \"123456-abcdef-123456\";\n+\t\n+\t//\tprivate static final Task.TaskStatus INITIAL_STATUS = Task.TaskStatus.REQUESTED;\n+\t//\n+\t//\tprivate static final Task.TaskPriority INITIAL_PRIORITY = Task.TaskPriority.ROUTINE;\n+\t//\n+\t//\tprivate static final Task.TaskIntent INITIAL_INTENT = Task.TaskIntent.ORDER;\n+\t\n+\t@Inject\n+\tprivate FhirTaskDaoImpl dao;\n+\t\n+\tprivate static final String TASK_JSON = \"example-task.json\";\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\t//\n+\t}\n+\t\n+\t/**\n+\t * @see {@link FhirTaskDaoImpl#saveTask(Task)}\n+\t * @throws Exception\n+\t */\n+\t//\t@Test\n+\t//\tpublic void saveTask_shouldSaveTask() {\n+\t//\t\tfinal Task newTask = new Task(INITIAL_STATUS, \"\", INITIAL_INTENT, INITIAL_PRIORITY);\n+\t//\n+\t//\t\tTask savedTask = dao.saveTask(newTask);\n+\t//\t\tassertNotNull(\"Task is saved.\", savedTask.getTaskId());\n+\t//\t\tassertEquals(INITIAL_STATUS, savedTask.getStatus());\n+\t//\t}\n+\t\n+\t/**\n+\t * @see {@link FhirTaskDaoImpl#getTaskByUUID(Integer)}\n+\t * @throws Exception\n+\t */\n+\t\n+\tpublic void getTaskByUUID_shouldGetTaskByUUID() {\n+\t\t", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyMDc3OQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363720779", "bodyText": "Implement what?", "author": "dkayiwa", "createdAt": "2020-01-07T12:13:56Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImplTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.junit.Assert.assertThat;\n+\n+import org.hl7.fhir.r4.model.Task;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TaskTranslatorImplTest {\n+\t// TODO: Implement!", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MDkxNA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363760914", "bodyText": "I would prefer if we didn't explicitly document or throw a DAOException here. We want to keep the reliance on core as minimal as possible.", "author": "ibacher", "createdAt": "2020-01-07T14:02:34Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/FhirTaskDao.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.openmrs.api.db.DAOException;\n+import org.openmrs.module.fhir2.Task;\n+\n+public interface FhirTaskDao {\n+\n+\tpublic Task saveTask(Task task) throws DAOException;", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MTIwNw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363761207", "bodyText": "I know this is really picky, but we don't need this new line here.", "author": "ibacher", "createdAt": "2020-01-07T14:03:12Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirTaskServiceImpl.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.FhirTaskService;\n+\n+import org.openmrs.module.fhir2.api.dao.FhirTaskDao;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirTaskServiceImpl implements FhirTaskService {\n+\t\n+\t@Inject\n+\tprivate FhirTaskDao dao;\n+\t\n+\t@Inject\n+\tprivate TaskTranslator translator;\n+\t\n+", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MTg1Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363761856", "bodyText": "It would be nice to have some JavaDoc remarks on these two methods. See, e.g., the PatientTranslator.", "author": "ibacher", "createdAt": "2020-01-07T14:04:36Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/TaskTranslator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators;\n+\n+import org.hl7.fhir.r4.model.Task;\n+\n+public interface TaskTranslator extends OpenmrsFhirTranslator<org.openmrs.module.fhir2.Task, org.hl7.fhir.r4.model.Task> {\n+\t\n+\tTask toFhirResource(org.openmrs.module.fhir2.Task openmrsTask);", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MjUzOA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363762538", "bodyText": "This could be a one-liner, i.e., fhirTask.setId(openmrsTask.getUuid());", "author": "ibacher", "createdAt": "2020-01-07T14:06:10Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Enumeration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskTranslatorImpl implements TaskTranslator {\n+\t\n+\t@Override\n+\tpublic Task toFhirResource(org.openmrs.module.fhir2.Task openmrsTask) {\n+\t\tEnumeration<Task.TaskStatus> fhirStatus = new Enumeration(new Task.TaskStatusEnumFactory());\n+\t\tEnumeration<Task.TaskIntent> fhirIntent = new Enumeration(new Task.TaskIntentEnumFactory());\n+\t\t\n+\t\tfhirStatus.setValue(openmrsTask.getStatus());\n+\t\tfhirIntent.setValue(openmrsTask.getIntent());\n+\t\t\n+\t\tTask fhirTask = new Task(fhirStatus, fhirIntent);\n+\t\t\n+\t\tString taskUUID = openmrsTask.getUuid();", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NTQzMA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363765430", "bodyText": "These next few lines don't compile. I think the implementation for this method should be something like this:\nTask task = new Task();\n\nif (openmrsTask != null) {\n\ttask.setId(openmrsTask.getUuid());\n\ttask.setStatus(Task.TaskStatus.valueOf(openmrsTask.getStatus().name()));\n\ttask.setIntent(Task.TaskIntent.valueOf(openmrsTask.getIntent().name()));\n}\n\nreturn task;", "author": "ibacher", "createdAt": "2020-01-07T14:13:00Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Enumeration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskTranslatorImpl implements TaskTranslator {\n+\t\n+\t@Override\n+\tpublic Task toFhirResource(org.openmrs.module.fhir2.Task openmrsTask) {\n+\t\tEnumeration<Task.TaskStatus> fhirStatus = new Enumeration(new Task.TaskStatusEnumFactory());\n+\t\tEnumeration<Task.TaskIntent> fhirIntent = new Enumeration(new Task.TaskIntentEnumFactory());\n+\t\t\n+\t\tfhirStatus.setValue(openmrsTask.getStatus());", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NTU3OA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363765578", "bodyText": "Similar comments apply to this method.", "author": "ibacher", "createdAt": "2020-01-07T14:13:21Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/TaskTranslatorImpl.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Enumeration;\n+import org.hl7.fhir.r4.model.Identifier;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.translators.TaskTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskTranslatorImpl implements TaskTranslator {\n+\t\n+\t@Override\n+\tpublic Task toFhirResource(org.openmrs.module.fhir2.Task openmrsTask) {\n+\t\tEnumeration<Task.TaskStatus> fhirStatus = new Enumeration(new Task.TaskStatusEnumFactory());\n+\t\tEnumeration<Task.TaskIntent> fhirIntent = new Enumeration(new Task.TaskIntentEnumFactory());\n+\t\t\n+\t\tfhirStatus.setValue(openmrsTask.getStatus());\n+\t\tfhirIntent.setValue(openmrsTask.getIntent());\n+\t\t\n+\t\tTask fhirTask = new Task(fhirStatus, fhirIntent);\n+\t\t\n+\t\tString taskUUID = openmrsTask.getUuid();\n+\t\tfhirTask.setId(taskUUID);\n+\t\t\n+\t\treturn fhirTask;\n+\t}\n+\t\n+\t@Override\n+\tpublic org.openmrs.module.fhir2.Task toOpenmrsType(Task fhirTask) {", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NTgxOQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363765819", "bodyText": "Preconditions should be inside the changeSet, before the comment.", "author": "ibacher", "createdAt": "2020-01-07T14:13:54Z", "path": "api/src/main/resources/liquibase.xml", "diffHunk": "@@ -12,5 +12,69 @@\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n- \n+\n+\t<preConditions onFail=\"MARK_RAN\">", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NjE4OA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363766188", "bodyText": "I think this also needs an id field.", "author": "ibacher", "createdAt": "2020-01-07T14:14:50Z", "path": "api/src/test/resources/org/openmrs/module/fhir2/api/dao/impl/FhirTaskDaoImplTest_initial_data.xml", "diffHunk": "@@ -0,0 +1,13 @@\n+<?xml version='1.0' encoding='UTF-8'?>\n+<!--\n+    This Source Code Form is subject to the terms of the Mozilla Public License,\n+    v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+\n+    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+    graphic logo is a trademark of OpenMRS Inc.\n+-->\n+<dataset>\n+\t<fhir_task status=\"REQUESTED\" intent=\"ORDER\" creator=\"1\" date_created=\"2012-01-01 00:00:00.0\" voided=\"false\" uuid=\"d899333c-5bd4-45cc-b1e7-2f9542dbcbf6\"/>", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NjI5Nw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/2#discussion_r363766297", "bodyText": "Unnecessary new line", "author": "ibacher", "createdAt": "2020-01-07T14:15:07Z", "path": "omod/src/main/java/org/openmrs/module/fhir2/providers/TaskFhirResourceProvider.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+  This Source Code Form is subject to the terms of the Mozilla Public License,\n+  v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+  obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+  the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+\n+  Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+  graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.providers;\n+\n+import ca.uhn.fhir.rest.annotation.Create;\n+import ca.uhn.fhir.rest.annotation.IdParam;\n+import ca.uhn.fhir.rest.annotation.Read;\n+import ca.uhn.fhir.rest.annotation.ResourceParam;\n+import ca.uhn.fhir.rest.annotation.Update;\n+import ca.uhn.fhir.rest.server.IResourceProvider;\n+import ca.uhn.fhir.rest.server.exceptions.ResourceNotFoundException;\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.r4.model.IdType;\n+import org.hl7.fhir.r4.model.Task;\n+import org.openmrs.module.fhir2.api.FhirTaskService;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+@Component\n+@Qualifier(\"fhirResources\")\n+@Setter(AccessLevel.PACKAGE)\n+public class TaskFhirResourceProvider implements IResourceProvider {\n+\t\n+\t@Inject\n+\tprivate FhirTaskService service;\n+\t\n+\t@Override\n+\tpublic Class<? extends IBaseResource> getResourceType() {\n+\t\treturn Task.class;\n+\t}\n+\t\n+\t@Read\n+\tpublic Task getTaskById(@IdParam IdType id) {\n+\t\tTask task = service.getTaskByUuid(id.getIdPart());\n+\t\tif (task == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find Task with Id \" + id.getIdPart());\n+\t\t}\n+\t\treturn task;\n+\t}\n+\t\n+\t@Create\n+\tpublic Task createTask(@ResourceParam Task newTask) {\n+\t\t", "originalCommit": "159bd241a8c7c53d5ba0adbae57922ac2995909c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "855bd972ad4dc326a0baa430b4848a58776f3791", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/855bd972ad4dc326a0baa430b4848a58776f3791", "message": "Task Resource implementation work for FM2-2", "committedDate": "2020-01-08T14:49:32Z", "type": "commit"}, {"oid": "855bd972ad4dc326a0baa430b4848a58776f3791", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/855bd972ad4dc326a0baa430b4848a58776f3791", "message": "Task Resource implementation work for FM2-2", "committedDate": "2020-01-08T14:49:32Z", "type": "forcePushed"}, {"oid": "62581caee30dafd98f55e9a12e4c8276aa987cc1", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/62581caee30dafd98f55e9a12e4c8276aa987cc1", "message": "Merge branch 'master' into FM2-2", "committedDate": "2020-01-08T17:47:31Z", "type": "commit"}, {"oid": "fab0a44573d35791e832424d29e5f851bb885b6c", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fab0a44573d35791e832424d29e5f851bb885b6c", "message": "Merge branch 'master' into FM2-2", "committedDate": "2020-01-08T18:36:45Z", "type": "commit"}]}