{"pr_number": 271, "pr_title": "Expose conformance statement without authentication", "pr_createdAt": "2020-08-04T20:38:11Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/271", "timeline": [{"oid": "66cbb3bfbc01cc0e557d5c05cbd9203801394cc1", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/66cbb3bfbc01cc0e557d5c05cbd9203801394cc1", "message": "exclude metadata and well-known endpoints for authentication filter", "committedDate": "2020-08-04T20:34:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1NTMyMw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/271#discussion_r465755323", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (!(httpRequest.getRequestURI().contains(\"/.well-known\")\n          \n          \n            \n            \t\t\t        || httpRequest.getRequestURI().endsWith(\"/metadata\"))) {\n          \n          \n            \n            \t\t\tif (!(httpRequest.getRequestURI().contains(\"/.well-known\") || \n          \n          \n            \n            \t\t\t         httpRequest.getRequestURI().endsWith(\"/metadata\"))) {", "author": "ibacher", "createdAt": "2020-08-05T14:10:43Z", "path": "omod/src/main/java/org/openmrs/module/fhir2/web/filter/AuthenticationFilter.java", "diffHunk": "@@ -40,27 +40,29 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha\n \t\t\tif (httpRequest.getRequestedSessionId() != null && !httpRequest.isRequestedSessionIdValid()) {\n \t\t\t\tContext.logout();\n \t\t\t}\n-\t\t\t\n-\t\t\tif (!Context.isAuthenticated()) {\n-\t\t\t\tString basicAuth = httpRequest.getHeader(\"Authorization\");\n-\t\t\t\tif (!StringUtils.isBlank(basicAuth) && basicAuth.startsWith(\"Basic\")) {\n-\t\t\t\t\t// this is \"Basic ${base64encode(username + \":\" + password)}\"\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\tbasicAuth = basicAuth.substring(6); // remove the leading \"Basic \"\n-\t\t\t\t\t\tString decoded = new String(Base64.decodeBase64(basicAuth), StandardCharsets.UTF_8);\n-\t\t\t\t\t\tString[] userAndPass = decoded.split(\":\");\n-\t\t\t\t\t\tContext.authenticate(userAndPass[0], userAndPass[1]);\n-\t\t\t\t\t}\n-\t\t\t\t\tcatch (Exception e) {\n+\t\t\tif (!(httpRequest.getRequestURI().contains(\"/.well-known\")\n+\t\t\t        || httpRequest.getRequestURI().endsWith(\"/metadata\"))) {", "originalCommit": "66cbb3bfbc01cc0e557d5c05cbd9203801394cc1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}