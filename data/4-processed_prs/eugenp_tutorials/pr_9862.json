{"pr_number": 9862, "pr_title": "Adding source code for article tracked under BAEL-4109.", "pr_createdAt": "2020-08-13T06:29:23Z", "pr_url": "https://github.com/eugenp/tutorials/pull/9862", "timeline": [{"oid": "b05a81a9d836ac369e5376347e22634e1d1afebc", "url": "https://github.com/eugenp/tutorials/commit/b05a81a9d836ac369e5376347e22634e1d1afebc", "message": "Adding source code for article tracked under BAEL-4109.", "committedDate": "2020-08-13T06:26:49Z", "type": "commit"}, {"oid": "99ddab1f5e387802a777347428296b57b3814860", "url": "https://github.com/eugenp/tutorials/commit/99ddab1f5e387802a777347428296b57b3814860", "message": "Merge branch 'master' into webflux-threads", "committedDate": "2020-08-13T10:56:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzMzM1Mw==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470033353", "bodyText": "thareds -> theads", "author": "bfontana", "createdAt": "2020-08-13T15:22:04Z", "path": "spring-webflux-threads/src/main/java/com/baeldung/webflux/Controller.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package com.baeldung.webflux;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.serialization.IntegerDeserializer;\n+import org.apache.kafka.common.serialization.IntegerSerializer;\n+import org.apache.kafka.common.serialization.StringDeserializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.reactive.function.client.WebClient;\n+\n+import io.reactivex.Observable;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import reactor.core.scheduler.Scheduler;\n+import reactor.core.scheduler.Schedulers;\n+import reactor.kafka.receiver.KafkaReceiver;\n+import reactor.kafka.receiver.ReceiverOptions;\n+import reactor.kafka.receiver.ReceiverRecord;\n+import reactor.kafka.sender.KafkaSender;\n+import reactor.kafka.sender.SenderOptions;\n+import reactor.kafka.sender.SenderRecord;\n+\n+@RestController\n+@RequestMapping(\"/\")\n+public class Controller {\n+\n+    @Autowired\n+    private PersonRepository personRepository;\n+\n+    private Scheduler scheduler = Schedulers.newBoundedElastic(5, 10, \"MyThreadGroup\");\n+\n+    private Logger logger = LoggerFactory.getLogger(Controller.class);\n+\n+    @GetMapping(\"/threads/webflux\")\n+    public Flux<String> getThreadsWebflux() {\n+        return Flux.fromIterable(getThreads());\n+    }\n+\n+    @GetMapping(\"/threads/webclient\")\n+    public Flux<String> getThreadsWebClient() {\n+        WebClient.create(\"http://localhost:8080/index\")\n+            .get()\n+            .retrieve()\n+            .bodyToMono(String.class)\n+            .subscribeOn(scheduler)\n+            .publishOn(scheduler)\n+            .doOnNext(s -> logger.info(\"Response: {}\", s))\n+            .subscribe();\n+        return Flux.fromIterable(getThreads());\n+    }\n+\n+    @GetMapping(\"/threads/rxjava\")\n+    public Observable<String> getIndexRxJava() {\n+        Observable.fromIterable(Arrays.asList(\"Hello\", \"World\"))\n+            .map(s -> s.toUpperCase())\n+            .observeOn(io.reactivex.schedulers.Schedulers.trampoline())\n+            .doOnNext(s -> logger.info(\"String: {}\", s))\n+            .subscribe();\n+        return Observable.fromIterable(getThreads());\n+    }\n+\n+    @GetMapping(\"/threads/mongodb\")\n+    public Flux<String> getIndexMongo() {\n+        personRepository.findAll()\n+            .doOnNext(p -> logger.info(\"Person: {}\", p))\n+            .subscribe();\n+        return Flux.fromIterable(getThreads());\n+    }\n+\n+    @GetMapping(\"/thareds/reactor-kafka\")", "originalCommit": "99ddab1f5e387802a777347428296b57b3814860", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MDU0Mg==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470450542", "bodyText": "Corrected", "author": "kcacademic", "createdAt": "2020-08-14T07:13:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzMzM1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzMzk5MQ==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470033991", "bodyText": "Delete commented out lines. The same happens below", "author": "bfontana", "createdAt": "2020-08-13T15:22:57Z", "path": "spring-webflux-threads/pom.xml", "diffHunk": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>com.baeldung.spring</groupId>\n+    <artifactId>spring-webflux-threads</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <name>spring-webflux-threads</name>\n+    <packaging>jar</packaging>\n+    <description>Spring WebFlux AMQP Sample</description>\n+\n+    <parent>\n+        <groupId>com.baeldung</groupId>\n+        <artifactId>parent-boot-2</artifactId>\n+        <version>0.0.1-SNAPSHOT</version>\n+        <relativePath>../parent-boot-2</relativePath>\n+    </parent>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-webflux</artifactId>\n+            <!--", "originalCommit": "99ddab1f5e387802a777347428296b57b3814860", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MDQ4MQ==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470450481", "bodyText": "The commented lines are actually a way to suggest how to change the default runtime.", "author": "kcacademic", "createdAt": "2020-08-14T07:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzMzk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MTY2NA==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470451664", "bodyText": "I have added comments in the pom to indicate why the lines are commented.", "author": "kcacademic", "createdAt": "2020-08-14T07:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzMzk5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzODEwMA==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470038100", "bodyText": "Spring WebFlux Threads Sample", "author": "bfontana", "createdAt": "2020-08-13T15:29:00Z", "path": "spring-webflux-threads/pom.xml", "diffHunk": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>com.baeldung.spring</groupId>\n+    <artifactId>spring-webflux-threads</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+    <name>spring-webflux-threads</name>\n+    <packaging>jar</packaging>\n+    <description>Spring WebFlux AMQP Sample</description>", "originalCommit": "99ddab1f5e387802a777347428296b57b3814860", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MDMxMg==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470450312", "bodyText": "Corrected", "author": "kcacademic", "createdAt": "2020-08-14T07:12:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzODEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MDY1MA==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470040650", "bodyText": "Can we delete this empty file or it's necessary?", "author": "bfontana", "createdAt": "2020-08-13T15:32:50Z", "path": "spring-webflux-threads/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1,7 @@\n+", "originalCommit": "99ddab1f5e387802a777347428296b57b3814860", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MDEzMQ==", "url": "https://github.com/eugenp/tutorials/pull/9862#discussion_r470450131", "bodyText": "Yes, we can, this is a default boot properties class.", "author": "kcacademic", "createdAt": "2020-08-14T07:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MDY1MA=="}], "type": "inlineReview"}, {"oid": "bad4b717d7528579799cbf44a174da42dad66307", "url": "https://github.com/eugenp/tutorials/commit/bad4b717d7528579799cbf44a174da42dad66307", "message": "Incorporated review comments on the pull request.", "committedDate": "2020-08-14T07:16:33Z", "type": "commit"}, {"oid": "e57306cb8b6dd4c9f37cca801d0467168ece6053", "url": "https://github.com/eugenp/tutorials/commit/e57306cb8b6dd4c9f37cca801d0467168ece6053", "message": "Added comments in README regarding Mongo and Kafka processes.", "committedDate": "2020-08-14T07:19:30Z", "type": "commit"}, {"oid": "6732a1aa3077c88b6e7f7e426140d74210925f06", "url": "https://github.com/eugenp/tutorials/commit/6732a1aa3077c88b6e7f7e426140d74210925f06", "message": "Update README.md", "committedDate": "2020-08-14T14:47:02Z", "type": "commit"}]}