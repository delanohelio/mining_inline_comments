{"pr_number": 10139, "pr_title": "[BAEL-4556] How to Check if a Java Program Is Running in 64-Bit JVM or 32-Bit JVM", "pr_createdAt": "2020-10-07T08:47:10Z", "pr_url": "https://github.com/eugenp/tutorials/pull/10139", "timeline": [{"oid": "a17242d2c1fe27395245d44b9a2a8eb1ad5a2636", "url": "https://github.com/eugenp/tutorials/commit/a17242d2c1fe27395245d44b9a2a8eb1ad5a2636", "message": "How to Check if a Java Program Is Running in 64-Bit JVM or 32-Bit JVM\n\nHow to Check if a Java Program Is Running in 64-Bit JVM or 32-Bit JVM", "committedDate": "2020-10-07T08:39:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY0NjAwMQ==", "url": "https://github.com/eugenp/tutorials/pull/10139#discussion_r503646001", "bodyText": "Let's be a bit more specific (no pun intended) with the package name, e.g. com.baeldung.jvmbitversion", "author": "KevinGilmore", "createdAt": "2020-10-13T03:29:03Z", "path": "java-native/src/main/java/com/baeldung/jvm/JVMBitVersion.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.baeldung.jvm;", "originalCommit": "a17242d2c1fe27395245d44b9a2a8eb1ad5a2636", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY0NzE5Ng==", "url": "https://github.com/eugenp/tutorials/pull/10139#discussion_r503647196", "bodyText": "Initializing a static variable in a @Before-annotated method is not considered a good practice because unit tests can be run in parallel. In this case, it's not a big deal since the class is immutable, but I'd suggest either changing the @before to @BeforeAll or simply making the jvmVersion variable an instance variable (not static).", "author": "KevinGilmore", "createdAt": "2020-10-13T03:33:49Z", "path": "java-native/src/test/java/com/baeldung/jvm/JVMBitVersionUnitTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.baeldung.jvm;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import com.sun.jna.Platform;\n+\n+public class JVMBitVersionUnitTest {\n+\n+    private static JVMBitVersion jvmVersion;\n+\n+    @Before\n+    public void setup() {\n+        jvmVersion = new JVMBitVersion();\n+    }", "originalCommit": "a17242d2c1fe27395245d44b9a2a8eb1ad5a2636", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY0NzU0Mw==", "url": "https://github.com/eugenp/tutorials/pull/10139#discussion_r503647543", "bodyText": "Use the givenX_whenY_thenZ naming convention for the test methods (the givenX part is optional).", "author": "KevinGilmore", "createdAt": "2020-10-13T03:35:11Z", "path": "java-native/src/test/java/com/baeldung/jvm/JVMBitVersionUnitTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.baeldung.jvm;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import com.sun.jna.Platform;\n+\n+public class JVMBitVersionUnitTest {\n+\n+    private static JVMBitVersion jvmVersion;\n+\n+    @Before\n+    public void setup() {\n+        jvmVersion = new JVMBitVersion();\n+    }\n+\n+    @Test\n+    public void testGetUsingSystemClass() {", "originalCommit": "a17242d2c1fe27395245d44b9a2a8eb1ad5a2636", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY0NzgwNQ==", "url": "https://github.com/eugenp/tutorials/pull/10139#discussion_r503647805", "bodyText": "Change this package as well, so that it's the same as that of the main class.", "author": "KevinGilmore", "createdAt": "2020-10-13T03:36:19Z", "path": "java-native/src/test/java/com/baeldung/jvm/JVMBitVersionUnitTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.baeldung.jvm;", "originalCommit": "a17242d2c1fe27395245d44b9a2a8eb1ad5a2636", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72cba533c486b6cfae9f5a4f4c1f1564608138b0", "url": "https://github.com/eugenp/tutorials/commit/72cba533c486b6cfae9f5a4f4c1f1564608138b0", "message": "\t baeldung-articlesBAEL-4556 How can I tell if I'm running in 64-bit JVM or 32-bit JVM\n\nChanges as per review comments .\n1.Package Name change\n2.Variable change from static to instance\n3.Test Method name change", "committedDate": "2020-10-13T13:15:13Z", "type": "commit"}, {"oid": "ff432e98c72751320be3716c5dfd63a617701730", "url": "https://github.com/eugenp/tutorials/commit/ff432e98c72751320be3716c5dfd63a617701730", "message": "Merge branch 'master' of https://github.com/eugenp/tutorials into upstream", "committedDate": "2020-10-13T13:15:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM4MDUwMQ==", "url": "https://github.com/eugenp/tutorials/pull/10139#discussion_r504380501", "bodyText": "let's remove the blank line before this closing brace as per guidelines", "author": "KevinGilmore", "createdAt": "2020-10-14T03:34:50Z", "path": "java-native/src/test/java/com/baeldung/jvmbitversion/JVMBitVersionUnitTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.baeldung.jvmbitversion;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import com.baeldung.jvmbitversion.JVMBitVersion;\n+import com.sun.jna.Platform;\n+\n+public class JVMBitVersionUnitTest {\n+\n+    private JVMBitVersion jvmVersion;\n+\n+    @Before\n+    public void setup() {\n+        jvmVersion = new JVMBitVersion();\n+    }\n+\n+    @Test\n+    public void whenUsingSystemClass_thenOutputIsAsExpected() {\n+        if (System.getProperty(\"sun.arch.data.model\") == \"64\") {\n+            assertEquals(\"64-bit\", jvmVersion.getUsingSystemClass());\n+        } else if (System.getProperty(\"sun.arch.data.model\") == \"32\") {\n+            assertEquals(\"32-bit\", jvmVersion.getUsingSystemClass());\n+        }\n+", "originalCommit": "ff432e98c72751320be3716c5dfd63a617701730", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ff2b4947613f527f9f42565d8d991246d89a717", "url": "https://github.com/eugenp/tutorials/commit/6ff2b4947613f527f9f42565d8d991246d89a717", "message": "Update JVMBitVersionUnitTest.java\n\n[BAEL-4556] How to Check if a Java Program Is Running in 64-Bit JVM or 32-Bit JVM", "committedDate": "2020-10-14T06:33:23Z", "type": "commit"}, {"oid": "98763adfc7d801d384b6b6afb2ad3fd0c87fc74a", "url": "https://github.com/eugenp/tutorials/commit/98763adfc7d801d384b6b6afb2ad3fd0c87fc74a", "message": "Merge branch 'master' of https://github.com/eugenp/tutorials into upstream", "committedDate": "2020-10-14T06:33:29Z", "type": "commit"}, {"oid": "1921900ea299c06139768884272d430aa4fc57dc", "url": "https://github.com/eugenp/tutorials/commit/1921900ea299c06139768884272d430aa4fc57dc", "message": "[BAEL-4556]Added code and Junits for JVMBitVersion", "committedDate": "2020-10-22T05:39:19Z", "type": "commit"}, {"oid": "924b59c37ea8ec33d74dd245505749c34de816e8", "url": "https://github.com/eugenp/tutorials/commit/924b59c37ea8ec33d74dd245505749c34de816e8", "message": "[BAEL-4556]Removed code and Junits for os.arch property to check JVMBitVersion", "committedDate": "2020-10-24T11:03:10Z", "type": "commit"}]}