{"pr_number": 719, "pr_title": "Improvements for the query explorer", "pr_createdAt": "2020-04-10T10:20:51Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/719", "timeline": [{"oid": "5a2dbcf5aa757d84ea1a774fd8a2f1868fdcebb9", "url": "https://github.com/scireum/sirius-biz/commit/5a2dbcf5aa757d84ea1a774fd8a2f1868fdcebb9", "message": "Extends the query tool to provide a tabular output.\n\n- Properties are now properly sorted and formatted\n- References to other entities are shown has hyperlinks\n- SQL entities are now treated equally\n- A list of all known entity types is output if no type is selected", "committedDate": "2020-04-10T10:17:40Z", "type": "commit"}, {"oid": "dc83bfe416a87c89dadf50e6d74246e5ad4c47a9", "url": "https://github.com/scireum/sirius-biz/commit/dc83bfe416a87c89dadf50e6d74246e5ad4c47a9", "message": "Fixes a typo.\n\nFixes: SIRI-190", "committedDate": "2020-04-10T10:18:38Z", "type": "commit"}, {"oid": "62a2d0c927ef24a3484b58eea81ea94811feefa6", "url": "https://github.com/scireum/sirius-biz/commit/62a2d0c927ef24a3484b58eea81ea94811feefa6", "message": "Prevents logging an invalid administrator query into the syslog.", "committedDate": "2020-04-10T10:19:06Z", "type": "commit"}, {"oid": "72dbf491052330aa92f00dea51f5c882acb65660", "url": "https://github.com/scireum/sirius-biz/commit/72dbf491052330aa92f00dea51f5c882acb65660", "message": "Marks the virtual directories as properly readonly.\n\nOtherwise we attempt to create files there (which is not possible).", "committedDate": "2020-04-10T10:19:41Z", "type": "commit"}, {"oid": "3ea068155006b8a66151e81832a1da3a08ac1954", "url": "https://github.com/scireum/sirius-biz/commit/3ea068155006b8a66151e81832a1da3a08ac1954", "message": "Merge remote-tracking branch 'origin/master' into aha/object-explorer", "committedDate": "2020-04-15T11:25:20Z", "type": "commit"}, {"oid": "0eaed2920cc3e309b14f77e857956b23f06e7198", "url": "https://github.com/scireum/sirius-biz/commit/0eaed2920cc3e309b14f77e857956b23f06e7198", "message": "Removes a redundant method (identical to parent).", "committedDate": "2020-04-15T11:29:03Z", "type": "commit"}, {"oid": "0cffe036ff065328001717720354e65e753e7b88", "url": "https://github.com/scireum/sirius-biz/commit/0cffe036ff065328001717720354e65e753e7b88", "message": "Forces an update of all maven dependencies without caching.", "committedDate": "2020-04-15T11:30:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNTcxNQ==", "url": "https://github.com/scireum/sirius-biz/pull/719#discussion_r410205715", "bodyText": "What does DDS means? I know the term DDL (Data Definition Language).", "author": "idlira", "createdAt": "2020-04-17T13:00:28Z", "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "diffHunk": "@@ -89,33 +89,39 @@ public void sql(WebContext ctx) {\n     public void executeQuery(WebContext ctx, JSONStructuredOutput out) throws SQLException {\n         Watch w = Watch.start();\n \n-        String database = ctx.get(\"db\").asString(defaultDatabase);\n-        Database db = determineDatabase(database);\n-        String sqlStatement = ctx.get(\"query\").asString();\n-        SQLQuery qry = db.createQuery(sqlStatement);\n-\n-        if (isDDSStatement(sqlStatement)) {\n-            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n-            // only permit them against our system database.\n-            if (!Strings.areEqual(database, defaultDatabase)) {\n-                throw Exceptions.createHandled()\n-                                .withSystemErrorMessage(\n-                                        \"Cannot execute a DDS query against this database. This can be only done for '%s'\",\n-                                        database)\n-                                .handle();\n-            }\n-\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else if (isModifyStatement(sqlStatement)) {\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else {\n-            Monoflop monoflop = Monoflop.create();\n-            qry.iterateAll(r -> outputRow(out, monoflop, r), new Limit(0, ctx.get(\"limit\").asInt(DEFAULT_LIMIT)));\n-            if (monoflop.successiveCall()) {\n-                out.endArray();\n+        try {\n+            String database = ctx.get(\"db\").asString(defaultDatabase);\n+            Database db = determineDatabase(database);\n+            String sqlStatement = ctx.get(\"query\").asString();\n+            SQLQuery qry = db.createQuery(sqlStatement);\n+\n+            if (isDDSStatement(sqlStatement)) {\n+                // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and", "originalCommit": "0cffe036ff065328001717720354e65e753e7b88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzNjYxNA==", "url": "https://github.com/scireum/sirius-biz/pull/719#discussion_r411336614", "bodyText": "Rename DDS --> DDL?", "author": "bwiedmann", "createdAt": "2020-04-20T12:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNTcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwMTQ0Mg==", "url": "https://github.com/scireum/sirius-biz/pull/719#discussion_r417101442", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n          \n          \n            \n                            // To prevent accidential damage, we try to filter DDL queries (modifying the database structure) and", "author": "andyHa", "createdAt": "2020-04-29T06:53:39Z", "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "diffHunk": "@@ -89,33 +89,39 @@ public void sql(WebContext ctx) {\n     public void executeQuery(WebContext ctx, JSONStructuredOutput out) throws SQLException {\n         Watch w = Watch.start();\n \n-        String database = ctx.get(\"db\").asString(defaultDatabase);\n-        Database db = determineDatabase(database);\n-        String sqlStatement = ctx.get(\"query\").asString();\n-        SQLQuery qry = db.createQuery(sqlStatement);\n-\n-        if (isDDSStatement(sqlStatement)) {\n-            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n-            // only permit them against our system database.\n-            if (!Strings.areEqual(database, defaultDatabase)) {\n-                throw Exceptions.createHandled()\n-                                .withSystemErrorMessage(\n-                                        \"Cannot execute a DDS query against this database. This can be only done for '%s'\",\n-                                        database)\n-                                .handle();\n-            }\n-\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else if (isModifyStatement(sqlStatement)) {\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else {\n-            Monoflop monoflop = Monoflop.create();\n-            qry.iterateAll(r -> outputRow(out, monoflop, r), new Limit(0, ctx.get(\"limit\").asInt(DEFAULT_LIMIT)));\n-            if (monoflop.successiveCall()) {\n-                out.endArray();\n+        try {\n+            String database = ctx.get(\"db\").asString(defaultDatabase);\n+            Database db = determineDatabase(database);\n+            String sqlStatement = ctx.get(\"query\").asString();\n+            SQLQuery qry = db.createQuery(sqlStatement);\n+\n+            if (isDDSStatement(sqlStatement)) {\n+                // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and", "originalCommit": "0cffe036ff065328001717720354e65e753e7b88", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d9b8e48a9e66737e5d0481125abd0c22969ad92e", "url": "https://github.com/scireum/sirius-biz/commit/d9b8e48a9e66737e5d0481125abd0c22969ad92e", "message": "Update src/main/java/sirius/biz/jdbc/DatabaseController.java", "committedDate": "2020-04-29T06:53:43Z", "type": "commit"}]}