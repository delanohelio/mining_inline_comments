{"pr_number": 812, "pr_title": "SE-9748: Add taglib tag d:rssFeed to include rss feeds ", "pr_createdAt": "2020-07-06T09:09:55Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/812", "timeline": [{"oid": "cd67061c80fff1f9cf39b65a90fd70f71a3ddbb2", "url": "https://github.com/scireum/sirius-biz/commit/cd67061c80fff1f9cf39b65a90fd70f71a3ddbb2", "message": "SE-9748: Add taglib tag d:rssFeed to include rss feeds\nUpdated pom.xml: rometools needed\n\n- Fixes: SE-9748", "committedDate": "2020-07-06T09:07:15Z", "type": "commit"}, {"oid": "3ba24d941a20af983ed32d232661a2b79996b768", "url": "https://github.com/scireum/sirius-biz/commit/3ba24d941a20af983ed32d232661a2b79996b768", "message": "SE-9748: Added rss feed helper class and tag template\n\n- Fixes: SE-9748", "committedDate": "2020-07-06T09:08:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NjMzMQ==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450096331", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Helps to obtain an <tt>SyndFeed</tt> object\n          \n          \n            \n             * Helps to obtain an {@link SyndFeed} object.", "author": "idlira", "createdAt": "2020-07-06T09:25:16Z", "path": "src/main/java/sirius/biz/web/RssFeedHelper.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.web;\n+\n+import com.rometools.rome.feed.synd.SyndFeed;\n+import com.rometools.rome.io.FeedException;\n+import com.rometools.rome.io.SyndFeedInput;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.xml.Outcall;\n+import sirius.web.security.HelperFactory;\n+import sirius.web.security.ScopeInfo;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.net.URL;\n+\n+/**\n+ * Helps to obtain an <tt>SyndFeed</tt> object", "originalCommit": "3ba24d941a20af983ed32d232661a2b79996b768", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0Mjc3Mg==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450242772", "bodyText": "Ist korrigiert, danke.", "author": "marvinwoop", "createdAt": "2020-07-06T14:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NjMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NzI3MQ==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450097271", "bodyText": "New line missing at end of file.\nCheck your Editor, General, ensure end of line on save setting.", "author": "idlira", "createdAt": "2020-07-06T09:26:53Z", "path": "src/main/resources/default/taglib/d/rssFeed.html.pasta", "diffHunk": "@@ -0,0 +1,43 @@\n+<i:arg type=\"String\" name=\"url\" description=\"the full URL to the RSS feed\" />\n+<i:arg type=\"int\" name=\"span\" default=\"2\" description=\"the span for md-devices\" />\n+<i:arg type=\"int\" name=\"smallSpan\" default=\"12\" description=\"the span for xs-devices\" />\n+<i:arg type=\"String\" name=\"class\" default=\"rssFeed\" description=\"the attribute which the class name will be extended with\" />\n+<i:arg type=\"boolean\" name=\"showDescription\" default=\"true\" description=\"determines if the RSS feed description will be rendered\" />\n+<i:arg type=\"boolean\" name=\"showHeaderImage\" default=\"true\" description=\"determines if the RSS header image will be rendered\" />\n+<i:arg type=\"boolean\" name=\"showHeader\" default=\"true\" description=\"determines if the RSS feed will show the header information in general, such as the RSS feed title and image\" />\n+<i:arg type=\"boolean\" name=\"useFeedTitle\" default=\"true\" description=\"determines if the RSS feed title will be used or ignored, headerTitleExtension will be displayed though\" />\n+<i:arg type=\"String\" name=\"headerTitleExtension\" default=\"\" description=\"extends the RSS feed title by the given string\" />\n+\n+<i:pragma\n+        name=\"description\"\n+        value=\"Provides an template to integrate RSS feeds. WARNING - USE WITH CAUTION: This tag does integrate and render external resources which may potentially contain malicious content! Please always ensure that the source from which the contents are fetched is trustworthy!\" />\n+\n+<i:local name=\"syndFeedObject\" value=\"@user.getHelper(sirius.biz.web.RssFeedHelper.class).processFeed(url)\" />\n+\n+<div class=\"@class col-md-@span col-xs-@smallSpan\">\n+    <i:if test=\"@showHeader\">\n+        <div class=\"row\">\n+            <i:if test=\"@showHeaderImage\">\n+                <img src=\"@syndFeedObject.getImage().getUrl()\" />\n+            </i:if>\n+            <h1>\n+                <i:if test=\"@useFeedTitle\">\n+                    <i:raw>@syndFeedObject.getTitle()</i:raw>\n+                </i:if>\n+                @headerTitleExtension\n+            </h1>\n+        </div>\n+    </i:if>\n+\n+    <i:for type=\"com.rometools.rome.feed.synd.SyndEntry\" var=\"entry\" items=\"@syndFeedObject.getEntries()\">\n+        <div class=\"row\">\n+            <hr />\n+            <i:raw><h2>@entry.getTitle()</h2></i:raw>\n+            <span class=\"date\">@formatDateTimeWithoutSeconds(entry.getPublishedDate())</span>\n+\n+            <i:if test=\"showDescription\">\n+                <i:raw><p>@entry.getDescription().getValue()</p></i:raw>\n+            </i:if>\n+        </div>\n+    </i:for>\n+</div>", "originalCommit": "3ba24d941a20af983ed32d232661a2b79996b768", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b3625d362a3caa1883190edd57924994724a6e6", "url": "https://github.com/scireum/sirius-biz/commit/7b3625d362a3caa1883190edd57924994724a6e6", "message": "SE-9748: Fixed suggested JavaDoc and new line at end of file\n\n- Fixes: SE-9748", "committedDate": "2020-07-06T14:02:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2ODYwNQ==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450268605", "bodyText": "remove hint to shop as it has nothing to do with this helper class?", "author": "bwiedmann", "createdAt": "2020-07-06T14:40:08Z", "path": "src/main/java/sirius/biz/web/RssFeedHelper.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.web;\n+\n+import com.rometools.rome.feed.synd.SyndFeed;\n+import com.rometools.rome.io.FeedException;\n+import com.rometools.rome.io.SyndFeedInput;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.xml.Outcall;\n+import sirius.web.security.HelperFactory;\n+import sirius.web.security.ScopeInfo;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.net.URL;\n+\n+/**\n+ * Helps to obtain an {@link SyndFeed} object\n+ */\n+public class RssFeedHelper {\n+\n+    private static final String RSS_FEED_HELPER = \"RSSFeedHelper\";\n+\n+    /**\n+     * Generates a helper instance per shop.", "originalCommit": "7b3625d362a3caa1883190edd57924994724a6e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMjQ0Mg==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450632442", "bodyText": "done, thanks.", "author": "marvinwoop", "createdAt": "2020-07-07T06:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2ODYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwOTI3NA==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450309274", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    value=\"Provides an template to integrate RSS feeds. WARNING - USE WITH CAUTION: This tag does integrate and render external resources which may potentially contain malicious content! Please always ensure that the source from which the contents are fetched is trustworthy!\" />\n          \n          \n            \n                    value=\"Provides a template to integrate RSS feeds. WARNING - USE WITH CAUTION: This tag does integrate and render external resources which may potentially contain malicious content! Please always ensure that the source from which the contents are fetched is trustworthy!\" />", "author": "mkeckmkeck", "createdAt": "2020-07-06T15:39:19Z", "path": "src/main/resources/default/taglib/d/rssFeed.html.pasta", "diffHunk": "@@ -0,0 +1,43 @@\n+<i:arg type=\"String\" name=\"url\" description=\"the full URL to the RSS feed\" />\n+<i:arg type=\"int\" name=\"span\" default=\"2\" description=\"the span for md-devices\" />\n+<i:arg type=\"int\" name=\"smallSpan\" default=\"12\" description=\"the span for xs-devices\" />\n+<i:arg type=\"String\" name=\"class\" default=\"rssFeed\" description=\"the attribute which the class name will be extended with\" />\n+<i:arg type=\"boolean\" name=\"showDescription\" default=\"true\" description=\"determines if the RSS feed description will be rendered\" />\n+<i:arg type=\"boolean\" name=\"showHeaderImage\" default=\"true\" description=\"determines if the RSS header image will be rendered\" />\n+<i:arg type=\"boolean\" name=\"showHeader\" default=\"true\" description=\"determines if the RSS feed will show the header information in general, such as the RSS feed title and image\" />\n+<i:arg type=\"boolean\" name=\"useFeedTitle\" default=\"true\" description=\"determines if the RSS feed title will be used or ignored, headerTitleExtension will be displayed though\" />\n+<i:arg type=\"String\" name=\"headerTitleExtension\" default=\"\" description=\"extends the RSS feed title by the given string\" />\n+\n+<i:pragma\n+        name=\"description\"\n+        value=\"Provides an template to integrate RSS feeds. WARNING - USE WITH CAUTION: This tag does integrate and render external resources which may potentially contain malicious content! Please always ensure that the source from which the contents are fetched is trustworthy!\" />", "originalCommit": "7b3625d362a3caa1883190edd57924994724a6e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMzM2Ng==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450633366", "bodyText": "done.", "author": "marvinwoop", "createdAt": "2020-07-07T06:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwOTI3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxMTQyMw==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450311423", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Helps to obtain an {@link SyndFeed} object\n          \n          \n            \n             * Helps to read RSS feeds and provides access to their content wrapped into {@link SyndFeed} objects.", "author": "mkeckmkeck", "createdAt": "2020-07-06T15:42:36Z", "path": "src/main/java/sirius/biz/web/RssFeedHelper.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.web;\n+\n+import com.rometools.rome.feed.synd.SyndFeed;\n+import com.rometools.rome.io.FeedException;\n+import com.rometools.rome.io.SyndFeedInput;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.xml.Outcall;\n+import sirius.web.security.HelperFactory;\n+import sirius.web.security.ScopeInfo;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.net.URL;\n+\n+/**\n+ * Helps to obtain an {@link SyndFeed} object", "originalCommit": "7b3625d362a3caa1883190edd57924994724a6e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzMzM5OQ==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450633399", "bodyText": "done.", "author": "marvinwoop", "createdAt": "2020-07-07T06:16:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxMTQyMw=="}], "type": "inlineReview"}, {"oid": "d8280206e086f1d8572aa4a6a37fa0995bcfb687", "url": "https://github.com/scireum/sirius-biz/commit/d8280206e086f1d8572aa4a6a37fa0995bcfb687", "message": "SE-9748: Fixed typos and pr comments\n\n- Fixes: SE-9748", "committedDate": "2020-07-07T06:13:22Z", "type": "commit"}, {"oid": "c41a8cf2e26f1a6f2c6baaa86c54f4cce0e6e832", "url": "https://github.com/scireum/sirius-biz/commit/c41a8cf2e26f1a6f2c6baaa86c54f4cce0e6e832", "message": "SE-9748: changed JavaDoc corresponding to pr comments\n\n- Fixes: SE-9748", "committedDate": "2020-07-07T06:15:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY5MjQyMA==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450692420", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Retrieve <tt>SyndFeed</tt> of the given URL\n          \n          \n            \n                 * Retrieves a <tt>SyndFeed</tt> of the given URL", "author": "bwiedmann", "createdAt": "2020-07-07T08:23:50Z", "path": "src/main/java/sirius/biz/web/RssFeedHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.web;\n+\n+import com.rometools.rome.feed.synd.SyndFeed;\n+import com.rometools.rome.io.FeedException;\n+import com.rometools.rome.io.SyndFeedInput;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.xml.Outcall;\n+import sirius.web.security.HelperFactory;\n+import sirius.web.security.ScopeInfo;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import java.net.URL;\n+\n+/**\n+ * Helps to read RSS feeds and provides access to their content wrapped into {@link SyndFeed} objects\n+ */\n+public class RssFeedHelper {\n+\n+    private static final String RSS_FEED_HELPER = \"RSSFeedHelper\";\n+\n+    @Register\n+    public static class RssFeedHelperFactory implements HelperFactory<RssFeedHelper> {\n+\n+        @Override\n+        public Class<RssFeedHelper> getHelperType() {\n+            return RssFeedHelper.class;\n+        }\n+\n+        @Nonnull\n+        @Override\n+        public String getName() {\n+            return RSS_FEED_HELPER;\n+        }\n+\n+        @Override\n+        public RssFeedHelper make(ScopeInfo scopeInfo) {\n+            return new RssFeedHelper();\n+        }\n+    }\n+\n+    /**\n+     * Retrieve <tt>SyndFeed</tt> of the given URL", "originalCommit": "c41a8cf2e26f1a6f2c6baaa86c54f4cce0e6e832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwMTM0Nw==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r450801347", "bodyText": "Done.", "author": "marvinwoop", "createdAt": "2020-07-07T11:41:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY5MjQyMA=="}], "type": "inlineReview"}, {"oid": "b3b9fd64028562f4fb470b131ff23e832ea157ec", "url": "https://github.com/scireum/sirius-biz/commit/b3b9fd64028562f4fb470b131ff23e832ea157ec", "message": "SE-9748: Changed JavaDoc corresponding to pr comments", "committedDate": "2020-07-07T11:40:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMzQ2MQ==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r451303461", "bodyText": "Do we really need raw for the title?", "author": "qw3ry", "createdAt": "2020-07-08T06:06:25Z", "path": "src/main/resources/default/taglib/d/rssFeed.html.pasta", "diffHunk": "@@ -0,0 +1,43 @@\n+<i:arg type=\"String\" name=\"url\" description=\"the full URL to the RSS feed\" />\n+<i:arg type=\"int\" name=\"span\" default=\"2\" description=\"the span for md-devices\" />\n+<i:arg type=\"int\" name=\"smallSpan\" default=\"12\" description=\"the span for xs-devices\" />\n+<i:arg type=\"String\" name=\"class\" default=\"rssFeed\" description=\"the attribute which the class name will be extended with\" />\n+<i:arg type=\"boolean\" name=\"showDescription\" default=\"true\" description=\"determines if the RSS feed description will be rendered\" />\n+<i:arg type=\"boolean\" name=\"showHeaderImage\" default=\"true\" description=\"determines if the RSS header image will be rendered\" />\n+<i:arg type=\"boolean\" name=\"showHeader\" default=\"true\" description=\"determines if the RSS feed will show the header information in general, such as the RSS feed title and image\" />\n+<i:arg type=\"boolean\" name=\"useFeedTitle\" default=\"true\" description=\"determines if the RSS feed title will be used or ignored, headerTitleExtension will be displayed though\" />\n+<i:arg type=\"String\" name=\"headerTitleExtension\" default=\"\" description=\"extends the RSS feed title by the given string\" />\n+\n+<i:pragma\n+        name=\"description\"\n+        value=\"Provides a template to integrate RSS feeds. WARNING - USE WITH CAUTION: This tag does integrate and render external resources which may potentially contain malicious content! Please always ensure that the source from which the contents are fetched is trustworthy!\" />\n+\n+<i:local name=\"syndFeedObject\" value=\"@user.getHelper(sirius.biz.web.RssFeedHelper.class).processFeed(url)\" />\n+\n+<div class=\"@class col-md-@span col-xs-@smallSpan\">\n+    <i:if test=\"@showHeader\">\n+        <div class=\"row\">\n+            <i:if test=\"@showHeaderImage\">\n+                <img src=\"@syndFeedObject.getImage().getUrl()\" />\n+            </i:if>\n+            <h1>\n+                <i:if test=\"@useFeedTitle\">\n+                    <i:raw>@syndFeedObject.getTitle()</i:raw>", "originalCommit": "b3b9fd64028562f4fb470b131ff23e832ea157ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM0MjI0Mg==", "url": "https://github.com/scireum/sirius-biz/pull/812#discussion_r451342242", "bodyText": "raw in der description kann ich ja noch irgendwie verstehen, aber im Titel? Insgesamt schmeckt mir das raw ding nicht wirklich, v.a. in Sirius... Vielleicht einen boolean parameter hinzuf\u00fcgen, und nur wenn der gesetzt ist (auf non-default) raw verwenden, und ansonsten ohne rendern?\n\nWie im Standup besprochen. Wird so gemerged.", "author": "marvinwoop", "createdAt": "2020-07-08T07:36:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMzQ2MQ=="}], "type": "inlineReview"}]}