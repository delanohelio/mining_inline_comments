{"pr_number": 654, "pr_title": "Hides parameters marked as hidden but preserving its context", "pr_createdAt": "2020-01-02T16:32:59Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/654", "timeline": [{"oid": "3284e19b3e0b84b5a3943264e062968b337d0d25", "url": "https://github.com/scireum/sirius-biz/commit/3284e19b3e0b84b5a3943264e062968b337d0d25", "message": "Hides parameters marked as hidden but preserving its context", "committedDate": "2020-01-02T16:30:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU0Njk2MA==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362546960", "bodyText": "Wouldn't it be easier to create a new template file 'bla/bla/hidden.html.pasta' with\n<input type=\"hidden\" name=\"@param.getName()\" value=\"@context.getOrDefault(param.getName(), null)\"/>\n\nand add some logic to the Parameter class that wraps @param.getTemplateName() and will return the 'bla/bla/hidden.html.pasta' if the parameter is hidden instead of the template name implemented in the parameter subclasses?\nAs an alternative, this could also be done using <i:if> right here in the template.\nThese solutions would have the benefit of only iterating the parameter list once instead of three times.", "author": "meg1502", "createdAt": "2020-01-02T16:55:44Z", "path": "src/main/resources/default/templates/biz/jobs/job.html.pasta", "diffHunk": "@@ -44,11 +44,14 @@\n         <div class=\"row\">\n             <div class=\"col-md-8\">\n                 <div class=\"row\">\n-                    <i:for type=\"sirius.biz.jobs.params.Parameter\" var=\"param\" items=\"job.getParameters()\">\n+                    <i:for type=\"sirius.biz.jobs.params.Parameter\" var=\"param\" items=\"job.getVisibleParameters(context)\">\n                         <i:dynamicInvoke template=\"@param.getTemplateName()\" param=\"@param\" context=\"@context\"/>", "originalCommit": "3284e19b3e0b84b5a3943264e062968b337d0d25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0NzQzOQ==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362747439", "bodyText": "New template hidden.html.pasta returned by computeTemplateName which is now used by the pasta templates.", "author": "idlira", "createdAt": "2020-01-03T09:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU0Njk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMzI3OA==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362733278", "bodyText": "add this block in the interactive-job html.pasta as well?", "author": "andyHa", "createdAt": "2020-01-03T08:32:44Z", "path": "src/main/resources/default/templates/biz/jobs/job.html.pasta", "diffHunk": "@@ -44,11 +44,14 @@\n         <div class=\"row\">\n             <div class=\"col-md-8\">\n                 <div class=\"row\">\n-                    <i:for type=\"sirius.biz.jobs.params.Parameter\" var=\"param\" items=\"job.getParameters()\">\n+                    <i:for type=\"sirius.biz.jobs.params.Parameter\" var=\"param\" items=\"job.getVisibleParameters(context)\">\n                         <i:dynamicInvoke template=\"@param.getTemplateName()\" param=\"@param\" context=\"@context\"/>\n                     </i:for>\n                 </div>\n             </div>\n+            <i:for type=\"sirius.biz.jobs.params.Parameter\" var=\"param\" items=\"job.getInvisibleParameters(context)\">", "originalCommit": "3284e19b3e0b84b5a3943264e062968b337d0d25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0NzU2NQ==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362747565", "bodyText": "Covered with new redesign", "author": "idlira", "createdAt": "2020-01-03T09:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMzI3OA=="}], "type": "inlineReview"}, {"oid": "e391e00eb5680e31debb210b19cb4fdb4efe467a", "url": "https://github.com/scireum/sirius-biz/commit/e391e00eb5680e31debb210b19cb4fdb4efe467a", "message": "Redesigns the handling of hidden parameters\n\nA new computeTemplateName now used by the pasta templates will return a new template with a hidden input instead of the actual template for hidden parameters.", "committedDate": "2020-01-03T09:29:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0OTI3MQ==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362749271", "bodyText": "getEffectiveTemplateName / fetchEffectiveTemplateName?", "author": "andyHa", "createdAt": "2020-01-03T09:37:41Z", "path": "src/main/java/sirius/biz/jobs/params/Parameter.java", "diffHunk": "@@ -127,6 +129,21 @@ public boolean isVisible(Map<String, String> context) {\n      */\n     public abstract String getTemplateName();\n \n+    /**\n+     * Returns the name of the template used to render the parameter in the UI.\n+     * <p>\n+     * Similar to {@link #getTemplateName()}, but this method considers the visibility\n+     * of the parameter and delivers an alternative template in case the parameter should be hidden.\n+     *\n+     * @return the name or path of the template used to render the parameter\n+     */\n+    public String computeTemplateName() {", "originalCommit": "e391e00eb5680e31debb210b19cb4fdb4efe467a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc3Mzg3Mg==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362773872", "bodyText": "Refactored to getEffectiveTemplateName", "author": "idlira", "createdAt": "2020-01-03T11:07:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0OTI3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0OTM3Mw==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362749373", "bodyText": "shouldn't this also take \"ONLY_WITH_VALUE\" into account?", "author": "andyHa", "createdAt": "2020-01-03T09:38:00Z", "path": "src/main/java/sirius/biz/jobs/params/Parameter.java", "diffHunk": "@@ -127,6 +129,21 @@ public boolean isVisible(Map<String, String> context) {\n      */\n     public abstract String getTemplateName();\n \n+    /**\n+     * Returns the name of the template used to render the parameter in the UI.\n+     * <p>\n+     * Similar to {@link #getTemplateName()}, but this method considers the visibility\n+     * of the parameter and delivers an alternative template in case the parameter should be hidden.\n+     *\n+     * @return the name or path of the template used to render the parameter\n+     */\n+    public String computeTemplateName() {\n+        if (this.visibility == Visibility.HIDDEN) {", "originalCommit": "e391e00eb5680e31debb210b19cb4fdb4efe467a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0OTUyMQ==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362749521", "bodyText": "i.e. invoke isVisible", "author": "andyHa", "createdAt": "2020-01-03T09:38:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0OTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc3MzkyMw==", "url": "https://github.com/scireum/sirius-biz/pull/654#discussion_r362773923", "bodyText": "Validating with isVisible()", "author": "idlira", "createdAt": "2020-01-03T11:07:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0OTM3Mw=="}], "type": "inlineReview"}, {"oid": "a3de2388c59f779b5a3f55b56daea073c9bca3d2", "url": "https://github.com/scireum/sirius-biz/commit/a3de2388c59f779b5a3f55b56daea073c9bca3d2", "message": "Redesigns the handling of hidden parameters\n\ncomputeTemplateName -> getEffectiveTemplateName\nnew hasVisibleParameters helper to evaluate if extra artefacts shall be rendered", "committedDate": "2020-01-03T11:06:37Z", "type": "commit"}]}