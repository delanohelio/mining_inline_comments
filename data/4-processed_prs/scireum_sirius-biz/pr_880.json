{"pr_number": 880, "pr_title": "Implement a taglib for selecting a file for a blobSoftRef", "pr_createdAt": "2020-10-15T11:33:33Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/880", "timeline": [{"oid": "9108718d0f892cc5683197b072024b00573d8789", "url": "https://github.com/scireum/sirius-biz/commit/9108718d0f892cc5683197b072024b00573d8789", "message": "Introduce a route for fetching the blob info of a given path\n\nFixes: SE-10084", "committedDate": "2020-10-15T11:18:03Z", "type": "commit"}, {"oid": "653e6bba032806d2395e8d4cffcf7e0696252008", "url": "https://github.com/scireum/sirius-biz/commit/653e6bba032806d2395e8d4cffcf7e0696252008", "message": "Allow to restrict the file select modal to one directory\n\nFixes: SE-10084", "committedDate": "2020-10-15T11:23:43Z", "type": "commit"}, {"oid": "d0dc12792aeca8f2730390cedee4210254de2335", "url": "https://github.com/scireum/sirius-biz/commit/d0dc12792aeca8f2730390cedee4210254de2335", "message": "Implement a taglib for selecting a file for a blobSoftRef\n\nFixes: SE-10084", "committedDate": "2020-10-15T11:31:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NjIyMg==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505476222", "bodyText": "what does the prefix 'dasd' stand for?", "author": "meg1502", "createdAt": "2020-10-15T11:45:59Z", "path": "src/main/java/sirius/biz/storage/layer2/BlobController.java", "diffHunk": "@@ -86,4 +85,39 @@ public void uploadFile(final WebContext ctx,\n                             .handle();\n         }\n     }\n+\n+    /**\n+     * Find the {@link Blob} for a given path and returns info about it.\n+     *\n+     * @param webContext the request to handle\n+     * @param out        the response to the AJAX call\n+     * @param spaceName  the {@link BlobStorageSpace} to find the object in\n+     */\n+    @Routed(value = \"/dasd/blob-info-for-path/:1\", jsonCall = true)", "originalCommit": "d0dc12792aeca8f2730390cedee4210254de2335", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3ODA1Ng==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505478056", "bodyText": "Direct Attached Storage Device", "author": "jmuscireum", "createdAt": "2020-10-15T11:49:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NjIyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3OTMwOQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505479309", "bodyText": "if you just call one function with this, pretty pointless to define these const IMO", "author": "meg1502", "createdAt": "2020-10-15T11:51:36Z", "path": "src/main/resources/default/taglib/w/blobSoftRefField.html.pasta", "diffHunk": "@@ -0,0 +1,61 @@\n+<i:arg type=\"sirius.biz.storage.layer2.BlobSoftRef\" name=\"blobRef\"/>\n+<i:arg type=\"String\" name=\"id\" default=\"@('blob-soft-ref-' + call.generateLocalId())\"/>\n+<i:arg type=\"String\" name=\"inputId\"/>\n+<i:arg type=\"String\" name=\"defaultPreview\" default=\"\"/>\n+<i:arg type=\"boolean\" name=\"urlAllowed\" default=\"@blobRef.isSupportsURL()\" description=\"\"/>\n+<i:arg type=\"boolean\" name=\"showResetButton\" default=\"@blobRef.isFilled()\"/>\n+\n+<div id=\"@id\" class=\"blob-ref-field\">\n+    <div class=\"file file-js\"></div>\n+\n+    <button type=\"button\" class=\"btn btn-primary btn-block btn-select-file-js\">\n+        @i18n(\"StoredObject.uploadBtn\")\n+    </button>\n+\n+    <i:if test=\"@urlAllowed\">\n+        <button type=\"button\" class=\"btn btn-block\" data-placement=\"top\" data-toggle=\"popover\">\n+            @i18n(\"StoredObject.specifyURL\")\n+        </button>\n+\n+        <div class=\"popover-content hide\">\n+            <div class=\"row\">\n+                <div class=\"col-md-12\">\n+                    <div class=\"form-group\">\n+                        <label>@i18n(\"StoredObject.URL\")</label>\n+                        <input type=\"text\" class=\"form-control\">\n+                    </div>\n+                </div>\n+\n+                <div class=\"col-md-6\">\n+                    <button type=\"button\" class=\"btn btn-block btn-primary button-apply\">\n+                        <i class=\"fa fa-check\"></i> @i18n(\"NLS.ok\")\n+                    </button>\n+                </div>\n+\n+                <div class=\"col-md-6\">\n+                    <button type=\"button\" class=\"btn btn-block button-close\">\n+                        @i18n(\"NLS.cancel\")\n+                    </button>\n+                </div>\n+            </div>\n+        </div>\n+    </i:if>\n+\n+    <button type=\"button\" class=\"btn btn-block btn-reset-js @if(!showResetButton) { hide }\">\n+        @i18n(\"StoredObject.resetBtn\")\n+    </button>\n+</div>\n+\n+<script type=\"text/javascript\">\n+    $(document).ready(function () {\n+        const $element = $('#___id');\n+        const $blobKeyField = $('#___inputId');\n+        const blobStorageSpace = '___blobRef.getSpace()';\n+        const url = '___blobRef.url().asDownload().buildURL().orElse(\"\")';\n+        const filename = '___blobRef.getFilename()';\n+        const path = '___blobRef.getPath()';\n+        const defaultPreview = '___defaultPreview';", "originalCommit": "d0dc12792aeca8f2730390cedee4210254de2335", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4NDMyNg==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505484326", "bodyText": "Do you suggest inlining them? If not const is good codestyle", "author": "sabieber", "createdAt": "2020-10-15T12:01:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3OTMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU0NjM1OQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505546359", "bodyText": "I'd prefer to leave it like this. Inlining just creates an illegible mess.", "author": "jmuscireum", "createdAt": "2020-10-15T13:34:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3OTMwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MTQ2NQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505481465", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Find the {@link Blob} for a given path and returns info about it.\n          \n          \n            \n                 * Finds the {@link Blob} for a given path and returns info about it.", "author": "bwiedmann", "createdAt": "2020-10-15T11:55:42Z", "path": "src/main/java/sirius/biz/storage/layer2/BlobController.java", "diffHunk": "@@ -86,4 +85,39 @@ public void uploadFile(final WebContext ctx,\n                             .handle();\n         }\n     }\n+\n+    /**\n+     * Find the {@link Blob} for a given path and returns info about it.", "originalCommit": "d0dc12792aeca8f2730390cedee4210254de2335", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MTcyNQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r505481725", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Initialize the given blobSoftRefField\n          \n          \n            \n             * Initializes the given blobSoftRefField", "author": "bwiedmann", "createdAt": "2020-10-15T11:56:10Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+/**\n+ * Initialize the given blobSoftRefField", "originalCommit": "d0dc12792aeca8f2730390cedee4210254de2335", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9754af7a3eae4764bcb8349641ec4350d26d871a", "url": "https://github.com/scireum/sirius-biz/commit/9754af7a3eae4764bcb8349641ec4350d26d871a", "message": "Fix typos\n\nFixes: SE-10084", "committedDate": "2020-10-15T13:38:00Z", "type": "commit"}, {"oid": "71730aa59f6f2ae1abece1d3072afa681923420d", "url": "https://github.com/scireum/sirius-biz/commit/71730aa59f6f2ae1abece1d3072afa681923420d", "message": "Only include the js once\n\nFixes: SE-10084", "committedDate": "2020-10-15T13:38:21Z", "type": "commit"}, {"oid": "d5029b061a42cda5f29070ee53cfb17dd808fba1", "url": "https://github.com/scireum/sirius-biz/commit/d5029b061a42cda5f29070ee53cfb17dd808fba1", "message": "Move CSS\n\nFixes: SE-10084", "committedDate": "2020-10-15T13:40:36Z", "type": "commit"}, {"oid": "ee2b213352a2ef36a69c880720e02fc71fe3a398", "url": "https://github.com/scireum/sirius-biz/commit/ee2b213352a2ef36a69c880720e02fc71fe3a398", "message": "Remove unnecessary escaped @\n\nFixes: SE-10084", "committedDate": "2020-10-15T13:42:30Z", "type": "commit"}, {"oid": "a16ea1e45640bb7a0c59252116d89c7d2fe2c117", "url": "https://github.com/scireum/sirius-biz/commit/a16ea1e45640bb7a0c59252116d89c7d2fe2c117", "message": "Add a missing arg\n\nFixes: SE-10084", "committedDate": "2020-10-15T14:18:38Z", "type": "commit"}, {"oid": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "url": "https://github.com/scireum/sirius-biz/commit/d1d10bafe8882070a601d8f9b792749bf2d95a31", "message": "Only use jQuery where absolutely required\n\nFixes: SE-10084", "committedDate": "2020-10-16T06:17:30Z", "type": "commit"}, {"oid": "b67a17ff1b296d891895eb30bce0530a5c7b0afd", "url": "https://github.com/scireum/sirius-biz/commit/b67a17ff1b296d891895eb30bce0530a5c7b0afd", "message": "Fix the upload when a file is already referenced\n\n/fs/list can accept a file path to list the contents of the parent\ndirectory. But /fs/upload will throw an error, which will prevent the\nupload if a file is already referenced.\n\nFixes: SE-10084", "committedDate": "2020-10-16T06:40:26Z", "type": "commit"}, {"oid": "75f1684e7f5e3701fc44ed659bbf46f62e1d90ef", "url": "https://github.com/scireum/sirius-biz/commit/75f1684e7f5e3701fc44ed659bbf46f62e1d90ef", "message": "Fix the upload in jobs when a file is already selected\n\n/fs/list can accept a file path to list the contents of the parent\ndirectory. But /fs/upload will throw an error, which will prevent the\nupload if a file is already selected.", "committedDate": "2020-10-16T06:41:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NDYwNA==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506094604", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                element.setAttribute('data-path', originalPath);\n          \n          \n            \n                element.dataset.path = originalPath;", "author": "sabieber", "createdAt": "2020-10-16T06:47:32Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NDkwNA==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506094904", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    closeButton.addEventListener('click', function (e) {\n          \n          \n            \n                        e.preventDefault();\n          \n          \n            \n                    closeButton.addEventListener('click', function (event) {\n          \n          \n            \n                        event.preventDefault();", "author": "sabieber", "createdAt": "2020-10-16T06:48:16Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NTQzNg==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506095436", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    input.addEventListener('keyup', function (e) {\n          \n          \n            \n                        if (e.which === 13) {\n          \n          \n            \n                    input.addEventListener('keyup', function (event) {\n          \n          \n            \n                        if (event.key === 'Enter') {", "author": "sabieber", "createdAt": "2020-10-16T06:49:25Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NTY1MQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506095651", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    applyButton.addEventListener('click', function (e) {\n          \n          \n            \n                        e.preventDefault();\n          \n          \n            \n                    applyButton.addEventListener('click', function (event) {\n          \n          \n            \n                        event.preventDefault();", "author": "sabieber", "createdAt": "2020-10-16T06:49:40Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {\n-                updateURL($input.val());\n+                updateURL(input.value);\n             }\n         });\n \n-        $applyButton.click(function () {\n-            updateURL($input.val());\n+        applyButton.addEventListener('click', function (e) {\n+            e.preventDefault();", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NTk2MA==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506095960", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                urlButton.addEventListener('click', function (e) {\n          \n          \n            \n                    e.preventDefault();\n          \n          \n            \n                urlButton.addEventListener('click', function (event) {\n          \n          \n            \n                    event.preventDefault();", "author": "sabieber", "createdAt": "2020-10-16T06:50:01Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {\n-                updateURL($input.val());\n+                updateURL(input.value);\n             }\n         });\n \n-        $applyButton.click(function () {\n-            updateURL($input.val());\n+        applyButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            updateURL(input.value);\n         });\n-    });\n \n-    $urlButton.click(function () {\n-        let url = $blobKeyField.val();\n+        let url = blobKeyField.value;\n \n         if (!url.startsWith('http://') && !url.startsWith('https://')) {\n             url = '';\n         }\n \n-        $(this).blur();\n-        $(this).popover('toggle');\n+        input.value = url;\n+        input.select();\n \n-        const $input = $(this).next('.popover').find('input');\n-        const $applyButton = $(this).next('.popover').find('.button-apply');\n+        checkURL(input.value, applyButton);\n+    });\n \n-        $input.val(url).select();\n+    urlButton.addEventListener('click', function (e) {\n+        e.preventDefault();", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NjA1MQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506096051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                resetButton.addEventListener('click', function (e) {\n          \n          \n            \n                    e.preventDefault();\n          \n          \n            \n                resetButton.addEventListener('click', function (event) {\n          \n          \n            \n                    event.preventDefault();", "author": "sabieber", "createdAt": "2020-10-16T06:50:12Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {\n-                updateURL($input.val());\n+                updateURL(input.value);\n             }\n         });\n \n-        $applyButton.click(function () {\n-            updateURL($input.val());\n+        applyButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            updateURL(input.value);\n         });\n-    });\n \n-    $urlButton.click(function () {\n-        let url = $blobKeyField.val();\n+        let url = blobKeyField.value;\n \n         if (!url.startsWith('http://') && !url.startsWith('https://')) {\n             url = '';\n         }\n \n-        $(this).blur();\n-        $(this).popover('toggle');\n+        input.value = url;\n+        input.select();\n \n-        const $input = $(this).next('.popover').find('input');\n-        const $applyButton = $(this).next('.popover').find('.button-apply');\n+        checkURL(input.value, applyButton);\n+    });\n \n-        $input.val(url).select();\n+    urlButton.addEventListener('click', function (e) {\n+        e.preventDefault();\n+        urlButton.blur();\n \n-        checkURL($input.val(), $applyButton);\n+        $(urlButton).popover('toggle');\n     });\n \n-    $resetButton.click(function (e) {\n+    resetButton.addEventListener('click', function (e) {\n         e.preventDefault();", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NjM4MA==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506096380", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                selectButton.addEventListener('click', function (e) {\n          \n          \n            \n                    e.preventDefault();\n          \n          \n            \n                selectButton.addEventListener('click', function (event) {\n          \n          \n            \n                    event.preventDefault();", "author": "sabieber", "createdAt": "2020-10-16T06:50:32Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {\n-                updateURL($input.val());\n+                updateURL(input.value);\n             }\n         });\n \n-        $applyButton.click(function () {\n-            updateURL($input.val());\n+        applyButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            updateURL(input.value);\n         });\n-    });\n \n-    $urlButton.click(function () {\n-        let url = $blobKeyField.val();\n+        let url = blobKeyField.value;\n \n         if (!url.startsWith('http://') && !url.startsWith('https://')) {\n             url = '';\n         }\n \n-        $(this).blur();\n-        $(this).popover('toggle');\n+        input.value = url;\n+        input.select();\n \n-        const $input = $(this).next('.popover').find('input');\n-        const $applyButton = $(this).next('.popover').find('.button-apply');\n+        checkURL(input.value, applyButton);\n+    });\n \n-        $input.val(url).select();\n+    urlButton.addEventListener('click', function (e) {\n+        e.preventDefault();\n+        urlButton.blur();\n \n-        checkURL($input.val(), $applyButton);\n+        $(urlButton).popover('toggle');\n     });\n \n-    $resetButton.click(function (e) {\n+    resetButton.addEventListener('click', function (e) {\n         e.preventDefault();\n-        $(this).blur();\n+        resetButton.blur();\n \n-        $blobKeyField.val('');\n+        blobKeyField.value = '';\n \n         updateFile('');\n         updateResetButton();\n     });\n \n-    $selectButton.click(function () {\n-        const currentPath = $element.data('path') || blobStorageSpacePath;\n+    selectButton.addEventListener('click', function (e) {\n+        e.preventDefault();", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NjU4MQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506096581", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    const currentPath = element.getAttribute('data-path') || blobStorageSpacePath;\n          \n          \n            \n                    const currentPath = element.dataset.path || blobStorageSpacePath;", "author": "sabieber", "createdAt": "2020-10-16T06:50:48Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {\n-                updateURL($input.val());\n+                updateURL(input.value);\n             }\n         });\n \n-        $applyButton.click(function () {\n-            updateURL($input.val());\n+        applyButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            updateURL(input.value);\n         });\n-    });\n \n-    $urlButton.click(function () {\n-        let url = $blobKeyField.val();\n+        let url = blobKeyField.value;\n \n         if (!url.startsWith('http://') && !url.startsWith('https://')) {\n             url = '';\n         }\n \n-        $(this).blur();\n-        $(this).popover('toggle');\n+        input.value = url;\n+        input.select();\n \n-        const $input = $(this).next('.popover').find('input');\n-        const $applyButton = $(this).next('.popover').find('.button-apply');\n+        checkURL(input.value, applyButton);\n+    });\n \n-        $input.val(url).select();\n+    urlButton.addEventListener('click', function (e) {\n+        e.preventDefault();\n+        urlButton.blur();\n \n-        checkURL($input.val(), $applyButton);\n+        $(urlButton).popover('toggle');\n     });\n \n-    $resetButton.click(function (e) {\n+    resetButton.addEventListener('click', function (e) {\n         e.preventDefault();\n-        $(this).blur();\n+        resetButton.blur();\n \n-        $blobKeyField.val('');\n+        blobKeyField.value = '';\n \n         updateFile('');\n         updateResetButton();\n     });\n \n-    $selectButton.click(function () {\n-        const currentPath = $element.data('path') || blobStorageSpacePath;\n+    selectButton.addEventListener('click', function (e) {\n+        e.preventDefault();\n+\n+        const currentPath = element.getAttribute('data-path') || blobStorageSpacePath;", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5NjkwNA==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506096904", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            element.setAttribute('data-path', selectedValue);\n          \n          \n            \n                            element.dataset.path = selectedValue;", "author": "sabieber", "createdAt": "2020-10-16T06:51:07Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -43,81 +43,89 @@ function initBlobSoftRefField($element,\n \n     const blobStorageSpacePath = '/' + blobStorageSpace;\n \n-    const $selectButton = $element.find('.btn-select-file-js');\n-    const $urlButton = $element.find('[data-toggle=popover]');\n-    const $resetButton = $element.find('.btn-reset-js');\n-    const $fileElement = $element.find('.file-js');\n+    const selectButton = element.querySelector('.btn-select-file-js');\n+    const urlButton = element.querySelector('[data-toggle=popover]');\n+    const resetButton = element.querySelector('.btn-reset-js');\n+    const fileElement = element.querySelector('.file-js');\n \n-    $element.data('path', originalPath);\n+    element.setAttribute('data-path', originalPath);\n \n-    $urlButton.popover({\n+    $(urlButton).popover({\n         html: true, trigger: 'manual', content: function () {\n-            return $element.find('.popover-content').html();\n+            return element.querySelector('.popover-content').innerHTML;\n         }\n     });\n \n-    $urlButton.on('inserted.bs.popover', function () {\n-        const $popup = $(this);\n-        const $closeButton = $popup.next('.popover').find('.button-close');\n-        const $applyButton = $popup.next('.popover').find('.button-apply');\n-        const $input = $popup.next('.popover').find('input');\n+    $(urlButton).on('inserted.bs.popover', function () {\n+        const popover = urlButton.parentElement.querySelector('.popover');\n+        const closeButton = popover.querySelector('.button-close');\n+        const applyButton = popover.querySelector('.button-apply');\n+        const input = popover.querySelector('input');\n \n-        $closeButton.click(function () {\n-            $popup.popover('hide');\n+        closeButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            $(urlButton).popover('hide');\n         });\n \n-        $input.bind(\"input propertychange\", function () {\n-            checkURL($input.val(), $applyButton);\n+        input.addEventListener('input', function () {\n+            checkURL(input.value, applyButton);\n         });\n \n-        $input.keyup(function (e) {\n+        input.addEventListener('paste', function () {\n+            checkURL(input.value, applyButton);\n+        });\n+\n+        input.addEventListener('keyup', function (e) {\n             if (e.which === 13) {\n-                updateURL($input.val());\n+                updateURL(input.value);\n             }\n         });\n \n-        $applyButton.click(function () {\n-            updateURL($input.val());\n+        applyButton.addEventListener('click', function (e) {\n+            e.preventDefault();\n+            updateURL(input.value);\n         });\n-    });\n \n-    $urlButton.click(function () {\n-        let url = $blobKeyField.val();\n+        let url = blobKeyField.value;\n \n         if (!url.startsWith('http://') && !url.startsWith('https://')) {\n             url = '';\n         }\n \n-        $(this).blur();\n-        $(this).popover('toggle');\n+        input.value = url;\n+        input.select();\n \n-        const $input = $(this).next('.popover').find('input');\n-        const $applyButton = $(this).next('.popover').find('.button-apply');\n+        checkURL(input.value, applyButton);\n+    });\n \n-        $input.val(url).select();\n+    urlButton.addEventListener('click', function (e) {\n+        e.preventDefault();\n+        urlButton.blur();\n \n-        checkURL($input.val(), $applyButton);\n+        $(urlButton).popover('toggle');\n     });\n \n-    $resetButton.click(function (e) {\n+    resetButton.addEventListener('click', function (e) {\n         e.preventDefault();\n-        $(this).blur();\n+        resetButton.blur();\n \n-        $blobKeyField.val('');\n+        blobKeyField.value = '';\n \n         updateFile('');\n         updateResetButton();\n     });\n \n-    $selectButton.click(function () {\n-        const currentPath = $element.data('path') || blobStorageSpacePath;\n+    selectButton.addEventListener('click', function (e) {\n+        e.preventDefault();\n+\n+        const currentPath = element.getAttribute('data-path') || blobStorageSpacePath;\n \n         selectVFSFile(currentPath, blobStorageSpacePath).then(function (selectedValue) {\n             $.getJSON('/dasd/blob-info-for-path/' + blobStorageSpace, {\n                 path: selectedValue.substring(blobStorageSpacePath.length)\n             }, function (json) {\n-                $blobKeyField.val(json.fileId);\n-                $element.data('path', selectedValue);\n+                blobKeyField.value = json.fileId;\n+                element.setAttribute('data-path', selectedValue);", "originalCommit": "d1d10bafe8882070a601d8f9b792749bf2d95a31", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA5Nzg0MQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506097841", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                element.setAttribute('data-path', determineParentPath(originalPath));\n          \n          \n            \n                element.dataset.path = determineParentPath(originalPath);", "author": "sabieber", "createdAt": "2020-10-16T06:52:07Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -241,5 +232,14 @@ function initBlobSoftRefField(element,\n         return 'fa-file-o';\n     };\n \n-    updateFile(originalUrl, originalFilename);\n+    const determineFilename = function (path) {\n+        return path.substr(path.lastIndexOf(\"/\") + 1);\n+    };\n+\n+    const determineParentPath = function (path) {\n+        return path.substr(0, path.lastIndexOf(\"/\"));\n+    };\n+\n+    element.setAttribute('data-path', determineParentPath(originalPath));", "originalCommit": "b67a17ff1b296d891895eb30bce0530a5c7b0afd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b216b40928bac1eba5d8dc565ff655dac62dfe40", "url": "https://github.com/scireum/sirius-biz/commit/b216b40928bac1eba5d8dc565ff655dac62dfe40", "message": "Use a more modern way to access the data attributes\n\nFixes: SE-10084", "committedDate": "2020-10-16T07:49:10Z", "type": "commit"}, {"oid": "3694851c91dff5e45980e42558a18348b54162b7", "url": "https://github.com/scireum/sirius-biz/commit/3694851c91dff5e45980e42558a18348b54162b7", "message": "Use better variable names for events\n\nFixes: SE-10084", "committedDate": "2020-10-16T07:49:59Z", "type": "commit"}, {"oid": "c7d8bae3234f8f26d19ba39984e6f7118160b2a7", "url": "https://github.com/scireum/sirius-biz/commit/c7d8bae3234f8f26d19ba39984e6f7118160b2a7", "message": "Check for the pressed key in a more readable way\n\nFixes: SE-10084", "committedDate": "2020-10-16T07:56:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE4MzExOQ==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506183119", "bodyText": "@nullable", "author": "andyHa", "createdAt": "2020-10-16T08:48:07Z", "path": "src/main/java/sirius/biz/storage/layer2/BlobHardRef.java", "diffHunk": "@@ -95,6 +95,19 @@ public String getFilename() {\n         return getBlob().getFilename();\n     }\n \n+    /**\n+     * Determines the path of the referenced blob.\n+     *\n+     * @return the path, or <tt>null</tt> if no blob is referenced\n+     */\n+    public String getPath() {", "originalCommit": "c7d8bae3234f8f26d19ba39984e6f7118160b2a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE4MzU1NA==", "url": "https://github.com/scireum/sirius-biz/pull/880#discussion_r506183554", "bodyText": "sexy! \ud83d\udc4d", "author": "andyHa", "createdAt": "2020-10-16T08:48:46Z", "path": "src/main/resources/default/assets/javascript/blobreffield.js", "diffHunk": "@@ -0,0 +1,245 @@\n+/*", "originalCommit": "c7d8bae3234f8f26d19ba39984e6f7118160b2a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4803903768e13ef1801e9c30b46dd21ea04070af", "url": "https://github.com/scireum/sirius-biz/commit/4803903768e13ef1801e9c30b46dd21ea04070af", "message": "Add Nullable annotations to blob refs\n\nFixes: SE-10084", "committedDate": "2020-10-16T09:11:41Z", "type": "commit"}]}