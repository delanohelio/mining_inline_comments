{"pr_number": 836, "pr_title": "BREAKING: Only loads fields from requests when matching param is given", "pr_createdAt": "2020-07-29T10:55:09Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/836", "timeline": [{"oid": "37c6086db638c05156d4b1cf999f453c23999ff1", "url": "https://github.com/scireum/sirius-biz/commit/37c6086db638c05156d4b1cf999f453c23999ff1", "message": "Only loads fields from requests when matching param is given\n\nWe dont want to reset a field to null when no parameter is given in the request that matches the field.\nWe also use `get` instead of `getParameters` here as it takes the `WebContext::attributes` into account which allows to semi-inject parameters before loading (e.g. for providing a default value when no parameter is given).\n\nFixes: OX-6055", "committedDate": "2020-07-29T10:49:50Z", "type": "commit"}, {"oid": "76f5953936aede3bdb2077f4bacb78762c6e0846", "url": "https://github.com/scireum/sirius-biz/commit/76f5953936aede3bdb2077f4bacb78762c6e0846", "message": "Codestyle", "committedDate": "2020-07-29T10:54:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzMDQ3OQ==", "url": "https://github.com/scireum/sirius-biz/pull/836#discussion_r462230479", "bodyText": "this comment makes more sense inside right before or inside the if", "author": "meg1502", "createdAt": "2020-07-29T11:31:32Z", "path": "src/main/java/sirius/biz/web/BizController.java", "diffHunk": "@@ -256,11 +257,19 @@ protected void load(WebContext ctx, BaseEntity<?> entity, List<Mapping> properti\n             Property property = entity.getDescriptor().getProperty(columnProperty);\n             String propertyName = property.getName();\n \n+            // If the parameter is not present in the request we just skip it to prevent resetting the field to null", "originalCommit": "37c6086db638c05156d4b1cf999f453c23999ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzNTE1Mw==", "url": "https://github.com/scireum/sirius-biz/pull/836#discussion_r462235153", "bodyText": "this looks weird, maybe long term we should look at properties only parsing a Value and the properties that actually support multiple values to look for a list inside of the value", "author": "meg1502", "createdAt": "2020-07-29T11:41:27Z", "path": "src/main/java/sirius/biz/web/BizController.java", "diffHunk": "@@ -256,11 +257,19 @@ protected void load(WebContext ctx, BaseEntity<?> entity, List<Mapping> properti\n             Property property = entity.getDescriptor().getProperty(columnProperty);\n             String propertyName = property.getName();\n \n+            // If the parameter is not present in the request we just skip it to prevent resetting the field to null\n+            final Value parameterValue = ctx.get(propertyName);\n+            if (parameterValue.isNull()) {\n+                continue;\n+            }\n+\n             try {\n-                property.parseValues(entity, Values.of(ctx.getParameters(propertyName)));\n+                property.parseValues(entity,\n+                                     Values.of(parameterValue.get(List.class,\n+                                                                  Collections.singletonList(parameterValue.get()))));", "originalCommit": "37c6086db638c05156d4b1cf999f453c23999ff1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzNTkzNg==", "url": "https://github.com/scireum/sirius-biz/pull/836#discussion_r462235936", "bodyText": "Yes, although this would probably require quite a lot of changes in sirius-db", "author": "sabieber", "createdAt": "2020-07-29T11:43:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzNTE1Mw=="}], "type": "inlineReview"}, {"oid": "3bf18b463d533610c70350a4114efb3f1d6d7eab", "url": "https://github.com/scireum/sirius-biz/commit/3bf18b463d533610c70350a4114efb3f1d6d7eab", "message": "Codestyle", "committedDate": "2020-07-29T11:47:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzODE5MQ==", "url": "https://github.com/scireum/sirius-biz/pull/836#discussion_r462338191", "bodyText": "couldn't this be handled via a stream + filter or a sub method + return?", "author": "andyHa", "createdAt": "2020-07-29T14:22:24Z", "path": "src/main/java/sirius/biz/web/BizController.java", "diffHunk": "@@ -222,46 +221,54 @@ public static String getBaseUrl() {\n     /**\n      * Fetches all <tt>autoloaded</tt> fields of the given entity from the given request and populates the entity.\n      *\n-     * @param ctx    the request to read parameters from\n-     * @param entity the entity to fill\n+     * @param webContext the request to read parameters from\n+     * @param entity     the entity to fill\n      * @see Autoloaded\n      */\n-    protected void load(WebContext ctx, BaseEntity<?> entity) {\n+    protected void load(WebContext webContext, BaseEntity<?> entity) {\n         List<Mapping> columns = entity.getDescriptor()\n                                       .getProperties()\n                                       .stream()\n-                                      .filter(property -> shouldAutoload(ctx, property))\n+                                      .filter(property -> shouldAutoload(webContext, property))\n                                       .map(Property::getName)\n                                       .map(Mapping::named)\n                                       .collect(Collectors.toList());\n \n-        load(ctx, entity, columns);\n+        load(webContext, entity, columns);\n     }\n \n     /**\n      * Reads the given properties from the given request and populates the given entity.\n      *\n-     * @param ctx        the request to read parameters from\n+     * @param webContext the request to read parameters from\n      * @param entity     the entity to fill\n      * @param properties the list of properties to transfer\n      */\n-    protected void load(WebContext ctx, BaseEntity<?> entity, Mapping... properties) {\n-        load(ctx, entity, Arrays.asList(properties));\n+    protected void load(WebContext webContext, BaseEntity<?> entity, Mapping... properties) {\n+        load(webContext, entity, Arrays.asList(properties));\n     }\n \n-    protected void load(WebContext ctx, BaseEntity<?> entity, List<Mapping> properties) {\n+    protected void load(WebContext webContext, BaseEntity<?> entity, List<Mapping> properties) {\n         boolean hasError = false;\n \n         for (Mapping columnProperty : properties) {\n             Property property = entity.getDescriptor().getProperty(columnProperty);\n             String propertyName = property.getName();\n \n+            final Value parameterValue = webContext.get(propertyName);\n+            if (parameterValue.isNull()) {\n+                // If the parameter is not present in the request we just skip it to prevent resetting the field to null\n+                continue;", "originalCommit": "3bf18b463d533610c70350a4114efb3f1d6d7eab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a0e93cf5626f0d52fd02f21ea7c8024a95cc4607", "url": "https://github.com/scireum/sirius-biz/commit/a0e93cf5626f0d52fd02f21ea7c8024a95cc4607", "message": "Extracts method for better readability", "committedDate": "2020-07-29T14:34:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1Mjk0Mw==", "url": "https://github.com/scireum/sirius-biz/pull/836#discussion_r462352943", "bodyText": "maybe invert here so that true = success and false = failure?", "author": "andyHa", "createdAt": "2020-07-29T14:41:00Z", "path": "src/main/java/sirius/biz/web/BizController.java", "diffHunk": "@@ -272,6 +264,28 @@ protected void load(WebContext ctx, BaseEntity<?> entity, List<Mapping> properti\n         }\n     }\n \n+    private boolean tryLoadProperty(WebContext webContext, BaseEntity<?> entity, Property property) {", "originalCommit": "a0e93cf5626f0d52fd02f21ea7c8024a95cc4607", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72242c53f1869c8eb0e6287ce020c110b5f87c59", "url": "https://github.com/scireum/sirius-biz/commit/72242c53f1869c8eb0e6287ce020c110b5f87c59", "message": "Codestyle", "committedDate": "2020-07-29T14:43:30Z", "type": "commit"}]}