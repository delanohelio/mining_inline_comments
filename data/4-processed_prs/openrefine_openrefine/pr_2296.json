{"pr_number": 2296, "pr_title": "[#2280] Add fill down and blank down operations for all columns", "pr_createdAt": "2020-01-20T14:26:06Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2296", "timeline": [{"oid": "90628e6ab0d3ca4c1c4eb6cff4a32c703ada4704", "url": "https://github.com/OpenRefine/OpenRefine/commit/90628e6ab0d3ca4c1c4eb6cff4a32c703ada4704", "message": "Add fill down and blank down operations for all columns", "committedDate": "2020-01-20T14:21:37Z", "type": "commit"}, {"oid": "73936183bb88c446c512f8161307a3912b52d5e9", "url": "https://github.com/OpenRefine/OpenRefine/commit/73936183bb88c446c512f8161307a3912b52d5e9", "message": "Refactor to individual functions", "committedDate": "2020-01-20T15:20:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1MDUyNw==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2296#discussion_r368650527", "bodyText": "I think it is fine to use the existing operations to implement this (so, resulting in multiple steps in the history).\nHowever, doing a for loop like this will fire up HTTP queries to the backend in no particular order: the first column could well end up being filled down after the first one! That is a problem since the final state of the table can depend on the order of execution of these operations, if we are in records mode (simply because filling down the first column will change records, and filling down on another column in records mode respects the records boundaries).\nSo, the code should be adapted to use callbacks instead: the second column should only be filled down once the first one has. The postCoreProcess method accepts callbacks which can be used for that. Unfortunately that is going to lead to less readable code but I don't see how to avoid that to ensure correctness.", "author": "wetneb", "createdAt": "2020-01-20T17:00:24Z", "path": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "diffHunk": "@@ -863,6 +874,32 @@ DataTableView.prototype._createSortingMenu = function(elmt) {\n   MenuSystem.createAndShowStandardMenu(items, elmt, { horizontal: false });\n };\n \n+var doAllFillDown = function() {\n+  for (var i = 0; i < theProject.columnModel.columns.length; i++) {\n+    Refine.postCoreProcess(\n+        \"fill-down\",\n+        {\n+          columnName: theProject.columnModel.columns[i].name\n+        },\n+        null,\n+        { modelsChanged: true }\n+    );\n+  }\n+};", "originalCommit": "73936183bb88c446c512f8161307a3912b52d5e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3MjA1NQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2296#discussion_r368672055", "bodyText": "Thanks for the advise! I have tried to chain the operations with callbacks.\nHowever, I am not sure if my way is the simplest/cleanest way to do it. May I get your review on this?", "author": "jamessspanggg", "createdAt": "2020-01-20T17:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1MDUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NTYzOQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2296#discussion_r368675639", "bodyText": "I would say this is a rather elegant way to do it!", "author": "wetneb", "createdAt": "2020-01-20T18:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1MDUyNw=="}], "type": "inlineReview"}, {"oid": "d7d4731f80c7a25de4bd8a4af8a4b7c634cbe957", "url": "https://github.com/OpenRefine/OpenRefine/commit/d7d4731f80c7a25de4bd8a4af8a4b7c634cbe957", "message": "Utilise callbacks to chain fill/blank down operations", "committedDate": "2020-01-20T17:56:03Z", "type": "commit"}, {"oid": "a19f859d2e94eb7d337d15e2cfcf34999f2cb521", "url": "https://github.com/OpenRefine/OpenRefine/commit/a19f859d2e94eb7d337d15e2cfcf34999f2cb521", "message": "Reverse order of fill down operation", "committedDate": "2020-01-27T09:14:57Z", "type": "commit"}]}