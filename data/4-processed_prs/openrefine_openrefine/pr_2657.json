{"pr_number": 2657, "pr_title": "Save preferences JSON using UTF-8 encoding. Bulletproof prefs load.", "pr_createdAt": "2020-05-30T17:54:05Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2657", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjA0NA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r432882044", "bodyText": "There is no reason for recon candidates to end up in the project metadata, so both writers are equivalent. Perhaps we could use saveWriter because we are saving things to disk, but it is a style change.", "author": "wetneb", "createdAt": "2020-05-30T19:50:42Z", "path": "main/src/com/google/refine/io/ProjectMetadataUtilities.java", "diffHunk": "@@ -60,25 +61,35 @@\n     public static void save(ProjectMetadata projectMeta, File projectDir) throws IOException  {\n         File tempFile = new File(projectDir, \"metadata.temp.json\");\n         saveToFile(projectMeta, tempFile);\n+        if (tempFile.length() == 0) {\n+            throw new IOException(\"Failed to save project metadata - keeping backups\");\n+        }\n+\n+        // TODO Do we want to make sure we can successfully deserialize the file too?\n \n         File file = new File(projectDir, \"metadata.json\");\n         File oldFile = new File(projectDir, \"metadata.old.json\");\n \n-        if (oldFile.exists()) {\n-            oldFile.delete();\n-        }\n-        \n         if (file.exists()) {\n+            if(file.length() > 0) {\n+                if (oldFile.exists()) {\n+                    oldFile.delete();\n+                }\n             file.renameTo(oldFile);\n+            } else {\n+                file.delete();\n+            }\n         }\n \n         tempFile.renameTo(file);\n     }\n     \n     protected static void saveToFile(ProjectMetadata projectMeta, File metadataFile) throws IOException   {\n-        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile));\n+        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile), StandardCharsets.UTF_8);\n         try {\n             ParsingUtilities.defaultWriter.writeValue(writer, projectMeta);\n+            // TODO: Do we want the below instead? Doesn't filter recon candidates\n+//            ParsingUtilities.saveWriter.writeValue(writer, projectMeta);", "originalCommit": "9cc4df2ba4bf3269ac3a99539ab74de499e58d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NDEzNw==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r435554137", "bodyText": "I switched to saveWriter", "author": "tfmorris", "createdAt": "2020-06-04T21:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjA0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjE0MA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r432882140", "bodyText": "Perhaps we could look into making the deserializer more flexible with respect to encoding issues (just like it can be configured to accept unescaped tabs)? I have not checked if it is possible though.", "author": "wetneb", "createdAt": "2020-05-30T19:52:11Z", "path": "main/src/com/google/refine/io/ProjectMetadataUtilities.java", "diffHunk": "@@ -60,25 +61,35 @@\n     public static void save(ProjectMetadata projectMeta, File projectDir) throws IOException  {\n         File tempFile = new File(projectDir, \"metadata.temp.json\");\n         saveToFile(projectMeta, tempFile);\n+        if (tempFile.length() == 0) {\n+            throw new IOException(\"Failed to save project metadata - keeping backups\");\n+        }\n+\n+        // TODO Do we want to make sure we can successfully deserialize the file too?\n \n         File file = new File(projectDir, \"metadata.json\");\n         File oldFile = new File(projectDir, \"metadata.old.json\");\n \n-        if (oldFile.exists()) {\n-            oldFile.delete();\n-        }\n-        \n         if (file.exists()) {\n+            if(file.length() > 0) {\n+                if (oldFile.exists()) {\n+                    oldFile.delete();\n+                }\n             file.renameTo(oldFile);\n+            } else {\n+                file.delete();\n+            }\n         }\n \n         tempFile.renameTo(file);\n     }\n     \n     protected static void saveToFile(ProjectMetadata projectMeta, File metadataFile) throws IOException   {\n-        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile));\n+        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile), StandardCharsets.UTF_8);", "originalCommit": "9cc4df2ba4bf3269ac3a99539ab74de499e58d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NjYxNw==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r432886617", "bodyText": "Jackson does it's own encoding guessing, but it's got to be one of the JSON legal encodings (UTF-8, 16, 32). The ASCII is legal UTF-8, but the upper half of ISO 8859-1 isn't, which is where, I suspect, the problem comes in.", "author": "tfmorris", "createdAt": "2020-05-30T20:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjE0MA=="}], "type": "inlineReview"}, {"oid": "8d151218534c81252a4dba087a7211f95b0ff08f", "url": "https://github.com/OpenRefine/OpenRefine/commit/8d151218534c81252a4dba087a7211f95b0ff08f", "message": "Run tests with non-UTF-8 encoding\n\nMake sure that we don't depend on UTF-8 being the default encoding\nbecause it isn't true everywhere (e.g. Windows)", "committedDate": "2020-06-04T21:13:13Z", "type": "commit"}, {"oid": "2e6d71c3152d1749deb4c5c1eb8efc1e94a6faff", "url": "https://github.com/OpenRefine/OpenRefine/commit/2e6d71c3152d1749deb4c5c1eb8efc1e94a6faff", "message": "Add test for non-ASCII chars in workspace.json\n\nThis depends on the default Java encoding being something\nother than UTF-8 to test properly.", "committedDate": "2020-06-04T21:13:13Z", "type": "commit"}, {"oid": "2f579deee2c2d5b2341016623e7b905cafbdd1e4", "url": "https://github.com/OpenRefine/OpenRefine/commit/2f579deee2c2d5b2341016623e7b905cafbdd1e4", "message": "Save preferences JSON using UTF-8 encoding. Bulletproof prefs load.\n\nFixes #2543. Fixes #2627.\n\nAlways use UTF-8 to write JSON because platform default encoding\nmight not be legal JSON (e.g. ISO 8859-1).\n\nAlso be more conservative about keeping backups if we fail to write.", "committedDate": "2020-06-04T21:13:13Z", "type": "commit"}, {"oid": "9623f075584b77f3f010b3424793e13f67971b09", "url": "https://github.com/OpenRefine/OpenRefine/commit/9623f075584b77f3f010b3424793e13f67971b09", "message": "Handle case where backup prefs is better than more recent", "committedDate": "2020-06-04T21:13:13Z", "type": "commit"}, {"oid": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "url": "https://github.com/OpenRefine/OpenRefine/commit/a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "message": "Recover from corrupted prefs with null starred list.\n\nFixes #2544. Replaces null with an empty list.", "committedDate": "2020-06-04T21:13:13Z", "type": "commit"}, {"oid": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "url": "https://github.com/OpenRefine/OpenRefine/commit/a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "message": "Recover from corrupted prefs with null starred list.\n\nFixes #2544. Replaces null with an empty list.", "committedDate": "2020-06-04T21:13:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2NDY5OA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r435764698", "bodyText": "I guess we should ideally be able to apply this only for specific tests, no? I am not sure how that could be done, though. I am trying to think about the risks we are taking by switching to this encoding everywhere. Intuitively it should help us surface more bugs rather than hide ones which would only happen if the system encoding is UTF-8, so it is probably fine?", "author": "wetneb", "createdAt": "2020-06-05T08:21:15Z", "path": "pom.xml", "diffHunk": "@@ -57,7 +57,7 @@\n     <jee.port>3333</jee.port>\n     <refine.data>/tmp/refine</refine.data>\n     <surefire.version>2.22.2</surefire.version>\n-    <surefireArgs></surefireArgs>\n+    <surefireArgs>-Dfile.encoding=cp1252</surefireArgs>", "originalCommit": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODAzMg==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r436058032", "bodyText": "That was my thinking. We assume/need UTF-8 generally, but our most popular platform doesn't use that as its default encoding, so neither should our tests. I think all tests should be run with this setting.", "author": "tfmorris", "createdAt": "2020-06-05T17:21:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2NDY5OA=="}], "type": "inlineReview"}]}