{"pr_number": 2822, "pr_title": "Add constraint class", "pr_createdAt": "2020-06-26T17:34:43Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/2822", "timeline": [{"oid": "661d3223cfe3b1b6708b75c6beefb2fd3d05b94a", "url": "https://github.com/OpenRefine/OpenRefine/commit/661d3223cfe3b1b6708b75c6beefb2fd3d05b94a", "message": "Add constraint class", "committedDate": "2020-06-26T17:40:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTc5NQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446501795", "bodyText": "These types should be more specific: ItemIdValue and Set<EntityIdValue>", "author": "wetneb", "createdAt": "2020-06-27T08:36:15Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/Constraint.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.openrefine.wikidata.qa;\n+\n+import org.wikidata.wdtk.datamodel.interfaces.Snak;\n+import org.wikidata.wdtk.datamodel.interfaces.SnakGroup;\n+import org.wikidata.wdtk.datamodel.interfaces.Statement;\n+import org.wikidata.wdtk.datamodel.interfaces.Value;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+public class Constraint {\n+\n+    public static String CONSTRAINT_STATUS = \"P2316\";\n+    public static String CONSTRAINT_EXCEPTIONS = \"P2303\";\n+\n+    Value constraintStatus;\n+    Set<Value> constraintExceptions;", "originalCommit": "661d3223cfe3b1b6708b75c6beefb2fd3d05b94a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTgzNg==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446501836", "bodyText": "I do not think the Statement statement parameter is necessary here, I\u00a0would remove it", "author": "wetneb", "createdAt": "2020-06-27T08:37:00Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/Constraint.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.openrefine.wikidata.qa;\n+\n+import org.wikidata.wdtk.datamodel.interfaces.Snak;\n+import org.wikidata.wdtk.datamodel.interfaces.SnakGroup;\n+import org.wikidata.wdtk.datamodel.interfaces.Statement;\n+import org.wikidata.wdtk.datamodel.interfaces.Value;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+public class Constraint {\n+\n+    public static String CONSTRAINT_STATUS = \"P2316\";\n+    public static String CONSTRAINT_EXCEPTIONS = \"P2303\";\n+\n+    Value constraintStatus;\n+    Set<Value> constraintExceptions;\n+\n+    Constraint(Statement statement) {\n+        List<SnakGroup> snakGroupList = statement.getClaim().getQualifiers();\n+        for(SnakGroup group : snakGroupList) {\n+            for (Snak snak : group.getSnaks()) {\n+                if (group.getProperty().getId().equals(CONSTRAINT_STATUS)) {\n+                    constraintStatus = snak.getValue();\n+                }\n+                else if (group.getProperty().getId().equals(CONSTRAINT_EXCEPTIONS)) {\n+                    constraintExceptions.add(snak.getValue());\n+                }\n+            }\n+        }\n+    }\n+\n+    public Value getConstraintStatus(Statement statement) {", "originalCommit": "661d3223cfe3b1b6708b75c6beefb2fd3d05b94a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTg0MQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446501841", "bodyText": "How about adding Javadocs to explain the role of this class?", "author": "wetneb", "createdAt": "2020-06-27T08:37:07Z", "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/Constraint.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.openrefine.wikidata.qa;\n+\n+import org.wikidata.wdtk.datamodel.interfaces.Snak;\n+import org.wikidata.wdtk.datamodel.interfaces.SnakGroup;\n+import org.wikidata.wdtk.datamodel.interfaces.Statement;\n+import org.wikidata.wdtk.datamodel.interfaces.Value;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+public class Constraint {", "originalCommit": "661d3223cfe3b1b6708b75c6beefb2fd3d05b94a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxNzMxMA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446517310", "bodyText": "Yeah, sure!", "author": "darecoder", "createdAt": "2020-06-27T11:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMTg0MQ=="}], "type": "inlineReview"}, {"oid": "405a25aaef7d091ddad20b8682a6dfce613694f7", "url": "https://github.com/OpenRefine/OpenRefine/commit/405a25aaef7d091ddad20b8682a6dfce613694f7", "message": "Add constraint class", "committedDate": "2020-06-27T15:57:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU2MjQ1NA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446562454", "bodyText": "In general, it would be good to use better variable names: as I reader, I already know this is a Snak - this is already written as type. It would be more useful to know how it is used. Is it a main snak? A qualifier? A reference snak?\nThe same applies to all the variable names you define here.", "author": "wetneb", "createdAt": "2020-06-27T20:05:54Z", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/ConstraintTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.openrefine.wikidata.qa;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+import org.wikidata.wdtk.datamodel.helpers.Datamodel;\n+import org.wikidata.wdtk.datamodel.interfaces.Claim;\n+import org.wikidata.wdtk.datamodel.interfaces.EntityIdValue;\n+import org.wikidata.wdtk.datamodel.interfaces.ItemIdValue;\n+import org.wikidata.wdtk.datamodel.interfaces.PropertyIdValue;\n+import org.wikidata.wdtk.datamodel.interfaces.Reference;\n+import org.wikidata.wdtk.datamodel.interfaces.Snak;\n+import org.wikidata.wdtk.datamodel.interfaces.SnakGroup;\n+import org.wikidata.wdtk.datamodel.interfaces.Statement;\n+import org.wikidata.wdtk.datamodel.interfaces.StatementRank;\n+import org.wikidata.wdtk.datamodel.interfaces.Value;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class ConstraintTest {\n+\n+    public static ItemIdValue itemIdValue = Datamodel.makeWikidataItemIdValue(\"Q19474404\");\n+    public static PropertyIdValue constraintException = Datamodel.makeWikidataPropertyIdValue(\"P2303\");\n+    public static Value exceptionValue = Datamodel.makeWikidataItemIdValue(\"Q7409772\");\n+    public static PropertyIdValue constraintStatus = Datamodel.makeWikidataPropertyIdValue(\"P2316\");\n+    public static Value statusValue = Datamodel.makeWikidataItemIdValue(\"Q62026391\");\n+\n+    public static Constraint constraint;\n+    public static Statement statement;\n+\n+    @BeforeMethod\n+    public void setUp() {\n+        Snak snak1 = Datamodel.makeValueSnak(constraintException, exceptionValue);\n+        List<Snak> snakList1 = Collections.singletonList(snak1);\n+        Snak snak2 = Datamodel.makeValueSnak(constraintStatus, statusValue);", "originalCommit": "405a25aaef7d091ddad20b8682a6dfce613694f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU2NzQ2MQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446567461", "bodyText": "From Wikidata glossary https://www.wikidata.org/wiki/Wikidata:Glossary :\n\nSnak is a technical term of Wikibase software which data users are most likely to encounter when accessing Wikidata through the MediaWiki API. It refers to the combination of a property and either a value or one of the special cases \"no value\" and \"unknown value\". Snaks can be found in claims (then they are called main snaks) or in qualifiers as part of statements (then they are called qualifier snaks). E.g., in the statement \"Emma Watson was a cast member of Harry Potter and the Philosopher's Stone in the role of Hermione Granger\" there is a main snak \"was a cast member of Harry Potter and the Philosopher's Stone\" and a qualifier snak \"in the role of Hermione Granger\".", "author": "thadguidry", "createdAt": "2020-06-27T21:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU2MjQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU2ODM0MA==", "url": "https://github.com/OpenRefine/OpenRefine/pull/2822#discussion_r446568340", "bodyText": "The SnakValidator basically helps validate Snak types?  https://doc.wikimedia.org/Wikibase/master/php/classWikibase_1_1Repo_1_1Validators_1_1SnakValidator.html", "author": "thadguidry", "createdAt": "2020-06-27T21:19:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU2MjQ1NA=="}], "type": "inlineReview"}, {"oid": "0a9299f33665ac8002053356de004678eb609317", "url": "https://github.com/OpenRefine/OpenRefine/commit/0a9299f33665ac8002053356de004678eb609317", "message": "updated names", "committedDate": "2020-06-28T04:52:05Z", "type": "commit"}]}