{"pr_number": 3181, "pr_title": "Adds new Jsoup wholeText() function and tests", "pr_createdAt": "2020-09-10T20:15:04Z", "pr_url": "https://github.com/OpenRefine/OpenRefine/pull/3181", "timeline": [{"oid": "7fac9adfa7e05136b92d8a5d912387594ce4fed6", "url": "https://github.com/OpenRefine/OpenRefine/commit/7fac9adfa7e05136b92d8a5d912387594ce4fed6", "message": "Adds new Jsoup wholeText() function and tests\n- Ref: https://github.com/jhy/jsoup/blob/master/CHANGES#L275\n- Ref: https://jsoup.org/apidocs/org/jsoup/nodes/Element.html#wholeText()", "committedDate": "2020-09-10T19:50:57Z", "type": "commit"}, {"oid": "60ba667637ae47016d9285630b3a8e1b48a34fd6", "url": "https://github.com/OpenRefine/OpenRefine/commit/60ba667637ae47016d9285630b3a8e1b48a34fd6", "message": "update the description of function", "committedDate": "2020-09-10T20:17:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjUxNQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/3181#discussion_r486612515", "bodyText": "Hmm, suggestions on simplifying this?  Maybe this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"Selects the (unencoded) text of an element and its children, including any newlines and spaces present in the original and returns unencoded, un-normalized text\";\n          \n          \n            \n                    return \"Selects the (unencoded) text of an element and its children, including any newlines and spaces, and returns unencoded, un-normalized text\";", "author": "thadguidry", "createdAt": "2020-09-10T20:25:01Z", "path": "main/src/com/google/refine/expr/functions/xml/WholeText.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+\n+Copyright 2010,2011 Google Inc.\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are\n+met:\n+\n+    * Redistributions of source code must retain the above copyright\n+notice, this list of conditions and the following disclaimer.\n+    * Redistributions in binary form must reproduce the above\n+copyright notice, this list of conditions and the following disclaimer\n+in the documentation and/or other materials provided with the\n+distribution.\n+    * Neither the name of Google Inc. nor the names of its\n+contributors may be used to endorse or promote products derived from\n+this software without specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+*/\n+\n+package com.google.refine.expr.functions.xml;\n+\n+import java.util.Properties;\n+\n+import org.jsoup.nodes.Element;\n+\n+import com.google.refine.expr.EvalError;\n+import com.google.refine.grel.ControlFunctionRegistry;\n+import com.google.refine.grel.Function;\n+\n+public class WholeText implements Function {\n+\n+    @Override\n+    public Object call(Properties bindings, Object[] args) {\n+        if (args.length == 1) {\n+            Object o1 = args[0];\n+            if (o1 != null && o1 instanceof Element) {\n+                Element e1 = (Element)o1;\n+                return e1.wholeText();\n+\n+            }else{\n+                return new EvalError(ControlFunctionRegistry.getFunctionName(this) + \" failed as the first parameter is not an XML or HTML Element.  Please first use parseXml() or parseHtml() and select(query) prior to using this function\");\n+            }\n+        }\n+        return new EvalError(ControlFunctionRegistry.getFunctionName(this) + \" expects a single XML or HTML element as an argument\");\n+    }\n+\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Selects the (unencoded) text of an element and its children, including any newlines and spaces present in the original and returns unencoded, un-normalized text\";", "originalCommit": "60ba667637ae47016d9285630b3a8e1b48a34fd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyNzgyOQ==", "url": "https://github.com/OpenRefine/OpenRefine/pull/3181#discussion_r486827829", "bodyText": "Your new version works well I would say.", "author": "wetneb", "createdAt": "2020-09-11T07:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjUxNQ=="}], "type": "inlineReview"}, {"oid": "3f0192f6901c4734fd0f390b0bf65bb79ee3dfd7", "url": "https://github.com/OpenRefine/OpenRefine/commit/3f0192f6901c4734fd0f390b0bf65bb79ee3dfd7", "message": "Update main/src/com/google/refine/expr/functions/xml/WholeText.java", "committedDate": "2020-09-12T02:20:11Z", "type": "commit"}]}