{"pr_number": 1199, "pr_title": "Adds Tracing.Builder.spanHandlers() and clearSpanHandlers()", "pr_createdAt": "2020-05-10T05:06:13Z", "pr_url": "https://github.com/openzipkin/brave/pull/1199", "timeline": [{"oid": "a971d903aa8ff9dda264c10dd745c42cff611b95", "url": "https://github.com/openzipkin/brave/commit/a971d903aa8ff9dda264c10dd745c42cff611b95", "message": "Adds Tracing.Builder.spanHandlers() and clearSpanHandlers()\n\nUnlike span reporter, span handlers are additive. Unless there's a way\nto readback the current state, you cannot replace a handler of a\nspecific type or configuration. By adding the same methods as we did on\n`BaggagePropagation` for `configs()`, span handlers can be re-orderered\nor pruned.", "committedDate": "2020-05-10T05:05:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4NTYxNA==", "url": "https://github.com/openzipkin/brave/pull/1199#discussion_r422585614", "bodyText": "this test used no scoping ops", "author": "codefromthecrypt", "createdAt": "2020-05-10T05:07:30Z", "path": "brave/src/test/java/brave/features/handler/DefaultTagsTest.java", "diffHunk": "@@ -33,7 +32,6 @@\n public class DefaultTagsTest {\n   TestSpanHandler spans = new TestSpanHandler();\n   Tracing tracing = Tracing.newBuilder()\n-    .currentTraceContext(StrictCurrentTraceContext.create())", "originalCommit": "a971d903aa8ff9dda264c10dd745c42cff611b95", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}