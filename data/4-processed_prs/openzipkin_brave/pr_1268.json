{"pr_number": 1268, "pr_title": "Add error handling for `IllegalStateException`s from Kafka `Headers`", "pr_createdAt": "2020-11-02T07:36:16Z", "pr_url": "https://github.com/openzipkin/brave/pull/1268", "timeline": [{"oid": "8e9b256f8f52219b5edd0accb41ca3c1eae15b6a", "url": "https://github.com/openzipkin/brave/commit/8e9b256f8f52219b5edd0accb41ca3c1eae15b6a", "message": "Add test where injection fails", "committedDate": "2020-11-02T05:46:01Z", "type": "commit"}, {"oid": "80a878f993f06d4aba5b0f504088a7eed042aacd", "url": "https://github.com/openzipkin/brave/commit/80a878f993f06d4aba5b0f504088a7eed042aacd", "message": "Add error handling for the IllegalStateExceptions that KafkaHeaders throws", "committedDate": "2020-11-02T07:32:46Z", "type": "commit"}, {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "url": "https://github.com/openzipkin/brave/commit/15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "message": "Align formatting with upstream", "committedDate": "2020-11-02T07:33:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDUwOA==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515784508", "bodyText": "let's catch throwable vs guess which exceptions might be raised during this? less maintenance that way.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } catch (IllegalStateException e) {\n          \n          \n            \n                } catch (Throwable t) {\n          \n          \n            \n                  propagateIfFatal(t);", "author": "codefromthecrypt", "createdAt": "2020-11-02T07:39:08Z", "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/KafkaHeaders.java", "diffHunk": "@@ -17,12 +17,17 @@\n import org.apache.kafka.common.header.Header;\n import org.apache.kafka.common.header.Headers;\n \n+import static brave.kafka.clients.KafkaTracing.log;\n import static java.nio.charset.StandardCharsets.UTF_8;\n \n final class KafkaHeaders {\n   static void replaceHeader(Headers headers, String key, String value) {\n-    headers.remove(key);\n-    headers.add(key, value.getBytes(UTF_8));\n+    try {\n+      headers.remove(key);\n+      headers.add(key, value.getBytes(UTF_8));\n+    } catch (IllegalStateException e) {", "originalCommit": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4ODAyMQ==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515788021", "bodyText": "You did see that headers.remove and headers.add are both declared as throws IllegalStateException? Though since that's not a checked exception I can see the argument that it's not actually easy to maintain.", "author": "m50d", "createdAt": "2020-11-02T07:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDkwMQ==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515784901", "bodyText": "update this comment as it drifted both in the content here and the api used from logging (JUL doesn't have parameterizations)", "author": "codefromthecrypt", "createdAt": "2020-11-02T07:40:06Z", "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/KafkaTracing.java", "diffHunk": "@@ -243,4 +252,35 @@ static void addTags(ConsumerRecord<?, ?> record, SpanCustomizer result) {\n     }\n     result.tag(KafkaTags.KAFKA_TOPIC_TAG, record.topic());\n   }\n+\n+\n+  /**\n+   * Avoids array allocation when logging a parameterized message when fine level is disabled. The\n+   * second parameter is optional.\n+   *\n+   * <p>Ex.\n+   * <pre>{@code\n+   * try {\n+   *    return message.getStringProperty(name);", "originalCommit": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4OTQ4MQ==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515789481", "bodyText": "I don't quite follow? I copied this from JmsTracing, it's invoking the same API and I assume the parameterization is working (if not then it must be broken in JmsTracing as well).", "author": "m50d", "createdAt": "2020-11-02T07:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc5MDEyNw==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515790127", "bodyText": "sorry I mean \"message.getStringProperty\" is not relevant in kafka as the name is not message and there's no method getStringProperty. basically the javadoc needs a fixup.\nsimilarly the catch in the javadoc here has drifted.\nmake sense?", "author": "codefromthecrypt", "createdAt": "2020-11-02T07:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc5MjE1OA==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515792158", "bodyText": "I see - I've made the javadoc more generic (I don't think it makes sense to use an extremely specific example here as this method is general-purpose?)", "author": "m50d", "createdAt": "2020-11-02T07:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc5Nzk2Mg==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515797962", "bodyText": "I don't even mind no javadoc, just don't want it wrong :P", "author": "codefromthecrypt", "createdAt": "2020-11-02T08:10:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NTEyOA==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515785128", "bodyText": "add a test for this class that has the read-only nature that triggered all of this?", "author": "codefromthecrypt", "createdAt": "2020-11-02T07:40:42Z", "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/KafkaHeaders.java", "diffHunk": "@@ -17,12 +17,17 @@\n import org.apache.kafka.common.header.Header;\n import org.apache.kafka.common.header.Headers;\n \n+import static brave.kafka.clients.KafkaTracing.log;\n import static java.nio.charset.StandardCharsets.UTF_8;\n \n final class KafkaHeaders {", "originalCommit": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc5MTI1Mg==", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515791252", "bodyText": "Will do", "author": "m50d", "createdAt": "2020-11-02T07:55:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NTEyOA=="}], "type": "inlineReview"}, {"oid": "b080fabace985346725a11b513dcafd0cbff62c2", "url": "https://github.com/openzipkin/brave/commit/b080fabace985346725a11b513dcafd0cbff62c2", "message": "Address PR feedback", "committedDate": "2020-11-02T07:56:09Z", "type": "commit"}]}