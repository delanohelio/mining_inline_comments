{"pr_number": 1261, "pr_title": "Accept any string as zipkinServiceName parameter.", "pr_createdAt": "2020-10-17T20:20:24Z", "pr_url": "https://github.com/openzipkin/brave/pull/1261", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTc2OA==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507171768", "bodyText": "Could you maybe add a small comment what the regex is aiming to match ? Not everyone can work it out from the top of their head.", "author": "jorgheymans", "createdAt": "2020-10-18T14:45:03Z", "path": "instrumentation/p6spy/src/main/java/brave/p6spy/TracingJdbcEventListener.java", "diffHunk": "@@ -30,7 +30,7 @@\n final class TracingJdbcEventListener extends SimpleJdbcEventListener {\n \n   private static final Pattern URL_SERVICE_NAME_FINDER =\n-    Pattern.compile(\"zipkinServiceName=(\\\\w*)\");\n+    Pattern.compile(\"zipkinServiceName=(.*?)(?:&|$)\");", "originalCommit": "ea64ebb50a17562c72c55228b3686e9c883e4c9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTk5Ng==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507195996", "bodyText": "Comment included.", "author": "rgamez", "createdAt": "2020-10-18T18:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTc2OA=="}], "type": "inlineReview"}, {"oid": "e2c534fc96e9a43837b72b647551c7214460804a", "url": "https://github.com/openzipkin/brave/commit/e2c534fc96e9a43837b72b647551c7214460804a", "message": "Accept any string as zipkinServiceName parameter.\n\nAligns it with remoteServiceName that accepts any arbitrary string.", "committedDate": "2020-10-18T18:20:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTAwNg==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507255006", "bodyText": "this dep hasn't been updated since 2017, so might haunt us later. you mind switching to just using a map and calling a method not marked test for each pair here?", "author": "codefromthecrypt", "createdAt": "2020-10-18T23:35:00Z", "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({", "originalCommit": "e2c534fc96e9a43837b72b647551c7214460804a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MTkwMg==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r508081902", "bodyText": "unfortunately for junit4 there are no better alternatives, junit5 has support for this style of tests out of the box, let me see what I can do.", "author": "rgamez", "createdAt": "2020-10-19T21:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc3Mjc3MA==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r515772770", "bodyText": "Arrays.asList in a for loop is better than a dead dependency. can you do add this? I'm worried about best being enemy of good..", "author": "codefromthecrypt", "createdAt": "2020-11-02T07:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTAwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTI5Nw==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507255297", "bodyText": "empty should coerce to null, not \"default\" IMHO", "author": "codefromthecrypt", "createdAt": "2020-10-18T23:35:41Z", "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({\n+    \"?zipkinServiceName=myDatabase&foo=bar, myDatabase\",\n+    \"?zipkinServiceName=my_database&foo=bar, my_database\",\n+    \"?zipkinServiceName=my-database&foo=bar, my-database\",\n+    \"?zipkinServiceName=my-database-1&foo=bar, my-database-1\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my-database:5432&foo=bar, my-database:5432\",\n+    \"?zipkinServiceName=my-database@localhost&foo=bar, my-database@localhost\",\n+    \"?zipkinServiceName=my-database, my-database\",\n+    \"?zipkinServiceName=my-database-1&zipkinServiceName=my-database-2, my-database-1\",\n+    \"?zipkinServiceName=, default\",", "originalCommit": "e2c534fc96e9a43837b72b647551c7214460804a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MDc3OQ==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r508080779", "bodyText": "bear in mind that this parameter is an override for remoteServiceName, not providing it just results in the default (the database name) used, that's the pre-existing behaviour.", "author": "rgamez", "createdAt": "2020-10-19T21:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTI5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTY4NQ==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507255685", "bodyText": "am I reading this carefully? the service name would have a comma in it? that seems odd.. I think we should pick last instead.", "author": "codefromthecrypt", "createdAt": "2020-10-18T23:36:32Z", "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({\n+    \"?zipkinServiceName=myDatabase&foo=bar, myDatabase\",\n+    \"?zipkinServiceName=my_database&foo=bar, my_database\",\n+    \"?zipkinServiceName=my-database&foo=bar, my-database\",\n+    \"?zipkinServiceName=my-database-1&foo=bar, my-database-1\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my-database:5432&foo=bar, my-database:5432\",\n+    \"?zipkinServiceName=my-database@localhost&foo=bar, my-database@localhost\",\n+    \"?zipkinServiceName=my-database, my-database\",\n+    \"?zipkinServiceName=my-database-1&zipkinServiceName=my-database-2, my-database-1\",", "originalCommit": "e2c534fc96e9a43837b72b647551c7214460804a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MTM5Nw==", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r508081397", "bodyText": "that's just the separator between the two parameters queryString and the expected name.", "author": "rgamez", "createdAt": "2020-10-19T21:46:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTY4NQ=="}], "type": "inlineReview"}, {"oid": "419cc0d77dd7ee3e9cecdf1c6e287f56577281b7", "url": "https://github.com/openzipkin/brave/commit/419cc0d77dd7ee3e9cecdf1c6e287f56577281b7", "message": "Accept any string as zipkinServiceName parameter.\n\nAligns it with remoteServiceName that accepts any arbitrary string.", "committedDate": "2020-10-19T22:29:37Z", "type": "commit"}, {"oid": "419cc0d77dd7ee3e9cecdf1c6e287f56577281b7", "url": "https://github.com/openzipkin/brave/commit/419cc0d77dd7ee3e9cecdf1c6e287f56577281b7", "message": "Accept any string as zipkinServiceName parameter.\n\nAligns it with remoteServiceName that accepts any arbitrary string.", "committedDate": "2020-10-19T22:29:37Z", "type": "forcePushed"}]}