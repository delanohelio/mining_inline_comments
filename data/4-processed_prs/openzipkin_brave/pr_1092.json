{"pr_number": 1092, "pr_title": "Adds HttpResponse.request()", "pr_createdAt": "2020-02-23T07:29:45Z", "pr_url": "https://github.com/openzipkin/brave/pull/1092", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MjQ0NQ==", "url": "https://github.com/openzipkin/brave/pull/1092#discussion_r382972445", "bodyText": "Maybe it's worth adding Where possible, prefer to populate `{@link #request()} to provide both the method and other information that may be useful during response parsing.", "author": "anuraaga", "createdAt": "2020-02-23T07:35:58Z", "path": "instrumentation/http/src/main/java/brave/http/HttpResponse.java", "diffHunk": "@@ -28,31 +28,45 @@\n  */\n public abstract class HttpResponse extends Response {\n   /**\n-   * Like {@link HttpRequest#method()} except used in response parsing.\n+   * The request that initiated this HTTP response or {@code null} if unknown.\n    *\n-   * <p>Notably, this is used to create a route-based span name.\n+   * <p>Implementations should return the last wire-level request that caused this response or\n+   * error. HTTP properties like {@linkplain HttpRequest#path() path} and {@linkplain\n+   * HttpRequest#header(String) headers} might be different, due to redirects or authentication.\n+   * Some properties might not be visible until response processing, notably {@link #route()}.\n    *\n    * @since 5.10\n    */\n-  // TODO: Consider `httpResponse.request()` and deprecating `httpResponse.method()` #1086\n-  @Nullable public String method() {\n+  @Nullable public HttpRequest request() {\n     return null;\n   }\n \n   /**\n-   * Returns an expression such as \"/items/:itemId\" representing an application endpoint,\n-   * conventionally associated with the tag key \"http.route\". If no route matched, \"\" (empty string)\n-   * is returned. Null indicates this instrumentation doesn't understand http routes.\n+   * Returns the {@linkplain HttpRequest#method() HTTP method} of the request that caused this\n+   * response or {@code null} if unreadable.", "originalCommit": "7376780c39738fb30c2fee9bd21abb56a3ecab07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEwMjk0NA==", "url": "https://github.com/openzipkin/brave/pull/1092#discussion_r383102944", "bodyText": "sure", "author": "codefromthecrypt", "createdAt": "2020-02-24T06:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MjQ0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MjY3NQ==", "url": "https://github.com/openzipkin/brave/pull/1092#discussion_r382972675", "bodyText": "I had to do a doubletake here, it's an extra line but this could help readers\nif (caught != null) return caught;\nif (request == null) return null;\nreturn request.maybeError();", "author": "anuraaga", "createdAt": "2020-02-23T07:40:10Z", "path": "instrumentation/servlet/src/main/java/brave/servlet/HttpServletResponseWrapper.java", "diffHunk": "@@ -31,29 +30,37 @@\n // Public for use in sparkjava or other frameworks that re-use servlet types\n public class HttpServletResponseWrapper extends HttpServerResponse { // not final for inner subtype\n   /**\n-   * Looks for the {@link HttpServletRequest#setAttribute(String, Object) request attributes}\n-   * \"http.route\" and \"error\" to customize the result.\n-   *\n    * @param caught an exception caught serving the request.\n    * @since 5.10\n    */\n-  public static HttpServerResponse create(@Nullable HttpServletRequest req,\n-    HttpServletResponse res, @Nullable Throwable caught) {\n-    if (req == null) return new HttpServletResponseWrapper(res, caught);\n-    return new WithRequestProperties(req, res, caught);\n+  public static HttpServerResponse create(@Nullable HttpServletRequest request,\n+    HttpServletResponse response, @Nullable Throwable caught) {\n+    return new HttpServletResponseWrapper(request, response, caught);\n   }\n \n-  final HttpServletResponse delegate;\n+  @Nullable final HttpServletRequestWrapper request;\n+  final HttpServletResponse response;\n   @Nullable final Throwable caught;\n \n-  HttpServletResponseWrapper(HttpServletResponse delegate, @Nullable Throwable caught) {\n-    if (delegate == null) throw new NullPointerException(\"delegate == null\");\n-    this.delegate = delegate;\n+  HttpServletResponseWrapper(@Nullable HttpServletRequest request, HttpServletResponse response,\n+    @Nullable Throwable caught) {\n+    if (response == null) throw new NullPointerException(\"response == null\");\n+    this.request = request != null ? new HttpServletRequestWrapper(request) : null;\n+    this.response = response;\n     this.caught = caught;\n   }\n \n+  @Override public HttpRequest request() {\n+    return request;\n+  }\n+\n+  @Override public Throwable error() {\n+    if (caught != null || request == null) return caught;", "originalCommit": "7376780c39738fb30c2fee9bd21abb56a3ecab07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3Mjc2Nw==", "url": "https://github.com/openzipkin/brave/pull/1092#discussion_r382972767", "bodyText": "Fun to see this class get deleted", "author": "anuraaga", "createdAt": "2020-02-23T07:41:21Z", "path": "instrumentation/servlet/src/main/java/brave/servlet/HttpServletResponseWrapper.java", "diffHunk": "@@ -65,34 +72,7 @@ public static HttpServerResponse create(@Nullable HttpServletRequest req,\n     return result;\n   }\n \n-  @Override public Throwable error() {\n-    return caught;\n-  }\n-\n   @Override public final Object unwrap() {\n-    return delegate;\n-  }\n-\n-  static final class WithRequestProperties extends HttpServletResponseWrapper {", "originalCommit": "7376780c39738fb30c2fee9bd21abb56a3ecab07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEwNzE3NA==", "url": "https://github.com/openzipkin/brave/pull/1092#discussion_r383107174", "bodyText": "@anuraaga I feel like this should be on Response, not HttpResponse. We added Response in 5.10 (this pending version). If we pull it up afterwards (for Rpc) it will look awkward I think..", "author": "codefromthecrypt", "createdAt": "2020-02-24T07:05:55Z", "path": "instrumentation/http/src/main/java/brave/http/HttpResponse.java", "diffHunk": "@@ -28,31 +28,45 @@\n  */\n public abstract class HttpResponse extends Response {\n   /**\n-   * Like {@link HttpRequest#method()} except used in response parsing.\n+   * The request that initiated this HTTP response or {@code null} if unknown.\n    *\n-   * <p>Notably, this is used to create a route-based span name.\n+   * <p>Implementations should return the last wire-level request that caused this response or\n+   * error. HTTP properties like {@linkplain HttpRequest#path() path} and {@linkplain\n+   * HttpRequest#header(String) headers} might be different, due to redirects or authentication.\n+   * Some properties might not be visible until response processing, notably {@link #route()}.\n    *\n    * @since 5.10\n    */\n-  // TODO: Consider `httpResponse.request()` and deprecating `httpResponse.method()` #1086\n-  @Nullable public String method() {\n+  @Nullable public HttpRequest request() {", "originalCommit": "7376780c39738fb30c2fee9bd21abb56a3ecab07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyOTY3OA==", "url": "https://github.com/openzipkin/brave/pull/1092#discussion_r383129678", "bodyText": "Ah yeah that makes sense to me", "author": "anuraaga", "createdAt": "2020-02-24T08:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEwNzE3NA=="}], "type": "inlineReview"}, {"oid": "9c266997ab23cd88d5b93d611001161a139bce44", "url": "https://github.com/openzipkin/brave/commit/9c266997ab23cd88d5b93d611001161a139bce44", "message": "feedback + make compile", "committedDate": "2020-02-24T07:17:53Z", "type": "forcePushed"}, {"oid": "40821d118043b77bd3ed366fdf6e5b9df8a0d11b", "url": "https://github.com/openzipkin/brave/commit/40821d118043b77bd3ed366fdf6e5b9df8a0d11b", "message": "response", "committedDate": "2020-02-24T11:05:53Z", "type": "forcePushed"}, {"oid": "a202584c03a487b4d4af47ef98d6a8d3ad8414d4", "url": "https://github.com/openzipkin/brave/commit/a202584c03a487b4d4af47ef98d6a8d3ad8414d4", "message": "WIP: Adds HttpResponse.request()\n\nThis adds nullable `HttpResponse.request()` per discussion in #1086\n\nThis doesn't deprecate method or route as there are a couple places you\ncan't see the request (unless we propagate it ourselves). Also, we have\na scenario in vert.x where the data holding the route isn't on the\nrequest.\n\nFixes #1086", "committedDate": "2020-02-25T02:18:31Z", "type": "commit"}, {"oid": "2919e4d0acf09371cf4b80af1ef0ab0ff054065e", "url": "https://github.com/openzipkin/brave/commit/2919e4d0acf09371cf4b80af1ef0ab0ff054065e", "message": "feedback + make compile", "committedDate": "2020-02-25T02:18:31Z", "type": "commit"}, {"oid": "afa820f3ce630cf302fa24ceb6d27f4502115ed5", "url": "https://github.com/openzipkin/brave/commit/afa820f3ce630cf302fa24ceb6d27f4502115ed5", "message": "response", "committedDate": "2020-02-25T02:18:31Z", "type": "commit"}, {"oid": "d98fc52b84f3a2a2fed4ba32d8329b5da90aac82", "url": "https://github.com/openzipkin/brave/commit/d98fc52b84f3a2a2fed4ba32d8329b5da90aac82", "message": "backport progress", "committedDate": "2020-02-25T02:18:31Z", "type": "commit"}, {"oid": "841fdabb14bd6aba4a5f100b6cbec32fd75c1486", "url": "https://github.com/openzipkin/brave/commit/841fdabb14bd6aba4a5f100b6cbec32fd75c1486", "message": "finishing touches", "committedDate": "2020-02-25T02:18:31Z", "type": "commit"}, {"oid": "1f49c3ec1a229c285977368f64baeb0546899b4e", "url": "https://github.com/openzipkin/brave/commit/1f49c3ec1a229c285977368f64baeb0546899b4e", "message": "fuzz", "committedDate": "2020-02-25T02:19:54Z", "type": "commit"}, {"oid": "1f49c3ec1a229c285977368f64baeb0546899b4e", "url": "https://github.com/openzipkin/brave/commit/1f49c3ec1a229c285977368f64baeb0546899b4e", "message": "fuzz", "committedDate": "2020-02-25T02:19:54Z", "type": "forcePushed"}]}