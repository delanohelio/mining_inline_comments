{"pr_number": 6888, "pr_title": "Rework MongoDB package layout", "pr_createdAt": "2020-05-30T20:15:51Z", "pr_url": "https://github.com/realm/realm-java/pull/6888", "timeline": [{"oid": "0225e419f9704743606a200ea4eb84f7e926e8bb", "url": "https://github.com/realm/realm-java/commit/0225e419f9704743606a200ea4eb84f7e926e8bb", "message": "First brute rearranging", "committedDate": "2020-05-29T12:23:51Z", "type": "commit"}, {"oid": "002c519a8cb50d10cba866b5e93f393537f6fe4a", "url": "https://github.com/realm/realm-java/commit/002c519a8cb50d10cba866b5e93f393537f6fe4a", "message": "Strip Realm from MongoDB classes", "committedDate": "2020-05-30T09:21:49Z", "type": "commit"}, {"oid": "f9568da3fa26291d778ee1750212c8e7d2d5d4aa", "url": "https://github.com/realm/realm-java/commit/f9568da3fa26291d778ee1750212c8e7d2d5d4aa", "message": "Fix JNI linking after restructuring", "committedDate": "2020-05-30T09:21:55Z", "type": "commit"}, {"oid": "9afd52800ec4075b60d0d275375672462c310baa", "url": "https://github.com/realm/realm-java/commit/9afd52800ec4075b60d0d275375672462c310baa", "message": "Documentation update and FIXMEs", "committedDate": "2020-05-30T09:21:55Z", "type": "commit"}, {"oid": "27b22076a6b683e11251b5a6fa0b3798a9b0e026", "url": "https://github.com/realm/realm-java/commit/27b22076a6b683e11251b5a6fa0b3798a9b0e026", "message": "Trying to update test to mongodb structure", "committedDate": "2020-05-30T09:22:59Z", "type": "commit"}, {"oid": "ec5883528d7d3aca1321b5d3ce79eaa544a5cab5", "url": "https://github.com/realm/realm-java/commit/ec5883528d7d3aca1321b5d3ce79eaa544a5cab5", "message": "Merge branch 'v10' into cr/mongodb-restructuring", "committedDate": "2020-05-30T09:44:38Z", "type": "commit"}, {"oid": "23c25d4b5f614648dd8ac06e68bc47b629000a73", "url": "https://github.com/realm/realm-java/commit/23c25d4b5f614648dd8ac06e68bc47b629000a73", "message": "fixup! Fix JNI linking after restructuring", "committedDate": "2020-05-30T13:12:19Z", "type": "commit"}, {"oid": "89b9f882710c890d6c7638aadea9fb3b0c80b152", "url": "https://github.com/realm/realm-java/commit/89b9f882710c890d6c7638aadea9fb3b0c80b152", "message": "Fix examples", "committedDate": "2020-05-30T13:13:04Z", "type": "commit"}, {"oid": "3566a2f90e53ae779599c7bc180ed065b8110c48", "url": "https://github.com/realm/realm-java/commit/3566a2f90e53ae779599c7bc180ed065b8110c48", "message": "Fix test without resolving all API leaks", "committedDate": "2020-05-30T15:53:01Z", "type": "commit"}, {"oid": "d2ada90a34ed91b6a3db34a1e965ca37c2288d94", "url": "https://github.com/realm/realm-java/commit/d2ada90a34ed91b6a3db34a1e965ca37c2288d94", "message": "Fix build errors", "committedDate": "2020-05-30T17:15:45Z", "type": "commit"}, {"oid": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "url": "https://github.com/realm/realm-java/commit/de6d5ad39c0e18a660e6ad075f34a70291d58241", "message": "Fix recovery error", "committedDate": "2020-05-30T20:06:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjU5NQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432952595", "bodyText": "What does this do?", "author": "cmelchior", "createdAt": "2020-05-31T14:27:30Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/AppExt.kt", "diffHunk": "@@ -13,28 +13,32 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.realm\n+package io.realm.mongodb\n \n+import io.realm.BaseRealmExt\n import io.realm.admin.ServerAdmin\n+import io.realm.test_clear\n+import io.realm.mongodb.sync.test_reset\n \n /**\n  * Resets the Realm Application and delete all local state.\n  *\n  * Trying to access any Sync or Realm App API's after this has been called has undefined\n  * behavior.\n  */\n-fun RealmApp.close() {\n+fun App.close() {\n     ServerAdmin().deleteAllUsers()\n-    this.syncManager.reset()\n-    RealmApp.CREATED = false\n-    BaseRealm.applicationContext = null // Required for Realm.init() to work\n+    this.syncManager.test_reset()\n+    this.networkTransport.resetHeaders()\n+    App.CREATED = false\n+    BaseRealmExt.test_clear()", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNzA4Mw==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r433737083", "bodyText": "Works around that BaseRealm.applicationContext is package protected. BaseRealmExt is a public extension to BaseRealm, but in same package as BaseRealm, which allows us to clear the context for test purpose. Overall trying to allow tests to be in io.realm to ensure that we test public APIs, with as few hooks into protected state as possible.", "author": "rorbech", "createdAt": "2020-06-02T09:18:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjY3OQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432952679", "bodyText": "Schema has a public list of classes, probably we can just look them up through that instead", "author": "cmelchior", "createdAt": "2020-05-31T14:28:31Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SessionTests.kt", "diffHunk": "@@ -211,7 +217,8 @@ class SessionTests {\n \n                     // opening a Dynamic Realm should also work\n                     DynamicRealm.getInstance(backupRealmConfiguration).use { dynamicRealm ->\n-                        dynamicRealm.schema.checkHasTable(StringOnly.CLASS_NAME, \"Dynamic Realm should contains \" + StringOnly.CLASS_NAME)\n+                        // FIXME How to get access to dynamicRealm.schme.checkHasTable\n+//                        dynamicRealm.schema.checkHasTable(StringOnly.CLASS_NAME, \"Dynamic Realm should contains \" + StringOnly.CLASS_NAME)", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1Mjg4NQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432952885", "bodyText": "if it isn't public, it probably should be.", "author": "cmelchior", "createdAt": "2020-05-31T14:31:12Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SyncConfigurationTests.kt", "diffHunk": "@@ -163,7 +168,8 @@ class SyncConfigurationTests {\n                     }\n                 })\n                 .build()\n-        assertNotNull(config.initialDataTransaction)\n+        // FIXME How to verify this without access to initialDataTransaction\n+//        assertNotNull(config.initialDataTransaction)", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcyNjkyNA==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r433726924", "bodyText": "There was actually a package protected access on RealmConfiguration so I just updraded it to protected. Could make it public if that makes sense, but to me it seems ok to leave non-public.", "author": "rorbech", "createdAt": "2020-06-02T09:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1Mjg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjkxMA==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432952910", "bodyText": "testReset? test_reset() looks very c++.", "author": "cmelchior", "createdAt": "2020-05-31T14:31:34Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SyncExt.kt", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.realm.mongodb.sync\n+\n+// Helper to expose package protected methods for testing purpose\n+fun Sync.test_reset() {", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MzE0Mg==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432953142", "bodyText": "We mostly use this to check that people called Realm.init() as it loaded the native code and make sure we have a reference to getFilesDir.\nIf we must make it public, it would make most sense to have it on Realm I think.", "author": "cmelchior", "createdAt": "2020-05-31T14:34:04Z", "path": "realm/realm-library/src/main/java/io/realm/BaseRealm.java", "diffHunk": "@@ -147,6 +147,14 @@ public void onInit(OsSharedRealm sharedRealm) {\n         this.shouldCloseSharedRealm = false;\n     }\n \n+    // FIXME Could we put this in Realm.getApplicationContext() only. Do not know why this lives\n+    //  on BaseRealm as it is never initialized/used for DynamicRealm, so might as well just\n+    //  be on Realm.\n+    // FIXME Review public exposure - Needed from <X>Configuration.Builder. Can we expose this? Alternatively required as argument to <X>Configruation.Builders\n+    public static Context getApplicationContext() {", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1NDk1MA==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r434154950", "bodyText": "I added it as Realm.getApplicationContext()", "author": "rorbech", "createdAt": "2020-06-02T20:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MzE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MzI2Mw==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432953263", "bodyText": "Having this public feels problematic. What classes need to call this that don't live in io.realm ?", "author": "cmelchior", "createdAt": "2020-05-31T14:35:23Z", "path": "realm/realm-library/src/main/java/io/realm/DynamicRealm.java", "diffHunk": "@@ -333,7 +333,8 @@ public DynamicRealm freeze() {\n      *\n      * @param version the schema version to be set.\n      */\n-    void setVersion(long version) {\n+    // FIXME Review public exposure - Test only can be hidden by extension functions\n+    public void setVersion(long version) {", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1ODI5NQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r433758295", "bodyText": "Yes it is problematic. It was used from SyncedRealmMigrationTests Moved SyncedRealmMigrationTests to io.realm and added an extension method SyncConfiguration.Builder.testSchema as that was the only reason for putting it in io.realm.mongodb.sync.", "author": "rorbech", "createdAt": "2020-06-02T09:54:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MzI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MzMzNQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r432953335", "bodyText": "Probably doesn't hurt, although it does bloat the public API for very little value.", "author": "cmelchior", "createdAt": "2020-05-31T14:36:07Z", "path": "realm/realm-library/src/main/java/io/realm/RealmConfiguration.java", "diffHunk": "@@ -435,7 +435,8 @@ public String toString() {\n      * @return {@code true} if RxJava dependency exist, {@code false} otherwise.\n      */\n     @SuppressWarnings(\"LiteralClassName\")\n-    static synchronized boolean isRxJavaAvailable() {\n+    // FIXME Review public exposure - Needed from SyncConfiguration.Builder can we expose this?\n+    public static synchronized boolean isRxJavaAvailable() {", "originalCommit": "de6d5ad39c0e18a660e6ad075f34a70291d58241", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc0MDYwNQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r433740605", "bodyText": "Yep. Will move it to internal util.", "author": "rorbech", "createdAt": "2020-06-02T09:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MzMzNQ=="}], "type": "inlineReview"}, {"oid": "10aa6a4f32974d3ffcbda5599052086ead75a9d6", "url": "https://github.com/realm/realm-java/commit/10aa6a4f32974d3ffcbda5599052086ead75a9d6", "message": "Convert utility classes to Kotlin after moving it to Kotlin source set", "committedDate": "2020-06-02T06:48:05Z", "type": "commit"}, {"oid": "7be833022a12581d9e6e48d8eabee7f4a5ebfd3f", "url": "https://github.com/realm/realm-java/commit/7be833022a12581d9e6e48d8eabee7f4a5ebfd3f", "message": "Move Request to internal mongodb package", "committedDate": "2020-06-02T07:36:09Z", "type": "commit"}, {"oid": "71da6bf316144852ee3ca2e85ed7560bc062b9f5", "url": "https://github.com/realm/realm-java/commit/71da6bf316144852ee3ca2e85ed7560bc062b9f5", "message": "Move isRxJavaAvailable to internal Utils", "committedDate": "2020-06-02T07:37:11Z", "type": "commit"}, {"oid": "9cf48ea0a174aeb369fd67d4ea134df10dfbe85b", "url": "https://github.com/realm/realm-java/commit/9cf48ea0a174aeb369fd67d4ea134df10dfbe85b", "message": "Revert \"Convert utility classes to Kotlin after moving it to Kotlin source set\"\n\nThis reverts commit 10aa6a4f32974d3ffcbda5599052086ead75a9d6.", "committedDate": "2020-06-02T07:58:41Z", "type": "commit"}, {"oid": "f58feb9168136a9303bfbe96e141d6475631e3be", "url": "https://github.com/realm/realm-java/commit/f58feb9168136a9303bfbe96e141d6475631e3be", "message": "Hide App.networkTransport", "committedDate": "2020-06-02T08:05:33Z", "type": "commit"}, {"oid": "9d29f7a9f454f5e8b837da9d1d93dc8d63bbf577", "url": "https://github.com/realm/realm-java/commit/9d29f7a9f454f5e8b837da9d1d93dc8d63bbf577", "message": "Hide App.nativePtr", "committedDate": "2020-06-02T10:47:27Z", "type": "commit"}, {"oid": "6d987c06fa6855aa4761fe50a63ee43b10467b46", "url": "https://github.com/realm/realm-java/commit/6d987c06fa6855aa4761fe50a63ee43b10467b46", "message": "Resolve public exposure of DynamicRealm.setVersion", "committedDate": "2020-06-02T10:47:28Z", "type": "commit"}, {"oid": "8948c6fd5963e5e4905e38305a1b4b775036a50a", "url": "https://github.com/realm/realm-java/commit/8948c6fd5963e5e4905e38305a1b4b775036a50a", "message": "Rename test extension methods uniformly", "committedDate": "2020-06-02T10:47:28Z", "type": "commit"}, {"oid": "4306c5942dd2c0a9759a32ddedc24a0f3d9ea41e", "url": "https://github.com/realm/realm-java/commit/4306c5942dd2c0a9759a32ddedc24a0f3d9ea41e", "message": "Reworked bypassed asserts", "committedDate": "2020-06-02T10:47:28Z", "type": "commit"}, {"oid": "b20f667736a514e5b79fe5e346ef2c64b05db2d8", "url": "https://github.com/realm/realm-java/commit/b20f667736a514e5b79fe5e346ef2c64b05db2d8", "message": "Documentation updates", "committedDate": "2020-06-02T10:47:28Z", "type": "commit"}, {"oid": "b3e32464e75195be28675c4d7b5ece948e1da5fd", "url": "https://github.com/realm/realm-java/commit/b3e32464e75195be28675c4d7b5ece948e1da5fd", "message": "Leave Java test utils in Java source set", "committedDate": "2020-06-02T10:56:23Z", "type": "commit"}, {"oid": "610e15285a9d72d6e076626ff1ae02063bf0cdf2", "url": "https://github.com/realm/realm-java/commit/610e15285a9d72d6e076626ff1ae02063bf0cdf2", "message": "Add public Realm.getApplicationContext()", "committedDate": "2020-06-02T12:27:23Z", "type": "commit"}, {"oid": "22a99303bc6d241464b08e3c7730ca777e44a721", "url": "https://github.com/realm/realm-java/commit/22a99303bc6d241464b08e3c7730ca777e44a721", "message": "Add Java test utils source to kotlin-extension android test source set", "committedDate": "2020-06-02T12:40:10Z", "type": "commit"}, {"oid": "8e5d12f2d6418d13b0ad04854a86451a8907c2f6", "url": "https://github.com/realm/realm-java/commit/8e5d12f2d6418d13b0ad04854a86451a8907c2f6", "message": "Fix BaseRealmExt->RealmExt renaming errors for kotlin-extension tests", "committedDate": "2020-06-02T13:05:08Z", "type": "commit"}, {"oid": "aaa2dba54b1ee66178ea3c261b7a0825323a0a2a", "url": "https://github.com/realm/realm-java/commit/aaa2dba54b1ee66178ea3c261b7a0825323a0a2a", "message": "Merge branch 'v10' into cr/mongodb-restructuring\n\n# Conflicts:\n#\trealm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java", "committedDate": "2020-06-03T08:16:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5MjgzNw==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r434392837", "bodyText": "Since this now lives in internal, it is perfectly fine to have public constructors. So this FIXME can probably just be removed", "author": "cmelchior", "createdAt": "2020-06-03T08:21:59Z", "path": "realm/realm-library/src/objectServer/java/io/realm/internal/mongodb/Request.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.realm.internal.mongodb;\n+\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+import javax.annotation.Nullable;\n+\n+import io.realm.RealmAsyncTask;\n+import io.realm.internal.RealmNotifier;\n+import io.realm.internal.android.AndroidCapabilities;\n+import io.realm.internal.android.AndroidRealmNotifier;\n+import io.realm.internal.async.RealmAsyncTaskImpl;\n+import io.realm.log.RealmLog;\n+import io.realm.mongodb.App;\n+import io.realm.mongodb.ErrorCode;\n+import io.realm.mongodb.ObjectServerError;\n+\n+// Class wrapping requests made against MongoDB Realm. Is also responsible for calling with success/error on the\n+// correct thread.\n+public abstract class Request<T> {\n+    @Nullable\n+    private final App.Callback<T> callback;\n+    private final RealmNotifier handler;\n+    private final ThreadPoolExecutor networkPoolExecutor;\n+\n+    // FIXME Made public to use in Functions. Consider reworking when App, User is moved", "originalCommit": "aaa2dba54b1ee66178ea3c261b7a0825323a0a2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5ODg2MA==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r434398860", "bodyText": "Not 100% sure I understand why adding this is better than just renaming the schema method?", "author": "cmelchior", "createdAt": "2020-06-03T08:31:41Z", "path": "realm/realm-library/src/syncTestUtils/kotlin/io/realm/mongodb/sync/SyncConfigurationExt.kt", "diffHunk": "@@ -16,8 +16,13 @@\n \n package io.realm.mongodb.sync\n \n+import io.realm.RealmModel\n import io.realm.internal.OsRealmConfig\n \n-fun SyncConfiguration.Builder.test_sessionStopPolicy(policy: OsRealmConfig.SyncSessionStopPolicy): SyncConfiguration.Builder {\n+fun SyncConfiguration.Builder.testSchema(firstClass: Class<out RealmModel>, vararg x: Class<out RealmModel> ) : SyncConfiguration.Builder {", "originalCommit": "aaa2dba54b1ee66178ea3c261b7a0825323a0a2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwMjA1MQ==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r434402051", "bodyText": "The schema method is package protected, so all tests using this would have to be in the io.realm.mongodb.sync packages. As the tests are also relating on other package protected methods from io.realm and io.realm.mongodb we cannot resolve all package private access by placing it in one of the packages. Thus adding test-only extension methods to workaround this. Alternative would be to subclass, but as almost all tests are in Kotlin now, I just went for the extensions.", "author": "rorbech", "createdAt": "2020-06-03T08:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5ODg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwMjYxMA==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r434402610", "bodyText": "Ah okay. That sounds fine then \ud83d\udc4d", "author": "cmelchior", "createdAt": "2020-06-03T08:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5ODg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNTA2MA==", "url": "https://github.com/realm/realm-java/pull/6888#discussion_r434405060", "bodyText": "We could even remove some of these test-only internal methods to reduce the number of symbols now that it is so much easier to extend class from outside.", "author": "rorbech", "createdAt": "2020-06-03T08:42:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5ODg2MA=="}], "type": "inlineReview"}, {"oid": "51fa3f8bd6200d93bc7bdc979a3bb214ad2d735e", "url": "https://github.com/realm/realm-java/commit/51fa3f8bd6200d93bc7bdc979a3bb214ad2d735e", "message": "Remove deprecated FIXME", "committedDate": "2020-06-03T08:38:38Z", "type": "commit"}]}