{"pr_number": 7041, "pr_title": "Improved metrics", "pr_createdAt": "2020-08-18T09:01:32Z", "pr_url": "https://github.com/realm/realm-java/pull/7041", "timeline": [{"oid": "e7746d2976cf08166d7e0d0c281a93619bf8b647", "url": "https://github.com/realm/realm-java/commit/e7746d2976cf08166d7e0d0c281a93619bf8b647", "message": "Update kotlin and target metric", "committedDate": "2020-08-18T08:04:58Z", "type": "commit"}, {"oid": "9662a4742bc6980ddee0ca457c176f5321f43bd7", "url": "https://github.com/realm/realm-java/commit/9662a4742bc6980ddee0ca457c176f5321f43bd7", "message": "Add segment/s3 metric upload", "committedDate": "2020-08-18T08:57:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzMjU0NA==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472332544", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.debug(\"ignoring: \", ignored);\n          \n          \n            \n                        logger.debug(\"Ignoring: \", ignored);", "author": "cmelchior", "createdAt": "2020-08-18T16:39:30Z", "path": "realm-transformer/src/main/java/io/realm/transformer/UrlEncodedAnalytics.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package io.realm.transformer;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.SocketException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+\n+\n+\n+public class UrlEncodedAnalytics {\n+\n+    private Logger logger = LoggerFactory.getLogger(\"realm-logger\");\n+\n+    private String prefix;\n+    private String suffix;\n+\n+    public UrlEncodedAnalytics(String prefix, String suffix) {\n+        this.prefix = prefix;\n+        this.suffix = suffix;\n+    }\n+\n+    public void execute(RealmAnalytics analytics) {\n+        try {\n+            URL url = getUrl(analytics);\n+\n+            logger.debug(\"submitting: \" + url);\n+\n+            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.connect();\n+            logger.debug(\"submitted: \" +  connection.getResponseCode() + \" \" + url);\n+            connection.getResponseCode();\n+        } catch (Exception ignored) {\n+            logger.debug(\"ignoring: \", ignored);", "originalCommit": "9662a4742bc6980ddee0ca457c176f5321f43bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzMzAzNg==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472333036", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.debug(\"submitting: \" + url);\n          \n          \n            \n                        logger.debug(\"Submitting: \" + url);", "author": "cmelchior", "createdAt": "2020-08-18T16:40:12Z", "path": "realm-transformer/src/main/java/io/realm/transformer/UrlEncodedAnalytics.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package io.realm.transformer;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.SocketException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+\n+\n+\n+public class UrlEncodedAnalytics {\n+\n+    private Logger logger = LoggerFactory.getLogger(\"realm-logger\");\n+\n+    private String prefix;\n+    private String suffix;\n+\n+    public UrlEncodedAnalytics(String prefix, String suffix) {\n+        this.prefix = prefix;\n+        this.suffix = suffix;\n+    }\n+\n+    public void execute(RealmAnalytics analytics) {\n+        try {\n+            URL url = getUrl(analytics);\n+\n+            logger.debug(\"submitting: \" + url);", "originalCommit": "9662a4742bc6980ddee0ca457c176f5321f43bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzNDI1NA==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472334254", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.debug(\"submitted: \" +  connection.getResponseCode() + \" \" + url);\n          \n          \n            \n                        logger.debug(\"Submitted: \" +  connection.getResponseCode() + \" \" + url);", "author": "cmelchior", "createdAt": "2020-08-18T16:42:02Z", "path": "realm-transformer/src/main/java/io/realm/transformer/UrlEncodedAnalytics.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package io.realm.transformer;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.SocketException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+\n+\n+\n+public class UrlEncodedAnalytics {\n+\n+    private Logger logger = LoggerFactory.getLogger(\"realm-logger\");\n+\n+    private String prefix;\n+    private String suffix;\n+\n+    public UrlEncodedAnalytics(String prefix, String suffix) {\n+        this.prefix = prefix;\n+        this.suffix = suffix;\n+    }\n+\n+    public void execute(RealmAnalytics analytics) {\n+        try {\n+            URL url = getUrl(analytics);\n+\n+            logger.debug(\"submitting: \" + url);\n+\n+            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.connect();\n+            logger.debug(\"submitted: \" +  connection.getResponseCode() + \" \" + url);", "originalCommit": "9662a4742bc6980ddee0ca457c176f5321f43bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzNTEwNw==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472335107", "bodyText": "Is the dependency name just the \"middle\" part? e.g. this would normally be org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72, so it doesn't start with org. ?", "author": "cmelchior", "createdAt": "2020-08-18T16:43:28Z", "path": "realm-transformer/src/main/kotlin/io/realm/transformer/RealmTransformer.kt", "diffHunk": "@@ -133,19 +137,14 @@ class RealmTransformer(val project: Project) : Transform() {\n             }\n \n             var containsKotlin = false\n-\n+            // Should be safe to iterate the configurations as we are way beyond the configuration\n+            // phase\n             outer@\n-            for(input: TransformInput in inputs) {\n-                for (di: DirectoryInput in input.directoryInputs) {\n-                    val path: String = di.file.absolutePath\n-                    val index: Int = path.indexOf(\"build${File.separator}intermediates${File.separator}classes\")\n-                    if (index != -1) {\n-                        val projectPath: String = path.substring(0, index)\n-                        val buildFile = File(projectPath + \"build.gradle\")\n-                        if (buildFile.exists() && buildFile.readText().contains(\"kotlin\")) {\n-                            containsKotlin = true\n-                            break@outer\n-                        }\n+            for (configuration in project.configurations) {\n+                for (dependency in configuration.dependencies) {\n+                    if (dependency.name.startsWith(\"kotlin-stdlib\")) {", "originalCommit": "9662a4742bc6980ddee0ca457c176f5321f43bd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc3MjA5OA==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472772098", "bodyText": "Format is <group>:<name>:<version>. Seems to do the right thing...as opposed to the old one which I printed after the /\nAnalyzed:  name=compatibilityExample,           containsKotlin=true/false,   sync=true,   targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=encryptionExample,              containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=gridViewExample,                containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=introExample,                   containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=jsonExample,                    containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=kotlinExample,                  containsKotlin=true/false,   sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=migrationExample,               containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=mongoDbRealmExample,            containsKotlin=true/false,   sync=true,   targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=multiprocessExample,            containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=newsreaderExample,              containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=rxJavaExample,                  containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=threadExample,                  containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=unitTestExample,                containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app\nAnalyzed:  name=library,                        containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=library\nAnalyzed:  name=app,                            containsKotlin=false/false,  sync=false,  targetSdk=29,  minSdk=16,  target=app", "author": "rorbech", "createdAt": "2020-08-19T06:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzNTEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc3MzAyNw==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472773027", "bodyText": "Cool \ud83d\udc4d", "author": "cmelchior", "createdAt": "2020-08-19T06:50:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzNTEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzNjQ1MA==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472336450", "bodyText": "Nitpick. I would check for each case specifically and if we couldn't detect either app or library use \"unknown\"?", "author": "cmelchior", "createdAt": "2020-08-18T16:45:46Z", "path": "realm-transformer/src/main/kotlin/io/realm/transformer/RealmTransformer.kt", "diffHunk": "@@ -154,8 +153,17 @@ class RealmTransformer(val project: Project) : Transform() {\n             val targetSdk: String? = project.getTargetSdk()\n             val minSdk: String?  = project.getMinSdk()\n             val sync: Boolean = Utils.isSyncEnabled(project)\n-            val analytics = RealmAnalytics(packages, containsKotlin, sync, targetSdk, minSdk)\n-            analytics.execute()\n+            val app = project.plugins.findPlugin(\"com.android.application\") != null", "originalCommit": "9662a4742bc6980ddee0ca457c176f5321f43bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2fb3c22bc31237f037cbfe8d89b166fcd64364e9", "url": "https://github.com/realm/realm-java/commit/2fb3c22bc31237f037cbfe8d89b166fcd64364e9", "message": "Updates from review comments", "committedDate": "2020-08-19T06:51:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwNTE0Ng==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472905146", "bodyText": "Remove this?", "author": "cmelchior", "createdAt": "2020-08-19T09:49:17Z", "path": "realm-transformer/src/main/java/io/realm/transformer/UrlEncodedAnalytics.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.realm.transformer;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.SocketException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+\n+\n+\n+public class UrlEncodedAnalytics {\n+\n+    private String prefix;\n+    private String suffix;\n+\n+    public UrlEncodedAnalytics(String prefix, String suffix) {\n+        this.prefix = prefix;\n+        this.suffix = suffix;\n+    }\n+\n+    public void execute(RealmAnalytics analytics) {\n+        try {\n+            URL url = getUrl(analytics);\n+\n+            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.connect();\n+            connection.getResponseCode();\n+        } catch (Exception ignored) {\n+        }\n+    }\n+\n+    private URL getUrl(RealmAnalytics analytics) throws\n+            MalformedURLException,\n+            SocketException,\n+            NoSuchAlgorithmException,\n+            UnsupportedEncodingException {\n+        return new URL(prefix + Utils.base64Encode(analytics.generateJson()) + suffix);\n+    }\n+\n+    public static class MixPanel extends UrlEncodedAnalytics {\n+        private static final String ADDRESS_PREFIX = \"https://api.mixpanel.com/track/?data=\";\n+        private static final String ADDRESS_SUFFIX = \"&ip=1\";\n+\n+        public MixPanel() {\n+            super(ADDRESS_PREFIX, ADDRESS_SUFFIX);\n+        }\n+    }\n+\n+    public static class Segment extends UrlEncodedAnalytics {\n+        // FIXME", "originalCommit": "2fb3c22bc31237f037cbfe8d89b166fcd64364e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxMDA4NQ==", "url": "https://github.com/realm/realm-java/pull/7041#discussion_r472910085", "bodyText": "Yep. The webhook-part is still in review, so still need to update the actual URL when it is done. I accidentially made a non-draft PR and got away from converting it.", "author": "rorbech", "createdAt": "2020-08-19T09:58:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwNTE0Ng=="}], "type": "inlineReview"}, {"oid": "9e0b932ba626b2094ac67469e68cec7d94827db1", "url": "https://github.com/realm/realm-java/commit/9e0b932ba626b2094ac67469e68cec7d94827db1", "message": "Update segment metric URL", "committedDate": "2020-08-27T07:46:45Z", "type": "commit"}]}