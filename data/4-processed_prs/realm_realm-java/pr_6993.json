{"pr_number": 6993, "pr_title": "Enable and fix link user tests", "pr_createdAt": "2020-07-08T08:05:05Z", "pr_url": "https://github.com/realm/realm-java/pull/6993", "timeline": [{"oid": "578c163b028d32ee09c8e7651ae7e5db2bde0cb5", "url": "https://github.com/realm/realm-java/commit/578c163b028d32ee09c8e7651ae7e5db2bde0cb5", "message": "Enable and fix link user tests", "committedDate": "2020-07-08T08:02:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM1OTYwMw==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r451359603", "bodyText": "If the user had >1 identities a out of bounds exception was risen.", "author": "clementetb", "createdAt": "2020-07-08T08:06:44Z", "path": "realm/realm-library/src/objectServer/java/io/realm/internal/objectstore/OsSyncUser.java", "diffHunk": "@@ -108,7 +108,7 @@ public String getRefreshToken() {\n         @SuppressWarnings(\"unchecked\")\n         Pair<String, String>[] identities = new Pair[identityData.length/2];\n         for (int i = 0; i < identityData.length; i = i + 2) {\n-            identities[i] = new Pair<>(identityData[i], identityData[i+1]);\n+            identities[i/2] = new Pair<>(identityData[i], identityData[i+1]);", "originalCommit": "578c163b028d32ee09c8e7651ae7e5db2bde0cb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM2MDQ1MQ==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r451360451", "bodyText": "While testing the error the app returns is an INVALID_SESSION instead of a BAD_REQUEST.\nChanged the test to match the returning error.", "author": "clementetb", "createdAt": "2020-07-08T08:08:11Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserTests.kt", "diffHunk": "@@ -183,34 +179,34 @@ class UserTests {\n         assertTrue(anonUser === linkedUser)\n         assertEquals(2, linkedUser.identities.size)\n         assertEquals(Credentials.IdentityProvider.EMAIL_PASSWORD, linkedUser.identities[1].provider)\n-        admin.setAutomaticConfirmation(enabled = true)\n \n         val otherEmail = TestHelper.getRandomEmail()\n         val otherPassword = \"123456\"\n         app.emailPasswordAuth.registerUser(otherEmail, otherPassword)\n-        linkedUser = anonUser.linkCredentials(Credentials.emailPassword(email, password))\n-        assertTrue(anonUser === linkedUser)\n-        assertEquals(3, linkedUser.identities.size)\n-        assertEquals(Credentials.IdentityProvider.EMAIL_PASSWORD, linkedUser.identities[2].provider)\n+\n+        val credentials = Credentials.emailPassword(otherEmail, otherPassword)\n+\n+        // Validate that we cannot link a second set of credentials\n+        assertFails {\n+            linkedUser = anonUser.linkCredentials(credentials)\n+        }\n+\n         admin.setAutomaticConfirmation(enabled = true)\n     }\n \n-    @Ignore(\"FIXME: Wait for linkUser support in ObjectStore\")\n     @Test\n     fun linkUser_existingCredentialsThrows() {\n         val email = TestHelper.getRandomEmail()\n         val password = \"123456\"\n         val emailUser: User = app.registerUserAndLogin(email, password)\n-        val anonymousUser: User = app.login(Credentials.anonymous())\n         try {\n-            anonymousUser.linkCredentials(Credentials.emailPassword(email, password))\n+            anonUser.linkCredentials(Credentials.emailPassword(email, password))\n             fail()\n         } catch (ex: AppException) {\n-            assertEquals(ErrorCode.BAD_REQUEST, ex.errorCode)\n+            assertEquals(ErrorCode.INVALID_SESSION, ex.errorCode)", "originalCommit": "578c163b028d32ee09c8e7651ae7e5db2bde0cb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM2MTM2Nw==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r451361367", "bodyText": "Users are limited to 1 local userpass credentials.\nServer error\nSERVICE_INTERNAL_SERVER_ERROR(realm::app::ServiceError:16): linking a local-userpass identity is not allowed when one is already linked\nModified it to validate that it should fail if we try to add a second one.", "author": "clementetb", "createdAt": "2020-07-08T08:09:46Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserTests.kt", "diffHunk": "@@ -183,34 +179,34 @@ class UserTests {\n         assertTrue(anonUser === linkedUser)\n         assertEquals(2, linkedUser.identities.size)\n         assertEquals(Credentials.IdentityProvider.EMAIL_PASSWORD, linkedUser.identities[1].provider)\n-        admin.setAutomaticConfirmation(enabled = true)\n \n         val otherEmail = TestHelper.getRandomEmail()\n         val otherPassword = \"123456\"\n         app.emailPasswordAuth.registerUser(otherEmail, otherPassword)\n-        linkedUser = anonUser.linkCredentials(Credentials.emailPassword(email, password))\n-        assertTrue(anonUser === linkedUser)\n-        assertEquals(3, linkedUser.identities.size)\n-        assertEquals(Credentials.IdentityProvider.EMAIL_PASSWORD, linkedUser.identities[2].provider)", "originalCommit": "578c163b028d32ee09c8e7651ae7e5db2bde0cb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwODA0MA==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r451508040", "bodyText": "I'm not sure whether this is expected or not. Maybe ask someone from the server team about adding more than one userpass credential and about the existence of limitations in the types/amount of credentials being linked?", "author": "edualonso", "createdAt": "2020-07-08T12:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM2MTM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4MjMwNA==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r451682304", "bodyText": "Have included tests for serverKey, apiKey and customFunction.\nserverKey and apiKey fail to run yielding the following errors:\n\nserverKey error: AUTH_ERROR(realm::app::ServiceError:47): invalid API key\napiKey error: INVALID_PARAMETER(realm::app::ServiceError:6): invalid user link request", "author": "clementetb", "createdAt": "2020-07-08T16:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM2MTM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwNzMwMQ==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r451507301", "bodyText": "Add more tests that link other credentials types and put them in different methods, e.g. fun linkUser_userApiKey().", "author": "edualonso", "createdAt": "2020-07-08T12:30:39Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserTests.kt", "diffHunk": "@@ -161,19 +160,16 @@ class UserTests {\n \n     @Test\n     fun logOutAsync_throwsOnNonLooperThread() {\n-        val user: User = app.login(Credentials.anonymous())\n         try {\n-            user.logOutAsync { fail() }\n+            anonUser.logOutAsync { fail() }\n             fail()\n         } catch (ignore: IllegalStateException) {\n         }\n     }\n \n-    @Ignore(\"FIXME: Wait for linkUser support in ObjectStore\")\n     @Test\n     fun linkUser() {", "originalCommit": "578c163b028d32ee09c8e7651ae7e5db2bde0cb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cf397b3b1f6e3d45a5005e246d7991d41f4c06d4", "url": "https://github.com/realm/realm-java/commit/cf397b3b1f6e3d45a5005e246d7991d41f4c06d4", "message": "Add tests for apiKey and serverKey linkage", "committedDate": "2020-07-08T16:35:14Z", "type": "commit"}, {"oid": "c9a2c9d0e5385712128ed800c25fe230b230a88c", "url": "https://github.com/realm/realm-java/commit/c9a2c9d0e5385712128ed800c25fe230b230a88c", "message": "Add custom function credentials link test case", "committedDate": "2020-07-08T16:40:28Z", "type": "commit"}, {"oid": "1ea3e86b36b0847a4157580ca6193dc2a7546f14", "url": "https://github.com/realm/realm-java/commit/1ea3e86b36b0847a4157580ca6193dc2a7546f14", "message": "Update credential link test cases to the expected behaviour", "committedDate": "2020-07-22T10:12:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzMzg1Mg==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r458833852", "bodyText": "This won't work. This file is used for JVM unit tests and the test helper is located inside the Android instrumentation test package, so it won't find it.", "author": "edualonso", "createdAt": "2020-07-22T14:26:55Z", "path": "realm/realm-library/src/testObjectServer/kotlin/io/realm/ObfuscatorHelper.kt", "diffHunk": "@@ -53,9 +53,9 @@ object ObfuscatorHelper {\n \n     val CUSTOM_FUNCTION_ORIGINAL_INPUT = \"\"\"\n {\n-  \"mail\":\"myfakemail@mongodb.com\",\n+  \"mail\":\"${TestHelper.getRandomEmail()}\",", "originalCommit": "1ea3e86b36b0847a4157580ca6193dc2a7546f14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNDExMQ==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r458834111", "bodyText": "That's why the build is failing: https://ci.realm.io/blue/organizations/jenkins/realm%2Frealm-java/detail/PR-6993/4/pipeline/74", "author": "edualonso", "createdAt": "2020-07-22T14:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzMzg1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNDMyNw==", "url": "https://github.com/realm/realm-java/pull/6993#discussion_r458834327", "bodyText": "Good catch", "author": "edualonso", "createdAt": "2020-07-22T14:27:34Z", "path": "tools/sync_test_server/app_config/functions/testAuthFunc/source.js", "diffHunk": "@@ -1,7 +1,10 @@\n exports = ({mail, id}) => {\n-    if (mail != \"myfakemail@mongodb.com\" || id != 666) {\n+    // Auth function will fail for emails with a domain different to @androidtest.realm.io\n+    // or with id lower than 666\n+    if (!new RegExp(\"@androidtest.realm.io$\").test(mail) || id < 666) {", "originalCommit": "1ea3e86b36b0847a4157580ca6193dc2a7546f14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f694fe6afe4ffb3e862b147c8e198841735b66a9", "url": "https://github.com/realm/realm-java/commit/f694fe6afe4ffb3e862b147c8e198841735b66a9", "message": "Fix missing dependency", "committedDate": "2020-07-22T15:45:25Z", "type": "commit"}, {"oid": "063fe73678c56d25b7c351131eaa13724789f17b", "url": "https://github.com/realm/realm-java/commit/063fe73678c56d25b7c351131eaa13724789f17b", "message": "Disable automatic confirmation from test cases", "committedDate": "2020-07-27T15:08:20Z", "type": "commit"}, {"oid": "b29eb6abfd0ef12f3f59b4dd1385db0377a7bd77", "url": "https://github.com/realm/realm-java/commit/b29eb6abfd0ef12f3f59b4dd1385db0377a7bd77", "message": "Remove assert on error message", "committedDate": "2020-07-27T15:41:32Z", "type": "commit"}, {"oid": "bcd396d4542e7528bd2222e3931b94c8d62f0d84", "url": "https://github.com/realm/realm-java/commit/bcd396d4542e7528bd2222e3931b94c8d62f0d84", "message": "Remove any checks on what kind of exception we get", "committedDate": "2020-07-27T15:56:56Z", "type": "commit"}]}