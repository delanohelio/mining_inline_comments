{"pr_number": 6930, "pr_title": "Support for custom user data", "pr_createdAt": "2020-06-08T10:17:36Z", "pr_url": "https://github.com/realm/realm-java/pull/6930", "timeline": [{"oid": "5245f4f1c095b11176f8a7e9e5c5ade3c3dd911f", "url": "https://github.com/realm/realm-java/commit/5245f4f1c095b11176f8a7e9e5c5ade3c3dd911f", "message": "Support for custom user data", "committedDate": "2020-06-08T10:14:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r436612522", "bodyText": "Looks like we also need to expose refreshCustomData():  https://github.com/realm/realm-object-store/blob/v10/src/sync/app.hpp#L238 ... and since that is a network request, it should probably be:\npublic Document getCustomData()\npublic Document refreshCustomData()\npublic RealmAsyncTask refreshCustomData(Result<Document> callback)", "author": "cmelchior", "createdAt": "2020-06-08T10:55:33Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -280,6 +282,18 @@ public State getState() {\n         throw new IllegalStateException(\"Unknown state: \" + nativeState);\n     }\n \n+    /**\n+     * Return the custom user data associated with the user in the Realm App.\n+     * <p>\n+     * The data is only refreshed when the user's access token is refreshed.\n+     *\n+     * @return The custom user data associated with the user.\n+     */\n+    public Document getCustomData() {", "originalCommit": "5245f4f1c095b11176f8a7e9e5c5ade3c3dd911f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYyODM5MA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r436628390", "bodyText": "Will do. Should the native part of all these methods actually be on OsUser instead and what are the rationale for doing one over the other?", "author": "rorbech", "createdAt": "2020-06-08T11:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMDI0OA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r436630248", "bodyText": "So far we are using OsUser for all API's found on sync_user.hpp in ObjectStore.  refresh_custom_data is there as well, so should probably be there.\nThe primary reason for the split is that the Os<X> normally implements the NativeObject interface which we don't want in the public API, but it also allows us greater design flexibility in terms of how we expose the OS API.\nIt does have the downside there many methods are just \"pass-through\" though.", "author": "cmelchior", "createdAt": "2020-06-08T11:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzMwMA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438707300", "bodyText": "Moved direct OS wrappers to OsSyncUser and kept the additional logic (returning user custom data after actual refresh) in User.", "author": "rorbech", "createdAt": "2020-06-11T11:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMjUyMg=="}], "type": "inlineReview"}, {"oid": "5da855052377e5a13575b98535b8018283a677a7", "url": "https://github.com/realm/realm-java/commit/5da855052377e5a13575b98535b8018283a677a7", "message": "Support for custom user data refresh", "committedDate": "2020-06-09T08:50:46Z", "type": "commit"}, {"oid": "0f4bb64f980e2990b7046eb8023b4b869576673b", "url": "https://github.com/realm/realm-java/commit/0f4bb64f980e2990b7046eb8023b4b869576673b", "message": "Trying to rework import to avoid stale service references", "committedDate": "2020-06-09T09:07:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5NjMwNg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438096306", "bodyText": "This comment seems to indicate the data is lazy-loaded somehow? I don't assume that is true? Same wording is used thoughout this class.", "author": "cmelchior", "createdAt": "2020-06-10T12:51:33Z", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserTests.kt", "diffHunk": "@@ -327,4 +332,78 @@ class UserTests {\n         assertEquals(user.hashCode(), sameUserNewLogin.hashCode())\n     }\n \n+    @Test\n+    fun customData_initiallyEmpty() {\n+        val user = app.registerUserAndLogin(TestHelper.getRandomEmail(), \"123456\")\n+        // Data is not immediately available", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExNjUxOA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438116518", "bodyText": "Yes, wrong wording. A freshly registered user do not have any custom data (at least with the configuration that I did), so just verifying that it yields an empty document according to contract. Will update comment.", "author": "rorbech", "createdAt": "2020-06-10T13:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5NjMwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMDU3MQ==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438100571", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * {@link #refreshCustomData() refreshed}.\n          \n          \n            \n                 * calling {@link #refreshCustomData()}.", "author": "cmelchior", "createdAt": "2020-06-10T12:58:02Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -280,6 +282,51 @@ public State getState() {\n         throw new IllegalStateException(\"Unknown state: \" + nativeState);\n     }\n \n+    /**\n+     * Return the custom user data associated with the user in the Realm App.\n+     * <p>\n+     * The data is only refreshed when the user's access token is refreshed or when explicitly\n+     * {@link #refreshCustomData() refreshed}.", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMDc4Mg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438100782", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *", "author": "cmelchior", "createdAt": "2020-06-10T12:58:21Z", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java", "diffHunk": "@@ -280,6 +282,51 @@ public State getState() {\n         throw new IllegalStateException(\"Unknown state: \" + nativeState);\n     }\n \n+    /**\n+     * Return the custom user data associated with the user in the Realm App.\n+     * <p>\n+     * The data is only refreshed when the user's access token is refreshed or when explicitly\n+     * {@link #refreshCustomData() refreshed}.\n+     *\n+     * @return The custom user data associated with the user.\n+     */\n+    public Document getCustomData() {\n+        return osUser.getCustomData();\n+    }\n+\n+    /**\n+     * Re-fetch custom user data from the Realm App.\n+     *\n+     * @return The updated custom user data associated with the user.\n+     *", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMTgyMQ==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438101821", "bodyText": "Looks like a fun thing to debug \ud83d\ude48", "author": "cmelchior", "createdAt": "2020-06-10T12:59:53Z", "path": "tools/sync_test_server/setup_mongodb_realm.sh", "diffHunk": "@@ -64,10 +64,10 @@ stitch-cli import \\\n                   --config-path=/tmp/stitch-config \\\n                   --base-url=http://localhost:9090 \\\n                   --path=/tmp/app_config \\\n-                  --app-name realm-sdk-integration-tests \\\n+                  --app-id=\"realm-sdk-integration-tests-$APP_ID_SUFFIX\" \\", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMjUwOA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438102508", "bodyText": "What is this for?", "author": "cmelchior", "createdAt": "2020-06-10T13:00:47Z", "path": "tools/sync_test_server/setup_mongodb_realm.sh", "diffHunk": "@@ -42,7 +42,7 @@ yes | stitch-cli login --config-path=/tmp/stitch-config \\\n IMPORT_RESPONSE=$(stitch-cli import \\\n                   --config-path=/tmp/stitch-config \\\n                   --base-url=http://localhost:9090 \\\n-                  --path=/tmp/app_config \\\n+                  --path=/tmp/app_config_empty \\", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyNjU0Nw==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438126547", "bodyText": "The cluster reference for custom user data is stripped from the configuration when the app is imported. It gave some errors about not having a secret for the BackingDB_uri and the ids were updated on import. I thought the stripped reference to the cluster was due to this, so I replicated the way of importing the app from the docker image's run.sh, which imports an empty app, creates secrets and imports the actual app. This eliminated the issues about missing secrets (that I was suspecting to flush the references), but did not fix the missing references.\nApparently it is just an issue with stitch-cli not being able to import custom user data with id-references at the moment :(\nShould I just go for a comment about manual verification and the steps to test, or should I try to pursue other means of testing it before it gets fixed (\"It shouldn't be too long before that's fixed\")?", "author": "rorbech", "createdAt": "2020-06-10T13:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMjUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyODcyMg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438128722", "bodyText": "Yes, the secret import not working is really annoying and already complicates our import script.\nIf there is a bug with importing custom_data I would probably prefer to just add a @ignore test with manual steps to reproduce and link to a issue making sure we track fixing it.\nAt least that way we don't complicate this import logic even more.", "author": "cmelchior", "createdAt": "2020-06-10T13:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMjUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3NzE4NQ==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438677185", "bodyText": "I actually think the above is a bit cleaner...at least conceptually. But as it did not fix the issue I reverted the changes to avoid cluttering with these extra config files for now.\nThe docker image with the server already includes a run.sh handling importing of apps, so we could basically get the same import as I did by just mounting our app in the /apps-directory in the image. Only issues are that:\n\nIt is harder to track when apps have been fully imported (but can be tailed by docker logs --follow mongodb-realm or something like that)\nI do not know how I should get the actual app id to the endpoint where we fetch it from the device test.\n\nI think fixing the above would be the right way to go, as we would not have to maintain our own script and we would avoid having two imports running in parallel. Cannot see the immediate explanation for this to trigger #6904, but I guess anything that could simplify setup would be worth doing.", "author": "rorbech", "createdAt": "2020-06-11T10:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMjUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4NjQzOQ==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438686439", "bodyText": "If the script just stores the app id in a text file we should be able to read it for our usage I think", "author": "cmelchior", "createdAt": "2020-06-11T10:19:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMjUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExMjM5OA==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438112398", "bodyText": "What is this app_config_empty doing? If you intend to import two different apps, I'm not sure you are doing it correctly? Because we only store one app_id_suffix used by the integration tests?", "author": "cmelchior", "createdAt": "2020-06-10T13:15:57Z", "path": "tools/sync_test_server/start_server.sh", "diffHunk": "@@ -41,6 +41,7 @@ ID=$(docker run --rm -i -t -d --network mongodb-realm-network -p9090:9090 -p8888\n docker run --rm -i -t -d --network container:$ID -v$TMP_DIR:/tmp --name mongodb-realm-command-server mongodb-realm-command-server\n \n docker cp \"$DOCKERFILE_DIR\"/app_config mongodb-realm:/tmp/app_config\n+docker cp \"$DOCKERFILE_DIR\"/app_config_empty mongodb-realm:/tmp/app_config_empty", "originalCommit": "0f4bb64f980e2990b7046eb8023b4b869576673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyNjczNg==", "url": "https://github.com/realm/realm-java/pull/6930#discussion_r438126736", "bodyText": "See comment above.", "author": "rorbech", "createdAt": "2020-06-10T13:35:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExMjM5OA=="}], "type": "inlineReview"}, {"oid": "65c102a46ead0c54b03387032964c2fee312dc29", "url": "https://github.com/realm/realm-java/commit/65c102a46ead0c54b03387032964c2fee312dc29", "message": "Revert \"Trying to rework import to avoid stale service references\"\n\nThis reverts commit 0f4bb64f980e2990b7046eb8023b4b869576673b.", "committedDate": "2020-06-11T09:27:42Z", "type": "commit"}, {"oid": "ed4e1ddffc04a2395e6ef9e8da117db4c31bd2f8", "url": "https://github.com/realm/realm-java/commit/ed4e1ddffc04a2395e6ef9e8da117db4c31bd2f8", "message": "Merge branch 'v10' into cr/custom-user-data", "committedDate": "2020-06-11T09:29:45Z", "type": "commit"}, {"oid": "f034892edeb3c486ff800a4d42ff9ab3c7e8d39b", "url": "https://github.com/realm/realm-java/commit/f034892edeb3c486ff800a4d42ff9ab3c7e8d39b", "message": "Updates according to code review", "committedDate": "2020-06-11T09:30:10Z", "type": "commit"}, {"oid": "24f5abaa9b86ef1b399ac19de6dfb57bc61d0163", "url": "https://github.com/realm/realm-java/commit/24f5abaa9b86ef1b399ac19de6dfb57bc61d0163", "message": "Ignore tests that was not possible to automate", "committedDate": "2020-06-11T09:38:01Z", "type": "commit"}, {"oid": "59d840ebfac3782f3318cb2e7b002373120694d9", "url": "https://github.com/realm/realm-java/commit/59d840ebfac3782f3318cb2e7b002373120694d9", "message": "Apply suggestions from code review\n\nCo-authored-by: Christian Melchior <christian@ilios.dk>", "committedDate": "2020-06-11T10:03:12Z", "type": "commit"}, {"oid": "f54fb26535b047eea031ac388304f4c990c3071f", "url": "https://github.com/realm/realm-java/commit/f54fb26535b047eea031ac388304f4c990c3071f", "message": "Apply comments from code review", "committedDate": "2020-06-11T10:26:23Z", "type": "commit"}]}