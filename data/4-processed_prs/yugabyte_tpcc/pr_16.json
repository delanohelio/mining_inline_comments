{"pr_number": 16, "pr_title": "Add foreign keys after loading data, use multi-column hash keys", "pr_createdAt": "2020-05-08T23:57:12Z", "pr_url": "https://github.com/yugabyte/tpcc/pull/16", "timeline": [{"oid": "0fbbed844c82166ffae115eeec74ff4a3974754f", "url": "https://github.com/yugabyte/tpcc/commit/0fbbed844c82166ffae115eeec74ff4a3974754f", "message": "Add Deferred forreign key checks.\n\nReviewers:\nNeha, Karthik", "committedDate": "2020-05-08T23:51:53Z", "type": "commit"}, {"oid": "993a1568d02ddd247724e4edc7bea51914dfcae0", "url": "https://github.com/yugabyte/tpcc/commit/993a1568d02ddd247724e4edc7bea51914dfcae0", "message": "USing WarehouseId and DistrictId for partitioning.\n\nReviewers:\nNeha, Karthik", "committedDate": "2020-05-08T23:52:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDM5Mw==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r422580393", "bodyText": "Do we need this log line?", "author": "rkarthik007", "createdAt": "2020-05-10T03:57:48Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/TPCCLoader.java", "diffHunk": "@@ -118,10 +126,30 @@ public void load(Connection conn) throws SQLException {\n \n                     // ORDERS\n                     loadOrders(conn, w_id, TPCCConfig.configDistPerWhse, TPCCConfig.configCustPerDist);\n+\n+                    warehouseLatch.countDown();\n                 }\n             };\n             threads.add(t);\n         } // FOR\n+\n+        if (workConf.getDeferConstraintChecks()) {\n+            threads.add(new LoaderThread() {\n+                @Override\n+                public void load(Connection conn) throws SQLException {\n+                    try {\n+                        warehouseLatch.await();\n+                    } catch (InterruptedException ex) {\n+                        ex.printStackTrace();\n+                        throw new RuntimeException(ex);\n+                    }\n+                    long startTime = System.nanoTime();\n+                    EnableForeignKeyConstraints(conn);\n+                    LOG.info(\"The total Time for enabling foreign keys \" + (System.nanoTime() - startTime) / 1000 / 1000 / 1000);", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MjIwOA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423272208", "bodyText": "We don't specifically need it.\nWill remove.", "author": "psudheer21", "createdAt": "2020-05-11T19:36:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDM5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDQyMw==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r422580423", "bodyText": "Can we add comments on top of these table DDL changes so we know why we do this?", "author": "rkarthik007", "createdAt": "2020-05-10T03:58:31Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -12,15 +12,15 @@ CREATE TABLE order_line (\n   ol_supply_w_id int NOT NULL,\n   ol_quantity decimal(2,0) NOT NULL,\n   ol_dist_info char(24) NOT NULL,\n-  PRIMARY KEY (ol_w_id,ol_d_id,ol_o_id,ol_number)\n+  PRIMARY KEY ((ol_w_id,ol_d_id) hash,ol_o_id,ol_number)", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MjMyNw==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423272327", "bodyText": "Sure.", "author": "psudheer21", "createdAt": "2020-05-11T19:36:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDQyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDQ2NA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r422580464", "bodyText": "Comments please.", "author": "rkarthik007", "createdAt": "2020-05-10T03:58:55Z", "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -237,6 +237,12 @@ public static void main(String[] args) throws Exception {\n                 // Nothing to do here !\n             }\n \n+            try {\n+              wrkld.setDeferConstraintChecks(xmlConfig.getBoolean(\"deferConstraintChecks\"));", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MjM5OA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423272398", "bodyText": "Sure.", "author": "psudheer21", "createdAt": "2020-05-11T19:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDU3OQ==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r422580579", "bodyText": "Can we add a comment block here about the fact that all foreign key constraints are now loaded as deferred constraints?\nAlso, can these be loaded as non-deferred constraints? Would be good to call out those details here. Otherwise, someone looking at the schema file would think there are no FKs.", "author": "rkarthik007", "createdAt": "2020-05-10T04:00:35Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -144,20 +144,3 @@ CREATE TABLE warehouse (\n --add constraints and indexes\n CREATE INDEX idx_customer_name ON customer (c_w_id,c_d_id,c_last,c_first);\n CREATE INDEX idx_order ON oorder (o_w_id,o_d_id,o_c_id,o_id);\n--- tpcc-mysql create two indexes for the foreign key constraints, Is it really necessary?\n--- CREATE INDEX FKEY_STOCK_2 ON STOCK (S_I_ID);\n--- CREATE INDEX FKEY_ORDER_LINE_2 ON ORDER_LINE (OL_SUPPLY_W_ID,OL_I_ID);\n-\n---add 'ON DELETE CASCADE'  to clear table work correctly\n-\n-ALTER TABLE district  ADD CONSTRAINT fkey_district_1 FOREIGN KEY(d_w_id) REFERENCES warehouse(w_id) ON DELETE CASCADE;", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MjUxNA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423272514", "bodyText": "Sure.", "author": "psudheer21", "createdAt": "2020-05-11T19:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4MDU3OQ=="}], "type": "inlineReview"}, {"oid": "4bd6c175a8f57770a9e0be9c204036bfcf0bd83d", "url": "https://github.com/yugabyte/tpcc/commit/4bd6c175a8f57770a9e0be9c204036bfcf0bd83d", "message": "Added comments for the new features added in TPC-C.", "committedDate": "2020-05-11T19:44:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDE5MQ==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423274191", "bodyText": "Let's not use the term \"deferred constraints\" since that has a different meaning in postgresql and YSQL. Let's use setForeignKeysAfterLoad instead.", "author": "ndeodhar", "createdAt": "2020-05-11T19:40:02Z", "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -237,6 +237,12 @@ public static void main(String[] args) throws Exception {\n                 // Nothing to do here !\n             }\n \n+            try {\n+              wrkld.setDeferConstraintChecks(xmlConfig.getBoolean(\"deferConstraintChecks\"));", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDA0OA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424750048", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-05-13T21:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDk4OA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423274988", "bodyText": "We can skip this log since this is not a time consuming operation.", "author": "ndeodhar", "createdAt": "2020-05-11T19:41:36Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/TPCCLoader.java", "diffHunk": "@@ -67,19 +69,25 @@ public TPCCLoader(TPCCBenchmark benchmark) {\n         }\n     }\n \n+    private boolean deferConstraintChecks;\n     private int numWarehouses = 0;\n     private static final int FIRST_UNPROCESSED_O_ID = 2101;\n \n     @Override\n     public List<LoaderThread> createLoaderThreads() throws SQLException {\n         List<LoaderThread> threads = new ArrayList<LoaderThread>();\n         final CountDownLatch itemLatch = new CountDownLatch(1);\n+        final CountDownLatch warehouseLatch = new CountDownLatch(numWarehouses);\n \n         // ITEM\n         // This will be invoked first and executed in a single thread.\n         threads.add(new LoaderThread() {\n             @Override\n             public void load(Connection conn) throws SQLException {\n+                if (!workConf.getDeferConstraintChecks()) {\n+                    EnableForeignKeyConstraints(conn);\n+                    LOG.info(\"The total Time for enabling foreign keys \" + (System.nanoTime() - startTime) / 1000 / 1000 / 1000);", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NjA2MQ==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424746061", "bodyText": "done.", "author": "psudheer21", "createdAt": "2020-05-13T21:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3Njc4Mg==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423276782", "bodyText": "Please also update stock table's PK to be (s_w_id,s_i_id hash)", "author": "ndeodhar", "createdAt": "2020-05-11T19:45:03Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -12,15 +12,15 @@ CREATE TABLE order_line (\n   ol_supply_w_id int NOT NULL,\n   ol_quantity decimal(2,0) NOT NULL,\n   ol_dist_info char(24) NOT NULL,\n-  PRIMARY KEY (ol_w_id,ol_d_id,ol_o_id,ol_number)\n+  PRIMARY KEY ((ol_w_id,ol_d_id) hash,ol_o_id,ol_number)\n );\n \n DROP TABLE IF EXISTS new_order;\n CREATE TABLE new_order (\n   no_w_id int NOT NULL,\n   no_d_id int NOT NULL,\n   no_o_id int NOT NULL,\n-  PRIMARY KEY (no_w_id,no_d_id,no_o_id)\n+  PRIMARY KEY ((no_w_id,no_d_id) hash,no_o_id)\n );\n \n DROP TABLE IF EXISTS stock;", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDQxNA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424750414", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-05-13T21:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3Njc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NzQyNA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423277424", "bodyText": "nit: Use HASH (uppercase) so it stands out between the column names.", "author": "ndeodhar", "createdAt": "2020-05-11T19:46:19Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -12,15 +12,15 @@ CREATE TABLE order_line (\n   ol_supply_w_id int NOT NULL,\n   ol_quantity decimal(2,0) NOT NULL,\n   ol_dist_info char(24) NOT NULL,\n-  PRIMARY KEY (ol_w_id,ol_d_id,ol_o_id,ol_number)\n+  PRIMARY KEY ((ol_w_id,ol_d_id) hash,ol_o_id,ol_number)\n );\n \n DROP TABLE IF EXISTS new_order;\n CREATE TABLE new_order (\n   no_w_id int NOT NULL,\n   no_d_id int NOT NULL,\n   no_o_id int NOT NULL,\n-  PRIMARY KEY (no_w_id,no_d_id,no_o_id)\n+  PRIMARY KEY ((no_w_id,no_d_id) hash,no_o_id)", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NjMxMg==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424746312", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-05-13T21:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NzQyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3ODE0NA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423278144", "bodyText": "Please remove this and add a CREATE UNIQUE INDEX statement below using ((o_w_id, o_d_id) HASH, o_c_id, o_id)", "author": "ndeodhar", "createdAt": "2020-05-11T19:47:44Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -56,7 +56,7 @@ CREATE TABLE oorder (\n   o_ol_cnt decimal(2,0) NOT NULL,\n   o_all_local decimal(1,0) NOT NULL,\n   o_entry_d timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n-  PRIMARY KEY (o_w_id,o_d_id,o_id),\n+  PRIMARY KEY ((o_w_id,o_d_id) hash,o_id),\n   UNIQUE (o_w_id,o_d_id,o_c_id,o_id)", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3ODY4OQ==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423278689", "bodyText": "We don't need this since it's only 10 districts per warehouse.", "author": "ndeodhar", "createdAt": "2020-05-11T19:48:39Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -112,7 +112,7 @@ CREATE TABLE district (\n   d_city varchar(20) NOT NULL,\n   d_state char(2) NOT NULL,\n   d_zip char(9) NOT NULL,\n-  PRIMARY KEY (d_w_id,d_id)\n+  PRIMARY KEY ((d_w_id,d_id) hash)", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NjUyMA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424746520", "bodyText": "But i was thinking the rows should lie on the same tablet?\nWouldn't that be better?", "author": "psudheer21", "createdAt": "2020-05-13T21:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3ODY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyMzg2MA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r427623860", "bodyText": "Not sure I fully understood. If we don't use the hash, then they will on the same tablet.\nEither way, this is a small table. So, I'm okay with any of the two options.", "author": "ndeodhar", "createdAt": "2020-05-19T21:56:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3ODY4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3OTc3Ng==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423279776", "bodyText": "We can remove this index since there is also a unique index on the same set of columns. So, let's just have 1 index on oorder table like this:\nCREATE UNIQUE INDEX idx_order ON oorder ((o_w_id,o_d_id) HASH, o_c_id, o_id DESC);\nNote that change to use DESC for o_id since that helps with the workload queries.", "author": "ndeodhar", "createdAt": "2020-05-11T19:50:44Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -144,20 +144,3 @@ CREATE TABLE warehouse (\n --add constraints and indexes\n CREATE INDEX idx_customer_name ON customer (c_w_id,c_d_id,c_last,c_first);\n CREATE INDEX idx_order ON oorder (o_w_id,o_d_id,o_c_id,o_id);", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTk5OQ==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424751999", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-05-13T21:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3OTc3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MDAwMg==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r423280002", "bodyText": "Change this to ((c_w_id, c_d_id) HASH, c_last, c_first)", "author": "ndeodhar", "createdAt": "2020-05-11T19:51:08Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -144,20 +144,3 @@ CREATE TABLE warehouse (\n --add constraints and indexes\n CREATE INDEX idx_customer_name ON customer (c_w_id,c_d_id,c_last,c_first);", "originalCommit": "993a1568d02ddd247724e4edc7bea51914dfcae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MjA2MA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r424752060", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-05-13T21:51:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MDAwMg=="}], "type": "inlineReview"}, {"oid": "1c424379c7c252c8617799e39769a83073a919a8", "url": "https://github.com/yugabyte/tpcc/commit/1c424379c7c252c8617799e39769a83073a919a8", "message": "Addressed Neha's comments.", "committedDate": "2020-05-13T22:42:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyNTE1OA==", "url": "https://github.com/yugabyte/tpcc/pull/16#discussion_r427625158", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            -- The Foreign keys constraints are enabled based on the flag 'deferConstraintChecks'. If this flag\n          \n          \n            \n            -- The Foreign keys constraints are enabled based on the flag 'enableForeignKeysAfterLoad'. If this flag", "author": "ndeodhar", "createdAt": "2020-05-19T21:59:50Z", "path": "src/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-postgres-ddl.sql", "diffHunk": "@@ -1,4 +1,7 @@\n -- TODO: c_since ON UPDATE CURRENT_TIMESTAMP,\n+-- The Foreign keys constraints are enabled based on the flag 'deferConstraintChecks'. If this flag", "originalCommit": "1c424379c7c252c8617799e39769a83073a919a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d7b205c4015e7e389413493baec886ef4d1d894", "url": "https://github.com/yugabyte/tpcc/commit/5d7b205c4015e7e389413493baec886ef4d1d894", "message": "Modified comments.", "committedDate": "2020-05-19T22:18:37Z", "type": "commit"}]}