{"pr_number": 3953, "pr_title": "refactor(iOS): Move webview delegation out of CAPBridgeViewController", "pr_createdAt": "2020-12-15T23:31:01Z", "pr_url": "https://github.com/ionic-team/capacitor/pull/3953", "timeline": [{"oid": "1347780a0e6437d7d41aaa4a87522b1403fd2ad8", "url": "https://github.com/ionic-team/capacitor/commit/1347780a0e6437d7d41aaa4a87522b1403fd2ad8", "message": "Moved all runtime webview delegation out of bridge view controller. Removed CAPMessageHandlerWrapper, added WebViewDelegationHandler, renamed CAPAssetHandler.", "committedDate": "2020-12-15T22:30:50Z", "type": "commit"}, {"oid": "a9390493afc6ac8de1aca7a54656fafc681f2db8", "url": "https://github.com/ionic-team/capacitor/commit/a9390493afc6ac8de1aca7a54656fafc681f2db8", "message": "Fixed tests to match refactor.", "committedDate": "2020-12-15T22:31:29Z", "type": "commit"}, {"oid": "34ad60bfeff7d5bbdd50785d875c67ce3072ebae", "url": "https://github.com/ionic-team/capacitor/commit/34ad60bfeff7d5bbdd50785d875c67ce3072ebae", "message": "Added tests for new configuration functionality.", "committedDate": "2020-12-15T22:32:09Z", "type": "commit"}, {"oid": "9a5ff0f0611da7ae360a711d31a59a7b7d204cea", "url": "https://github.com/ionic-team/capacitor/commit/9a5ff0f0611da7ae360a711d31a59a7b7d204cea", "message": "Merge branch 'main' into web-delegate", "committedDate": "2020-12-15T22:32:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MDc1NQ==", "url": "https://github.com/ionic-team/capacitor/pull/3953#discussion_r543770755", "bodyText": "Just curious, how come internal classes need an Obj-C name?", "author": "imhoffd", "createdAt": "2020-12-15T23:48:31Z", "path": "ios/Capacitor/Capacitor/WebViewAssetHandler.swift", "diffHunk": "@@ -1,7 +1,8 @@\n import Foundation\n import MobileCoreServices\n \n-internal class CAPAssetHandler: NSObject, WKURLSchemeHandler {\n+@objc(CAPWebViewAssetHandler)\n+internal class WebViewAssetHandler: NSObject, WKURLSchemeHandler {", "originalCommit": "9a5ff0f0611da7ae360a711d31a59a7b7d204cea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM5OTA4MQ==", "url": "https://github.com/ionic-team/capacitor/pull/3953#discussion_r544399081", "bodyText": "Because inheriting from NSObject, which is necessary when conforming to certain protocols from UIKit, means that the class is bridged into the Obj-C runtime regardless of any access controls. Being internal, it's interface is not exposed outside of the framework but at runtime the class name would still exist in the flat namespace of the application.", "author": "ikeith", "createdAt": "2020-12-16T15:38:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MDc1NQ=="}], "type": "inlineReview"}]}