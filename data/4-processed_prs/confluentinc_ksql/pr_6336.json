{"pr_number": 6336, "pr_title": "chore: fail joins where the key format differs", "pr_createdAt": "2020-09-30T20:53:00Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6336", "timeline": [{"oid": "a32488dfea07760263a207f507dde4251462dc32", "url": "https://github.com/confluentinc/ksql/commit/a32488dfea07760263a207f507dde4251462dc32", "message": "chore: fail joins where the key format differs\n\nfixes: https://github.com/confluentinc/ksql/issues/6213\n\nAdd code to throw a useful error message if a join has incompatible key formats. QTT test added too.", "committedDate": "2020-09-30T20:52:20Z", "type": "commit"}, {"oid": "11fa29718a2f722c7316982f497d8717f60385c2", "url": "https://github.com/confluentinc/ksql/commit/11fa29718a2f722c7316982f497d8717f60385c2", "message": "chore: fix test", "committedDate": "2020-10-01T09:15:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE4NTg1MQ==", "url": "https://github.com/confluentinc/ksql/pull/6336#discussion_r498185851", "bodyText": "Why are the schemas for session and non-session windows different? Is this because non-session windows don't store window end times?", "author": "vcrfxia", "createdAt": "2020-10-01T11:54:35Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/planner/plan/JoinNode.java", "diffHunk": "@@ -67,6 +72,20 @@\n     INNER, LEFT, OUTER\n   }\n \n+  private static final ImmutableList<KeyProperty> KEY_PROPERTIES = ImmutableList.of(\n+      new KeyProperty(\"format\", kf -> kf.getFormatInfo().getFormat()),\n+      new KeyProperty(\"properties\", kf -> kf.getFormatInfo().getProperties()),\n+      new KeyProperty(\"features\", KeyFormat::getFeatures),\n+      new KeyProperty(\"widowing\", kf -> kf.getWindowInfo()\n+          .map(WindowInfo::getType)\n+          .map(t -> t == WindowType.SESSION\n+              ? \"session windowing\" : \"non session windowing\")\n+          .orElse(\"no windowing\"))\n+  // Note: we deliberately do NOT fail if one side is HOPPING and the other is TUMBLING, or fail\n+  // on different window sizes. This is because we only fail if the _schema_ of the key is\n+  // different. Neither of these differences make the schemas different.", "originalCommit": "11fa29718a2f722c7316982f497d8717f60385c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE5NjI5Ng==", "url": "https://github.com/confluentinc/ksql/pull/6336#discussion_r498196296", "bodyText": "Correct", "author": "big-andy-coates", "createdAt": "2020-10-01T12:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE4NTg1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE4Njg3OQ==", "url": "https://github.com/confluentinc/ksql/pull/6336#discussion_r498186879", "bodyText": "How come this validation happens here rather than in buildStream() where other validation (matching partition counts) occurs? Is it because we actually prefer to validate in the constructor when possible, but the partition count validation requires a topic client which isn't available until buildStream() is called?", "author": "vcrfxia", "createdAt": "2020-10-01T11:56:30Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/planner/plan/JoinNode.java", "diffHunk": "@@ -97,6 +116,8 @@ public JoinNode(\n     this.left = requireNonNull(left, \"left\");\n     this.right = requireNonNull(right, \"right\");\n     this.withinExpression = requireNonNull(withinExpression, \"withinExpression\");\n+\n+    throwOnKeyMismatch(left, right);", "originalCommit": "11fa29718a2f722c7316982f497d8717f60385c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE5NzMxOA==", "url": "https://github.com/confluentinc/ksql/pull/6336#discussion_r498197318", "bodyText": "Where validation happens currently is... a little undefined.  A lot happens in the Analyzer, but personally I'm like to kill off the Analyzer and use the building of the LogicalPlan to validate thing.  I don't think the Analyzer adds anything.\nFailing in the constructor is better than buildStream as the former means you can't build an invalid logical plan, where as the latter only means you can't build an invalid physical plan.", "author": "big-andy-coates", "createdAt": "2020-10-01T12:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE4Njg3OQ=="}], "type": "inlineReview"}, {"oid": "bef4d6b31d9014a9457d2bab3aa927d27d4b8c59", "url": "https://github.com/confluentinc/ksql/commit/bef4d6b31d9014a9457d2bab3aa927d27d4b8c59", "message": "chore: fix test", "committedDate": "2020-10-01T12:43:01Z", "type": "commit"}]}