{"pr_number": 6353, "pr_title": "feat: Add an endpoint for returning the query limit configuration", "pr_createdAt": "2020-10-02T21:37:55Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6353", "timeline": [{"oid": "95e4a3b43d9eca2b18fc7995ddc3d3a3a06852e5", "url": "https://github.com/confluentinc/ksql/commit/95e4a3b43d9eca2b18fc7995ddc3d3a3a06852e5", "message": "feat: Add an endpoint for returning the query limit configuration", "committedDate": "2020-10-02T18:29:55Z", "type": "commit"}, {"oid": "9da2fcc9f3d7d3c02e01603e93de2a69227571eb", "url": "https://github.com/confluentinc/ksql/commit/9da2fcc9f3d7d3c02e01603e93de2a69227571eb", "message": "fix merge conflict", "committedDate": "2020-10-02T18:34:54Z", "type": "commit"}, {"oid": "8b5a92a44c3569f6c2435d2b0b3aa41e7174ba56", "url": "https://github.com/confluentinc/ksql/commit/8b5a92a44c3569f6c2435d2b0b3aa41e7174ba56", "message": "fix compile error", "committedDate": "2020-10-05T21:48:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYwNzE3NA==", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r500607174", "bodyText": "Even if this is immutable, it's good practice to use the interface Map here when declaring the variable.", "author": "spena", "createdAt": "2020-10-06T21:29:32Z", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/ConfigResponse.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@JsonSubTypes({})\n+public class ConfigResponse {\n+  private final ImmutableMap<String, Object> configs;", "originalCommit": "8b5a92a44c3569f6c2435d2b0b3aa41e7174ba56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxNzg5OQ==", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r500617899", "bodyText": "Perhaps use visibleConfigs instead. Just to provide more meaning to what these configs are.", "author": "spena", "createdAt": "2020-10-06T21:53:50Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ConfigResource.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.server.resources;\n+\n+import io.confluent.ksql.rest.EndpointResponse;\n+import io.confluent.ksql.rest.entity.ConfigResponse;\n+import io.confluent.ksql.util.KsqlConfig;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class ConfigResource {\n+  private final Map<String, Object> allowedConfigs = new HashMap<>();", "originalCommit": "8b5a92a44c3569f6c2435d2b0b3aa41e7174ba56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "851222a2390cc25a2e9825872addcaf9dd37e8b3", "url": "https://github.com/confluentinc/ksql/commit/851222a2390cc25a2e9825872addcaf9dd37e8b3", "message": "Address review comments", "committedDate": "2020-10-08T17:37:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTAxNQ==", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r502679015", "bodyText": "nit: generally good practice to avoid a double lookup. Obviously not so important here as it's not a perf critical area, but figured I'd drop the comment so it's top of mind next time :)\nObject value = visibleConfigs.get(config);\nif (value != null) {\n  configs.put(config, value)\n}", "author": "agavra", "createdAt": "2020-10-09T21:28:03Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ConfigResource.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.server.resources;\n+\n+import io.confluent.ksql.rest.EndpointResponse;\n+import io.confluent.ksql.rest.entity.ConfigResponse;\n+import io.confluent.ksql.util.KsqlConfig;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class ConfigResource {\n+  private final Map<String, Object> visibleConfigs = new HashMap<>();\n+\n+  public ConfigResource(final KsqlConfig ksqlConfig) {\n+    setVisibleConfigs(ksqlConfig);\n+  }\n+\n+  private void setVisibleConfigs(final KsqlConfig ksqlConfig) {\n+    visibleConfigs.put(\n+        KsqlConfig.KSQL_ACTIVE_PERSISTENT_QUERY_LIMIT_CONFIG,\n+        ksqlConfig.getInt(KsqlConfig.KSQL_ACTIVE_PERSISTENT_QUERY_LIMIT_CONFIG)\n+    );\n+  }\n+\n+  public EndpointResponse getConfigs(final List<String> requestedConfigs) {\n+    final Map<String, Object> configs = new HashMap<>();\n+    for (String config : requestedConfigs) {\n+      if (visibleConfigs.containsKey(config)) {\n+        configs.put(config, visibleConfigs.get(config));", "originalCommit": "851222a2390cc25a2e9825872addcaf9dd37e8b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTI0OA==", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r502679248", "bodyText": "we should add tests to make sure that we don't accidentally leak any config that isn't in the allowed list of configs", "author": "agavra", "createdAt": "2020-10-09T21:28:45Z", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/RestApiTest.java", "diffHunk": "@@ -289,6 +291,28 @@ public void shouldExecuteServerMetadataIdRequest() {\n     assertThat(response, is(notNullValue()));\n   }\n \n+  @Test\n+  public void shouldExecuteAllConfigsRequest() {", "originalCommit": "851222a2390cc25a2e9825872addcaf9dd37e8b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db4461e452b039077cca5da89181fd636c305495", "url": "https://github.com/confluentinc/ksql/commit/db4461e452b039077cca5da89181fd636c305495", "message": "Address review comments and update docs", "committedDate": "2020-10-09T23:24:17Z", "type": "commit"}]}