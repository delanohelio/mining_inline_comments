{"pr_number": 6692, "pr_title": "feat: support PROTOBUF keys", "pr_createdAt": "2020-11-30T20:00:15Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6692", "timeline": [{"oid": "a9250af8c16cd933997a14fa48b39450ba1f1e13", "url": "https://github.com/confluentinc/ksql/commit/a9250af8c16cd933997a14fa48b39450ba1f1e13", "message": "feat: support PROTOBUF keys", "committedDate": "2020-11-30T19:41:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk1OTQ3Ng==", "url": "https://github.com/confluentinc/ksql/pull/6692#discussion_r532959476", "bodyText": "How come this works with declaring the key simply as BOOLEAN rather than STRUCT<BOOLEAN>? I thought keys were always forced to be unwrapped?", "author": "vcrfxia", "createdAt": "2020-11-30T23:01:18Z", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/protobuf.json", "diffHunk": "@@ -293,6 +293,311 @@\n         ]\n       }\n     },\n+    {\n+      \"name\": \"STRUCT BOOLEAN - key - no inference\",\n+      \"comments\": [\n+        \"note that null defaults to false in protobuf\"\n+      ],\n+      \"properties\": {\n+        \"ksql.key.format.enabled\": true\n+      },\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (F1 BOOLEAN KEY, foo INT) WITH (kafka_topic='input_topic', format='PROTOBUF');\",", "originalCommit": "a9250af8c16cd933997a14fa48b39450ba1f1e13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2NDY3Mg==", "url": "https://github.com/confluentinc/ksql/pull/6692#discussion_r532964672", "bodyText": "They are forced unwrapped if the format supports unwrapping, otherwise it uses what the format supports:\nhttps://github.com/confluentinc/ksql/blob/master/ksqldb-engine/src/main/java/io/confluent/ksql/serde/SerdeFeaturesFactory.java#L90-L104\n  private static Optional<SerdeFeature> getKeyWrapping(\n      final boolean singleKey,\n      final Format keyFormat\n  ) {\n    // Until ksqlDB supports WRAP_SINGLE_KEYS in the WITH clause, we explicitly set\n    // UNWRAP_SINGLE_KEYS for any key format that supports both wrapping and unwrapping to avoid\n    // ambiguity later:\n    if (singleKey\n        && keyFormat.supportsFeature(SerdeFeature.UNWRAP_SINGLES)\n        && keyFormat.supportsFeature(SerdeFeature.WRAP_SINGLES)\n    ) {\n      return Optional.of(SerdeFeature.UNWRAP_SINGLES);\n    }\n    return Optional.empty();\n  }", "author": "agavra", "createdAt": "2020-11-30T23:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk1OTQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2OTgxOQ==", "url": "https://github.com/confluentinc/ksql/pull/6692#discussion_r532969819", "bodyText": "Ah, interesting. We should add tests for converting between protobuf and other key formats, and also joins between protobuf and other key formats. The rest of this PR LGTM, though! (Feel free to add in a separate PR if that's preferable.)", "author": "vcrfxia", "createdAt": "2020-11-30T23:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk1OTQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxNDQzOQ==", "url": "https://github.com/confluentinc/ksql/pull/6692#discussion_r533614439", "bodyText": "+1 I'll do this in a separate PR. I think the likelihood of an org using two formats is pretty low so it's OK if we release this with some rough edges around that (but definitely good to just have it working).", "author": "agavra", "createdAt": "2020-12-01T18:02:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk1OTQ3Ng=="}], "type": "inlineReview"}]}