{"pr_number": 5513, "pr_title": "fix: update Concat UDF to new framework and make variadic", "pr_createdAt": "2020-05-29T19:10:52Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5513", "timeline": [{"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6", "url": "https://github.com/confluentinc/ksql/commit/01941d67cf8a37fda6284edf1854034dc6a201c6", "message": "update Concat UDF to new framework and make variadic", "committedDate": "2020-05-29T19:01:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw==", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432717427", "bodyText": "I know this isn't your original code, but does this limitation makes sense? I feel like CONCAT('foo') could reasonably return just 'foo'. I can imagine passing in an array of values and expect it to work (now that we support variadic) even for the cases where there's fewer than 2 (or even if the array is empty, so CONCAT([]) would return \"\")", "author": "agavra", "createdAt": "2020-05-29T20:23:18Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "diffHunk": "@@ -16,23 +16,31 @@\n package io.confluent.ksql.function.udf.string;\n \n import io.confluent.ksql.function.KsqlFunctionException;\n-import io.confluent.ksql.function.udf.Kudf;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n import java.util.Arrays;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-public class ConcatKudf implements Kudf {\n-  public static final String NAME = \"CONCAT\";\n+@UdfDescription(\n+    name = \"concat\",\n+    description = \"Concatenate an arbitrary number of string fields together\")\n+public class Concat {\n \n-  @Override\n-  public String evaluate(final Object... args) {\n-    if (args.length < 2) {\n-      throw new KsqlFunctionException(NAME + \" should have at least two input argument.\");\n+  @Udf\n+  public String concat(@UdfParameter(\n+      description = \"The varchar fields to concatenate\") final String... inputs) {\n+    if (inputs == null) {\n+      return null;\n+    }\n+    if (inputs.length < 2) {\n+      throw new KsqlFunctionException(\"Concat should have at least two input arguments.\");\n     }", "originalCommit": "01941d67cf8a37fda6284edf1854034dc6a201c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4MDU4OA==", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432780588", "bodyText": "You make a fair point - and the same thought went through my head while going through the code but i decided not to disturb the status quo too much (for once!).Happy to change it though, i think what you are suggesting makes more intuitive sense, as it would bring the behavior into line with what happens if you pass more than 2 inputs but less than 2 of them are non-null - e.g. concat(null, 'foo', null) is already processed without complaint and returns foo.  WDYT ?", "author": "blueedgenick", "createdAt": "2020-05-29T23:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2ODUzMw==", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432868533", "bodyText": "+1 that makes a lot of sense (and in line with what we would do today even before this PR if we had CONCAT(null, 'foo'))", "author": "agavra", "createdAt": "2020-05-30T16:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxOTkzNQ==", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r434019935", "bodyText": "Done!", "author": "blueedgenick", "createdAt": "2020-06-02T16:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw=="}], "type": "inlineReview"}, {"oid": "29e39d2614941ae1700c38a0323a7a4d3d7cefb6", "url": "https://github.com/confluentinc/ksql/commit/29e39d2614941ae1700c38a0323a7a4d3d7cefb6", "message": "missed file", "committedDate": "2020-05-29T23:16:49Z", "type": "commit"}, {"oid": "67af6f16a7ea8e8a3e07ca7a8a24d6ad035f518c", "url": "https://github.com/confluentinc/ksql/commit/67af6f16a7ea8e8a3e07ca7a8a24d6ad035f518c", "message": "Almog's requested change", "committedDate": "2020-06-01T20:02:57Z", "type": "commit"}, {"oid": "1a9992be2dad0ca948bee72a6592c2b4361e36b5", "url": "https://github.com/confluentinc/ksql/commit/1a9992be2dad0ca948bee72a6592c2b4361e36b5", "message": "fix typo in test case", "committedDate": "2020-06-01T21:44:49Z", "type": "commit"}, {"oid": "dda1a201ef353fc57e7a352fb1e95dbcd24ddaa9", "url": "https://github.com/confluentinc/ksql/commit/dda1a201ef353fc57e7a352fb1e95dbcd24ddaa9", "message": "historical plan", "committedDate": "2020-06-01T23:53:17Z", "type": "commit"}, {"oid": "2995385fa6333565c7af5a6cfaefb98c6b67651c", "url": "https://github.com/confluentinc/ksql/commit/2995385fa6333565c7af5a6cfaefb98c6b67651c", "message": "trivial doc change to trigger build", "committedDate": "2020-06-02T15:48:08Z", "type": "commit"}]}