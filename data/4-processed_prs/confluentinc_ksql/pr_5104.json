{"pr_number": 5104, "pr_title": "feat: fail startup if command contains incompatible version", "pr_createdAt": "2020-04-17T19:45:00Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5104", "timeline": [{"oid": "2cd8e1601c0c63114be8a2921921adc86f04d743", "url": "https://github.com/confluentinc/ksql/commit/2cd8e1601c0c63114be8a2921921adc86f04d743", "message": "feat: fail startup if command topic contains incompatible versions", "committedDate": "2020-04-17T19:44:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1MjA0Nw==", "url": "https://github.com/confluentinc/ksql/pull/5104#discussion_r413152047", "bodyText": "Consider just a simple monotonically incrementing version, rather than this.\ne.g. we start at version 1. (anything without a version is version 0.).  When the server starts it checks each command version is the current version, otherwise fails.\nAs we release a new version of ksql with an incompatibilities we bump the verison.  The new version will then reject all older (and newer!) commands.", "author": "big-andy-coates", "createdAt": "2020-04-22T16:55:34Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/Command.java", "diffHunk": "@@ -119,6 +160,73 @@ public String toString() {\n     return \"Command{\"\n         + \"statement='\" + statement + '\\''\n         + \", overwriteProperties=\" + overwriteProperties\n+        + \", version=\" + version\n         + '}';\n   }\n+\n+  @VisibleForTesting\n+  static class VersionChecker {\n+\n+    private static final RangeMap<ArtifactVersion, Range<ArtifactVersion>> DB_COMPAT_MATRIX =", "originalCommit": "2cd8e1601c0c63114be8a2921921adc86f04d743", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkzMjMwNw==", "url": "https://github.com/confluentinc/ksql/pull/5104#discussion_r413932307", "bodyText": "that is indeed much simpler - I will go down this path, but I think we need to start with version 0 so that this isn't backwards incompatible unnecessarily", "author": "agavra", "createdAt": "2020-04-23T16:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1MjA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1MzU3OQ==", "url": "https://github.com/confluentinc/ksql/pull/5104#discussion_r413153579", "bodyText": "move the separate class?", "author": "big-andy-coates", "createdAt": "2020-04-22T16:57:35Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/Command.java", "diffHunk": "@@ -119,6 +160,73 @@ public String toString() {\n     return \"Command{\"\n         + \"statement='\" + statement + '\\''\n         + \", overwriteProperties=\" + overwriteProperties\n+        + \", version=\" + version\n         + '}';\n   }\n+\n+  @VisibleForTesting\n+  static class VersionChecker {", "originalCommit": "2cd8e1601c0c63114be8a2921921adc86f04d743", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1NTkxNg==", "url": "https://github.com/confluentinc/ksql/pull/5104#discussion_r413155916", "bodyText": "Add test to ensure old json, without version, can be deserialized?", "author": "big-andy-coates", "createdAt": "2020-04-22T17:00:48Z", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/computation/CommandTest.java", "diffHunk": "@@ -61,6 +62,7 @@ public void shouldSerializeDeserializeCorrectly() throws IOException {\n     grep(serialized, \".*\\\"streamsProperties\\\" *: *\\\\{ *\\\"foo\\\" *: *\\\"bar\\\" *\\\\}.*\");\n     grep(serialized, \".*\\\"statement\\\" *: *\\\"test statement;\\\".*\");\n     grep(serialized, \".*\\\"originalProperties\\\" *: *\\\\{ *\\\"biz\\\" *: *\\\"baz\\\" *\\\\}.*\");\n+    grep(serialized, \".*\\\"version\\\" *: *\\\"\" + Version.getVersion() + \"\\\".*\");", "originalCommit": "2cd8e1601c0c63114be8a2921921adc86f04d743", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkzMzE4Nw==", "url": "https://github.com/confluentinc/ksql/pull/5104#discussion_r413933187", "bodyText": "That's what the first test does - I suppose what we need is to make sure that the new json can be deserialized properly \ud83d\ude02", "author": "agavra", "createdAt": "2020-04-23T16:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1NTkxNg=="}], "type": "inlineReview"}, {"oid": "d48c6f3516b05c7cbee55641bb0b2f30689f58ef", "url": "https://github.com/confluentinc/ksql/commit/d48c6f3516b05c7cbee55641bb0b2f30689f58ef", "message": "chore: make version checking simpler", "committedDate": "2020-04-23T16:20:44Z", "type": "commit"}]}