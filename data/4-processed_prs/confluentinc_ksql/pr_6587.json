{"pr_number": 6587, "pr_title": "feat: Extend CAST to ARRAY, MAP and STRUCT", "pr_createdAt": "2020-11-09T14:43:32Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6587", "timeline": [{"oid": "f7c778cab31b01debf1fcb479f1b404d598a5ade", "url": "https://github.com/confluentinc/ksql/commit/f7c778cab31b01debf1fcb479f1b404d598a5ade", "message": "fix: extend CAST to structured types\n\nfixes: https://github.com/confluentinc/ksql/issues/6584\n\nExtend CAST to the structured types `ARRAY`, `MAP` and `STRUCT`.", "committedDate": "2020-11-06T10:20:21Z", "type": "commit"}, {"oid": "0d791ae76e2e22f937b41ed27f1081094b1b15c6", "url": "https://github.com/confluentinc/ksql/commit/0d791ae76e2e22f937b41ed27f1081094b1b15c6", "message": "test: extend test coverage", "committedDate": "2020-11-06T13:39:46Z", "type": "commit"}, {"oid": "6633d29ffd35be34f7386e0dfd858bcb2c9d1741", "url": "https://github.com/confluentinc/ksql/commit/6633d29ffd35be34f7386e0dfd858bcb2c9d1741", "message": "refactor: refactor cast evaluator\n\nClean up the code.", "committedDate": "2020-11-06T14:01:41Z", "type": "commit"}, {"oid": "cfa09516cbee230c662a96f3bb2e00f4d9cebee7", "url": "https://github.com/confluentinc/ksql/commit/cfa09516cbee230c662a96f3bb2e00f4d9cebee7", "message": "fix: fix null handling and extend to array, map, struct", "committedDate": "2020-11-09T14:31:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2NzA2OQ==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519867069", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | STRING | BOOLEAN | Any string that exactly matches `true`, case-insensitive, will be converted to `true`. Any other value will be converted to `false`. |\n          \n          \n            \n            | STRING | BOOLEAN | Any string that exactly matches `true`, case-insensitive, is converted to `true`. Any other value is converted to `false`. |", "author": "JimGalasyn", "createdAt": "2020-11-09T14:46:18Z", "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -40,6 +40,26 @@ CREATE TABLE AGG AS\n    GROUP BY ID;\n ```\n \n+### CAST\n+\n+Since: -\n+\n+```sql\n+CAST(COL0 AS BIGINT)\n+```\n+\n+Converts one type to another. The following casts are supported:\n+\n+| from | to | notes |\n+|------|----|-------|\n+| ANY  | STRING | Converts the type to its string representation. |\n+| STRING | BOOLEAN | Any string that exactly matches `true`, case-insensitive, will be converted to `true`. Any other value will be converted to `false`. |", "originalCommit": "cfa09516cbee230c662a96f3bb2e00f4d9cebee7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fdd7ecde0f05a429fea795b57299fe4ce63c3880", "url": "https://github.com/confluentinc/ksql/commit/fdd7ecde0f05a429fea795b57299fe4ce63c3880", "message": "Update docs/developer-guide/ksqldb-reference/scalar-functions.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>", "committedDate": "2020-11-09T14:46:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2NzgwNw==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519867807", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | STRUCT | STRUCT | Convert between structs of different field types. Only fields that existing in the target STRUCT type will be copied across. Any fields in the target type that do not exist in the source will be set to `NULL` |\n          \n          \n            \n            | STRUCT | STRUCT | Convert between structs of different field types. Only fields that exist in the target STRUCT type are copied across. Any fields in the target type that don't exist in the source are set to `NULL` |", "author": "JimGalasyn", "createdAt": "2020-11-09T14:47:13Z", "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -40,6 +40,26 @@ CREATE TABLE AGG AS\n    GROUP BY ID;\n ```\n \n+### CAST\n+\n+Since: -\n+\n+```sql\n+CAST(COL0 AS BIGINT)\n+```\n+\n+Converts one type to another. The following casts are supported:\n+\n+| from | to | notes |\n+|------|----|-------|\n+| ANY  | STRING | Converts the type to its string representation. |\n+| STRING | BOOLEAN | Any string that exactly matches `true`, case-insensitive, will be converted to `true`. Any other value will be converted to `false`. |\n+| STRING | INT, BIGINT, DECIMAL, DOUBLE | Converts string representation of numbers to number types. Conversion will fail if text does not contain a number or the number does not fit in the indicated type. |\n+| INT, BIGINT, DECIMAL, DOUBLE | INT, BIGINT, DECIMAL, DOUBLE | Convert between numeric types. Conversion can result in rounding |\n+| ARRAY | ARRAY | Convert between arrays of different element types |   \n+| MAP | MAP | Convert between maps of different key and value types |   \n+| STRUCT | STRUCT | Convert between structs of different field types. Only fields that existing in the target STRUCT type will be copied across. Any fields in the target type that do not exist in the source will be set to `NULL` |", "originalCommit": "cfa09516cbee230c662a96f3bb2e00f4d9cebee7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2ODEzNQ==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519868135", "bodyText": "Since 0.14.0?", "author": "JimGalasyn", "createdAt": "2020-11-09T14:47:36Z", "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -40,6 +40,26 @@ CREATE TABLE AGG AS\n    GROUP BY ID;\n ```\n \n+### CAST\n+\n+Since: -", "originalCommit": "cfa09516cbee230c662a96f3bb2e00f4d9cebee7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3MTc4NA==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519871784", "bodyText": "CAST has always been there...", "author": "big-andy-coates", "createdAt": "2020-11-09T14:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2ODEzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2OTMwNA==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519869304", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | STRING | INT, BIGINT, DECIMAL, DOUBLE | Converts string representation of numbers to number types. Conversion will fail if text does not contain a number or the number does not fit in the indicated type. |\n          \n          \n            \n            | STRING | INT, BIGINT, DECIMAL, DOUBLE | Converts string representation of numbers to number types. Conversion fails if text doesn't contain a number or the number doesn't fit in the indicated type. |", "author": "JimGalasyn", "createdAt": "2020-11-09T14:49:13Z", "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -40,6 +40,26 @@ CREATE TABLE AGG AS\n    GROUP BY ID;\n ```\n \n+### CAST\n+\n+Since: -\n+\n+```sql\n+CAST(COL0 AS BIGINT)\n+```\n+\n+Converts one type to another. The following casts are supported:\n+\n+| from | to | notes |\n+|------|----|-------|\n+| ANY  | STRING | Converts the type to its string representation. |\n+| STRING | BOOLEAN | Any string that exactly matches `true`, case-insensitive, will be converted to `true`. Any other value will be converted to `false`. |\n+| STRING | INT, BIGINT, DECIMAL, DOUBLE | Converts string representation of numbers to number types. Conversion will fail if text does not contain a number or the number does not fit in the indicated type. |", "originalCommit": "cfa09516cbee230c662a96f3bb2e00f4d9cebee7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2OTUyNg==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519869526", "bodyText": "Does \"fail\" mean throw an exception?", "author": "JimGalasyn", "createdAt": "2020-11-09T14:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2OTMwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3NDQ5NQ==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519874495", "bodyText": "Sure, but 'throws an exception' doesn't necessarily mean anything to the user of ksqlDB.  This isn't a library where the dev using it needs to know to expect an exception.", "author": "big-andy-coates", "createdAt": "2020-11-09T14:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2OTMwNA=="}], "type": "inlineReview"}, {"oid": "9f835553fc4fe70d758eb70e95030e838c4eb60a", "url": "https://github.com/confluentinc/ksql/commit/9f835553fc4fe70d758eb70e95030e838c4eb60a", "message": "test: historical plans", "committedDate": "2020-11-09T14:51:38Z", "type": "commit"}, {"oid": "017c7cbbd893a19e8526f47af980372e337e974c", "url": "https://github.com/confluentinc/ksql/commit/017c7cbbd893a19e8526f47af980372e337e974c", "message": "Merge branch 'cast' of github.com:big-andy-coates/ksql into cast", "committedDate": "2020-11-09T14:51:49Z", "type": "commit"}, {"oid": "b7a7bb166a3ab6e112bd7e5c5364772d6225b3dc", "url": "https://github.com/confluentinc/ksql/commit/b7a7bb166a3ab6e112bd7e5c5364772d6225b3dc", "message": "chore: jim's requested changes", "committedDate": "2020-11-09T14:54:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3ODU2Mg==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519978562", "bodyText": "f0 is a VARCHAR. Shouldn't it be an ARRAY<INT>?", "author": "spena", "createdAt": "2020-11-09T17:11:32Z", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/cast.json", "diffHunk": "@@ -14,6 +14,19 @@\n         \"message\": \"Invalid Select: Cast of STRING to ARRAY<INTEGER> is not supported\"\n       }\n     },\n+    {\n+      \"name\": \"array to string\",\n+      \"statements\": [\n+        \"CREATE STREAM TEST (f0 VARCHAR) WITH (kafka_topic='test_topic', value_format='JSON');\",", "originalCommit": "b7a7bb166a3ab6e112bd7e5c5364772d6225b3dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4ODg3OA==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519988878", "bodyText": "Should it be good to have a unit test for this?", "author": "spena", "createdAt": "2020-11-09T17:27:08Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/helpers/LambdaUtil.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.execution.codegen.helpers;\n+\n+/**\n+ * Functions to help with generating code to work around the fact that the script engine doesn't\n+ * support lambdas.\n+ */\n+public final class LambdaUtil {\n+\n+  private LambdaUtil() {\n+  }\n+\n+  /**\n+   * Generate code to build a {@link java.util.function.Function}.\n+   *\n+   * @param argName the name of the single argument the  {@code lambdaBody} expects.\n+   * @param argType the type of the single argument the {@code lambdaBody} expects.\n+   * @param lambdaBody the body of the lambda. It will find the n\n+   * @return code to instantiate the function.\n+   */\n+  public static String function(", "originalCommit": "b7a7bb166a3ab6e112bd7e5c5364772d6225b3dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5MjE1Nw==", "url": "https://github.com/confluentinc/ksql/pull/6587#discussion_r519992157", "bodyText": "Unit tests? Seems useful to know what the returned code is.", "author": "spena", "createdAt": "2020-11-09T17:31:46Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/helpers/NullSafe.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.execution.codegen.helpers;\n+\n+import java.util.function.Function;\n+\n+/**\n+ * Helper functions around null handling\n+ */\n+public final class NullSafe {", "originalCommit": "b7a7bb166a3ab6e112bd7e5c5364772d6225b3dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b62e3d5d7eb62d07963b03aef12df2aa2d62601", "url": "https://github.com/confluentinc/ksql/commit/1b62e3d5d7eb62d07963b03aef12df2aa2d62601", "message": "chore: review changes", "committedDate": "2020-11-10T10:17:50Z", "type": "commit"}, {"oid": "fd2c811eee9888f4ea5abf761781679f03d6b4cb", "url": "https://github.com/confluentinc/ksql/commit/fd2c811eee9888f4ea5abf761781679f03d6b4cb", "message": "refactor: inline method", "committedDate": "2020-11-10T12:54:36Z", "type": "commit"}]}