{"pr_number": 6722, "pr_title": "feat: expose support for array and struct keys", "pr_createdAt": "2020-12-04T21:03:22Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6722", "timeline": [{"oid": "dee0c3eecb57880762f70246f45d8b1ba8079cd7", "url": "https://github.com/confluentinc/ksql/commit/dee0c3eecb57880762f70246f45d8b1ba8079cd7", "message": "test: additional qtt", "committedDate": "2020-12-04T19:09:12Z", "type": "commit"}, {"oid": "580a0c94bb555e77ff81c0ffbecf9c4f2f5eeb5d", "url": "https://github.com/confluentinc/ksql/commit/580a0c94bb555e77ff81c0ffbecf9c4f2f5eeb5d", "message": "test: integration tests", "committedDate": "2020-12-04T20:36:17Z", "type": "commit"}, {"oid": "8178a761ee60038e957c0aa89a33cc7ad25db0fe", "url": "https://github.com/confluentinc/ksql/commit/8178a761ee60038e957c0aa89a33cc7ad25db0fe", "message": "feat: expose support for array and struct keys", "committedDate": "2020-12-04T20:52:55Z", "type": "commit"}, {"oid": "9362eaac8018bf890b358e064b8db8d598d91a39", "url": "https://github.com/confluentinc/ksql/commit/9362eaac8018bf890b358e064b8db8d598d91a39", "message": "chore: historic plans", "committedDate": "2020-12-04T21:00:16Z", "type": "commit"}, {"oid": "00e0cbb6c7c8dd06ba0ab6493487f97117db79bb", "url": "https://github.com/confluentinc/ksql/commit/00e0cbb6c7c8dd06ba0ab6493487f97117db79bb", "message": "test: fix test", "committedDate": "2020-12-04T22:15:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2MjE0OA==", "url": "https://github.com/confluentinc/ksql/pull/6722#discussion_r537662148", "bodyText": "(from a previous PR) we might want to link to #6621 in the exception of the message if anyone needs to \"continue the conversation\"", "author": "agavra", "createdAt": "2020-12-07T16:51:49Z", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/GenericKeySerDe.java", "diffHunk": "@@ -148,21 +148,12 @@ private static void checkUnsupportedSchema(\n       }\n     }\n \n-    if (config.getBoolean(KsqlConfig.KSQL_COMPLEX_KEY_FORMAT_ENABLED)) {\n-      for (final SimpleColumn column : columns) {\n-        if (containsMapType(column.type())) {\n-          throw new KsqlException(\"Map keys, including types that contain maps, are not supported \"\n-              + \"as they may lead to unexpected behavior due to inconsistent serialization. \"\n-              + \"Key column name: \" + column.name() + \". \"\n-              + \"Column type: \" + column.type().toString(FormatOptions.none()));\n-        }\n-      }\n-    } else {\n-      for (final SimpleColumn column : columns) {\n-        final SqlType sqlType = column.type();\n-        if (!(sqlType instanceof SqlPrimitiveType || sqlType instanceof SqlDecimal)) {\n-          throw new KsqlException(\"Unsupported key schema: \" + columns);\n-        }\n+    for (final SimpleColumn column : columns) {\n+      if (containsMapType(column.type())) {\n+        throw new KsqlException(\"Map keys, including types that contain maps, are not supported \"", "originalCommit": "8178a761ee60038e957c0aa89a33cc7ad25db0fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcyNjkxOQ==", "url": "https://github.com/confluentinc/ksql/pull/6722#discussion_r537726919", "bodyText": "Sorry, must've missed the previous comment. Updated in this PR. I went with simply See https://github.com/confluentinc/ksql/issues/6621 for more. rather than language about \"continuing the conversation\" since the latter makes it sound like this is an ongoing discussion which it isn't (at least as of now).", "author": "vcrfxia", "createdAt": "2020-12-07T18:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2MjE0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcyODg1Mw==", "url": "https://github.com/confluentinc/ksql/pull/6722#discussion_r537728853", "bodyText": "ah sorry my comment wasn't clear! I meant (this is code from a previous PR) not (I left a comment on a previous PR). And definitely don't think we should include \"continue the conversation\" in the exception message! I meant it as that's what they'd be doing.", "author": "agavra", "createdAt": "2020-12-07T18:25:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2MjE0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzczMDc4NA==", "url": "https://github.com/confluentinc/ksql/pull/6722#discussion_r537730784", "bodyText": "Ah got'cha. Glad we're on the same page :)", "author": "vcrfxia", "createdAt": "2020-12-07T18:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2MjE0OA=="}], "type": "inlineReview"}, {"oid": "dddbe16bbf2f4278ba77556fbb9151342d105ec0", "url": "https://github.com/confluentinc/ksql/commit/dddbe16bbf2f4278ba77556fbb9151342d105ec0", "message": "Merge branch 'master' into complex-key-tests", "committedDate": "2020-12-07T18:08:19Z", "type": "commit"}, {"oid": "13ccf39f7e7ccc9fc7a72755b3c49903d6deba86", "url": "https://github.com/confluentinc/ksql/commit/13ccf39f7e7ccc9fc7a72755b3c49903d6deba86", "message": "chore: update map key error msg to link to github issue", "committedDate": "2020-12-07T18:20:23Z", "type": "commit"}, {"oid": "a269b7b6e70f88679fd98085827c9842038cf04c", "url": "https://github.com/confluentinc/ksql/commit/a269b7b6e70f88679fd98085827c9842038cf04c", "message": "chore: new historic plans (in light of avro schema full name)", "committedDate": "2020-12-07T20:10:04Z", "type": "commit"}, {"oid": "0f538caf80eff92c13ccbb365f591d1c1b8ccd89", "url": "https://github.com/confluentinc/ksql/commit/0f538caf80eff92c13ccbb365f591d1c1b8ccd89", "message": "chore: remove duplicate qtts", "committedDate": "2020-12-07T20:18:27Z", "type": "commit"}]}