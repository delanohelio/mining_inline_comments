{"pr_number": 5506, "pr_title": "fix: allow dynamic construction of an ARRAY of STRUCTS with duplicate values #5436", "pr_createdAt": "2020-05-28T22:43:29Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5506", "timeline": [{"oid": "81b21529c8732bdd35d7a616417f2c518849679c", "url": "https://github.com/confluentinc/ksql/commit/81b21529c8732bdd35d7a616417f2c518849679c", "message": "fixed issue 5436", "committedDate": "2020-05-28T21:57:33Z", "type": "commit"}, {"oid": "44d2ceba76b56175eda61ff80c751694fc713e68", "url": "https://github.com/confluentinc/ksql/commit/44d2ceba76b56175eda61ff80c751694fc713e68", "message": "Merge branch 'master' of github.com:confluentinc/ksql", "committedDate": "2020-05-28T22:10:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NTUxNQ==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432165515", "bodyText": "nit: probably don't want to be committing this!", "author": "agavra", "createdAt": "2020-05-28T22:48:11Z", "path": "config/ksql-server.properties", "diffHunk": "@@ -56,7 +56,7 @@ ksql.logging.processing.stream.auto.create=true\n #------ External service config -------\n \n # The set of Kafka brokers to bootstrap Kafka cluster information from:\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=localhost:29092", "originalCommit": "44d2ceba76b56175eda61ff80c751694fc713e68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NTkwMA==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432165900", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final HashMap<CreateStructExpression, String> structToSchemaName =\n          \n          \n            \n                private final Map<CreateStructExpression, String> structToSchemaName =\n          \n      \n    \n    \n  \n\nnit: generally good practice to use the interface instead of the implementation when declaring variables. That way you don't leak any implementation details and have the freedom to change it down the line. In this case it doesn't matter so much, but a good practice to follow.", "author": "agavra", "createdAt": "2020-05-28T22:49:24Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenSpec.java", "diffHunk": "@@ -101,9 +101,8 @@ public String getStructSchemaName(final CreateStructExpression createStructExpre\n     private final Map<ColumnName, String> columnRefToName = new HashMap<>();\n     private final ImmutableListMultimap.Builder<FunctionName, String> functionNameBuilder =\n         ImmutableListMultimap.builder();\n-    private final ImmutableMap.Builder<CreateStructExpression, String> structToSchemaName =\n-        ImmutableMap.builder();\n-\n+    private final HashMap<CreateStructExpression, String> structToSchemaName =", "originalCommit": "44d2ceba76b56175eda61ff80c751694fc713e68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzEzMg==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432167132", "bodyText": "I think we should flip the semantics of the if statement here and instead return early if the structToSchemaName already contains the entry - that way we wont be incrementing structSchemaCount or adding the unnecessary argument to the argumentBuilder.", "author": "agavra", "createdAt": "2020-05-28T22:52:54Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenSpec.java", "diffHunk": "@@ -125,7 +124,9 @@ void addFunction(final FunctionName functionName, final Kudf function) {\n \n     void addStructSchema(final CreateStructExpression struct, final Schema schema) {\n       final String structSchemaName = CodeGenUtil.schemaName(structSchemaCount++);\n-      structToSchemaName.put(struct, structSchemaName);\n+      if (!structToSchemaName.containsKey(struct)) {", "originalCommit": "44d2ceba76b56175eda61ff80c751694fc713e68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzYyMA==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432167620", "bodyText": "I forgot to tell you offline, but whenever you add a new test to the QTT (QueryTranslationTest) suite you need to run PlannedTestGeneratorTest manually (and remove the @Ignore annotation) to generate historical plans. These historical plans don't change across versions so we make sure that future versions running the old code will not deviate in behavior.", "author": "agavra", "createdAt": "2020-05-28T22:54:19Z", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/create-struct.json", "diffHunk": "@@ -86,6 +86,19 @@\n         \"message\": \"Duplicate field names found in STRUCT\"\n       }\n     },\n+    {\n+      \"name\": \"duplicate structs in array\",", "originalCommit": "44d2ceba76b56175eda61ff80c751694fc713e68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxODM0OQ==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432618349", "bodyText": "Oops I forgot to uncomment the @ignore in the PlannedTestGeneratorTest, will submit new change shortly!", "author": "nae701", "createdAt": "2020-05-29T17:01:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzYyMA=="}], "type": "inlineReview"}, {"oid": "bb74ffd1f1ba2b3afc48da629fda3fb1fc9cd2bd", "url": "https://github.com/confluentinc/ksql/commit/bb74ffd1f1ba2b3afc48da629fda3fb1fc9cd2bd", "message": "fix issue 5436 v2", "committedDate": "2020-05-28T23:58:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU5ODk0OA==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432598948", "bodyText": "let's move the if branch one line up (to make sure that we don't unnecessarily increment structSchemaCount)", "author": "agavra", "createdAt": "2020-05-29T16:27:50Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenSpec.java", "diffHunk": "@@ -125,6 +124,9 @@ void addFunction(final FunctionName functionName, final Kudf function) {\n \n     void addStructSchema(final CreateStructExpression struct, final Schema schema) {\n       final String structSchemaName = CodeGenUtil.schemaName(structSchemaCount++);\n+      if (structToSchemaName.containsKey(struct)) {", "originalCommit": "bb74ffd1f1ba2b3afc48da629fda3fb1fc9cd2bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f887e2552fcf0f02f067c080ae5b05f275a913a", "url": "https://github.com/confluentinc/ksql/commit/0f887e2552fcf0f02f067c080ae5b05f275a913a", "message": "historical plans added", "committedDate": "2020-05-29T16:56:39Z", "type": "commit"}, {"oid": "16747bd2cd9c2dd0df8f3c930de897d93efd2694", "url": "https://github.com/confluentinc/ksql/commit/16747bd2cd9c2dd0df8f3c930de897d93efd2694", "message": "added ignore back to PlannedTestGenerator", "committedDate": "2020-05-29T17:03:41Z", "type": "commit"}]}