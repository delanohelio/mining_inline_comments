{"pr_number": 4499, "pr_title": "docs: Bring KLIP-15 up to date", "pr_createdAt": "2020-02-10T09:09:21Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4499", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4OTY3Mg==", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r377789672", "bodyText": "Not part of the review changes, but above:\n\n(newlines have been added here for the sake of clarity but the real JSON must not contain newlines)\n\nwe might want to clarify \"real JSON must not contain unescaped newlines\"", "author": "colinhicks", "createdAt": "2020-02-11T17:36:16Z", "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -89,8 +93,6 @@ operation (newlines have been added here for the sake of clarity but the real JS\n ````", "originalCommit": "7e3b4b954aaa94f70b12b7d617f064508d23ae51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3MDE3MQ==", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r378770171", "bodyText": "ack", "author": "purplefox", "createdAt": "2020-02-13T10:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4OTY3Mg=="}], "type": "inlineReview"}, {"oid": "35a2cd62a4bdb2ec2835540e0c374f64f701faf0", "url": "https://github.com/confluentinc/ksql/commit/35a2cd62a4bdb2ec2835540e0c374f64f701faf0", "message": "Bring klip up to date", "committedDate": "2020-02-12T11:30:58Z", "type": "commit"}, {"oid": "185a28de0bc67ba55e5aba39d03dcc073d1eb841", "url": "https://github.com/confluentinc/ksql/commit/185a28de0bc67ba55e5aba39d03dcc073d1eb841", "message": "more updates", "committedDate": "2020-02-12T11:30:58Z", "type": "commit"}, {"oid": "185a28de0bc67ba55e5aba39d03dcc073d1eb841", "url": "https://github.com/confluentinc/ksql/commit/185a28de0bc67ba55e5aba39d03dcc073d1eb841", "message": "more updates", "committedDate": "2020-02-12T11:30:58Z", "type": "forcePushed"}, {"oid": "88e322a396270e1523faf6edfcaef22a9868cb3b", "url": "https://github.com/confluentinc/ksql/commit/88e322a396270e1523faf6edfcaef22a9868cb3b", "message": "tweak", "committedDate": "2020-02-12T12:57:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5NzM0Nw==", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379197347", "bodyText": "It's close-query and not query-close, right?\nAlso, what does \"(this can be configurable)\" mean?", "author": "vcrfxia", "createdAt": "2020-02-14T00:41:06Z", "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -133,14 +132,14 @@ Push queries can be explicitly terminated by the client by making a request to t\n \n The request method will be a POST.\n \n-Requests will be made to a specific URL, e.g. \"/query-terminate\" (this can be configurable)\n+Requests will be made to a specific URL, e.g. \"/query-close\" (this can be configurable)", "originalCommit": "88e322a396270e1523faf6edfcaef22a9868cb3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5Nzc0MQ==", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379197741", "bodyText": "Should this be \"the third 2\" instead of \"the third 3\", because of the 0-indexing?", "author": "vcrfxia", "createdAt": "2020-02-14T00:42:29Z", "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -176,23 +174,35 @@ Each JSON object will be separated by a new line.\n \n To terminate the insert stream the client should end the request.\n \n-If acks are requested then the response will be written to the response when each row has been\n+Acks will be written to the response when each row has been\n successfully committed to the underlying topic. Rows are committed in the order they are provided.\n-Each ack in the response is just an empty JSON object, separated by newlines:\n+Each ack in the response is a JSON object, separated by newlines:\n \n ````\n-{}\n-{}\n-{}\n-{}\n+{\"status\":\"ok\",\"seq\":0}\n+{\"status\":\"ok\",\"seq\":2}\n+{\"status\":\"ok\",\"seq\":1}\n+{\"status\":\"ok\",\"seq\":3}\n ````\n \n+A successful ack will contain a field `status` with value `ok`.\n+\n+All ack responses also contain a field `seq` with a 64 bit signed integer value. This number\n+corresponds to the sequence of the insert on the request. The first send has sequence `0`, the second\n+`1`, the third `3`, etc. It allows the client to correlate the ack to the corresponding send.", "originalCommit": "88e322a396270e1523faf6edfcaef22a9868cb3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5ODEwNg==", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379198106", "bodyText": "Do we guarantee the order of the inserts, even if the order of the acks are not guaranteed, or is the order of the inserts not guaranteed either? Is this because of a limitation of the streaming protocol or something else?", "author": "vcrfxia", "createdAt": "2020-02-14T00:43:50Z", "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -176,23 +174,35 @@ Each JSON object will be separated by a new line.\n \n To terminate the insert stream the client should end the request.\n \n-If acks are requested then the response will be written to the response when each row has been\n+Acks will be written to the response when each row has been\n successfully committed to the underlying topic. Rows are committed in the order they are provided.\n-Each ack in the response is just an empty JSON object, separated by newlines:\n+Each ack in the response is a JSON object, separated by newlines:\n \n ````\n-{}\n-{}\n-{}\n-{}\n+{\"status\":\"ok\",\"seq\":0}\n+{\"status\":\"ok\",\"seq\":2}\n+{\"status\":\"ok\",\"seq\":1}\n+{\"status\":\"ok\",\"seq\":3}\n ````\n \n+A successful ack will contain a field `status` with value `ok`.\n+\n+All ack responses also contain a field `seq` with a 64 bit signed integer value. This number\n+corresponds to the sequence of the insert on the request. The first send has sequence `0`, the second\n+`1`, the third `3`, etc. It allows the client to correlate the ack to the corresponding send.\n+\n+In case of error, an error response (see below) will be sent. For an error response for a send, the\n+`seq` field will also be included. \n+\n+Please note that acks can be returned in a different sequence to which the inserts were submitted. ", "originalCommit": "88e322a396270e1523faf6edfcaef22a9868cb3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5OTM3MA==", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379199370", "bodyText": "Nvm, found the answer in discussion on the original PR: #4069 (comment)", "author": "vcrfxia", "createdAt": "2020-02-14T00:48:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5ODEwNg=="}], "type": "inlineReview"}, {"oid": "7639985272e6fe9fb1715d379eaa54f21408f80b", "url": "https://github.com/confluentinc/ksql/commit/7639985272e6fe9fb1715d379eaa54f21408f80b", "message": "tweaks", "committedDate": "2020-02-14T07:42:03Z", "type": "commit"}]}