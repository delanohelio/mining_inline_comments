{"pr_number": 6206, "pr_title": "refactor: remove `Struct` from Format interface", "pr_createdAt": "2020-09-16T08:51:05Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6206", "timeline": [{"oid": "d037f26c291433a684b1b5e5543288e386461f3e", "url": "https://github.com/confluentinc/ksql/commit/d037f26c291433a684b1b5e5543288e386461f3e", "message": "refactor: remove `Struct` from Format interface\n\nFollowing on from https://github.com/confluentinc/ksql/pull/6200, this change changes the `Format` interface so that the created `Serde` is `Serde<List<?>>` rather than the previous `Serde<Struct>`, i.e. the format returns serde capable of returning a list of values, rather than requiring those values in a Connect `Struct`.\n\nThis is part of the work of moving away from using Connect's `Struct` type internally.\n\nAll the 'ConnectFormat' sub-classes still internally using `Serde<Struct>` for now, as that's what the Connect code returns.  This change is not trying to fix this.\n\n`DELIMITED` and `KAFKA` formats no longer know about any `Connect` types, i.e. no `Struct` and no `Schema`. Yay.\n\nIn the engine the key is still passed around as a `Struct`. This change is not trying to fix this.  So there is code to convert the returned `List<?>` into the key `Struct`.  However, this will go once the key is no longer a `Struct`, and its only a single, primitive field, so the overhead is very low, and the `KAFKA` format was doing this already internally anyway, (so no change in perf).\n\nOf course, any one value in the returned `List<?>` can still be a Connect `Struct` if the column type is a struct. This change is not trying to fix this.  This should be fixed later.\n\nSerde performance for JSON and AVRO remains the same, (no benchmark available for other formats yet).\n\nPrevious benchmark results (ran locally):\n\n```\nBenchmark                   (schemaName)  (serializationFormat)  Mode  Cnt  Score   Error  Units\nSerdeBenchmark.deserialize   impressions                   JSON  avgt    3  1.148 \u00b1 0.205  us/op\nSerdeBenchmark.deserialize   impressions                   Avro  avgt    3  2.056 \u00b1 1.141  us/op\nSerdeBenchmark.deserialize       metrics                   JSON  avgt    3  5.504 \u00b1 1.535  us/op\nSerdeBenchmark.deserialize       metrics                   Avro  avgt    3  7.564 \u00b1 3.445  us/op\nSerdeBenchmark.serialize     impressions                   JSON  avgt    3  0.556 \u00b1 0.085  us/op\nSerdeBenchmark.serialize     impressions                   Avro  avgt    3  1.420 \u00b1 3.746  us/op\nSerdeBenchmark.serialize         metrics                   JSON  avgt    3  2.909 \u00b1 1.162  us/op\nSerdeBenchmark.serialize         metrics                   Avro  avgt    3  5.076 \u00b1 0.383  us/op\n```\n\nLatest benchmark results (no statistically significant change):\n\n```\nBenchmark                   (schemaName)  (serializationFormat)  Mode  Cnt  Score   Error  Units\nSerdeBenchmark.deserialize   impressions                   JSON  avgt    3  1.191 \u00b1 0.520  us/op\nSerdeBenchmark.deserialize   impressions                   Avro  avgt    3  2.032 \u00b1 0.512  us/op\nSerdeBenchmark.deserialize       metrics                   JSON  avgt    3  5.324 \u00b1 1.457  us/op\nSerdeBenchmark.deserialize       metrics                   Avro  avgt    3  7.604 \u00b1 2.389  us/op\nSerdeBenchmark.serialize     impressions                   JSON  avgt    3  0.589 \u00b1 0.027  us/op\nSerdeBenchmark.serialize     impressions                   Avro  avgt    3  1.307 \u00b1 0.147  us/op\nSerdeBenchmark.serialize         metrics                   JSON  avgt    3  2.752 \u00b1 0.583  us/op\nSerdeBenchmark.serialize         metrics                   Avro  avgt    3  5.005 \u00b1 0.780  us/op\n```", "committedDate": "2020-09-16T08:50:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3NDEzMg==", "url": "https://github.com/confluentinc/ksql/pull/6206#discussion_r489274132", "bodyText": "Fixes issue flagged in previous PR review by caching the key's Connect schema: #6200 (comment)", "author": "big-andy-coates", "createdAt": "2020-09-16T08:52:44Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/impl/InsertsSubscriber.java", "diffHunk": "@@ -107,15 +115,19 @@ public static InsertsSubscriber createInsertsSubscriber(final ServiceContext ser\n         valueSerde.serializer(), acksPublisher, workerExecutor);\n   }\n \n-  private InsertsSubscriber(final Context context,\n-      final Producer<byte[], byte[]> producer, final DataSource dataSource,\n+  private InsertsSubscriber(\n+      final Context context,\n+      final Producer<byte[], byte[]> producer,\n+      final DataSource dataSource,\n       final Serializer<Struct> keySerializer,\n       final Serializer<GenericRow> valueSerializer,\n       final BufferedPublisher<InsertResult> acksPublisher,\n-      final WorkerExecutor workerExecutor) {\n+      final WorkerExecutor workerExecutor\n+  ) {\n     super(context);\n     this.producer = Objects.requireNonNull(producer);\n     this.dataSource = Objects.requireNonNull(dataSource);\n+    this.keySchema = ConnectSchemas.columnsToConnectSchema(dataSource.getSchema().key());", "originalCommit": "d037f26c291433a684b1b5e5543288e386461f3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}