{"pr_number": 5105, "pr_title": "feat: transient queries added to show queries output", "pr_createdAt": "2020-04-17T20:55:59Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5105", "timeline": [{"oid": "83f4b6d76d3b1c0d18695c87048199e54094588c", "url": "https://github.com/confluentinc/ksql/commit/83f4b6d76d3b1c0d18695c87048199e54094588c", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-17T23:13:57Z", "type": "forcePushed"}, {"oid": "05900bb486ae54349db27f5dd4c481934343bd06", "url": "https://github.com/confluentinc/ksql/commit/05900bb486ae54349db27f5dd4c481934343bd06", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-19T23:48:11Z", "type": "forcePushed"}, {"oid": "d7f7f6d434f16a6c07e4a322bf8a8464e54e89bc", "url": "https://github.com/confluentinc/ksql/commit/d7f7f6d434f16a6c07e4a322bf8a8464e54e89bc", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-20T07:35:01Z", "type": "forcePushed"}, {"oid": "6307b6209b11f066eec6dfaca60adc4ecb3967aa", "url": "https://github.com/confluentinc/ksql/commit/6307b6209b11f066eec6dfaca60adc4ecb3967aa", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-20T17:33:05Z", "type": "forcePushed"}, {"oid": "14c89d67d5577f6fed6f06b01631b27177d37a9a", "url": "https://github.com/confluentinc/ksql/commit/14c89d67d5577f6fed6f06b01631b27177d37a9a", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-21T17:13:40Z", "type": "forcePushed"}, {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426", "url": "https://github.com/confluentinc/ksql/commit/31faf6777c164960f10dfbe4ae1f74445e73d426", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-21T17:13:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1NTk0OA==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412355948", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `Push`: these queries run on every single node in the cluster.\n          \n          \n            \n            * `Push`: these queries run on every node in the cluster.", "author": "JimGalasyn", "createdAt": "2020-04-21T17:36:08Z", "path": "docs-md/developer-guide/ksqldb-reference/show-queries.md", "diffHunk": "@@ -30,15 +30,21 @@ Query Status\n * `ERROR`: the query has entered an error state.\r\n * `UNRESPONSIVE`: the host running the query returned an error when requesting the query status.\r\n \r\n+Query Type\r\n+-----------\r\n+\r\n+* `Push`: these queries run on every single node in the cluster.\r", "originalCommit": "31faf6777c164960f10dfbe4ae1f74445e73d426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MDc4NA==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412370784", "bodyText": "cc @AlanConfluent can you review this section? I think we're standardizing on:\n\npersistent queries run on every node and materialize new state\npush queries are owned by the client and are terminated when the session ends (I don't think we should document that they only run on a single node, that's not the key characteristic)", "author": "agavra", "createdAt": "2020-04-21T17:56:36Z", "path": "docs-md/developer-guide/ksqldb-reference/show-queries.md", "diffHunk": "@@ -30,15 +30,21 @@ Query Status\n * `ERROR`: the query has entered an error state.\r\n * `UNRESPONSIVE`: the host running the query returned an error when requesting the query status.\r\n \r\n+Query Type\r\n+-----------\r", "originalCommit": "31faf6777c164960f10dfbe4ae1f74445e73d426", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM2MjA2NQ==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r413362065", "bodyText": "Yes, I think the definitions you stated here are good ones.  The lifetime I think is one of the most important qualities from a client's perspective as well as the state materialized by persistent queries.  You could call out that persistent queries run until explicitly terminated, that might be too verbose for this purpose.", "author": "AlanConfluent", "createdAt": "2020-04-22T21:59:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MDc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MTI1NQ==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412371255", "bodyText": "see the documentation comment above", "author": "agavra", "createdAt": "2020-04-21T17:57:13Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConstants.java", "diffHunk": "@@ -46,6 +46,11 @@ private KsqlConstants() {\n   public static final String DEFAULT_AVRO_SCHEMA_FULL_NAME =\n       AVRO_SCHEMA_NAMESPACE + \".\" + AVRO_SCHEMA_NAME;\n \n+  public enum KsqlQueryType {", "originalCommit": "31faf6777c164960f10dfbe4ae1f74445e73d426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MTc0NQ==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412371745", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return ImmutableList.copyOf(new ArrayList<>(allLiveQueries));\n          \n          \n            \n                return ImmutableList.copyOf(allLiveQueries);\n          \n      \n    \n    \n  \n\nthe new ArrayList is not necesasry, copyOf takes an Iterable", "author": "agavra", "createdAt": "2020-04-21T17:57:58Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/KsqlEngine.java", "diffHunk": "@@ -128,10 +130,16 @@ public int numberOfLiveQueries() {\n     return primaryContext.getPersistentQuery(queryId);\n   }\n \n+  @Override\n   public List<PersistentQueryMetadata> getPersistentQueries() {\n     return ImmutableList.copyOf(primaryContext.getPersistentQueries().values());\n   }\n \n+  @Override\n+  public List<QueryMetadata> getAllLiveQueries() {\n+    return ImmutableList.copyOf(new ArrayList<>(allLiveQueries));", "originalCommit": "31faf6777c164960f10dfbe4ae1f74445e73d426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3Mjg4Ng==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412372886", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          System.out.println(\"what is being returned\");", "author": "agavra", "createdAt": "2020-04-21T17:59:31Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/ListQueriesExecutor.java", "diffHunk": "@@ -100,19 +100,36 @@ private ListQueriesExecutor() { }\n   private static Map<QueryId, RunningQuery> getLocalSimple(\n       final KsqlExecutionContext executionContext\n   ) {\n-    return executionContext\n-        .getPersistentQueries()\n+    final Map<QueryId, RunningQuery> persistentQueries =  executionContext\n+        .getAllLiveQueries()\n         .stream()\n         .collect(Collectors.toMap(\n-            PersistentQueryMetadata::getQueryId,\n-            q -> new RunningQuery(\n-                q.getStatementString(),\n-                ImmutableSet.of(q.getSinkName().text()),\n-                ImmutableSet.of(q.getResultTopic().getKafkaTopicName()),\n-                q.getQueryId(),\n-                QueryStatusCount.fromStreamsStateCounts(\n-                    Collections.singletonMap(KafkaStreams.State.valueOf(q.getState()), 1)))\n+            QueryMetadata::getQueryId,\n+            q -> {\n+              if (q instanceof PersistentQueryMetadata) {\n+                System.out.println(\"getting local\");\n+                final PersistentQueryMetadata persistentQuery = (PersistentQueryMetadata) q;\n+                return new RunningQuery(\n+                    q.getStatementString(),\n+                    ImmutableSet.of(persistentQuery.getSinkName().text()),\n+                    ImmutableSet.of(persistentQuery.getResultTopic().getKafkaTopicName()),\n+                    q.getQueryId(),\n+                    QueryStatusCount.fromStreamsStateCounts(\n+                        Collections.singletonMap(KafkaStreams.State.valueOf(q.getState()), 1)),\n+                    q.getQueryType());\n+              }\n+              System.out.println(\"what is being returned\");", "originalCommit": "31faf6777c164960f10dfbe4ae1f74445e73d426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3Mjk3Ng==", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412372976", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            System.out.println(\"getting local\");", "author": "agavra", "createdAt": "2020-04-21T17:59:40Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/ListQueriesExecutor.java", "diffHunk": "@@ -100,19 +100,36 @@ private ListQueriesExecutor() { }\n   private static Map<QueryId, RunningQuery> getLocalSimple(\n       final KsqlExecutionContext executionContext\n   ) {\n-    return executionContext\n-        .getPersistentQueries()\n+    final Map<QueryId, RunningQuery> persistentQueries =  executionContext\n+        .getAllLiveQueries()\n         .stream()\n         .collect(Collectors.toMap(\n-            PersistentQueryMetadata::getQueryId,\n-            q -> new RunningQuery(\n-                q.getStatementString(),\n-                ImmutableSet.of(q.getSinkName().text()),\n-                ImmutableSet.of(q.getResultTopic().getKafkaTopicName()),\n-                q.getQueryId(),\n-                QueryStatusCount.fromStreamsStateCounts(\n-                    Collections.singletonMap(KafkaStreams.State.valueOf(q.getState()), 1)))\n+            QueryMetadata::getQueryId,\n+            q -> {\n+              if (q instanceof PersistentQueryMetadata) {\n+                System.out.println(\"getting local\");", "originalCommit": "31faf6777c164960f10dfbe4ae1f74445e73d426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "43d927942f73b2c060afb3b52c8593fe59520b15", "url": "https://github.com/confluentinc/ksql/commit/43d927942f73b2c060afb3b52c8593fe59520b15", "message": "feat: transient queries added to show queries output", "committedDate": "2020-04-22T20:46:35Z", "type": "commit"}, {"oid": "877396336f27f10d64986f09a6341e956d0b9c1d", "url": "https://github.com/confluentinc/ksql/commit/877396336f27f10d64986f09a6341e956d0b9c1d", "message": "ListQueriesExecutor and KsqlExecutionContext changes", "committedDate": "2020-04-22T20:46:35Z", "type": "commit"}, {"oid": "b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "url": "https://github.com/confluentinc/ksql/commit/b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "message": "comments", "committedDate": "2020-04-22T20:46:36Z", "type": "commit"}, {"oid": "b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "url": "https://github.com/confluentinc/ksql/commit/b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "message": "comments", "committedDate": "2020-04-22T20:46:36Z", "type": "forcePushed"}, {"oid": "0b85d933ff0ff538ef3529a035d8837e75d77b9e", "url": "https://github.com/confluentinc/ksql/commit/0b85d933ff0ff538ef3529a035d8837e75d77b9e", "message": "rename query types", "committedDate": "2020-04-22T22:41:59Z", "type": "commit"}, {"oid": "0b85d933ff0ff538ef3529a035d8837e75d77b9e", "url": "https://github.com/confluentinc/ksql/commit/0b85d933ff0ff538ef3529a035d8837e75d77b9e", "message": "rename query types", "committedDate": "2020-04-22T22:41:59Z", "type": "forcePushed"}]}