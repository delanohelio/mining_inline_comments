{"pr_number": 6292, "pr_title": "Json keys", "pr_createdAt": "2020-09-24T10:11:18Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6292", "timeline": [{"oid": "9ad1a9b1838901f5a346767c49dbec07d0d9e76e", "url": "https://github.com/confluentinc/ksql/commit/9ad1a9b1838901f5a346767c49dbec07d0d9e76e", "message": "chore: first pass of JSON key support\n\nwip: https://github.com/confluentinc/ksql/issues/6215\nfixes: https://github.com/confluentinc/ksql/issues/6214\n\nFirst pass of adding QTT tests around the JSON key format, including adding tests for `DECIMAL` and `BOOLEAN` types, which is the first time they've been used as a key column type.\n\nThe test around a JSON `DOUBLE` key is currently disabled, due to a limitation of QTT which reads doubles as `BigDecimal`.  Code works, just need to enhance QTT to do the right thing.\n\nCommit includes a fix in `SerdeOptionsFactory` to ensure no key unwrapping is set if there is no key, plus refactored `SerdeOptionsFactory`, combining the two public methods.", "committedDate": "2020-09-24T10:09:48Z", "type": "commit"}, {"oid": "0cc048302d8fd6b391d8768b33a25f6b85ca635b", "url": "https://github.com/confluentinc/ksql/commit/0cc048302d8fd6b391d8768b33a25f6b85ca635b", "message": "test: historical plans", "committedDate": "2020-09-24T10:10:07Z", "type": "commit"}, {"oid": "79471e5785f06c66652e82f956815ac45af7851d", "url": "https://github.com/confluentinc/ksql/commit/79471e5785f06c66652e82f956815ac45af7851d", "message": "chore: enable test for doubles", "committedDate": "2020-09-24T13:04:14Z", "type": "commit"}, {"oid": "ca9ed08834fcab5d6517dd4fb3b08644cb5798c2", "url": "https://github.com/confluentinc/ksql/commit/ca9ed08834fcab5d6517dd4fb3b08644cb5798c2", "message": "test: more tests", "committedDate": "2020-09-24T14:49:12Z", "type": "commit"}, {"oid": "ae9f2295c1cbdaa471d23f28c2fa14e0b4375b92", "url": "https://github.com/confluentinc/ksql/commit/ae9f2295c1cbdaa471d23f28c2fa14e0b4375b92", "message": "chore: windowed keys", "committedDate": "2020-09-24T15:26:56Z", "type": "commit"}, {"oid": "2adf60bca0f18cc2dddaf466e548374222dbb1f5", "url": "https://github.com/confluentinc/ksql/commit/2adf60bca0f18cc2dddaf466e548374222dbb1f5", "message": "chore: merge from master\n\n...and fix test", "committedDate": "2020-09-25T12:59:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAwMTUwNQ==", "url": "https://github.com/confluentinc/ksql/pull/6292#discussion_r496001505", "bodyText": "The PR description says this test is currently disabled. How so?", "author": "vcrfxia", "createdAt": "2020-09-28T14:53:02Z", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/json.json", "diffHunk": "@@ -1,31 +1,426 @@\n {\n   \"tests\": [\n     {\n-      \"name\": \"deserialize anonymous primitive - value\",\n+      \"name\": \"BOOLEAN - key\",\n       \"statements\": [\n-        \"CREATE STREAM INPUT (K STRING KEY, foo INT) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='JSON');\",\n+        \"CREATE STREAM INPUT (K BOOLEAN KEY, V INT) WITH (kafka_topic='input_topic', format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT * FROM INPUT;\"\n+      ],\n+      \"properties\": {\n+        \"ksql.key.format.enabled\": true\n+      },\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"key\": true, \"value\": {\"V\": 0}},\n+        {\"topic\": \"input_topic\", \"key\": false, \"value\": {\"V\": 0}},\n+        {\"topic\": \"input_topic\", \"key\": null, \"value\": {\"V\": 0}}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"key\": true, \"value\": {\"V\": 0}},\n+        {\"topic\": \"OUTPUT\", \"key\": false, \"value\": {\"V\": 0}},\n+        {\"topic\": \"OUTPUT\", \"key\": null, \"value\": {\"V\": 0}}\n+      ]\n+    },\n+    {\n+      \"name\": \"BOOLEAN - value - anonymous - deserialize\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (V BOOLEAN) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT * FROM INPUT;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"value\": true},\n+        {\"topic\": \"input_topic\", \"value\": false},\n+        {\"topic\": \"input_topic\", \"value\": null}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": {\"V\": true}},\n+        {\"topic\": \"OUTPUT\", \"value\": {\"V\": false}},\n+        {\"topic\": \"OUTPUT\", \"value\": null}\n+      ]\n+    },\n+    {\n+      \"name\": \"BOOLEAN - value - anonymous - serialize\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (V BOOLEAN) WITH (kafka_topic='input_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"value\": {\"V\": true}},\n+        {\"topic\": \"input_topic\", \"value\": {\"V\": false}},\n+        {\"topic\": \"input_topic\", \"value\": null}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": true},\n+        {\"topic\": \"OUTPUT\", \"value\": false},\n+        {\"topic\": \"OUTPUT\", \"value\": null}\n+      ]\n+    },\n+    {\n+      \"name\": \"INT - key\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (K INT KEY, V INT) WITH (kafka_topic='input_topic', format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT * FROM INPUT;\"\n+      ],\n+      \"properties\": {\n+        \"ksql.key.format.enabled\": true\n+      },\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"key\": 33, \"value\": {\"V\": 0}},\n+        {\"topic\": \"input_topic\", \"key\": null, \"value\": {\"V\": 0}}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"key\": 33, \"value\": {\"V\": 0}},\n+        {\"topic\": \"OUTPUT\", \"key\": null, \"value\": {\"V\": 0}}\n+      ]\n+    },\n+    {\n+      \"name\": \"INT - value - anonymous - deserialize\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (V INT) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='JSON');\",\n         \"CREATE STREAM OUTPUT AS SELECT * FROM INPUT;\"\n       ],\n       \"inputs\": [\n         {\"topic\": \"input_topic\", \"value\": 10},\n         {\"topic\": \"input_topic\", \"value\": null}\n       ],\n       \"outputs\": [\n-        {\"topic\": \"OUTPUT\", \"value\": {\"FOO\": 10}},\n+        {\"topic\": \"OUTPUT\", \"value\": {\"V\": 10}},\n+        {\"topic\": \"OUTPUT\", \"value\": null}\n+      ]\n+    },\n+    {\n+      \"name\": \"INT - value - anonymous - serialize\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (V INT) WITH (kafka_topic='input_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"value\": {\"V\": 123}},\n+        {\"topic\": \"input_topic\", \"value\": null}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": 123},\n+        {\"topic\": \"OUTPUT\", \"value\": null}\n+      ]\n+    },\n+    {\n+      \"name\": \"BIGINT - key\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (K BIGINT KEY, V INT) WITH (kafka_topic='input_topic', format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT * FROM INPUT;\"\n+      ],\n+      \"properties\": {\n+        \"ksql.key.format.enabled\": true\n+      },\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"key\": 998877665544332211, \"value\": {\"V\": 0}},\n+        {\"topic\": \"input_topic\", \"key\": null, \"value\": {\"V\": 0}}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"key\": 998877665544332211, \"value\": {\"V\": 0}},\n+        {\"topic\": \"OUTPUT\", \"key\": null, \"value\": {\"V\": 0}}\n+      ]\n+    },\n+    {\n+      \"name\": \"BIGINT - value - anonymous - deserialize\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (V BIGINT) WITH (WRAP_SINGLE_VALUE=false, kafka_topic='input_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT * FROM INPUT;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"value\": 10827272222},\n+        {\"topic\": \"input_topic\", \"value\": null}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": {\"V\": 10827272222}},\n+        {\"topic\": \"OUTPUT\", \"value\": null}\n+      ]\n+    },\n+    {\n+      \"name\": \"BIGINT - value - anonymous - serialize\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (V BIGINT) WITH (kafka_topic='input_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT WITH (WRAP_SINGLE_VALUE=false) AS SELECT * FROM INPUT;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"input_topic\", \"value\": {\"V\": 1234567890}},\n+        {\"topic\": \"input_topic\", \"value\": null}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": 1234567890},\n+        {\"topic\": \"OUTPUT\", \"value\": null}\n+      ]\n+    },\n+    {\n+      \"name\": \"DOUBLE - key\",", "originalCommit": "2adf60bca0f18cc2dddaf466e548374222dbb1f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAxODkyOQ==", "url": "https://github.com/confluentinc/ksql/pull/6292#discussion_r496018929", "bodyText": "Ah, I'll update the title.  I pushed another commit after creating the PR to enable the double testing.", "author": "big-andy-coates", "createdAt": "2020-09-28T15:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAwMTUwNQ=="}], "type": "inlineReview"}, {"oid": "f107dc21f5ee354798f69c689c21e593124ec739", "url": "https://github.com/confluentinc/ksql/commit/f107dc21f5ee354798f69c689c21e593124ec739", "message": "chore: fix test", "committedDate": "2020-09-28T17:00:08Z", "type": "commit"}, {"oid": "6bf23434c72a988d4ba433ac2274097e84273a52", "url": "https://github.com/confluentinc/ksql/commit/6bf23434c72a988d4ba433ac2274097e84273a52", "message": "chore: merge from master\n\nConflicting files\nksqldb-engine/src/main/java/io/confluent/ksql/ddl/commands/CreateSourceFactory.java\nksqldb-engine/src/main/java/io/confluent/ksql/planner/LogicalPlanner.java\nksqldb-engine/src/main/java/io/confluent/ksql/schema/ksql/inference/SchemaRegisterInjector.java\nksqldb-engine/src/main/java/io/confluent/ksql/serde/SerdeOptionsFactory.java\nksqldb-engine/src/main/java/io/confluent/ksql/structured/SchemaKGroupedStream.java\nksqldb-engine/src/test/java/io/confluent/ksql/serde/SerdeOptionsFactoryTest.java\nksqldb-engine/src/test/java/io/confluent/ksql/structured/SchemaKGroupedStreamTest.java\nksqldb-functional-tests/src/main/java/io/confluent/ksql/test/tools/TestCaseBuilderUtil.java", "committedDate": "2020-09-29T15:09:01Z", "type": "commit"}]}