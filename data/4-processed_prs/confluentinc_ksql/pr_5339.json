{"pr_number": 5339, "pr_title": "chore: build ksqlDB against 6.0.0", "pr_createdAt": "2020-05-12T07:39:11Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5339", "timeline": [{"oid": "32e91e2c7d4124a11b781e0919e93f966bccff6f", "url": "https://github.com/confluentinc/ksql/commit/32e91e2c7d4124a11b781e0919e93f966bccff6f", "message": "build ksqlDB against 6.0.0\n\n- drop cp/kaka versions from pom.xml and just use the ones from common\n- fix usage of ssl factory\n- fix decimal serialization tests", "committedDate": "2020-05-12T09:01:26Z", "type": "commit"}, {"oid": "32e91e2c7d4124a11b781e0919e93f966bccff6f", "url": "https://github.com/confluentinc/ksql/commit/32e91e2c7d4124a11b781e0919e93f966bccff6f", "message": "build ksqlDB against 6.0.0\n\n- drop cp/kaka versions from pom.xml and just use the ones from common\n- fix usage of ssl factory\n- fix decimal serialization tests", "committedDate": "2020-05-12T09:01:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4MDc5MQ==", "url": "https://github.com/confluentinc/ksql/pull/5339#discussion_r423880791", "bodyText": "shouldn't we enable the test below? also why does this change 0.00010 is not DECIMAL(6,4). Seems like a bug?", "author": "agavra", "createdAt": "2020-05-12T16:44:26Z", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/decimal.json", "diffHunk": "@@ -64,7 +64,7 @@\n         {\"topic\": \"OUTPUT\", \"value\": {\"DEC\": 0.1}},\n         {\"topic\": \"OUTPUT\", \"value\": {\"DEC\": 0.01}},\n         {\"topic\": \"OUTPUT\", \"value\": {\"DEC\": 0.001}},\n-        {\"topic\": \"OUTPUT\", \"value\": {\"DEC\": 0.0001}}\n+        {\"topic\": \"OUTPUT\", \"value\": {\"DEC\": 0.00010}}", "originalCommit": "32e91e2c7d4124a11b781e0919e93f966bccff6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5OTYxNQ==", "url": "https://github.com/confluentinc/ksql/pull/5339#discussion_r424099615", "bodyText": "Discussed offline. This is happening for a few reasons, none of which is a regression that this patch introduces.\nFirst, we fixed the serialization bug where we chop off trailing zeroes, so now trailing zeroes that are in the decimal values being serialized are showing up. But why are there trailing zeroes?\nOur test code takes the value from the input topic and deserializes/serializes it from/to json a couple times before it puts it in the source topic. In one of those serializations, it converts it to a double value in the form \"10E-5\". ksqlDB's json deserializer then picks it up and converts it to the decimal \"0.00010\", and eventually writes that decimal to the sink. So one reason is that the test code is changing the value in the source.\nStill, I would think our deserializer would coerce the received value into the decimal scale defined in the schema, but it's not doing that. I think this might be a bug (we can discuss in a follow-up).\nI'm going to merge this PR because I don't think it's adding new regressions, and then file follow-ups to address the above 2 issues.", "author": "rodesai", "createdAt": "2020-05-12T23:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4MDc5MQ=="}], "type": "inlineReview"}]}