{"pr_number": 6012, "pr_title": "feat: move command topic deserialization to CommandRunner and introduce DEGRADED CommandRunnerStatus", "pr_createdAt": "2020-08-13T04:38:17Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6012", "timeline": [{"oid": "02ce7ab93f6f599bbbb7c1edfd7487f546e97c94", "url": "https://github.com/confluentinc/ksql/commit/02ce7ab93f6f599bbbb7c1edfd7487f546e97c94", "message": "temp", "committedDate": "2020-08-13T07:15:20Z", "type": "forcePushed"}, {"oid": "71dc3c4d8ba634a9cf372f71ee5881bcb467f578", "url": "https://github.com/confluentinc/ksql/commit/71dc3c4d8ba634a9cf372f71ee5881bcb467f578", "message": "temp", "committedDate": "2020-08-13T20:01:32Z", "type": "forcePushed"}, {"oid": "c983cd5159521be8d3028a2cf28d1998cbe73cdd", "url": "https://github.com/confluentinc/ksql/commit/c983cd5159521be8d3028a2cf28d1998cbe73cdd", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-13T20:40:06Z", "type": "forcePushed"}, {"oid": "1d1918eeb5cfa4742e71ffaf652afe317fe2701b", "url": "https://github.com/confluentinc/ksql/commit/1d1918eeb5cfa4742e71ffaf652afe317fe2701b", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-13T21:09:58Z", "type": "forcePushed"}, {"oid": "edd24664f0e306cdef243b1e3141d70939bc60e6", "url": "https://github.com/confluentinc/ksql/commit/edd24664f0e306cdef243b1e3141d70939bc60e6", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-13T22:47:21Z", "type": "forcePushed"}, {"oid": "03f27a9d8caf8a961be8bdb63c6512cf9365d307", "url": "https://github.com/confluentinc/ksql/commit/03f27a9d8caf8a961be8bdb63c6512cf9365d307", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-14T04:20:24Z", "type": "forcePushed"}, {"oid": "f03080efe77639a401efd2b5a2d7796d0b4bf00d", "url": "https://github.com/confluentinc/ksql/commit/f03080efe77639a401efd2b5a2d7796d0b4bf00d", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-14T04:29:06Z", "type": "forcePushed"}, {"oid": "69c4c5527ddc0b6cf7edba8ded17b4bb409726b9", "url": "https://github.com/confluentinc/ksql/commit/69c4c5527ddc0b6cf7edba8ded17b4bb409726b9", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-14T04:51:30Z", "type": "forcePushed"}, {"oid": "09356e8b37725a1c2c8d948f0c6a326c116d2602", "url": "https://github.com/confluentinc/ksql/commit/09356e8b37725a1c2c8d948f0c6a326c116d2602", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-14T07:27:24Z", "type": "commit"}, {"oid": "09356e8b37725a1c2c8d948f0c6a326c116d2602", "url": "https://github.com/confluentinc/ksql/commit/09356e8b37725a1c2c8d948f0c6a326c116d2602", "message": "feat: move deserialization to CommandRunner and introduce DEGRADED to CommandRunnerStatus", "committedDate": "2020-08-14T07:27:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NzE4Ng==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r471857186", "bodyText": "I don't agree with the decision to pull QueuedCommand out of this interface and replace it with Pair<ConsumerRecord, CommandStatusFuture>> since it breaks this abstraction unnecessarily. The idea behind this interface was to provide an api to a message queue where a caller could enqueue/dequeue, and also register to be notified when a given message is consumed/processed, or when a given offset is consumed/processed. It's not important that the backing store is Kafka, and that shouldn't really leak into the interface (I know the txnl producer is in there, but that can be fixed). It's also not that important that the messages have key/value types CommandID/Command (I know, bad naming \ud83d\ude01 ). Therefore I think it would be better to organize this in the following way:\nLeave this interface mostly the same, except change references to Command and CommandID to byte[]\nChange QueuedCommand's members to be:\nclass QueuedCommand {\n    byte[] commandId;\n    byte[] command;\n    ....\n}\n\nThat said, it is useful to have an explicit type for Command to improve safety (so for example, a caller can't accidentally mix them up, or CommandStore can't accidentally use the Command as the key to the status map). So, an additional improvement we could make would be to leave the command parameters as type Command (I'd still use byte[] for the command id and just serialize/deserialize that from the caller). Then, in QueuedCommand, change getCommand to getAndDeserializeCommand(Deserializer<Command> deserializer) so that CommandRunner is the entity that actually does the deserialization.", "author": "rodesai", "createdAt": "2020-08-18T01:11:37Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/CommandQueue.java", "diffHunk": "@@ -48,29 +52,32 @@ QueuedCommandStatus enqueueCommand(\n   );\n   \n   /**\n-   * Polls the Queue for any commands that have been enqueued since the last\n-   * invocation to this method.\n+   * Polls the Queue for any command records that have been enqueued since the last\n+   * invocation to this method. Returns the CommandStatusFuture associated with a record\n+   * if it exists\n    *\n    * <p>The method blocks until either there is data to return or the\n    * supplied {@code timeout} expires.\n    *\n    * <p>If between invocations to this method, {@link #getRestoreCommands()} is\n    * invoked, this command will begin where the results of that call ended.\n    *\n-   * @param timeout the max time to wait for new commands.\n-   * @return a list of commands that have been enqueued since the last call\n+   * @param timeout the max time to wait for new records.\n+   * @return a list of records that have been enqueued since the last call\n    * @apiNote this method may block\n    */\n-  List<QueuedCommand> getNewCommands(Duration timeout);", "originalCommit": "09356e8b37725a1c2c8d948f0c6a326c116d2602", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMTk4MQ==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r472411981", "bodyText": "I used your suggestion as a guideline and have updated the PR. (No changes to CommandQueue)", "author": "stevenpyzhang", "createdAt": "2020-08-18T18:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NzE4Ng=="}], "type": "inlineReview"}, {"oid": "04d7121873b6360ee88034ddd6ca037b0d2c0da8", "url": "https://github.com/confluentinc/ksql/commit/04d7121873b6360ee88034ddd6ca037b0d2c0da8", "message": "rohan comment", "committedDate": "2020-08-18T18:51:23Z", "type": "forcePushed"}, {"oid": "4f5ce5f5a60329dcebf3027cceca1d13eee1ed5c", "url": "https://github.com/confluentinc/ksql/commit/4f5ce5f5a60329dcebf3027cceca1d13eee1ed5c", "message": "rohan comment", "committedDate": "2020-08-18T18:54:06Z", "type": "commit"}, {"oid": "4f5ce5f5a60329dcebf3027cceca1d13eee1ed5c", "url": "https://github.com/confluentinc/ksql/commit/4f5ce5f5a60329dcebf3027cceca1d13eee1ed5c", "message": "rohan comment", "committedDate": "2020-08-18T18:54:06Z", "type": "forcePushed"}, {"oid": "dae4eee5a9625404ccdcb8b742ab35400792e226", "url": "https://github.com/confluentinc/ksql/commit/dae4eee5a9625404ccdcb8b742ab35400792e226", "message": "fix test", "committedDate": "2020-08-18T20:16:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1NTE2NA==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r472755164", "bodyText": "do we really need this class? it's not really doing anything", "author": "rodesai", "createdAt": "2020-08-19T06:27:38Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/util/CommandTopicUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.util;\n+\n+import io.confluent.ksql.rest.entity.CommandId;\n+import io.confluent.ksql.rest.server.computation.Command;\n+import io.confluent.ksql.rest.server.computation.InternalTopicSerdes;\n+\n+public final class CommandTopicUtil {", "originalCommit": "dae4eee5a9625404ccdcb8b742ab35400792e226", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMwMjc4NA==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r473302784", "bodyText": "removed now", "author": "stevenpyzhang", "createdAt": "2020-08-19T20:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1NTE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc2NzEwNw==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r472767107", "bodyText": "Couple of thoughts about design here:\nIt would be nice to try to structure this so that the implementation of CommandStore cannot deserialize Command (at least not without making assumptions about its format, which it shouldn't do). This would require the following tweaks:\n\nmake the CommandID serializer/deserializer, and the Command serializer only (not deserializer) parameters to CommandStore passed in the constructor. Don't have it accept a deserializer.\nmake the deserializer a parameter to QueuedCommand.getAndDeserializeCommand()", "author": "rodesai", "createdAt": "2020-08-19T06:43:24Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/CommandStore.java", "diffHunk": "@@ -55,6 +59,7 @@\n // CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling\n public class CommandStore implements CommandQueue, Closeable {", "originalCommit": "dae4eee5a9625404ccdcb8b742ab35400792e226", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMwMzIyMQ==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r473303221", "bodyText": "Done", "author": "stevenpyzhang", "createdAt": "2020-08-19T20:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc2NzEwNw=="}], "type": "inlineReview"}, {"oid": "d5aba943a40f9126bcda43d0b774b2846ca98538", "url": "https://github.com/confluentinc/ksql/commit/d5aba943a40f9126bcda43d0b774b2846ca98538", "message": "more feedback", "committedDate": "2020-08-19T17:46:40Z", "type": "commit"}, {"oid": "5110d66e3416abb4bc92582590e59a3e601b2b45", "url": "https://github.com/confluentinc/ksql/commit/5110d66e3416abb4bc92582590e59a3e601b2b45", "message": "pass deserializer to queuedcommand for command", "committedDate": "2020-08-19T20:28:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MjI0NA==", "url": "https://github.com/confluentinc/ksql/pull/6012#discussion_r473562244", "bodyText": "nit: I'd just pass command, commandId, status, and offset in as parameters rather than deserializing from this method", "author": "rodesai", "createdAt": "2020-08-20T03:13:37Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/InteractiveStatementExecutor.java", "diffHunk": "@@ -117,8 +123,8 @@ void handleStatement(final QueuedCommand queuedCommand) {\n     throwIfNotConfigured();\n \n     handleStatementWithTerminatedQueries(\n-        queuedCommand.getCommand(),", "originalCommit": "5110d66e3416abb4bc92582590e59a3e601b2b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}