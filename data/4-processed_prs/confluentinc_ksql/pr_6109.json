{"pr_number": 6109, "pr_title": "feat: clarify key or value in (de)serialization processing log messages", "pr_createdAt": "2020-08-27T15:16:39Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6109", "timeline": [{"oid": "6633890524c6291f75bcbfdf91a0a479e3da5a46", "url": "https://github.com/confluentinc/ksql/commit/6633890524c6291f75bcbfdf91a0a479e3da5a46", "message": "chore: fix typo", "committedDate": "2020-08-27T15:10:49Z", "type": "commit"}, {"oid": "b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "url": "https://github.com/confluentinc/ksql/commit/b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "message": "feat: add component to (de)serialization processing log messages", "committedDate": "2020-08-27T15:10:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5ODc0Ng==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r478498746", "bodyText": "Not a huge fan of the name \"component\" but couldn't think of anything better. Hopefully someone else has a better suggestion?", "author": "vcrfxia", "createdAt": "2020-08-27T15:18:04Z", "path": "docs/developer-guide/test-and-debug/processing-log.md", "diffHunk": "@@ -121,6 +121,11 @@ message.deserializationError (STRUCT)\n :   The contents of a message with type 0 (DESERIALIZATION_ERROR).\n     Logged when a deserializer fails to deserialize an {{ site.ak }} record.\n \n+message.deserializationError.component (STRING)", "originalCommit": "b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5NjE3MA==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r478596170", "bodyText": "I poked around a bit and didn't see consensus on a good term, but I did see a few sources using the very technical term \"part\", like \"key-part\" and \"value-part\".", "author": "JimGalasyn", "createdAt": "2020-08-27T17:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5ODc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwMjgxOA==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r481102818", "bodyText": "Don't mind component or part, or how about target?", "author": "big-andy-coates", "createdAt": "2020-09-01T12:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5ODc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY1MDQxNg==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r482650416", "bodyText": "Sure, updated to \"target\".", "author": "vcrfxia", "createdAt": "2020-09-03T02:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5ODc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNTIxMw==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r481105213", "bodyText": "We should have a unit test testing this. Can you add one please?", "author": "big-andy-coates", "createdAt": "2020-09-01T12:38:26Z", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/logging/processing/SerializationError.java", "diffHunk": "@@ -58,30 +59,32 @@ public boolean equals(final Object o) {\n     if (o == null || getClass() != o.getClass()) {\n       return false;\n     }\n-    final SerializationError<?> that = (SerializationError) o;\n+    final SerializationError<?> that = (SerializationError<?>) o;\n     return Objects.equals(exception, that.exception)\n         && Objects.equals(record, that.record)\n-        && Objects.equals(topic, that.topic);\n+        && Objects.equals(topic, that.topic)\n+        && isKey == that.isKey;\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(exception, record, topic);\n+    return Objects.hash(exception, record, topic, isKey);", "originalCommit": "b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNTU1OQ==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r481105559", "bodyText": "We should have a unit test testing this. Can you add one please?", "author": "big-andy-coates", "createdAt": "2020-09-01T12:38:59Z", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/logging/processing/DeserializationError.java", "diffHunk": "@@ -62,27 +63,29 @@ public boolean equals(final Object o) {\n     final DeserializationError that = (DeserializationError) o;\n     return Objects.equals(exception, that.exception)\n         && Objects.equals(record, that.record)\n-        && Objects.equals(topic, that.topic);\n+        && Objects.equals(topic, that.topic)\n+        && isKey == that.isKey;\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(exception, record, topic);\n+    return Objects.hash(exception, record, topic, isKey);", "originalCommit": "b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNjEzMw==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r481106133", "bodyText": "I know this is a cut & paste, but I've seen this remove(0) remove the actual cause of the error, e.g. I've seen cases where exception is a simple NullPointerException and the remove(0) has resulted in an empty cause list.\nPersonally, I'd remove the remove and inline this method.\nWhich would only leave getRecordComponent, which I'd also be tempted to remove, and just add appropriate \"key\" and \"value\" constants to ProcessingLogMessageSchema instead.", "author": "big-andy-coates", "createdAt": "2020-09-01T12:39:58Z", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/logging/processing/LoggingSerdeUtil.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.logging.processing;\n+\n+import io.confluent.ksql.util.ErrorMessageUtil;\n+import java.util.List;\n+\n+final class LoggingSerdeUtil {\n+\n+  private LoggingSerdeUtil() {\n+  }\n+\n+  static List<String> getCause(final Throwable exception) {\n+    final List<String> cause = ErrorMessageUtil.getErrorMessages(exception);\n+    cause.remove(0);", "originalCommit": "b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY0MjYwNg==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r482642606", "bodyText": "The first error message (the one being removed by this line) is already captured in the errorMessage field, which is why it's purposefully left out of the cause field. It sounds like you're advocating for duplication of the initial error message, so that the cause field is complete?", "author": "vcrfxia", "createdAt": "2020-09-03T01:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNjEzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEwNzEyNQ==", "url": "https://github.com/confluentinc/ksql/pull/6109#discussion_r481107125", "bodyText": "Probably worth adding a test that called configure with isKey=true, and ensure logged error has isKey=true.\nSame for LoggingSerializerTest.", "author": "big-andy-coates", "createdAt": "2020-09-01T12:41:43Z", "path": "ksqldb-serde/src/test/java/io/confluent/ksql/logging/processing/LoggingDeserializerTest.java", "diffHunk": "@@ -60,6 +61,7 @@\n   @Before\n   public void setUp() {\n     deserializer = new LoggingDeserializer<>(delegate, processingLogger);\n+    deserializer.configure(Collections.emptyMap(), false);", "originalCommit": "b63c2960c11fcd95bc5809323044ed04ce6ccaf8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b47e9476c91192d6201ea35cbff8b40f579804e3", "url": "https://github.com/confluentinc/ksql/commit/b47e9476c91192d6201ea35cbff8b40f579804e3", "message": "test: add hashcode and equals tests", "committedDate": "2020-09-03T01:52:39Z", "type": "commit"}, {"oid": "9fc4dec270388ab1c48454a068ff273dcd3dc9cc", "url": "https://github.com/confluentinc/ksql/commit/9fc4dec270388ab1c48454a068ff273dcd3dc9cc", "message": "test: add logging serde unit test for keys", "committedDate": "2020-09-03T02:06:13Z", "type": "commit"}, {"oid": "2c828f878a1da1db4ec6e13e51547e24bf30f9b4", "url": "https://github.com/confluentinc/ksql/commit/2c828f878a1da1db4ec6e13e51547e24bf30f9b4", "message": "chore: rename component to target", "committedDate": "2020-09-03T02:09:58Z", "type": "commit"}]}