{"pr_number": 4553, "pr_title": "docs: copy new serialization content to 5.5.x branch (DOCS-3399)", "pr_createdAt": "2020-02-13T16:24:18Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4553", "timeline": [{"oid": "e0547138e45bb3c9dcd46288b4a18f2d70e8088d", "url": "https://github.com/confluentinc/ksql/commit/e0547138e45bb3c9dcd46288b4a18f2d70e8088d", "message": "docs: copy new serialization content to 5.5.x branch (DOCS-3399)", "committedDate": "2020-02-13T16:20:48Z", "type": "commit"}, {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "url": "https://github.com/confluentinc/ksql/commit/89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "message": "docs: add newline to schemas topic to prevent future merge conflict", "committedDate": "2020-02-13T16:26:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMzg4MQ==", "url": "https://github.com/confluentinc/ksql/pull/4553#discussion_r379523881", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            can have any name.\n          \n          \n            \n            can have any [name](#valid-identifiers).", "author": "big-andy-coates", "createdAt": "2020-02-14T16:26:03Z", "path": "docs-md/concepts/schemas.md", "diffHunk": "@@ -1,17 +1,190 @@\n ---\r\n layout: page\r\n title: Schemas in ksqlDB\r\n-tagline: Use schemas in your queries \r\n+tagline: Defining the structure of your data\r\n description: Learn how schemas work with ksqlDB\r\n keywords: ksqldb, schema, evolution, avro\r\n ---\r\n \r\n+Data sources like streams and tables have an associated schema. This schema defines the columns\r\n+available in the data, just like a the columns in a traditional SQL database table.\r\n+\r\n+## Key vs Value columns\r\n+\r\n+KsqlDB supports both key and value columns. These map to the data held in the keys and values of the\r\n+underlying {{ site.ak }} topic.\r\n+\r\n+A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\r\n+and possibly a namespace.\r\n+\r\n+Key columns have a `KEY` namespace suffix. Key columns have the following restrictions:\r\n+  * The can only be a single key column, currently.\r\n+  * The key column must be named `ROWKEY` in the KSQL schema.\r\n+\r\n+Value columns have no namespace suffix. There can be one or more value columns amd the value columns\r\n+can have any name.\r", "originalCommit": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNTQ3Nw==", "url": "https://github.com/confluentinc/ksql/pull/4553#discussion_r379525477", "bodyText": "I added this, but forgot to test that it renders the backticks correctly... it doesn't!\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            back-tick quotes, for example ``col0``.\n          \n          \n            \n            back-tick quotes, for example `` `col0` ``.", "author": "big-andy-coates", "createdAt": "2020-02-14T16:29:03Z", "path": "docs-md/concepts/schemas.md", "diffHunk": "@@ -1,17 +1,190 @@\n ---\r\n layout: page\r\n title: Schemas in ksqlDB\r\n-tagline: Use schemas in your queries \r\n+tagline: Defining the structure of your data\r\n description: Learn how schemas work with ksqlDB\r\n keywords: ksqldb, schema, evolution, avro\r\n ---\r\n \r\n+Data sources like streams and tables have an associated schema. This schema defines the columns\r\n+available in the data, just like a the columns in a traditional SQL database table.\r\n+\r\n+## Key vs Value columns\r\n+\r\n+KsqlDB supports both key and value columns. These map to the data held in the keys and values of the\r\n+underlying {{ site.ak }} topic.\r\n+\r\n+A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\r\n+and possibly a namespace.\r\n+\r\n+Key columns have a `KEY` namespace suffix. Key columns have the following restrictions:\r\n+  * The can only be a single key column, currently.\r\n+  * The key column must be named `ROWKEY` in the KSQL schema.\r\n+\r\n+Value columns have no namespace suffix. There can be one or more value columns amd the value columns\r\n+can have any name.\r\n+\r\n+For example, the following declares a schema with a single `INT` key column and several value\r\n+columns:\r\n+\r\n+```sql\r\n+ROWKEY INT KEY, ID BIGINT, STRING NAME, ADDRESS ADDRESS_TYPE\r\n+```\r\n+\r\n+## Valid Identifiers\r\n+\r\n+Column and field names must be valid identifiers.\r\n+\r\n+Unquoted identifiers will be treated as upper-case, for example `col0` is equivalent to `COL0`, and\r\n+must contain only alpha-numeric and underscore characters.\r\n+\r\n+Identifiers containing invalid character, or where case needs to be preserved, can be quoted using\r\n+back-tick quotes, for example ``col0``.\r", "originalCommit": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNjEyMA==", "url": "https://github.com/confluentinc/ksql/pull/4553#discussion_r379526120", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\n          \n          \n            \n            A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-types),", "author": "big-andy-coates", "createdAt": "2020-02-14T16:30:17Z", "path": "docs-md/concepts/schemas.md", "diffHunk": "@@ -1,17 +1,190 @@\n ---\r\n layout: page\r\n title: Schemas in ksqlDB\r\n-tagline: Use schemas in your queries \r\n+tagline: Defining the structure of your data\r\n description: Learn how schemas work with ksqlDB\r\n keywords: ksqldb, schema, evolution, avro\r\n ---\r\n \r\n+Data sources like streams and tables have an associated schema. This schema defines the columns\r\n+available in the data, just like a the columns in a traditional SQL database table.\r\n+\r\n+## Key vs Value columns\r\n+\r\n+KsqlDB supports both key and value columns. These map to the data held in the keys and values of the\r\n+underlying {{ site.ak }} topic.\r\n+\r\n+A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\r", "originalCommit": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}