{"pr_number": 5961, "pr_title": "docs: add suppress docs (DOCS-4828)", "pr_createdAt": "2020-08-06T20:03:26Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5961", "timeline": [{"oid": "b7a1eff631426161196eb7d1904701714bee41f3", "url": "https://github.com/confluentinc/ksql/commit/b7a1eff631426161196eb7d1904701714bee41f3", "message": "docs: add suppress docs", "committedDate": "2020-08-06T20:02:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTk5Ng==", "url": "https://github.com/confluentinc/ksql/pull/5961#discussion_r466669996", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Specify a push query by using the EMIT clause in a SELECT statement.\n          \n          \n            \n            Specify a push query by using an EMIT refinement clause in a SELECT statement.", "author": "agavra", "createdAt": "2020-08-06T20:33:03Z", "path": "docs/concepts/queries/push.md", "diffHunk": "@@ -38,7 +38,7 @@ CREATE TABLE AS SELECT or CREATE STREAM AS SELECT statement.\n Example push query\r\n ==================\r\n \r\n-Specify a push query by using the EMIT CHANGES clause in a SELECT statement.\r\n+Specify a push query by using the EMIT clause in a SELECT statement.\r", "originalCommit": "b7a1eff631426161196eb7d1904701714bee41f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MTQxMA==", "url": "https://github.com/confluentinc/ksql/pull/5961#discussion_r466671410", "bodyText": "might be good to link to the documentation explaining different refinement expressions (currently in select-push-query.md)", "author": "agavra", "createdAt": "2020-08-06T20:35:52Z", "path": "docs/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -423,3 +423,22 @@ CREATE TABLE pageviews_per_region AS\n \n Note that the specified retention period should be larger than the sum of window size and any grace\n period.\n+\n+### Window Final Results\n+\n+In ksqlDB, windowed aggregations update their results continuously. As new data arrives for \n+a window, freshly computed results are emitted downstream. For many applications, this is ideal, \n+since fresh results are always available, and ksqlDB is designed to make programming \n+continuous computations seamless. However, some applications need to take action only on the final \n+result of a windowed computation. Common examples of this are sending alerts or delivering results \n+to a system that doesn\u2019t support updates.\n+\n+Suppose that you have an hourly windowed count of events per user. If you want to send an alert \n+when a user has less than three events in an hour, you have a real challenge. All users would match \n+this condition at first, until they accrue enough events, so you can\u2019t simply send an alert when \n+someone matches the condition; you have to wait until you know you won\u2019t see any more events for a \n+particular window, and then send the alert.\n+\n+ksqlDB offers a clean way to define this logic: after defining your windowed aggregation, \n+you can suppress the intermediate results, emitting the final count for each user when the window \n+is closed.", "originalCommit": "b7a1eff631426161196eb7d1904701714bee41f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MTYyNQ==", "url": "https://github.com/confluentinc/ksql/pull/5961#discussion_r466671625", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Note that EMIT clause defaults to `EMIT CHANGES` unless explicitly set to `EMIT FINAL` on a\n          \n          \n            \n            Note that EMIT `output_refinement` defaults to `CHANGES` unless explicitly set to `FINAL` on a", "author": "agavra", "createdAt": "2020-08-06T20:36:20Z", "path": "docs/developer-guide/ksqldb-reference/create-table-as-select.md", "diffHunk": "@@ -34,6 +34,9 @@ stream the result of the query as a changelog into the topic.\n Note that the WINDOW clause can only be used if the `from_item` is a stream and the query contains\r\n a `GROUP BY` clause.\r\n \r\n+Note that EMIT clause defaults to `EMIT CHANGES` unless explicitly set to `EMIT FINAL` on a\r", "originalCommit": "b7a1eff631426161196eb7d1904701714bee41f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjAxNA==", "url": "https://github.com/confluentinc/ksql/pull/5961#discussion_r466672014", "bodyText": "nit: should probably be nested one layer deeper (and below)", "author": "agavra", "createdAt": "2020-08-06T20:37:07Z", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -184,3 +184,21 @@ SELECT windowstart, windowend, item_id, SUM(quantity)\n   GROUP BY item_id\r\n   EMIT CHANGES;\r\n ```\r\n+\r\n+#### EMIT\r\n+\r\n+The EMIT clause lets you control the output refinement of your push query. The output refinement is\r\n+just how you would like to *emit* your results. \r\n+\r\n+ksqlDB supports the following output refinement types.\r\n+\r\n+#### CHANGES\r", "originalCommit": "b7a1eff631426161196eb7d1904701714bee41f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjEwOQ==", "url": "https://github.com/confluentinc/ksql/pull/5961#discussion_r466672109", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            just how you would like to *emit* your results. \n          \n          \n            \n            how you would like to *emit* your results.", "author": "agavra", "createdAt": "2020-08-06T20:37:20Z", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -184,3 +184,21 @@ SELECT windowstart, windowend, item_id, SUM(quantity)\n   GROUP BY item_id\r\n   EMIT CHANGES;\r\n ```\r\n+\r\n+#### EMIT\r\n+\r\n+The EMIT clause lets you control the output refinement of your push query. The output refinement is\r\n+just how you would like to *emit* your results. \r", "originalCommit": "b7a1eff631426161196eb7d1904701714bee41f3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46b5123b91520d64f3dac1aa168ae8612c542b9c", "url": "https://github.com/confluentinc/ksql/commit/46b5123b91520d64f3dac1aa168ae8612c542b9c", "message": "Update docs/concepts/queries/push.md\n\nCo-authored-by: Almog Gavra <almog@confluent.io>", "committedDate": "2020-08-06T22:21:26Z", "type": "commit"}, {"oid": "7ea7c9cce255bffbff4cd8810a9482e1584b4524", "url": "https://github.com/confluentinc/ksql/commit/7ea7c9cce255bffbff4cd8810a9482e1584b4524", "message": "Update docs/developer-guide/ksqldb-reference/create-table-as-select.md\n\nCo-authored-by: Almog Gavra <almog@confluent.io>", "committedDate": "2020-08-06T22:22:20Z", "type": "commit"}, {"oid": "f765e7e69c5037cb36aaccb79352d5a356d4b41f", "url": "https://github.com/confluentinc/ksql/commit/f765e7e69c5037cb36aaccb79352d5a356d4b41f", "message": "Update docs/developer-guide/ksqldb-reference/select-push-query.md\n\nCo-authored-by: Almog Gavra <almog@confluent.io>", "committedDate": "2020-08-06T22:22:40Z", "type": "commit"}]}