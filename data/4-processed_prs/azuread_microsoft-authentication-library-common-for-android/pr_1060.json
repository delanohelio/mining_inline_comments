{"pr_number": 1060, "pr_title": "Apply Fixes from #1055", "pr_createdAt": "2020-09-28T17:23:18Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060", "timeline": [{"oid": "b093c6ed7e283526e79e8afa44464e881b421af2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b093c6ed7e283526e79e8afa44464e881b421af2", "message": "Become less dependent on the execution map\n\nIt is possible that the command objects are being mutated\nunderneath our execution.  If that is happening, it will\ncause three issues:\n * Null pointer exceptions when map.remove is run.\n * Command futures will never complete.\n * The execution map will fill unboundedly.\n\nIn order to fix this, insure that the resultFuture is\ncompleted in every case.  In addition, save the identity\nof the command that initiated the call, and if removal fails,\nindicating that the command has been mutated and its hash has\naltered, scan the map for a command with the same identity\nand remove it.", "committedDate": "2020-09-28T17:11:32Z", "type": "commit"}, {"oid": "7e79ae1e288b4fd4241dc684089446367b5db5fe", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7e79ae1e288b4fd4241dc684089446367b5db5fe", "message": "Stubbing out instrumented test", "committedDate": "2020-09-28T17:11:53Z", "type": "commit"}, {"oid": "ee040f37a02c56a4c47ba263a9860f7fef46fabc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ee040f37a02c56a4c47ba263a9860f7fef46fabc", "message": "Parameterize the test command", "committedDate": "2020-09-28T17:12:06Z", "type": "commit"}, {"oid": "0f5aa13a995e4dbbb6525f8745a4583cb76bfae0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0f5aa13a995e4dbbb6525f8745a4583cb76bfae0", "message": "Adding test stubs", "committedDate": "2020-09-28T17:12:17Z", "type": "commit"}, {"oid": "440752caa40360b2e31d7d5715696e9672fd2fc5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/440752caa40360b2e31d7d5715696e9672fd2fc5", "message": "One fix that I recall, some test descriptions.", "committedDate": "2020-09-28T17:12:28Z", "type": "commit"}, {"oid": "a90a3bbdc5bcb7d3bc9426db16331f1cbafe17f8", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a90a3bbdc5bcb7d3bc9426db16331f1cbafe17f8", "message": "Add a value to testcommand.", "committedDate": "2020-09-28T17:12:51Z", "type": "commit"}, {"oid": "7cd2edf596231b1cb4cdefca537986b3ee31598a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7cd2edf596231b1cb4cdefca537986b3ee31598a", "message": "Latched command for stalling execution.", "committedDate": "2020-09-28T17:13:01Z", "type": "commit"}, {"oid": "b395a2e0c5f244cdf6acbe83e5408055e13f32ec", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b395a2e0c5f244cdf6acbe83e5408055e13f32ec", "message": "Minor formatting", "committedDate": "2020-09-28T17:13:11Z", "type": "commit"}, {"oid": "0d1d6aa193ae7395503fb9bd4a339166f7cd8317", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0d1d6aa193ae7395503fb9bd4a339166f7cd8317", "message": "Fix the code for unstable keys.", "committedDate": "2020-09-28T17:14:47Z", "type": "commit"}, {"oid": "fbfad2f18c72a98730b02d820e7fdfcf51149deb", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fbfad2f18c72a98730b02d820e7fdfcf51149deb", "message": "Change to foreach loop style.", "committedDate": "2020-09-28T17:15:02Z", "type": "commit"}, {"oid": "215557de097ce203967afe7ca613eeaa022373a4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/215557de097ce203967afe7ca613eeaa022373a4", "message": "Add a better comment explaining cleanMap..", "committedDate": "2020-09-28T17:15:13Z", "type": "commit"}, {"oid": "d170fd854cce56cb346662a7b3dccfc932e0f1df", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d170fd854cce56cb346662a7b3dccfc932e0f1df", "message": "Add TODO with link to work item.", "committedDate": "2020-09-28T17:15:23Z", "type": "commit"}, {"oid": "2091892a1aa560e2893b59b7e55b8a4f5339cd7a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2091892a1aa560e2893b59b7e55b8a4f5339cd7a", "message": "Access the map size for the test method under the map lock.", "committedDate": "2020-09-28T17:15:33Z", "type": "commit"}, {"oid": "a15b9e0b6837a64e99ef335d0f1fe51552ab7220", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a15b9e0b6837a64e99ef335d0f1fe51552ab7220", "message": "Add a new type of future to indicate whether a task has been compltely retired.", "committedDate": "2020-09-28T17:17:55Z", "type": "commit"}, {"oid": "a55b869082f50abd923b1c4b8d08ee101e3d4bd8", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a55b869082f50abd923b1c4b8d08ee101e3d4bd8", "message": "Add the FinalizableResultFuture class.", "committedDate": "2020-09-28T17:18:08Z", "type": "commit"}, {"oid": "5eed69a85d78b912acf9fee529e5f699363955e2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5eed69a85d78b912acf9fee529e5f699363955e2", "message": "Fix deadlock due to careless synchronization.", "committedDate": "2020-09-28T17:18:19Z", "type": "commit"}, {"oid": "0991253eceb1aa01abb37426c3f7f531e4768768", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0991253eceb1aa01abb37426c3f7f531e4768768", "message": "Update common/src/main/java/com/microsoft/identity/common/internal/result/ResultFuture.java\r\n\r\nDelete blank line.", "committedDate": "2020-09-28T17:18:28Z", "type": "commit"}, {"oid": "96ad614b366917dc4632bab7db8ae32c89125648", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/96ad614b366917dc4632bab7db8ae32c89125648", "message": "Remove suppresswarnings annotations (not present on this branch, but in\nthe cherry-picked commits)", "committedDate": "2020-09-28T17:21:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExOTc1Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496119752", "bodyText": "This looks like something we can use RoboTestUtils.flushScheduler() for?\n(no need to make changes in this PR)", "author": "rpdome", "createdAt": "2020-09-28T17:32:44Z", "path": "common/src/androidTest/java/com/microsoft/identity/common/CommandDispatcherTest.java", "diffHunk": "@@ -0,0 +1,298 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Intent;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.cache.ICacheRecord;\n+import com.microsoft.identity.common.internal.commands.BaseCommand;\n+import com.microsoft.identity.common.internal.commands.CommandCallback;\n+import com.microsoft.identity.common.internal.commands.parameters.CommandParameters;\n+import com.microsoft.identity.common.internal.commands.parameters.DeviceCodeFlowCommandParameters;\n+import com.microsoft.identity.common.internal.commands.parameters.InteractiveTokenCommandParameters;\n+import com.microsoft.identity.common.internal.commands.parameters.RemoveAccountCommandParameters;\n+import com.microsoft.identity.common.internal.commands.parameters.SilentTokenCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.controllers.CommandDispatcher;\n+import com.microsoft.identity.common.internal.controllers.CommandResult;\n+import com.microsoft.identity.common.internal.providers.oauth2.AuthorizationResult;\n+import com.microsoft.identity.common.internal.result.AcquireTokenResult;\n+import com.microsoft.identity.common.internal.result.FinalizableResultFuture;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.concurrent.CountDownLatch;\n+\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CommandDispatcherTest {\n+\n+    private static final String TEST_RESULT_STR = \"test_result_str\";\n+\n+    @Test\n+    public void testCanSubmitSilently() throws InterruptedException {\n+        final CountDownLatch testLatch = new CountDownLatch(1);\n+\n+        final BaseCommand<String> testCommand = getTestCommand(testLatch);\n+        CommandDispatcher.submitSilent(testCommand);\n+        testLatch.await();\n+    }\n+\n+    private TestCommand getTestCommand(final CountDownLatch testLatch) {\n+        return new TestCommand(\n+                getEmptyTestParams(),\n+                new CommandCallback<String, Exception>() {\n+                    @Override\n+                    public void onCancel() {\n+                        testLatch.countDown();\n+                        Assert.fail();\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        testLatch.countDown();\n+                        Assert.fail();\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(String s) {\n+                        testLatch.countDown();\n+                        Assert.assertEquals(TEST_RESULT_STR, s);\n+                    }\n+                }, 0);\n+    }\n+\n+    /**\n+     * This test represents the case where a command changes underneath our system\n+     * while we're using it as a key.  They're not immutable, so they're not safe to\n+     * use as keys in a map.  It won't hurt, though, unless we can't get rid of them.\n+     * To test this, we submit a command, block before it executes, alter it, release it,\n+     * and then make sure it gets cleaned up.\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testSubmitSilentWithParamMutation() throws Exception {\n+        final CountDownLatch testLatch = new CountDownLatch(1);\n+        CountDownLatch submitLatch = new CountDownLatch(1);\n+        CountDownLatch submitLatch1 = new CountDownLatch(1);\n+\n+        final TestCommand testCommand = new LatchedTestCommand(\n+                getEmptyTestParams(),\n+                new CommandCallback<String, Exception>() {\n+                    @Override\n+                    public void onCancel() {\n+                        testLatch.countDown();\n+                        Assert.fail();\n+                    }\n+\n+                    @Override\n+                    public void onError(Exception error) {\n+                        testLatch.countDown();\n+                        Assert.fail();\n+                    }\n+\n+                    @Override\n+                    public void onTaskCompleted(String s) {\n+                        testLatch.countDown();\n+                        Assert.assertEquals(TEST_RESULT_STR, s);\n+                    }\n+                }, 0, submitLatch, submitLatch1);\n+        FinalizableResultFuture<CommandResult> f = CommandDispatcher.submitSilentReturningFuture(testCommand);\n+        submitLatch1.await();\n+        testCommand.value = 2;\n+        submitLatch.countDown();\n+        testLatch.await();\n+        Assert.assertTrue(f.isDone());\n+        Assert.assertEquals(TEST_RESULT_STR, f.get().getResult());\n+        f.isCleanedUp();", "originalCommit": "96ad614b366917dc4632bab7db8ae32c89125648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTgzNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496121836", "bodyText": "Hah.  Yeah, I could have just gotten a reference on the executor and shut it down, I suppose.", "author": "AdamBJohnsonx", "createdAt": "2020-09-28T17:36:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExOTc1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyODM3MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496128370", "bodyText": "could we add a TODO to migrate to that one (and get rid of the new future class) at some point in the future? (e.g. when you're working on the root cause fix)", "author": "rpdome", "createdAt": "2020-09-28T17:48:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExOTc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMDU5NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496120595", "bodyText": "synchronized?", "author": "rpdome", "createdAt": "2020-09-28T17:34:25Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandDispatcher.java", "diffHunk": "@@ -73,84 +77,145 @@\n     private static final Object sLock = new Object();\n     private static InteractiveTokenCommand sCommand = null;\n     private static final CommandResultCache sCommandResultCache = new CommandResultCache();\n-    private static final ConcurrentMap<BaseCommand, ResultFuture<CommandResult>> sExecutingCommandMap = new ConcurrentHashMap<>();\n+\n+    private static final Object mapAccessLock = new Object();\n+    @GuardedBy(\"mapAccessLock\")\n+    private static ConcurrentMap<BaseCommand, FinalizableResultFuture<CommandResult>> sExecutingCommandMap = new ConcurrentHashMap<>();\n+\n+    /**\n+     * Remove all keys that are the command reference from the executing command map.  Since if they key has\n+     * been changed, remove will not work, construct a new map and add all keys that are not identically\n+     * that key into the new map.\n+     *\n+     * @param command the command whose identity to use to cleanse the map.\n+     */\n+    private static void cleanMap(BaseCommand command) {", "originalCommit": "96ad614b366917dc4632bab7db8ae32c89125648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTIwNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496121207", "bodyText": "Maybe document that it must be used under the mapAccessLock?", "author": "AdamBJohnsonx", "createdAt": "2020-09-28T17:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMjk0MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496122941", "bodyText": "Can we wrap them here? synchronize block is reentrant right?", "author": "rpdome", "createdAt": "2020-09-28T17:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMzMwNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496123306", "bodyText": "I'm fine either way as soon as we can make sure the future dev are aware of this or can do the right thing)", "author": "rpdome", "createdAt": "2020-09-28T17:39:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyNDUzMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496124532", "bodyText": "Yeah we could.  I'l like to dispose of this completely once we can stabilize the key space for this map either by generating stable keys or making the objects immutable.", "author": "AdamBJohnsonx", "createdAt": "2020-09-28T17:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMDU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMzM2MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1060#discussion_r496123360", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * that key into the new map.\n          \n          \n            \n                 * that key into the new map.  <strong>MUST</strong> only be used under the mapAccessLock.", "author": "AdamBJohnsonx", "createdAt": "2020-09-28T17:39:20Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandDispatcher.java", "diffHunk": "@@ -73,84 +77,145 @@\n     private static final Object sLock = new Object();\n     private static InteractiveTokenCommand sCommand = null;\n     private static final CommandResultCache sCommandResultCache = new CommandResultCache();\n-    private static final ConcurrentMap<BaseCommand, ResultFuture<CommandResult>> sExecutingCommandMap = new ConcurrentHashMap<>();\n+\n+    private static final Object mapAccessLock = new Object();\n+    @GuardedBy(\"mapAccessLock\")\n+    private static ConcurrentMap<BaseCommand, FinalizableResultFuture<CommandResult>> sExecutingCommandMap = new ConcurrentHashMap<>();\n+\n+    /**\n+     * Remove all keys that are the command reference from the executing command map.  Since if they key has\n+     * been changed, remove will not work, construct a new map and add all keys that are not identically\n+     * that key into the new map.", "originalCommit": "96ad614b366917dc4632bab7db8ae32c89125648", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a0beb2314fbb70070530e88a4884a2190a9c35f3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a0beb2314fbb70070530e88a4884a2190a9c35f3", "message": "Update common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandDispatcher.java\n\nCo-authored-by: AdamBJohnsonx <63813613+AdamBJohnsonx@users.noreply.github.com>", "committedDate": "2020-09-28T17:39:29Z", "type": "commit"}]}