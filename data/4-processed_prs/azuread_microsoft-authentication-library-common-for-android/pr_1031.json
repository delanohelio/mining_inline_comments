{"pr_number": 1031, "pr_title": "Breaking out AsymmetricKey, AsymmetricKeyFactory", "pr_createdAt": "2020-09-12T00:50:26Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031", "timeline": [{"oid": "9ceff46e71c4ce3fc9e8240798c37e07eedadd1c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9ceff46e71c4ce3fc9e8240798c37e07eedadd1c", "message": "Add support for exporting X.509 public key as ASN.1", "committedDate": "2020-09-05T00:51:08Z", "type": "commit"}, {"oid": "423c2b3431555c40229d6e9c29ab4b6f1a7eb3ce", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/423c2b3431555c40229d6e9c29ab4b6f1a7eb3ce", "message": "Update javadoc for code changes", "committedDate": "2020-09-05T00:56:39Z", "type": "commit"}, {"oid": "0e6f2a32826a8536fc36e7f14b58aedc69c49961", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0e6f2a32826a8536fc36e7f14b58aedc69c49961", "message": "Renaming format enums", "committedDate": "2020-09-05T01:20:57Z", "type": "commit"}, {"oid": "600e07cbd03d9ee6982250a005f464aded22a454", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/600e07cbd03d9ee6982250a005f464aded22a454", "message": "Implement support for getAsymmetricKeyCreationDate()", "committedDate": "2020-09-08T22:20:20Z", "type": "commit"}, {"oid": "ae7ec8f1a0cccc638512c4946caeb7e6af11d960", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ae7ec8f1a0cccc638512c4946caeb7e6af11d960", "message": "Remove unused code", "committedDate": "2020-09-08T22:22:18Z", "type": "commit"}, {"oid": "e0c052f84d2b8261d2b6d216039a5252b4e93108", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e0c052f84d2b8261d2b6d216039a5252b4e93108", "message": "Merge branch 'dev' into iambmelt/oneauth-pop-extensions-1", "committedDate": "2020-09-08T22:24:50Z", "type": "commit"}, {"oid": "8d10b1561f3ea65a6f3a3e6dc8f5da638c9ba86f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8d10b1561f3ea65a6f3a3e6dc8f5da638c9ba86f", "message": "Use switch not if/else", "committedDate": "2020-09-08T22:39:24Z", "type": "commit"}, {"oid": "e78cf6b7b6a14598b1e39a107815a6aa62d7fc92", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e78cf6b7b6a14598b1e39a107815a6aa62d7fc92", "message": "Error msg + logging improvement", "committedDate": "2020-09-08T22:42:26Z", "type": "commit"}, {"oid": "818b11f8b87ffecc6e184eee8415acd877ecfc5f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/818b11f8b87ffecc6e184eee8415acd877ecfc5f", "message": "Add unit tests for new methods", "committedDate": "2020-09-08T23:21:22Z", "type": "commit"}, {"oid": "7b21d1045de1feebb8686df19dc5a7557b1fd16c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7b21d1045de1feebb8686df19dc5a7557b1fd16c", "message": "Add support for signing (SHA256+RSA), adds relevant unit test", "committedDate": "2020-09-09T00:44:08Z", "type": "commit"}, {"oid": "26b358b9b7821dd25bc1937d3ab34b7d189d89be", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/26b358b9b7821dd25bc1937d3ab34b7d189d89be", "message": "Minor code cleanup", "committedDate": "2020-09-09T00:58:18Z", "type": "commit"}, {"oid": "2b3fd3fd50079a703f99ceec7830b0aa602816e2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2b3fd3fd50079a703f99ceec7830b0aa602816e2", "message": "Use default encoding/decoding", "committedDate": "2020-09-10T02:03:42Z", "type": "commit"}, {"oid": "f01d4d0cb1f8497b08fd75d5d0aff346a3f6886a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f01d4d0cb1f8497b08fd75d5d0aff346a3f6886a", "message": "Add jwk export format support + tests", "committedDate": "2020-09-10T20:55:49Z", "type": "commit"}, {"oid": "8491a08b7f47015985e7aa429a21136b9122989a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8491a08b7f47015985e7aa429a21136b9122989a", "message": "Merge branch 'dev' into iambmelt/oneauth-pop-extensions-1", "committedDate": "2020-09-10T20:59:13Z", "type": "commit"}, {"oid": "b39b87a82690fac2528ad8990973016a1c453516", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b39b87a82690fac2528ad8990973016a1c453516", "message": "Log msg private vis", "committedDate": "2020-09-10T21:04:56Z", "type": "commit"}, {"oid": "e099e46a4933667293680a3e12d8bbb08788789e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e099e46a4933667293680a3e12d8bbb08788789e", "message": "Update common/src/main/java/com/microsoft/identity/common/internal/platform/DevicePopManager.java\n\nCo-authored-by: AdamBJohnsonx <63813613+AdamBJohnsonx@users.noreply.github.com>", "committedDate": "2020-09-10T21:08:05Z", "type": "commit"}, {"oid": "65c2d016ec8eb6d6317ec731adb0d042a33ddeb4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/65c2d016ec8eb6d6317ec731adb0d042a33ddeb4", "message": "Javadoc signing/verification API algs", "committedDate": "2020-09-10T21:12:47Z", "type": "commit"}, {"oid": "f65f1596212fe20b71e69ae9a0adef47f045e0a3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f65f1596212fe20b71e69ae9a0adef47f045e0a3", "message": "Adding javadoc for public key export formats", "committedDate": "2020-09-10T21:20:22Z", "type": "commit"}, {"oid": "8ffb1b78e4d5a297cb78e0790b0d7083d9532667", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8ffb1b78e4d5a297cb78e0790b0d7083d9532667", "message": "Clean up stray newline", "committedDate": "2020-09-10T21:21:32Z", "type": "commit"}, {"oid": "c113f14d669829b12886b717dc301d05d1a64425", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c113f14d669829b12886b717dc301d05d1a64425", "message": "Removing resolved TODO", "committedDate": "2020-09-10T21:22:23Z", "type": "commit"}, {"oid": "bda5f733b49c782e667af7c1cc5dc97135b14380", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/bda5f733b49c782e667af7c1cc5dc97135b14380", "message": "Adding nullability annots", "committedDate": "2020-09-10T21:26:37Z", "type": "commit"}, {"oid": "e5b83a8164005426b0552488cbe194b3c283f05b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e5b83a8164005426b0552488cbe194b3c283f05b", "message": "WIP signing tests", "committedDate": "2020-09-10T22:35:07Z", "type": "commit"}, {"oid": "c0312398104ed6597b0ac5cfeaf1aa111a9a056e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c0312398104ed6597b0ac5cfeaf1aa111a9a056e", "message": "Code cleanup", "committedDate": "2020-09-10T22:45:28Z", "type": "commit"}, {"oid": "af0ca035a02c8d8dff1acf345dbcd1cf586bb204", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/af0ca035a02c8d8dff1acf345dbcd1cf586bb204", "message": "Tweaking javadoc", "committedDate": "2020-09-10T22:47:10Z", "type": "commit"}, {"oid": "12d7a01f595789c8926c4b009f4b173bb07322ef", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/12d7a01f595789c8926c4b009f4b173bb07322ef", "message": "Update changelog for PoP enhancements", "committedDate": "2020-09-10T23:14:46Z", "type": "commit"}, {"oid": "7ced5f88bbd529cbfeffff2e38361fd6ae0d2273", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7ced5f88bbd529cbfeffff2e38361fd6ae0d2273", "message": "WIP", "committedDate": "2020-09-12T00:46:45Z", "type": "commit"}, {"oid": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "message": "Adds basic impl -- needs error handling, logging, and some cleanup", "committedDate": "2020-09-12T01:21:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDExNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350114", "bodyText": "Javadoc", "author": "iambmelt", "createdAt": "2020-09-12T01:26:00Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKey.java", "diffHunk": "@@ -0,0 +1,72 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+import android.os.Build;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.RequiresApi;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+public class AndroidKeystoreAsymmetricKey implements AsymmetricKey {", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzOTU2Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488939567", "bodyText": "b77c21f", "author": "iambmelt", "createdAt": "2020-09-15T20:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDEzMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350130", "bodyText": "Javadoc", "author": "iambmelt", "createdAt": "2020-09-12T01:26:10Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKey.java", "diffHunk": "@@ -0,0 +1,72 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+import android.os.Build;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.RequiresApi;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+public class AndroidKeystoreAsymmetricKey implements AsymmetricKey {\n+\n+    private final IDevicePopManager mDevicePopManager;\n+\n+    AndroidKeystoreAsymmetricKey(@NonNull final Context context,", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkzOTYxNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488939617", "bodyText": "b77c21f", "author": "iambmelt", "createdAt": "2020-09-15T20:01:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDEzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE0NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350144", "bodyText": "Javadoc", "author": "iambmelt", "createdAt": "2020-09-12T01:26:21Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.io.IOException;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+public class AndroidKeystoreAsymmetricKeyFactory implements AsymmetricKeyFactory {", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0MTc5OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488941798", "bodyText": "f5ef47f", "author": "iambmelt", "createdAt": "2020-09-15T20:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE1Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350152", "bodyText": "Javadoc", "author": "iambmelt", "createdAt": "2020-09-12T01:26:27Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.io.IOException;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+public class AndroidKeystoreAsymmetricKeyFactory implements AsymmetricKeyFactory {\n+\n+    private final Context mContext;\n+\n+    public AndroidKeystoreAsymmetricKeyFactory(@NonNull final Context context) {", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0MTg0NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488941844", "bodyText": "f5ef47f", "author": "iambmelt", "createdAt": "2020-09-15T20:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE2OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350168", "bodyText": "Catch, wrap, rethrow", "author": "iambmelt", "createdAt": "2020-09-12T01:26:41Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.io.IOException;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+public class AndroidKeystoreAsymmetricKeyFactory implements AsymmetricKeyFactory {\n+\n+    private final Context mContext;\n+\n+    public AndroidKeystoreAsymmetricKeyFactory(@NonNull final Context context) {\n+        mContext = context;\n+    }\n+\n+    @Override\n+    public AsymmetricKey generateAsymmetricKey(@NonNull final String alias) throws ClientException {\n+        try {\n+            return new AndroidKeystoreAsymmetricKey(\n+                    mContext,\n+                    new DevicePopManager(alias)\n+            );\n+        } catch (KeyStoreException e) {\n+            e.printStackTrace();\n+        } catch (CertificateException e) {\n+            e.printStackTrace();\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        // TODO catch, wrap, and rethrow Exception", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1NzMxMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488957310", "bodyText": "26541d5", "author": "iambmelt", "createdAt": "2020-09-15T20:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE4NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350185", "bodyText": "Catch, wrap, rethrow", "author": "iambmelt", "createdAt": "2020-09-12T01:26:46Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.io.IOException;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+public class AndroidKeystoreAsymmetricKeyFactory implements AsymmetricKeyFactory {\n+\n+    private final Context mContext;\n+\n+    public AndroidKeystoreAsymmetricKeyFactory(@NonNull final Context context) {\n+        mContext = context;\n+    }\n+\n+    @Override\n+    public AsymmetricKey generateAsymmetricKey(@NonNull final String alias) throws ClientException {\n+        try {\n+            return new AndroidKeystoreAsymmetricKey(\n+                    mContext,\n+                    new DevicePopManager(alias)\n+            );\n+        } catch (KeyStoreException e) {\n+            e.printStackTrace();\n+        } catch (CertificateException e) {\n+            e.printStackTrace();\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        // TODO catch, wrap, and rethrow Exception\n+        return null;\n+    }\n+\n+    @Override\n+    public AsymmetricKey loadAsymmetricKey(String alias) throws ClientException {\n+        // We can just call generate.... same thing... it will be created if it doesn't exist.\n+        return generateAsymmetricKey(alias);\n+    }\n+\n+    @Override\n+    public boolean clearAsymmetricKey(String alias) {\n+        try {\n+            return new DevicePopManager(alias).clearAsymmetricKey();\n+        } catch (KeyStoreException e) {\n+            e.printStackTrace();\n+        } catch (CertificateException e) {\n+            e.printStackTrace();\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+        // TODO catch, wrap, and rethrow Exception", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1NzI3OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488957279", "bodyText": "26541d5", "author": "iambmelt", "createdAt": "2020-09-15T20:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDIwNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350205", "bodyText": "Javadoc", "author": "iambmelt", "createdAt": "2020-09-12T01:27:01Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,35 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+public interface AsymmetricKeyFactory {", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NTY2NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r488945664", "bodyText": "1e684cc", "author": "iambmelt", "createdAt": "2020-09-15T20:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDI3Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350276", "bodyText": "Add tests", "author": "iambmelt", "createdAt": "2020-09-12T01:27:47Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKey.java", "diffHunk": "@@ -0,0 +1,72 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+import android.os.Build;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.RequiresApi;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1MTc1OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491251759", "bodyText": "8d716fd", "author": "iambmelt", "createdAt": "2020-09-19T01:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDI3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDI5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r487350296", "bodyText": "Add tests", "author": "iambmelt", "createdAt": "2020-09-12T01:27:54Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.io.IOException;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+", "originalCommit": "c42d376fa2a2b10484a6973ca1ceacb021a1e0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1MTc2Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491251767", "bodyText": "8d716fd", "author": "iambmelt", "createdAt": "2020-09-19T01:27:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM1MDI5Ng=="}], "type": "inlineReview"}, {"oid": "570e5a2b9a958c4c21d9088c614f85777cb7015a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/570e5a2b9a958c4c21d9088c614f85777cb7015a", "message": "Merge branch 'dev' into iambmelt/oneauth-pop-extensions-2", "committedDate": "2020-09-15T18:25:32Z", "type": "commit"}, {"oid": "b77c21f5e217ba22c119b1643068360b5c5c0194", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b77c21f5e217ba22c119b1643068360b5c5c0194", "message": "Add javadoc to AndroidKeystoreAsymmetricKey", "committedDate": "2020-09-15T20:00:17Z", "type": "commit"}, {"oid": "f5ef47f52c56874f523ab7470c0370fcb7048483", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f5ef47f52c56874f523ab7470c0370fcb7048483", "message": "Adds javadoc to AndroidKeystoreAsymmetricKeyFactory", "committedDate": "2020-09-15T20:05:07Z", "type": "commit"}, {"oid": "1e684ccb20dcaa4b92bbc467e5f85d4b713813db", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1e684ccb20dcaa4b92bbc467e5f85d4b713813db", "message": "Javadoc AsymmetricKeyFactory interface", "committedDate": "2020-09-15T20:12:57Z", "type": "commit"}, {"oid": "26541d58960cfa06edd20666cf0fff9d4ae8ab0f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/26541d58960cfa06edd20666cf0fff9d4ae8ab0f", "message": "Error handling", "committedDate": "2020-09-15T20:33:50Z", "type": "commit"}, {"oid": "d6f2df112101339a3e73e2e38ebd8a1485bbcff7", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d6f2df112101339a3e73e2e38ebd8a1485bbcff7", "message": "Merge branch 'dev' into iambmelt/oneauth-pop-extensions-2", "committedDate": "2020-09-16T00:08:16Z", "type": "commit"}, {"oid": "c4573844faf0b98b367c86e0204f2b2669254256", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c4573844faf0b98b367c86e0204f2b2669254256", "message": "Fix merge", "committedDate": "2020-09-16T00:16:32Z", "type": "commit"}, {"oid": "491e354e4e7a8b8c47f40de931e2e2a7599fd6d9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/491e354e4e7a8b8c47f40de931e2e2a7599fd6d9", "message": "WIP - Adding tests", "committedDate": "2020-09-18T00:37:13Z", "type": "commit"}, {"oid": "8d716fda151836c3fcee577d80bc904ca98f9eee", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8d716fda151836c3fcee577d80bc904ca98f9eee", "message": "Adds tests for AsymmetricKey + AsymmetricKeyFactory", "committedDate": "2020-09-19T01:25:52Z", "type": "commit"}, {"oid": "27da4f194529287c5a6c8c315654153ab7f20018", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/27da4f194529287c5a6c8c315654153ab7f20018", "message": "(Experimental) Increase CI timeout by 10 mins", "committedDate": "2020-09-19T01:33:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1OTkxMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491259912", "bodyText": "Add a negative test case", "author": "iambmelt", "createdAt": "2020-09-19T02:52:04Z", "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/platform/AsymmetricKeyTests.java", "diffHunk": "@@ -0,0 +1,108 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AsymmetricKeyTests {\n+\n+    private static final String testKeyName = \"testkey_alias\";\n+\n+    private AsymmetricKeyFactory mKeyFactory;\n+    private AsymmetricKey mAsymmetricKey;\n+\n+    @Before\n+    public void setUp() throws ClientException {\n+        final Context context = InstrumentationRegistry.getTargetContext();\n+        mKeyFactory = new AndroidKeystoreAsymmetricKeyFactory(context);\n+        mAsymmetricKey = mKeyFactory.generateAsymmetricKey(testKeyName);\n+    }\n+\n+    @After\n+    public void tearDown() throws ClientException {\n+        mKeyFactory.clearAsymmetricKey(testKeyName);\n+    }\n+\n+    @Test\n+    public void testHasCreatedOn() throws ClientException {\n+        Assert.assertNotNull(mAsymmetricKey.getCreatedOn());\n+    }\n+\n+    @Test\n+    public void testHasThumbprint() throws ClientException {\n+        Assert.assertNotNull(mAsymmetricKey.getThumbprint());\n+    }\n+\n+    @Test\n+    public void testHasPublicKey() throws ClientException {\n+        final String publicKey = mAsymmetricKey.getPublicKey();\n+\n+        Assert.assertNotNull(publicKey);\n+\n+        // Convert it to JSON, parse to verify fields\n+        final JsonElement jwkElement = new JsonParser().parse(publicKey);\n+\n+        // Convert to JsonObject to extract claims\n+        final JsonObject jwkObj = jwkElement.getAsJsonObject();\n+\n+        // We should expect the following claims...\n+        // 'kty' - Key Type - Identifies the cryptographic alg used with this key (ex: RSA, EC)\n+        // 'e' - Public Exponent - The exponent used on signed/encoded data to decode the orig value\n+        // 'n' - Modulus - The product of two prime numbers used to generate the key pair\n+        final JsonElement kty = jwkObj.get(\"kty\");\n+        Assert.assertNotNull(kty);\n+        Assert.assertFalse(kty.getAsString().isEmpty());\n+\n+        final JsonElement e = jwkObj.get(\"e\");\n+        Assert.assertNotNull(e);\n+        Assert.assertFalse(e.getAsString().isEmpty());\n+\n+        final JsonElement n = jwkObj.get(\"n\");\n+        Assert.assertNotNull(n);\n+        Assert.assertFalse(n.getAsString().isEmpty());\n+    }\n+\n+    @Test\n+    public void testCanSignAndVerify() throws ClientException {\n+        final String validationText = \"The quick brown fox jumped over the lazy dog.\";\n+        final String signature = mAsymmetricKey.sign(validationText);\n+        Assert.assertNotNull(signature);\n+        Assert.assertTrue(mAsymmetricKey.verify(validationText, signature));\n+    }", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3OTA4NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492279085", "bodyText": "56916f3", "author": "iambmelt", "createdAt": "2020-09-21T18:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1OTkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1OTk0Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491259943", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-09-19T02:52:23Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKey.java", "diffHunk": "@@ -0,0 +1,100 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+import android.os.Build;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.RequiresApi;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an asymmetric key, backed by the Android Keystore.\n+ */\n+public class AndroidKeystoreAsymmetricKey implements AsymmetricKey {\n+\n+    private final IDevicePopManager mDevicePopManager;", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzMzI4MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492333280", "bodyText": "dd35b24", "author": "iambmelt", "createdAt": "2020-09-21T20:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1OTk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDAzNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260036", "bodyText": "Explain (in javadoc) that this object is a representation of a singleton", "author": "iambmelt", "createdAt": "2020-09-19T02:53:20Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKey.java", "diffHunk": "@@ -0,0 +1,86 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an RSA asymmetric key.\n+ */\n+public interface AsymmetricKey {", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDA3Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260076", "bodyText": "that may or may not be hardware backed", "author": "iambmelt", "createdAt": "2020-09-19T02:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNDMyMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492334322", "bodyText": "221859a", "author": "iambmelt", "createdAt": "2020-09-21T20:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDU1NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260554", "bodyText": "Javadoc SHA256", "author": "iambmelt", "createdAt": "2020-09-19T02:58:41Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKey.java", "diffHunk": "@@ -0,0 +1,86 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an RSA asymmetric key.\n+ */\n+public interface AsymmetricKey {\n+\n+    /**\n+     * Gets the alias which refers to this key at its originating keystore.\n+     *\n+     * @return The alias of this key.\n+     */\n+    String getAlias();\n+\n+    /**\n+     * Returns the creation date of the asymmetric key entry backing this instance.\n+     *\n+     * @return The asymmetric key creation date.\n+     * @throws ClientException If no asymmetric key exists.\n+     */\n+    Date getCreatedOn() throws ClientException;\n+\n+    /**\n+     * Gets the thumbprint of the current KeyPair.", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDU5OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260599", "bodyText": "(This is interface-level understanding with OneAuth)", "author": "iambmelt", "createdAt": "2020-09-19T02:59:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDU1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNTY2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492335666", "bodyText": "472b99c", "author": "iambmelt", "createdAt": "2020-09-21T20:45:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDU1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDY0OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260649", "bodyText": "Javadoc RSA256 sig", "author": "iambmelt", "createdAt": "2020-09-19T02:59:38Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKey.java", "diffHunk": "@@ -0,0 +1,86 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an RSA asymmetric key.\n+ */\n+public interface AsymmetricKey {\n+\n+    /**\n+     * Gets the alias which refers to this key at its originating keystore.\n+     *\n+     * @return The alias of this key.\n+     */\n+    String getAlias();\n+\n+    /**\n+     * Returns the creation date of the asymmetric key entry backing this instance.\n+     *\n+     * @return The asymmetric key creation date.\n+     * @throws ClientException If no asymmetric key exists.\n+     */\n+    Date getCreatedOn() throws ClientException;\n+\n+    /**\n+     * Gets the thumbprint of the current KeyPair.\n+     *\n+     * @return The thumbprint.\n+     */\n+    String getThumbprint() throws ClientException;\n+\n+    /**\n+     * Gets an RFC-7517 compliant public key as a minified JWK.\n+     * <p>\n+     * Sample value:\n+     * <pre>\n+     * {\n+     * \t\"kty\": \"RSA\",\n+     * \t\"e\": \"AQAB\",\n+     * \t\"n\": \"tMqJ7Oxh3PdLaiEc28w....HwES9Q\"\n+     * }\n+     * </pre>\n+     */\n+    String getPublicKey() throws ClientException;\n+\n+    /**\n+     * Signs an arbitrary piece of String data.", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNTcyMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492335720", "bodyText": "472b99c", "author": "iambmelt", "createdAt": "2020-09-21T20:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDY0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDY3Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260672", "bodyText": "Javadoc RSA256", "author": "iambmelt", "createdAt": "2020-09-19T02:59:52Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKey.java", "diffHunk": "@@ -0,0 +1,86 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an RSA asymmetric key.\n+ */\n+public interface AsymmetricKey {\n+\n+    /**\n+     * Gets the alias which refers to this key at its originating keystore.\n+     *\n+     * @return The alias of this key.\n+     */\n+    String getAlias();\n+\n+    /**\n+     * Returns the creation date of the asymmetric key entry backing this instance.\n+     *\n+     * @return The asymmetric key creation date.\n+     * @throws ClientException If no asymmetric key exists.\n+     */\n+    Date getCreatedOn() throws ClientException;\n+\n+    /**\n+     * Gets the thumbprint of the current KeyPair.\n+     *\n+     * @return The thumbprint.\n+     */\n+    String getThumbprint() throws ClientException;\n+\n+    /**\n+     * Gets an RFC-7517 compliant public key as a minified JWK.\n+     * <p>\n+     * Sample value:\n+     * <pre>\n+     * {\n+     * \t\"kty\": \"RSA\",\n+     * \t\"e\": \"AQAB\",\n+     * \t\"n\": \"tMqJ7Oxh3PdLaiEc28w....HwES9Q\"\n+     * }\n+     * </pre>\n+     */\n+    String getPublicKey() throws ClientException;\n+\n+    /**\n+     * Signs an arbitrary piece of String data.\n+     *\n+     * @return The input data, signed by our private key.\n+     */\n+    String sign(String data) throws ClientException;\n+\n+    /**\n+     * Verifies a signature previously made by this private key.\n+     *\n+     * @param plainText    The input to verify.\n+     * @param signatureStr The signature against which the plainText should be evaluated.\n+     * @return True if the input was signed by our private key. False otherwise.\n+     */\n+    boolean verify(String plainText, String signatureStr);", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNTc2Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492335767", "bodyText": "472b99c", "author": "iambmelt", "createdAt": "2020-09-21T20:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDkxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r491260911", "bodyText": "Javadoc basic expectations:\n\n2048 bit keys (secure & widely compatible on Android devices)\nMaybe hardware backed (depending on OS ver, TPM/HSM chipset)\nAPI 18+ assumed, API 23+ is best security", "author": "iambmelt", "createdAt": "2020-09-19T03:02:31Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKeyFactory.java", "diffHunk": "@@ -0,0 +1,59 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+/**\n+ * Interface defining a factory for asymmetric keys.\n+ */\n+public interface AsymmetricKeyFactory {\n+\n+    /**\n+     * Generates a new {@link AsymmetricKey}, retrievable by the provided alias.", "originalCommit": "27da4f194529287c5a6c8c315654153ab7f20018", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzOTM1MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492339350", "bodyText": "0556f65", "author": "iambmelt", "createdAt": "2020-09-21T20:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2MDkxMQ=="}], "type": "inlineReview"}, {"oid": "d095fe0c91de6487adb46f7f402bb1d9c9718666", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d095fe0c91de6487adb46f7f402bb1d9c9718666", "message": "Merge branch 'dev' into iambmelt/oneauth-pop-extensions-2", "committedDate": "2020-09-21T17:09:57Z", "type": "commit"}, {"oid": "56916f3c05654108bb195b1d80143589fbbf5fef", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/56916f3c05654108bb195b1d80143589fbbf5fef", "message": "Adds negative test (signature)", "committedDate": "2020-09-21T18:56:34Z", "type": "commit"}, {"oid": "dd35b24ddbb8e097a04d52c752b65f6feaa6d75f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/dd35b24ddbb8e097a04d52c752b65f6feaa6d75f", "message": "Additional javadoc of fields", "committedDate": "2020-09-21T20:40:27Z", "type": "commit"}, {"oid": "221859a363bd775365e8451f0c9a2d710651a1b9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/221859a363bd775365e8451f0c9a2d710651a1b9", "message": "Javadoc improvements; cover singleton behavior, TPM/HSM backing", "committedDate": "2020-09-21T20:42:14Z", "type": "commit"}, {"oid": "472b99c3db29733a20e6becaa4a1bedf6a787043", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/472b99c3db29733a20e6becaa4a1bedf6a787043", "message": "Javadoc'ing algs for signing, verification", "committedDate": "2020-09-21T20:44:34Z", "type": "commit"}, {"oid": "0556f65a1fb7d137b5214aee9d6d8c3da49c46cb", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0556f65a1fb7d137b5214aee9d6d8c3da49c46cb", "message": "Improve javadoc on AsymmetricKeyFactory", "committedDate": "2020-09-21T20:50:57Z", "type": "commit"}, {"oid": "c66f1aa2aae374ec6128c31ca91a059c9ae88025", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c66f1aa2aae374ec6128c31ca91a059c9ae88025", "message": "Update changelog for new feature", "committedDate": "2020-09-21T21:03:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2Mjc1Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492362753", "bodyText": "Maybe add a test that two calls to generate with the same alias result in the same key?", "author": "AdamBJohnsonx", "createdAt": "2020-09-21T21:42:38Z", "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/platform/AsymmetricKeyFactoryTests.java", "diffHunk": "@@ -0,0 +1,129 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AsymmetricKeyFactoryTests {\n+\n+    private static final String SAMPLE_KEY_1 = \"sample_key_1\";\n+    private static final String SAMPLE_KEY_2 = \"sample_key_2\";\n+\n+    private AsymmetricKeyFactory mKeyFactory;\n+\n+    @Before\n+    public void setUp() {\n+        final Context context = InstrumentationRegistry.getTargetContext();\n+        mKeyFactory = new AndroidKeystoreAsymmetricKeyFactory(context);\n+    }\n+\n+    @Test\n+    public void testCanGenerateAsymmetricKey() throws ClientException {\n+        final AsymmetricKey asymmetricKey = mKeyFactory.generateAsymmetricKey(SAMPLE_KEY_1);\n+        Assert.assertNotNull(asymmetricKey);\n+        Assert.assertNotNull(asymmetricKey.getThumbprint());\n+    }\n+\n+    @Test\n+    public void testCanGenerateMultipleKeys() throws ClientException {\n+        final AsymmetricKey asymmetricKey1 = mKeyFactory.generateAsymmetricKey(SAMPLE_KEY_1);\n+        final AsymmetricKey asymmetricKey2 = mKeyFactory.generateAsymmetricKey(SAMPLE_KEY_2);\n+\n+        Assert.assertNotNull(asymmetricKey1);\n+        Assert.assertNotNull(asymmetricKey1.getThumbprint());\n+\n+        Assert.assertNotNull(asymmetricKey1);\n+        Assert.assertNotNull(asymmetricKey1.getThumbprint());\n+\n+        // Assert they're not the same\n+        Assert.assertNotEquals(\n+                asymmetricKey1.getThumbprint(),\n+                asymmetricKey2.getThumbprint()\n+        );\n+    }\n+\n+    @Test\n+    public void testClearingOneKeyPreservesAnother() throws ClientException {\n+        final AsymmetricKey asymmetricKey1 = mKeyFactory.generateAsymmetricKey(SAMPLE_KEY_1);\n+        final AsymmetricKey asymmetricKey2 = mKeyFactory.generateAsymmetricKey(SAMPLE_KEY_2);\n+\n+        final String key1Thumbprint = asymmetricKey1.getThumbprint();\n+\n+        // Clear our second key\n+        mKeyFactory.clearAsymmetricKey(SAMPLE_KEY_2);\n+\n+        // Reload our first key\n+        final AsymmetricKey reloadedFirstKey = mKeyFactory.loadAsymmetricKey(SAMPLE_KEY_1);\n+\n+        // Reload the first key - assert that signature hasn't changed\n+        Assert.assertEquals(\n+                key1Thumbprint,\n+                reloadedFirstKey.getThumbprint()\n+        );\n+\n+        // Assert the alias is the same\n+        Assert.assertEquals(\n+                asymmetricKey1.getAlias(),\n+                reloadedFirstKey.getAlias()\n+        );\n+    }\n+\n+    @Test\n+    public void testCanGenerateKeyWhenLoadCalledBeforeGeneration() throws ClientException {\n+        final AsymmetricKey key1 = mKeyFactory.loadAsymmetricKey(SAMPLE_KEY_1);\n+        Assert.assertEquals(SAMPLE_KEY_1, key1.getAlias());\n+    }\n+\n+    @Test\n+    public void testCanClearAsymmetricKey() throws ClientException {\n+        // Generate a key\n+        final AsymmetricKey asymmetricKey1 = mKeyFactory.generateAsymmetricKey(SAMPLE_KEY_1);", "originalCommit": "c66f1aa2aae374ec6128c31ca91a059c9ae88025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2Mzc1MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492363750", "bodyText": "ACK", "author": "iambmelt", "createdAt": "2020-09-21T21:45:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2Mjc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3NzEzOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492377139", "bodyText": "477a059", "author": "iambmelt", "createdAt": "2020-09-21T22:16:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2Mjc1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDQ2Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492364466", "bodyText": "If this is coupled to RSA, I'd incorporate that into the implementing class name.", "author": "AdamBJohnsonx", "createdAt": "2020-09-21T21:46:38Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AndroidKeystoreAsymmetricKey.java", "diffHunk": "@@ -0,0 +1,107 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import android.content.Context;\n+import android.os.Build;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.RequiresApi;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an asymmetric key, backed by the Android Keystore.\n+ */\n+public class AndroidKeystoreAsymmetricKey implements AsymmetricKey {\n+\n+    /**\n+     * The {@link IDevicePopManager} to which we will delegate most cryptographic actions.\n+     */\n+    private final IDevicePopManager mDevicePopManager;\n+\n+    /**\n+     * The alias is name of this keypair in the underlying keystore.\n+     */\n+    private final String mAlias;\n+\n+    /**\n+     * Constructs a new {@link AndroidKeystoreAsymmetricKey} instance.\n+     *\n+     * @param context    The application Context.\n+     * @param popManager The underlying {@link IDevicePopManager} to which we'll delegate.\n+     * @throws ClientException If asymmetric key generation fails.\n+     */\n+    AndroidKeystoreAsymmetricKey(@NonNull final Context context,\n+                                 @NonNull final IDevicePopManager popManager,\n+                                 @NonNull final String alias)\n+            throws ClientException {\n+        mDevicePopManager = popManager;\n+        mAlias = alias;\n+\n+        if (!mDevicePopManager.asymmetricKeyExists()) {\n+            mDevicePopManager.generateAsymmetricKey(context);\n+        }\n+    }\n+\n+    @Override\n+    public String getAlias() {\n+        return mAlias;\n+    }\n+\n+    @Override\n+    public Date getCreatedOn() throws ClientException {\n+        return mDevicePopManager.getAsymmetricKeyCreationDate();\n+    }\n+\n+    @Override\n+    public String getThumbprint() throws ClientException {\n+        return mDevicePopManager.getAsymmetricKeyThumbprint();\n+    }\n+\n+    @Override\n+    public String getPublicKey() throws ClientException {\n+        return mDevicePopManager.getPublicKey(IDevicePopManager.PublicKeyFormat.JWK);\n+    }\n+\n+    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR2)\n+    @Override\n+    public String sign(@NonNull final String data) throws ClientException {\n+        return mDevicePopManager.sign(\n+                DevicePopManager.SigningAlgorithm.SHA_256_WITH_RSA,\n+                data\n+        );\n+    }\n+\n+    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR2)\n+    @Override\n+    public boolean verify(@NonNull final String plainText, @NonNull final String signatureStr) {\n+        return mDevicePopManager.verify(\n+                DevicePopManager.SigningAlgorithm.SHA_256_WITH_RSA,", "originalCommit": "c66f1aa2aae374ec6128c31ca91a059c9ae88025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NjE3OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492366179", "bodyText": "ACK -- will be part of the name", "author": "iambmelt", "createdAt": "2020-09-21T21:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NzE2MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492367161", "bodyText": "If we do, I'd go ahead and make it a subinterface, keeping the superinterface generic w.r.t. algorithm.  I'd hate to add too much friction to an eventual move away from RSA.", "author": "AdamBJohnsonx", "createdAt": "2020-09-21T21:53:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3MjA2OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492372069", "bodyText": "Pulled up in 32e3fc7", "author": "iambmelt", "createdAt": "2020-09-21T22:04:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDQ2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDc5Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492364796", "bodyText": "This should be able to verify any signature string, if it is understandable by the implementation of the interface, right?", "author": "AdamBJohnsonx", "createdAt": "2020-09-21T21:47:21Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKey.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an RSA asymmetric key. This object represents a single keypair instance inside of an\n+ * underlying keystore which may or may not be hardware backed depending on OS version, key size,\n+ * and TPM/HSM chipset.\n+ */\n+public interface AsymmetricKey {\n+\n+    /**\n+     * Gets the alias which refers to this key at its originating keystore.\n+     *\n+     * @return The alias of this key.\n+     */\n+    String getAlias();\n+\n+    /**\n+     * Returns the creation date of the asymmetric key entry backing this instance.\n+     *\n+     * @return The asymmetric key creation date.\n+     * @throws ClientException If no asymmetric key exists.\n+     */\n+    Date getCreatedOn() throws ClientException;\n+\n+    /**\n+     * Gets the thumbprint of the current KeyPair. Format is SHA256.\n+     *\n+     * @return The thumbprint.\n+     */\n+    String getThumbprint() throws ClientException;\n+\n+    /**\n+     * Gets an RFC-7517 compliant public key as a minified JWK.\n+     * <p>\n+     * Sample value:\n+     * <pre>\n+     * {\n+     * \t\"kty\": \"RSA\",\n+     * \t\"e\": \"AQAB\",\n+     * \t\"n\": \"tMqJ7Oxh3PdLaiEc28w....HwES9Q\"\n+     * }\n+     * </pre>\n+     */\n+    String getPublicKey() throws ClientException;\n+\n+    /**\n+     * Signs an arbitrary piece of String data. Algorithm is RSA256.\n+     *\n+     * @return The input data, signed by our private key.\n+     */\n+    String sign(String data) throws ClientException;\n+\n+    /**\n+     * Verifies a signature previously made by this private key. Algorithm is RSA256.", "originalCommit": "c66f1aa2aae374ec6128c31ca91a059c9ae88025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NTExNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492365116", "bodyText": "These classes will be used by OneAuth: API is understood to be RSA/256 based", "author": "iambmelt", "createdAt": "2020-09-21T21:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3MjkwNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492372904", "bodyText": "Clarified via naming, added super interface\ne76345c, 32e3fc7", "author": "iambmelt", "createdAt": "2020-09-21T22:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NTQyOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492365429", "bodyText": "If this must be an RSA key, I'd expect it to be in the name.  But I think that this interface can support any asymmetric key algorithm.  If so, we should weaken the documentation appropriately.", "author": "AdamBJohnsonx", "createdAt": "2020-09-21T21:48:57Z", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/AsymmetricKey.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.platform;\n+\n+import com.microsoft.identity.common.exception.ClientException;\n+\n+import java.util.Date;\n+\n+/**\n+ * Represents an RSA asymmetric key. This object represents a single keypair instance inside of an", "originalCommit": "c66f1aa2aae374ec6128c31ca91a059c9ae88025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NjAwOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492366008", "bodyText": "Sure, will incorporate into the name. Some of this won't be visible once its pulled thru OneAuth (they will wrap in their own class), but that's not terribly important for our naming quality", "author": "iambmelt", "createdAt": "2020-09-21T21:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NTQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3Mjc0Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1031#discussion_r492372746", "bodyText": "e76345c, 32e3fc7", "author": "iambmelt", "createdAt": "2020-09-21T22:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NTQyOQ=="}], "type": "inlineReview"}, {"oid": "e76345c5d7f2884fa2eae6884186ef30606d13e7", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e76345c5d7f2884fa2eae6884186ef30606d13e7", "message": "Class rename to make RSA coupling explicit", "committedDate": "2020-09-21T21:54:12Z", "type": "commit"}, {"oid": "32e3fc7df261f5b9660f42e683b476e0bb38dff5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/32e3fc7df261f5b9660f42e683b476e0bb38dff5", "message": "Pulling members up to non-RSA superinterface", "committedDate": "2020-09-21T22:03:41Z", "type": "commit"}, {"oid": "fad1b26e0d47079f151f8e981a8d997bbb1f5413", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fad1b26e0d47079f151f8e981a8d997bbb1f5413", "message": "Cleanup extra whitespace", "committedDate": "2020-09-21T22:08:45Z", "type": "commit"}, {"oid": "9b4f14fe9a7abeb839e9d60d098ced3b56ae6a50", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9b4f14fe9a7abeb839e9d60d098ced3b56ae6a50", "message": "Add newline", "committedDate": "2020-09-21T22:09:45Z", "type": "commit"}, {"oid": "477a0592f132697fe089a128787d7bb7f12d189f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/477a0592f132697fe089a128787d7bb7f12d189f", "message": "Assert that two 'generate' calls for the same alias result in the same\nunderlying key material", "committedDate": "2020-09-21T22:14:13Z", "type": "commit"}, {"oid": "043c0e5445629de0b1c848251c534daf56b2f7f7", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/043c0e5445629de0b1c848251c534daf56b2f7f7", "message": "Synchronize factory calls", "committedDate": "2020-09-21T22:15:56Z", "type": "commit"}]}