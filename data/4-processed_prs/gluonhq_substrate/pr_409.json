{"pr_number": 409, "pr_title": "#408 Add AttachAdapter with lifecycle events", "pr_createdAt": "2020-03-06T14:10:38Z", "pr_url": "https://github.com/gluonhq/substrate/pull/409", "timeline": [{"oid": "408301565ce6617fe0843b037a701850f2c9e146", "url": "https://github.com/gluonhq/substrate/commit/408301565ce6617fe0843b037a701850f2c9e146", "message": "Add missing license headers", "committedDate": "2020-03-06T13:48:48Z", "type": "commit"}, {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "url": "https://github.com/gluonhq/substrate/commit/086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "message": "#408 Add AttachAdapter with lifecycle events", "committedDate": "2020-03-06T14:08:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzIxNw==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388933217", "bodyText": "Don't you need to release the char array after use with (*env)->ReleaseCharArrayElements(env, jchars, chars, 0)?", "author": "tiainen", "createdAt": "2020-03-06T14:29:01Z", "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)\n+{\n+    LOGE(stderr, \"Dispatching lifecycle event from native Dalvik layer\");\n+    jchar *chars = (*env)->GetCharArrayElements(env, jchars, 0);\n+    attach_setLifecycleEvent(chars, count);", "originalCommit": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDg5Nw==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524897", "bodyText": "fixed", "author": "jperedadnr", "createdAt": "2020-03-09T08:48:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzYzNA==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388933634", "bodyText": "These files were introduced in 2020, so no need to add 2019?", "author": "tiainen", "createdAt": "2020-03-06T14:29:47Z", "path": "src/main/resources/native/android/c/glibc_shim.c", "diffHunk": "@@ -1,3 +1,30 @@\n+/*\n+ * Copyright (c) 2019, 2020, Gluon", "originalCommit": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDk0Mg==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524942", "bodyText": "fixed", "author": "jperedadnr", "createdAt": "2020-03-09T08:48:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzYzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4Ng==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388934786", "bodyText": "Would length be a more suitable name for the variable named count?", "author": "tiainen", "createdAt": "2020-03-06T14:31:45Z", "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)", "originalCommit": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDk3Mg==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524972", "bodyText": "fixed", "author": "jperedadnr", "createdAt": "2020-03-09T08:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNzg2OQ==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388937869", "bodyText": "I was wondering if passing an int instead of a string might be easier? The int values can be easily mapped to the matching LifecycleEvent enum in Attach?", "author": "tiainen", "createdAt": "2020-03-06T14:37:13Z", "path": "src/main/resources/native/android/dalvik/source/MainActivity.java", "diffHunk": "@@ -230,39 +257,51 @@ public boolean dispatchKeyEvent(final KeyEvent event) {\n     protected void onDestroy() {\n         Log.v(TAG, \"onDestroy\");\n         super.onDestroy();\n+        notifyLifecycleEvent(\"destroy\");\n         android.os.Process.killProcess(android.os.Process.myPid());\n     }\n \n     @Override\n     protected void onPause() {\n         Log.v(TAG, \"onPause\");\n         super.onPause();\n+        notifyLifecycleEvent(\"pause\");\n     }\n \n     @Override\n     protected void onResume() {\n         Log.v(TAG, \"onResume\");\n         super.onResume();\n+        notifyLifecycleEvent(\"resume\");\n         Log.v(TAG, \"onResume done\");\n     }\n \n     @Override\n     protected void onStart() {\n         Log.v(TAG, \"onStart\");\n         super.onStart();\n+        notifyLifecycleEvent(\"start\");\n         Log.v(TAG, \"onStart done\");\n     }\n \n     @Override\n     protected void onRestart() {\n         Log.v(TAG, \"onRestart\");\n         super.onRestart();\n+        notifyLifecycleEvent(\"restart\");\n     }\n \n     @Override\n     protected void onStop() {\n         Log.v(TAG, \"onStop\");\n         super.onStop();\n+        notifyLifecycleEvent(\"stop\");\n+    }\n+\n+    private void notifyLifecycleEvent(String event) {\n+        if (graalStarted) {\n+            nativeDispatchLifecycleEvent(event, event.length());", "originalCommit": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDgzNQ==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524835", "bodyText": "So far we only listen for pause/resume lifecycle events, but there are more (start, stop, ...). Adding an int could cause issues if we later on add any of those events.", "author": "jperedadnr", "createdAt": "2020-03-09T08:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNzg2OQ=="}], "type": "inlineReview"}, {"oid": "955f9138e51d36ed60153dc4f257ea5598809fa0", "url": "https://github.com/gluonhq/substrate/commit/955f9138e51d36ed60153dc4f257ea5598809fa0", "message": "Missing native signature", "committedDate": "2020-03-06T14:40:48Z", "type": "commit"}, {"oid": "584397b6e67abb637a00c453a854afe48c51aa65", "url": "https://github.com/gluonhq/substrate/commit/584397b6e67abb637a00c453a854afe48c51aa65", "message": "Use char array instead of String", "committedDate": "2020-03-06T14:43:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0MTc1NQ==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388941755", "bodyText": "this should be\nJava_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jstring event)", "author": "johanvos", "createdAt": "2020-03-06T14:44:02Z", "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)", "originalCommit": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0MjMxMw==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388942313", "bodyText": "better to pass a const char*\ne.g.\nconst char* nativeEvent = env->GetStringUTFChars(event, null);", "author": "johanvos", "createdAt": "2020-03-06T14:44:56Z", "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)\n+{\n+    LOGE(stderr, \"Dispatching lifecycle event from native Dalvik layer\");\n+    jchar *chars = (*env)->GetCharArrayElements(env, jchars, 0);\n+    attach_setLifecycleEvent(chars, count);", "originalCommit": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1d72cba170501385cc6e10e70ef363a805451ce", "url": "https://github.com/gluonhq/substrate/commit/a1d72cba170501385cc6e10e70ef363a805451ce", "message": "Use string instead of char array", "committedDate": "2020-03-06T16:02:49Z", "type": "commit"}, {"oid": "39bf4e69b79e44c1af9c6fcf20ef5c12b04499e1", "url": "https://github.com/gluonhq/substrate/commit/39bf4e69b79e44c1af9c6fcf20ef5c12b04499e1", "message": "Use const", "committedDate": "2020-03-06T16:06:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxMzQ0Mg==", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389013442", "bodyText": "Don't pass java types in between native layers.\nThis better done as\nvoid __attribute__((weak)) attach_setLifecycleEvent(const char *chars)", "author": "johanvos", "createdAt": "2020-03-06T16:42:32Z", "path": "src/main/resources/native/android/c/grandroid.h", "diffHunk": "@@ -47,4 +74,6 @@ void __attribute__((weak)) androidJfx_setNativeWindow(ANativeWindow *nativeWindo\n void __attribute__((weak)) androidJfx_setDensity(float nativeDensity) {}\n void __attribute__((weak)) androidJfx_gotTouchEvent(int count, int *actions, int *ids, int *xs, int *ys, int primary) {}\n void __attribute__((weak)) androidJfx_gotKeyEvent(int action, int key, jchar *chars, int count, int mods) {}\n-int  __attribute__((weak)) to_jfx_touch_action(int state) { return 0; }\n\\ No newline at end of file\n+int  __attribute__((weak)) to_jfx_touch_action(int state) { return 0; }\n+\n+void __attribute__((weak)) attach_setLifecycleEvent(const jchar *chars, int count) {}", "originalCommit": "39bf4e69b79e44c1af9c6fcf20ef5c12b04499e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fcc264ab19d68b61523856953ad94ca4bf548a82", "url": "https://github.com/gluonhq/substrate/commit/fcc264ab19d68b61523856953ad94ca4bf548a82", "message": "Use jstring and const char. Fix headers", "committedDate": "2020-03-06T18:59:21Z", "type": "commit"}, {"oid": "28b5bd39589dbb9227d7cc2f918bd871c062ad51", "url": "https://github.com/gluonhq/substrate/commit/28b5bd39589dbb9227d7cc2f918bd871c062ad51", "message": "Update compiled classes", "committedDate": "2020-03-06T19:28:36Z", "type": "commit"}]}