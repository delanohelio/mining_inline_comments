{"pr_number": 388, "pr_title": "point user.home on android to datadir", "pr_createdAt": "2020-02-27T13:10:25Z", "pr_url": "https://github.com/gluonhq/substrate/pull/388", "timeline": [{"oid": "6f744b95523c6c3da71e47d8714684bff835415c", "url": "https://github.com/gluonhq/substrate/commit/6f744b95523c6c3da71e47d8714684bff835415c", "message": "point user.home on android to datadir", "committedDate": "2020-02-27T13:09:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyMDI4MQ==", "url": "https://github.com/gluonhq/substrate/pull/388#discussion_r385120281", "bodyText": "Good catch from codacy, should be userArgSize", "author": "jperedadnr", "createdAt": "2020-02-27T13:20:11Z", "path": "src/main/resources/native/android/c/launcher.c", "diffHunk": "@@ -55,16 +55,22 @@ int argsize = 8;\n char** createArgs() {\n LOGE(stderr, \"CREATE ARGS\");\n     int origSize = sizeof(origargs)/sizeof(char*);\n-    char** result = malloc((origSize+1)* sizeof(char*));\n+    char** result = malloc((origSize+2)* sizeof(char*));\n     for (int i = 0; i < origSize; i++) {\n-        result[i] = origargs[i];\n+        result[i] = (char *)origargs[i];\n     }\n     int tmpArgSize=18+strnlen(appDataDir, 512);\n     char* tmpArgs = calloc(sizeof(char), tmpArgSize);\n     strcpy(tmpArgs,\"-Djava.io.tmpdir=\");\n     strcat(tmpArgs,appDataDir);\n     result[origSize]=tmpArgs;\n     argsize++;\n+    int userArgSize=13+strnlen(appDataDir, 512);\n+    char* userArgs = calloc(sizeof(char), tmpArgSize);", "originalCommit": "6f744b95523c6c3da71e47d8714684bff835415c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bf8352418f1e9af64d4870d3636d4b23000efc78", "url": "https://github.com/gluonhq/substrate/commit/bf8352418f1e9af64d4870d3636d4b23000efc78", "message": "fix memory leak", "committedDate": "2020-02-27T17:38:09Z", "type": "commit"}]}