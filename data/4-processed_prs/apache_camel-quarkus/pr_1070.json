{"pr_number": 1070, "pr_title": "Add a native extension for AWS2-SQS", "pr_createdAt": "2020-04-10T16:08:09Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1070", "timeline": [{"oid": "863979f3b7ad8f6d4dfa51002453859438891efb", "url": "https://github.com/apache/camel-quarkus/commit/863979f3b7ad8f6d4dfa51002453859438891efb", "message": "Add a native extension for AWS2-SQS", "committedDate": "2020-04-10T16:07:27Z", "type": "commit"}, {"oid": "a12ec82d1e15f971dbc248537c930120462dcf80", "url": "https://github.com/apache/camel-quarkus/commit/a12ec82d1e15f971dbc248537c930120462dcf80", "message": "Added extension to pom.xml and format", "committedDate": "2020-04-10T17:38:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyNzg0OQ==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408127849", "bodyText": "BTW there is Stream.toArray() that can save the List to array conversion in the next statement.", "author": "ppalaga", "createdAt": "2020-04-14T13:17:27Z", "path": "extensions/aws2-sqs/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/sqs/deployment/Aws2SqsProcessor.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.aws2.sqs.deployment;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.BeanRegistrationPhaseBuildItem;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import org.jboss.jandex.DotName;\n+import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;\n+import software.amazon.awssdk.http.SdkHttpService;\n+\n+class Aws2SqsProcessor {\n+    private static final String FEATURE = \"camel-aws2-sqs\";\n+\n+    public static final String AWS_SDK_APPLICATION_ARCHIVE_MARKERS = \"software/amazon/awssdk\";\n+\n+    private static final String APACHE_HTTP_SERVICE = \"software.amazon.awssdk.http.apache.ApacheSdkHttpService\";\n+\n+    private static final List<String> INTERCEPTOR_PATHS = Arrays.asList(\n+            \"software/amazon/awssdk/global/handlers/execution.interceptors\",\n+            \"software/amazon/awssdk/services/sqs/execution.interceptors\");\n+\n+    private static final DotName EXECUTION_INTERCEPTOR_NAME = DotName.createSimple(ExecutionInterceptor.class.getName());\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ExtensionSslNativeSupportBuildItem activateSslNativeSupport() {\n+        return new ExtensionSslNativeSupportBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep(applicationArchiveMarkers = { AWS_SDK_APPLICATION_ARCHIVE_MARKERS })\n+    void process(CombinedIndexBuildItem combinedIndexBuildItem,\n+            BuildProducer<ExtensionSslNativeSupportBuildItem> extensionSslNativeSupport,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClasses,\n+            BuildProducer<FeatureBuildItem> feature,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<NativeImageResourceBuildItem> resource) {\n+\n+        INTERCEPTOR_PATHS.forEach(path -> resource.produce(new NativeImageResourceBuildItem(path)));\n+\n+        List<String> knownInterceptorImpls = combinedIndexBuildItem.getIndex()\n+                .getAllKnownImplementors(EXECUTION_INTERCEPTOR_NAME)\n+                .stream()\n+                .map(c -> c.name().toString()).collect(Collectors.toList());", "originalCommit": "a12ec82d1e15f971dbc248537c930120462dcf80", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDA5Ng==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408130096", "bodyText": "Hm... is constructor and methods reflection really necessary for java.lang.String? Sounds possible, but rather strange. I wonder who is the caller in that reflective access?", "author": "ppalaga", "createdAt": "2020-04-14T13:20:38Z", "path": "extensions/aws2-sqs/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/sqs/deployment/Aws2SqsProcessor.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.aws2.sqs.deployment;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.BeanRegistrationPhaseBuildItem;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import org.jboss.jandex.DotName;\n+import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;\n+import software.amazon.awssdk.http.SdkHttpService;\n+\n+class Aws2SqsProcessor {\n+    private static final String FEATURE = \"camel-aws2-sqs\";\n+\n+    public static final String AWS_SDK_APPLICATION_ARCHIVE_MARKERS = \"software/amazon/awssdk\";\n+\n+    private static final String APACHE_HTTP_SERVICE = \"software.amazon.awssdk.http.apache.ApacheSdkHttpService\";\n+\n+    private static final List<String> INTERCEPTOR_PATHS = Arrays.asList(\n+            \"software/amazon/awssdk/global/handlers/execution.interceptors\",\n+            \"software/amazon/awssdk/services/sqs/execution.interceptors\");\n+\n+    private static final DotName EXECUTION_INTERCEPTOR_NAME = DotName.createSimple(ExecutionInterceptor.class.getName());\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ExtensionSslNativeSupportBuildItem activateSslNativeSupport() {\n+        return new ExtensionSslNativeSupportBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep(applicationArchiveMarkers = { AWS_SDK_APPLICATION_ARCHIVE_MARKERS })\n+    void process(CombinedIndexBuildItem combinedIndexBuildItem,\n+            BuildProducer<ExtensionSslNativeSupportBuildItem> extensionSslNativeSupport,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClasses,\n+            BuildProducer<FeatureBuildItem> feature,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<NativeImageResourceBuildItem> resource) {\n+\n+        INTERCEPTOR_PATHS.forEach(path -> resource.produce(new NativeImageResourceBuildItem(path)));\n+\n+        List<String> knownInterceptorImpls = combinedIndexBuildItem.getIndex()\n+                .getAllKnownImplementors(EXECUTION_INTERCEPTOR_NAME)\n+                .stream()\n+                .map(c -> c.name().toString()).collect(Collectors.toList());\n+\n+        reflectiveClasses.produce(new ReflectiveClassBuildItem(false, false,\n+                knownInterceptorImpls.toArray(new String[knownInterceptorImpls.size()])));\n+\n+        reflectiveClasses.produce(new ReflectiveClassBuildItem(true, false,\n+                String.class.getCanonicalName()));", "originalCommit": "a12ec82d1e15f971dbc248537c930120462dcf80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0MDE1OA==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408140158", "bodyText": "yes, it is.", "author": "oscerd", "createdAt": "2020-04-14T13:34:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0NjE2Mg==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408146162", "bodyText": "I don't know what I pasted here, I have to double check where the Class.forName is done, but without the declaration for String, SQS doesn't work.", "author": "oscerd", "createdAt": "2020-04-14T13:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3Njc0Ng==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408176746", "bodyText": "https://github.com/apache/commons-logging/blob/master/src/main/java/org/apache/commons/logging/impl/LogFactoryImpl.java#L210", "author": "oscerd", "createdAt": "2020-04-14T14:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMjcyOA==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408132728", "bodyText": "Nitpick: this should better be ...aws2", "author": "ppalaga", "createdAt": "2020-04-14T13:24:19Z", "path": "integration-tests/aws2/src/main/java/org/apache/camel/quarkus/component/aws/CamelRoute.java", "diffHunk": "@@ -14,21 +14,21 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.quarkus.component.aws2.sqs.it;\n+package org.apache.camel.quarkus.component.aws;", "originalCommit": "a12ec82d1e15f971dbc248537c930120462dcf80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0MDUzNg==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408140536", "bodyText": "I'm sending a PR for AWS2-S3, I'll fix this in a subsequent PR", "author": "oscerd", "createdAt": "2020-04-14T13:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMjcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzNTcxMQ==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408135711", "bodyText": "I do not think @RegisterForReflection is necessary here", "author": "ppalaga", "createdAt": "2020-04-14T13:28:30Z", "path": "integration-tests/aws2/src/main/java/org/apache/camel/quarkus/component/aws/CamelRoute.java", "diffHunk": "@@ -14,21 +14,21 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.quarkus.component.aws2.sqs.it;\n+package org.apache.camel.quarkus.component.aws;\n \n-import io.quarkus.test.junit.QuarkusTest;\n-import io.restassured.RestAssured;\n-import org.junit.jupiter.api.Test;\n+import io.quarkus.runtime.annotations.RegisterForReflection;\n+import org.apache.camel.builder.RouteBuilder;\n \n-@QuarkusTest\n-class Aws2SqsTest {\n+@RegisterForReflection", "originalCommit": "a12ec82d1e15f971dbc248537c930120462dcf80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0MTA2Nw==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408141067", "bodyText": "No, it's not needed", "author": "oscerd", "createdAt": "2020-04-14T13:36:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzNTcxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzNjYzNw==", "url": "https://github.com/apache/camel-quarkus/pull/1070#discussion_r408136637", "bodyText": "quarkus.ssl.native=true is not necessary, because we produce ExtensionSslNativeSupportBuildItem", "author": "ppalaga", "createdAt": "2020-04-14T13:29:40Z", "path": "integration-tests/aws2/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,33 @@\n+## ---------------------------------------------------------------------------\n+## Licensed to the Apache Software Foundation (ASF) under one or more\n+## contributor license agreements.  See the NOTICE file distributed with\n+## this work for additional information regarding copyright ownership.\n+## The ASF licenses this file to You under the Apache License, Version 2.0\n+## (the \"License\"); you may not use this file except in compliance with\n+## the License.  You may obtain a copy of the License at\n+##\n+##      http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing, software\n+## distributed under the License is distributed on an \"AS IS\" BASIS,\n+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+## See the License for the specific language governing permissions and\n+## limitations under the License.\n+## ---------------------------------------------------------------------------\n+#\n+# Quarkus\n+#\n+quarkus.ssl.native=true", "originalCommit": "a12ec82d1e15f971dbc248537c930120462dcf80", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}