{"pr_number": 2052, "pr_title": "Google PubSub native support", "pr_createdAt": "2020-12-02T16:30:29Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/2052", "timeline": [{"oid": "c3758dbcbdbe901ba36c8367d1fffb419fe696b1", "url": "https://github.com/apache/camel-quarkus/commit/c3758dbcbdbe901ba36c8367d1fffb419fe696b1", "message": "Google PubSub native support\n\nFixes #1041", "committedDate": "2020-12-02T14:14:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgyNDg0MQ==", "url": "https://github.com/apache/camel-quarkus/pull/2052#discussion_r534824841", "bodyText": "The custom Jackson based serializer is used in both JVM and native modes (the text seems to suggest that)?\nBTW, we'll see by tomorrow, whether serialization will be supported in GraalVM 21 oracle/graal#2730 (comment)", "author": "ppalaga", "createdAt": "2020-12-03T07:39:26Z", "path": "docs/modules/ROOT/pages/reference/extensions/google-pubsub.adoc", "diffHunk": "@@ -32,3 +32,12 @@ Please refer to the above link for usage and configuration details.\n ----\n \n Check the xref:user-guide/index.adoc[User guide] for more information about writing Camel Quarkus applications.\n+\n+== Camel Quarkus limitations\n+\n+By default, the Camel PubSub component uses JDK object serialization via `ObjectOutputStream` whenever the message body is anything other than `String` or `byte[]`.\n+\n+Since such serialization is not yet supported by GraalVM, this extension provides a custom Jackson based serializer to serialize complex message payloads as JSON.", "originalCommit": "c3758dbcbdbe901ba36c8367d1fffb419fe696b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgzMDE0Mw==", "url": "https://github.com/apache/camel-quarkus/pull/2052#discussion_r534830143", "bodyText": "The custom Jackson based serializer is used in both JVM and native modes\n\nYes, it's better IMO to be consistent and have the same behaviour in both modes.", "author": "jamesnetherton", "createdAt": "2020-12-03T07:43:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgyNDg0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgzMzIwMQ==", "url": "https://github.com/apache/camel-quarkus/pull/2052#discussion_r534833201", "bodyText": "I guess the readers could find this link to Quarkus Jackson guide helpful https://quarkus.io/guides/writing-extensions#customizing-jackson where they explain how to write serializers.", "author": "ppalaga", "createdAt": "2020-12-03T07:45:07Z", "path": "docs/modules/ROOT/pages/reference/extensions/google-pubsub.adoc", "diffHunk": "@@ -32,3 +32,12 @@ Please refer to the above link for usage and configuration details.\n ----\n \n Check the xref:user-guide/index.adoc[User guide] for more information about writing Camel Quarkus applications.\n+\n+== Camel Quarkus limitations\n+\n+By default, the Camel PubSub component uses JDK object serialization via `ObjectOutputStream` whenever the message body is anything other than `String` or `byte[]`.\n+\n+Since such serialization is not yet supported by GraalVM, this extension provides a custom Jackson based serializer to serialize complex message payloads as JSON.\n+\n+If your payload contains binary data, then you will need to handle that by creating a custom Jackson Serializer / Deserializer.", "originalCommit": "c3758dbcbdbe901ba36c8367d1fffb419fe696b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}