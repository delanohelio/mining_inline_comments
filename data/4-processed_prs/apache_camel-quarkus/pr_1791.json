{"pr_number": 1791, "pr_title": "Disruptor native support", "pr_createdAt": "2020-09-15T08:21:22Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1791", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MjMwNw==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488482307", "bodyText": "Tidy up", "author": "davsclaus", "createdAt": "2020-09-15T08:27:01Z", "path": "extensions/disruptor/runtime/pom.xml", "diffHunk": "@@ -57,6 +57,11 @@\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-disruptor</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.graalvm.nativeimage</groupId>\n+            <artifactId>svm</artifactId>\n+            <scope>provided</scope>        </dependency>", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MjQ2Nw==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488482467", "bodyText": "Should this not be 11 instead of 9 if we go higher than 8", "author": "davsclaus", "createdAt": "2020-09-15T08:27:16Z", "path": "extensions/disruptor/runtime/pom.xml", "diffHunk": "@@ -87,6 +92,8 @@\n                             <version>${quarkus.version}</version>\n                         </path>\n                     </annotationProcessorPaths>\n+                    <source>9</source>", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NTM2Mg==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488485362", "bodyText": "looks like some IDE intentions applied, fixing it", "author": "lburgazzoli", "createdAt": "2020-09-15T08:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MjQ2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4Mjg5Ng==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488482896", "bodyText": "Is it really stable when we just landed native support?", "author": "davsclaus", "createdAt": "2020-09-15T08:27:55Z", "path": "extensions/disruptor/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -24,9 +24,8 @@\n name: \"Camel Disruptor\"\n description: \"Provides asynchronous SEDA behavior using LMAX Disruptor\"\n metadata:\n-  unlisted: true\n   guide: \"https://camel.apache.org/camel-quarkus/latest/reference/extensions/disruptor.html\"\n   categories:\n   - \"integration\"\n   status:\n-  - \"preview\"\n+  - \"stable\"", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NTczMQ==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488485731", "bodyText": "@ppalaga what do you think ? I don't remember the rationale", "author": "lburgazzoli", "createdAt": "2020-09-15T08:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4Mjg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5MTkzNw==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488491937", "bodyText": "We currently consider all extensions stable that are native and have a proper test.", "author": "ppalaga", "createdAt": "2020-09-15T08:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4Mjg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MzE1Ng==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488483156", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The disruptor-vm provide support for communication across CamelContext instances but since camel-quarkus support a single CamelContext, such component is not available.\n          \n          \n            \n            The `disruptor-vm` component is not available on Camel Quarkus. This is because it is supposed to provide support for communication across multiple CamelContext instances within a single JVM, but by design, there is always just a single `CamelContext` on Camel Quarkus. Therefore `disruptor-vm` would make no sense.", "author": "ppalaga", "createdAt": "2020-09-15T08:28:19Z", "path": "docs/modules/ROOT/pages/reference/extensions/disruptor.adoc", "diffHunk": "@@ -28,3 +28,8 @@ Please refer to the above links for usage and configuration details.\n ----\n \n Check the xref:user-guide/index.adoc[User guide] for more information about writing Camel Quarkus applications.\n+\n+== Camel Quarkus limitations\n+\n+The disruptor-vm provide support for communication across CamelContext instances but since camel-quarkus support a single CamelContext, such component is not available.", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NDA1OA==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488484058", "bodyText": "I appreciate the comment!", "author": "ppalaga", "createdAt": "2020-09-15T08:29:43Z", "path": "extensions/disruptor/deployment/src/main/java/org/apache/camel/quarkus/component/disruptor/deployment/DisruptorProcessor.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.disruptor.deployment;\n+\n+import com.lmax.disruptor.BlockingWaitStrategy;\n+import com.lmax.disruptor.BusySpinWaitStrategy;\n+import com.lmax.disruptor.SleepingWaitStrategy;\n+import com.lmax.disruptor.YieldingWaitStrategy;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeReinitializedClassBuildItem;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelServiceFilter;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelServiceFilterBuildItem;\n+\n+class DisruptorProcessor {\n+    private static final String FEATURE = \"camel-disruptor\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    CamelServiceFilterBuildItem excludeDisruptorVM() {\n+        // The disruptor-vm provide support for communication across CamelContext instances but\n+        // since camel-quarkus support a single CamelContext, the component does not make sense.\n+        return new CamelServiceFilterBuildItem(CamelServiceFilter.forComponent(\"disruptor-vm\"));\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem reflectiveClasses(CombinedIndexBuildItem index) {\n+        // Note: this should be kept in sink with org.apache.camel.component.disruptor.DisruptorWaitStrategy\n+        return new ReflectiveClassBuildItem(\n+                true,\n+                false,\n+                BlockingWaitStrategy.class,\n+                SleepingWaitStrategy.class,\n+                BusySpinWaitStrategy.class,\n+                YieldingWaitStrategy.class);\n+    }\n+\n+    @BuildStep\n+    RuntimeReinitializedClassBuildItem reinitializedRingBufferFields() {\n+        // The `com.lmax.disruptor.RingBufferFields` class uses sun.misc.Unsafe behind the scenes to compute some static\n+        // fields and that confuses graalvm which emits warnings like:\n+        //\n+        //   Warning: RecomputeFieldValue.ArrayBaseOffset automatic substitution failed. The automatic substitution\n+        //   registration was attempted because a call to jdk.internal.misc.Unsafe.arrayBaseOffset(Class) was detected\n+        //   in the static initializer of com.lmax.disruptor.RingBufferFields. Detailed failure reason(s): Could not\n+        //   determine the field where the value produced by the call to jdk.internal.misc.Unsafe.arrayBaseOffset(Class)\n+        //   for the array base offset computation is stored. The call is not directly followed by a field store or by\n+        //   a sign extend node followed directly by a field store.\n+        //\n+        // Even if this is reported as a warning and the native compilation succeed, some static field are not computed\n+        // properly which result in weird result as runtime. For such reason, the static init method need to re-run at\n+        // runtime.", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NDU4NA==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488484584", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <scope>provided</scope>        </dependency>\n          \n          \n            \n                        <scope>provided</scope>\n          \n          \n            \n                    </dependency>", "author": "ppalaga", "createdAt": "2020-09-15T08:30:26Z", "path": "extensions/disruptor/runtime/pom.xml", "diffHunk": "@@ -57,6 +57,11 @@\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-disruptor</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.graalvm.nativeimage</groupId>\n+            <artifactId>svm</artifactId>\n+            <scope>provided</scope>        </dependency>\n+", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5MzM3OQ==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488493379", "bodyText": "Already spotted by @davsclaus", "author": "lburgazzoli", "createdAt": "2020-09-15T08:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NDU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NjMxMA==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488486310", "bodyText": "We still support target 1.8. If this is really required, it should be properly explained in the limitations.adoc, IMO. Why is this necessary, BTW?", "author": "ppalaga", "createdAt": "2020-09-15T08:33:06Z", "path": "extensions/disruptor/runtime/pom.xml", "diffHunk": "@@ -87,6 +92,8 @@\n                             <version>${quarkus.version}</version>\n                         </path>\n                     </annotationProcessorPaths>\n+                    <source>9</source>\n+                    <target>9</target>", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5MzM2NQ==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488493365", "bodyText": "Already spotted by @davsclaus", "author": "lburgazzoli", "createdAt": "2020-09-15T08:44:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NjMxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4ODk2MQ==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488488961", "bodyText": "Note to myself: We should perhaps make the regen of these virtual deps a part of the regular build. Otherwise ppl. won't regen them and the CI will fail with strange dependency errors. And yes, the vitual deps are out of sync here.", "author": "ppalaga", "createdAt": "2020-09-15T08:37:22Z", "path": "integration-tests/disruptor/pom.xml", "diffHunk": "@@ -0,0 +1,160 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-integration-tests</artifactId>\n+        <version>1.2.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-integration-test-disruptor</artifactId>\n+    <name>Camel Quarkus :: Integration Tests :: Disruptor</name>\n+    <description>Integration tests for Camel Quarkus Disruptor extension</description>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.apache.camel.quarkus</groupId>\n+                <artifactId>camel-quarkus-bom-test</artifactId>\n+                <version>${project.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-direct</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-disruptor</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-jsonb</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy-jsonb</artifactId>\n+        </dependency>\n+\n+\n+        <!-- test dependencies -->\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.awaitility</groupId>\n+            <artifactId>awaitility</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- The following dependencies guarantee that this module is built after them. You can update them by running `mvn process-resources -Pformat -N` from the source tree root directory -->", "originalCommit": "21e8ff0757e957834628d9edbefdf413033c5046", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUyNTM2NA==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488525364", "bodyText": "anything I need to do ?", "author": "lburgazzoli", "createdAt": "2020-09-15T09:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4ODk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzMzYxNw==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488533617", "bodyText": "mvn process-resources -Pformat -N from the top folder should suffice", "author": "ppalaga", "createdAt": "2020-09-15T09:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4ODk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNDM5Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488534393", "bodyText": "don't see anything changed", "author": "lburgazzoli", "createdAt": "2020-09-15T09:46:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4ODk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNzgzOA==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488537838", "bodyText": "I am blind, sorry, the deps. I was expecting to see as virtual are from io.quarkus but of course, those do not need any virtual counterpart. All is fine, sorry again for the false alarm!", "author": "ppalaga", "createdAt": "2020-09-15T09:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4ODk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwMjM0OA==", "url": "https://github.com/apache/camel-quarkus/pull/1791#discussion_r488602348", "bodyText": "no worries :)", "author": "lburgazzoli", "createdAt": "2020-09-15T11:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4ODk2MQ=="}], "type": "inlineReview"}, {"oid": "2a482308981e75d96352c38151ece260a2f5215f", "url": "https://github.com/apache/camel-quarkus/commit/2a482308981e75d96352c38151ece260a2f5215f", "message": "Disruptor native support #1597", "committedDate": "2020-09-15T09:02:49Z", "type": "commit"}, {"oid": "2a482308981e75d96352c38151ece260a2f5215f", "url": "https://github.com/apache/camel-quarkus/commit/2a482308981e75d96352c38151ece260a2f5215f", "message": "Disruptor native support #1597", "committedDate": "2020-09-15T09:02:49Z", "type": "forcePushed"}]}