{"pr_number": 722, "pr_title": "Resolves #162 adds camel-box support", "pr_createdAt": "2020-02-14T15:54:13Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/722", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMDcyMw==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379510723", "bodyText": "Can 'io.netty.noUnsafe' be a variable?", "author": "oscerd", "createdAt": "2020-02-14T16:01:15Z", "path": "extensions/box/deployment/src/main/java/org/apache/camel/quarkus/component/box/deployment/BoxProcessor.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.box.deployment;\n+\n+import com.box.sdk.BoxAPIRequest;\n+import com.box.sdk.BoxDeveloperEditionAPIConnection;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.AdditionalApplicationArchiveMarkerBuildItem;\n+import io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.SystemPropertyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.camel.component.box.BoxCollaborationsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxCommentsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxConfiguration;\n+import org.apache.camel.component.box.BoxEventLogsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxEventsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxFilesManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxFoldersManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxGroupsManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxSearchManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxTasksManagerEndpointConfiguration;\n+import org.apache.camel.component.box.BoxUsersManagerEndpointConfiguration;\n+import org.apache.camel.quarkus.core.deployment.UnbannedReflectiveBuildItem;\n+\n+class BoxProcessor {\n+\n+    private static final String FEATURE = \"camel-box\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ExtensionSslNativeSupportBuildItem activateSslNativeSupport() {\n+        return new ExtensionSslNativeSupportBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    AdditionalApplicationArchiveMarkerBuildItem boxArchiveMarker() {\n+        return new AdditionalApplicationArchiveMarkerBuildItem(\"com/box/sdk\");\n+    }\n+\n+    @BuildStep\n+    void configure(BuildProducer<SystemPropertyBuildItem> systemProperties,\n+            BuildProducer<RuntimeInitializedClassBuildItem> runtimeClasses) {\n+        systemProperties.produce(new SystemPropertyBuildItem(\"io.netty.noUnsafe\", \"true\"));", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMTQ1Nw==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379521457", "bodyText": "I do not see that box would depend on netty. Is the property really necessary?", "author": "ppalaga", "createdAt": "2020-02-14T16:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMDcyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMjIyMw==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379522223", "bodyText": "I appreciate the readme!", "author": "ppalaga", "createdAt": "2020-02-14T16:22:54Z", "path": "integration-tests/box/README.adoc", "diffHunk": "@@ -0,0 +1,17 @@\n+== Camel Quarkus Box Integration Tests\n+\n+To run the `camel-quarkus-box` integration tests, you must first create a Box developer account https://account.box.com/login.\n+\n+Then set the following environment variables:\n+\n+[source,shell]\n+----\n+export BOX_USER_NAME=my-user-name\n+export BOX_USER_PASSWORD=my-user-password\n+export BOX_CLIENT_ID=my-client-id\n+export BOX_CLIENT_SECRET=my-client_secret\n+----", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNDA0OA==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379524048", "bodyText": "Could you please change this to the new style introduced in https://github.com/apache/camel-quarkus/pull/720/files#diff-13fed0010c65738aa32aa3e15e89171dR92-R114 ?", "author": "ppalaga", "createdAt": "2020-02-14T16:26:25Z", "path": "integration-tests/box/pom.xml", "diffHunk": "@@ -0,0 +1,149 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-integration-tests</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-integration-test-box</artifactId>\n+    <name>Camel Quarkus :: Integration Tests :: Box</name>\n+    <description>Integration tests for Camel Quarkus Box extension</description>\n+\n+    <properties>\n+        <!-- mvnd, a.k.a. Maven Daemon: https://github.com/gnodet/mvnd -->\n+        <!-- The following rule tells mvnd to build the listed deployment modules before this module. -->\n+        <!-- This is important because mvnd builds modules in parallel by default. The deployment modules are not -->\n+        <!-- explicit dependencies of this module in the Maven sense, although they are required by the Quarkus Maven plugin. -->\n+        <!-- Please update rule whenever you change the dependencies of this module by running -->\n+        <!--     mvn process-resources -Pformat    from the root directory -->\n+        <mvnd.builder.rule>camel-quarkus-direct-deployment,camel-quarkus-box-deployment,camel-quarkus-support-policy-deployment</mvnd.builder.rule>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-box</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy</artifactId>\n+        </dependency>\n+\n+        <!-- test dependencies -->\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>org.jsoup</groupId>\n+                    <artifactId>jsoup</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-direct</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemProperties>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemProperties>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <reportErrorsAtRuntime>false</reportErrorsAtRuntime>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpsUrlHandler>true</enableHttpsUrlHandler>\n+                                    <enableServer>false</enableServer>\n+                                    <dumpProxies>false</dumpProxies>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableJni>true</enableJni>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                    <disableReports>true</disableReports>\n+                                    <additionalBuildArgs>-H:+TraceClassInitialization</additionalBuildArgs>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNjAyMQ==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379526021", "bodyText": "Hm... this seems to match an empty BOX_USER_NAME. I am not sure defining an empty env var is possible though. Anyway, something like .+ would perhaps be better, WDYT?", "author": "ppalaga", "createdAt": "2020-02-14T16:30:07Z", "path": "integration-tests/box/src/test/java/org/apache/camel/quarkus/component/box/it/BoxIT.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.box.it;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+import org.junit.jupiter.api.condition.EnabledIfEnvironmentVariable;\n+\n+@EnabledIfEnvironmentVariable(named = \"BOX_USER_NAME\", matches = \".*\")", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNzM0NQ==", "url": "https://github.com/apache/camel-quarkus/pull/722#discussion_r379527345", "bodyText": "Could you please sort the modules by running mvn process-resources -Pformat from the top level folder?", "author": "ppalaga", "createdAt": "2020-02-14T16:32:46Z", "path": "integration-tests/pom.xml", "diffHunk": "@@ -217,6 +217,7 @@\n         <module>validator</module>\n         <module>xslt</module>\n         <module>zipfile</module>\n+        <module>box</module>", "originalCommit": "8314f87e12893909648709b30becdd4446b935e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "26cf8bcf8c1022c244132ce9ac5992a4b4e5516f", "url": "https://github.com/apache/camel-quarkus/commit/26cf8bcf8c1022c244132ce9ac5992a4b4e5516f", "message": "Resolves #162 adds camel-box support", "committedDate": "2020-02-17T13:10:26Z", "type": "forcePushed"}, {"oid": "5f82c11f00278d6f744484afd8c84a8f343087f1", "url": "https://github.com/apache/camel-quarkus/commit/5f82c11f00278d6f744484afd8c84a8f343087f1", "message": "Resolves #162 adds camel-box support", "committedDate": "2020-02-17T13:12:57Z", "type": "commit"}, {"oid": "5f82c11f00278d6f744484afd8c84a8f343087f1", "url": "https://github.com/apache/camel-quarkus/commit/5f82c11f00278d6f744484afd8c84a8f343087f1", "message": "Resolves #162 adds camel-box support", "committedDate": "2020-02-17T13:12:57Z", "type": "forcePushed"}]}