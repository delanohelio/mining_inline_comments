{"pr_number": 1031, "pr_title": "new default column naming", "pr_createdAt": "2020-02-13T14:51:57Z", "pr_url": "https://github.com/bakdata/conquery/pull/1031", "timeline": [{"oid": "1d170502cb07e524cdc154a7fd44caa904770654", "url": "https://github.com/bakdata/conquery/commit/1d170502cb07e524cdc154a7fd44caa904770654", "message": "new default column naming", "committedDate": "2020-02-13T14:51:39Z", "type": "commit"}, {"oid": "7d2e32ccd908122a9731fcd75a4d9e21255079fc", "url": "https://github.com/bakdata/conquery/commit/7d2e32ccd908122a9731fcd75a4d9e21255079fc", "message": "Merge 1d170502cb07e524cdc154a7fd44caa904770654 into 24c7166b0be27ebd70400049dc31c45a0f6c4fc7", "committedDate": "2020-02-13T14:51:58Z", "type": "commit"}, {"oid": "4d4fc6ba0ab87e64e0449997f0b35148e8fbdb34", "url": "https://github.com/bakdata/conquery/commit/4d4fc6ba0ab87e64e0449997f0b35148e8fbdb34", "message": "automatic update to docs", "committedDate": "2020-02-13T14:54:01Z", "type": "commit"}, {"oid": "33b91e4837066a9ecc0ea4e0c91796e6b536bac5", "url": "https://github.com/bakdata/conquery/commit/33b91e4837066a9ecc0ea4e0c91796e6b536bac5", "message": "removes columnNamerScript form project", "committedDate": "2020-02-13T15:32:31Z", "type": "commit"}, {"oid": "54d7ce963e7300eff620322731bef8b7ef3dca14", "url": "https://github.com/bakdata/conquery/commit/54d7ce963e7300eff620322731bef8b7ef3dca14", "message": "Merge branch 'feature/better-column-names' of https://github.com/bakdata/conquery into feature/better-column-names", "committedDate": "2020-02-13T15:32:45Z", "type": "commit"}, {"oid": "80592980381007b7c95b2d03663cf9187a46bc8c", "url": "https://github.com/bakdata/conquery/commit/80592980381007b7c95b2d03663cf9187a46bc8c", "message": "Merge 54d7ce963e7300eff620322731bef8b7ef3dca14 into 24c7166b0be27ebd70400049dc31c45a0f6c4fc7", "committedDate": "2020-02-13T15:44:41Z", "type": "commit"}, {"oid": "d4f0db3763973e387ea0b99fe69562472c9409af", "url": "https://github.com/bakdata/conquery/commit/d4f0db3763973e387ea0b99fe69562472c9409af", "message": "automatic update to docs", "committedDate": "2020-02-13T15:46:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjY2MA==", "url": "https://github.com/bakdata/conquery/pull/1031#discussion_r379392660", "bodyText": "Kannst du das nicht als default column name l\u00f6sen? dadurch hast du nen eindeutigen datenfluss", "author": "awildturtok", "createdAt": "2020-02-14T11:54:18Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/PrintSettings.java", "diffHunk": "@@ -1,54 +1,49 @@\n package com.bakdata.conquery.models.query;\n \n-import java.util.Objects;\n-\n-import org.codehaus.groovy.control.CompilerConfiguration;\n+import java.util.function.Function;\n \n+import com.bakdata.conquery.models.concepts.Connector;\n import com.bakdata.conquery.models.query.resultinfo.SelectNameExtractor;\n import com.bakdata.conquery.models.query.resultinfo.SelectResultInfo;\n-import com.google.common.base.Strings;\n-\n-import groovy.lang.GroovyShell;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.ToString;\n-import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j\n @Getter @RequiredArgsConstructor @AllArgsConstructor @ToString\n public class PrintSettings implements SelectNameExtractor {\n-\tpublic static final String GROOVY_VARIABLE = \"columnInfo\";\n-\t/**\n-\t * Non static shell because thread safety is not given.\n-\t */\n-\tprivate final GroovyShell groovyShell = new GroovyShell(new CompilerConfiguration());\n \n \tprivate final boolean prettyPrint;\n-\t/**\n-\t * Assuming the Script has already been validated (from loading the config).\n-\t */\n-\tprivate String columnNamerScript = null;\n+\t\n+\tprivate Function<SelectResultInfo, String> columnNamer = null;\n \t\n \n \t/**\n \t * Generates the name for a query result column.\n-\t * The name is either determined by a configured script or by a standard procedure\n \t */\n \t@Override\n \tpublic String columnName(SelectResultInfo columnInfo) {\n-\t\tif(!Strings.isNullOrEmpty(columnNamerScript)) {\n-\t\t\t// Use the provided script\n-\t\t\tgroovyShell.setProperty(GROOVY_VARIABLE, columnInfo);\n-\t\t\tObject result = groovyShell.evaluate(columnNamerScript);\n-\t\t\tif(result != null) {\n-\t\t\t\treturn Objects.toString(result);\n-\t\t\t}\n-\t\t\tlog.info(\"The column namer script returned null: {}\\nFalling back to standard format\",columnNamerScript);\n+\t\tif (columnNamer != null) {\n+\t\t\t// If a columnNamer is supplied it is used\n+\t\t\treturn columnNamer.apply(columnInfo);\n \t\t}\n+\t\tStringBuilder sb = new StringBuilder();", "originalCommit": "d4f0db3763973e387ea0b99fe69562472c9409af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjgyOA==", "url": "https://github.com/bakdata/conquery/pull/1031#discussion_r379392828", "bodyText": "equalsIgnoreCase?", "author": "awildturtok", "createdAt": "2020-02-14T11:54:43Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/PrintSettings.java", "diffHunk": "@@ -1,54 +1,49 @@\n package com.bakdata.conquery.models.query;\n \n-import java.util.Objects;\n-\n-import org.codehaus.groovy.control.CompilerConfiguration;\n+import java.util.function.Function;\n \n+import com.bakdata.conquery.models.concepts.Connector;\n import com.bakdata.conquery.models.query.resultinfo.SelectNameExtractor;\n import com.bakdata.conquery.models.query.resultinfo.SelectResultInfo;\n-import com.google.common.base.Strings;\n-\n-import groovy.lang.GroovyShell;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.ToString;\n-import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j\n @Getter @RequiredArgsConstructor @AllArgsConstructor @ToString\n public class PrintSettings implements SelectNameExtractor {\n-\tpublic static final String GROOVY_VARIABLE = \"columnInfo\";\n-\t/**\n-\t * Non static shell because thread safety is not given.\n-\t */\n-\tprivate final GroovyShell groovyShell = new GroovyShell(new CompilerConfiguration());\n \n \tprivate final boolean prettyPrint;\n-\t/**\n-\t * Assuming the Script has already been validated (from loading the config).\n-\t */\n-\tprivate String columnNamerScript = null;\n+\t\n+\tprivate Function<SelectResultInfo, String> columnNamer = null;\n \t\n \n \t/**\n \t * Generates the name for a query result column.\n-\t * The name is either determined by a configured script or by a standard procedure\n \t */\n \t@Override\n \tpublic String columnName(SelectResultInfo columnInfo) {\n-\t\tif(!Strings.isNullOrEmpty(columnNamerScript)) {\n-\t\t\t// Use the provided script\n-\t\t\tgroovyShell.setProperty(GROOVY_VARIABLE, columnInfo);\n-\t\t\tObject result = groovyShell.evaluate(columnNamerScript);\n-\t\t\tif(result != null) {\n-\t\t\t\treturn Objects.toString(result);\n-\t\t\t}\n-\t\t\tlog.info(\"The column namer script returned null: {}\\nFalling back to standard format\",columnNamerScript);\n+\t\tif (columnNamer != null) {\n+\t\t\t// If a columnNamer is supplied it is used\n+\t\t\treturn columnNamer.apply(columnInfo);\n \t\t}\n+\t\tStringBuilder sb = new StringBuilder();\n+\t\tString cqLabel = columnInfo.getCqConcept().getLabel();\n+\t\tString conceptLabel = columnInfo.getSelect().getHolder().findConcept().getLabel();\n \t\t\n-\t\t// Use the standard procedure\n-\t\treturn String.format(\"%s %s\",columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel());\n-\t\t\n+\t\tsb.append(conceptLabel);\n+\t\tsb.append(' ');\n+\t\tif (!cqLabel.equals(conceptLabel)) {", "originalCommit": "d4f0db3763973e387ea0b99fe69562472c9409af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e78a25d8fc91187c3e546e8172e435385f9a48a8", "url": "https://github.com/bakdata/conquery/commit/e78a25d8fc91187c3e546e8172e435385f9a48a8", "message": "review changes", "committedDate": "2020-02-14T12:27:41Z", "type": "commit"}, {"oid": "8ada07ae1835af0711df8e955cd3b33da6aab835", "url": "https://github.com/bakdata/conquery/commit/8ada07ae1835af0711df8e955cd3b33da6aab835", "message": "Merge branch 'develop' into feature/better-column-names", "committedDate": "2020-02-14T12:28:50Z", "type": "commit"}]}