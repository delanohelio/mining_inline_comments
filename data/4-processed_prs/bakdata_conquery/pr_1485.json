{"pr_number": 1485, "pr_title": "Label and Description for SecondaryId", "pr_createdAt": "2020-12-09T11:56:04Z", "pr_url": "https://github.com/bakdata/conquery/pull/1485", "timeline": [{"oid": "c2cf9424734efbc9f25fccc91544ab32b958b1a2", "url": "https://github.com/bakdata/conquery/commit/c2cf9424734efbc9f25fccc91544ab32b958b1a2", "message": "add SecondaryIdDescription", "committedDate": "2020-12-07T14:21:54Z", "type": "commit"}, {"oid": "094d4f5c221ab7d9734c91ca0525ccf432cade61", "url": "https://github.com/bakdata/conquery/commit/094d4f5c221ab7d9734c91ca0525ccf432cade61", "message": "add SecondaryIdDescription and endpoints to create it", "committedDate": "2020-12-07T15:30:44Z", "type": "commit"}, {"oid": "872dc0572cf7a34c557409ea0eb4621b87cee0af", "url": "https://github.com/bakdata/conquery/commit/872dc0572cf7a34c557409ea0eb4621b87cee0af", "message": "remove unused method", "committedDate": "2020-12-07T15:31:50Z", "type": "commit"}, {"oid": "da4f0c661ed2582f429c7d5c1c7ede9239b650c3", "url": "https://github.com/bakdata/conquery/commit/da4f0c661ed2582f429c7d5c1c7ede9239b650c3", "message": "add test for SecondaryIdDescription", "committedDate": "2020-12-08T09:32:33Z", "type": "commit"}, {"oid": "7de5218e4628652b73d7ef5912bbdfebedaf85c3", "url": "https://github.com/bakdata/conquery/commit/7de5218e4628652b73d7ef5912bbdfebedaf85c3", "message": "rework HierarchyHelper to consume an UriBuilder", "committedDate": "2020-12-09T10:39:24Z", "type": "commit"}, {"oid": "5058fcd54769fd0625cc0adab27f471176e4e2aa", "url": "https://github.com/bakdata/conquery/commit/5058fcd54769fd0625cc0adab27f471176e4e2aa", "message": "Full roundtrip of SecondaryIdDescription", "committedDate": "2020-12-09T11:39:32Z", "type": "commit"}, {"oid": "957269533a7726c22e29bc4a42090a5f3f7c3d37", "url": "https://github.com/bakdata/conquery/commit/957269533a7726c22e29bc4a42090a5f3f7c3d37", "message": "Merge branch 'develop' into feature/second-id-label-and-desc", "committedDate": "2020-12-09T11:56:17Z", "type": "commit"}, {"oid": "24818e73a6ece81fef2fb90e2affc0ea03df5734", "url": "https://github.com/bakdata/conquery/commit/24818e73a6ece81fef2fb90e2affc0ea03df5734", "message": "automatic update to docs", "committedDate": "2020-12-09T11:58:43Z", "type": "commit"}, {"oid": "124f2abcf047d33e40f220676fb2d894cd777668", "url": "https://github.com/bakdata/conquery/commit/124f2abcf047d33e40f220676fb2d894cd777668", "message": "Change from SecondaryId to NsIdRef'd SecondaryIdDescription in QueryEngine and Table", "committedDate": "2020-12-10T13:40:58Z", "type": "commit"}, {"oid": "94ebdbb1da0598ab9aaee8aaa11643467c826757", "url": "https://github.com/bakdata/conquery/commit/94ebdbb1da0598ab9aaee8aaa11643467c826757", "message": "automatic update to docs", "committedDate": "2020-12-10T13:43:24Z", "type": "commit"}, {"oid": "816f7c9219c36d477f30536a9826817db726aae9", "url": "https://github.com/bakdata/conquery/commit/816f7c9219c36d477f30536a9826817db726aae9", "message": "validate deletion of SecondaryId before deleting", "committedDate": "2020-12-11T14:58:27Z", "type": "commit"}, {"oid": "66ce8ea52e4712652d5ae34e676d897870ad7c4a", "url": "https://github.com/bakdata/conquery/commit/66ce8ea52e4712652d5ae34e676d897870ad7c4a", "message": "Maintain SecondaryId in NamespacedStorage", "committedDate": "2020-12-11T14:58:27Z", "type": "commit"}, {"oid": "22c26c923d759789ce8e1aaf93aa71c56e6e1b73", "url": "https://github.com/bakdata/conquery/commit/22c26c923d759789ce8e1aaf93aa71c56e6e1b73", "message": "Add SecondaryIdDescription as part of RequiredData", "committedDate": "2020-12-11T14:58:27Z", "type": "commit"}, {"oid": "c27dd05ddb01df22869770bf381ab7688d91cbd7", "url": "https://github.com/bakdata/conquery/commit/c27dd05ddb01df22869770bf381ab7688d91cbd7", "message": "add secondaryId field to SecondaryIdQuery Tests", "committedDate": "2020-12-11T14:58:28Z", "type": "commit"}, {"oid": "00cdde371ff4f43583c88c37fa0b193b1857f6f3", "url": "https://github.com/bakdata/conquery/commit/00cdde371ff4f43583c88c37fa0b193b1857f6f3", "message": "fix construction of SecondaryIdQuery", "committedDate": "2020-12-11T14:58:28Z", "type": "commit"}, {"oid": "ee5cb795f972df536658586953e78714cc737a22", "url": "https://github.com/bakdata/conquery/commit/ee5cb795f972df536658586953e78714cc737a22", "message": "add missing dataset prefix to secondaryId", "committedDate": "2020-12-11T15:01:03Z", "type": "commit"}, {"oid": "7c35a2e7098d910c253f0f2edca1c8d33dc75a8b", "url": "https://github.com/bakdata/conquery/commit/7c35a2e7098d910c253f0f2edca1c8d33dc75a8b", "message": "automatic update to docs", "committedDate": "2020-12-11T15:01:04Z", "type": "commit"}, {"oid": "83bf47cb2acc5d41ad96c42f18d6ceb897243f60", "url": "https://github.com/bakdata/conquery/commit/83bf47cb2acc5d41ad96c42f18d6ceb897243f60", "message": "Merge remote-tracking branch 'origin/feature/second-id-label-and-desc' into feature/second-id-label-and-desc", "committedDate": "2020-12-11T15:08:40Z", "type": "commit"}, {"oid": "43eb3d98fdc46948566c67314b52af2e416bad6b", "url": "https://github.com/bakdata/conquery/commit/43eb3d98fdc46948566c67314b52af2e416bad6b", "message": "add back method used in deps", "committedDate": "2020-12-11T15:36:34Z", "type": "commit"}, {"oid": "b94c55a8542b6e105ceeded3e2b8f9f0fee927c1", "url": "https://github.com/bakdata/conquery/commit/b94c55a8542b6e105ceeded3e2b8f9f0fee927c1", "message": "also inject dataset", "committedDate": "2020-12-11T15:50:04Z", "type": "commit"}, {"oid": "7bb891b345abd96fed045137331f3757ad8788b9", "url": "https://github.com/bakdata/conquery/commit/7bb891b345abd96fed045137331f3757ad8788b9", "message": "add tracing in CentralRegistry.java", "committedDate": "2020-12-11T15:57:40Z", "type": "commit"}, {"oid": "4a4b303d16f7118c720cd0e267452e5839495bee", "url": "https://github.com/bakdata/conquery/commit/4a4b303d16f7118c720cd0e267452e5839495bee", "message": "instead log the class", "committedDate": "2020-12-11T16:08:26Z", "type": "commit"}, {"oid": "1eb5034ec5dc5d150c0072d912c555dadf93e9c9", "url": "https://github.com/bakdata/conquery/commit/1eb5034ec5dc5d150c0072d912c555dadf93e9c9", "message": "namespace was sometimes null", "committedDate": "2020-12-14T10:57:44Z", "type": "commit"}, {"oid": "2d4552f2e42b956e92712e3dfe1bd8ae578f8a98", "url": "https://github.com/bakdata/conquery/commit/2d4552f2e42b956e92712e3dfe1bd8ae578f8a98", "message": "automatic update to docs", "committedDate": "2020-12-14T11:00:34Z", "type": "commit"}, {"oid": "37967fea9f921a643d43040dfcd3104029b8fb0c", "url": "https://github.com/bakdata/conquery/commit/37967fea9f921a643d43040dfcd3104029b8fb0c", "message": "actually inject CentralRegsitry", "committedDate": "2020-12-14T11:06:08Z", "type": "commit"}, {"oid": "97e2ef2c1b188f4fb1b930a0e994e5d62fd8a3d3", "url": "https://github.com/bakdata/conquery/commit/97e2ef2c1b188f4fb1b930a0e994e5d62fd8a3d3", "message": "add more debug output", "committedDate": "2020-12-14T12:05:27Z", "type": "commit"}, {"oid": "f05ae6e3153d94cf05041005f8651df9ab2b0996", "url": "https://github.com/bakdata/conquery/commit/f05ae6e3153d94cf05041005f8651df9ab2b0996", "message": "add marker exception for empty CentralRegistry.java", "committedDate": "2020-12-14T13:22:49Z", "type": "commit"}, {"oid": "dd6a0afeeda410146ad11428c905b9b1cf9f2a8b", "url": "https://github.com/bakdata/conquery/commit/dd6a0afeeda410146ad11428c905b9b1cf9f2a8b", "message": "remove debug out", "committedDate": "2020-12-14T13:31:55Z", "type": "commit"}, {"oid": "1d1a95c83bbc81ba42ab6ab7b2a1665d578e0e09", "url": "https://github.com/bakdata/conquery/commit/1d1a95c83bbc81ba42ab6ab7b2a1665d578e0e09", "message": "register endpoint to tests", "committedDate": "2020-12-14T13:41:47Z", "type": "commit"}, {"oid": "b4585ff1d9dc87c784620d65e4d4bdaa5d2ee35a", "url": "https://github.com/bakdata/conquery/commit/b4585ff1d9dc87c784620d65e4d4bdaa5d2ee35a", "message": "fix comparison", "committedDate": "2020-12-14T14:06:39Z", "type": "commit"}, {"oid": "3c410a0c103b32a3fcdd90ec1064edd12bb3f2e8", "url": "https://github.com/bakdata/conquery/commit/3c410a0c103b32a3fcdd90ec1064edd12bb3f2e8", "message": "Merge branch 'develop' into feature/second-id-label-and-desc", "committedDate": "2020-12-14T15:13:56Z", "type": "commit"}, {"oid": "3db78e02de393ccd9ed99b0ad6faa8ec117d74cb", "url": "https://github.com/bakdata/conquery/commit/3db78e02de393ccd9ed99b0ad6faa8ec117d74cb", "message": "remove unused secondaryId from TableExport test", "committedDate": "2020-12-14T16:05:11Z", "type": "commit"}, {"oid": "04a00bf6cd3a25b30fbeeb48bb485ec7e6c2ae67", "url": "https://github.com/bakdata/conquery/commit/04a00bf6cd3a25b30fbeeb48bb485ec7e6c2ae67", "message": "Merge branch 'develop' into feature/second-id-label-and-desc", "committedDate": "2020-12-14T16:21:59Z", "type": "commit"}, {"oid": "7dd9c460c4dd7f523df84badc33af8704a9dd4ae", "url": "https://github.com/bakdata/conquery/commit/7dd9c460c4dd7f523df84badc33af8704a9dd4ae", "message": "move Tables to their own store, adding accessors to Storage", "committedDate": "2020-12-15T16:28:29Z", "type": "commit"}, {"oid": "77f2c1b6f866c719bf6f52f00785ae24eb9bfd84", "url": "https://github.com/bakdata/conquery/commit/77f2c1b6f866c719bf6f52f00785ae24eb9bfd84", "message": "implement accessors for table", "committedDate": "2020-12-15T16:28:29Z", "type": "commit"}, {"oid": "213dc8cd0d3c1a0511e6f4012d928216a65a078a", "url": "https://github.com/bakdata/conquery/commit/213dc8cd0d3c1a0511e6f4012d928216a65a078a", "message": "implement CRUD messages for Table", "committedDate": "2020-12-15T16:28:29Z", "type": "commit"}, {"oid": "7eae6d47e8626f6ea8012ea296b07cfe9684088a", "url": "https://github.com/bakdata/conquery/commit/7eae6d47e8626f6ea8012ea296b07cfe9684088a", "message": "CRUD of SecondaryId via Messages in NamespacedStorage.java", "committedDate": "2020-12-15T16:28:30Z", "type": "commit"}, {"oid": "d3265bd777e1689511ecb85e6c2d21f7a0aa575b", "url": "https://github.com/bakdata/conquery/commit/d3265bd777e1689511ecb85e6c2d21f7a0aa575b", "message": "add missing idref", "committedDate": "2020-12-16T10:11:43Z", "type": "commit"}, {"oid": "d827726c024f07f25096cd96ea09ef8a53f67a4d", "url": "https://github.com/bakdata/conquery/commit/d827726c024f07f25096cd96ea09ef8a53f67a4d", "message": "Add missing stores for NamespacedStorageImpl.java", "committedDate": "2021-01-04T16:27:15Z", "type": "commit"}, {"oid": "c640a127de447fff6a97370f10933a49e52a8bd3", "url": "https://github.com/bakdata/conquery/commit/c640a127de447fff6a97370f10933a49e52a8bd3", "message": "add waiting for work done on secondaryId Import in test", "committedDate": "2021-01-05T09:46:13Z", "type": "commit"}, {"oid": "3a0d3d511367232926b53b3422946ea1b6bda1fa", "url": "https://github.com/bakdata/conquery/commit/3a0d3d511367232926b53b3422946ea1b6bda1fa", "message": "missing data for restartTest", "committedDate": "2021-01-05T09:58:56Z", "type": "commit"}, {"oid": "b0380e104194c29bb7c17c0c5bea24a24f740be4", "url": "https://github.com/bakdata/conquery/commit/b0380e104194c29bb7c17c0c5bea24a24f740be4", "message": "add FE Object for SecondaryIdDescription", "committedDate": "2021-01-05T10:01:34Z", "type": "commit"}, {"oid": "d8465cb6fa6f7bc7e57ebd5b0f6b9c4102f18bba", "url": "https://github.com/bakdata/conquery/commit/d8465cb6fa6f7bc7e57ebd5b0f6b9c4102f18bba", "message": "Merge remote-tracking branch 'origin/develop' into feature/second-id-label-and-desc\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/io/xodus/StoreInfo.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/datasets/Table.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/QueryExecutionContext.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/QueryPlanContext.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/SecondaryIdQuery.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/ConceptNode.java\n#\tbackend/src/test/resources/tests/query/SECONDARY_ID/SECONDARY_IDS.test.json\n#\tbackend/src/test/resources/tests/query/SECONDARY_ID_EXCLUDED/SECONDARY_IDS_EXCLUDED.test.json\n#\tbackend/src/test/resources/tests/query/SECONDARY_ID_MIXED/SECONDARY_IDS_MIXED.test.json\n#\tdocs/REST API JSONs.md", "committedDate": "2021-01-05T10:28:39Z", "type": "commit"}, {"oid": "a06df8203edf8a5d777fc25d40ba009c54a0077d", "url": "https://github.com/bakdata/conquery/commit/a06df8203edf8a5d777fc25d40ba009c54a0077d", "message": "post merge fixes", "committedDate": "2021-01-05T10:52:06Z", "type": "commit"}, {"oid": "ac8515fbf75dda1c9889f281808b325dd9240ecf", "url": "https://github.com/bakdata/conquery/commit/ac8515fbf75dda1c9889f281808b325dd9240ecf", "message": "automatic update to docs", "committedDate": "2021-01-05T10:54:52Z", "type": "commit"}, {"oid": "ed031b2194226a3d47d9b019eb9cc8dd05ed0814", "url": "https://github.com/bakdata/conquery/commit/ed031b2194226a3d47d9b019eb9cc8dd05ed0814", "message": "pull back missing files for test", "committedDate": "2021-01-05T14:07:30Z", "type": "commit"}, {"oid": "eb1ce48a0f2bbf24cbfd4782cb3fc72ad38b27b1", "url": "https://github.com/bakdata/conquery/commit/eb1ce48a0f2bbf24cbfd4782cb3fc72ad38b27b1", "message": "change name of variable", "committedDate": "2021-01-05T14:24:09Z", "type": "commit"}, {"oid": "1d60f22becabd61c43957b2152915f28df6d88fa", "url": "https://github.com/bakdata/conquery/commit/1d60f22becabd61c43957b2152915f28df6d88fa", "message": "add CPSType label to ExecutionStatus", "committedDate": "2021-01-06T11:01:09Z", "type": "commit"}, {"oid": "9ce153b55c1dfd36dd3503fa39d68ba517330696", "url": "https://github.com/bakdata/conquery/commit/9ce153b55c1dfd36dd3503fa39d68ba517330696", "message": "automatic update to docs", "committedDate": "2021-01-06T11:04:37Z", "type": "commit"}, {"oid": "79ea87df0761ebc20f75d850caf1aef3b16bf956", "url": "https://github.com/bakdata/conquery/commit/79ea87df0761ebc20f75d850caf1aef3b16bf956", "message": "add secondaryId to ExecutionStatus", "committedDate": "2021-01-06T11:13:03Z", "type": "commit"}, {"oid": "085ecf9c2b9f78aabdbbde1e7a389de0482764fd", "url": "https://github.com/bakdata/conquery/commit/085ecf9c2b9f78aabdbbde1e7a389de0482764fd", "message": "automatic update to docs", "committedDate": "2021-01-06T11:16:08Z", "type": "commit"}, {"oid": "86c347dcb00309e4b07d4ff87a42304eaa10ffc9", "url": "https://github.com/bakdata/conquery/commit/86c347dcb00309e4b07d4ff87a42304eaa10ffc9", "message": "add missing label to FESecondaryId", "committedDate": "2021-01-06T13:06:01Z", "type": "commit"}, {"oid": "b0aad9b4c867f59f94a6f0d254edfefd23fe8ff3", "url": "https://github.com/bakdata/conquery/commit/b0aad9b4c867f59f94a6f0d254edfefd23fe8ff3", "message": "add test case for secondaryIdQuery", "committedDate": "2021-01-06T13:06:13Z", "type": "commit"}, {"oid": "612e3b455d49a538d83c7e9d1b9a570fd01a47e8", "url": "https://github.com/bakdata/conquery/commit/612e3b455d49a538d83c7e9d1b9a570fd01a47e8", "message": "allow counting by different metrics", "committedDate": "2021-01-06T16:07:55Z", "type": "commit"}, {"oid": "db9d83b9fb0a2ebecd424ec486c3719e723530f3", "url": "https://github.com/bakdata/conquery/commit/db9d83b9fb0a2ebecd424ec486c3719e723530f3", "message": "automatic update to docs", "committedDate": "2021-01-06T16:10:25Z", "type": "commit"}, {"oid": "4eba66cc0b7dbbe70035cbe799de04657f379c52", "url": "https://github.com/bakdata/conquery/commit/4eba66cc0b7dbbe70035cbe799de04657f379c52", "message": "fix exclusion, and make test use aggregation filter to ensure it's looking at the data", "committedDate": "2021-01-07T16:10:37Z", "type": "commit"}, {"oid": "456b8e7ebead66c0603c30f18c50aa81561f7b4e", "url": "https://github.com/bakdata/conquery/commit/456b8e7ebead66c0603c30f18c50aa81561f7b4e", "message": "Merge branch 'develop' into feature/second-id-label-and-desc", "committedDate": "2021-01-11T10:10:01Z", "type": "commit"}, {"oid": "a42d6cae740ac25197348b49e33696c8efc83498", "url": "https://github.com/bakdata/conquery/commit/a42d6cae740ac25197348b49e33696c8efc83498", "message": "automatic update to docs", "committedDate": "2021-01-11T10:12:18Z", "type": "commit"}, {"oid": "a0dd869eb75123115abf9d01856374e8211d9c93", "url": "https://github.com/bakdata/conquery/commit/a0dd869eb75123115abf9d01856374e8211d9c93", "message": "apply move of secondaryIds to context", "committedDate": "2021-01-11T11:23:32Z", "type": "commit"}, {"oid": "c6b7d58440993c069c14be7410df8624ac92502f", "url": "https://github.com/bakdata/conquery/commit/c6b7d58440993c069c14be7410df8624ac92502f", "message": "fix map usage where there was none", "committedDate": "2021-01-11T11:29:58Z", "type": "commit"}, {"oid": "cb4ecdd55bb63ac9677c7decf34fe56a027ae1bd", "url": "https://github.com/bakdata/conquery/commit/cb4ecdd55bb63ac9677c7decf34fe56a027ae1bd", "message": "Add SecondaryId to Table", "committedDate": "2021-01-11T12:49:11Z", "type": "commit"}, {"oid": "25fc7a01d0733e1a9baac833fb8c87b3bedf9452", "url": "https://github.com/bakdata/conquery/commit/25fc7a01d0733e1a9baac833fb8c87b3bedf9452", "message": "fix template and use inline LI", "committedDate": "2021-01-11T12:56:34Z", "type": "commit"}, {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724", "url": "https://github.com/bakdata/conquery/commit/b1269ab700f02d9e83f24a00ac31850082b85724", "message": "fix SECONDARY_IDS_EXCLUDED.test.json", "committedDate": "2021-01-11T16:06:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMzMjEzMQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r543332131", "bodyText": "Ist das aus dem Debugging? Kann idResolveContext  null sein?", "author": "thoniTUB", "createdAt": "2020-12-15T13:16:37Z", "path": "backend/src/main/java/com/bakdata/conquery/io/jackson/serializer/NsIdReferenceDeserializer.java", "diffHunk": "@@ -57,8 +57,9 @@ public T deserialize(JsonParser parser, DeserializationContext ctxt) throws IOEx\n \t\t\t\telse {\n \t\t\t\t\tid = idParser.parse(text);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tOptional<T> result = IdResolveContext.get(ctxt).getOptional(id);\n+\n+\t\t\t\tfinal IdResolveContext idResolveContext = IdResolveContext.get(ctxt);\n+\t\t\t\tOptional<T> result = idResolveContext.getOptional(id);", "originalCommit": "04a00bf6cd3a25b30fbeeb48bb485ec7e6c2ae67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc5NDg1Mw==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555794853", "bodyText": "Der Change war nur zum debugging da, w\u00fcrde ihn aber lassen, weil es manchmal gut ist zu sehen, welchen Kontext man genau bekommt.", "author": "awildturtok", "createdAt": "2021-01-12T14:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMzMjEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE3NTI2OA==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555175268", "bodyText": "\ud83d\udc4d", "author": "thoniTUB", "createdAt": "2021-01-11T16:26:28Z", "path": "backend/src/main/java/com/bakdata/conquery/apiv1/StoredQueriesProcessor.java", "diffHunk": "@@ -47,7 +48,7 @@\n \t\treturn allQueries\n \t\t\t.stream()\n \t\t\t// to exclude subtypes from somewhere else\n-\t\t\t.filter(q -> (q instanceof ManagedQuery) && ((ManagedQuery) q).getQuery().getClass().equals(ConceptQuery.class))\n+\t\t\t.filter(StoredQueriesProcessor::canFrontendRender)", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE4OTI4NQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555189285", "bodyText": "Willst du die Synchronisierung nicht im Worker machen? Sonst k\u00f6nnten Add und Remove ineinander greifen.\nAuch erzeugt context.getStorage() momentan immer ein neues Object", "author": "thoniTUB", "createdAt": "2021-01-11T16:46:45Z", "path": "backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/RemoveSecondaryId.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.bakdata.conquery.models.messages.namespaces.specific;\n+\n+import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.identifiable.ids.specific.SecondaryIdDescriptionId;\n+import com.bakdata.conquery.models.messages.namespaces.NamespacedMessage;\n+import com.bakdata.conquery.models.messages.namespaces.WorkerMessage;\n+import com.bakdata.conquery.models.worker.Worker;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@CPSType(id=\"REMOVE_SECONDARYID\", base=NamespacedMessage.class) @Slf4j\n+@AllArgsConstructor(onConstructor_=@JsonCreator) @Getter @Setter @ToString(callSuper=true)\n+public class RemoveSecondaryId extends WorkerMessage.Slow {\n+\n+\tprivate SecondaryIdDescriptionId secondaryId;\n+\n+\t@Override\n+\tpublic void react(Worker context) throws Exception {\n+\t\tlog.info(\"Received Deletion of SecondaryId {}\", secondaryId);\n+\t\tsynchronized (context.getStorage()) {", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc5NDAwNA==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555794004", "bodyText": "habe jetzt die Methode im zugrunde liegenden Storage synchronized gemacht, macht Sinn!", "author": "awildturtok", "createdAt": "2021-01-12T14:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE4OTI4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MDYyOQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555190629", "bodyText": "Sieht static aus", "author": "thoniTUB", "createdAt": "2021-01-11T16:48:42Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "diffHunk": "@@ -62,4 +65,7 @@ private static DatasetId getDataset(IQuery query, DatasetId alternativeDataset)\n \t\treturn dataset;\n \t}\n \n+\tpublic long countResults(List<EntityResult> results) {", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU4NzYxMg==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555587612", "bodyText": "jein, das ist eine klassen methode, damit es beim addResult gez\u00e4hlt werden kann spezifisch der ausgef\u00fchrten Query, ohne sich die Klasse anschauen zu m\u00fcssen o\u00e4", "author": "awildturtok", "createdAt": "2021-01-12T08:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI4MDc4Ng==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556280786", "bodyText": "Ah okay, dann bitte Doku ran machen.", "author": "thoniTUB", "createdAt": "2021-01-13T06:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MDYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5ODUxNg==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555198516", "bodyText": "Ist im Frontend eine Anpassung der Ergebnisanzeige eingeplant? Hier werden ja jetzt keine Versicherten mehr ausgegeben.", "author": "thoniTUB", "createdAt": "2021-01-11T17:00:04Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/SecondaryIdQuery.java", "diffHunk": "@@ -53,13 +126,22 @@ public void resolve(QueryResolveContext context) {\n \n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tcollector.add( new SimpleResultInfo(secondaryId.getName(), ResultType.STRING));\n+\t\tcollector.add(new SimpleResultInfo(secondaryId.getName(), ResultType.STRING));\n \t\tquery.collectResultInfos(collector);\n \t}\n \n \t@Override\n \tpublic void visit(Consumer<Visitable> visitor) {\n \t\tvisitor.accept(this);\n-\t\tquery.visit(visitor);\n+\t\troot.visit(visitor);\n+\t}\n+\n+\t@Override\n+\tpublic long countResults(List<EntityResult> results) {\n+\t\treturn results.stream()\n+\t\t\t\t\t  .flatMap(ContainedEntityResult::filterCast)\n+\t\t\t\t\t  .map(ContainedEntityResult::listResultLines)", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU4NjY0MA==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555586640", "bodyText": "ja", "author": "awildturtok", "createdAt": "2021-01-12T08:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5ODUxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5OTIyNA==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555199224", "bodyText": "Hier ist die Einr\u00fcckung kaputt", "author": "thoniTUB", "createdAt": "2021-01-11T17:01:04Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -123,6 +130,17 @@ public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n \n \t\t\texistsAggregators.forEach(agg -> agg.setReference(filtersNode));\n \n+\n+\n+\t\t\tfinal Connector connector = table.getResolvedConnector();\n+\n+\t\t\tfinal SecondaryIdDescriptionId selectedSecondaryId = Arrays.stream(connector.getTable().getColumns())\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .map(Column::getSecondaryId)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .filter(Objects::nonNull)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .map(SecondaryIdDescription::getId)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .filter(o -> Objects.equals(context.getSelectedSecondaryId(), o))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .collect(MoreCollectors.toOptional())\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .orElse(null);", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwNTY4OQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555205689", "bodyText": "Hier sollte dataset jetzt nicht mehr \u00fcbergeben werden, da es ja schon namespace gibt.", "author": "thoniTUB", "createdAt": "2021-01-11T17:10:21Z", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -108,7 +116,7 @@\n \tprivate final ObjectWriter jsonWriter = Jackson.MAPPER.writer();\n \tprivate final int entityBucketSize;\n \n-\tpublic void addTable(Dataset dataset, Table table) throws JSONException {\n+\tpublic void addTable(Dataset dataset, Table table, Namespace namespace) throws JSONException {", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwODE5Ng==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555208196", "bodyText": "Achtung RaceCondition mit AddTable", "author": "thoniTUB", "createdAt": "2021-01-11T17:14:11Z", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -621,4 +618,43 @@ public void updateMatchingStats(DatasetId datasetId) {\n \n \t\tFilterSearch.updateSearch(getDatasetRegistry(), Collections.singleton(ns.getDataset()), getJobManager());\n \t}\n+\n+\tpublic void addSecondaryId(Namespace namespace, SecondaryIdDescription secondaryId) {\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\t\tsecondaryId.setDataset(dataset);\n+\n+\t\tlog.trace(\"Received new {}\", secondaryId);\n+\t\tlog.info(\"Received new SecondaryId[{}]\", secondaryId.getId());\n+\n+\t\tnamespace.getStorage().addSecondaryId(secondaryId);\n+\n+\t\tnamespace.sendToAll(new UpdateSecondaryId(secondaryId));\n+\t}\n+\n+\tpublic void deleteSecondaryId(SecondaryIdDescriptionId secondaryId) {\n+\t\tfinal Namespace namespace = datasetRegistry.get(secondaryId.getDataset());\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\n+\t\t// Before we commit this deletion, we check if this SecondaryId still has dependent Columns.\n+\t\tfinal List<Column> dependents = namespace.getStorage().getTables().stream()", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYwNjQ4Nw==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556606487", "bodyText": "habe mal alles was Sinn macht synchronized markiert, multithreading w\u00e4re hier eh schlecht", "author": "awildturtok", "createdAt": "2021-01-13T15:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwODE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555209092", "bodyText": "Cool die Exceptions kannte ich noch nicht", "author": "thoniTUB", "createdAt": "2021-01-11T17:15:22Z", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "diffHunk": "@@ -46,17 +46,19 @@\n \tprotected TableId tableId;\n \tprotected Table table;\n \t\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.namespace = processor.getDatasetRegistry().get(datasetId);\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMTM2Mg==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555211362", "bodyText": "Aber das sind leider keine WebExceptions :|\nBitte wieder r\u00fcckg\u00e4ngig machen", "author": "thoniTUB", "createdAt": "2021-01-11T17:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMzM2Ng==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555213366", "bodyText": "Die ForbiddenException ist eine WebApplication Exception", "author": "thoniTUB", "createdAt": "2021-01-11T17:21:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU5MDU5MQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555590591", "bodyText": "Das war nur der falsche import:  import javax.ws.rs.NotFoundException;", "author": "awildturtok", "createdAt": "2021-01-12T08:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI4MDI3OQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556280279", "bodyText": "Oki", "author": "thoniTUB", "createdAt": "2021-01-13T05:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMTUyOQ==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555211529", "bodyText": "Hier auch", "author": "thoniTUB", "createdAt": "2021-01-11T17:19:03Z", "path": "backend/src/main/java/com/bakdata/conquery/resources/hierarchies/HTables.java", "diffHunk": "@@ -21,16 +21,18 @@\n \t@PathParam(TABLE)\n \tprotected TableId tableId;\n \tprotected Table table;\n-\t\n+\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU2MjYyNw==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555562627", "bodyText": "Eins reicht denke ich", "author": "thoniTUB", "createdAt": "2021-01-12T07:31:10Z", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -621,4 +618,43 @@ public void updateMatchingStats(DatasetId datasetId) {\n \n \t\tFilterSearch.updateSearch(getDatasetRegistry(), Collections.singleton(ns.getDataset()), getJobManager());\n \t}\n+\n+\tpublic void addSecondaryId(Namespace namespace, SecondaryIdDescription secondaryId) {\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\t\tsecondaryId.setDataset(dataset);\n+\n+\t\tlog.trace(\"Received new {}\", secondaryId);\n+\t\tlog.info(\"Received new SecondaryId[{}]\", secondaryId.getId());", "originalCommit": "b1269ab700f02d9e83f24a00ac31850082b85724", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ba08da0974152eb6fd6c77574da5a5c00b11566", "url": "https://github.com/bakdata/conquery/commit/6ba08da0974152eb6fd6c77574da5a5c00b11566", "message": "Review feedback", "committedDate": "2021-01-12T14:51:25Z", "type": "commit"}, {"oid": "2b90744e9d2eca269f48fc87c50dbf8aed22471c", "url": "https://github.com/bakdata/conquery/commit/2b90744e9d2eca269f48fc87c50dbf8aed22471c", "message": "fix code that was missed by refactor", "committedDate": "2021-01-12T14:56:26Z", "type": "commit"}, {"oid": "72a6a14e7a0f842f3d349145f9fca8015a870eb6", "url": "https://github.com/bakdata/conquery/commit/72a6a14e7a0f842f3d349145f9fca8015a870eb6", "message": "documentation", "committedDate": "2021-01-13T15:09:13Z", "type": "commit"}, {"oid": "4d020ff643f1e9d597443048a37b3f0a662f7867", "url": "https://github.com/bakdata/conquery/commit/4d020ff643f1e9d597443048a37b3f0a662f7867", "message": "synchronize CRUD for AdminProcessor", "committedDate": "2021-01-13T15:28:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYxNjI1NA==", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556616254", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Implement Query-type aware counting of results. Standard method is counting person-lines.\n          \n          \n            \n            \t * Implement Query-type aware counting of results. Standard method is counting unique entities.", "author": "thoniTUB", "createdAt": "2021-01-13T15:41:57Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "diffHunk": "@@ -65,6 +67,12 @@ private static DatasetId getDataset(IQuery query, DatasetId alternativeDataset)\n \t\treturn dataset;\n \t}\n \n+\t/**\n+\t * Implement Query-type aware counting of results. Standard method is counting person-lines.", "originalCommit": "4d020ff643f1e9d597443048a37b3f0a662f7867", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "00e21f4e2f7431e80738fb48321e4a336772426e", "url": "https://github.com/bakdata/conquery/commit/00e21f4e2f7431e80738fb48321e4a336772426e", "message": "Update backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java\n\nCo-authored-by: MT <12283268+thoniTUB@users.noreply.github.com>", "committedDate": "2021-01-13T15:46:09Z", "type": "commit"}, {"oid": "2a22203e5cfc3b05d3ea4b39253d18571b482a06", "url": "https://github.com/bakdata/conquery/commit/2a22203e5cfc3b05d3ea4b39253d18571b482a06", "message": "Merge branch 'develop' into feature/second-id-label-and-desc", "committedDate": "2021-01-14T11:12:59Z", "type": "commit"}, {"oid": "b3c458bb9c36938de03a17804dc1de6e444204c1", "url": "https://github.com/bakdata/conquery/commit/b3c458bb9c36938de03a17804dc1de6e444204c1", "message": "automatic update to docs", "committedDate": "2021-01-14T11:15:34Z", "type": "commit"}]}