{"pr_number": 1287, "pr_title": "Cleanup and Refactor QueryEngine", "pr_createdAt": "2020-07-21T13:47:18Z", "pr_url": "https://github.com/bakdata/conquery/pull/1287", "timeline": [{"oid": "da344b6914a4af48a3b780c197423205ef04a412", "url": "https://github.com/bakdata/conquery/commit/da344b6914a4af48a3b780c197423205ef04a412", "message": "Refactor and Cleanup implementations of EventIterating. Now contains EventIterating.acceptEvent.", "committedDate": "2020-07-21T13:21:30Z", "type": "commit"}, {"oid": "8d23914e25032ed767db315b2f6561b323190aa8", "url": "https://github.com/bakdata/conquery/commit/8d23914e25032ed767db315b2f6561b323190aa8", "message": "Add EventFilterNode as specific case of FilterNode towards a separation of the two", "committedDate": "2020-07-21T13:46:27Z", "type": "commit"}, {"oid": "d3a5fb78bb704d8e0fda1fa756aa3de238e84b74", "url": "https://github.com/bakdata/conquery/commit/d3a5fb78bb704d8e0fda1fa756aa3de238e84b74", "message": "Merge branch 'develop' into feature/cleanup-event-iterating", "committedDate": "2020-07-21T13:47:38Z", "type": "commit"}, {"oid": "f2a8c0d508b8c96e20ce07566dd4aa279072e826", "url": "https://github.com/bakdata/conquery/commit/f2a8c0d508b8c96e20ce07566dd4aa279072e826", "message": "Remove duplicate EventFilterNode.filterValue as it is not required and cause null values in cloning", "committedDate": "2020-07-21T14:40:06Z", "type": "commit"}, {"oid": "6d17a02eb8e00b94e75bb6ba35907a789e4fb77e", "url": "https://github.com/bakdata/conquery/commit/6d17a02eb8e00b94e75bb6ba35907a789e4fb77e", "message": "Delete AggregatorNode.java, prepapre most Code to directly use Aggregators", "committedDate": "2020-07-21T15:34:03Z", "type": "commit"}, {"oid": "f57e207a16da382be6836ba0e4e10ac3342e6584", "url": "https://github.com/bakdata/conquery/commit/f57e207a16da382be6836ba0e4e10ac3342e6584", "message": "Rework FiltersNode towards full fledged evaulating node", "committedDate": "2020-07-21T15:46:09Z", "type": "commit"}, {"oid": "fae7b05614a1902afe57f5e7a9d09ebfa4a50703", "url": "https://github.com/bakdata/conquery/commit/fae7b05614a1902afe57f5e7a9d09ebfa4a50703", "message": "Merge f57e207a16da382be6836ba0e4e10ac3342e6584 into da4dc50c70715fd861f88318b0db92eb4b514761", "committedDate": "2020-07-21T15:46:20Z", "type": "commit"}, {"oid": "bcf15fa17657268cc01f49227f0290b41508e4a6", "url": "https://github.com/bakdata/conquery/commit/bcf15fa17657268cc01f49227f0290b41508e4a6", "message": "automatic update to docs", "committedDate": "2020-07-21T15:48:16Z", "type": "commit"}, {"oid": "1a24540461df64c44a1660c7544d18b6c84c6cbe", "url": "https://github.com/bakdata/conquery/commit/1a24540461df64c44a1660c7544d18b6c84c6cbe", "message": "cleanup and simplfiy Exists/FiltersNode linkage", "committedDate": "2020-07-22T07:53:52Z", "type": "commit"}, {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "url": "https://github.com/bakdata/conquery/commit/11b175404bd51f0bc4182e6e088579f93e3a89ab", "message": "add missing changes from previous commit", "committedDate": "2020-07-22T09:59:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTM2MQ==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r458605361", "bodyText": "Inline this class", "author": "awildturtok", "createdAt": "2020-07-22T07:55:54Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/filter/SingleColumnEventFilterNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.bakdata.conquery.models.query.queryplan.filter;\n+\n+import java.util.Set;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public abstract class SingleColumnEventFilterNode<FE_TYPE> extends EventFilterNode<FE_TYPE> {", "originalCommit": "1a24540461df64c44a1660c7544d18b6c84c6cbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0NTI3OA==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459245278", "bodyText": "Die Umbenennung verstehe ich nicht so wirklich", "author": "thoniTUB", "createdAt": "2020-07-23T06:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTM2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MjI4OQ==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459372289", "bodyText": "das ist keine Umebennung sondern eine neue Klasse jetzt trenne ich in der FiltersNode nach Filter und FilterNode was uns leere \u00dcberpr\u00fcfungen spart", "author": "awildturtok", "createdAt": "2020-07-23T11:06:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTk1NQ==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r458605955", "bodyText": "Namen sind doof", "author": "awildturtok", "createdAt": "2020-07-22T07:56:54Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/FiltersNode.java", "diffHunk": "@@ -64,23 +90,30 @@ public boolean isContained() {\n \t\t\t\treturn false;\n \t\t\t}\n \t\t}\n-\t\treturn getChild().isContained();\n+\n+\t\treturn hit;\n \t}\n \t\n \t@Override\n \tpublic FiltersNode doClone(CloneContext ctx) {\n-\t\tList<FilterNode<?>> copy = new ArrayList<>(filters);\n-\t\tcopy.replaceAll(fn->fn.clone(ctx));\n+\t\tList<FilterNode<?>> _filters = new ArrayList<>(filters);", "originalCommit": "1a24540461df64c44a1660c7544d18b6c84c6cbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIzOTk1NQ==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459239955", "bodyText": "Kannst du diese Zeile nach Zeile 99 packen, dort werden die anderen Selects zusammengeholt und es l\u00e4sst sich bestimmt noch etwas vereinfachen.", "author": "thoniTUB", "createdAt": "2020-07-23T06:34:07Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -72,7 +70,7 @@\n \tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n \t\tConceptElement<?>[] concepts = resolveConcepts(ids, context.getCentralRegistry());\n \n-\t\tList<AggregatorNode<?>> conceptAggregators = createConceptAggregators(plan, selects);\n+\t\tList<Aggregator<?>> conceptAggregators = createConceptAggregators(plan, selects);", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MjczNg==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459372736", "bodyText": "nein weil da die ausgew\u00e4hlten Selects noch nicht bekannt sind", "author": "awildturtok", "createdAt": "2020-07-23T11:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIzOTk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM3MjkwNw==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459372907", "bodyText": "und sie nur Pro Tabelle sind", "author": "awildturtok", "createdAt": "2020-07-23T11:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIzOTk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MTIzMw==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459241233", "bodyText": "resolvedSelects w\u00fcrde ich z.B. tableSelects nennen", "author": "thoniTUB", "createdAt": "2020-07-23T06:37:39Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -98,31 +96,34 @@ public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tList<AggregatorNode<?>> aggregators = new ArrayList<>();\n+\t\t\tList<Aggregator<?>> aggregators = new ArrayList<>();\n \t\t\t//add aggregators\n \n \t\t\taggregators.addAll(conceptAggregators);\n \t\t\taggregators.addAll(createConceptAggregators(plan, resolvedSelects));", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0ODI4OQ==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459248289", "bodyText": "for-Loop-Klammern", "author": "thoniTUB", "createdAt": "2020-07-23T06:56:25Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java", "diffHunk": "@@ -50,10 +50,10 @@ public ConceptQueryPlan clone(CloneContext ctx) {\n \t\tcheckRequiredTables(ctx.getStorage());\n \t\t\n \t\tConceptQueryPlan clone = new ConceptQueryPlan(false);\n-\t\tclone.setChild(child.clone(ctx));\n+\t\tclone.setChild(ctx.clone((QPNode) child));\n \t\tfor(Aggregator<?> agg:aggregators)\n-\t\t\tclone.aggregators.add(agg.clone(ctx));\n-\t\tclone.specialDateUnion = specialDateUnion.clone(ctx);\n+\t\t\tclone.aggregators.add(ctx.clone((Aggregator<?>) agg));", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0OTc4Mg==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459249782", "bodyText": "muss hier gecastet werden?", "author": "thoniTUB", "createdAt": "2020-07-23T07:00:12Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java", "diffHunk": "@@ -50,10 +50,10 @@ public ConceptQueryPlan clone(CloneContext ctx) {\n \t\tcheckRequiredTables(ctx.getStorage());\n \t\t\n \t\tConceptQueryPlan clone = new ConceptQueryPlan(false);\n-\t\tclone.setChild(child.clone(ctx));\n+\t\tclone.setChild(ctx.clone((QPNode) child));", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1MTI0MA==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459251240", "bodyText": "Hier dr\u00fcber sind noch isOfInterest Methoden ohne fast-fail", "author": "thoniTUB", "createdAt": "2020-07-23T07:04:02Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/QPParentNode.java", "diffHunk": "@@ -99,25 +97,25 @@ public boolean isOfInterest(Entity entity) {\n \t\t}\n \t\treturn interest;\n \t}", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4MzM1MA==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459383350", "bodyText": "Manuel hat die mit Absicht so gemacht, weil die ConceptNode hier was prefetched, ich hab das mal geschoben, weil das d\u00e4mlich war.", "author": "awildturtok", "createdAt": "2020-07-23T11:31:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1MTI0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mjg4NQ==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459252885", "bodyText": "Ist der jetzt noch special?", "author": "thoniTUB", "createdAt": "2020-07-23T07:08:16Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/aggregators/specific/SpecialDateUnion.java", "diffHunk": "@@ -1,21 +1,49 @@\n package com.bakdata.conquery.models.query.queryplan.aggregators.specific;\n \n import com.bakdata.conquery.models.common.CDateSet;\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.datasets.Table;\n import com.bakdata.conquery.models.events.Bucket;\n import com.bakdata.conquery.models.externalservice.ResultType;\n+import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import lombok.RequiredArgsConstructor;\n \n /**\n  * Special Aggregator, used to calculate the times an entity has events after filtering.\n  */\n+@RequiredArgsConstructor\n public class SpecialDateUnion implements Aggregator<String> {", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4NjA4Mg==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459386082", "bodyText": "Im \u2764\ufe0f schon!", "author": "awildturtok", "createdAt": "2020-07-23T11:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mjg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1ODkzMg==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459258932", "bodyText": "Eigentlich k\u00f6nnten wir hier auch die Table zur\u00fcckgeben anstatt der ID. Der Queryplan existiert ja nur noch auf dem Worker und muss nicht mehr serialisiert/deserializiert werden.\nK\u00f6nnen wir uns mal \u00fcberlegen, bei einiges Selects wird eine Table zu einer Id umgewandelt bevor der Aggregator erzeugt wird. Manche haben eine statische Table Id ALL_ID-Table.", "author": "thoniTUB", "createdAt": "2020-07-23T07:22:20Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/filter/SingleColumnEventFilterNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.bakdata.conquery.models.query.queryplan.filter;\n+\n+import java.util.Set;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public abstract class SingleColumnEventFilterNode<FE_TYPE> extends EventFilterNode<FE_TYPE> {\n+\n+\tpublic SingleColumnEventFilterNode(Column column, FE_TYPE filterValue) {\n+\t\tsuper(filterValue);\n+\t\tthis.column = column;\n+\t}\n+\n+\t@NotNull @Getter @Setter\n+\tprivate Column column;\n+\n+\t@Override\n+\tpublic void collectRequiredTables(Set<TableId> requiredTables) {", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyNzAyMg==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459427022", "bodyText": "Mache ich in einem separaten PR", "author": "awildturtok", "createdAt": "2020-07-23T12:56:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1ODkzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2MDU1NA==", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459260554", "bodyText": "du kannst @NonNull an den Parameter machen", "author": "thoniTUB", "createdAt": "2020-07-23T07:25:58Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/ExternalNode.java", "diffHunk": "@@ -15,27 +12,25 @@\n import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.entity.Entity;\n-import com.bakdata.conquery.models.query.queryplan.QPChainNode;\n import com.bakdata.conquery.models.query.queryplan.QPNode;\n+import com.bakdata.conquery.models.query.queryplan.aggregators.specific.SpecialDateUnion;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n-\n import lombok.Getter;\n+import org.hibernate.validator.constraints.NotEmpty;\n \n-public class ExternalNode extends QPChainNode {\n+public class ExternalNode extends QPNode {\n \n+\tprivate SpecialDateUnion dateUnion;\n \t@Getter\n \tprivate final DatasetId dataset;\n \t@Getter @NotEmpty\n \tprivate final Map<Integer, CDateSet> includedEntities;\n \tprivate CDateSet contained;\n \t\n-\tpublic ExternalNode(QPNode child, DatasetId dataset, Map<Integer, CDateSet> includedEntities) {\n-\t\tsuper(child);\n+\tpublic ExternalNode(SpecialDateUnion dateUnion, DatasetId dataset, Map<Integer, CDateSet> includedEntities) {\n+\t\tthis.dateUnion = dateUnion;\n \t\tthis.dataset = dataset;\n-\t\tthis.includedEntities = Objects.requireNonNullElse(\n-\t\t\tincludedEntities,\n-\t\t\tCollections.emptyMap()\n-\t\t);\n+\t\tthis.includedEntities = Objects.requireNonNull(includedEntities);", "originalCommit": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ecd8d25bd6e795fcb4409b1a8e3946150d990b2", "url": "https://github.com/bakdata/conquery/commit/6ecd8d25bd6e795fcb4409b1a8e3946150d990b2", "message": "Code Review cleanup", "committedDate": "2020-07-23T11:35:11Z", "type": "commit"}, {"oid": "cde5bd8ad0b760ee7a099f02756592d3ead2196c", "url": "https://github.com/bakdata/conquery/commit/cde5bd8ad0b760ee7a099f02756592d3ead2196c", "message": "Merge 6ecd8d25bd6e795fcb4409b1a8e3946150d990b2 into 9341fbfa062c2613b47f8f262ffcc7db4b269d7a", "committedDate": "2020-07-23T11:35:22Z", "type": "commit"}, {"oid": "4be816cb2d99059b86ad0ad692172a894bf6c979", "url": "https://github.com/bakdata/conquery/commit/4be816cb2d99059b86ad0ad692172a894bf6c979", "message": "automatic update to docs", "committedDate": "2020-07-23T11:37:37Z", "type": "commit"}, {"oid": "d10bac1ba479d1b29e98b7324e0ef18432e8e5a1", "url": "https://github.com/bakdata/conquery/commit/d10bac1ba479d1b29e98b7324e0ef18432e8e5a1", "message": "Add NonNull Anno instead of manual checking", "committedDate": "2020-07-23T12:52:53Z", "type": "commit"}, {"oid": "22b853dff43f6defed2f8b1e03bf0dede362ea19", "url": "https://github.com/bakdata/conquery/commit/22b853dff43f6defed2f8b1e03bf0dede362ea19", "message": "more cleanup", "committedDate": "2020-07-23T12:58:09Z", "type": "commit"}, {"oid": "5f0a2db33f0e34440bed253c54f91a59750a3ea9", "url": "https://github.com/bakdata/conquery/commit/5f0a2db33f0e34440bed253c54f91a59750a3ea9", "message": "Fixed a bug where state was maintained in ConceptNode::isOfInterest(Bucket)", "committedDate": "2020-07-23T14:46:01Z", "type": "commit"}, {"oid": "096f458f1560bb1dcecdf24587c46c4a7458040a", "url": "https://github.com/bakdata/conquery/commit/096f458f1560bb1dcecdf24587c46c4a7458040a", "message": "- Iterate only currently active children\n- Add nicer ToString to Column", "committedDate": "2020-07-23T16:38:55Z", "type": "commit"}, {"oid": "51c9c84e9a6fb47a553d634fbd3752dddff89979", "url": "https://github.com/bakdata/conquery/commit/51c9c84e9a6fb47a553d634fbd3752dddff89979", "message": "Merge branch 'develop' into feature/cleanup-event-iterating\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQExternalResolved.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/EventIterating.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/QPNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/QPParentNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/AggregatorNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/ExternalNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/SpecialDateUnionAggregatorNode.java", "committedDate": "2020-07-24T14:05:13Z", "type": "commit"}, {"oid": "54c82133a86309637b415d94eaefd11211ad2bb1", "url": "https://github.com/bakdata/conquery/commit/54c82133a86309637b415d94eaefd11211ad2bb1", "message": "Post merge fixes", "committedDate": "2020-07-24T14:08:50Z", "type": "commit"}, {"oid": "90620bc6f12a0f36a0679e373d8fa3c2abce80fb", "url": "https://github.com/bakdata/conquery/commit/90620bc6f12a0f36a0679e373d8fa3c2abce80fb", "message": "Post merge fixes", "committedDate": "2020-07-24T14:27:51Z", "type": "commit"}, {"oid": "75f7f56ddd7e2098e61d2dfeb518e01d0867f7aa", "url": "https://github.com/bakdata/conquery/commit/75f7f56ddd7e2098e61d2dfeb518e01d0867f7aa", "message": "Fix NPE after merge", "committedDate": "2020-07-24T14:33:41Z", "type": "commit"}, {"oid": "6c390244f91a79f0900b798077f68f983771c258", "url": "https://github.com/bakdata/conquery/commit/6c390244f91a79f0900b798077f68f983771c258", "message": "Merge branch 'develop' into feature/cleanup-event-iterating", "committedDate": "2020-07-27T07:42:05Z", "type": "commit"}, {"oid": "c344e07e127ee5009f8c685efb3901d48f891cb5", "url": "https://github.com/bakdata/conquery/commit/c344e07e127ee5009f8c685efb3901d48f891cb5", "message": "Undo change to FiltersNode in CQPConcept as that is required for Plugins", "committedDate": "2020-07-27T12:33:40Z", "type": "commit"}, {"oid": "992cd52c910cd4e13943bfc218b569ff85ece4fc", "url": "https://github.com/bakdata/conquery/commit/992cd52c910cd4e13943bfc218b569ff85ece4fc", "message": "Merge branch 'develop' into feature/cleanup-event-iterating", "committedDate": "2020-07-27T13:09:55Z", "type": "commit"}]}