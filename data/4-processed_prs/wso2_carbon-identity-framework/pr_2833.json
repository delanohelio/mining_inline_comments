{"pr_number": 2833, "pr_title": "Add support for encrypting secondary user store password with symmetric encryption", "pr_createdAt": "2020-03-20T04:53:01Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2833", "timeline": [{"oid": "e751ebeb48cd1b054f4c42a41ec39f9772efa928", "url": "https://github.com/wso2/carbon-identity-framework/commit/e751ebeb48cd1b054f4c42a41ec39f9772efa928", "message": "Add support for encrypting secondary user store password wiht symmetric encryption", "committedDate": "2020-03-20T04:51:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396191231", "bodyText": "So how would this switch to symmetric encryption", "author": "malithie", "createdAt": "2020-03-23T02:57:15Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,8 +135,21 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                try {\n+                    return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+                } catch (CryptoException e) {\n+                    String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                    throw new IdentityUserStoreMgtException(errorMessage, e);\n+                }\n+            }\n+        }", "originalCommit": "e751ebeb48cd1b054f4c42a41ec39f9772efa928", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTcxMQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396191711", "bodyText": "This should be fixed like this right.\n\nPrecedence should be given to the 'UserStorePasswordEncryption' config\nIf not present, should switch to default internal encryption mechanism", "author": "malithie", "createdAt": "2020-03-23T02:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxMzQ4Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396213482", "bodyText": "So how would this switch to symmetric encryption\n\nSwitching to symmetric is done on crypto service layer from line 144", "author": "denuwanthi", "createdAt": "2020-03-23T04:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxNTUxMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396215512", "bodyText": "This should be fixed like this right.\n\nPrecedence should be given to the 'UserStorePasswordEncryption' config\nIf not present, should switch to default internal encryption mechanism\n\n\nYes the steps should be like that.\nHere 'ENCRYPTION_KEYSTORE' constants is the UserStorePasswordEncryption config.", "author": "denuwanthi", "createdAt": "2020-03-23T05:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ=="}], "type": "inlineReview"}, {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070", "url": "https://github.com/wso2/carbon-identity-framework/commit/0915e4c53b58c235f1c3d436744a1186f0fe9070", "message": "Refactored code to support encryption of secondary user store password", "committedDate": "2020-03-23T11:52:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2Njk0NA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397366944", "bodyText": "typo 'cazn'", "author": "malithie", "createdAt": "2020-03-24T18:18:47Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,40 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption cazn not be supported due to \" +", "originalCommit": "0915e4c53b58c235f1c3d436744a1186f0fe9070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzMzNQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637335", "bodyText": "Fixed with 745688e", "author": "denuwanthi", "createdAt": "2020-03-25T06:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2Njk0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NzMzNA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397367334", "bodyText": "Let's remove additional new line", "author": "malithie", "createdAt": "2020-03-24T18:19:25Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,40 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            return CryptoUtil.getDefaultCryptoUtil().encrypt(plainTextBytes);\n+", "originalCommit": "0915e4c53b58c235f1c3d436744a1186f0fe9070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzM4Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637382", "bodyText": "Fixed with 745688e", "author": "denuwanthi", "createdAt": "2020-03-25T06:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NzMzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2ODg4OA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397368888", "bodyText": "typo", "author": "malithie", "createdAt": "2020-03-24T18:22:01Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +", "originalCommit": "0915e4c53b58c235f1c3d436744a1186f0fe9070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzQyOQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637429", "bodyText": "Fixed with 745688e", "author": "denuwanthi", "createdAt": "2020-03-25T06:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2ODg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2OTY5MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397369691", "bodyText": "unnecessary line", "author": "malithie", "createdAt": "2020-03-24T18:23:15Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+", "originalCommit": "0915e4c53b58c235f1c3d436744a1186f0fe9070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzU0MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637541", "bodyText": "Fixed with 745688e", "author": "denuwanthi", "createdAt": "2020-03-25T06:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2OTY5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE3Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397370172", "bodyText": "What's the difference of this and the one in UserCoreUtil.\nIsn't same logic is duplicated in both places", "author": "malithie", "createdAt": "2020-03-24T18:23:59Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+\n+    }", "originalCommit": "0915e4c53b58c235f1c3d436744a1186f0fe9070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxODEwMA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397618100", "bodyText": "Those 2 classes are in 2 different OSGI bundles.\nUserStoreUtil - org.wso2.carbon.identity.user.store.configuration.deployer\nSecondaryUserStoreConfigurator. - org.wso2.carbon.identity.user.store.configuration", "author": "denuwanthi", "createdAt": "2020-03-25T05:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwMTY1OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397701659", "bodyText": "What's the difference of this and the one in UserCoreUtil.\nIsn't same logic is duplicated in both places\n\nCreated a new git issue wso2/product-is#7954 to track this", "author": "denuwanthi", "createdAt": "2020-03-25T09:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE3Mg=="}], "type": "inlineReview"}, {"oid": "745688e61d9965c6f573613694fe2fa661f96ac1", "url": "https://github.com/wso2/carbon-identity-framework/commit/745688e61d9965c6f573613694fe2fa661f96ac1", "message": "Fix PR comments and update the kernel version", "committedDate": "2020-03-25T06:43:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzI2Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397647267", "bodyText": "unnecessary line", "author": "malithie", "createdAt": "2020-03-25T07:16:29Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,39 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption can not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            return CryptoUtil.getDefaultCryptoUtil().encrypt(plainTextBytes);\n+        } else {\n+            return encryptWithPrimaryKeyStore(plainTextBytes);\n+        }\n+", "originalCommit": "745688e61d9965c6f573613694fe2fa661f96ac1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3ODMxNg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397678316", "bodyText": "Fixed with 57ad2c9", "author": "denuwanthi", "createdAt": "2020-03-25T08:28:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzM0MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397647340", "bodyText": "lets remove this line as well", "author": "malithie", "createdAt": "2020-03-25T07:16:40Z", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,39 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption can not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+", "originalCommit": "745688e61d9965c6f573613694fe2fa661f96ac1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3Nzk2Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397677963", "bodyText": "Fixed with 57ad2c9", "author": "denuwanthi", "createdAt": "2020-03-25T08:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzM0MA=="}], "type": "inlineReview"}, {"oid": "57ad2c97fc9486e4803a66185de8851642574848", "url": "https://github.com/wso2/carbon-identity-framework/commit/57ad2c97fc9486e4803a66185de8851642574848", "message": "Remove unnecessary new lines", "committedDate": "2020-03-25T08:26:26Z", "type": "commit"}]}