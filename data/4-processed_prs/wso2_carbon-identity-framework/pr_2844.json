{"pr_number": 2844, "pr_title": "Fix issue of session termination", "pr_createdAt": "2020-03-31T11:24:07Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2844", "timeline": [{"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85", "url": "https://github.com/wso2/carbon-identity-framework/commit/6a1080b20f1c34489eeef126bef61c3864d42b85", "message": "Fix issue of session termination", "committedDate": "2020-03-31T11:20:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDI3MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486770270", "bodyText": "With the change, we have removed the debug log that was previously there. Is there any specific reason to do that?", "author": "mefarazath", "createdAt": "2020-09-11T04:44:38Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/internal/impl/UserSessionManagementServiceImpl.java", "diffHunk": "@@ -57,17 +61,71 @@ public void terminateSessionsOfUser(String username, String userStoreDomain, Str\n             UserSessionException {\n \n         validate(username, userStoreDomain, tenantDomain);\n-        List<String> sessionListOfUser = getSessionsOfUser(username, userStoreDomain, tenantDomain);\n \n-        if (!sessionListOfUser.isEmpty()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Terminating all the active sessions of user: \" + username + \" of userstore domain: \" +\n-                        userStoreDomain + \" in tenant: \" + tenantDomain);\n+        String userId = resolveUserIdFromUsername(getTenantId(tenantDomain), userStoreDomain, username);", "originalCommit": "6a1080b20f1c34489eeef126bef61c3864d42b85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5NzkzMw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486797933", "bodyText": "Fixed 8a7f232", "author": "GANGANI", "createdAt": "2020-09-11T06:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDQxMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486770412", "bodyText": "Include some context information like full qualified username or userid", "author": "mefarazath", "createdAt": "2020-09-11T04:45:07Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/internal/impl/UserSessionManagementServiceImpl.java", "diffHunk": "@@ -57,17 +61,71 @@ public void terminateSessionsOfUser(String username, String userStoreDomain, Str\n             UserSessionException {\n \n         validate(username, userStoreDomain, tenantDomain);\n-        List<String> sessionListOfUser = getSessionsOfUser(username, userStoreDomain, tenantDomain);\n \n-        if (!sessionListOfUser.isEmpty()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Terminating all the active sessions of user: \" + username + \" of userstore domain: \" +\n-                        userStoreDomain + \" in tenant: \" + tenantDomain);\n+        String userId = resolveUserIdFromUsername(getTenantId(tenantDomain), userStoreDomain, username);\n+        try {\n+            terminateSessionsByUserId(userId);\n+        } catch (SessionManagementException e) {\n+            throw new UserSessionException(\"Error while terminating sessions of user.\", e);", "originalCommit": "6a1080b20f1c34489eeef126bef61c3864d42b85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5Nzk4Ng==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486797986", "bodyText": "Fixed 8a7f232", "author": "GANGANI", "createdAt": "2020-09-11T06:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDU5Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486770592", "bodyText": "Would be better to have the userstoreDomain included as a debug log", "author": "mefarazath", "createdAt": "2020-09-11T04:45:49Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/internal/impl/UserSessionManagementServiceImpl.java", "diffHunk": "@@ -57,17 +61,71 @@ public void terminateSessionsOfUser(String username, String userStoreDomain, Str\n             UserSessionException {\n \n         validate(username, userStoreDomain, tenantDomain);\n-        List<String> sessionListOfUser = getSessionsOfUser(username, userStoreDomain, tenantDomain);\n \n-        if (!sessionListOfUser.isEmpty()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Terminating all the active sessions of user: \" + username + \" of userstore domain: \" +\n-                        userStoreDomain + \" in tenant: \" + tenantDomain);\n+        String userId = resolveUserIdFromUsername(getTenantId(tenantDomain), userStoreDomain, username);\n+        try {\n+            terminateSessionsByUserId(userId);\n+        } catch (SessionManagementException e) {\n+            throw new UserSessionException(\"Error while terminating sessions of user.\", e);\n+        }\n+    }\n+\n+    /**\n+     * Retrieves the unique user id of the given username.\n+     *\n+     * @param tenantId          id of the tenant domain of the user\n+     * @param userStoreDomain   userstore of the user\n+     * @param username          username\n+     * @return                  unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    private String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            if (userStoreDomain == null) {\n+                userStoreDomain = UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME;\n+            }\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    return ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +", "originalCommit": "6a1080b20f1c34489eeef126bef61c3864d42b85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5ODA2Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486798063", "bodyText": "Fixed 8a7f232", "author": "GANGANI", "createdAt": "2020-09-11T06:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDU5Mg=="}], "type": "inlineReview"}]}