{"pr_number": 3279, "pr_title": "Feature decouple session data layer", "pr_createdAt": "2020-12-04T12:50:12Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/3279", "timeline": [{"oid": "6fcc33a790afb5f84602548fe7a95c85af8fa9ba", "url": "https://github.com/wso2/carbon-identity-framework/commit/6fcc33a790afb5f84602548fe7a95c85af8fa9ba", "message": "redis-initialization", "committedDate": "2020-12-04T11:04:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA1MDQ2MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538050461", "bodyText": "Excess line", "author": "chamathns", "createdAt": "2020-12-08T05:41:12Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -488,15 +480,81 @@ public void removeExpiredOperationData() {\n \n     }\n \n-    public void persistSessionData(String key, String type, Object entry, long nanoTime, int tenantId) {\n+    public SessionContextDO getSessionContextData(String key, String type) {\n+        // Modify to get data.\n+        jedis = getJedisInstance();\n+\n         if (!enablePersist) {\n-            return;\n+            return null;\n         }\n-        Connection connection = null;\n-        try {\n-            connection = IdentityDatabaseUtil.getDBConnection();\n-        } catch (IdentityRuntimeException e) {\n-            log.error(e.getMessage(), e);\n+        if (redisEnabled) {\n+            byte[] sessionObject = jedis.get(key.getBytes());\n+            if (sessionObject != null) {\n+                HashMap hash = (HashMap) deserialize(sessionObject);\n+                String operation = (String) hash.get(OPERATION);\n+                long nanoTime = ((Long) hash.get(NANO_TIME));\n+\n+                if ((OPERATION_STORE.equals(operation))) {\n+                    Object blobObject = hash.get(BLOB_OBJ);\n+                    return new SessionContextDO(key, type, blobObject, nanoTime);\n+", "originalCommit": "96cf6df87416367f13d37715bab5a4e8adc3e59e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA1MTUwNw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538051507", "bodyText": "Where are we reading this from the property file?", "author": "chamathns", "createdAt": "2020-12-08T05:44:11Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,7 +198,21 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private final boolean redisEnabled = true;", "originalCommit": "96cf6df87416367f13d37715bab5a4e8adc3e59e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "url": "https://github.com/wso2/carbon-identity-framework/commit/9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "message": "Redis and JDBC support is added to session store", "committedDate": "2020-12-08T07:23:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NzY5OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538147699", "bodyText": "Let's set the default value to be false.", "author": "chamathns", "createdAt": "2020-12-08T08:50:03Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,12 +198,33 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private boolean redisEnabled = true;", "originalCommit": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODE2Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538148162", "bodyText": "Let's use StringUtils.isNotBlank() here", "author": "chamathns", "createdAt": "2020-12-08T08:50:47Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,12 +198,33 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private boolean redisEnabled = true;\n+\n     private SessionDataStore() {\n+\n         String enablePersistVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.Enable\");\n         enablePersist = true;\n         if (enablePersistVal != null) {\n             enablePersist = Boolean.parseBoolean(enablePersistVal);\n         }\n+\n+        String redisEnabledVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.RedisEnable\");\n+        if (redisEnabledVal != null) {", "originalCommit": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODQzNw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538148437", "bodyText": "Let's add a comprehensive log message here.", "author": "chamathns", "createdAt": "2020-12-08T08:51:14Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,12 +198,33 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private boolean redisEnabled = true;\n+\n     private SessionDataStore() {\n+\n         String enablePersistVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.Enable\");\n         enablePersist = true;\n         if (enablePersistVal != null) {\n             enablePersist = Boolean.parseBoolean(enablePersistVal);\n         }\n+\n+        String redisEnabledVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.RedisEnable\");\n+        if (redisEnabledVal != null) {\n+            log.info(\"checking\");", "originalCommit": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1MzIwNw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538153207", "bodyText": "Can we guarantee that this new instance creation would be thread-safe?  Shall we extract this out and use the singleton pattern here? WDYT?", "author": "chamathns", "createdAt": "2020-12-08T08:58:03Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -288,70 +317,39 @@ public static SessionDataStore getInstance() {\n         return instance;\n     }\n \n+    // Return Jedis object.\n+    private static BinaryJedis getJedisInstance() {\n+\n+        if (jedis != null)\n+            return jedis;\n+        return new BinaryJedis(HOST, PORT);\n+    }", "originalCommit": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE4MDMwMA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538180300", "bodyText": "yeah aiya. Using singleton is better here.", "author": "sthenusan", "createdAt": "2020-12-08T09:35:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1MzIwNw=="}], "type": "inlineReview"}, {"oid": "498b41880b9caf6d0e84bfde75b99b80a30aa541", "url": "https://github.com/wso2/carbon-identity-framework/commit/498b41880b9caf6d0e84bfde75b99b80a30aa541", "message": "Redis and JDBC support is given", "committedDate": "2020-12-08T09:49:50Z", "type": "commit"}]}