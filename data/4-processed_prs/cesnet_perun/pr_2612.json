{"pr_number": 2612, "pr_title": "OpenApi Audit Messages manager implemented", "pr_createdAt": "2020-03-09T08:33:38Z", "pr_url": "https://github.com/CESNET/perun/pull/2612", "timeline": [{"oid": "c0bbcb5ba36b35fac7ddc00c6b5572f62ccb1f96", "url": "https://github.com/CESNET/perun/commit/c0bbcb5ba36b35fac7ddc00c6b5572f62ccb1f96", "message": "first methods", "committedDate": "2020-03-06T16:28:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyMTkyOQ==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r389521929", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              - name: AuditMessagesManagerMethod\n          \n          \n            \n              - name: AuditMessagesManager", "author": "martin-kuba", "createdAt": "2020-03-09T08:42:08Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -1771,6 +1802,10 @@ tags:\n     description: AuthzResolver RPC API in Perun\n     externalDocs:\n       url: https://perun-aai.org/documentation/technical-documentation/rpc-api/rpc-javadoc-AuthzResolver.html\n+  - name: AuditMessagesManagerMethod", "originalCommit": "fb6684d7594e1e67b9249c43a3b1ccb0804dbcdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9b788268d7fc7f7625b33b894503b7a522af9c5f", "url": "https://github.com/CESNET/perun/commit/9b788268d7fc7f7625b33b894503b7a522af9c5f", "message": "OpenApiAuditMessagesManagerDone", "committedDate": "2020-03-09T12:27:30Z", "type": "commit"}, {"oid": "9b788268d7fc7f7625b33b894503b7a522af9c5f", "url": "https://github.com/CESNET/perun/commit/9b788268d7fc7f7625b33b894503b7a522af9c5f", "message": "OpenApiAuditMessagesManagerDone", "committedDate": "2020-03-09T12:27:30Z", "type": "forcePushed"}, {"oid": "21e6dad9c99028af7d84a68af2ad38069e554323", "url": "https://github.com/CESNET/perun/commit/21e6dad9c99028af7d84a68af2ad38069e554323", "message": "Merge branch 'master' into AuditMessagesManagerOpenApi", "committedDate": "2020-03-09T12:31:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5MzQyNw==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r394293427", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                AuditMessage:\n          \n          \n            \n                  allOf:\n          \n          \n            \n                    - $ref: '#/components/schemas/AuditEvent'\n          \n          \n            \n                    - properties:\n          \n          \n            \n                        id: { type: integer }\n          \n          \n            \n                        actor: { type: string }\n          \n          \n            \n                        createdAt: { type: string }\n          \n          \n            \n                        createdByUid: { type: integer }\n          \n          \n            \n                AuditMessage:\n          \n          \n            \n                  type: object\n          \n          \n            \n                  properties:\n          \n          \n            \n                    event: { $ref: '#/components/schemas/AuditEvent'}\n          \n          \n            \n                    id: { type: integer }\n          \n          \n            \n                    actor: { type: string }\n          \n          \n            \n                    createdAt: { type: string }\n          \n          \n            \n                    createdByUid: { type: integer }", "author": "Vojtech-Sassmann", "createdAt": "2020-03-18T11:58:58Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -202,6 +202,21 @@ components:\n       discriminator:\n         propertyName: beanName\n \n+    AuditEvent:\n+      type: object\n+      properties:\n+        name: { type: string }\n+        message: { type: string }\n+\n+    AuditMessage:\n+      allOf:\n+        - $ref: '#/components/schemas/AuditEvent'\n+        - properties:\n+            id: { type: integer }\n+            actor: { type: string }\n+            createdAt: { type: string }\n+            createdByUid: { type: integer }", "originalCommit": "21e6dad9c99028af7d84a68af2ad38069e554323", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5NDgxNQ==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r394294815", "bodyText": "This is how is written composition in OpenAPI. The way you had it is how is done inheritance.", "author": "Vojtech-Sassmann", "createdAt": "2020-03-18T12:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5MzQyNw=="}], "type": "inlineReview"}, {"oid": "3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "url": "https://github.com/CESNET/perun/commit/3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "message": "Update perun-openapi/openapi.yml\n\nCo-Authored-By: Vojt\u011bch Sassmann <vojtech.sassmann@gmail.com>", "committedDate": "2020-03-18T12:49:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwODQ2Mg==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r400808462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - name: consumerName\n          \n          \n            \n                      in: query\n          \n          \n            \n                      schema:\n          \n          \n            \n                        type: string\n          \n          \n            \n                      description: New name for consumer\n          \n          \n            \n                      required: true\n          \n          \n            \n                    - $ref: '#/components/parameters/consumerName'", "author": "martin-kuba", "createdAt": "2020-03-31T10:32:20Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -4859,6 +4894,179 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  #################################################\n+  #                                               #\n+  # AuditMessagesManager                          #\n+  #                                               #\n+  #################################################\n+\n+  /json/AuditMessagesManager/getMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessages\n+      summary: |\n+        Returns 100 newest audit messages from audit log. If there is a less messages than 100,\n+        then all of them are returned OR Returns exact number of newest audit messages defined by\n+        'count' param (disregarding message IDs). If there is less messages present, then all of them are returned..\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Messages limit\n+          required: false\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getMessagesByCount:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessagesByCount\n+      summary: |\n+        Returns all messages with IDs within the range from max(ID) to (max(ID)-count),\n+        where number of returned messages is equal or less than 'count' param, because some\n+        IDs could be skipped in the sequence.\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Number of IDs to subtract from max_id\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/pollConsumerMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: pollConsumerMessages\n+      summary: |\n+        Returns list of AuditMessages from audit log with IDs > lastProcessedId for\n+        registered auditer consumer specified by consumerName param.\n+      parameters:\n+        - $ref: '#/components/parameters/consumerName'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/AuditMessagesManager/setLastProcessedId:\n+    post:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: setLastProcessedId\n+      summary: |\n+        Set ID of last processed message for specified consumer.\n+      parameters:\n+        - $ref: '#/components/parameters/consumerName'\n+        - name: lastProcessedId\n+          in: query\n+          schema:\n+            type: integer\n+          description: id of message to what consumer will be set\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/AuditMessagesManager/createAuditerConsumer:\n+    post:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: createAuditerConsumer\n+      summary: |\n+        Creates new auditer consumer with last processed id which equals current auditer log max id.\n+      parameters:\n+        - name: consumerName\n+          in: query\n+          schema:\n+            type: string\n+          description: New name for consumer\n+          required: true", "originalCommit": "3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwOTIzMw==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r400809233", "bodyText": "Please use the short syntax to save lines:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - name: count\n          \n          \n            \n                      in: query\n          \n          \n            \n                      schema:\n          \n          \n            \n                        type: integer\n          \n          \n            \n                      description: Messages limit\n          \n          \n            \n                      required: false\n          \n          \n            \n                    - { name: count, in: query, schema: { type: integer },  description: \"Messages limit\",  required: false }", "author": "martin-kuba", "createdAt": "2020-03-31T10:33:41Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -4859,6 +4894,179 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  #################################################\n+  #                                               #\n+  # AuditMessagesManager                          #\n+  #                                               #\n+  #################################################\n+\n+  /json/AuditMessagesManager/getMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessages\n+      summary: |\n+        Returns 100 newest audit messages from audit log. If there is a less messages than 100,\n+        then all of them are returned OR Returns exact number of newest audit messages defined by\n+        'count' param (disregarding message IDs). If there is less messages present, then all of them are returned..\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Messages limit\n+          required: false", "originalCommit": "3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMDEzOA==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r400810138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - name: count\n          \n          \n            \n                      in: query\n          \n          \n            \n                      schema:\n          \n          \n            \n                        type: integer\n          \n          \n            \n                      description: Number of IDs to subtract from max_id\n          \n          \n            \n                      required: true\n          \n          \n            \n                    - { name: count, in: query, schema: { type: integer }, description: \"Number of IDs to subtract from max_id\", required: true }", "author": "martin-kuba", "createdAt": "2020-03-31T10:35:15Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -4859,6 +4894,179 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  #################################################\n+  #                                               #\n+  # AuditMessagesManager                          #\n+  #                                               #\n+  #################################################\n+\n+  /json/AuditMessagesManager/getMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessages\n+      summary: |\n+        Returns 100 newest audit messages from audit log. If there is a less messages than 100,\n+        then all of them are returned OR Returns exact number of newest audit messages defined by\n+        'count' param (disregarding message IDs). If there is less messages present, then all of them are returned..\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Messages limit\n+          required: false\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getMessagesByCount:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessagesByCount\n+      summary: |\n+        Returns all messages with IDs within the range from max(ID) to (max(ID)-count),\n+        where number of returned messages is equal or less than 'count' param, because some\n+        IDs could be skipped in the sequence.\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Number of IDs to subtract from max_id\n+          required: true", "originalCommit": "3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMDY1Mw==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r400810653", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - name: lastProcessedId\n          \n          \n            \n                      in: query\n          \n          \n            \n                      schema:\n          \n          \n            \n                        type: integer\n          \n          \n            \n                      description: id of message to what consumer will be set\n          \n          \n            \n                      required: true\n          \n          \n            \n                    - { name: lastProcessedId, in: query, schema: { type: integer }, description: \"id of message to what consumer will be set\",  required: true }", "author": "martin-kuba", "createdAt": "2020-03-31T10:36:13Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -4859,6 +4894,179 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  #################################################\n+  #                                               #\n+  # AuditMessagesManager                          #\n+  #                                               #\n+  #################################################\n+\n+  /json/AuditMessagesManager/getMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessages\n+      summary: |\n+        Returns 100 newest audit messages from audit log. If there is a less messages than 100,\n+        then all of them are returned OR Returns exact number of newest audit messages defined by\n+        'count' param (disregarding message IDs). If there is less messages present, then all of them are returned..\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Messages limit\n+          required: false\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getMessagesByCount:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessagesByCount\n+      summary: |\n+        Returns all messages with IDs within the range from max(ID) to (max(ID)-count),\n+        where number of returned messages is equal or less than 'count' param, because some\n+        IDs could be skipped in the sequence.\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Number of IDs to subtract from max_id\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/pollConsumerMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: pollConsumerMessages\n+      summary: |\n+        Returns list of AuditMessages from audit log with IDs > lastProcessedId for\n+        registered auditer consumer specified by consumerName param.\n+      parameters:\n+        - $ref: '#/components/parameters/consumerName'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/AuditMessagesManager/setLastProcessedId:\n+    post:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: setLastProcessedId\n+      summary: |\n+        Set ID of last processed message for specified consumer.\n+      parameters:\n+        - $ref: '#/components/parameters/consumerName'\n+        - name: lastProcessedId\n+          in: query\n+          schema:\n+            type: integer\n+          description: id of message to what consumer will be set\n+          required: true", "originalCommit": "3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMTIxNQ==", "url": "https://github.com/CESNET/perun/pull/2612#discussion_r400811215", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - name: msg\n          \n          \n            \n                      in: query\n          \n          \n            \n                      schema:\n          \n          \n            \n                        type: string\n          \n          \n            \n                      description: Message to be logged\n          \n          \n            \n                      required: true\n          \n          \n            \n                    -  { name: msg, in: query, schema: { type: string }, description: \"Message to be logged\", required: true }", "author": "martin-kuba", "createdAt": "2020-03-31T10:37:15Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -4859,6 +4894,179 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  #################################################\n+  #                                               #\n+  # AuditMessagesManager                          #\n+  #                                               #\n+  #################################################\n+\n+  /json/AuditMessagesManager/getMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessages\n+      summary: |\n+        Returns 100 newest audit messages from audit log. If there is a less messages than 100,\n+        then all of them are returned OR Returns exact number of newest audit messages defined by\n+        'count' param (disregarding message IDs). If there is less messages present, then all of them are returned..\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Messages limit\n+          required: false\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getMessagesByCount:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getMessagesByCount\n+      summary: |\n+        Returns all messages with IDs within the range from max(ID) to (max(ID)-count),\n+        where number of returned messages is equal or less than 'count' param, because some\n+        IDs could be skipped in the sequence.\n+      parameters:\n+        - name: count\n+          in: query\n+          schema:\n+            type: integer\n+          description: Number of IDs to subtract from max_id\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/pollConsumerMessages:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: pollConsumerMessages\n+      summary: |\n+        Returns list of AuditMessages from audit log with IDs > lastProcessedId for\n+        registered auditer consumer specified by consumerName param.\n+      parameters:\n+        - $ref: '#/components/parameters/consumerName'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfAuditMessagesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/AuditMessagesManager/setLastProcessedId:\n+    post:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: setLastProcessedId\n+      summary: |\n+        Set ID of last processed message for specified consumer.\n+      parameters:\n+        - $ref: '#/components/parameters/consumerName'\n+        - name: lastProcessedId\n+          in: query\n+          schema:\n+            type: integer\n+          description: id of message to what consumer will be set\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/AuditMessagesManager/createAuditerConsumer:\n+    post:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: createAuditerConsumer\n+      summary: |\n+        Creates new auditer consumer with last processed id which equals current auditer log max id.\n+      parameters:\n+        - name: consumerName\n+          in: query\n+          schema:\n+            type: string\n+          description: New name for consumer\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getAllAuditerConsumers:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getAllAuditerConsumers\n+      summary: |\n+        Get all auditer consumers as a map with key=value pairs like String(name)=Integer(lastProcessedId).\n+      responses:\n+        '200':\n+          description: map with key=value pairs like String(name)=Integer(lastProcessedId)\n+          content:\n+            application/json:\n+              schema:\n+                type: object\n+                additionalProperties:\n+                  type: integer\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getLastMessageId:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getLastMessageId\n+      summary: |\n+        Get ID of last (newest) message in auditer logs.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/AuditMessagesManager/getAuditerMessagesCount:\n+    get:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: getAuditerMessagesCount\n+      summary: |\n+        Get count of all messages stored in auditer logs.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/AuditMessagesManager/log:\n+    post:\n+      tags:\n+        - AuditMessagesManager\n+      operationId: auditMessagesManagerLog\n+      summary: |\n+        Log arbitrary auditer message/event to the audit log.\n+      parameters:\n+        - name: msg\n+          in: query\n+          schema:\n+            type: string\n+          description: Message to be logged\n+          required: true", "originalCommit": "3d1a3d6d37ffd0ffb5b5ce4c82ae48df00f231f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ea8d4b9efbca2d0c364676033b4746d4fbe90cc1", "url": "https://github.com/CESNET/perun/commit/ea8d4b9efbca2d0c364676033b4746d4fbe90cc1", "message": "Apply suggestions from code review\r\n\r\nparameters rewrited to short syntax\n\nCo-Authored-By: Martin Kuba <makub@ics.muni.cz>", "committedDate": "2020-03-31T12:30:14Z", "type": "commit"}]}