{"pr_number": 2903, "pr_title": "Sponsor existing user", "pr_createdAt": "2020-09-16T08:08:37Z", "pr_url": "https://github.com/CESNET/perun/pull/2903", "timeline": [{"oid": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "url": "https://github.com/CESNET/perun/commit/1ca44fdebe39d32aebac675adb52ac1c39280d84", "message": "Sponsor existing user\n\n* I split the original method \"createSponsoredMember\" to two methods. The original method always created user, created member, set user to sponsored user and set sponsor for this user before that, but we want to do some steps separately.\n* Now the original method only creates user and the remaining actions does the new method called \"setSponsoredMember\". Due to this steps I also need to create new policy named \"setSponsoredMember_Vo_User_String_String_User_policy\".", "committedDate": "2020-09-17T15:14:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNzA4MQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490807081", "bodyText": "These two \"javaDocs\" look the same, I think you forgot to remove the sponsor from one of them.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:04:02Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -184,6 +184,53 @@ public RichMember call(ApiCaller ac, Deserializer params) throws PerunException\n \t\t}\n \t},\n \n+\t/*#\n+\t * Sets the existing user as the sponsored user.\n+\t *\n+\t * Can be called with specific sponsor. If the parameter sponsor is null, then the user\n+\t * which called this method will be set as a sponsor.\n+\t *\n+\t * @param vo int id of virtual organization\n+\t * @param userToBeSponsored int id of user, that will be sponsored by sponsor\n+\t * @param namespace String used for selecting external system in which guest user account will be created\n+\t * @param password String password\n+\t * @param sponsor int id of sponsoring user\n+\t * @return RichMember sponsored member\n+\t */\n+\t/*#\n+\t * Sets the existing user as the sponsored user.\n+\t *\n+\t * Can be called with specific sponsor. If the parameter sponsor is null, then the user\n+\t * which called this method will be set as a sponsor.\n+\t *\n+\t * @param vo int id of virtual organization\n+\t * @param userToBeSponsored int id of user, that will be sponsored by sponsor\n+\t * @param namespace String used for selecting external system in which guest user account will be created\n+\t * @param password String password\n+\t * @param sponsor int id of sponsoring user", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwODIyMA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490808220", "bodyText": "I didn't notice this earlier, but I think you should check this on the member returned by the call just above this one.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:06:00Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/MembersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1509,6 +1511,22 @@ public void createSponsoredMemberUsingSeparatedNameMissingFirstNameFail() throws\n \t\tMember sponsoredMember = perun.getMembersManagerBl().createSponsoredMember(sess, createdVo, \"dummy\", nameOfUser1, \"TB\", sponsorUser, false);\n \t}\n \n+\t@Test\n+\tpublic void setSponsoredMember() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"setSponsoredMember\");\n+\t\tCandidate candidate = new Candidate();\n+\t\tcandidate.setFirstName(\"Jan\");\n+\t\tcandidate.setLastName(\"Nov\u00e1k\");\n+\t\tUser sponsoredUser = perun.getUsersManagerBl().createUser(sess, candidate);\n+\t\tMember sponsorMember = setUpSponsor(createdVo);\n+\t\tUser sponsor = perun.getUsersManagerBl().getUserByMember(sess, sponsorMember);\n+\t\tAuthzResolverBlImpl.setRole(sess, sponsor, createdVo, Role.SPONSOR);\n+\t\tMember sponsoredMember = perun.getMembersManagerBl().setSponsoredMember(sess, createdVo, sponsoredUser, \"dummy\", \"password\", sponsor, true);\n+\n+\t\tassertNotNull(perun.getMembersManagerBl().getMemberByUser(sess, createdVo, sponsoredUser));\n+\t\tassertTrue(sponsoredMember.isSponsored());", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTE2Mw==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r491811163", "bodyText": "But the method \"getMemberByUser\" require User in param, so i can't give her Member returned above.", "author": "HejdaJakub", "createdAt": "2020-09-21T06:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwODIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwODY2Mg==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490808662", "bodyText": "This seems like an unused import; please remove it.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:06:45Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/MembersManagerEntryIntegrationTest.java", "diffHunk": "@@ -34,6 +35,7 @@\n import cz.metacentrum.perun.core.api.exceptions.VoNotExistsException;\n import cz.metacentrum.perun.core.blImpl.AuthzResolverBlImpl;\n import cz.metacentrum.perun.core.implApi.modules.attributes.AbstractMembershipExpirationRulesModule;\n+import org.apache.commons.lang3.builder.ToStringExclude;", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwOTMyNA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490809324", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (!AuthzResolver.authorizedInternal(session, \"setSponsoredMember_Vo_User_String_String_User_policy\", Arrays.asList(vo, sponsor))) {\n          \n          \n            \n            \t\t\tif (!AuthzResolver.authorizedInternal(session, \"setSponsoredMember_Vo_User_String_String_User_policy\", vo, sponsor)) {\n          \n      \n    \n    \n  \n\nWe have made some changes recently, and now this can be simplified.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:07:57Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1233,6 +1233,32 @@ public RichMember createSponsoredMember(PerunSession session, Vo vo, String name\n \t\treturn membersManagerBl.getRichMember(session, membersManagerBl.createSponsoredMember(session, vo, namespace, name, password, sponsor, true));\n \t}\n \n+\t@Override\n+\tpublic RichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor)\n+\t\tthrows PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException,\n+\t\tExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException,\n+\t\tUserNotInRoleException, PasswordStrengthException, InvalidLoginException {\n+\t\tUtils.checkPerunSession(session);\n+\t\tUtils.notNull(vo, \"vo\");\n+\t\tUtils.notNull(userToBeSponsored, \"userToBeSponsored\");\n+\t\tUtils.notNull(namespace, \"namespace\");\n+\t\tUtils.notNull(password, \"password\");\n+\n+\t\tlog.info(\"setSponsoredMember(vo={},namespace='{}',displayName='{}',sponsor={}\", vo.getShortName(), namespace, userToBeSponsored.getFirstName() + \" \" + userToBeSponsored.getLastName(), sponsor == null ? \"null\" : sponsor.getId());\n+\n+\t\tif (sponsor == null) {\n+\t\t\t//sponsor is the caller\n+\t\t\tsponsor = session.getPerunPrincipal().getUser();\n+\t\t} else {\n+\t\t\t//Authorization\n+\t\t\tif (!AuthzResolver.authorizedInternal(session, \"setSponsoredMember_Vo_User_String_String_User_policy\", Arrays.asList(vo, sponsor))) {", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwOTc0MQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490809741", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tlog.info(\"setSponsoredMember(vo={},namespace='{}',displayName='{}',sponsor={}\", vo.getShortName(), namespace, userToBeSponsored.getFirstName() + \" \" + userToBeSponsored.getLastName(), sponsor == null ? \"null\" : sponsor.getId());\n          \n          \n            \n            \t\tlog.debug(\"setSponsoredMember(vo={},namespace='{}',displayName='{}',sponsor={}\", vo.getShortName(), namespace, userToBeSponsored.getFirstName() + \" \" + userToBeSponsored.getLastName(), sponsor == null ? \"null\" : sponsor.getId());\n          \n      \n    \n    \n  \n\nThis should be probably debug, even though it was in the old method.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:08:46Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1233,6 +1233,32 @@ public RichMember createSponsoredMember(PerunSession session, Vo vo, String name\n \t\treturn membersManagerBl.getRichMember(session, membersManagerBl.createSponsoredMember(session, vo, namespace, name, password, sponsor, true));\n \t}\n \n+\t@Override\n+\tpublic RichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor)\n+\t\tthrows PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException,\n+\t\tExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException,\n+\t\tUserNotInRoleException, PasswordStrengthException, InvalidLoginException {\n+\t\tUtils.checkPerunSession(session);\n+\t\tUtils.notNull(vo, \"vo\");\n+\t\tUtils.notNull(userToBeSponsored, \"userToBeSponsored\");\n+\t\tUtils.notNull(namespace, \"namespace\");\n+\t\tUtils.notNull(password, \"password\");\n+\n+\t\tlog.info(\"setSponsoredMember(vo={},namespace='{}',displayName='{}',sponsor={}\", vo.getShortName(), namespace, userToBeSponsored.getFirstName() + \" \" + userToBeSponsored.getLastName(), sponsor == null ? \"null\" : sponsor.getId());", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgxNTE0Ng==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490815146", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t//sponsor is the caller\n          \n          \n            \n            \t\t\t//sponsor is the caller, authorization is checked in Bl\n          \n      \n    \n    \n  \n\nPlease, add this comment to the old method as well.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:18:08Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/MembersManagerEntry.java", "diffHunk": "@@ -1233,6 +1233,32 @@ public RichMember createSponsoredMember(PerunSession session, Vo vo, String name\n \t\treturn membersManagerBl.getRichMember(session, membersManagerBl.createSponsoredMember(session, vo, namespace, name, password, sponsor, true));\n \t}\n \n+\t@Override\n+\tpublic RichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor)\n+\t\tthrows PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException,\n+\t\tExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException,\n+\t\tUserNotInRoleException, PasswordStrengthException, InvalidLoginException {\n+\t\tUtils.checkPerunSession(session);\n+\t\tUtils.notNull(vo, \"vo\");\n+\t\tUtils.notNull(userToBeSponsored, \"userToBeSponsored\");\n+\t\tUtils.notNull(namespace, \"namespace\");\n+\t\tUtils.notNull(password, \"password\");\n+\n+\t\tlog.info(\"setSponsoredMember(vo={},namespace='{}',displayName='{}',sponsor={}\", vo.getShortName(), namespace, userToBeSponsored.getFirstName() + \" \" + userToBeSponsored.getLastName(), sponsor == null ? \"null\" : sponsor.getId());\n+\n+\t\tif (sponsor == null) {\n+\t\t\t//sponsor is the caller", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgxNjQ0OA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r490816448", "bodyText": "You should mention what is returned by the method.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-18T09:20:32Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1174,6 +1174,30 @@\n \t */\n \tRichMember createSponsoredMember(PerunSession session, Vo vo, String namespace, Map<String, String> name, String password, User sponsor) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException;\n \n+\t/**\n+\t * Sets the existing as the sponsored user.\n+\t *\n+\t * @param session actor\n+\t * @param vo virtual organization for the member\n+\t * @param userToBeSponsored user, that will be sponsored by sponsor\n+\t * @param namespace namespace for selecting password module\n+\t * @param password password\n+\t * @param sponsor sponsoring user or null for the caller\n+\t * @return", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgyMDY1MQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r491820651", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertNotNull(perun.getMembersManagerBl().getMemberByUser(sess, createdVo, sponsoredUser));\n          \n          \n            \n            \t\tassertTrue(sponsoredMember.isSponsored());\n          \n          \n            \n            \t\tMember memberFromDb = perun.getMembersManagerBl().getMemberByUser(sess, createdVo, sponsoredUser);\n          \n          \n            \n            \t\tassertTrue(memberFromDb.isSponsored());\n          \n      \n    \n    \n  \n\n@HejdaJakub This is what I meant. And I think that you can actually also omit the assertNotNull check since the method should never return null.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-21T06:44:07Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/MembersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1509,6 +1511,22 @@ public void createSponsoredMemberUsingSeparatedNameMissingFirstNameFail() throws\n \t\tMember sponsoredMember = perun.getMembersManagerBl().createSponsoredMember(sess, createdVo, \"dummy\", nameOfUser1, \"TB\", sponsorUser, false);\n \t}\n \n+\t@Test\n+\tpublic void setSponsoredMember() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"setSponsoredMember\");\n+\t\tCandidate candidate = new Candidate();\n+\t\tcandidate.setFirstName(\"Jan\");\n+\t\tcandidate.setLastName(\"Nov\u00e1k\");\n+\t\tUser sponsoredUser = perun.getUsersManagerBl().createUser(sess, candidate);\n+\t\tMember sponsorMember = setUpSponsor(createdVo);\n+\t\tUser sponsor = perun.getUsersManagerBl().getUserByMember(sess, sponsorMember);\n+\t\tAuthzResolverBlImpl.setRole(sess, sponsor, createdVo, Role.SPONSOR);\n+\t\tMember sponsoredMember = perun.getMembersManagerBl().setSponsoredMember(sess, createdVo, sponsoredUser, \"dummy\", \"password\", sponsor, true);\n+\n+\t\tassertNotNull(perun.getMembersManagerBl().getMemberByUser(sess, createdVo, sponsoredUser));\n+\t\tassertTrue(sponsoredMember.isSponsored());", "originalCommit": "1ca44fdebe39d32aebac675adb52ac1c39280d84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "url": "https://github.com/CESNET/perun/commit/3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "message": "Sponsor existing user\n\n* I split the original method \"createSponsoredMember\" to two methods. The original method always created user, created member, set user to sponsored user and set sponsor for this user before that, but we want to do some steps separately.\n* Now the original method only creates user and the remaining actions does the new method called \"setSponsoredMember\". Due to this steps I also need to create new policy named \"setSponsoredMember_Vo_User_String_String_User_policy\".", "committedDate": "2020-09-21T07:13:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMTU2OA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r493501568", "bodyText": "I have just realized that there has to be made one change. We don't want to generate the account in external systems if the user already has it (which might happen now). Here you need to check if the user has loginAttributeName attribute with not-null and not-empty value. If not, you will generate the account.", "author": "Vojtech-Sassmann", "createdAt": "2020-09-23T11:57:03Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2328,31 +2322,44 @@ public Member createSponsoredMember(PerunSession session, Vo vo, String namespac\n \t\t}\n \t\tUser sponsoredUser = getPerunBl().getUsersManagerBl().createUser(session, user);\n \n+\t\treturn setSponsoredMember(session, vo, sponsoredUser, namespace, password, sponsor, asyncValidation);\n+\t}\n+\n+\t@Override\n+\tpublic Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, PasswordStrengthException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n+\t\t//check that sponsoring user has role SPONSOR for the VO\n+\t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n+\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t}\n+\t\tString loginAttributeName = PasswordManagerModule.LOGIN_PREFIX + namespace;\n+\n \t\t//create the user account in external system\n \t\tMap<String, String> p = new HashMap<>();", "originalCommit": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MTA2OA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r494071068", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  summary: Sets the existing user as the sponsored user.\n          \n          \n            \n                  summary: Sets the existing user as the sponsored member.", "author": "balcirakpeter", "createdAt": "2020-09-24T06:37:55Z", "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -7806,6 +7806,37 @@ paths:\n                 sponsor: { type: integer }\n                 namespace: { type: string }\n \n+  /json/membersManager/setSponsoredMember:\n+    post:\n+      tags:\n+        - MembersManager\n+      operationId: setSponsoredMember\n+      summary: Sets the existing user as the sponsored user.", "originalCommit": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA4MTMzMw==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r494081333", "bodyText": "I would maybe use something like Sponsor the given member in the given vo or Creates a sponsored membership for the given user", "author": "Vojtech-Sassmann", "createdAt": "2020-09-24T06:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MTA2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MTM1MQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r494071351", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Sets the existing user as the sponsored user.\n          \n          \n            \n            \t * Sets the existing user as the sponsored member.", "author": "balcirakpeter", "createdAt": "2020-09-24T06:38:34Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -184,6 +184,52 @@ public RichMember call(ApiCaller ac, Deserializer params) throws PerunException\n \t\t}\n \t},\n \n+\t/*#\n+\t * Sets the existing user as the sponsored user.", "originalCommit": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MTUxMQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r494071511", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Sets the existing user as the sponsored user.\n          \n          \n            \n            \t * Sets the existing user as the sponsored member.", "author": "balcirakpeter", "createdAt": "2020-09-24T06:38:57Z", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -184,6 +184,52 @@ public RichMember call(ApiCaller ac, Deserializer params) throws PerunException\n \t\t}\n \t},\n \n+\t/*#\n+\t * Sets the existing user as the sponsored user.\n+\t *\n+\t * Can be called with specific sponsor. If the parameter sponsor is null, then the user\n+\t * which called this method will be set as a sponsor.\n+\t *\n+\t * @param vo int id of virtual organization\n+\t * @param userToBeSponsored int id of user, that will be sponsored by sponsor\n+\t * @param namespace String used for selecting external system in which guest user account will be created\n+\t * @param password String password\n+\t * @param sponsor int id of sponsoring user\n+\t * @return RichMember sponsored member\n+\t */\n+\t/*#\n+\t * Sets the existing user as the sponsored user.", "originalCommit": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MjAzNA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r494072034", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Sets the existing user as the sponsored user.\n          \n          \n            \n            \t * Sets the existing user as the sponsored member.", "author": "balcirakpeter", "createdAt": "2020-09-24T06:40:07Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/MembersManagerBl.java", "diffHunk": "@@ -1487,6 +1487,30 @@\n \t */\n \tMember createSponsoredMember(PerunSession session, Vo vo, String namespace, Map<String, String> name, String password, User sponsor, boolean asyncValidation) throws AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException;\n \n+\t/**\n+\t * Sets the existing user as the sponsored user.", "originalCommit": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MjIzMA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r494072230", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Sets the existing user as the sponsored user.\n          \n          \n            \n            \t * Sets the existing user as the sponsored member.", "author": "balcirakpeter", "createdAt": "2020-09-24T06:40:34Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1174,6 +1174,32 @@\n \t */\n \tRichMember createSponsoredMember(PerunSession session, Vo vo, String namespace, Map<String, String> name, String password, User sponsor) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException;\n \n+\t/**\n+\t * Sets the existing user as the sponsored user.", "originalCommit": "3e3d98e3c7d5e3d4b7b4101dc98341a45d11b6ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "42f9e7f96676acbe8a15e7ae72c39d4d01044c92", "url": "https://github.com/CESNET/perun/commit/42f9e7f96676acbe8a15e7ae72c39d4d01044c92", "message": "Sponsor existing user\n\n* I split the original method \"createSponsoredMember\" to two methods. The original method always created user, created member, set user to sponsored user and set sponsor for this user before that, but we want to do some steps separately.\n* Now the original method only creates user and the remaining actions does the new method called \"setSponsoredMember\". Due to this steps I also need to create new policy named \"setSponsoredMember_Vo_User_String_String_User_policy\".", "committedDate": "2020-09-24T12:01:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3Njk5NA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r495476994", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tlogin = createUserAccountInExternalSystem (session, userToBeSponsored, namespace, attributeValue, loginAttributeName, password);\n          \n          \n            \n            \t\tString login = createUserAccountInExternalSystem (session, userToBeSponsored, namespace, attributeValue, loginAttributeName, password);", "author": "balcirakpeter", "createdAt": "2020-09-26T17:18:44Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2328,31 +2322,43 @@ public Member createSponsoredMember(PerunSession session, Vo vo, String namespac\n \t\t}\n \t\tUser sponsoredUser = getPerunBl().getUsersManagerBl().createUser(session, user);\n \n-\t\t//create the user account in external system\n-\t\tMap<String, String> p = new HashMap<>();\n-\t\tp.put(PasswordManagerModule.TITLE_BEFORE_KEY,sponsoredUser.getTitleBefore());\n-\t\tp.put(PasswordManagerModule.FIRST_NAME_KEY,sponsoredUser.getFirstName());\n-\t\tp.put(PasswordManagerModule.LAST_NAME_KEY,sponsoredUser.getLastName());\n-\t\tp.put(PasswordManagerModule.TITLE_AFTER_KEY,sponsoredUser.getTitleAfter());\n-\t\tp.put(PasswordManagerModule.PASSWORD_KEY,password);\n-\t\tMap<String, String> r = getPerunBl().getUsersManagerBl().generateAccount(session, namespace, p);\n-\t\tString login = r.get(loginAttributeName);\n-\t\tsetLoginToSponsoredUser(session,sponsoredUser,loginAttributeName,login);\n+\t\treturn setSponsoredMember(session, vo, sponsoredUser, namespace, password, sponsor, asyncValidation);\n+\t}\n+\n+\t@Override\n+\tpublic Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, PasswordStrengthException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n+\t\t//check that sponsoring user has role SPONSOR for the VO\n+\t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n+\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t}\n+\t\tString loginAttributeName = PasswordManagerModule.LOGIN_PREFIX + namespace;\n+\t\tString attributeValue;\n+\t\tString login;\n+\t\ttry {\n+\t\t\tattributeValue = perunBl.getAttributesManagerBl().getAttribute(session, userToBeSponsored, loginAttributeName).valueAsString();\n+\t\t} catch (WrongAttributeAssignmentException | AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\n+\t\t//create the user account in external system if does not exist yet\n+\t\tlogin = createUserAccountInExternalSystem (session, userToBeSponsored, namespace, attributeValue, loginAttributeName, password);", "originalCommit": "42f9e7f96676acbe8a15e7ae72c39d4d01044c92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NzA1OQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r495477059", "bodyText": "This try-catch block can be moved to the new private method.", "author": "balcirakpeter", "createdAt": "2020-09-26T17:19:20Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2328,31 +2322,43 @@ public Member createSponsoredMember(PerunSession session, Vo vo, String namespac\n \t\t}\n \t\tUser sponsoredUser = getPerunBl().getUsersManagerBl().createUser(session, user);\n \n-\t\t//create the user account in external system\n-\t\tMap<String, String> p = new HashMap<>();\n-\t\tp.put(PasswordManagerModule.TITLE_BEFORE_KEY,sponsoredUser.getTitleBefore());\n-\t\tp.put(PasswordManagerModule.FIRST_NAME_KEY,sponsoredUser.getFirstName());\n-\t\tp.put(PasswordManagerModule.LAST_NAME_KEY,sponsoredUser.getLastName());\n-\t\tp.put(PasswordManagerModule.TITLE_AFTER_KEY,sponsoredUser.getTitleAfter());\n-\t\tp.put(PasswordManagerModule.PASSWORD_KEY,password);\n-\t\tMap<String, String> r = getPerunBl().getUsersManagerBl().generateAccount(session, namespace, p);\n-\t\tString login = r.get(loginAttributeName);\n-\t\tsetLoginToSponsoredUser(session,sponsoredUser,loginAttributeName,login);\n+\t\treturn setSponsoredMember(session, vo, sponsoredUser, namespace, password, sponsor, asyncValidation);\n+\t}\n+\n+\t@Override\n+\tpublic Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, PasswordStrengthException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n+\t\t//check that sponsoring user has role SPONSOR for the VO\n+\t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n+\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t}\n+\t\tString loginAttributeName = PasswordManagerModule.LOGIN_PREFIX + namespace;\n+\t\tString attributeValue;\n+\t\tString login;\n+\t\ttry {", "originalCommit": "42f9e7f96676acbe8a15e7ae72c39d4d01044c92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NzE3MQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r495477171", "bodyText": "Please create a short JavaDoc for this method (You can find inspiration in other private methods).", "author": "balcirakpeter", "createdAt": "2020-09-26T17:20:29Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2519,5 +2525,27 @@ public void setPerunBl(PerunBl perunBl) {\n \t\tthis.perunBl = perunBl;\n \t}\n \n+\tprivate String createUserAccountInExternalSystem (PerunSession session, User userToBeSponsored, String namespace, String attributeValue, String loginAttributeName, String password) {", "originalCommit": "42f9e7f96676acbe8a15e7ae72c39d4d01044c92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a520ce477f8cdc63943dd703d13418d7c343076", "url": "https://github.com/CESNET/perun/commit/4a520ce477f8cdc63943dd703d13418d7c343076", "message": "Sponsor existing user\n\n* I split the original method \"createSponsoredMember\" to two methods. The original method always created user, created member, set user to sponsored user and set sponsor for this user before that, but we want to do some steps separately.\n* Now the original method only creates user and the remaining actions does the new method called \"setSponsoredMember\". Due to this steps I also need to create new policy named \"setSponsoredMember_Vo_User_String_String_User_policy\".", "committedDate": "2020-09-30T08:57:55Z", "type": "commit"}, {"oid": "4a520ce477f8cdc63943dd703d13418d7c343076", "url": "https://github.com/CESNET/perun/commit/4a520ce477f8cdc63943dd703d13418d7c343076", "message": "Sponsor existing user\n\n* I split the original method \"createSponsoredMember\" to two methods. The original method always created user, created member, set user to sponsored user and set sponsor for this user before that, but we want to do some steps separately.\n* Now the original method only creates user and the remaining actions does the new method called \"setSponsoredMember\". Due to this steps I also need to create new policy named \"setSponsoredMember_Vo_User_String_String_User_policy\".", "committedDate": "2020-09-30T08:57:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY0MTk4MQ==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r498641981", "bodyText": "Sorry, I did not write the comment about \"moving the try-catch block to the new method\" properly. I did not mean to create a new private method with this code. I meant to move this block of code to the new private method createUserAccountInExternalSystem, which you have already created. You can move also the whole variable loginAttributeName to that method as you will need it only there. Of course, the private method createUserAccountInExternalSystem will need fewer parameters, because of that, and the method getAttributeValueAsString can be deleted.", "author": "balcirakpeter", "createdAt": "2020-10-02T06:47:55Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2328,34 +2322,58 @@ public Member createSponsoredMember(PerunSession session, Vo vo, String namespac\n \t\t}\n \t\tUser sponsoredUser = getPerunBl().getUsersManagerBl().createUser(session, user);\n \n-\t\t//create the user account in external system\n-\t\tMap<String, String> p = new HashMap<>();\n-\t\tp.put(PasswordManagerModule.TITLE_BEFORE_KEY,sponsoredUser.getTitleBefore());\n-\t\tp.put(PasswordManagerModule.FIRST_NAME_KEY,sponsoredUser.getFirstName());\n-\t\tp.put(PasswordManagerModule.LAST_NAME_KEY,sponsoredUser.getLastName());\n-\t\tp.put(PasswordManagerModule.TITLE_AFTER_KEY,sponsoredUser.getTitleAfter());\n-\t\tp.put(PasswordManagerModule.PASSWORD_KEY,password);\n-\t\tMap<String, String> r = getPerunBl().getUsersManagerBl().generateAccount(session, namespace, p);\n-\t\tString login = r.get(loginAttributeName);\n-\t\tsetLoginToSponsoredUser(session,sponsoredUser,loginAttributeName,login);\n+\t\treturn setSponsoredMember(session, vo, sponsoredUser, namespace, password, sponsor, asyncValidation);\n+\t}\n+\n+\t@Override\n+\tpublic Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n+\t\t//check that sponsoring user has role SPONSOR for the VO\n+\t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n+\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t}\n+\t\tString loginAttributeName = PasswordManagerModule.LOGIN_PREFIX + namespace;\n+\t\tString attributeValue = getAttributeValueAsString (session, userToBeSponsored, loginAttributeName);\n+\n+\t\t//create the user account in external system if does not exist yet\n+\t\tString login = createUserAccountInExternalSystem (session, userToBeSponsored, namespace, attributeValue, loginAttributeName, password);\n \n \t\t//create the member in Perun\n-\t\tMember sponsoredMember = getMembersManagerImpl().createSponsoredMember(session, vo, sponsoredUser, sponsor);\n+\t\tMember sponsoredMember = getMembersManagerImpl().createSponsoredMember(session, vo, userToBeSponsored, sponsor);\n \t\tgetPerunBl().getAuditer().log(session, new MemberCreated(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsoredMemberSet(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsorshipEstablished(sponsoredMember, sponsor));\n \t\textendMembership(session, sponsoredMember);\n \t\tinsertToMemberGroup(session, sponsoredMember, vo);\n-\t\tif(asyncValidation) {\n+\n+\t\tif (asyncValidation) {\n \t\t\tvalidateMemberAsync(session, sponsoredMember);\n \t\t} else {\n \t\t\t//for unit tests\n \t\t\tvalidateMember(session, sponsoredMember);\n \t\t}\n-\t\tgetPerunBl().getUsersManagerBl().validatePasswordAndSetExtSources(session, sponsoredUser, login, namespace);\n+\t\tgetPerunBl().getUsersManagerBl().validatePasswordAndSetExtSources(session, userToBeSponsored, login, namespace);\n+\n \t\treturn sponsoredMember;\n \t}\n \n+\t/**\n+\t * Try to get attribute from attribute manager\n+\t *\n+\t * @param session perun session\n+\t * @param userToBeSponsored user, that will be sponsored by sponsor\n+\t * @param loginAttributeName login attribute name\n+\t * @return attributeValue\n+\t */\n+\tprivate String getAttributeValueAsString (PerunSession session, User userToBeSponsored, String loginAttributeName) {", "originalCommit": "4a520ce477f8cdc63943dd703d13418d7c343076", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MzA0NA==", "url": "https://github.com/CESNET/perun/pull/2903#discussion_r498743044", "bodyText": "However, it is not a big deal. We can leave it as it is and refactor it in the future if there will be a need for that.", "author": "balcirakpeter", "createdAt": "2020-10-02T10:31:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY0MTk4MQ=="}], "type": "inlineReview"}]}