{"pr_number": 2865, "pr_title": "Core - filterMembers method optimization", "pr_createdAt": "2020-08-20T11:46:36Z", "pr_url": "https://github.com/CESNET/perun/pull/2865", "timeline": [{"oid": "a08547185c400e29993afcbc477320cf9229dfc5", "url": "https://github.com/CESNET/perun/commit/a08547185c400e29993afcbc477320cf9229dfc5", "message": "Core - filterMembers method optimization\n\n* The method filterMembersByMembershipTypeInGroup needed to be\noptimized, it was running very slowly. The old implementation was slow\nbecause of use of iterators with removal. Each removal caused the whole\narray to be moved in memory and this was really slow.\n* From my measurements, the new implementation should be atleast 10x\nfaster (depending on the retaio of DIRECT and INDIRECT relationships for\ngiven members).", "committedDate": "2020-08-20T13:12:18Z", "type": "commit"}, {"oid": "a08547185c400e29993afcbc477320cf9229dfc5", "url": "https://github.com/CESNET/perun/commit/a08547185c400e29993afcbc477320cf9229dfc5", "message": "Core - filterMembers method optimization\n\n* The method filterMembersByMembershipTypeInGroup needed to be\noptimized, it was running very slowly. The old implementation was slow\nbecause of use of iterators with removal. Each removal caused the whole\narray to be moved in memory and this was really slow.\n* From my measurements, the new implementation should be atleast 10x\nfaster (depending on the retaio of DIRECT and INDIRECT relationships for\ngiven members).", "committedDate": "2020-08-20T13:12:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIxMDQ0OA==", "url": "https://github.com/CESNET/perun/pull/2865#discussion_r476210448", "bodyText": "I am just curious. Is this distinct necessary?", "author": "balcirakpeter", "createdAt": "2020-08-25T06:38:15Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/GroupsManagerBlImpl.java", "diffHunk": "@@ -2401,36 +2402,61 @@ public void checkGroupExists(PerunSession sess, Group group) throws GroupNotExis\n \n \t@Override\n \tpublic List<Member> filterMembersByMembershipTypeInGroup(List<Member> members) {\n-\t\tSet<Member> filteredMembers = new HashSet<>();\n-\t\tIterator<Member> membersIterator = members.iterator();\n+\t\tMap<Integer, List<Member>> indirectMembersById = members.stream()\n+\t\t\t\t.filter(m -> m.getMembershipType().equals(MembershipType.INDIRECT))\n+\t\t\t\t.collect(groupingBy(Member::getId, toList()));\n \n-\t\t//Add members with direct membership type\n-\t\twhile(membersIterator.hasNext()) {\n-\t\t\tMember m = membersIterator.next();\n-\t\t\tif(m.getMembershipType().equals(MembershipType.DIRECT)) {\n-\t\t\t\tfilteredMembers.add(m);\n-\t\t\t\tmembersIterator.remove();\n-\t\t\t}\n-\t\t}\n+\t\tList<Member> directMembers = members.stream()\n+\t\t\t\t.filter(m -> m.getMembershipType().equals(MembershipType.DIRECT))\n+\t\t\t\t.distinct()", "originalCommit": "a08547185c400e29993afcbc477320cf9229dfc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIxMTU4MQ==", "url": "https://github.com/CESNET/perun/pull/2865#discussion_r476211581", "bodyText": "The old implementation used Set, for some reason, and I wasn't sure if this could happen for the direct members as well. Probably not. But, this shouldn't cause any unwanted side effects.", "author": "Vojtech-Sassmann", "createdAt": "2020-08-25T06:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIxMDQ0OA=="}], "type": "inlineReview"}]}