{"pr_number": 2702, "pr_title": "CORE: Fixed condition in getAllowedFacilities(user)", "pr_createdAt": "2020-05-15T09:47:03Z", "pr_url": "https://github.com/CESNET/perun/pull/2702", "timeline": [{"oid": "ebcd2522afbad1a26a90a5d6f1e97f120bd25b84", "url": "https://github.com/CESNET/perun/commit/ebcd2522afbad1a26a90a5d6f1e97f120bd25b84", "message": "CORE: Fixed condition in getAllowedFacilities(user)\n\n- This method previously returned also facilities, where user\n  was not allowed (was in disabled state) since it checked\n  only invalid status of processed users members.\n  It also iterated over those members.\n- New implementation performs direct DB query to get all\n  facilities, where user is assigned with allowed members.\n\n- Added getAllowedFacilities(member), which can be later used\n  (eg. when getting all dependant user-facility attrs for\n  member attribute on input).\n  We generally perform too many selects on resolving allowed\n  state from entities and perform their intersection later.", "committedDate": "2020-05-15T09:43:52Z", "type": "commit"}, {"oid": "e612b4bc61e0e404d8d8af45554ecdf4316703c7", "url": "https://github.com/CESNET/perun/commit/e612b4bc61e0e404d8d8af45554ecdf4316703c7", "message": "CORE: Added tests for getAllowedFacilities(user/member)\n\n- We should verify, that new implementation matches old implementation,\n  where iteration was replaced by sql query.", "committedDate": "2020-05-18T12:27:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNTk2Nw==", "url": "https://github.com/CESNET/perun/pull/2702#discussion_r427105967", "bodyText": "You do not have to throw InternalErrorException.", "author": "balcirakpeter", "createdAt": "2020-05-19T08:03:00Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/FacilitiesManagerBlImpl.java", "diffHunk": "@@ -467,16 +467,12 @@ public PerunBl getPerunBl() {\n \n \t@Override\n \tpublic List<Facility> getAllowedFacilities(PerunSession sess, User user) throws InternalErrorException {\n-\t\tList<Member> members = perunBl.getMembersManagerBl().getMembersByUser(sess, user);\n-\n-\t\tSet<Facility> assignedFacilities = new HashSet<>();\n-\t\tfor(Member member : members) {\n-\t\t\tif(!getPerunBl().getMembersManagerBl().haveStatus(sess, member, Status.INVALID)) {\n-\t\t\t\tassignedFacilities.addAll(this.getAssignedFacilities(sess, member));\n-\t\t\t}\n-\t\t}\n+\t\treturn getFacilitiesManagerImpl().getAllowedFacilities(sess, user);\n+\t}\n \n-\t\treturn new ArrayList<>(assignedFacilities);\n+\t@Override\n+\tpublic List<Facility> getAllowedFacilities(PerunSession sess, Member member) throws InternalErrorException {", "originalCommit": "e612b4bc61e0e404d8d8af45554ecdf4316703c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEyMjM3MA==", "url": "https://github.com/CESNET/perun/pull/2702#discussion_r427122370", "bodyText": "You are right, fixed.", "author": "zlamalp", "createdAt": "2020-05-19T08:29:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNTk2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExMjE4MQ==", "url": "https://github.com/CESNET/perun/pull/2702#discussion_r427112181", "bodyText": "This exception is probably not thrown for method jdbc.query.", "author": "balcirakpeter", "createdAt": "2020-05-19T08:13:27Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java", "diffHunk": "@@ -449,6 +449,44 @@ public void removeOwner(PerunSession sess, Facility facility, Owner owner) throw\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic List<Facility> getAllowedFacilities(PerunSession sess, User user) throws InternalErrorException {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + facilityMappingSelectQuery + \" from groups_resources\" +\n+\t\t\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id\" +\n+\t\t\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\t\t\" join resources on groups_resources.resource_id=resources.id \" +\n+\t\t\t\t\t\t\t\" join facilities on resources.facility_id=facilities.id \" +\n+\t\t\t\t\t\t\t\" where members.user_id=? and members.status!=? and members.status!=?\",\n+\t\t\t\t\tFACILITY_MAPPER, user.getId(),\n+\t\t\t\t\tString.valueOf(Status.INVALID.getCode()), String.valueOf(Status.DISABLED.getCode()));\n+\t\t} catch (EmptyResultDataAccessException e) {", "originalCommit": "e612b4bc61e0e404d8d8af45554ecdf4316703c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEyMjY5Ng==", "url": "https://github.com/CESNET/perun/pull/2702#discussion_r427122696", "bodyText": "Again you are right, we should clean up the code everywhere. Here fixed.", "author": "zlamalp", "createdAt": "2020-05-19T08:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExMjE4MQ=="}], "type": "inlineReview"}, {"oid": "4203836726a0e2aa5435f18cd0b8c26abe5396ab", "url": "https://github.com/CESNET/perun/commit/4203836726a0e2aa5435f18cd0b8c26abe5396ab", "message": "CORE: Removed throws InternalErrorException declaration\n\n- Since InternalErrorException is RuntimeException, we don't\n  have to declare it in the API of getAllowedFacilities().\n- Removed catch clause on the EmptyResultDataAccessException,\n  since jdbc.query() doesn't throw it. Its thrown only\n  for jdbc.queryForObject() or when result set is expected\n  to have exact size.", "committedDate": "2020-05-19T08:28:00Z", "type": "commit"}]}