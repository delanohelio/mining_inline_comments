{"pr_number": 2535, "pr_title": "Forbid indirect relationship for group unions", "pr_createdAt": "2020-01-06T15:15:43Z", "pr_url": "https://github.com/CESNET/perun/pull/2535", "timeline": [{"oid": "f6a1857ae9f5ef5a80ca8e9bff2db58ae6777dda", "url": "https://github.com/CESNET/perun/commit/f6a1857ae9f5ef5a80ca8e9bff2db58ae6777dda", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - test for this use-case was added", "committedDate": "2020-01-06T15:17:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1Mzg3OA==", "url": "https://github.com/CESNET/perun/pull/2535#discussion_r363653878", "bodyText": "Shouldn't this verify the presence of the resultGroup instead?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif(allParentGroups.contains(operandGroup)) {\n          \n          \n            \n            \t\tif(allParentGroups.contains(resultGroup)) {", "author": "Vojtech-Sassmann", "createdAt": "2020-01-07T09:16:11Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/GroupsManagerBlImpl.java", "diffHunk": "@@ -4109,7 +4109,14 @@ public Group createGroupUnion(PerunSession sess, Group resultGroup, Group operan\n \t\t// check if there is already a record of these two groups\n \t\tif (this.groupsManagerImpl.isRelationBetweenGroups(resultGroup, operandGroup)) {\n \t\t\tthrow new GroupRelationAlreadyExists(\"There is already a relation defined between result group \" + resultGroup +\n-\t\t\t\t\t\" and operand group \" + operandGroup + \" or they are in hierarchical structure.\");\n+\t\t\t\t\t\" and operand group \" + operandGroup + \" or they are in direct hierarchical structure.\");\n+\t\t}\n+\n+\t\t// check indirect relationships (for example \"A\" with \"A:B:C\" are in indirect relationship using \"A:B\")\n+\t\tList<Group> allParentGroups = this.getParentGroups(sess, operandGroup);\n+\t\tif(allParentGroups.contains(operandGroup)) {", "originalCommit": "f6a1857ae9f5ef5a80ca8e9bff2db58ae6777dda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxOTYwOQ==", "url": "https://github.com/CESNET/perun/pull/2535#discussion_r363719609", "bodyText": "You are right, this would be always true. I checked wrong group. Fixed.", "author": "stavamichal", "createdAt": "2020-01-07T12:10:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1Mzg3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1Njk1MQ==", "url": "https://github.com/CESNET/perun/pull/2535#discussion_r363656951", "bodyText": "I think there is an invalid order of the groups. The way it is implemented now, this test creates this relation:\n2\n|\n3\n|\n4\nAnd calling createGroupUnion(sess, group4, group2, false) tries to import members from group2 to group4. This causes a cycle, and I am not sure if we can detect this in the current implementation. Also, the test passes because of the error which I have pointed out above.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tgroupsManagerBl.createGroupUnion(sess, group4, group2, false);\n          \n          \n            \n            \t\tgroupsManagerBl.createGroupUnion(sess, group2, group4, false);", "author": "Vojtech-Sassmann", "createdAt": "2020-01-07T09:23:39Z", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/GroupsManagerEntryIntegrationTest.java", "diffHunk": "@@ -245,6 +245,18 @@ public void expireMemberInSubGroupAndInUpperGroup() throws Exception {\n \t\t\t\tfoundMember.getGroupStatuses().get(group.getId()), MemberGroupStatus.EXPIRED);\n \t}\n \n+\t@Test (expected=GroupRelationNotAllowed.class)\n+\tpublic void createGroupUnionForIndirectRelationship() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"createGroupUnionForIndirectRelationship\");\n+\n+\t\tVo vo = setUpVo();\n+\t\tgroupsManagerBl.createGroup(sess, vo, group2);\n+\t\tgroupsManagerBl.createGroup(sess, group2, group3);\n+\t\tgroupsManagerBl.createGroup(sess, group3, group4);\n+\n+\t\tgroupsManagerBl.createGroupUnion(sess, group4, group2, false);", "originalCommit": "f6a1857ae9f5ef5a80ca8e9bff2db58ae6777dda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxOTcyMA==", "url": "https://github.com/CESNET/perun/pull/2535#discussion_r363719720", "bodyText": "Right, groups are switched here.", "author": "stavamichal", "createdAt": "2020-01-07T12:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1Njk1MQ=="}], "type": "inlineReview"}, {"oid": "3ac3bea7f6f9b4fcbf285dde3eee40cf7e382640", "url": "https://github.com/CESNET/perun/commit/3ac3bea7f6f9b4fcbf285dde3eee40cf7e382640", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - test for this use-case was added", "committedDate": "2020-01-07T12:09:27Z", "type": "forcePushed"}, {"oid": "389121ae29c3b0bc5de37fd2305f0f0ae3d75081", "url": "https://github.com/CESNET/perun/commit/389121ae29c3b0bc5de37fd2305f0f0ae3d75081", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - this situation need to be checked when new union has been created or\n existing group has been moved and there is a possibility that wrong\n union already exists\n - test for both of these use-case were added", "committedDate": "2020-01-07T13:53:18Z", "type": "forcePushed"}, {"oid": "0e724d632b17ee6c078dd28e39c7b053cd53bb68", "url": "https://github.com/CESNET/perun/commit/0e724d632b17ee6c078dd28e39c7b053cd53bb68", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - this situation need to be checked when new union has been created or\n existing group has been moved and there is a possibility that wrong\n union already exists\n - test for both of these use-case were added", "committedDate": "2020-01-07T14:35:19Z", "type": "forcePushed"}, {"oid": "c5a5183730bcc6af68f63389792c8ddfcfe82f2d", "url": "https://github.com/CESNET/perun/commit/c5a5183730bcc6af68f63389792c8ddfcfe82f2d", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - this situation need to be checked when new union has been created or\n existing group has been moved and there is a possibility that wrong\n union already exists\n - test for both of these use-case were added", "committedDate": "2020-01-09T10:20:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1MDA2NA==", "url": "https://github.com/CESNET/perun/pull/2535#discussion_r367950064", "bodyText": "I think the use of Sets, with their intersection operation, would improve the performance on larger group structures.", "author": "Vojtech-Sassmann", "createdAt": "2020-01-17T14:04:03Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/GroupsManagerBlImpl.java", "diffHunk": "@@ -671,11 +671,42 @@ public void moveGroup(PerunSession sess, Group destinationGroup, Group movingGro\n \t\t\t\tthrow new GroupMoveNotAllowedException(\"There is already group union between moving group: \" + movingGroup + \" and destination group: \" + destinationGroup + \".\", movingGroup, destinationGroup);\n \t\t\t}\n \n+\t\t\t//prevent existence forbidden unions between groups after moving\n+\t\t\t//example: there are groups \"A\", \"A:B\" and \"C\", where \"C\" is included into \"A\" (there is a union), if we move \"C\" under \"A:B\", existing union will change to forbidden one\n+\t\t\t//Get all unions for moving group and all of its subgroups\n+\t\t\tList<Group> movingGroupStructureUnions = new ArrayList<>();\n+\t\t\tmovingGroupStructureUnions.addAll(getGroupUnions(sess, movingGroup, true));\n+\t\t\tfor(Group subGroup: getAllSubGroups(sess, movingGroup)) {\n+\t\t\t\tmovingGroupStructureUnions.addAll(getGroupUnions(sess, subGroup, true));\n+\t\t\t}\n+\t\t\t//remove direct relationship from moving group to it's parent group (if exists)\n+\t\t\t//prevent wrong exception in situation like \"A\", \"A:B\", \"A:C\" and moving \"A:C\" under \"A:B\", which is correct\n+\t\t\tif(movingGroup.getParentGroupId() != null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tGroup parentGroupOfMovingGroup = getParentGroup(sess, movingGroup);\n+\t\t\t\t\tmovingGroupStructureUnions.remove(parentGroupOfMovingGroup);\n+\t\t\t\t} catch (ParentGroupNotExistsException ex) {\n+\t\t\t\t\tthrow new InternalErrorException(\"Can't find parentGroup for \" + movingGroup);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t//Get all group stucture of destination group (destination group all all its parent groups)\n+\t\t\tList<Group> destinationGroupStructure = new ArrayList<>();", "originalCommit": "c5a5183730bcc6af68f63389792c8ddfcfe82f2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUyNDA1OA==", "url": "https://github.com/CESNET/perun/pull/2535#discussion_r368524058", "bodyText": "Changed to using intersection between sets.", "author": "stavamichal", "createdAt": "2020-01-20T12:32:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1MDA2NA=="}], "type": "inlineReview"}, {"oid": "110c0e7d5eafb218c5f352290664c35d45e2a1c6", "url": "https://github.com/CESNET/perun/commit/110c0e7d5eafb218c5f352290664c35d45e2a1c6", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - this situation need to be checked when new union has been created or\n existing group has been moved and there is a possibility that wrong\n union already exists\n - test for both of these use-case were added", "committedDate": "2020-01-20T12:31:40Z", "type": "commit"}, {"oid": "110c0e7d5eafb218c5f352290664c35d45e2a1c6", "url": "https://github.com/CESNET/perun/commit/110c0e7d5eafb218c5f352290664c35d45e2a1c6", "message": "Forbid indirect relationship for group unions\n\n - indirect relationship can exist between groups in the same structure,\n for example if we have 3 groups \"A\", \"A:B\", \"A:B:C\", there is direct\n relationship between \"A\" and \"A:B\" and also direct relationship between\n \"A:B\" and \"A:B:C\". Because all members of A:B:C are included by this\n relationship to \"A:B\" and all such members are automatically included\n into \"A\", there is indirect relationship between groups \"A\" and \"A:B:C\"\n not saved in the database, but processed the same way\n - we want to prevent creating of unions between groups with such\n indirect relationship, so if someone want to create union from \"A:B:C\"\n to \"A\", it should be prohibited, because there is no benefit in such\n opration (all members of \"A:B:C\" are already indirect members of \"A\"\n through \"A:B\")\n - this situation need to be checked when new union has been created or\n existing group has been moved and there is a possibility that wrong\n union already exists\n - test for both of these use-case were added", "committedDate": "2020-01-20T12:31:40Z", "type": "forcePushed"}]}