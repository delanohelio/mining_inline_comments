{"pr_number": 2643, "pr_title": "New authorization in ResourcesManagerEntry", "pr_createdAt": "2020-03-28T14:14:03Z", "pr_url": "https://github.com/CESNET/perun/pull/2643", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODIxOA==", "url": "https://github.com/CESNET/perun/pull/2643#discussion_r401668218", "bodyText": "There is missing rules for method getResourcesWhereUserIsAdmin(PerunSession sess, Vo vo, User authorizedUser) You are using the same rules for two methods.", "author": "stavamichal", "createdAt": "2020-04-01T14:40:34Z", "path": "perun-base/src/test/resources/perun-roles.yml", "diffHunk": "@@ -167,4 +167,616 @@ perun_policies:\n       - PERUNOBSERVER:\n     include_policies:\n       - test_resource_admin\n+\n+  #ResourcesManagerEntry\n+  getResourceById_int_policy:\n+    policy_roles:\n+      - RPC:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getRichResourceById_int_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getResourceByName_Vo_Facility_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  createResource_Resource_Vo_Facility_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  copyResource_Resource_Resource_boolean_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+    include_policies:\n+      - default_policy\n+\n+  withGroups-copyResource_Resource_Resource_boolean_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  deleteResource_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  deleteAllResources_Vo_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  getFacility_Resource_policy:\n+    policy_roles:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getVo_Resource_policy:\n+    policy_roles:\n+      - ENGINE:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAllowedMembers_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAllowedUsers_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedServices_Resource_policy:\n+    policy_roles:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedMembers_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedRichMembers_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  assignGroupToResource_Group_Resource_policy:\n+    policy_roles:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+      - RESOURCESELFSERVICE: Resource\n+        GROUPADMIN: Group\n+    include_policies:\n+      - default_policy\n+\n+  assignGroupsToResource_List<Group>_Resource_policy:\n+    policy_roles:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+      - RESOURCESELFSERVICE: Resource\n+        GROUPADMIN: Group\n+    include_policies:\n+      - default_policy\n+\n+  assignGroupToResources_Group_List<Resource>_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  removeGroupFromResource_Group_Resource_policy:\n+    policy_roles:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+      - RESOURCESELFSERVICE: Resource\n+        GROUPADMIN: Group\n+    include_policies:\n+      - default_policy\n+\n+  removeGroupsFromResource_List<Group>_Resource_policy:\n+    policy_roles:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+      - RESOURCESELFSERVICE: Resource\n+        GROUPADMIN: Group\n+    include_policies:\n+      - default_policy\n+\n+  removeGroupFromResources_Group_List<Resource>_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedGroups_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedGroups_Resource_Member_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedResources_Group_policy:\n+    policy_roles:\n+      - ENGINE:\n+      - GROUPADMIN: Group\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedRichResources_Group_policy:\n+    policy_roles:\n+      - GROUPADMIN: Group\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  assignService_Resource_Service_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+    include_policies:\n+      - default_policy\n+\n+  assignServicesPackage_Resource_ServicesPackage_policy:\n+    policy_roles: []\n+    include_policies:\n+      - default_policy\n+\n+  removeService_Resource_Service_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+    include_policies:\n+      - default_policy\n+\n+  removeServicesPackage_Resource_ServicesPackage_policy:\n+    policy_roles: []\n+    include_policies:\n+      - default_policy\n+\n+  getResources_Vo_policy:\n+    policy_roles:\n+      - RESOURCEADMIN:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getResources_Vo_policy:\n+    policy_roles:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getRichResources_Vo_policy:\n+    policy_roles:\n+      - RESOURCEADMIN:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getRichResources_Vo_policy:\n+    policy_roles:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getResourcesCount_Vo_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAllowedResources_Member_policy:\n+    policy_roles:\n+      - SELF: User\n+      - ENGINE:\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedResources_Member_policy:\n+    policy_roles:\n+      - SELF: User\n+      - GROUPADMIN: Vo\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedResources_Member_Service_policy:\n+    policy_roles:\n+      - SELF: User\n+      - GROUPADMIN: Vo\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedRichResources_Member_policy:\n+    policy_roles:\n+      - SELF: User\n+      - GROUPADMIN: Vo\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAssignedRichResources_Member_Service_policy:\n+    policy_roles:\n+      - SELF: User\n+      - GROUPADMIN: Vo\n+      - VOADMIN: Vo\n+      - VOOBSERVER: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  updateResource_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+    include_policies:\n+      - default_policy\n+\n+  createResourceTag_ResourceTag_Vo_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  updateResourceTag_ResourceTag_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  deleteResourceTag_ResourceTag_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  deleteAllResourcesTagsForVo_Vo_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  assignResourceTagToResource_ResourceTag_Resource_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  removeResourceTagFromResource_ResourceTag_Resource_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  removeAllResourcesTagFromResource_Resource_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  getAllResourcesByResourceTag_ResourceTag_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAllResourcesTagsForVo_Vo_policy:\n+    policy_roles:\n+      - VOOBSERVER: Vo\n+      - VOADMIN: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getAllResourcesTagsForResource_Resource_policy:\n+    policy_roles:\n+      - VOOBSERVER: Vo\n+      - VOADMIN: Vo\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  copyAttributes_Resource_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+    include_policies:\n+      - default_policy\n+\n+  copyServices_Resource_Resource_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+    include_policies:\n+      - default_policy\n+\n+  copyGroups_Resource_Resource_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  getAdmins_Resource_boolean_policy:\n+    policy_roles:\n+      - PERUNOBSERVER:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  getRichAdmins_Resource_List<String>_boolean_boolean_policy:\n+    policy_roles:\n+      - PERUNOBSERVER:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  getResourcesWhereUserIsAdmin_User_policy:\n+    policy_roles:\n+      - SELF: User\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getResourcesWhereUserIsAdmin_Facility_Vo_User_policy:\n+    policy_roles:\n+      - PERUNOBSERVER:\n+      - RESOURCEADMIN:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  filter-getResourcesWhereUserIsAdmin_Facility_Vo_User_policy:\n+    policy_roles:\n+      - PERUNOBSERVER:\n+      - RESOURCEADMIN: Resource\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy", "originalCommit": "643ca323773cb24ae3b37e8afddfd1e5e961869b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwODk5MA==", "url": "https://github.com/CESNET/perun/pull/2643#discussion_r404108990", "bodyText": "Fixed", "author": "balcirakpeter", "createdAt": "2020-04-06T13:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODIxOA=="}], "type": "inlineReview"}, {"oid": "c176045bd1ce3639f089499c9e61278ed2d8ebe6", "url": "https://github.com/CESNET/perun/commit/c176045bd1ce3639f089499c9e61278ed2d8ebe6", "message": "New authorization in ResourcesManagerEntry\n\n- In ResourcesManagerEntry was completely replaced the old authorization.\n- For that purpose was updated also perun-roles.yml file with the\n  policies used in the ResourcesManagerEntry.\n- All PerunBeans which are passed to the methods and already exist in\n  Perun are passed also to the authorization, even when a policy does not\n  need them for now. It does not have any effect on the policy evaluation.\n  It erase the necessity to change these methods if the policy will change\n  in the future.\n- If there was a situation, where tvwo objects could not be in the same\n  list, one of them was put to the separation check with its own policy.", "committedDate": "2020-04-06T13:54:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3ODYxMw==", "url": "https://github.com/CESNET/perun/pull/2643#discussion_r417178613", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif(!AuthzResolver.authorizedInternal(sess, \"getResourcesWhereUserIsAdmi_Vo_User_policy\", beans)){\n          \n          \n            \n            \t\tif(!AuthzResolver.authorizedInternal(sess, \"getResourcesWhereUserIsAdmin_Vo_User_policy\", beans)){", "author": "Vojtech-Sassmann", "createdAt": "2020-04-29T09:20:53Z", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java", "diffHunk": "@@ -1045,19 +906,15 @@ public void copyGroups(PerunSession sess, Resource sourceResource, Resource dest\n \n \t\tList<Resource> resources = getResourcesManagerBl().getResourcesWhereUserIsAdmin(sess, vo, authorizedUser);\n \n-\t\t//Vo manager of the vo, perunobserver and voobserver can see all returned resources\n-\t\tif(AuthzResolver.isAuthorized(sess, Role.VOADMIN, vo) ||\n-\t\t\tAuthzResolver.isAuthorized(sess, Role.VOOBSERVER, vo) ||\n-\t\t\tAuthzResolver.isAuthorized(sess, Role.PERUNOBSERVER)){\n-\t\t\treturn resources;\n-\t\t}\n-\n-\t\t//Resource manager can see only resources where he has role resource manager (filter them)\n-\t\tif(AuthzResolver.isAuthorized(sess, Role.RESOURCEADMIN)) {\n-\t\t\treturn filterNotAuthorizedResource(sess, resources);\n-\t\t} else {\n+\t\t//Authorization\n+\t\tList<PerunBean> beans = new ArrayList<>(resources);\n+\t\tbeans.addAll(Arrays.asList( vo, authorizedUser));\n+\t\tif(!AuthzResolver.authorizedInternal(sess, \"getResourcesWhereUserIsAdmi_Vo_User_policy\", beans)){", "originalCommit": "c176045bd1ce3639f089499c9e61278ed2d8ebe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM4NzQ3Mg==", "url": "https://github.com/CESNET/perun/pull/2643#discussion_r457387472", "bodyText": "fixed", "author": "balcirakpeter", "createdAt": "2020-07-20T13:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3ODYxMw=="}], "type": "inlineReview"}, {"oid": "c3ab0c96f83fa6df3817a4d312627214dc861ab5", "url": "https://github.com/CESNET/perun/commit/c3ab0c96f83fa6df3817a4d312627214dc861ab5", "message": "New authorization in ResourcesManagerEntry\n\n- In ResourcesManagerEntry was completely replaced the old authorization.\n- For that purpose was updated also perun-roles.yml file with the\n  policies used in the ResourcesManagerEntry.\n- All PerunBeans which are passed to the methods and already exist in\n  Perun are passed also to the authorization, even when a policy does not\n  need them for now. It does not have any effect on the policy evaluation.\n  It erase the necessity to change these methods if the policy will change\n  in the future.\n- If there was a situation, where tvwo objects could not be in the same\n  list, one of them was put to the separation check with its own policy.", "committedDate": "2020-07-20T12:01:48Z", "type": "forcePushed"}, {"oid": "fcf5d3388acd7a01a9d6ab8aa34faf84b175be8a", "url": "https://github.com/CESNET/perun/commit/fcf5d3388acd7a01a9d6ab8aa34faf84b175be8a", "message": "New authorization in ResourcesManagerEntry\n\n- In ResourcesManagerEntry was completely replaced the old authorization.\n- For that purpose was updated also perun-roles.yml file with the\n  policies used in the ResourcesManagerEntry.\n- All PerunBeans which are passed to the methods and already exist in\n  Perun are passed also to the authorization, even when a policy does not\n  need them for now. It does not have any effect on the policy evaluation.\n  It erase the necessity to change these methods if the policy will change\n  in the future.\n- If there was a situation, where tvwo objects could not be in the same\n  list, one of them was put to the separation check with its own policy.", "committedDate": "2020-07-20T13:33:03Z", "type": "forcePushed"}, {"oid": "33d2d46127ca4aa0fc7cc2d572db52d00fca22b9", "url": "https://github.com/CESNET/perun/commit/33d2d46127ca4aa0fc7cc2d572db52d00fca22b9", "message": "New authorization in ResourcesManagerEntry\n\n- In ResourcesManagerEntry was completely replaced the old authorization.\n- For that purpose was updated also perun-roles.yml file with the\n  policies used in the ResourcesManagerEntry.\n- All PerunBeans which are passed to the methods and already exist in\n  Perun are passed also to the authorization, even when a policy does not\n  need them for now. It does not have any effect on the policy evaluation.\n  It erase the necessity to change these methods if the policy will change\n  in the future.\n- If there was a situation, where tvwo objects could not be in the same\n  list, one of them was put to the separation check with its own policy.", "committedDate": "2020-07-20T13:50:04Z", "type": "commit"}, {"oid": "33d2d46127ca4aa0fc7cc2d572db52d00fca22b9", "url": "https://github.com/CESNET/perun/commit/33d2d46127ca4aa0fc7cc2d572db52d00fca22b9", "message": "New authorization in ResourcesManagerEntry\n\n- In ResourcesManagerEntry was completely replaced the old authorization.\n- For that purpose was updated also perun-roles.yml file with the\n  policies used in the ResourcesManagerEntry.\n- All PerunBeans which are passed to the methods and already exist in\n  Perun are passed also to the authorization, even when a policy does not\n  need them for now. It does not have any effect on the policy evaluation.\n  It erase the necessity to change these methods if the policy will change\n  in the future.\n- If there was a situation, where tvwo objects could not be in the same\n  list, one of them was put to the separation check with its own policy.", "committedDate": "2020-07-20T13:50:04Z", "type": "forcePushed"}]}