{"pr_number": 2017, "pr_title": "Remove eventLoopGroup and hostResolver configs", "pr_createdAt": "2020-09-02T22:33:52Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2017", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU2MTQwMg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2017#discussion_r482561402", "bodyText": "Do we need a similar one for the host resolver?", "author": "dagnir", "createdAt": "2020-09-02T22:45:08Z", "path": "http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/AwsCrtHttpClientWireMockTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.crt;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.any;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlPathEqualTo;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.wireMockConfig;\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphabetic;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static software.amazon.awssdk.http.HttpTestUtils.createProvider;\n+import static software.amazon.awssdk.http.crt.CrtHttpClientTestUtils.createRequest;\n+\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import java.net.URI;\n+import java.util.concurrent.TimeUnit;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import software.amazon.awssdk.crt.CrtResource;\n+import software.amazon.awssdk.crt.io.EventLoopGroup;\n+import software.amazon.awssdk.crt.io.HostResolver;\n+import software.amazon.awssdk.http.RecordingNetworkTrafficListener;\n+import software.amazon.awssdk.http.RecordingResponseHandler;\n+import software.amazon.awssdk.http.SdkHttpRequest;\n+import software.amazon.awssdk.http.async.AsyncExecuteRequest;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpClient;\n+import software.amazon.awssdk.utils.Logger;\n+\n+public class AwsCrtHttpClientWireMockTest {\n+    private static final Logger log = Logger.loggerFor(AwsCrtHttpClientWireMockTest.class);\n+    private final RecordingNetworkTrafficListener wiremockTrafficListener = new RecordingNetworkTrafficListener();\n+\n+    @Rule\n+    public WireMockRule mockServer = new WireMockRule(wireMockConfig()\n+                                                          .dynamicPort()\n+                                                          .dynamicHttpsPort()\n+                                                          .networkTrafficListener(wiremockTrafficListener));\n+\n+    @BeforeClass\n+    public static void setup() {\n+        System.setProperty(\"aws.crt.debugnative\", \"true\");\n+    }\n+\n+    @Before\n+    public void methodSetup() {\n+        wiremockTrafficListener.reset();\n+    }\n+\n+    @After\n+    public void tearDown() {\n+        // Verify there is no resource leak.\n+        EventLoopGroup.closeStaticDefault();\n+        HostResolver.closeStaticDefault();\n+        CrtResource.waitForNoResources();\n+    }\n+\n+    @Test\n+    public void closeClient_reuse_throwException() throws Exception {\n+        SdkAsyncHttpClient client = AwsCrtAsyncHttpClient.create();\n+\n+        client.close();\n+        assertThatThrownBy(() -> makeSimpleRequest(client)).hasMessageContaining(\"is closed\");\n+    }\n+\n+    @Test", "originalCommit": "bf8271dbf8f833caf66b80bedb879796a5e4dbe4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU2ODUxNw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2017#discussion_r482568517", "bodyText": "The test name might be a bit confusing, but it should cover the shared host resolver because they are sharing a static host resolver.", "author": "zoewangg", "createdAt": "2020-09-02T22:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU2MTQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU3ODgwMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2017#discussion_r482578801", "bodyText": "Gotcha, yeah I was thrown off by the name.", "author": "dagnir", "createdAt": "2020-09-02T22:59:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU2MTQwMg=="}], "type": "inlineReview"}, {"oid": "3a099738cccbb15c11e66dc1cfb8808cafad8ec8", "url": "https://github.com/aws/aws-sdk-java-v2/commit/3a099738cccbb15c11e66dc1cfb8808cafad8ec8", "message": "Bump up crt version adn remove elg and host resolver configs", "committedDate": "2020-09-02T23:04:11Z", "type": "forcePushed"}, {"oid": "0eeeab0a4be23a8f95c754b6cac58b8041259386", "url": "https://github.com/aws/aws-sdk-java-v2/commit/0eeeab0a4be23a8f95c754b6cac58b8041259386", "message": "Bump up crt version adn remove elg and host resolver configs", "committedDate": "2020-09-02T23:23:48Z", "type": "forcePushed"}, {"oid": "7a94bc5e5eeeb7285a18f7ebdcc806810b8cbc84", "url": "https://github.com/aws/aws-sdk-java-v2/commit/7a94bc5e5eeeb7285a18f7ebdcc806810b8cbc84", "message": "Bump up crt version adn remove elg and host resolver configs", "committedDate": "2020-09-03T00:06:32Z", "type": "commit"}, {"oid": "7a94bc5e5eeeb7285a18f7ebdcc806810b8cbc84", "url": "https://github.com/aws/aws-sdk-java-v2/commit/7a94bc5e5eeeb7285a18f7ebdcc806810b8cbc84", "message": "Bump up crt version adn remove elg and host resolver configs", "committedDate": "2020-09-03T00:06:32Z", "type": "forcePushed"}]}