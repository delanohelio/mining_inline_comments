{"pr_number": 2182, "pr_title": "Handle TLS 1.3 bad cert errors in proxy handler", "pr_createdAt": "2020-12-04T00:51:02Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2182", "timeline": [{"oid": "e0883306a924e68d8f62b63a55af35ecf2f76d38", "url": "https://github.com/aws/aws-sdk-java-v2/commit/e0883306a924e68d8f62b63a55af35ecf2f76d38", "message": "Handle TLS 1.3 bad cert errors in proxy handler", "committedDate": "2020-12-04T01:15:34Z", "type": "forcePushed"}, {"oid": "07322d278993238d9dd9a058642a8e084c8a6985", "url": "https://github.com/aws/aws-sdk-java-v2/commit/07322d278993238d9dd9a058642a8e084c8a6985", "message": "Handle TLS 1.3 bad cert errors in proxy handler", "committedDate": "2020-12-04T01:41:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5NzI2Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536297266", "bodyText": "Is there any way we can detect that it was a handshake error so that they don't have to enable SSL logs? I wouldn't want every customer having to enable SSL logs to see if it was a handshake error just a plain-ol'-closed-channel.", "author": "millems", "createdAt": "2020-12-04T18:32:25Z", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/utils/NettyUtils.java", "diffHunk": "@@ -40,6 +40,14 @@\n      */\n     public static final SucceededFuture<?> SUCCEEDED_FUTURE = new SucceededFuture<>(null, null);\n \n+    public static final String CLOSED_CHANNEL_MESSAGE = \"The channel was closed. This may have been done by the client (e.g. \"\n+                                                        + \"because the request was aborted), \" +\n+                                                        \"by the service (e.g. because there was a handshake error[use -Djavax\"\n+                                                        + \".net.debug=ssl to enable SSL logs], the request \"", "originalCommit": "07322d278993238d9dd9a058642a8e084c8a6985", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMwNDQ1Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536304457", "bodyText": "No, unfortunately, this kind of errors are bubbled up as ClosedChannelException with no details at all. When I was troubleshooting the failing test, it took me while to figure out it was related to handshake.", "author": "zoewangg", "createdAt": "2020-12-04T18:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5NzI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMDIwMA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536310200", "bodyText": "I wish we could link to docs that help customers debug these errors. Maybe something we can talk to @Carey-AWS about. In the meantime, it's really hard to read this with the parens-in-parens for the \"use -D...\". Can we exclude that? The other potential causes we list don't say how to diagnose them.", "author": "millems", "createdAt": "2020-12-04T18:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5NzI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxNTEyOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536315128", "bodyText": "+1. Yeah, a guide on how to troubleshoot closed channel exception would be super helpful!", "author": "zoewangg", "createdAt": "2020-12-04T19:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5NzI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ2MzI5Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536463293", "bodyText": "Thanks for calling this out, @millems. I've added it to the backlog.", "author": "Carey-AWS", "createdAt": "2020-12-05T00:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5NzI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwMzExOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536403118", "bodyText": "Any reason we propagate this event, when initPromise is already done, but not channelInactive?", "author": "dagnir", "createdAt": "2020-12-04T21:52:46Z", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ProxyTunnelInitHandler.java", "diffHunk": "@@ -98,6 +96,31 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) {\n         initPromise.setFailure(new IOException(\"Could not connect to proxy\"));\n     }\n \n+    @Override\n+    public void channelInactive(ChannelHandlerContext ctx) {\n+        if (!initPromise.isDone()) {\n+            handleConnectRequestFailure(ctx, null);\n+        }\n+    }\n+\n+    @Override\n+    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n+        if (!initPromise.isDone()) {\n+            handleConnectRequestFailure(ctx, cause);\n+        } else {\n+            ctx.fireExceptionCaught(cause);", "originalCommit": "07322d278993238d9dd9a058642a8e084c8a6985", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTI3Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536421273", "bodyText": "Actually, there's really no need to propagate the event since this is the last handler in the pipeline. I think we should just close the channel context in this case. WDUT?", "author": "zoewangg", "createdAt": "2020-12-04T22:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwMzExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyNzI5MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536427291", "bodyText": "I think in this case we're not likely to add any new handlers to this pipeline, but just to be safe let's just propagate the event if we don't handle it, which I think is the preferred default behavior.", "author": "dagnir", "createdAt": "2020-12-04T22:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwMzExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyOTk5Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536429993", "bodyText": "I think we should handle the exception though, otherwise it'll be logged as something like \"unhandled exception reached the end of pipeline\", which is not a good customer experience imo.\nUnhandled channelInactive might also lead to resource leak.", "author": "zoewangg", "createdAt": "2020-12-04T22:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwMzExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzMjU1NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536432555", "bodyText": "Yeah that's what I meant; I think we agree. Let's just propagate the event if we don't call handleConnectRequestFailure in channelInactive", "author": "dagnir", "createdAt": "2020-12-04T22:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwMzExOA=="}], "type": "inlineReview"}, {"oid": "658a3df33e582f7e074355aeb4a68f6da660e44e", "url": "https://github.com/aws/aws-sdk-java-v2/commit/658a3df33e582f7e074355aeb4a68f6da660e44e", "message": "Handle TLS 1.3 bad cert errors in proxy handler", "committedDate": "2020-12-04T23:28:48Z", "type": "forcePushed"}, {"oid": "babd6013d225add3ba08119e13e3f962f6d2fec3", "url": "https://github.com/aws/aws-sdk-java-v2/commit/babd6013d225add3ba08119e13e3f962f6d2fec3", "message": "Handle TLS 1.3 bad cert errors in proxy handler", "committedDate": "2020-12-04T23:29:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0OTQ3MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r536449470", "bodyText": "nit: is this issue unique to BAD_CERTIFICATE?", "author": "dagnir", "createdAt": "2020-12-04T23:49:48Z", "path": ".changes/next-release/bugfix-NettyNIOHTTPClient-dbb46f2.json", "diffHunk": "@@ -0,0 +1,6 @@\n+{\n+    \"category\": \"Netty NIO HTTP Client\", \n+    \"contributor\": \"\", \n+    \"type\": \"bugfix\", \n+    \"description\": \"Fixed the issue where BAD_CERTIFICATE issue manifested as acquire connection timeout error when using TLS1.3 and proxy.\"", "originalCommit": "babd6013d225add3ba08119e13e3f962f6d2fec3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzczNjc1MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2182#discussion_r537736751", "bodyText": "Probably not, I'll update it", "author": "zoewangg", "createdAt": "2020-12-07T18:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0OTQ3MA=="}], "type": "inlineReview"}, {"oid": "d102e8aaf9d00adf6cecf6fd139b484fdb2e5997", "url": "https://github.com/aws/aws-sdk-java-v2/commit/d102e8aaf9d00adf6cecf6fd139b484fdb2e5997", "message": "Handle TLS 1.3 bad cert errors in proxy handler", "committedDate": "2020-12-07T18:47:35Z", "type": "commit"}, {"oid": "d102e8aaf9d00adf6cecf6fd139b484fdb2e5997", "url": "https://github.com/aws/aws-sdk-java-v2/commit/d102e8aaf9d00adf6cecf6fd139b484fdb2e5997", "message": "Handle TLS 1.3 bad cert errors in proxy handler", "committedDate": "2020-12-07T18:47:35Z", "type": "forcePushed"}, {"oid": "7a4e86925363dcae4d51973e1f4e54ec0111ad36", "url": "https://github.com/aws/aws-sdk-java-v2/commit/7a4e86925363dcae4d51973e1f4e54ec0111ad36", "message": "Merge branch 'master' into zoewang/fixNettyProxy-TLS1.3", "committedDate": "2020-12-07T19:00:49Z", "type": "commit"}]}