{"pr_number": 2039, "pr_title": "Append User-Agent for Waiters operations", "pr_createdAt": "2020-09-16T21:37:25Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2039", "timeline": [{"oid": "e57ffb82e6f129c17a2bbbd733f4d3534819edbd", "url": "https://github.com/aws/aws-sdk-java-v2/commit/e57ffb82e6f129c17a2bbbd733f4d3534819edbd", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-16T21:30:28Z", "type": "forcePushed"}, {"oid": "0d520b0e80697bdc0b1ab7d4f5bf83286606514e", "url": "https://github.com/aws/aws-sdk-java-v2/commit/0d520b0e80697bdc0b1ab7d4f5bf83286606514e", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-16T21:45:40Z", "type": "forcePushed"}, {"oid": "e6f25897e75517fc0223cf1a897f4d3342f49c46", "url": "https://github.com/aws/aws-sdk-java-v2/commit/e6f25897e75517fc0223cf1a897f4d3342f49c46", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-16T23:39:57Z", "type": "forcePushed"}, {"oid": "7567d230e8f7a62eb12285455fdaa3be1adb4af0", "url": "https://github.com/aws/aws-sdk-java-v2/commit/7567d230e8f7a62eb12285455fdaa3be1adb4af0", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-16T23:57:17Z", "type": "forcePushed"}, {"oid": "db2b009abab542d33bf985e9c9d94742e8fb5a50", "url": "https://github.com/aws/aws-sdk-java-v2/commit/db2b009abab542d33bf985e9c9d94742e8fb5a50", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-18T00:45:18Z", "type": "forcePushed"}, {"oid": "64c4737d88884b1784cf93f600f595252230ce2e", "url": "https://github.com/aws/aws-sdk-java-v2/commit/64c4737d88884b1784cf93f600f595252230ce2e", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-18T00:50:18Z", "type": "forcePushed"}, {"oid": "9be7b056bb6767b977e84e1720ebff18fd8192af", "url": "https://github.com/aws/aws-sdk-java-v2/commit/9be7b056bb6767b977e84e1720ebff18fd8192af", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-18T16:53:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTI2NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r491149264", "bodyText": "In metric publisher we do\nApiName.builder().name(\"hll\").version(\"cw-mp\").build();\n\nWith the mapper we do\nApiName.builder().version(\"ddb-enh\").name(\"hll\").build();\n\nWaiters is kind of a high-level library. Should we do\nApiName.builder().name(\"hll\").version(\"waiter\").build();\n\n?", "author": "millems", "createdAt": "2020-09-18T19:28:04Z", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/waiters/query-sync-waiter-class.java", "diffHunk": "@@ -84,6 +89,15 @@ public void close() {\n         return new DefaultBuilder();\n     }\n \n+    private <T extends QueryRequest> T applyWaitersUserAgent(T request) {\n+        Consumer<AwsRequestOverrideConfiguration.Builder> userAgentApplier = b -> b.addApiName(ApiName.builder()\n+                                                                                                      .version(VersionInfo.SDK_VERSION).name(\"WAITERS\").build());", "originalCommit": "9be7b056bb6767b977e84e1720ebff18fd8192af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE3NTg3NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r491175874", "bodyText": "Yea sure, I can change that. I was imitating the Paginator user agent so it looked like this.", "author": "Quanzzzz", "createdAt": "2020-09-18T20:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTI2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDAxNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r491150016", "bodyText": "Is this an integration test now?", "author": "millems", "createdAt": "2020-09-18T19:29:40Z", "path": "services/dynamodb/src/test/java/software/amazon/awssdk/services/dynamodb/WaitersUserAgentTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.dynamodb;\n+\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.github.tomakehurst.wiremock.common.ConsoleNotifier;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import java.util.concurrent.CompletableFuture;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Matchers;\n+import org.mockito.Mockito;\n+import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;\n+import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\n+import software.amazon.awssdk.core.interceptor.Context;\n+import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;\n+import software.amazon.awssdk.core.util.VersionInfo;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableResponse;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbAsyncWaiter;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbWaiter;\n+\n+public class WaitersUserAgentTest {\n+\n+    @Rule\n+    public WireMockRule mockServer = new WireMockRule(options().notifier(new ConsoleNotifier(true)).dynamicHttpsPort());\n+\n+    private DynamoDbClient dynamoDbClient;\n+    private DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private ExecutionInterceptor interceptor;\n+\n+    @Before\n+    public void setup() {\n+        interceptor = Mockito.spy(AbstractExecutionInterceptor.class);\n+\n+        dynamoDbClient = DynamoDbClient.builder()\n+                                       .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create(\"test\",\n+                                                                                                                        \"test\")))\n+                                       .region(Region.US_WEST_2)\n+                                       .overrideConfiguration(c -> c.addExecutionInterceptor(interceptor))\n+                                       .build();\n+\n+        dynamoDbAsyncClient = DynamoDbAsyncClient.builder()\n+                                                 .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials\n+                                                                                                           .create(\"test\",\n+                                                                                                                   \"test\")))\n+                                                 .region(Region.US_WEST_2)\n+                                                 .overrideConfiguration(c -> c.addExecutionInterceptor(interceptor))\n+                                                 .build();", "originalCommit": "9be7b056bb6767b977e84e1720ebff18fd8192af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE3NjQ2Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r491176463", "bodyText": "No, these are just the clients with the interceptor. The integration tests are not here.", "author": "Quanzzzz", "createdAt": "2020-09-18T20:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwODc5OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r491208798", "bodyText": "It looks like these are calling the real DynamoDB, though, not the wiremock server.", "author": "millems", "createdAt": "2020-09-18T21:53:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0ODg4OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r491248889", "bodyText": "Oh I got what you mean, yea I can add the wireMock server.", "author": "Quanzzzz", "createdAt": "2020-09-19T01:10:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDAxNg=="}], "type": "inlineReview"}, {"oid": "f41b9f27347d35abe8da35ddb01db39e7069fb55", "url": "https://github.com/aws/aws-sdk-java-v2/commit/f41b9f27347d35abe8da35ddb01db39e7069fb55", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-19T01:06:55Z", "type": "forcePushed"}, {"oid": "194547044f36776b7935c29b9cf84499b0bd3dfc", "url": "https://github.com/aws/aws-sdk-java-v2/commit/194547044f36776b7935c29b9cf84499b0bd3dfc", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-19T01:15:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNjI1NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r492206254", "bodyText": "How long do these tests take to run?", "author": "millems", "createdAt": "2020-09-21T16:50:34Z", "path": "services/dynamodb/src/test/java/software/amazon/awssdk/services/dynamodb/WaitersUserAgentTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.dynamodb;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.any;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.times;\n+\n+import com.github.tomakehurst.wiremock.common.ConsoleNotifier;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import java.net.URI;\n+import java.util.concurrent.CompletableFuture;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Matchers;\n+import org.mockito.Mockito;\n+import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;\n+import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\n+import software.amazon.awssdk.core.interceptor.Context;\n+import software.amazon.awssdk.core.interceptor.ExecutionInterceptor;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.regions.Region;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableResponse;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbAsyncWaiter;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbWaiter;\n+\n+public class WaitersUserAgentTest {\n+\n+    @Rule\n+    public WireMockRule mockServer = new WireMockRule(options().notifier(new ConsoleNotifier(true)).dynamicHttpsPort());\n+\n+    private DynamoDbClient dynamoDbClient;\n+    private DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private ExecutionInterceptor interceptor;\n+\n+    @Before\n+    public void setup() {\n+        interceptor = Mockito.spy(AbstractExecutionInterceptor.class);\n+\n+        dynamoDbClient = DynamoDbClient.builder()\n+                                       .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create(\"test\",\n+                                                                                                                        \"test\")))\n+                                       .region(Region.US_WEST_2)\n+                                       .endpointOverride(URI.create(\"http://localhost:\" + mockServer.port()))\n+                                       .overrideConfiguration(c -> c.addExecutionInterceptor(interceptor))\n+                                       .build();\n+\n+        dynamoDbAsyncClient = DynamoDbAsyncClient.builder()\n+                                                 .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials\n+                                                                                                           .create(\"test\",\n+                                                                                                                   \"test\")))\n+                                                 .region(Region.US_WEST_2)\n+                                                 .endpointOverride(URI.create(\"http://localhost:\" + mockServer.port()))\n+                                                 .overrideConfiguration(c -> c.addExecutionInterceptor(interceptor))\n+                                                 .build();\n+    }\n+\n+    @Test\n+    public void syncWaiters_shouldHaveWaitersUserAgent() {\n+        stubFor(any(urlEqualTo(\"/\")).willReturn(aResponse().withStatus(500)));\n+\n+        DynamoDbWaiter waiter = dynamoDbClient.waiter();\n+        assertThatThrownBy(() -> waiter.waitUntilTableExists(DescribeTableRequest.builder().tableName(\"table\").build())).isNotNull();\n+\n+        ArgumentCaptor<Context.BeforeTransmission> context = ArgumentCaptor.forClass(Context.BeforeTransmission.class);\n+        Mockito.verify(interceptor, times(9)).beforeTransmission(context.capture(), Matchers.any());\n+\n+        assertTrue(context.getValue().httpRequest().headers().get(\"User-Agent\").toString().contains(\"waiter\"));\n+    }", "originalCommit": "194547044f36776b7935c29b9cf84499b0bd3dfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIzNzk0Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r492237946", "bodyText": "The sync one takes around 7s, while the async one only takes 98ms, because the sync one does wait for the response. For the async one, the CompletableFuture is cancelled once the user agent is checked.", "author": "Quanzzzz", "createdAt": "2020-09-21T17:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIzOTgwNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r492239806", "bodyText": "Should we use mock clients instead? codegen-generated-classes-test seems like a good place for this test. https://github.com/aws/aws-sdk-java-v2/tree/waiters-development/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters\nnit, you can just use wiremock's verify method rather than the interceptor\n       verify(postRequestedFor(anyUrl()).withHeader(\"User-Agent\", contains(...));", "author": "zoewangg", "createdAt": "2020-09-21T17:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1NTg0OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r492255849", "bodyText": "You could also throw an exception from the interceptor if you want to cancel the calls altogether and just validate the request.", "author": "millems", "createdAt": "2020-09-21T18:15:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNjI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNjcxMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2039#discussion_r492336711", "bodyText": "@zoewangg I just tried testing with the mock clients and Mockito.verify(), and it took around 8 mins to get the response and finish the test, not sure what caused that but it seems the WireMock test is much more efficient.", "author": "Quanzzzz", "createdAt": "2020-09-21T20:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNjI1NA=="}], "type": "inlineReview"}, {"oid": "cfe4068fe60baeb86d0a9270a8575b57c0e006d3", "url": "https://github.com/aws/aws-sdk-java-v2/commit/cfe4068fe60baeb86d0a9270a8575b57c0e006d3", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-21T21:28:16Z", "type": "commit"}, {"oid": "cfe4068fe60baeb86d0a9270a8575b57c0e006d3", "url": "https://github.com/aws/aws-sdk-java-v2/commit/cfe4068fe60baeb86d0a9270a8575b57c0e006d3", "message": "Append userAgent for Waiters operations", "committedDate": "2020-09-21T21:28:16Z", "type": "forcePushed"}]}