{"pr_number": 2063, "pr_title": "Various renaming and provide default values for waiterOverrideConfiguration", "pr_createdAt": "2020-09-23T21:02:14Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2063", "timeline": [{"oid": "6ea044294d551eed68356933c2298c8bf769ef0d", "url": "https://github.com/aws/aws-sdk-java-v2/commit/6ea044294d551eed68356933c2298c8bf769ef0d", "message": "Various renaming. Create default values for waiterOverrideConfiguration", "committedDate": "2020-09-23T21:13:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5ODg4OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493898889", "bodyText": "\"The consumer that will configure the overrideConfiguration\"?", "author": "millems", "createdAt": "2020-09-23T21:13:32Z", "path": "codegen/src/main/java/software/amazon/awssdk/codegen/docs/WaiterDocs.java", "diffHunk": "@@ -98,28 +98,28 @@ public static CodeBlock waiterCreateMethodJavadoc(ClassName className) {\n \n     public static CodeBlock waiterBuilderPollingStrategy() {\n         String javadocs = new DocumentationBuilder()\n-            .description(\"Defines a {@link $T} to use when polling a resource\")\n-            .param(\"pollingStrategy\", \"the polling strategy to set\")\n+            .description(\"Defines overrides to the default SDK waiter configuration that should be used for waiters created \"\n+                         + \"from this builder\")\n+            .param(\"overrideConfiguration\", \"the override configuration to set\")\n             .returns(\"a reference to this object so that method calls can be chained together.\")\n             .build();\n \n         return CodeBlock.builder()\n-                        .add(javadocs, ClassName.get(PollingStrategy.class))\n+                        .add(javadocs)\n                         .build();\n     }\n \n     public static CodeBlock waiterBuilderPollingStrategyConsumerBuilder() {\n         String javadocs = new DocumentationBuilder()\n-            .description(\"This is a convenient method to pass the configuration of the {@link $T} without the need to \"\n+            .description(\"This is a convenient method to pass the override configuration without the need to \"\n                          + \"create an instance manually via {@link $T.builder()}\")\n-            .param(\"pollingStrategy\", \"the polling strategy to set\")\n-            .see(\"#pollingStrategy(PollingStrategy)\")\n+            .param(\"overrideConfiguration\", \"the override configuration to set\")", "originalCommit": "206e95e92aeb640757d058111965efd4d70fff18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxOTEyMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493919123", "bodyText": "+1", "author": "zoewangg", "createdAt": "2020-09-23T21:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5ODg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMDUwOQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493900509", "bodyText": "Is it really required? Can we create one with default values? Doesn't feel like override config if it MUST be set.", "author": "millems", "createdAt": "2020-09-23T21:16:42Z", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/waiters/DefaultAsyncWaiter.java", "diffHunk": "@@ -36,16 +36,16 @@\n @SdkInternalApi\n @ThreadSafe\n public final class DefaultAsyncWaiter<T> implements AsyncWaiter<T> {\n-    private final PollingStrategy pollingStrategy;\n+    private final WaiterOverrideConfiguration overrideConfiguration;\n     private final ScheduledExecutorService executorService;\n     private final List<WaiterAcceptor<? super T>> waiterAcceptors;\n     private final AsyncWaiterExecutor<T> handler;\n \n     private DefaultAsyncWaiter(DefaultBuilder<T> builder) {\n         this.executorService = builder.scheduledExecutorService;\n-        this.pollingStrategy = Validate.paramNotNull(builder.pollingStrategy, \"pollingStrategy\");\n+        this.overrideConfiguration = Validate.paramNotNull(builder.overrideConfiguration, \"overrideConfiguration\");", "originalCommit": "6ea044294d551eed68356933c2298c8bf769ef0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwODI0NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493908244", "bodyText": "Yeah, good catch. Will update", "author": "zoewangg", "createdAt": "2020-09-23T21:33:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMDUwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTk1NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493901954", "bodyText": "I guess this is kind of arbitrary, but 3 attempts with 2 second delay isn't very long to wait. I guess better to be conservative than steal the customer's thread for a long time. Maybe just maxWaitTime of 1 minute?", "author": "millems", "createdAt": "2020-09-23T21:19:55Z", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/waiters/WaiterExecutorHelper.java", "diffHunk": "@@ -32,12 +34,20 @@\n  */\n @SdkInternalApi\n public final class WaiterExecutorHelper<T> {\n+    private static final int DEFAULT_MAX_ATTEMPTS = 3;\n+    private static final BackoffStrategy DEFAULT_BACKOFF_STRATEGY = FixedDelayBackoffStrategy.create(Duration.ofSeconds(2));", "originalCommit": "6ea044294d551eed68356933c2298c8bf769ef0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxODk0OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493918948", "bodyText": "Yeah, we don't want to send too many requests to the service in a short amount of time or hold the resource for too long.\nso 5-second delay with maxWaitTime of 1 minute?", "author": "zoewangg", "createdAt": "2020-09-23T21:57:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyNjg0OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493926848", "bodyText": "If we're going to make maxWaitTime similar to requestTimeout, then I think you were actually on the right track here with having requestTimeout off by default and using maxAttempts.\nMaybe 5 seconds delay with max attempts of 3?", "author": "millems", "createdAt": "2020-09-23T22:18:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkzMjQwMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493932403", "bodyText": "+1 Yeah, it seems waitTimeout makes more sense since it's default to be off for generated service waiters.", "author": "zoewangg", "createdAt": "2020-09-23T22:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMTk1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMjY3MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493902670", "bodyText": "This is a little confusing. If the customer specifies the maxWaitTime, they might not know to jack up the maxAttempts, which are likely less time consuming to execute than their maxWaitTime if they stuck with the default values.\nI suppose this is no different than the requestTimeout and maxRetries, though. Perhaps we can rename maxWaitTime to waitTimeout to draw the parallel between the RetryPolicy.maxAttempts/WaiterOverrideConfig.maxAttempts and ClientOverrideConfig.requestTimeout/WaiterOverrideConfig.waitTimeout?", "author": "millems", "createdAt": "2020-09-23T21:21:30Z", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/waiters/WaiterExecutorHelper.java", "diffHunk": "@@ -32,12 +34,20 @@\n  */\n @SdkInternalApi\n public final class WaiterExecutorHelper<T> {\n+    private static final int DEFAULT_MAX_ATTEMPTS = 3;\n+    private static final BackoffStrategy DEFAULT_BACKOFF_STRATEGY = FixedDelayBackoffStrategy.create(Duration.ofSeconds(2));\n     private final List<WaiterAcceptor<? super T>> waiterAcceptors;\n-    private final PollingStrategy pollingStrategy;\n+    private final BackoffStrategy backoffStrategy;\n+    private final Duration maxWaitTime;\n+    private final int maxAttempts;\n \n-    public WaiterExecutorHelper(List<WaiterAcceptor<? super T>> waiterAcceptors, PollingStrategy pollingStrategy) {\n+    public WaiterExecutorHelper(List<WaiterAcceptor<? super T>> waiterAcceptors,\n+                                WaiterOverrideConfiguration overrideConfiguration) {\n         this.waiterAcceptors = waiterAcceptors;\n-        this.pollingStrategy = pollingStrategy;\n+        this.backoffStrategy = overrideConfiguration.backoffStrategy().orElse(DEFAULT_BACKOFF_STRATEGY);\n+        this.maxWaitTime = overrideConfiguration.maxWaitTime().orElse(null);\n+        this.maxAttempts = overrideConfiguration.maxAttempts().orElse(DEFAULT_MAX_ATTEMPTS);", "originalCommit": "6ea044294d551eed68356933c2298c8bf769ef0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxMTU2OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493911568", "bodyText": "I'd expect most of the customers to use the generated waiters w/o any configurations. Yeah, it might be a bit confusing for customers who do want to customize it.\n+1 rename maxWaitTimeout to waitTimeout.", "author": "zoewangg", "createdAt": "2020-09-23T21:41:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMjY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwNTczNQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2063#discussion_r493905735", "bodyText": "Nit: spacing.", "author": "millems", "createdAt": "2020-09-23T21:28:11Z", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/waiters/WaiterExecutorHelper.java", "diffHunk": "@@ -52,15 +62,13 @@ public WaiterExecutorHelper(List<WaiterAcceptor<? super T>> waiterAcceptors, Pol\n     }\n \n     public long computeNextDelayInMills(int attemptNumber) {\n-        return pollingStrategy.backoffStrategy()\n-                              .computeDelayBeforeNextRetry(RetryPolicyContext.builder()\n-                                                                             .retriesAttempted(attemptNumber)\n-                                                                             .build())\n-                              .toMillis();\n+        return backoffStrategy.computeDelayBeforeNextRetry(RetryPolicyContext.builder()\n+                                                                                   .retriesAttempted(attemptNumber)\n+                                                                                   .build())", "originalCommit": "6ea044294d551eed68356933c2298c8bf769ef0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "81138f4840e205887b27ffc25fd4ef3b83754e08", "url": "https://github.com/aws/aws-sdk-java-v2/commit/81138f4840e205887b27ffc25fd4ef3b83754e08", "message": "Various renaming. Create default values for waiterOverrideConfiguration", "committedDate": "2020-09-23T23:42:04Z", "type": "commit"}, {"oid": "81138f4840e205887b27ffc25fd4ef3b83754e08", "url": "https://github.com/aws/aws-sdk-java-v2/commit/81138f4840e205887b27ffc25fd4ef3b83754e08", "message": "Various renaming. Create default values for waiterOverrideConfiguration", "committedDate": "2020-09-23T23:42:04Z", "type": "forcePushed"}]}