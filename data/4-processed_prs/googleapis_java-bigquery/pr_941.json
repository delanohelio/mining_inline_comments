{"pr_number": 941, "pr_title": "fix: make sure to fall back to old query path when query job is incomplete", "pr_createdAt": "2020-11-12T19:58:45Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/941", "timeline": [{"oid": "4231057ca98bf0c76d615630f0c0332cc349ff6b", "url": "https://github.com/googleapis/java-bigquery/commit/4231057ca98bf0c76d615630f0c0332cc349ff6b", "message": "fix: make sure to fall back to old query path when query job is incomplete (takes more than 10s)", "committedDate": "2020-11-12T19:58:05Z", "type": "commit"}, {"oid": "fd75e609c70208c04d79221c2188fbc564a739ec", "url": "https://github.com/googleapis/java-bigquery/commit/fd75e609c70208c04d79221c2188fbc564a739ec", "message": "nit", "committedDate": "2020-11-12T19:59:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r522407473", "bodyText": "This block reads quite confusing now.\nconsider flipping it..\nif (results.getJobComplete() && results.getSchema() != null) {\nschema = Schema.fromPb(results.getSchema());\n// Your logic below for numRows, numDml...\n} else {\nJobId jobId = ....\n....\n}", "author": "epavan123", "createdAt": "2020-11-12T20:30:35Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,7 +1268,7 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n+    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {", "originalCommit": "fd75e609c70208c04d79221c2188fbc564a739ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3NTk4MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523075981", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T16:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzg4MA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r522407880", "bodyText": "Please also add a mock test showing that the subsequent getQueryResults call gets made.", "author": "epavan123", "createdAt": "2020-11-12T20:31:18Z", "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/it/ITBigQueryTest.java", "diffHunk": "@@ -1813,6 +1813,36 @@ public void testFastDDLQuery() throws InterruptedException {\n     }\n   }\n \n+  @Test\n+  public void testFastQuerySlowDDL() throws InterruptedException {\n+    String tableName =", "originalCommit": "fd75e609c70208c04d79221c2188fbc564a739ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3NjA0Mg==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523076042", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T16:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzg4MA=="}], "type": "inlineReview"}, {"oid": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "url": "https://github.com/googleapis/java-bigquery/commit/e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "message": "address comments", "committedDate": "2020-11-13T16:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MzgwNA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523163804", "bodyText": "Please add a comment here.\n// Query is long running (> 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.", "author": "epavan123", "createdAt": "2020-11-13T19:01:04Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,20 +1268,20 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n         numRows = results.getNumDmlAffectedRows();\n       } else {\n         numRows = results.getTotalRows().longValue();\n       }\n+    } else {", "originalCommit": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NTA2MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523165061", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T19:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MzgwNA=="}], "type": "inlineReview"}, {"oid": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "url": "https://github.com/googleapis/java-bigquery/commit/6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "message": "add comment", "committedDate": "2020-11-13T19:03:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NjQ0MA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523166440", "bodyText": "nit: simplify as return job.getQueryResults(); ?", "author": "shollyman", "createdAt": "2020-11-13T19:06:36Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,20 +1268,23 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n         numRows = results.getNumDmlAffectedRows();\n       } else {\n         numRows = results.getTotalRows().longValue();\n       }\n+    } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n+      JobId jobId = JobId.fromPb(results.getJobReference());\n+      Job job = getJob(jobId, options);\n+      TableResult tableResult = job.getQueryResults();", "originalCommit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE4MzEwNQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523183105", "bodyText": "done - ty!", "author": "stephaniewang526", "createdAt": "2020-11-13T19:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NjQ0MA=="}], "type": "inlineReview"}, {"oid": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "url": "https://github.com/googleapis/java-bigquery/commit/5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "message": "nit update", "committedDate": "2020-11-13T19:17:32Z", "type": "commit"}]}