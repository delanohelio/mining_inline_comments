{"pr_number": 223, "pr_title": "feat: add struct query parameters", "pr_createdAt": "2020-03-16T05:42:38Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/223", "timeline": [{"oid": "9d6f4f4f070cf4ca14cacb9f492f6fad2da93d18", "url": "https://github.com/googleapis/java-bigquery/commit/9d6f4f4f070cf4ca14cacb9f492f6fad2da93d18", "message": "feat: struct query parameters", "committedDate": "2020-03-13T11:33:08Z", "type": "commit"}, {"oid": "e7acf2999ea293494b53d8c0ed15df234787030b", "url": "https://github.com/googleapis/java-bigquery/commit/e7acf2999ea293494b53d8c0ed15df234787030b", "message": "feat: unit and integration test case", "committedDate": "2020-03-13T11:33:08Z", "type": "commit"}, {"oid": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "url": "https://github.com/googleapis/java-bigquery/commit/e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "message": "feat: adjust code", "committedDate": "2020-03-16T05:23:33Z", "type": "commit"}, {"oid": "056603e6e479be22c8c5c83f03b63e0d0d26b73d", "url": "https://github.com/googleapis/java-bigquery/commit/056603e6e479be22c8c5c83f03b63e0d0d26b73d", "message": "feat: remove clirr and refactor code", "committedDate": "2020-03-17T05:02:29Z", "type": "commit"}, {"oid": "beb5c854eb726579cfd2a1004f2c91985fb5fbba", "url": "https://github.com/googleapis/java-bigquery/commit/beb5c854eb726579cfd2a1004f2c91985fb5fbba", "message": "feat: additional test case", "committedDate": "2020-03-19T13:24:53Z", "type": "commit"}, {"oid": "a0600cf0d0b3986c27b5061a992fe94af6a80fe3", "url": "https://github.com/googleapis/java-bigquery/commit/a0600cf0d0b3986c27b5061a992fe94af6a80fe3", "message": "feat: add asserts for values", "committedDate": "2020-03-20T12:35:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxMDIwOQ==", "url": "https://github.com/googleapis/java-bigquery/pull/223#discussion_r393410209", "bodyText": "i think testing only isNotNull is insufficient -- we should probably also validate the actual types and values to be correct explicitly.", "author": "stephaniewang526", "createdAt": "2020-03-17T02:26:12Z", "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/QueryParameterValueTest.java", "diffHunk": "@@ -378,6 +379,32 @@ public void testFromEmptyArray() {\n     assertThat(value.getArrayValues()).isEmpty();\n   }\n \n+  @Test\n+  public void testStruct() {\n+    QueryParameterValue booleanField = QueryParameterValue.bool(true);\n+    QueryParameterValue integerField = QueryParameterValue.int64(15);\n+    QueryParameterValue stringField = QueryParameterValue.string(\"test-string\");\n+    QueryParameterValue recordField =\n+        QueryParameterValue.struct(\n+            ImmutableMap.of(\n+                \"booleanField\",\n+                booleanField,\n+                \"integerField\",\n+                integerField,\n+                \"stringField\",\n+                stringField));\n+    com.google.api.services.bigquery.model.QueryParameterValue parameterValue =\n+        recordField.toValuePb();\n+    QueryParameterType parameterType = recordField.toTypePb();\n+    QueryParameterValue queryParameterValue =\n+        QueryParameterValue.fromPb(parameterValue, parameterType);\n+    assertThat(queryParameterValue).isEqualTo(recordField);\n+    assertThat(recordField.getValue()).isNull();\n+    assertThat(recordField.getType()).isEqualTo(StandardSQLTypeName.STRUCT);\n+    assertThat(recordField.getStructTypes()).isNotNull();", "originalCommit": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxMDUwMw==", "url": "https://github.com/googleapis/java-bigquery/pull/223#discussion_r393410503", "bodyText": "similar to what I comment on the unit test, i think only asserting result size being 1 is insufficient -- we should explicitly assert result's types and values.", "author": "stephaniewang526", "createdAt": "2020-03-17T02:27:22Z", "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/it/ITBigQueryTest.java", "diffHunk": "@@ -1428,6 +1428,27 @@ public void testNamedQueryParameters() throws InterruptedException {\n     assertEquals(2, Iterables.size(result.getValues()));\n   }\n \n+  @Test\n+  public void testStructNamedQueryParameters() throws InterruptedException {\n+    QueryParameterValue booleanValue = QueryParameterValue.bool(true);\n+    QueryParameterValue stringValue = QueryParameterValue.string(\"test-stringField-5\");\n+    QueryParameterValue integerValue = QueryParameterValue.int64(10);\n+    Map<String, QueryParameterValue> struct = new HashMap<>();\n+    struct.put(\"booleanField\", booleanValue);\n+    struct.put(\"integerField\", integerValue);\n+    struct.put(\"stringField\", stringValue);\n+    QueryParameterValue recordValue = QueryParameterValue.struct(struct);\n+    String query = \"SELECT STRUCT(@recordField) AS record\";\n+    QueryJobConfiguration config =\n+        QueryJobConfiguration.newBuilder(query)\n+            .setDefaultDataset(DATASET)\n+            .setUseLegacySql(false)\n+            .addNamedParameter(\"recordField\", recordValue)\n+            .build();\n+    TableResult result = bigquery.query(config);\n+    assertEquals(1, Iterables.size(result.getValues()));", "originalCommit": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxNjk3Nw==", "url": "https://github.com/googleapis/java-bigquery/pull/223#discussion_r393416977", "bodyText": "this is causing the clirr 7013 error - I understand that this is completely consistent w the other type get methods but it would be nice if we could find an alternative to go around having to add an abstract method.", "author": "stephaniewang526", "createdAt": "2020-03-17T02:54:08Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/QueryParameterValue.java", "diffHunk": "@@ -154,13 +168,26 @@ public Builder setArrayValues(List<QueryParameterValue> arrayValues) {\n   @Nullable\n   abstract ImmutableList<QueryParameterValue> getArrayValuesInner();\n \n+  /** Returns the struct values of this parameter. The returned map, if not null, is immutable. */\n+  @Nullable\n+  public Map<String, QueryParameterValue> getStructValues() {\n+    return getStructValuesInner();\n+  }\n+\n+  @Nullable\n+  abstract Map<String, QueryParameterValue> getStructValuesInner();\n+\n   /** Returns the data type of this parameter. */\n   public abstract StandardSQLTypeName getType();\n \n   /** Returns the data type of the array elements. */\n   @Nullable\n   public abstract StandardSQLTypeName getArrayType();\n \n+  /** Returns the data type of the struct elements. */\n+  @Nullable\n+  public abstract Map<String, QueryParameterValue> getStructTypes();", "originalCommit": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}