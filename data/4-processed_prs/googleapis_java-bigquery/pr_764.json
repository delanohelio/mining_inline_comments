{"pr_number": 764, "pr_title": "docs(samples): add query external bigtable using permanent table", "pr_createdAt": "2020-09-30T13:21:01Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/764", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4NDAyNg==", "url": "https://github.com/googleapis/java-bigquery/pull/764#discussion_r497684026", "bodyText": "Ok, but we usually prefer to see String.format()", "author": "lesv", "createdAt": "2020-09-30T17:31:13Z", "path": "samples/snippets/src/main/java/com/example/bigquery/QueryExternalBigtablePerm.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_external_bigtable_perm]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.BigtableColumn;\n+import com.google.cloud.bigquery.BigtableColumnFamily;\n+import com.google.cloud.bigquery.BigtableOptions;\n+import com.google.cloud.bigquery.ExternalTableDefinition;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+import com.google.cloud.bigquery.TableResult;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.commons.codec.binary.Base64;\n+\n+// Sample to queries an external bigtable data source using a permanent table\n+public class QueryExternalBigtablePerm {\n+\n+  public static void main(String[] args) {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String instanceId = \"MY_INSTANCE_ID\";\n+    String bigtableName = \"MY_BIGTABLE_NAME\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    String sourceUri =\n+        \"https://googleapis.com/bigtable/projects/\"\n+            + projectId\n+            + \"/instances/\"\n+            + instanceId\n+            + \"/tables/\"\n+            + bigtableName;", "originalCommit": "5d73ab11c5649605c050603194a430c500dcfb7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMDQ0NA==", "url": "https://github.com/googleapis/java-bigquery/pull/764#discussion_r498220444", "bodyText": "Done!", "author": "pmakani", "createdAt": "2020-10-01T12:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4NDAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczOTk1OQ==", "url": "https://github.com/googleapis/java-bigquery/pull/764#discussion_r497739959", "bodyText": "maybe reorder so dataset isn't inbetween bigtable variables. Also maybe naming it bigqueryDatasetName or naming the other variable bigtableTableName could be good so there isn't confusion", "author": "billyjacobson", "createdAt": "2020-09-30T19:11:22Z", "path": "samples/snippets/src/main/java/com/example/bigquery/QueryExternalBigtablePerm.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_external_bigtable_perm]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.BigtableColumn;\n+import com.google.cloud.bigquery.BigtableColumnFamily;\n+import com.google.cloud.bigquery.BigtableOptions;\n+import com.google.cloud.bigquery.ExternalTableDefinition;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+import com.google.cloud.bigquery.TableResult;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.commons.codec.binary.Base64;\n+\n+// Sample to queries an external bigtable data source using a permanent table\n+public class QueryExternalBigtablePerm {\n+\n+  public static void main(String[] args) {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String instanceId = \"MY_INSTANCE_ID\";\n+    String bigtableName = \"MY_BIGTABLE_NAME\";\n+    String datasetName = \"MY_DATASET_NAME\";", "originalCommit": "5d73ab11c5649605c050603194a430c500dcfb7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMDMzNQ==", "url": "https://github.com/googleapis/java-bigquery/pull/764#discussion_r498220335", "bodyText": "Done!", "author": "pmakani", "createdAt": "2020-10-01T12:53:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczOTk1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MjU3Nw==", "url": "https://github.com/googleapis/java-bigquery/pull/764#discussion_r497772577", "bodyText": "same comments from #763 regarding example bigtable schema", "author": "billyjacobson", "createdAt": "2020-09-30T20:12:53Z", "path": "samples/snippets/src/main/java/com/example/bigquery/QueryExternalBigtablePerm.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_external_bigtable_perm]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.BigtableColumn;\n+import com.google.cloud.bigquery.BigtableColumnFamily;\n+import com.google.cloud.bigquery.BigtableOptions;\n+import com.google.cloud.bigquery.ExternalTableDefinition;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+import com.google.cloud.bigquery.TableResult;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.commons.codec.binary.Base64;\n+\n+// Sample to queries an external bigtable data source using a permanent table\n+public class QueryExternalBigtablePerm {\n+\n+  public static void main(String[] args) {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String instanceId = \"MY_INSTANCE_ID\";\n+    String bigtableName = \"MY_BIGTABLE_NAME\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    String sourceUri =\n+        \"https://googleapis.com/bigtable/projects/\"\n+            + projectId\n+            + \"/instances/\"\n+            + instanceId\n+            + \"/tables/\"\n+            + bigtableName;\n+    String query = String.format(\"SELECT * FROM %s \", tableName);\n+    queryExternalBigtablePerm(datasetName, tableName, sourceUri, query);\n+  }\n+\n+  public static void queryExternalBigtablePerm(\n+      String datasetName, String tableName, String sourceUri, String query) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      BigtableColumn name =", "originalCommit": "5d73ab11c5649605c050603194a430c500dcfb7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMDIyNA==", "url": "https://github.com/googleapis/java-bigquery/pull/764#discussion_r498220224", "bodyText": "#763 (comment)", "author": "pmakani", "createdAt": "2020-10-01T12:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MjU3Nw=="}], "type": "inlineReview"}, {"oid": "feb3ec9baf1e0439ac6f7e62478c8842baa8d10a", "url": "https://github.com/googleapis/java-bigquery/commit/feb3ec9baf1e0439ac6f7e62478c8842baa8d10a", "message": "docs(samples): add query external bigtable using permanent table", "committedDate": "2020-10-07T05:28:57Z", "type": "commit"}, {"oid": "266d948744b567c1e18449d5541ad80dea851675", "url": "https://github.com/googleapis/java-bigquery/commit/266d948744b567c1e18449d5541ad80dea851675", "message": "docs(samples): address feedback", "committedDate": "2020-10-07T05:28:57Z", "type": "commit"}, {"oid": "49052309810d53c746368b7c40d0ea11221a6f5d", "url": "https://github.com/googleapis/java-bigquery/commit/49052309810d53c746368b7c40d0ea11221a6f5d", "message": "docs(samples): address comments", "committedDate": "2020-10-07T05:43:22Z", "type": "commit"}, {"oid": "49052309810d53c746368b7c40d0ea11221a6f5d", "url": "https://github.com/googleapis/java-bigquery/commit/49052309810d53c746368b7c40d0ea11221a6f5d", "message": "docs(samples): address comments", "committedDate": "2020-10-07T05:43:22Z", "type": "forcePushed"}]}