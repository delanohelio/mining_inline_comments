{"pr_number": 173, "pr_title": " Created 'internal.provider' package for our provider implementations", "pr_createdAt": "2020-01-30T00:52:18Z", "pr_url": "https://github.com/Azure/azure-sdk-for-android/pull/173", "timeline": [{"oid": "49beaedd46ecad7f3a0a5e43e0f6d97cd87bebe8", "url": "https://github.com/Azure/azure-sdk-for-android/commit/49beaedd46ecad7f3a0a5e43e0f6d97cd87bebe8", "message": "Corrected reference in JacksonAdapter for class that was renamed.", "committedDate": "2020-01-27T18:47:13Z", "type": "commit"}, {"oid": "566e2dc34fcee32c656c7a1bc0a518c64792e834", "url": "https://github.com/Azure/azure-sdk-for-android/commit/566e2dc34fcee32c656c7a1bc0a518c64792e834", "message": "Merge branch 'dev' of github.com:Azure/azure-sdk-for-android into dev", "committedDate": "2020-01-27T18:50:50Z", "type": "commit"}, {"oid": "ee0749a0fd3d76771ff736a0c25095c590e43316", "url": "https://github.com/Azure/azure-sdk-for-android/commit/ee0749a0fd3d76771ff736a0c25095c590e43316", "message": "Merge branch 'dev' of github.com:Azure/azure-sdk-for-android into dev", "committedDate": "2020-01-27T22:38:10Z", "type": "commit"}, {"oid": "0fe7485177423e152ce9bffc02122e6e5639c8eb", "url": "https://github.com/Azure/azure-sdk-for-android/commit/0fe7485177423e152ce9bffc02122e6e5639c8eb", "message": "Changed UserAgentInterceptor to use the correct header name (\"User-Agent\") in requests.", "committedDate": "2020-01-28T19:40:58Z", "type": "commit"}, {"oid": "9dd4a57b75815dc158312608d3e26293628b6d4d", "url": "https://github.com/Azure/azure-sdk-for-android/commit/9dd4a57b75815dc158312608d3e26293628b6d4d", "message": "Merge branch 'dev' of github.com:Azure/azure-sdk-for-android into dev", "committedDate": "2020-01-28T19:44:35Z", "type": "commit"}, {"oid": "7e97fe15e1b09545b2418e5179c613d733dcd801", "url": "https://github.com/Azure/azure-sdk-for-android/commit/7e97fe15e1b09545b2418e5179c613d733dcd801", "message": "Merge branch 'dev' of github.com:Azure/azure-sdk-for-android into dev", "committedDate": "2020-01-28T23:40:05Z", "type": "commit"}, {"oid": "e7452df489e01b646cfc5e29a62312012667de8c", "url": "https://github.com/Azure/azure-sdk-for-android/commit/e7452df489e01b646cfc5e29a62312012667de8c", "message": "Created internal.provider package which holds the implementation of our provider interfaces. Also cleaned up the JavaDoc in AndroidClientLogger.", "committedDate": "2020-01-29T00:04:06Z", "type": "commit"}, {"oid": "e7452df489e01b646cfc5e29a62312012667de8c", "url": "https://github.com/Azure/azure-sdk-for-android/commit/e7452df489e01b646cfc5e29a62312012667de8c", "message": "Created internal.provider package which holds the implementation of our provider interfaces. Also cleaned up the JavaDoc in AndroidClientLogger.", "committedDate": "2020-01-29T00:04:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372715194", "bodyText": "By making this change, do we actually need the AndroidApplicationInformationProvider to be public any more? Meaning it would be package-private, but people can still get an instance of it by calling this public method.", "author": "bsiegel", "createdAt": "2020-01-30T01:09:59Z", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/provider/ApplicationInformationProvider.java", "diffHunk": "@@ -1,9 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n package com.azure.android.core.provider;\n \n+import android.content.Context;\n+\n+import com.azure.android.core.internal.provider.AndroidApplicationInformationProvider;\n+\n /**\n  * Interface for a provider that contains application information.\n  */\n public interface ApplicationInformationProvider {\n+    /**\n+     * Creates a default {@link ApplicationInformationProvider}.\n+     *\n+     * @param context Android {@link Context} object to extract data from.\n+     * @return A default {@link ApplicationInformationProvider}.\n+     */\n+    static ApplicationInformationProvider getDefault(Context context) {", "originalCommit": "e7452df489e01b646cfc5e29a62312012667de8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTM3Ng==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372715376", "bodyText": "And if the answer is that it can be package-private, should we then move it out of the internal namespace and directly into com.azure.android.core.provider?", "author": "bsiegel", "createdAt": "2020-01-30T01:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNjAwMg==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372716002", "bodyText": "We don't strictly need it to be public, I just thought it looked nicer to have them grouped like this. They can definitely be package-private. Would we prefer that?", "author": "vcolin7", "createdAt": "2020-01-30T01:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxODU1MQ==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372718551", "bodyText": "We should use \"internal\" in the namespace in order to discourage customers from using a public class that we can't make private or package-private for whatever reason.\nIf we can make it package-private or private, we should do so, and leave \"internal\" for those edge cases. I'm fine with leaving the implementations in their own namespace com.azure.android.core.provider.implementation and just tightening up the access level for these classes to the least-visible option we can (I assume that's package-private).", "author": "bsiegel", "createdAt": "2020-01-30T01:23:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyMjM1OQ==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372722359", "bodyText": "Consumers pass these providers to userAgentInterceptor Ctr like:\n\n  \n    \n      azure-sdk-for-android/sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/UserAgentInterceptor.java\n    \n    \n        Lines 133 to 138\n      in\n      a9d9b5e\n    \n    \n    \n    \n\n        \n          \n           public UserAgentInterceptor(String sdkName, \n        \n\n        \n          \n                                       String sdkVersion, \n        \n\n        \n          \n                                       String applicationId, \n        \n\n        \n          \n                                       PlatformInformationProvider platformInformationProvider, \n        \n\n        \n          \n                                       ApplicationInformationProvider applicationInformationProvider, \n        \n\n        \n          \n                                       LocaleInformationProvider localeInformationProvider) { \n        \n    \n  \n\n\nI guess other than the unit test scenarios, we/consumers are going to call getDefault(Context|Configuration) on each of these provider interfaces and pass it to UserAgentInterceptor.\nI wonder it make sense to have a type that composes default providers then interceptor take that type.\ninterface EnvironmentInformation {\n   ApplicationInforationProvider getApplicationInformationProvider();\n   LocaleInformationProvider getLocaleInformationProvider();\n   PlatformInformationProvider getPlatformInformationProvider();\n\n   static EnvironmentInformation getDefault(Context cxt, Configuration cfg) {\n       return EnvironmentInformation() {\n           @Override\n           public ApplicationInformationProvider getApplicationInformationProvider() {\n               return ApplicationInformationProvider.createDefault(cxt);\n           }\n   \n           // and other providers\n       }\n  }\nthoughts?", "author": "anuchandy", "createdAt": "2020-01-30T01:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNDE3Ng==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372724176", "bodyText": "Agree with you guys on keeping these default implementation package-private (in the same namespace as provider). I think we should put a type with \"PUBLIC\" access modifier in internal only if that's that only option because we want that type outside package but don't want customers to use it.", "author": "anuchandy", "createdAt": "2020-01-30T01:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyMTM1Nw==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r372821357", "bodyText": "@vcolin7 I didn't mean to hold on this PR with EnvironmentInformation. Let's discuss that in our next sync up to see it make sense. PR lgtm, just make sure the default provider impls are package-private.", "author": "anuchandy", "createdAt": "2020-01-30T08:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2NzA1Ng==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r373167056", "bodyText": "@anuchandy I have wondered the same thing on iOS, but so far I haven't found it terribly cumbersome. I think most places will only need one or two providers, the UserAgent interceptor is sort of an exception.", "author": "bsiegel", "createdAt": "2020-01-30T20:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2OTg0MA==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r373169840", "bodyText": "@anuchandy One thing that might be nice is a convenience constructor that takes the Context - this would be pretty familiar to most Android devs. E.g.:\npublic UserAgentInterceptor(@NonNull Context context,\n                            @NonNull String sdkName, \n                            @NonNull String sdkVersion, \n                            @Nullable String applicationId) {\n    this(sdkName,\n         sdkVersion,\n         applicationId, \n         PlatformInformationProvider.getDefault(context), \n         ApplicationInformationProvider.getDefault(context), \n         LocaleInformationProvider.getDefault(context)\n    )\n}\nIIRC the convention is that the context is usually the first parameter.\nWe did the same thing in iOS by using parameter defaults - the consumer can omit the provider-related parameters and in that case we will acquire instances of them from their respective default() methods inside the initializer. It's basically the same thing except we don't need the consumer to pass us a context object.", "author": "bsiegel", "createdAt": "2020-01-30T20:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyNTIzNg==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r373225236", "bodyText": "@bsiegel sounds good, the LocaleInformationProvider requires Configuration instance to retrieve info it needed, so we might want to take @NonNull Context context, @NonNull Configuration conf", "author": "anuchandy", "createdAt": "2020-01-30T22:20:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyODU3Nw==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r373228577", "bodyText": "@anuchandy Can you not just retrieve that configuration object from the context?\nConfiguration config = context.getResources().getConfiguration();", "author": "bsiegel", "createdAt": "2020-01-30T22:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2NjM1MQ==", "url": "https://github.com/Azure/azure-sdk-for-android/pull/173#discussion_r373266351", "bodyText": "cool, then I agree with your proposal of ctr taking context.", "author": "anuchandy", "createdAt": "2020-01-31T00:34:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNTE5NA=="}], "type": "inlineReview"}, {"oid": "7cc18d761267c8ee6d0a775492b5cfcc12b0c997", "url": "https://github.com/Azure/azure-sdk-for-android/commit/7cc18d761267c8ee6d0a775492b5cfcc12b0c997", "message": "Moved the provider implementations out of the 'internal.provider' package and into the 'provider' package. Changed AndroidLocaleInformationProvider so its constructor uses a Context reference instead of one of Configuration.", "committedDate": "2020-02-03T21:01:17Z", "type": "commit"}, {"oid": "966a6309d46dc7ac411ac5eb8d45da43bff86c07", "url": "https://github.com/Azure/azure-sdk-for-android/commit/966a6309d46dc7ac411ac5eb8d45da43bff86c07", "message": "Created a convenience constructor that takes a Context to extract data from. Modified the argument order of some constructors to follow the Java SDK (passing application ID first).", "committedDate": "2020-02-03T21:41:39Z", "type": "commit"}, {"oid": "7bb9d50f96a3f7a34fdb515c5a925e4d5a135b16", "url": "https://github.com/Azure/azure-sdk-for-android/commit/7bb9d50f96a3f7a34fdb515c5a925e4d5a135b16", "message": "Move provider implementations to internal package", "committedDate": "2020-02-04T07:52:31Z", "type": "commit"}, {"oid": "b88cfead8b66ea53aff91682e8b1ebb36935bd0b", "url": "https://github.com/Azure/azure-sdk-for-android/commit/b88cfead8b66ea53aff91682e8b1ebb36935bd0b", "message": "Further cleaned up UserAgentInterceptor public interface", "committedDate": "2020-02-04T08:27:28Z", "type": "commit"}]}