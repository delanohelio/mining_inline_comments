{"pr_number": 538, "pr_title": "GatewayNotifier (make calls asynchronous) and logout improvement (distributing invalidated tokens between Gateways)", "pr_createdAt": "2020-03-03T17:22:18Z", "pr_url": "https://github.com/zowe/api-layer/pull/538", "timeline": [{"oid": "25ecf898789335e87f000c0ca0c443c6bf719b6f", "url": "https://github.com/zowe/api-layer/commit/25ecf898789335e87f000c0ca0c443c6bf719b6f", "message": "GatewayNotifier (make calls asynchronous) and logout improvement (distributing invalidated tokens between Gateways)\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-03T17:18:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1MzE5NQ==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387553195", "bodyText": "You can use Gateway constant from org.zowe.apiml.product.constants.CoreService instead.", "author": "JirkaAichler", "createdAt": "2020-03-04T09:47:34Z", "path": "discovery-service/src/main/java/org/zowe/apiml/discovery/GatewayNotifier.java", "diffHunk": "@@ -14,30 +14,66 @@\n import com.netflix.eureka.EurekaServerContext;\n import com.netflix.eureka.EurekaServerContextHolder;\n import com.netflix.eureka.registry.PeerAwareInstanceRegistry;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.lang.StringUtils;\n+import org.apache.logging.log4j.util.BiConsumer;\n import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n import org.springframework.stereotype.Component;\n import org.springframework.web.client.RestTemplate;\n import org.zowe.apiml.message.core.MessageService;\n import org.zowe.apiml.message.log.ApimlLogger;\n import org.zowe.apiml.util.EurekaUtils;\n \n+import javax.annotation.PostConstruct;\n+import javax.annotation.PreDestroy;\n+import java.util.Collections;\n import java.util.List;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n \n+/**\n+ * This bean is used to send a notification to the Gateways. It is sending notification asynchronous (at first they\n+ * are stored into the queue and then with a delay send to Gateways). If same notification is waiting for sending\n+ * it send it only once.\n+ *\n+ * Purpose of this bean is at first in notification Gateways about new and removed services and process at least\n+ * evicting of caches there.\n+ */\n @Component\n @Slf4j\n-public class GatewayNotifier {\n+public class GatewayNotifier implements Runnable {\n+\n+    public static final String GATEWAY_SERVICE_ID = \"GATEWAY\";", "originalCommit": "25ecf898789335e87f000c0ca0c443c6bf719b6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MTg5Ng==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387561896", "bodyText": "Fixed, just here is needed uppercase value, so I just replace the literal, constant itself is still there.", "author": "pj892031", "createdAt": "2020-03-04T10:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1MzE5NQ=="}], "type": "inlineReview"}, {"oid": "bcd5a4c6c57c7aabb3bbc3f7f6b25c0661df95e4", "url": "https://github.com/zowe/api-layer/commit/bcd5a4c6c57c7aabb3bbc3f7f6b25c0661df95e4", "message": "using common constant to identify Gateway\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-04T10:02:01Z", "type": "commit"}, {"oid": "4c5a0c01d98905f3a5a3d9dbccd61baa96d25c40", "url": "https://github.com/zowe/api-layer/commit/4c5a0c01d98905f3a5a3d9dbccd61baa96d25c40", "message": "add equal method into Notification\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-04T10:13:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3OTQyNw==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387579427", "bodyText": "Please use constant as well.", "author": "JirkaAichler", "createdAt": "2020-03-04T10:33:47Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -139,6 +145,31 @@ public TokenAuthentication validateJwtToken(String jwtToken) {\n         return validTokenAuthentication;\n     }\n \n+    /**\n+     * This method get all invalidated JWT token in the cache and distributes them to instance of Gateway with name\n+     * in argument toInstanceId. If instance cannot be find it return false. A notification can throw an runtime\n+     * exception. In all other cases all invalidated token are distributed and method returns true.\n+     *\n+     * @param toInstanceId instanceId of Gateway where invalidated JWT token should be sent\n+     * @return true if all token were sent, otherwise false\n+     */\n+    public boolean distributeInvalidate(String toInstanceId) {\n+        final Application application = discoveryClient.getApplication(\"gateway\");", "originalCommit": "4c5a0c01d98905f3a5a3d9dbccd61baa96d25c40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU5NjkzMA==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387596930", "bodyText": "all instances of \"gateway\" were changed", "author": "pj892031", "createdAt": "2020-03-04T11:07:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3OTQyNw=="}], "type": "inlineReview"}, {"oid": "2e1eadf530b60567050741336a8f01cccd4e0fca", "url": "https://github.com/zowe/api-layer/commit/2e1eadf530b60567050741336a8f01cccd4e0fca", "message": "using constants instant of literal \"gateway\"\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-04T11:14:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2MTQyMg==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387761422", "bodyText": "I think you can move\nRestTemplate restTemplate = mock(RestTemplate.class); MessageService messageService = mock(MessageService.class); GatewayNotifier gatewayNotifier = new GatewayNotifierSync(restTemplate, messageService);\nto the setup method since they are used by severals tests. Just for better readability of the tests", "author": "taban03", "createdAt": "2020-03-04T15:56:45Z", "path": "discovery-service/src/test/java/org/zowe/apiml/discovery/GatewayNotifierTest.java", "diffHunk": "@@ -134,4 +144,96 @@ public void testNotificationFailed() {\n         );\n     }\n \n+    @Test\n+    public void testDistributeInvalidatedCredentials() {\n+        InstanceInfo targetInstanceInfo = createInstanceInfo(\"host\", 1000, 1433);\n+        String targetInstanceId = targetInstanceInfo.getInstanceId();\n+\n+        InstanceInfo gatewayInstance = createInstanceInfo(\"gateway\", 111, 123);\n+        String gatewayUrl = \"https://gateway:123/auth/distribute/\" + targetInstanceId;\n+\n+        RestTemplate restTemplate = mock(RestTemplate.class);\n+        MessageService messageService = mock(MessageService.class);\n+        GatewayNotifier gatewayNotifier = new GatewayNotifierSync(restTemplate, messageService);", "originalCommit": "2e1eadf530b60567050741336a8f01cccd4e0fca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEzMzYzMA==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r388133630", "bodyText": "done", "author": "pj892031", "createdAt": "2020-03-05T08:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2MTQyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2Nzk5Mw==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387767993", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGetAllRecords_MissingCache() {\n          \n          \n            \n                public void givenUnknownCacheName_whenGetAllRecords_thenThrowsException() {", "author": "taban03", "createdAt": "2020-03-04T16:06:10Z", "path": "common-service-core/src/test/java/org/zowe/apiml/util/CacheUtilsTest.java", "diffHunk": "@@ -91,4 +92,57 @@ public void testEvictSubset() {\n         verify(ehCache2, times(1)).remove(keys.get(3));\n     }\n \n+    @Test\n+    public void testGetAllRecords_MissingCache() {", "originalCommit": "2e1eadf530b60567050741336a8f01cccd4e0fca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEzMzY2Nw==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r388133667", "bodyText": "done", "author": "pj892031", "createdAt": "2020-03-05T08:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2Nzk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2OTgzOA==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387769838", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGetAllRecords_UnsupportedCacheManager() {\n          \n          \n            \n                public void givenUnsupportedCacheManager_whenGetAllRecords_thenThrowsException() {", "author": "taban03", "createdAt": "2020-03-04T16:08:53Z", "path": "common-service-core/src/test/java/org/zowe/apiml/util/CacheUtilsTest.java", "diffHunk": "@@ -91,4 +92,57 @@ public void testEvictSubset() {\n         verify(ehCache2, times(1)).remove(keys.get(3));\n     }\n \n+    @Test\n+    public void testGetAllRecords_MissingCache() {\n+        CacheManager cacheManager = mock(CacheManager.class);\n+        IllegalArgumentException iae = Assertions.assertThrows(IllegalArgumentException.class, () -> {\n+            CacheUtils.getAllRecords(cacheManager, \"unknownCacheName\");\n+        });\n+        assertEquals(\"Unknown cache unknownCacheName\", iae.getMessage());\n+    }\n+\n+    @Test\n+    public void testGetAllRecords_UnsupportedCacheManager() {", "originalCommit": "2e1eadf530b60567050741336a8f01cccd4e0fca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEzMzcwMA==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r388133700", "bodyText": "done", "author": "pj892031", "createdAt": "2020-03-05T08:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2OTgzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3MzUxMg==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r387773512", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGetAllRecords_Success() {\n          \n          \n            \n                public void givenValidCacheManager_whenGetAllRecords_thenReadAllStoredRecords() {", "author": "taban03", "createdAt": "2020-03-04T16:14:27Z", "path": "common-service-core/src/test/java/org/zowe/apiml/util/CacheUtilsTest.java", "diffHunk": "@@ -91,4 +92,57 @@ public void testEvictSubset() {\n         verify(ehCache2, times(1)).remove(keys.get(3));\n     }\n \n+    @Test\n+    public void testGetAllRecords_MissingCache() {\n+        CacheManager cacheManager = mock(CacheManager.class);\n+        IllegalArgumentException iae = Assertions.assertThrows(IllegalArgumentException.class, () -> {\n+            CacheUtils.getAllRecords(cacheManager, \"unknownCacheName\");\n+        });\n+        assertEquals(\"Unknown cache unknownCacheName\", iae.getMessage());\n+    }\n+\n+    @Test\n+    public void testGetAllRecords_UnsupportedCacheManager() {\n+        CacheManager cacheManager = mock(CacheManager.class);\n+        Cache cache = mock(Cache.class);\n+        when(cacheManager.getCache(\"knownCacheName\")).thenReturn(cache);\n+        IllegalArgumentException iae = Assertions.assertThrows(IllegalArgumentException.class, () -> {\n+            CacheUtils.getAllRecords(cacheManager, \"knownCacheName\");\n+        });\n+        assertTrue(iae.getMessage().startsWith(\"Unsupported type of cache : \"));\n+    }\n+\n+    private Map<Object, Element> convert(Map<Integer, String> in) {\n+        Map<Object, Element> out = new HashMap<>();\n+        for (Map.Entry<Integer, String> entry : in.entrySet()) {\n+            out.put(entry.getKey(), new Element(entry.getKey(), entry.getValue()));\n+        }\n+        return out;\n+    }\n+\n+    @Test\n+    public void testGetAllRecords_Success() {", "originalCommit": "2e1eadf530b60567050741336a8f01cccd4e0fca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEzMzc0NQ==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r388133745", "bodyText": "done", "author": "pj892031", "createdAt": "2020-03-05T08:13:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3MzUxMg=="}], "type": "inlineReview"}, {"oid": "f716aab628d2808795d8275ee70ad581314baaf6", "url": "https://github.com/zowe/api-layer/commit/f716aab628d2808795d8275ee70ad581314baaf6", "message": "minor changes by review\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-05T08:12:33Z", "type": "commit"}, {"oid": "a29dd5d3fd83db260f03e4168d98819a129b3c04", "url": "https://github.com/zowe/api-layer/commit/a29dd5d3fd83db260f03e4168d98819a129b3c04", "message": "remove sonar bugs\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-05T08:29:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0NTkyMg==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r388145922", "bodyText": "We should use externalized messages for warn, info and error.", "author": "JirkaAichler", "createdAt": "2020-03-05T08:41:04Z", "path": "discovery-service/src/main/java/org/zowe/apiml/discovery/GatewayNotifier.java", "diffHunk": "@@ -185,6 +185,9 @@ public void run() {\n                     notification.process();\n                 }\n             } catch (InterruptedException e) {\n+                log.warn(\"Thread for Gateway notification was interrupted\", e);", "originalCommit": "a29dd5d3fd83db260f03e4168d98819a129b3c04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE1Njg5OQ==", "url": "https://github.com/zowe/api-layer/pull/538#discussion_r388156899", "bodyText": "done", "author": "pj892031", "createdAt": "2020-03-05T09:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0NTkyMg=="}], "type": "inlineReview"}, {"oid": "201e86027a3cb4c672b84565759029a28fbb5e6b", "url": "https://github.com/zowe/api-layer/commit/201e86027a3cb4c672b84565759029a28fbb5e6b", "message": "decrease log level for interruption of thread in GatewayNotifier - no reason to show to user\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-05T09:02:32Z", "type": "commit"}, {"oid": "a7f650b5a3bf847edd7399852e0512f5df8879ea", "url": "https://github.com/zowe/api-layer/commit/a7f650b5a3bf847edd7399852e0512f5df8879ea", "message": "fix test, reason was removing Sonar issues before\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-10T11:14:23Z", "type": "commit"}, {"oid": "d99ea470f3c42999af3174d2a9decdc91beafaf4", "url": "https://github.com/zowe/api-layer/commit/d99ea470f3c42999af3174d2a9decdc91beafaf4", "message": "Merge remote-tracking branch 'remotes/origin/master' into protectors/gatewayNotifier\n\n# Conflicts:\n#\tdiscovery-service/src/main/java/org/zowe/apiml/discovery/GatewayNotifier.java\n#\tgateway-service/src/main/java/org/zowe/apiml/gateway/security/service/AuthenticationService.java\n#\tgateway-service/src/main/java/org/zowe/apiml/gateway/security/service/schema/ZosmfScheme.java\n#\tgateway-service/src/test/java/org/zowe/apiml/gateway/security/query/SuccessfulQueryHandlerTest.java\n#\tgateway-service/src/test/java/org/zowe/apiml/gateway/security/service/AuthenticationServiceTest.java", "committedDate": "2020-03-10T15:32:43Z", "type": "commit"}, {"oid": "85ee4a401d2a296680fbf29dd303baeabafb8f23", "url": "https://github.com/zowe/api-layer/commit/85ee4a401d2a296680fbf29dd303baeabafb8f23", "message": "fix of merge\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-10T15:55:23Z", "type": "commit"}, {"oid": "a3ed5e8b2c36493333306423bf4207b1513c8ad4", "url": "https://github.com/zowe/api-layer/commit/a3ed5e8b2c36493333306423bf4207b1513c8ad4", "message": "remove unused method\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>", "committedDate": "2020-03-10T16:22:58Z", "type": "commit"}, {"oid": "4f2a8cc0e53e5dce2c361bf084ac52d9282e9b92", "url": "https://github.com/zowe/api-layer/commit/4f2a8cc0e53e5dce2c361bf084ac52d9282e9b92", "message": "Merge branch 'master' into protectors/gatewayNotifier", "committedDate": "2020-03-11T14:31:52Z", "type": "commit"}, {"oid": "00316b0dde79efbd1dae92cb64469aef987662b4", "url": "https://github.com/zowe/api-layer/commit/00316b0dde79efbd1dae92cb64469aef987662b4", "message": "Merge branch 'master' into protectors/gatewayNotifier", "committedDate": "2020-03-12T14:02:16Z", "type": "commit"}]}