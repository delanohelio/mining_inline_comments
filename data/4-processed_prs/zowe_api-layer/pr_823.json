{"pr_number": 823, "pr_title": "Implement logout functionality in Zaas Client", "pr_createdAt": "2020-09-10T07:22:32Z", "pr_url": "https://github.com/zowe/api-layer/pull/823", "timeline": [{"oid": "3d0761f46d8df06bf32611444181dc3ee35671c4", "url": "https://github.com/zowe/api-layer/commit/3d0761f46d8df06bf32611444181dc3ee35671c4", "message": "Implement logout functionality in Zaas Client (WIP)\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "commit"}, {"oid": "43d182f6c21b344df4326f3600882848551ef39d", "url": "https://github.com/zowe/api-layer/commit/43d182f6c21b344df4326f3600882848551ef39d", "message": "Check for the token to be present (WIP)\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "commit"}, {"oid": "c2f046b929263aa3056caaefbaeaf54bcf19d3b8", "url": "https://github.com/zowe/api-layer/commit/c2f046b929263aa3056caaefbaeaf54bcf19d3b8", "message": "Fix problems with error handling\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "commit"}, {"oid": "ad8c9c6472afb77fd0a44ad0e5fc6e3a38c4df27", "url": "https://github.com/zowe/api-layer/commit/ad8c9c6472afb77fd0a44ad0e5fc6e3a38c4df27", "message": "Fix return code in the gw logout\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "commit"}, {"oid": "22fabf606d8c105d07226befa5ab621936dee4b9", "url": "https://github.com/zowe/api-layer/commit/22fabf606d8c105d07226befa5ab621936dee4b9", "message": "Add unit test\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "commit"}, {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4", "url": "https://github.com/zowe/api-layer/commit/b43c4fd19774144750575344aa73dafaf7342dd4", "message": "Add integration tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "commit"}, {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4", "url": "https://github.com/zowe/api-layer/commit/b43c4fd19774144750575344aa73dafaf7342dd4", "message": "Add integration tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:14:49Z", "type": "forcePushed"}, {"oid": "bfc0e6b518bf905ae464babd6724de705d277a87", "url": "https://github.com/zowe/api-layer/commit/bfc0e6b518bf905ae464babd6724de705d277a87", "message": "Update dev documentation\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:27:16Z", "type": "commit"}, {"oid": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "url": "https://github.com/zowe/api-layer/commit/73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "message": "Small fix on doc\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-14T09:37:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0OTMxMg==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487749312", "bodyText": "This constructor is nowhere used.", "author": "achmelo", "createdAt": "2020-09-14T08:45:37Z", "path": "apiml-security-common/src/main/java/org/zowe/apiml/security/common/token/TokenFormatNotValidException.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.security.common.token;\n+\n+import org.springframework.security.core.AuthenticationException;\n+\n+/**\n+ * This exception is thrown in case the JWT token format provided during logout is not valid.\n+ */\n+public class TokenFormatNotValidException extends AuthenticationException {\n+\n+    public TokenFormatNotValidException(String msg) {\n+        super(msg);\n+    }\n+\n+    public TokenFormatNotValidException(String msg, Throwable t) {\n+        super(msg, t);\n+    }", "originalCommit": "bea7d8c3a64c71d5e82d44021a8eff9bd72d59c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc2MDAwNA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487760004", "bodyText": "Handle this exception properly.", "author": "achmelo", "createdAt": "2020-09-14T09:02:55Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -271,11 +274,27 @@ private CookieContentFilter cookieFilter() throws Exception {\n             PROTECTED_ENDPOINTS);\n     }\n \n+    /**\n+     * Handles the logout action by checking the validity of JWT token passed in the Cookie.\n+     * If present, the token will be invalidated.\n+     */\n     private LogoutHandler logoutHandler() {\n-        return (request, response, authentication) -> authenticationService.getJwtTokenFromRequest(request)\n-            .ifPresent(x ->\n-                authenticationService.invalidateJwtToken(x, true)\n-            );\n+        FailedAuthenticationHandler failure = handlerInitializer.getAuthenticationFailureHandler();\n+        return (request, response, authentication) -> {\n+            try {\n+                authenticationService.getJwtTokenFromRequestToLogout(request)\n+                    .ifPresent(x ->\n+                        authenticationService.invalidateJwtToken(x, true)\n+                    );\n+            }\n+            catch (TokenFormatNotValidException e) {\n+                try {\n+                    failure.onAuthenticationFailure(request, response, e);\n+                } catch (ServletException ex) {\n+                    ex.printStackTrace();\n+                }", "originalCommit": "bea7d8c3a64c71d5e82d44021a8eff9bd72d59c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MTgzOA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487771838", "bodyText": "use variable for \"/login\"", "author": "achmelo", "createdAt": "2020-09-14T09:22:40Z", "path": "integration-tests/src/test/java/org/zowe/apiml/discoverableclient/IntegratedZaasClientTest.java", "diffHunk": "@@ -59,7 +60,7 @@ void loginWithValidCredentials() {\n             .contentType(JSON)\n             .body(loginRequest)\n             .when()\n-            .post(ZAAS_CLIENT_URI)\n+            .post(ZAAS_CLIENT_URI + \"/login\")\n             .then()", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MjI1NQ==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487772255", "bodyText": "also for logout", "author": "achmelo", "createdAt": "2020-09-14T09:23:23Z", "path": "integration-tests/src/test/java/org/zowe/apiml/discoverableclient/IntegratedZaasClientTest.java", "diffHunk": "@@ -106,9 +107,37 @@ void invalidCredentials_OldPathFormat() {\n             .contentType(JSON)\n             .body(loginRequest)\n             .when()\n-            .post(ZAAS_CLIENT_URI_OLD_FORMAT)\n+            .post(ZAAS_CLIENT_URI_OLD_FORMAT + \"/login\")\n             .then()\n             .statusCode(is(SC_UNAUTHORIZED))\n             .body(is(\"Invalid username or password\"));\n     }\n+\n+    @Test\n+    void givenValidToken_whenCallingLogout_thenSuccess() {\n+        String token = \"validToken\";\n+\n+        given()\n+            .contentType(JSON)\n+            .cookie(COOKIE_NAME, generateToken())\n+            .when()\n+            .post(ZAAS_CLIENT_URI_OLD_FORMAT + \"/logout\")\n+            .then()\n+            .statusCode(is(SC_NO_CONTENT));\n+    }\n+\n+    @Test\n+    void givenInvalidToken_whenCallingLogout_thenFail() {\n+\n+        given()\n+            .contentType(JSON)\n+            .when()\n+            .post(ZAAS_CLIENT_URI_OLD_FORMAT + \"/logout\")\n+            .then()", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYyMw==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487774623", "bodyText": "Did you mention this in zaas-client-log-messages.yml ?", "author": "achmelo", "createdAt": "2020-09-14T09:27:17Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/exception/ZaasClientErrorCodes.java", "diffHunk": "@@ -13,6 +13,7 @@\n     EXPIRED_JWT_EXCEPTION(\"ZWEAS100E\", \"Token is expired for URL\", 401),\n     INVALID_AUTHENTICATION(\"ZWEAS120E\", \"Invalid username or password\", 401),\n     EMPTY_NULL_USERNAME_PASSWORD(\"ZWEAS121E\", \"Empty or null username or password values provided\", 400),\n+    INVALID_JWT_TOKEN(\"ZWEAS130E\", \"Invalid token provided\", 400),", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4NTY3MA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487885670", "bodyText": "Good catch!", "author": "taban03", "createdAt": "2020-09-14T12:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NjQzNA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487776434", "bodyText": "Handle exception or throw, not both.", "author": "achmelo", "createdAt": "2020-09-14T09:30:27Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasClientImpl.java", "diffHunk": "@@ -118,4 +120,17 @@ public String passTicket(String jwtToken, String applicationId) throws ZaasClien\n             throw e;\n         }\n     }\n+\n+    @Override\n+    public void logout(String jwtToken) throws IOException, ZaasConfigurationException, ZaasClientException {\n+        if (jwtToken == null || jwtToken.isEmpty() || !jwtToken.contains(TOKEN_PREFIX)) {\n+            throw new ZaasClientException(ZaasClientErrorCodes.INVALID_JWT_TOKEN);\n+        }\n+        try {\n+            tokens.logout(jwtToken);\n+        } catch (ZaasClientException e) {\n+            log.error(e.getErrorCode().toString());\n+            throw e;", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxNTM3OA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r488515378", "bodyText": "Done!", "author": "taban03", "createdAt": "2020-09-15T09:18:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NjQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5Mjc4Mw==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487792783", "bodyText": "Catch specific exception", "author": "achmelo", "createdAt": "2020-09-14T09:58:00Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "diffHunk": "@@ -135,6 +165,24 @@ private String extractToken(CloseableHttpResponse response) throws ZaasClientExc\n         return token;\n     }\n \n+    private void doRequest(Operation request) throws ZaasClientException {\n+        ClientWithResponse clientWithResponse = new ClientWithResponse();\n+        try {\n+\n+            clientWithResponse = request.request();\n+    }\n+        catch (ZaasClientException e) {\n+            throw e;\n+        }\n+        catch (IOException e) {\n+        throw new ZaasClientException(ZaasClientErrorCodes.SERVICE_UNAVAILABLE, e);\n+    } catch (Exception e) {\n+        throw new ZaasClientException(ZaasClientErrorCodes.INVALID_JWT_TOKEN, e);", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5ODI4Mw==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487798283", "bodyText": "What would happened if the token has valid prefix but is expired? or somehow not valid. Do we have tests for this?", "author": "achmelo", "createdAt": "2020-09-14T10:07:19Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -271,11 +274,27 @@ private CookieContentFilter cookieFilter() throws Exception {\n             PROTECTED_ENDPOINTS);\n     }\n \n+    /**\n+     * Handles the logout action by checking the validity of JWT token passed in the Cookie.\n+     * If present, the token will be invalidated.\n+     */\n     private LogoutHandler logoutHandler() {\n-        return (request, response, authentication) -> authenticationService.getJwtTokenFromRequest(request)\n-            .ifPresent(x ->\n-                authenticationService.invalidateJwtToken(x, true)\n-            );\n+        FailedAuthenticationHandler failure = handlerInitializer.getAuthenticationFailureHandler();\n+        return (request, response, authentication) -> {\n+            try {\n+                authenticationService.getJwtTokenFromRequestToLogout(request)\n+                    .ifPresent(x ->\n+                        authenticationService.invalidateJwtToken(x, true)\n+                    );", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0Mzc1OQ==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r488943759", "bodyText": "Will part of another story", "author": "taban03", "createdAt": "2020-09-15T20:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5ODI4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5OTYxNw==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487799617", "bodyText": "why do you post content here?", "author": "achmelo", "createdAt": "2020-09-14T10:09:41Z", "path": "discoverable-client/src/test/java/org/zowe/apiml/client/api/ZaasClientTestControllerTest.java", "diffHunk": "@@ -62,11 +64,32 @@ public void forwardLoginTest_invalidCredentials() throws Exception {\n             .thenThrow(new ZaasClientException(ZaasClientErrorCodes.INVALID_AUTHENTICATION));\n \n         this.mockMvc.perform(\n-            post(\"/api/v1/zaasClient\")\n+            post(\"/api/v1/zaasClient/login\")\n                 .content(mapper.writeValueAsString(loginRequest))\n                 .contentType(MediaType.APPLICATION_JSON_UTF8))\n             .andExpect(status().is(401))\n             .andExpect(content().string(\"Invalid username or password\"));\n     }\n \n+    @Test\n+    public void givenValidToken_whenPerformingLogout_thenSuccessLogout() throws Exception {\n+        LoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\n+        String token = \"token\";\n+        this.mockMvc.perform(\n+            post(\"/api/v1/zaasClient/logout\")\n+                .content(mapper.writeValueAsString(loginRequest))\n+                .header(\"Cookie\", TOKEN_PREFIX + \"=\" + token)\n+                .contentType(MediaType.APPLICATION_JSON_UTF8))\n+            .andExpect(status().is(204));\n+    }\n+\n+    @Test\n+    public void givenEmptyToken_whenPerformingLogout_thenFailLogout() throws Exception {\n+        LoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\n+        this.mockMvc.perform(\n+            post(\"/api/v1/zaasClient/logout\")\n+                .content(mapper.writeValueAsString(loginRequest))\n+                .contentType(MediaType.APPLICATION_JSON_UTF8))", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5OTk5NQ==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487799995", "bodyText": "any test with correct token prefix but invalid token?", "author": "achmelo", "createdAt": "2020-09-14T10:10:19Z", "path": "discoverable-client/src/test/java/org/zowe/apiml/client/api/ZaasClientTestControllerTest.java", "diffHunk": "@@ -62,11 +64,32 @@ public void forwardLoginTest_invalidCredentials() throws Exception {\n             .thenThrow(new ZaasClientException(ZaasClientErrorCodes.INVALID_AUTHENTICATION));\n \n         this.mockMvc.perform(\n-            post(\"/api/v1/zaasClient\")\n+            post(\"/api/v1/zaasClient/login\")\n                 .content(mapper.writeValueAsString(loginRequest))\n                 .contentType(MediaType.APPLICATION_JSON_UTF8))\n             .andExpect(status().is(401))\n             .andExpect(content().string(\"Invalid username or password\"));\n     }\n \n+    @Test\n+    public void givenValidToken_whenPerformingLogout_thenSuccessLogout() throws Exception {\n+        LoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\n+        String token = \"token\";\n+        this.mockMvc.perform(\n+            post(\"/api/v1/zaasClient/logout\")\n+                .content(mapper.writeValueAsString(loginRequest))\n+                .header(\"Cookie\", TOKEN_PREFIX + \"=\" + token)\n+                .contentType(MediaType.APPLICATION_JSON_UTF8))\n+            .andExpect(status().is(204));\n+    }\n+", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMDY2OA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487800668", "bodyText": "We want to logout only jwt from cookie? Why not from header?", "author": "achmelo", "createdAt": "2020-09-14T10:11:33Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -377,6 +375,21 @@ public QueryResponse parseJwtToken(String jwtToken) {\n         return fromCookie;\n     }\n \n+    /**\n+     * Get the JWT token from the cookie to process the logout\n+     *\n+     * @param request the http request\n+     * @throws TokenFormatNotValidException if the token format is not valid or the cookie is empty\n+     * @return the JWT token\n+     */\n+    public Optional<String> getJwtTokenFromRequestToLogout(HttpServletRequest request) {\n+        Optional<String> fromCookie = getJwtTokenFromCookie(request);", "originalCommit": "b43c4fd19774144750575344aa73dafaf7342dd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk1MTIwOA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487951208", "bodyText": "Because currently neither Gateway logout support Bearer token. I'm not sure whether it's something we want to have too", "author": "taban03", "createdAt": "2020-09-14T14:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMDY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3NzE2Mg==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487977162", "bodyText": "Ok, changed :)", "author": "taban03", "createdAt": "2020-09-14T14:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMDY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzMjUxMA==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487832510", "bodyText": "Why new method? This TokenFormatNotValidException could be used also for  getJwtTokenFromRequest", "author": "achmelo", "createdAt": "2020-09-14T11:11:56Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -377,6 +375,21 @@ public QueryResponse parseJwtToken(String jwtToken) {\n         return fromCookie;\n     }\n \n+    /**\n+     * Get the JWT token from the cookie to process the logout\n+     *\n+     * @param request the http request\n+     * @throws TokenFormatNotValidException if the token format is not valid or the cookie is empty\n+     * @return the JWT token\n+     */\n+    public Optional<String> getJwtTokenFromRequestToLogout(HttpServletRequest request) {", "originalCommit": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTI1Ng==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487835256", "bodyText": "why throws ioexception?", "author": "achmelo", "createdAt": "2020-09-14T11:17:26Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/TokenService.java", "diffHunk": "@@ -47,4 +50,15 @@\n      *      communication occurs, this exception with details is thrown.\n      */\n     ZaasToken query(String token) throws ZaasClientException;\n+\n+    /**\n+     * Invalidate the provided JWT token in order to perform logout.\n+     *\n+     * @param token JWT token to invalidate\n+     * @throws ZaasClientException If the provided token was expired, invalid or some other issue with respect to\n+     *      communication occurs, this exception with details is thrown.\n+     * @throws ZaasConfigurationException Wrapper for errors in HTTP client and TLS configuration.\n+     * @throws IOException\n+     */\n+    void logout(String token) throws ZaasClientException, IOException, ZaasConfigurationException;", "originalCommit": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTU1Mw==", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487835553", "bodyText": "why throws ioexception?", "author": "achmelo", "createdAt": "2020-09-14T11:18:03Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/ZaasClient.java", "diffHunk": "@@ -62,4 +64,15 @@\n      *      issue with respect to communication occurs, this exception with details is thrown.\n      */\n     String passTicket(String jwtToken, String applicationId) throws ZaasClientException, ZaasConfigurationException;\n+\n+    /**\n+     * Invalidate the provided JWT token in order to perform logout.\n+     *\n+     * @param token JWT token to invalidate\n+     * @throws ZaasClientException If the provided token was expired, invalid or some other issue with respect to\n+     *      communication occurs, this exception with details is thrown.\n+     * @throws ZaasConfigurationException Wrapper for errors in HTTP client and TLS configuration.\n+     * @throws IOException\n+     */\n+    void logout(String token) throws ZaasClientException, IOException, ZaasConfigurationException;", "originalCommit": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fd1a84f4d860acc253a6d3b4557b979a67167476", "url": "https://github.com/zowe/api-layer/commit/fd1a84f4d860acc253a6d3b4557b979a67167476", "message": "Address required changes (vol.1)\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-15T08:58:35Z", "type": "commit"}, {"oid": "02850f5cdc11c2d0d5b2578873d12aeb8469fc25", "url": "https://github.com/zowe/api-layer/commit/02850f5cdc11c2d0d5b2578873d12aeb8469fc25", "message": "clear cookie store for closeable client\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-09-15T11:36:55Z", "type": "commit"}, {"oid": "31bee11f57610db6aa46793de14dce48441cc3f3", "url": "https://github.com/zowe/api-layer/commit/31bee11f57610db6aa46793de14dce48441cc3f3", "message": "Fix part of unit tests and clean up\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-15T12:37:56Z", "type": "commit"}, {"oid": "9d56f05a2c2b1ee5b7ba013f5ffdadb3b931599d", "url": "https://github.com/zowe/api-layer/commit/9d56f05a2c2b1ee5b7ba013f5ffdadb3b931599d", "message": "refactor\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-09-15T12:57:30Z", "type": "commit"}, {"oid": "9fdbc54a22dbc60fbb68e3a7845a557983c344af", "url": "https://github.com/zowe/api-layer/commit/9fdbc54a22dbc60fbb68e3a7845a557983c344af", "message": "Refactor and new tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-15T15:13:33Z", "type": "commit"}, {"oid": "f5bfb1b82d3f186cb8fa1978919316debb7b995d", "url": "https://github.com/zowe/api-layer/commit/f5bfb1b82d3f186cb8fa1978919316debb7b995d", "message": "Specify exception to catch and fix style\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-15T15:39:24Z", "type": "commit"}, {"oid": "62d8d6f845306dd1fd5f52de778f3f6cd431d5b0", "url": "https://github.com/zowe/api-layer/commit/62d8d6f845306dd1fd5f52de778f3f6cd431d5b0", "message": "Merge branch 'master' into rip/GH808/zaas_client_logout", "committedDate": "2020-09-15T15:43:54Z", "type": "commit"}, {"oid": "88729bd396e9dee1f6f5ce9a252d18394a4afc3a", "url": "https://github.com/zowe/api-layer/commit/88729bd396e9dee1f6f5ce9a252d18394a4afc3a", "message": "Merge branch 'master' into rip/GH808/zaas_client_logout", "committedDate": "2020-09-16T07:09:42Z", "type": "commit"}, {"oid": "9659b04dcfeaf540595391c9246416add4b62ca0", "url": "https://github.com/zowe/api-layer/commit/9659b04dcfeaf540595391c9246416add4b62ca0", "message": "remove test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-09-16T07:32:26Z", "type": "commit"}, {"oid": "3fdebcf125fd39fe1b2f4ddf4f5d245b9f10d4b3", "url": "https://github.com/zowe/api-layer/commit/3fdebcf125fd39fe1b2f4ddf4f5d245b9f10d4b3", "message": "Fix error code\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-16T08:58:55Z", "type": "commit"}, {"oid": "b03d626eda774f5c94d2ebab8db88963e1f1ac71", "url": "https://github.com/zowe/api-layer/commit/b03d626eda774f5c94d2ebab8db88963e1f1ac71", "message": "refactor, logout handler tests\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-09-16T12:51:16Z", "type": "commit"}, {"oid": "b311b816f9aa4f221afd1e2f15c7635fee44f9f1", "url": "https://github.com/zowe/api-layer/commit/b311b816f9aa4f221afd1e2f15c7635fee44f9f1", "message": "Merge remote-tracking branch 'origin/rip/GH808/zaas_client_logout' into rip/GH808/zaas_client_logout", "committedDate": "2020-09-16T12:51:26Z", "type": "commit"}, {"oid": "4533c311322b01d7acf45a205c175053aa2419f2", "url": "https://github.com/zowe/api-layer/commit/4533c311322b01d7acf45a205c175053aa2419f2", "message": "Fix exception thrown and add unit test for ZaasJwtService\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-16T13:07:44Z", "type": "commit"}, {"oid": "00b63083dd11c540ed9b6741dd5f138b531fc6da", "url": "https://github.com/zowe/api-layer/commit/00b63083dd11c540ed9b6741dd5f138b531fc6da", "message": "exception handler coverage, remove rethrowing exceptions\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-09-16T13:13:57Z", "type": "commit"}, {"oid": "f57d82f42c3c9c87b8d89d6035ff93094b51c3d5", "url": "https://github.com/zowe/api-layer/commit/f57d82f42c3c9c87b8d89d6035ff93094b51c3d5", "message": "Merge remote-tracking branch 'origin/rip/GH808/zaas_client_logout' into rip/GH808/zaas_client_logout", "committedDate": "2020-09-16T13:18:15Z", "type": "commit"}, {"oid": "08e0e3844d1c72a9ac3a0d63b44d46b68c2534ef", "url": "https://github.com/zowe/api-layer/commit/08e0e3844d1c72a9ac3a0d63b44d46b68c2534ef", "message": "add more unit test for ZaasJwtService\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>", "committedDate": "2020-09-16T13:21:02Z", "type": "commit"}, {"oid": "9019417d5e62e2998b56d720cf6454511b7f7765", "url": "https://github.com/zowe/api-layer/commit/9019417d5e62e2998b56d720cf6454511b7f7765", "message": "throw correct exception in test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-09-16T13:31:56Z", "type": "commit"}, {"oid": "9e9325cc46be45e678512aefc673548e2fc29ca6", "url": "https://github.com/zowe/api-layer/commit/9e9325cc46be45e678512aefc673548e2fc29ca6", "message": "Merge remote-tracking branch 'origin/rip/GH808/zaas_client_logout' into rip/GH808/zaas_client_logout", "committedDate": "2020-09-16T13:32:08Z", "type": "commit"}, {"oid": "67fe49fcc0855915619404bee2904c2b96c9c610", "url": "https://github.com/zowe/api-layer/commit/67fe49fcc0855915619404bee2904c2b96c9c610", "message": "Merge branch 'master' into rip/GH808/zaas_client_logout", "committedDate": "2020-09-16T14:00:45Z", "type": "commit"}]}