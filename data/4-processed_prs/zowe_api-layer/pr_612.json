{"pr_number": 612, "pr_title": "Private/jb892003/zaas review", "pr_createdAt": "2020-04-21T07:18:47Z", "pr_url": "https://github.com/zowe/api-layer/pull/612", "timeline": [{"oid": "036fbaad4b7b4dac92aa2f538a2380c8fc184f37", "url": "https://github.com/zowe/api-layer/commit/036fbaad4b7b4dac92aa2f538a2380c8fc184f37", "message": "Hide non public classes.\nRemove duplicates from HttpsClient\nHide the configuration exception in one exception\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T06:59:37Z", "type": "commit"}, {"oid": "a8659e8e482b5c14f30ce82d711a00dde6185c60", "url": "https://github.com/zowe/api-layer/commit/a8659e8e482b5c14f30ce82d711a00dde6185c60", "message": "Reflect changes in the documentation.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T07:16:46Z", "type": "commit"}, {"oid": "c88dabd6ce9dacd82dad1384ac8d899855c820ba", "url": "https://github.com/zowe/api-layer/commit/c88dabd6ce9dacd82dad1384ac8d899855c820ba", "message": "Properly handle the closing of Client\nThrow configuration related exceptions\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T07:45:09Z", "type": "commit"}, {"oid": "6c6e060fa40a70d3d952ccfdb7e357ebd64880e2", "url": "https://github.com/zowe/api-layer/commit/6c6e060fa40a70d3d952ccfdb7e357ebd64880e2", "message": "The Configuration exceptions aren't created here.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T07:55:11Z", "type": "commit"}, {"oid": "79aaa91fd6d960f96511ae4e94a8511f1d040672", "url": "https://github.com/zowe/api-layer/commit/79aaa91fd6d960f96511ae4e94a8511f1d040672", "message": "Clean Style\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T08:18:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5NzE4OQ==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r411997189", "bodyText": "I think this method is useless no? you have already public String getMessage()", "author": "taban03", "createdAt": "2020-04-21T08:49:37Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/exception/ZaasConfigurationException.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.zaasclient.exception;\n+\n+public class ZaasConfigurationException extends Exception {\n+\n+    private final String errorCode;\n+    private final String errorMessage;\n+\n+    public ZaasConfigurationException(ZaasConfigurationErrorCodes code, String errorMessage) {\n+        super(errorMessage);\n+        this.errorCode = code.getId();\n+        this.errorMessage = code.getMessage();\n+    }\n+\n+    public ZaasConfigurationException(ZaasConfigurationErrorCodes code) {\n+        this.errorCode = code.getId();\n+        this.errorMessage = code.getMessage();\n+    }\n+\n+    public String getErrorCode() {\n+        return errorCode;\n+    }\n+\n+    public String getErrorMessage() {", "originalCommit": "79aaa91fd6d960f96511ae4e94a8511f1d040672", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4MTY2Nw==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r412081667", "bodyText": "I have updated the getMessage so that it is possible to get the super message as well as the specific error message", "author": "balhar-jakub", "createdAt": "2020-04-21T10:54:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5NzE4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNDY1Mw==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r412004653", "bodyText": "maximum of connections", "author": "taban03", "createdAt": "2020-04-21T08:59:19Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/HttpsClientProvider.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.zaasclient.service.internal;\n+\n+import lombok.AllArgsConstructor;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n+import org.apache.http.impl.client.BasicCookieStore;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+import org.zowe.apiml.zaasclient.config.ConfigProperties;\n+import org.zowe.apiml.zaasclient.exception.ZaasConfigurationErrorCodes;\n+import org.zowe.apiml.zaasclient.exception.ZaasConfigurationException;\n+\n+import javax.net.ssl.KeyManagerFactory;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManagerFactory;\n+import java.io.*;\n+import java.security.*;\n+import java.security.cert.CertificateException;\n+\n+@AllArgsConstructor\n+class HttpsClientProvider implements CloseableClientProvider {\n+    private final RequestConfig requestConfig;\n+\n+    private TrustManagerFactory tmf;\n+    private KeyManagerFactory kmf;\n+\n+    // KeyStore is initialized only in the case of PassTicket handling.\n+    //     It can be null, if passticket functionality not used.\n+    private final String keyStorePassword;\n+    private final String keyStoreType;\n+    private String keyStorePath;\n+\n+    public HttpsClientProvider(ConfigProperties configProperties) throws ZaasConfigurationException {\n+        this.requestConfig = this.buildCustomRequestConfig();\n+\n+        if (configProperties.getTrustStorePath() == null) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.TRUST_STORE_NOT_PROVIDED);\n+        }\n+\n+        initializeTrustManagerFactory(configProperties.getTrustStorePath(), configProperties.getTrustStoreType(), configProperties.getTrustStorePassword());\n+\n+        this.keyStorePath = configProperties.getKeyStorePath();\n+        this.keyStorePassword = configProperties.getKeyStorePassword();\n+        this.keyStoreType = configProperties.getKeyStoreType();\n+    }\n+\n+    @Override\n+    public CloseableHttpClient getHttpsClientWithTrustStore() throws ZaasConfigurationException {\n+        return sharedHttpClientConfiguration(getSSLContext())\n+            .build();\n+    }\n+\n+    @Override\n+    public CloseableHttpClient getHttpsClientWithTrustStore(BasicCookieStore cookieStore) throws ZaasConfigurationException {\n+        return sharedHttpClientConfiguration(getSSLContext())\n+            .setDefaultCookieStore(cookieStore)\n+            .build();\n+    }\n+\n+    @Override\n+    public CloseableHttpClient getHttpsClientWithKeyStoreAndTrustStore() throws ZaasConfigurationException {\n+        if (keyStorePath == null) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.KEY_STORE_NOT_PROVIDED);\n+        }\n+\n+        if (kmf == null) {\n+            initializeKeyStoreManagerFactory();\n+        }\n+\n+        return sharedHttpClientConfiguration(getSSLContext())\n+            .build();\n+    }\n+\n+    private void initializeTrustManagerFactory(String trustStorePath, String trustStoreType, String trustStorePassword)\n+        throws ZaasConfigurationException {\n+        try {\n+            tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+            KeyStore trustStore = KeyStore.getInstance(trustStoreType);\n+            File trustFile = new File(trustStorePath);\n+            trustStore.load(new FileInputStream(trustFile), trustStorePassword.toCharArray());\n+            tmf.init(trustStore);\n+        } catch (CertificateException | NoSuchAlgorithmException | KeyStoreException e) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.WRONG_CRYPTO_CONFIGURATION, e.getMessage());\n+        } catch (IOException e) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.TRUST_STORE_NOT_PROVIDED, e.getMessage());\n+        }\n+    }\n+\n+    private void initializeKeyStoreManagerFactory() throws ZaasConfigurationException {\n+        try {\n+            kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n+            KeyStore keyStore = KeyStore.getInstance(keyStoreType);\n+            File keyFile = new File(keyStorePath);\n+            keyStore.load(new FileInputStream(keyFile), keyStorePassword.toCharArray());\n+            kmf.init(keyStore, keyStorePassword.toCharArray());\n+        } catch (NoSuchAlgorithmException | CertificateException | UnrecoverableKeyException | KeyStoreException e) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.WRONG_CRYPTO_CONFIGURATION, e.getMessage());\n+        } catch (IOException e) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.IO_CONFIGURATION_ISSUE, e.getMessage());\n+        }\n+    }\n+\n+    private SSLContext getSSLContext() throws ZaasConfigurationException {\n+        try {\n+            SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n+            sslContext.init(\n+                kmf != null ? kmf.getKeyManagers() : null,\n+                tmf.getTrustManagers(),\n+                new SecureRandom()\n+            );\n+            return sslContext;\n+        } catch (NoSuchAlgorithmException | KeyManagementException e) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.WRONG_CRYPTO_CONFIGURATION, e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Create Http Configuration with defaults for maximum of conncetions and maximum of connections per route.", "originalCommit": "79aaa91fd6d960f96511ae4e94a8511f1d040672", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMjU0OA==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r412012548", "bodyText": "Aren't we using ZWEAC*** for Api Catalog messages? I think Security error codes related should have different message code. Also we may want to use the same length to be consistent with other messages, so 7 chars.. What do you think about it?", "author": "taban03", "createdAt": "2020-04-21T09:10:09Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/exception/ZaasConfigurationErrorCodes.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.zaasclient.exception;\n+\n+public enum ZaasConfigurationErrorCodes {\n+    TRUST_STORE_NOT_PROVIDED(\"ZWEACZ500E\", \"\"),", "originalCommit": "79aaa91fd6d960f96511ae4e94a8511f1d040672", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MzgwOQ==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r412053809", "bodyText": "Honestly I don't know, I was going with the messages based on the ZaasClientErrorCodes\nDo we have anywhere some documentation with respect to what codes we already used and what we can use?", "author": "balhar-jakub", "createdAt": "2020-04-21T10:09:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMjU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxOTY2NA==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r412019664", "bodyText": "Should you add a check for TrustManagerFactory tmf to be null as similar done for KeyManagerFactory kmf before initialising it?", "author": "taban03", "createdAt": "2020-04-21T09:20:17Z", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/HttpsClientProvider.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.zaasclient.service.internal;\n+\n+import lombok.AllArgsConstructor;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n+import org.apache.http.impl.client.BasicCookieStore;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+import org.zowe.apiml.zaasclient.config.ConfigProperties;\n+import org.zowe.apiml.zaasclient.exception.ZaasConfigurationErrorCodes;\n+import org.zowe.apiml.zaasclient.exception.ZaasConfigurationException;\n+\n+import javax.net.ssl.KeyManagerFactory;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManagerFactory;\n+import java.io.*;\n+import java.security.*;\n+import java.security.cert.CertificateException;\n+\n+@AllArgsConstructor\n+class HttpsClientProvider implements CloseableClientProvider {\n+    private final RequestConfig requestConfig;\n+\n+    private TrustManagerFactory tmf;\n+    private KeyManagerFactory kmf;\n+\n+    // KeyStore is initialized only in the case of PassTicket handling.\n+    //     It can be null, if passticket functionality not used.\n+    private final String keyStorePassword;\n+    private final String keyStoreType;\n+    private String keyStorePath;\n+\n+    public HttpsClientProvider(ConfigProperties configProperties) throws ZaasConfigurationException {\n+        this.requestConfig = this.buildCustomRequestConfig();\n+\n+        if (configProperties.getTrustStorePath() == null) {\n+            throw new ZaasConfigurationException(ZaasConfigurationErrorCodes.TRUST_STORE_NOT_PROVIDED);\n+        }\n+\n+        initializeTrustManagerFactory(configProperties.getTrustStorePath(), configProperties.getTrustStoreType(), configProperties.getTrustStorePassword());", "originalCommit": "79aaa91fd6d960f96511ae4e94a8511f1d040672", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1NDM4NA==", "url": "https://github.com/zowe/api-layer/pull/612#discussion_r412054384", "bodyText": "Nope, tmf is always valid and not null otherwise ZaasConfigurationException would have been thrown in constructor.\nI would do the same for kmf, but there it is used only in case of passtickets and as such could be ommited for a valid reason", "author": "balhar-jakub", "createdAt": "2020-04-21T10:10:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxOTY2NA=="}], "type": "inlineReview"}, {"oid": "0d3d5e636dd3af1bf4bf8278e0b12f0aa054ce44", "url": "https://github.com/zowe/api-layer/commit/0d3d5e636dd3af1bf4bf8278e0b12f0aa054ce44", "message": "Improve the testing coverage\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T10:55:52Z", "type": "commit"}, {"oid": "b8b4f6c3cdeac7c774d7f8318e10a1390913909d", "url": "https://github.com/zowe/api-layer/commit/b8b4f6c3cdeac7c774d7f8318e10a1390913909d", "message": "Pass Ticket client throws Configuration Exception.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T11:13:43Z", "type": "commit"}, {"oid": "dd0e7355c50949b002e86123d79c13de9763f8be", "url": "https://github.com/zowe/api-layer/commit/dd0e7355c50949b002e86123d79c13de9763f8be", "message": "Update the codes to one schema with ZWEAAC schema specific for ZAAS client\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T11:25:36Z", "type": "commit"}, {"oid": "e8161dca33dc3078ef1163c8d41244beb398b050", "url": "https://github.com/zowe/api-layer/commit/e8161dca33dc3078ef1163c8d41244beb398b050", "message": "Use ZWEAS as the default for errors from ZAAS Client\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T11:33:14Z", "type": "commit"}, {"oid": "d0e28559349cdcb9753dc3876712874da257840a", "url": "https://github.com/zowe/api-layer/commit/d0e28559349cdcb9753dc3876712874da257840a", "message": "Merge branch 'zaas-client' into private/jb892003/zaas_review\n\n# Conflicts:\n#\tzaas-client/src/main/java/org/zowe/apiml/zaasclient/exception/ZaasClientErrorCodes.java", "committedDate": "2020-04-21T11:43:00Z", "type": "commit"}, {"oid": "708c70db00f366f4bf471d9dc840458666282e54", "url": "https://github.com/zowe/api-layer/commit/708c70db00f366f4bf471d9dc840458666282e54", "message": "Provide the documentation for the possible error codes\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T14:23:26Z", "type": "commit"}, {"oid": "f5f261f41baeed0e9138a9936027cc974457a4e4", "url": "https://github.com/zowe/api-layer/commit/f5f261f41baeed0e9138a9936027cc974457a4e4", "message": "Update the codes in the tests.\nProperly throw Configuration exception in tests\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>", "committedDate": "2020-04-21T14:41:02Z", "type": "commit"}]}