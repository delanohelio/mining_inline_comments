{"pr_number": 4032, "pr_title": "Reworking Barcode widget", "pr_createdAt": "2020-08-19T20:46:48Z", "pr_url": "https://github.com/getodk/collect/pull/4032", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzMDg3MQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473330871", "bodyText": "Would be better to use isEmpty() here.", "author": "grzesiek2010", "createdAt": "2020-08-19T21:18:48Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -16,79 +16,74 @@\n \n import android.app.Activity;\n import android.content.Context;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import com.google.zxing.integration.android.IntentIntegrator;\n \n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.core.model.data.StringData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.jetbrains.annotations.Contract;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.activities.ScannerWithFlashlightActivity;\n+import org.odk.collect.android.databinding.BarcodeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n import org.odk.collect.android.listeners.PermissionListener;\n import org.odk.collect.android.utilities.CameraUtils;\n import org.odk.collect.android.utilities.ToastUtils;\n import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n import org.odk.collect.android.widgets.utilities.WaitingForDataRegistry;\n \n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.getCenteredAnswerTextView;\n-\n /**\n  * Widget that allows user to scan barcodes and add them to the form.\n- *\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver, ButtonClickListener {\n-    final Button getBarcodeButton;\n-    final TextView stringAnswer;\n+public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    BarcodeWidgetAnswerBinding binding;\n+\n     private final WaitingForDataRegistry waitingForDataRegistry;\n+    private final CameraUtils cameraUtils;\n \n-    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry) {\n+    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry, CameraUtils cameraUtils) {\n         super(context, questionDetails);\n         this.waitingForDataRegistry = waitingForDataRegistry;\n+        this.cameraUtils = cameraUtils;\n+    }\n \n-        getBarcodeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.get_barcode), getAnswerFontSize(), this);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = BarcodeWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-        stringAnswer = getCenteredAnswerTextView(getContext(), getAnswerFontSize());\n+        if (prompt.isReadOnly()) {\n+            binding.getBarcodeButton.setVisibility(GONE);\n+        } else {\n+            binding.getBarcodeButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.getBarcodeButton.setOnClickListener(v -> onButtonClick());\n+        }\n+        binding.barcodeAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        String s = questionDetails.getPrompt().getAnswerText();\n-        if (s != null) {\n-            getBarcodeButton.setText(getContext().getString(\n-                    R.string.replace_barcode));\n-            stringAnswer.setText(s);\n+        String stringAnswer = prompt.getAnswerText();\n+        if (stringAnswer != null && !stringAnswer.isEmpty()) {\n+            binding.getBarcodeButton.setText(getContext().getString(R.string.replace_barcode));\n+            binding.barcodeAnswerText.setText(stringAnswer);\n         }\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(getBarcodeButton);\n-        answerLayout.addView(stringAnswer);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n+\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void clearAnswer() {\n-        stringAnswer.setText(null);\n-        getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n-\n+        binding.barcodeAnswerText.setText(null);\n+        binding.getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n         widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        String s = stringAnswer.getText().toString();\n-        if (s.equals(\"\")) {\n-            return null;\n-        } else {\n-            return new StringData(s);\n-        }\n+        String stringAnswer = binding.barcodeAnswerText.getText().toString();\n+        return stringAnswer.equals(\"\") ? null : new StringData(stringAnswer);", "originalCommit": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzMzQyOQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473333429", "bodyText": "You could improve stripInvalidCharacters():\n\nYou can have one return using ternary operator\nThere is no need to use protected static here.", "author": "grzesiek2010", "createdAt": "2020-08-19T21:21:44Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -113,19 +107,18 @@ protected static String stripInvalidCharacters(String data) {\n ", "originalCommit": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzNTM4NA==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473335384", "bodyText": "Would be good to move this code to WidgetAppearanceUtils and have isFrontCamera() method there for example which you could then use here.", "author": "grzesiek2010", "createdAt": "2020-08-19T21:23:53Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -147,7 +140,7 @@ public void denied() {\n     private void setCameraIdIfNeeded(IntentIntegrator intent) {\n         String appearance = getFormEntryPrompt().getAppearanceHint();\n         if (appearance != null && appearance.equalsIgnoreCase(WidgetAppearanceUtils.FRONT)) {", "originalCommit": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzNzczOQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473337739", "bodyText": "I think just answer would be good name it is String so no need to duplicate it in its name.", "author": "grzesiek2010", "createdAt": "2020-08-19T21:26:23Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -16,79 +16,74 @@\n \n import android.app.Activity;\n import android.content.Context;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import com.google.zxing.integration.android.IntentIntegrator;\n \n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.core.model.data.StringData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.jetbrains.annotations.Contract;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.activities.ScannerWithFlashlightActivity;\n+import org.odk.collect.android.databinding.BarcodeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n import org.odk.collect.android.listeners.PermissionListener;\n import org.odk.collect.android.utilities.CameraUtils;\n import org.odk.collect.android.utilities.ToastUtils;\n import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n import org.odk.collect.android.widgets.utilities.WaitingForDataRegistry;\n \n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.getCenteredAnswerTextView;\n-\n /**\n  * Widget that allows user to scan barcodes and add them to the form.\n- *\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver, ButtonClickListener {\n-    final Button getBarcodeButton;\n-    final TextView stringAnswer;\n+public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    BarcodeWidgetAnswerBinding binding;\n+\n     private final WaitingForDataRegistry waitingForDataRegistry;\n+    private final CameraUtils cameraUtils;\n \n-    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry) {\n+    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry, CameraUtils cameraUtils) {\n         super(context, questionDetails);\n         this.waitingForDataRegistry = waitingForDataRegistry;\n+        this.cameraUtils = cameraUtils;\n+    }\n \n-        getBarcodeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.get_barcode), getAnswerFontSize(), this);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = BarcodeWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-        stringAnswer = getCenteredAnswerTextView(getContext(), getAnswerFontSize());\n+        if (prompt.isReadOnly()) {\n+            binding.getBarcodeButton.setVisibility(GONE);\n+        } else {\n+            binding.getBarcodeButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.getBarcodeButton.setOnClickListener(v -> onButtonClick());\n+        }\n+        binding.barcodeAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        String s = questionDetails.getPrompt().getAnswerText();\n-        if (s != null) {\n-            getBarcodeButton.setText(getContext().getString(\n-                    R.string.replace_barcode));\n-            stringAnswer.setText(s);\n+        String stringAnswer = prompt.getAnswerText();\n+        if (stringAnswer != null && !stringAnswer.isEmpty()) {\n+            binding.getBarcodeButton.setText(getContext().getString(R.string.replace_barcode));\n+            binding.barcodeAnswerText.setText(stringAnswer);\n         }\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(getBarcodeButton);\n-        answerLayout.addView(stringAnswer);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n+\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void clearAnswer() {\n-        stringAnswer.setText(null);\n-        getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n-\n+        binding.barcodeAnswerText.setText(null);\n+        binding.getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n         widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        String s = stringAnswer.getText().toString();\n-        if (s.equals(\"\")) {\n-            return null;\n-        } else {\n-            return new StringData(s);\n-        }\n+        String stringAnswer = binding.barcodeAnswerText.getText().toString();", "originalCommit": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzOTU5NQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473339595", "bodyText": "Please remove get_", "author": "grzesiek2010", "createdAt": "2020-08-19T21:28:34Z", "path": "collect_app/src/main/res/layout/barcode_widget_answer.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\">\n+\n+    <com.google.android.material.button.MaterialButton\n+        android:id=\"@+id/get_barcode_button\"", "originalCommit": "34809500122e9270b440ca996db43a36def9bd71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e8259469d9ee739fd61a8dc4047f09213ec661d7", "url": "https://github.com/getodk/collect/commit/e8259469d9ee739fd61a8dc4047f09213ec661d7", "message": "code refactor", "committedDate": "2020-08-19T22:10:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQzNTAxNQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473435015", "bodyText": "I didn't mean moving both those methods here. I expected just a small isFrontCameraAppearance() method that would return true/false based on appearance. Just something like isFlexAppearance or other methods below.", "author": "grzesiek2010", "createdAt": "2020-08-19T23:33:33Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/WidgetAppearanceUtils.java", "diffHunk": "@@ -82,7 +90,36 @@\n     public static final String URL                      = \"url\";\n     public static final String RATING                   = \"rating\";\n \n-    private WidgetAppearanceUtils() {\n+    public void setCameraIdIfNeeded(FormEntryPrompt prompt, IntentIntegrator intent) {", "originalCommit": "e8259469d9ee739fd61a8dc4047f09213ec661d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg3NDIyOQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473874229", "bodyText": "Oh alright. This makes more sense. Sorry for misinterpreting.", "author": "SaumiaSinghal", "createdAt": "2020-08-20T10:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQzNTAxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE3MDY3NA==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474170674", "bodyText": "Please add tests for this method in WidgetAppearanceUtilsTest would be also good to cover other already existed methods if you want.", "author": "grzesiek2010", "createdAt": "2020-08-20T17:57:00Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/WidgetAppearanceUtils.java", "diffHunk": "@@ -169,14 +170,18 @@ public static boolean isCompactAppearance(FormEntryPrompt prompt) {\n     }\n \n     public static boolean useThousandSeparator(FormEntryPrompt prompt) {\n-        return getSanitizedAppearanceHint(prompt).contains(WidgetAppearanceUtils.THOUSANDS_SEP);\n+        return getSanitizedAppearanceHint(prompt).contains(THOUSANDS_SEP);\n+    }\n+\n+    public static boolean isFrontCameraAppearance(FormEntryPrompt prompt) {", "originalCommit": "301d7eb3bc33b8c0e65b68a98c1136fa239e350e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwODcwMA==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474208700", "bodyText": "Yes sure!", "author": "SaumiaSinghal", "createdAt": "2020-08-20T19:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE3MDY3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE3NDIyOQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474174229", "bodyText": "Please remove this annotation, it's not something common in our codebase and i',m not fan of it.", "author": "grzesiek2010", "createdAt": "2020-08-20T18:03:36Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -97,35 +95,31 @@ public IAnswerData getAnswer() {\n     @Override\n     public void setBinaryData(Object answer) {\n         String response = (String) answer;\n-        stringAnswer.setText(stripInvalidCharacters(response));\n-\n+        binding.barcodeAnswerText.setText(stripInvalidCharacters(response));\n+        binding.barcodeButton.setText(getContext().getString(R.string.replace_barcode));\n         widgetValueChanged();\n     }\n \n     // Remove control characters, invisible characters and unused code points.\n     @Contract(\"null -> null; !null -> !null\")", "originalCommit": "301d7eb3bc33b8c0e65b68a98c1136fa239e350e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMjE5Mg==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474302192", "bodyText": "Please add more cases, you can have multiple in one test if they are related. Would be good to test lowercase appearances as well and different variation (mix of appearances).", "author": "grzesiek2010", "createdAt": "2020-08-20T22:15:34Z", "path": "collect_app/src/test/java/org/odk/collect/android/utilities/WidgetAppearanceUtilsTest.java", "diffHunk": "@@ -77,4 +103,89 @@ public void getNumberOfColumnsTest() {\n         when(formEntryPrompt.getAppearanceHint()).thenReturn(\"columns--10\");\n         assertEquals(1, WidgetAppearanceUtils.getNumberOfColumns(formEntryPrompt, null));\n     }\n+\n+    @Test\n+    public void isNoButtonsAppearance_returnsFalse_whenNoButtonsAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.isNoButtonsAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isNoButtonsAppearance_returnsTrue_whenNoButtonsAppearanceIsFound() {\n+        when(formEntryPrompt.getAppearanceHint()).thenReturn(\"NO-BUTTONS\");\n+        assertTrue(WidgetAppearanceUtils.isNoButtonsAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isCompactAppearance_returnsFalse_whenCompactAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.isCompactAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isCompactAppearance_returnsTrue_whenCompactAppearanceIsFound() {\n+        when(formEntryPrompt.getAppearanceHint()).thenReturn(\"COMPACT\");\n+        assertTrue(WidgetAppearanceUtils.isCompactAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void useThousandSeparator_returnsFalse_whenThousandSepAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.useThousandSeparator(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void useThousandSeparator_returnsTrue_whenThousandSepAppearanceIsFound() {\n+        when(formEntryPrompt.getAppearanceHint()).thenReturn(\"THOUSANDS-SEP\");\n+        assertTrue(WidgetAppearanceUtils.useThousandSeparator(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isFrontCameraAppearance_returnsFalse_whenFrontCameraAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.isFrontCameraAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isFrontCameraAppearance_returnsTrue_whenFrontAppearanceIsFound() {", "originalCommit": "5554bad1e18978195011c1b59e719ee5b1475a8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyNjgyMA==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474326820", "bodyText": "I was thinking about the same. Let me know if more unit tests are needed.", "author": "SaumiaSinghal", "createdAt": "2020-08-20T23:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMjE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MzQ3OQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474673479", "bodyText": "I think this comment should be moved to the interface. Now we keep it in several widgets instead. Could you improve it and remove from all widgets that have it?", "author": "grzesiek2010", "createdAt": "2020-08-21T12:45:32Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -16,79 +16,76 @@\n \n import android.app.Activity;\n import android.content.Context;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import com.google.zxing.integration.android.IntentIntegrator;\n \n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.core.model.data.StringData;\n-import org.jetbrains.annotations.Contract;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.activities.ScannerWithFlashlightActivity;\n+import org.odk.collect.android.databinding.BarcodeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n import org.odk.collect.android.listeners.PermissionListener;\n import org.odk.collect.android.utilities.CameraUtils;\n import org.odk.collect.android.utilities.ToastUtils;\n import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n import org.odk.collect.android.widgets.utilities.WaitingForDataRegistry;\n \n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.getCenteredAnswerTextView;\n+import static org.odk.collect.android.utilities.WidgetAppearanceUtils.FRONT;\n \n /**\n  * Widget that allows user to scan barcodes and add them to the form.\n- *\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */", "originalCommit": "d7feefaa6445229f55191d39f2e5fef30028a206", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcxNTI5Mw==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474715293", "bodyText": "Hi @grzesiek2010! Do you mean I should move the author tag to the Widget interface. It already has an author tag. Did you mean I should move this comment to QuestionWidget?", "author": "SaumiaSinghal", "createdAt": "2020-08-21T13:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MzQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk0NDQ1Nw==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474944457", "bodyText": "Sorry I added a comment in a wrong place I meant this comment https://github.com/getodk/collect/pull/4032/files#diff-8ca2a32aaf43e2c722374375f0c62ae4R92", "author": "grzesiek2010", "createdAt": "2020-08-21T20:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MzQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ5MDc1OA==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r475490758", "bodyText": "Hi @grzesiek2010! Sorry for asking again. Do you mean this comment?\n`/*\nCopyright 2018 Theodoros Tyrovouzis\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n`", "author": "SaumiaSinghal", "createdAt": "2020-08-24T10:09:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MzQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUwNjg5MQ==", "url": "https://github.com/getodk/collect/pull/4032#discussion_r475506891", "bodyText": "No, I meant this:\n/**\n* Allows answer to be set externally in {@link FormEntryActivity}.\n*/\n(line 91)\nwhich is placed in various widgets but it could be placed only in BinaryDataReceiver instead.", "author": "grzesiek2010", "createdAt": "2020-08-24T10:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MzQ3OQ=="}], "type": "inlineReview"}, {"oid": "45b58a63966c4b5fe04c1b7930601780240be673", "url": "https://github.com/getodk/collect/commit/45b58a63966c4b5fe04c1b7930601780240be673", "message": "add unit tests", "committedDate": "2020-09-08T06:23:16Z", "type": "commit"}, {"oid": "7fc6262d52fb900d093ccf66f9cb69a7f05def85", "url": "https://github.com/getodk/collect/commit/7fc6262d52fb900d093ccf66f9cb69a7f05def85", "message": "more unit tests", "committedDate": "2020-09-08T06:36:42Z", "type": "commit"}, {"oid": "544d3642f69e8439a460788725e0e360731af4dd", "url": "https://github.com/getodk/collect/commit/544d3642f69e8439a460788725e0e360731af4dd", "message": "create barcode_widget_answer.xml and code refactor", "committedDate": "2020-09-08T06:38:29Z", "type": "commit"}, {"oid": "38e030777a2f1ad51a6f43e2eb7ab9132d45c352", "url": "https://github.com/getodk/collect/commit/38e030777a2f1ad51a6f43e2eb7ab9132d45c352", "message": "update button label on setting data", "committedDate": "2020-09-08T06:38:33Z", "type": "commit"}, {"oid": "54fe75e7811e73f6a5f9959ac9fb52a4743cde9b", "url": "https://github.com/getodk/collect/commit/54fe75e7811e73f6a5f9959ac9fb52a4743cde9b", "message": "code refactor", "committedDate": "2020-09-08T06:56:25Z", "type": "commit"}, {"oid": "35ac2fa971da9067a47f8f138f0ee0b31011784a", "url": "https://github.com/getodk/collect/commit/35ac2fa971da9067a47f8f138f0ee0b31011784a", "message": "code refactor", "committedDate": "2020-09-08T07:39:24Z", "type": "commit"}, {"oid": "6df7ad365002cd512307183dbdc5f4e7707d6148", "url": "https://github.com/getodk/collect/commit/6df7ad365002cd512307183dbdc5f4e7707d6148", "message": "add unit tests for WidgetAppearanceUtils", "committedDate": "2020-09-08T07:39:28Z", "type": "commit"}, {"oid": "784446c1e9f1a60c920aa0bf1bddbe310e539cc1", "url": "https://github.com/getodk/collect/commit/784446c1e9f1a60c920aa0bf1bddbe310e539cc1", "message": "add more unit tests for WidgetAppearanceUtils class", "committedDate": "2020-09-08T07:39:28Z", "type": "commit"}, {"oid": "1799a153cee41af2be2adde416e962479030cc8f", "url": "https://github.com/getodk/collect/commit/1799a153cee41af2be2adde416e962479030cc8f", "message": "shift comment from widgets to BinaryDataReceiver", "committedDate": "2020-09-08T07:39:28Z", "type": "commit"}, {"oid": "1799a153cee41af2be2adde416e962479030cc8f", "url": "https://github.com/getodk/collect/commit/1799a153cee41af2be2adde416e962479030cc8f", "message": "shift comment from widgets to BinaryDataReceiver", "committedDate": "2020-09-08T07:39:28Z", "type": "forcePushed"}, {"oid": "3688a42dca215b3f2d27419378df316d92c215ed", "url": "https://github.com/getodk/collect/commit/3688a42dca215b3f2d27419378df316d92c215ed", "message": "fix pmd", "committedDate": "2020-09-08T08:06:39Z", "type": "commit"}]}