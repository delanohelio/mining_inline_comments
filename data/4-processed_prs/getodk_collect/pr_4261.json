{"pr_number": 4261, "pr_title": "Allow user to recover from multiple forms with same formid/version and prevent their future download", "pr_createdAt": "2020-12-02T19:49:58Z", "pr_url": "https://github.com/getodk/collect/pull/4261", "timeline": [{"oid": "e0339b741fbd87097773e91ea9abc6e1874b0c19", "url": "https://github.com/getodk/collect/commit/e0339b741fbd87097773e91ea9abc6e1874b0c19", "message": "Track attempts to download a form with same formid/version", "committedDate": "2020-12-02T19:56:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MTY2NA==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534451664", "bodyText": "I went back and forth on whether to localize the download message. I think it's uncommon enough that we don't need to. I've added analytics so that we can verify that claim. I also hope that if it is more common than I expect we'll hear from users on the forum and perhaps we'll choose to work on the wording. \"please send all data you have collected with the existing form and delete the data and blank form\" is admittedly awkward and I'm open to alternatives.", "author": "lognaturel", "createdAt": "2020-12-02T20:12:55Z", "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDownloader.java", "diffHunk": "@@ -40,19 +43,31 @@\n     private final String formsDirPath;\n     private final FormMetadataParser formMetadataParser;\n \n-    public ServerFormDownloader(FormSource formSource, FormsRepository formsRepository, File cacheDir, String formsDirPath, FormMetadataParser formMetadataParser) {\n+    private final Analytics analytics;\n+\n+    public ServerFormDownloader(FormSource formSource, FormsRepository formsRepository, File cacheDir, String formsDirPath, FormMetadataParser formMetadataParser, Analytics analytics) {\n         this.cacheDir = cacheDir;\n         this.formsDirPath = formsDirPath;\n         this.multiFormDownloader = new MultiFormDownloader(formsRepository, formSource);\n         this.formsRepository = formsRepository;\n         this.formMetadataParser = formMetadataParser;\n+\n+        this.analytics = analytics;\n     }\n \n     @Override\n     public void downloadForm(ServerFormDetails form, @Nullable ProgressReporter progressReporter, @Nullable Supplier<Boolean> isCancelled) throws FormDownloadException, InterruptedException {\n         Form formOnDevice = formsRepository.get(form.getFormId(), form.getFormVersion());\n-        if (formOnDevice != null && formOnDevice.isDeleted()) {\n-            formsRepository.restore(formOnDevice.getId());\n+        if (formOnDevice != null) {\n+            if (formOnDevice.isDeleted()) {\n+                formsRepository.restore(formOnDevice.getId());\n+            } else if (!(form.getHash().equals(formOnDevice.getMD5Hash()))) {\n+                String formIdentifier = formOnDevice.getDisplayName() + \" \" + formOnDevice.getId();\n+                String formIdHash = FileUtils.getMd5Hash(new ByteArrayInputStream(formIdentifier.getBytes()));\n+                analytics.logFormEvent(DOWNLOAD_SAME_FORMID_VERSION, formIdHash);\n+                throw new FormDownloadException(\"You've already downloaded a form with the same ID and version but with different contents. \" +", "originalCommit": "bd2225da4b76971bb912ab0e094995d9d96aeba1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzOTM3Mw==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535239373", "bodyText": "I think I'm happy not localizing the method and with the text but I think it'd be good to separate it out as a display concern here. Could we maybe add a type to FormDownloadException (or a subtype) that we can use to match on and then display the right message in more UI focused code?", "author": "seadowg", "createdAt": "2020-12-03T13:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MTY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MjIxMQ==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534452211", "bodyText": "I really wanted to update all this to use the instance/form repositories but it didn't feel worth the effort and risk at this time. I tried doing it for just this branch but there's a lot of code below that relies on having a formCursor so it becomes a lot to change.\nA lot of this code is really odd so hopefully we'll have a good context for revisiting it soon. For starters, it seems unexpected that every form goes into EncryptionUtils on finalization even if it doesn't specify encryption. Feels like that check should happen earlier.", "author": "lognaturel", "createdAt": "2020-12-02T20:13:54Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/EncryptionUtils.java", "diffHunk": "@@ -271,12 +271,9 @@ public static EncryptedFormInformation getEncryptedFormInformation(Uri uri,\n         Cursor formCursor = null;\n         try {\n             if (InstanceColumns.CONTENT_ITEM_TYPE.equals(cr.getType(uri))) {\n-                // chain back to the Form record...\n-                String[] selectionArgs = null;\n-                String selection = null;\n-                Cursor instanceCursor = null;\n-                try {\n-                    instanceCursor = cr.query(uri, null, null, null, null);\n+                String[] selectionArgs;\n+                String selection = FormsColumns.DELETED_DATE + \" IS NULL AND \" + FormsColumns.JR_FORM_ID + \" =? AND \";\n+                try (Cursor instanceCursor = cr.query(uri, null, null, null, null)) {", "originalCommit": "bd2225da4b76971bb912ab0e094995d9d96aeba1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1Mzg2OA==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534453868", "bodyText": "This just wasn't true. The dialog errored out and quit the form so this wasn't a warning and the first entry was never used. Also it's no longer true that the SQLite database needs to be touched directly.", "author": "lognaturel", "createdAt": "2020-12-02T20:16:49Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -594,46 +597,22 @@ private void loadFromIntent(Intent intent) {\n             }\n \n             instancePath = formInfo.getInstancePath();\n+            List<Form> candidateForms = formsRepository.getAll(formInfo.getFormId(), formInfo.getFormVersion());\n \n-            String jrFormId = formInfo.getFormId();\n-            String jrVersion = formInfo.getFormVersion();\n-\n-            String[] selectionArgs;\n-            String selection;\n-            if (jrVersion == null) {\n-                selectionArgs = new String[]{jrFormId};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \" IS NULL\";\n-            } else {\n-                selectionArgs = new String[]{jrFormId, jrVersion};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \"=?\";\n-            }\n-\n-            int formCount = FormsDaoHelper.getFormsCount(selection, selectionArgs);\n-            if (formCount < 1) {\n+            if (candidateForms.isEmpty()) {\n                 createErrorDialog(getString(\n                         R.string.parent_form_not_present,\n-                        jrFormId)\n-                                + ((jrVersion == null) ? \"\"\n-                                : \"\\n\"\n-                                + getString(R.string.version)\n-                                + \" \"\n-                                + jrVersion),\n+                        formInfo.getFormId())\n+                                + ((formInfo.getFormVersion() == null) ? \"\"\n+                                : \"\\n\" + getString(R.string.version) + \" \" + formInfo.getFormVersion()),\n                         EXIT);\n                 return;\n-            } else {\n-                formPath = FormsDaoHelper.getFormPath(selection, selectionArgs);\n-\n-                /**\n-                 * Still take the first entry, but warn that there are multiple rows. User will", "originalCommit": "bd2225da4b76971bb912ab0e094995d9d96aeba1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "84c373d803e5a7743c4802f2287e8cbb43e5067a", "url": "https://github.com/getodk/collect/commit/84c373d803e5a7743c4802f2287e8cbb43e5067a", "message": "Fix code style", "committedDate": "2020-12-02T22:21:36Z", "type": "forcePushed"}, {"oid": "b398e5970a0725b3a6a2ce0d2210eeaf03a28d50", "url": "https://github.com/getodk/collect/commit/b398e5970a0725b3a6a2ce0d2210eeaf03a28d50", "message": "Fix code style", "committedDate": "2020-12-02T22:24:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMzU4Mg==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534523582", "bodyText": "Creating a new FormsRepository here locally felt much better than trying to juggle more raw cursors.", "author": "lognaturel", "createdAt": "2020-12-02T22:26:39Z", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/EncryptionUtils.java", "diffHunk": "@@ -271,40 +272,32 @@ public static EncryptedFormInformation getEncryptedFormInformation(Uri uri,\n         Cursor formCursor = null;\n         try {\n             if (InstanceColumns.CONTENT_ITEM_TYPE.equals(cr.getType(uri))) {\n-                // chain back to the Form record...\n-                String[] selectionArgs = null;\n-                String selection = null;\n-                Cursor instanceCursor = null;\n-                try {\n-                    instanceCursor = cr.query(uri, null, null, null, null);\n+                String[] selectionArgs;\n+                String selection = FormsColumns.JR_FORM_ID + \" =? AND \";\n+                try (Cursor instanceCursor = cr.query(uri, null, null, null, null)) {\n                     if (instanceCursor.getCount() != 1) {\n                         String msg = TranslationHandler.getString(Collect.getInstance(), R.string.not_exactly_one_record_for_this_instance);\n                         Timber.e(msg);\n                         throw new EncryptionException(msg, null);\n                     }\n                     instanceCursor.moveToFirst();\n-                    String jrFormId = instanceCursor.getString(\n-                            instanceCursor.getColumnIndex(InstanceColumns.JR_FORM_ID));\n+                    formId = instanceCursor.getString(instanceCursor.getColumnIndex(InstanceColumns.JR_FORM_ID));\n                     int idxJrVersion = instanceCursor.getColumnIndex(InstanceColumns.JR_VERSION);\n+                    formVersion = instanceCursor.getString(idxJrVersion);\n                     if (!instanceCursor.isNull(idxJrVersion)) {\n-                        selectionArgs = new String[]{jrFormId, instanceCursor.getString(\n-                                idxJrVersion)};\n-                        selection = FormsColumns.JR_FORM_ID + \" =? AND \" + FormsColumns.JR_VERSION\n-                                + \"=?\";\n+                        selectionArgs = new String[]{formId, instanceCursor.getString(idxJrVersion)};\n+                        selection += FormsColumns.JR_VERSION + \"=?\";\n                     } else {\n-                        selectionArgs = new String[]{jrFormId};\n-                        selection = FormsColumns.JR_FORM_ID + \" =? AND \" + FormsColumns.JR_VERSION\n-                                + \" IS NULL\";\n-                    }\n-                } finally {\n-                    if (instanceCursor != null) {\n-                        instanceCursor.close();\n+                        selectionArgs = new String[]{formId};\n+                        selection += FormsColumns.JR_VERSION + \" IS NULL\";\n                     }\n                 }\n \n                 formCursor = new FormsDao().getFormsCursor(selection, selectionArgs);\n \n-                if (formCursor.getCount() != 1) {\n+                // OK to finalize with form definition that was soft-deleted. OK if there are multiple\n+                // forms with the same formid/version as long as only one is active (not deleted).\n+                if (formCursor.getCount() == 0 || new DatabaseFormsRepository().getAllNotDeleted(formId, formVersion).size() > 1) {", "originalCommit": "8d90c5518053e81b761dee2be51d7ebc7489c3ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNDEzMQ==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535234131", "bodyText": "So we can't just use FormsRepository#getAllNotDeleted because we want a different error message here?", "author": "seadowg", "createdAt": "2020-12-03T13:39:04Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -594,46 +597,22 @@ private void loadFromIntent(Intent intent) {\n             }\n \n             instancePath = formInfo.getInstancePath();\n+            List<Form> candidateForms = formsRepository.getAll(formInfo.getFormId(), formInfo.getFormVersion());\n \n-            String jrFormId = formInfo.getFormId();\n-            String jrVersion = formInfo.getFormVersion();\n-\n-            String[] selectionArgs;\n-            String selection;\n-            if (jrVersion == null) {\n-                selectionArgs = new String[]{jrFormId};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \" IS NULL\";\n-            } else {\n-                selectionArgs = new String[]{jrFormId, jrVersion};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \"=?\";\n-            }\n-\n-            int formCount = FormsDaoHelper.getFormsCount(selection, selectionArgs);\n-            if (formCount < 1) {\n+            if (candidateForms.size() < 1) {\n                 createErrorDialog(getString(\n                         R.string.parent_form_not_present,\n-                        jrFormId)\n-                                + ((jrVersion == null) ? \"\"\n-                                : \"\\n\"\n-                                + getString(R.string.version)\n-                                + \" \"\n-                                + jrVersion),\n+                        formInfo.getFormId())\n+                                + ((formInfo.getFormVersion() == null) ? \"\"\n+                                : \"\\n\" + getString(R.string.version) + \" \" + formInfo.getFormVersion()),\n                         EXIT);\n                 return;\n-            } else {\n-                formPath = FormsDaoHelper.getFormPath(selection, selectionArgs);\n-\n-                /**\n-                 * Still take the first entry, but warn that there are multiple rows. User will\n-                 * need to hand-edit the SQLite database to fix it.\n-                 */\n-                if (formCount > 1) {\n-                    createErrorDialog(getString(R.string.survey_multiple_forms_error), EXIT);\n-                    return;\n-                }\n+            } else if (candidateForms.stream().filter(f -> !f.isDeleted()).count() > 1) {", "originalCommit": "9e5c468367ace3112b2fc1436aed9fdccecebc63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQxODkyNw==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535418927", "bodyText": "(@seadowg and I talked about this but answering for posterity and to double check my thinking)\nThat's right -- the first error case is that there are no forms at all (deleted or not) that match. The second error case is if there are more than one non-deleted that match the formid/version. Basically:\n\nwe're happy to use a soft-deleted form if that's the only one that matches\nwe're happy to have formid/version matches as long as exactly one is non-deleted\n\nSo initially we need to fetch all forms including soft-deleted ones. Then I could have gone back to the db with getAllNotDeleted but filtering the list seemed simpler/more performant.", "author": "lognaturel", "createdAt": "2020-12-03T17:05:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNDEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNDQ2NA==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535234464", "bodyText": "Oh wow it feels like this is a big improvement. I'm excited to get this stuff out of the Activity...", "author": "seadowg", "createdAt": "2020-12-03T13:39:33Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -594,46 +597,22 @@ private void loadFromIntent(Intent intent) {\n             }\n \n             instancePath = formInfo.getInstancePath();\n+            List<Form> candidateForms = formsRepository.getAll(formInfo.getFormId(), formInfo.getFormVersion());", "originalCommit": "9e5c468367ace3112b2fc1436aed9fdccecebc63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNjQyNw==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535236427", "bodyText": "Hmmm I think we probably want to be more consistent here and make this a getBy... that returns a list. Maybe the methods that return a single item should be getOne... or findOne...?", "author": "seadowg", "createdAt": "2020-12-03T13:42:16Z", "path": "collect_app/src/main/java/org/odk/collect/android/forms/FormsRepository.java", "diffHunk": "@@ -12,6 +12,8 @@\n \n     List<Form> getAll();\n \n+    List<Form> getAll(String jrFormId, @Nullable String jrVersion);", "originalCommit": "9e5c468367ace3112b2fc1436aed9fdccecebc63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM3ODA3Mw==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535378073", "bodyText": "getAllByXYZ, getOneByXYZ, getPredicateByXYZ", "author": "lognaturel", "createdAt": "2020-12-03T16:18:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4MzQxMA==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535683410", "bodyText": "Thanks, this was a big improvement. Don't hesitate if you want to see more changes here to either add a commit or ask me. I think having a good interface will pay dividends, it was getting confusing in there.", "author": "lognaturel", "createdAt": "2020-12-03T22:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNjQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNzM2Ng==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535237366", "bodyText": "I think we should add tests for these new repo methods so we then know the fake and real implementation have consistent behaviours.", "author": "seadowg", "createdAt": "2020-12-03T13:43:35Z", "path": "collect_app/src/main/java/org/odk/collect/android/database/DatabaseFormsRepository.java", "diffHunk": "@@ -48,6 +48,15 @@ public DatabaseFormsRepository() {\n         }\n     }\n \n+    @Override\n+    public List<Form> getAll(String jrFormId, @Nullable String jrVersion) {", "originalCommit": "9e5c468367ace3112b2fc1436aed9fdccecebc63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NTIwNw==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535685207", "bodyText": "Thanks for the nudge, that's an improvement.", "author": "lognaturel", "createdAt": "2020-12-03T22:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNzM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI0NjY4Ng==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535246686", "bodyText": "Don't want to be too nitpicky about test names but just because this stuff is all kinda confusing I'm wondering if it should be _replacesForm or _doesNotDuplicateForm?", "author": "seadowg", "createdAt": "2020-12-03T13:56:36Z", "path": "collect_app/src/test/java/org/odk/collect/android/formmanagement/ServerFormDownloaderTest.java", "diffHunk": "@@ -283,6 +284,59 @@ public void whenFormIsSoftDeleted_unDeletesForm() throws Exception {\n         assertThat(formsRepository.get(1L).isDeleted(), is(false));\n     }\n \n+    @Test\n+    public void whenFormWithSameIdAndVersion_butDifferentContentsOnDevice_failsToDownload() throws Exception {\n+        Form form = buildForm(1L, \"form\", \"version\", getFormFilesPath(), \"contents1\").build();\n+        formsRepository.save(form);\n+\n+        ServerFormDetails serverFormDetails = new ServerFormDetails(\n+                form.getDisplayName(),\n+                \"http://downloadUrl\",\n+                null,\n+                form.getJrFormId(),\n+                form.getJrVersion(),\n+                \"differenthash\",\n+                false,\n+                true,\n+                null);\n+\n+        FormSource formSource = mock(FormSource.class);\n+        when(formSource.fetchForm(\"http://downloadUrl\")).thenReturn(new ByteArrayInputStream(\"foo\".getBytes()));\n+\n+        ServerFormDownloader downloader = new ServerFormDownloader(formSource, formsRepository, cacheDir, formsDir.getAbsolutePath(), new FormMetadataParser(ReferenceManager.instance()));\n+\n+        try {\n+            downloader.downloadForm(serverFormDetails, null, null);\n+            fail(\"Expected exception\");\n+        } catch (FormDownloadException e) {\n+            assertThat(e.getMessage(), notNullValue());\n+        }\n+    }\n+\n+    @Test\n+    public void whenFormWithSameIdAndVersion_andSameContentsOnDevice_downloadsSuccessfully() throws Exception {", "originalCommit": "22d5af393a62d97ef8afb15eae8791a52775f07c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NDUyNg==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535684526", "bodyText": "I find naming really important so not nitpicking at all!", "author": "lognaturel", "createdAt": "2020-12-03T22:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI0NjY4Ng=="}], "type": "inlineReview"}, {"oid": "31f80374d3bb4e23f80c4d9e5039ea386970d146", "url": "https://github.com/getodk/collect/commit/31f80374d3bb4e23f80c4d9e5039ea386970d146", "message": "Filter out soft deleted forms when finalizing instance", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "2a8ab38b7d6b3e49e898cd8d99549e77631e2abd", "url": "https://github.com/getodk/collect/commit/2a8ab38b7d6b3e49e898cd8d99549e77631e2abd", "message": "Filter out soft deleted forms when loading instance", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "c59d6138dfbc37330aecc2816c1e4d4ecb11e085", "url": "https://github.com/getodk/collect/commit/c59d6138dfbc37330aecc2816c1e4d4ecb11e085", "message": "Prevent download of form with same formid/version but different contents", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "0166e266dbc8fe2fdeb24c1aa75d740378f1c295", "url": "https://github.com/getodk/collect/commit/0166e266dbc8fe2fdeb24c1aa75d740378f1c295", "message": "Hard delete form with duplicate formid/version", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "8d105b915534c1309b6ec505379ebb6097fd50c2", "url": "https://github.com/getodk/collect/commit/8d105b915534c1309b6ec505379ebb6097fd50c2", "message": "Track attempts to download a form with same formid/version", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "066da6060c26cf934cea35095cea99ba99076249", "url": "https://github.com/getodk/collect/commit/066da6060c26cf934cea35095cea99ba99076249", "message": "Fix code style", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "63858ab17b5e4e7cf794918ca69e6db9f98ba4ee", "url": "https://github.com/getodk/collect/commit/63858ab17b5e4e7cf794918ca69e6db9f98ba4ee", "message": "Ensure correct versions in test manifest", "committedDate": "2020-12-03T22:13:40Z", "type": "commit"}, {"oid": "6f6759eca9d687d56d2d95e2756e373ae843b5e4", "url": "https://github.com/getodk/collect/commit/6f6759eca9d687d56d2d95e2756e373ae843b5e4", "message": "Add tests for InstancesRepository", "committedDate": "2020-12-03T22:13:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NjkzNQ==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535686935", "bodyText": "This scares me a little bit. It's not in use by Collect code other than in tests and in the method that builds an Instance from a DB record which means the path is already sure to be the correct one. So I think it's safe. But we have to be really careful if we do use it that we pass in the correct path.\nThis mirrors what Form does. I suspect that this had to be changed by @seadowg to test the FormsRepository. Without this change, I always got a crash from this method call when trying to test InstancesRepository. This was not easy to hunt down.", "author": "lognaturel", "createdAt": "2020-12-03T22:22:42Z", "path": "collect_app/src/main/java/org/odk/collect/android/instances/Instance.java", "diffHunk": "@@ -91,7 +91,7 @@ public Builder canEditWhenComplete(boolean canEditWhenComplete) {\n         }\n \n         public Builder instanceFilePath(String instanceFilePath) {\n-            this.instanceFilePath = new StoragePathProvider().getInstanceDbPath(instanceFilePath);\n+            this.instanceFilePath = instanceFilePath;", "originalCommit": "6f6759eca9d687d56d2d95e2756e373ae843b5e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "92eb8a453e9c5d46f5a468e4a053d87dd998f1a1", "url": "https://github.com/getodk/collect/commit/92eb8a453e9c5d46f5a468e4a053d87dd998f1a1", "message": "Add tests for InstancesRepository", "committedDate": "2020-12-03T22:24:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MDA3OA==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535690078", "bodyText": "Note: there isn't an easy way to show this message in \"match exactly\" mode as far as I can tell because the FormDownloadException gets converted to a generic FormSourceException. I think those two should probably be consolidated at some point but now didn't feel like the right time.", "author": "lognaturel", "createdAt": "2020-12-03T22:28:49Z", "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoUpdateTaskSpec.java", "diffHunk": "@@ -86,7 +87,7 @@\n                                         formDownloader.downloadForm(serverFormDetails, null, null);\n                                         results.put(serverFormDetails, TranslationHandler.getString(context, R.string.success));\n                                     } catch (FormDownloadException e) {\n-                                        results.put(serverFormDetails, TranslationHandler.getString(context, R.string.failure));\n+                                        results.put(serverFormDetails, new FormDownloadExceptionMapper(context).getMessage(e));", "originalCommit": "67ac1be1e2a501b57228fb1d48a0960d110fb59d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MTIzOA==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535691238", "bodyText": "I have no idea why these values ended up being named jrFormId and jrVersion. The irony is that JavaRosa actually has no concept of them, they are only meaningful at the Collect level. They're clearly an ODK form spec thing at least at this point and the jr prefix is confusing.", "author": "lognaturel", "createdAt": "2020-12-03T22:31:02Z", "path": "collect_app/src/test/java/org/odk/collect/android/support/FormUtils.java", "diffHunk": "@@ -28,12 +28,12 @@ public static String createXForm(String id, String version) {\n                 \"</h:html>\";\n     }\n \n-    public static Form.Builder buildForm(long id, String jrFormId, String jrVersion, String formFilesPath) {\n-        return buildForm(id, jrFormId, jrVersion, formFilesPath, \"blah\");\n+    public static Form.Builder buildForm(long id, String formId, String version, String formFilesPath) {", "originalCommit": "a002168db27e0b3d5f80659dfd76f612849f1fc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MTQxMg==", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535691412", "bodyText": "This is so that we can represent the case where there are two forms with the same id and version.", "author": "lognaturel", "createdAt": "2020-12-03T22:31:22Z", "path": "collect_app/src/test/java/org/odk/collect/android/support/FormUtils.java", "diffHunk": "@@ -28,12 +28,12 @@ public static String createXForm(String id, String version) {\n                 \"</h:html>\";\n     }\n \n-    public static Form.Builder buildForm(long id, String jrFormId, String jrVersion, String formFilesPath) {\n-        return buildForm(id, jrFormId, jrVersion, formFilesPath, \"blah\");\n+    public static Form.Builder buildForm(long id, String formId, String version, String formFilesPath) {\n+        return buildForm(id, formId, version, formFilesPath, \"blah\");\n     }\n \n-    public static Form.Builder buildForm(long id, String jrFormId, String jrVersion, String formFilesPath, String xform) {\n-        String fileName = jrFormId + \"-\" + jrVersion;\n+    public static Form.Builder buildForm(long id, String formId, String version, String formFilesPath, String xform) {\n+        String fileName = formId + \"-\" + version + \"-\" + Math.random();", "originalCommit": "a002168db27e0b3d5f80659dfd76f612849f1fc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0fabbdf766211f96e2e9c5f5582d37252e8719cc", "url": "https://github.com/getodk/collect/commit/0fabbdf766211f96e2e9c5f5582d37252e8719cc", "message": "Move error message concerns out of ServerFormDownloader", "committedDate": "2020-12-03T22:43:48Z", "type": "commit"}, {"oid": "e2b9d221e69c8322cb848af77c2598c702ee9daf", "url": "https://github.com/getodk/collect/commit/e2b9d221e69c8322cb848af77c2598c702ee9daf", "message": "Standardize repository interfaces", "committedDate": "2020-12-03T22:43:49Z", "type": "commit"}, {"oid": "279b5942382c40dac666d03b8c4a3433d57606b7", "url": "https://github.com/getodk/collect/commit/279b5942382c40dac666d03b8c4a3433d57606b7", "message": "Test new FormsRepository methods", "committedDate": "2020-12-03T22:43:49Z", "type": "commit"}, {"oid": "23d2ff7c802eff44a348584832abccc5be2eae8f", "url": "https://github.com/getodk/collect/commit/23d2ff7c802eff44a348584832abccc5be2eae8f", "message": "Add tests for InstancesRepository", "committedDate": "2020-12-03T22:43:49Z", "type": "forcePushed"}, {"oid": "db3e24ab5a70872aa69fba8d2470e93a1e15253e", "url": "https://github.com/getodk/collect/commit/db3e24ab5a70872aa69fba8d2470e93a1e15253e", "message": "Add tests for InstancesRepository", "committedDate": "2020-12-04T00:29:23Z", "type": "commit"}, {"oid": "db3e24ab5a70872aa69fba8d2470e93a1e15253e", "url": "https://github.com/getodk/collect/commit/db3e24ab5a70872aa69fba8d2470e93a1e15253e", "message": "Add tests for InstancesRepository", "committedDate": "2020-12-04T00:29:23Z", "type": "forcePushed"}, {"oid": "59d98f3b5e9a1ec765dfdaf2d58965b18848697a", "url": "https://github.com/getodk/collect/commit/59d98f3b5e9a1ec765dfdaf2d58965b18848697a", "message": "Remove AllTestSuite", "committedDate": "2020-12-04T10:20:03Z", "type": "commit"}, {"oid": "c0081dd29be7ef40454c3bd80fb16a441dbd2c9b", "url": "https://github.com/getodk/collect/commit/c0081dd29be7ef40454c3bd80fb16a441dbd2c9b", "message": "Make sure to clear out db helper at the beginning of every Robolectric test", "committedDate": "2020-12-04T10:23:15Z", "type": "commit"}, {"oid": "3c3048505fb86ed2d08512179ce4bfb319703339", "url": "https://github.com/getodk/collect/commit/3c3048505fb86ed2d08512179ce4bfb319703339", "message": "Shouldn't need tests to teardown DB helpers now", "committedDate": "2020-12-04T10:42:19Z", "type": "commit"}, {"oid": "9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "url": "https://github.com/getodk/collect/commit/9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "message": "Ensure neither hash has md5: prefix", "committedDate": "2020-12-07T17:42:13Z", "type": "commit"}, {"oid": "9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "url": "https://github.com/getodk/collect/commit/9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "message": "Ensure neither hash has md5: prefix", "committedDate": "2020-12-07T17:42:13Z", "type": "forcePushed"}]}