{"pr_number": 4328, "pr_title": "Temporarily get global formController from navigation methods", "pr_createdAt": "2020-12-19T23:34:55Z", "pr_url": "https://github.com/getodk/collect/pull/4328", "timeline": [{"oid": "8bc2bf526e0f3c43ff88698dc9dde0020772e434", "url": "https://github.com/getodk/collect/commit/8bc2bf526e0f3c43ff88698dc9dde0020772e434", "message": "Temporarily pass in formController to navigation methods", "committedDate": "2020-12-19T23:41:40Z", "type": "forcePushed"}, {"oid": "ec2564380951652ec69d18a451faf29d609436ef", "url": "https://github.com/getodk/collect/commit/ec2564380951652ec69d18a451faf29d609436ef", "message": "Temporarily pass in formController to navigation methods", "committedDate": "2020-12-20T05:04:36Z", "type": "commit"}, {"oid": "ec2564380951652ec69d18a451faf29d609436ef", "url": "https://github.com/getodk/collect/commit/ec2564380951652ec69d18a451faf29d609436ef", "message": "Temporarily pass in formController to navigation methods", "committedDate": "2020-12-20T05:04:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMyMzkzMA==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546323930", "bodyText": "All the subsequent calls end up using the parameter value. I assume that the singleton form controller is more likely to be the true, authoritative one. It might be possible for the ViewModels' form controllers to be set but not the same as the singleton (though I really hope not).", "author": "lognaturel", "createdAt": "2020-12-20T05:19:33Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -125,7 +127,12 @@ public boolean canAddRepeat() {\n         }\n     }\n \n-    public void moveForward() {\n+    public void moveForward(FormController formController) {\n+        if (this.formController == null) {\n+            Timber.w(\"Null formController\");\n+            this.formController = formController;\n+        }\n+\n         try {\n             formController.stepToNextScreenEvent();", "originalCommit": "ec2564380951652ec69d18a451faf29d609436ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2NzI4Mw==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546367283", "bodyText": "I'm thinking instead of passing FormController in here we could just grab the singleton and then wrap that in an requireFormController method. That way we're not having to change the signature so hopefully not leaving anything around we'll want to take out later.\nIn my head, if this all worked nicely the structure would actually be pretty similar anyway:  the form load and the resulting FormController would be grabbed on demand from a cache anyway (but keyed/bucketed by the form entry session rather than an application singleton) so I could see us ending up with a structure where any method that needs it in the ViewModel just loads it in lazily.\nI'll have a go at adding that in and push to this, and then we can discuss later.", "author": "seadowg", "createdAt": "2020-12-20T12:02:58Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -125,7 +127,12 @@ public boolean canAddRepeat() {\n         }\n     }\n \n-    public void moveForward() {\n+    public void moveForward(FormController formController) {\n+        if (this.formController == null) {", "originalCommit": "ec2564380951652ec69d18a451faf29d609436ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2e762a704389fd1fe3e26ead6b6b8200529ec24c", "url": "https://github.com/getodk/collect/commit/2e762a704389fd1fe3e26ead6b6b8200529ec24c", "message": "Use FormController singleton instead of passing it in", "committedDate": "2020-12-20T12:18:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2OTI4Mg==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546369282", "bodyText": "I'm wondering if we want to add any more logging here. It'd be great to try and get as much detail as possible when this happens.", "author": "seadowg", "createdAt": "2020-12-20T12:19:16Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -168,6 +176,13 @@ private String getFormIdentifierHash() {\n         }\n     }\n \n+    private void ensureFormController() {\n+        if (this.formController == null) {\n+            Timber.w(\"Null formController\");", "originalCommit": "2e762a704389fd1fe3e26ead6b6b8200529ec24c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5dd9a8cccc04b68ab4eafe2f9e9105f396f1e8b6", "url": "https://github.com/getodk/collect/commit/5dd9a8cccc04b68ab4eafe2f9e9105f396f1e8b6", "message": "Add logging to confirm pendingActivityResult branch is the problem", "committedDate": "2020-12-20T14:36:57Z", "type": "commit"}, {"oid": "acab6deae09b229e1701b46250dc8756ba88efe9", "url": "https://github.com/getodk/collect/commit/acab6deae09b229e1701b46250dc8756ba88efe9", "message": "Add logging in onResume", "committedDate": "2020-12-20T16:35:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMzE3NA==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546403174", "bodyText": "I'm not sure if I like this...\nAs I understand it's added to avoid NPE's in cases where we forget to set formController right?\nso in collect if we call (in FormEntryActivity):\nCollect.getInstance().setFormController(formController);\nformControllerAvailable(formController);\n\nit's not needed. It's needed if we forget the second line?\nI'm not sure if it makes a lot of sense. We also might forget to call the first line then: (used in this method)\nCollect.getInstance().getFormController();\nwill return null.\nso it's still not a perfect way to avoid human mistakes. Additionally it makes the code more coupled.", "author": "grzesiek2010", "createdAt": "2020-12-20T17:05:05Z", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -168,6 +180,13 @@ private String getFormIdentifierHash() {\n         }\n     }\n \n+    private void ensureFormController() {", "originalCommit": "acab6deae09b229e1701b46250dc8756ba88efe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDU0Nw==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546404547", "bodyText": "Yeah agreed that it's not full proof and increases coupling. I think really the ViewModels should be able to grab the FormController from some shared component that doesn't just live on Collect. I could imagine there being some FormSessionRepository or something that lets the ViewModel get the FormController lazily (it's loaded if it's not already in memory for instance). I'd be really keen to discuss and try and put the beginnings of something like that (or something better) in #4286.\nI do think this is good enough to get out there and fix the crash as the change is small and isolated but yeah, lets not get used to it.", "author": "seadowg", "createdAt": "2020-12-20T17:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMzE3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDU5NQ==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546404595", "bodyText": "As you point out as well it doesn't prevent us making any further mistakes. I think that's a great indicator that we need to find something better.", "author": "seadowg", "createdAt": "2020-12-20T17:17:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMzE3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxOTEyMQ==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546419121", "bodyText": "Agreed with all this. @grzesiek2010 I wish we could just set the viewmodels\u2019 formController exactly where we set the App\u2019s but hopefully my explanation makes sense that we can\u2019t without further restructuring because of an extra precondition on formcontrolleravailable. This is definitely meant to be temporary.", "author": "lognaturel", "createdAt": "2020-12-20T19:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMzE3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDg5NA==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546404894", "bodyText": "Is this not really likely on opening a form as onResume would usually happen before loadingComplete (as the latter only gets called after the background task is finished)?", "author": "seadowg", "createdAt": "2020-12-20T17:20:19Z", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2100,6 +2100,10 @@ protected void onResume() {\n \n         FormController formController = getFormController();\n \n+        if (formController != null && !formEntryViewModel.isFormControllerSet()) {", "originalCommit": "acab6deae09b229e1701b46250dc8756ba88efe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxODg2OA==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546418868", "bodyText": "Prior to this crash I would have thought it impossible but I\u2019m not so sure anymore. Figure it can\u2019t hurt to confirm.", "author": "lognaturel", "createdAt": "2020-12-20T19:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQzMDI1Ng==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546430256", "bodyText": "Fair enough!", "author": "seadowg", "createdAt": "2020-12-20T20:11:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ0MDEzMg==", "url": "https://github.com/getodk/collect/pull/4328#discussion_r546440132", "bodyText": "I think we're going to see this happen after the log for Calling onActivityResult from loadingComplete. Because I think that branch is going to call onActivityResult, then return from loadingComplete and then onResume will be called.\nBasically I think we were honing in on manifestations of the same problem at different parts of the lifecycle. I guess we'll find out shortly!", "author": "lognaturel", "createdAt": "2020-12-20T21:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDg5NA=="}], "type": "inlineReview"}]}