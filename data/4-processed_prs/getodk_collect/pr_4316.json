{"pr_number": 4316, "pr_title": "Make sure external recording is blocked when internal recording in progress", "pr_createdAt": "2020-12-16T10:23:32Z", "pr_url": "https://github.com/getodk/collect/pull/4316", "timeline": [{"oid": "b718e6f6e0aef2b47e4789860ee9e9998e687bd1", "url": "https://github.com/getodk/collect/commit/b718e6f6e0aef2b47e4789860ee9e9998e687bd1", "message": "Make sure external is blocked when internal recording in progress", "committedDate": "2020-12-15T11:16:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE4MzM2MQ==", "url": "https://github.com/getodk/collect/pull/4316#discussion_r544183361", "bodyText": "I did consider creating an abstract class that both Internal... and External... could extend from with this implementation. However, I feel like the code here happens to be the same as opposed to being the same. It could very well be that internal recordings are blocked for different reasons than external ones down the line.\nCould totally understand if that seems wrong though!", "author": "seadowg", "createdAt": "2020-12-16T10:26:57Z", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java", "diffHunk": "@@ -24,13 +27,24 @@\n     private final ActivityAvailability activityAvailability;\n     private final WaitingForDataRegistry waitingForDataRegistry;\n     private final FormEntryViewModel formEntryViewModel;\n+    private final AudioRecorderViewModel audioRecorderViewModel;\n+    private final LifecycleOwner lifecycleOwner;\n \n-    public ExternalAppRecordingRequester(Activity activity, ActivityAvailability activityAvailability, WaitingForDataRegistry waitingForDataRegistry, PermissionUtils permissionUtils, FormEntryViewModel formEntryViewModel) {\n+    public ExternalAppRecordingRequester(Activity activity, ActivityAvailability activityAvailability, WaitingForDataRegistry waitingForDataRegistry, PermissionUtils permissionUtils, FormEntryViewModel formEntryViewModel, AudioRecorderViewModel audioRecorderViewModel, LifecycleOwner lifecycleOwner) {\n         this.activity = activity;\n         this.permissionUtils = permissionUtils;\n         this.activityAvailability = activityAvailability;\n         this.waitingForDataRegistry = waitingForDataRegistry;\n         this.formEntryViewModel = formEntryViewModel;\n+        this.audioRecorderViewModel = audioRecorderViewModel;\n+        this.lifecycleOwner = lifecycleOwner;\n+    }\n+\n+    @Override\n+    public void onIsRecordingBlocked(Consumer<Boolean> isRecordingBlockedListener) {\n+        audioRecorderViewModel.getCurrentSession().observe(lifecycleOwner, session -> {", "originalCommit": "b718e6f6e0aef2b47e4789860ee9e9998e687bd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ2Mjg0Mg==", "url": "https://github.com/getodk/collect/pull/4316#discussion_r544462842", "bodyText": "I'm not sure we're likely to add conditions but the principle makes sense to me and there isn't much more complexity one way or the other.", "author": "lognaturel", "createdAt": "2020-12-16T16:56:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE4MzM2MQ=="}], "type": "inlineReview"}]}