{"pr_number": 751, "pr_title": "Added support for configuring default accelerator strategies", "pr_createdAt": "2020-05-01T13:38:04Z", "pr_url": "https://github.com/senx/warp10-platform/pull/751", "timeline": [{"oid": "83020139d04c19ab0291fb87d2d520c341426a2b", "url": "https://github.com/senx/warp10-platform/commit/83020139d04c19ab0291fb87d2d520c341426a2b", "message": "Added support for configuring default accelerator strategies", "committedDate": "2020-05-01T13:37:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NjM1OA==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419946358", "bodyText": "This is not consistent with the other assignments where the value of the parameter is not checked.\nEither check the value everywhere or do not check here.", "author": "ftence", "createdAt": "2020-05-05T08:32:56Z", "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -215,8 +215,35 @@ public void handle(String target, Request baseRequest, HttpServletRequest req, H\n         postBoundaryParam = req.getParameter(Constants.HTTP_PARAM_POSTBOUNDARY);\n       }\n           \n-      boolean nocache = null != req.getParameter(StandaloneAcceleratedStoreClient.NOCACHE);\n-      boolean nopersist = null != req.getParameter(StandaloneAcceleratedStoreClient.NOPERSIST);\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultReadNocache();\n+      boolean forcedNocache = false;\n+      boolean nopersist = StandaloneAcceleratedStoreClient.getDefaultReadNopersist();\n+      boolean forcedNopersist = false;\n+      \n+      if (null != req.getParameter(StandaloneAcceleratedStoreClient.NOCACHE)) {\n+        forcedNocache = true;\n+        nocache = true;\n+      }\n+      if (null != req.getParameter(StandaloneAcceleratedStoreClient.CACHE)) {\n+        if (forcedNocache) {\n+          resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"Cannot specify both '\" + StandaloneAcceleratedStoreClient.NOCACHE + \"' and '\" + StandaloneAcceleratedStoreClient.CACHE + \"'.\");;\n+          return;\n+        }\n+        forcedNocache = true;\n+        nocache = false;\n+      }\n+      if (null != req.getParameter(StandaloneAcceleratedStoreClient.NOPERSIST)) {\n+        forcedNopersist = true;\n+        nopersist = !\"false\".equals(req.getParameter(StandaloneAcceleratedStoreClient.NOPERSIST));      ", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2MTM0OA==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419961348", "bodyText": "You should merge the 4 ifs to only have 2 ifs, removing in the process the forced* variables.\nAlso getting the default values is unnecessary.", "author": "ftence", "createdAt": "2020-05-05T08:59:19Z", "path": "warp10/src/main/java/io/warp10/script/functions/DELETE.java", "diffHunk": "@@ -160,17 +160,35 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       qsurl.append(\"=\");\n       qsurl.append(WarpURLEncoder.encode(selector, StandardCharsets.UTF_8));\n \n-      boolean nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n-      boolean nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n+      boolean forcedNocache = false;\n+      boolean forcedNopersist = false;\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultDeleteNocache();\n+      if (null != stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n+        forcedNocache = true;\n+        nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n+      }\n+      boolean nopersist = StandaloneAcceleratedStoreClient.getDefaultDeleteNopersist();\n+      if (null != stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST)) {\n+        forcedNopersist = true;\n+        nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n+      }\n \n-      if (nocache) {\n+      if (forcedNocache) {\n         qsurl.append(\"&\");\n-        qsurl.append(StandaloneAcceleratedStoreClient.NOCACHE);\n+        if (nocache) {\n+          qsurl.append(StandaloneAcceleratedStoreClient.NOCACHE);\n+        } else {\n+          qsurl.append(StandaloneAcceleratedStoreClient.CACHE);\n+        }\n       }\n       \n-      if (nopersist) {\n+      if (forcedNopersist) {\n         qsurl.append(\"&\");\n-        qsurl.append(StandaloneAcceleratedStoreClient.NOPERSIST);\n+        if (nopersist) {\n+          qsurl.append(StandaloneAcceleratedStoreClient.NOPERSIST);\n+        } else {\n+          qsurl.append(StandaloneAcceleratedStoreClient.PERSIST);\n+        }", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2NDU1Mg==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419964552", "bodyText": "Merge ifs, see comment for DELETE.", "author": "ftence", "createdAt": "2020-05-05T09:05:05Z", "path": "warp10/src/main/java/io/warp10/script/functions/UPDATE.java", "diffHunk": "@@ -183,15 +183,33 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       conn.setRequestProperty(Constants.getHeader(Configuration.HTTP_HEADER_UPDATE_TOKENX), token);\n       conn.setRequestProperty(\"Content-Type\", \"application/gzip\");\n       \n-      boolean nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n-      boolean nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultWriteNocache();\n+      boolean forcedNocache = false;\n+      if (null != stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n+        forcedNocache = true;\n+        nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n+      }\n+      boolean nopersist = StandaloneAcceleratedStoreClient.getDefaultWriteNopersist();\n+      boolean forcedNopersist = false;\n+      if (null != stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST)) {\n+        forcedNopersist = true;\n+        nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));        \n+      }\n       \n       String accel = \"\";\n-      if (nocache) {\n-        accel = accel + StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+      if (forcedNocache) {\n+        if (nocache) {\n+          accel = accel + StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+        } else {\n+          accel = accel + StandaloneAcceleratedStoreClient.CACHE + \" \";          \n+        }\n       }\n-      if (nopersist) {\n-        accel = accel + StandaloneAcceleratedStoreClient.NOPERSIST;\n+      if (forcedNopersist) {\n+        if (nopersist) {\n+          accel = accel + StandaloneAcceleratedStoreClient.NOPERSIST;\n+        } else {\n+          accel = accel + StandaloneAcceleratedStoreClient.PERSIST;          \n+        }        ", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2ODEyNw==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419968127", "bodyText": "Can thrown NPE if the configuration is not set and expecting default.", "author": "ftence", "createdAt": "2020-05-05T09:11:32Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneAcceleratedStoreClient.java", "diffHunk": "@@ -95,6 +104,44 @@ public StandaloneAcceleratedStoreClient(DirectoryClient dir, StoreClient persist\n       throw new RuntimeException(StandaloneAcceleratedStoreClient.class.getName() + \" can only be instantiated once.\");\n     }\n             \n+    //\n+    // Extract strategies from configuration\n+    //\n+    \n+    String defaultStrategy = WarpConfig.getProperty(Configuration.ACCELERATOR_DEFAULT_WRITE);\n+    if (defaultStrategy.contains(NOCACHE)) {", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2ODIxNw==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419968217", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-05-05T09:11:42Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneAcceleratedStoreClient.java", "diffHunk": "@@ -95,6 +104,44 @@ public StandaloneAcceleratedStoreClient(DirectoryClient dir, StoreClient persist\n       throw new RuntimeException(StandaloneAcceleratedStoreClient.class.getName() + \" can only be instantiated once.\");\n     }\n             \n+    //\n+    // Extract strategies from configuration\n+    //\n+    \n+    String defaultStrategy = WarpConfig.getProperty(Configuration.ACCELERATOR_DEFAULT_WRITE);\n+    if (defaultStrategy.contains(NOCACHE)) {\n+      defaultWriteNocache = true;\n+    } else if (defaultStrategy.contains(CACHE)) {\n+      defaultWriteNocache = false;\n+    }\n+    if (defaultStrategy.contains(NOPERSIST)) {\n+      defaultWriteNopersist = true;\n+    } else if (defaultStrategy.contains(PERSIST)) {\n+      defaultWriteNopersist = false;\n+    }\n+    defaultStrategy = WarpConfig.getProperty(Configuration.ACCELERATOR_DEFAULT_DELETE);\n+    if (defaultStrategy.contains(NOCACHE)) {", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2ODI4Ng==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419968286", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-05-05T09:11:49Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneAcceleratedStoreClient.java", "diffHunk": "@@ -95,6 +104,44 @@ public StandaloneAcceleratedStoreClient(DirectoryClient dir, StoreClient persist\n       throw new RuntimeException(StandaloneAcceleratedStoreClient.class.getName() + \" can only be instantiated once.\");\n     }\n             \n+    //\n+    // Extract strategies from configuration\n+    //\n+    \n+    String defaultStrategy = WarpConfig.getProperty(Configuration.ACCELERATOR_DEFAULT_WRITE);\n+    if (defaultStrategy.contains(NOCACHE)) {\n+      defaultWriteNocache = true;\n+    } else if (defaultStrategy.contains(CACHE)) {\n+      defaultWriteNocache = false;\n+    }\n+    if (defaultStrategy.contains(NOPERSIST)) {\n+      defaultWriteNopersist = true;\n+    } else if (defaultStrategy.contains(PERSIST)) {\n+      defaultWriteNopersist = false;\n+    }\n+    defaultStrategy = WarpConfig.getProperty(Configuration.ACCELERATOR_DEFAULT_DELETE);\n+    if (defaultStrategy.contains(NOCACHE)) {\n+      defaultDeleteNocache = true;\n+    } else if (defaultStrategy.contains(CACHE)) {\n+      defaultDeleteNocache = false;\n+    }\n+    if (defaultStrategy.contains(NOPERSIST)) {\n+      defaultDeleteNopersist = true;\n+    } else if (defaultStrategy.contains(PERSIST)) {\n+      defaultDeleteNopersist = false;\n+    }\n+    defaultStrategy = WarpConfig.getProperty(Configuration.ACCELERATOR_DEFAULT_READ);\n+    if (defaultStrategy.contains(NOCACHE)) {", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3MTA1Nw==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r419971057", "bodyText": "Same remark as for EgressFetchHandler, either check for value of not.", "author": "ftence", "createdAt": "2020-05-05T09:16:55Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDeleteHandler.java", "diffHunk": "@@ -296,8 +296,35 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n     // Extract nocache/nopersist\n     //\n     \n-    boolean nocache = null != request.getParameter(StandaloneAcceleratedStoreClient.NOCACHE);\n-    boolean nopersist = null != request.getParameter(StandaloneAcceleratedStoreClient.NOPERSIST);\n+    boolean nocache = StandaloneAcceleratedStoreClient.getDefaultDeleteNocache();\n+    boolean forcedNocache = false;\n+    boolean nopersist = StandaloneAcceleratedStoreClient.getDefaultDeleteNopersist();\n+    boolean forcedNopersist = false;\n+    \n+    if (null != request.getParameter(StandaloneAcceleratedStoreClient.NOCACHE)) {\n+      forcedNocache = true;\n+      nocache = true;\n+    }\n+    if (null != request.getParameter(StandaloneAcceleratedStoreClient.CACHE)) {\n+      if (forcedNocache) {\n+        response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"Cannot specify both '\" + StandaloneAcceleratedStoreClient.NOCACHE + \"' and '\" + StandaloneAcceleratedStoreClient.CACHE + \"'.\");;\n+        return;\n+      }\n+      forcedNocache = true;\n+      nocache = false;\n+    }\n+    if (null != request.getParameter(StandaloneAcceleratedStoreClient.NOPERSIST)) {\n+      forcedNopersist = true;\n+      nopersist = !\"false\".equals(request.getParameter(StandaloneAcceleratedStoreClient.NOPERSIST));      ", "originalCommit": "83020139d04c19ab0291fb87d2d520c341426a2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4dac47241a0bdb230d8bd58bf7b17bfe571308b5", "url": "https://github.com/senx/warp10-platform/commit/4dac47241a0bdb230d8bd58bf7b17bfe571308b5", "message": "Merge branch 'master' into accelerator.default", "committedDate": "2020-05-05T11:11:23Z", "type": "commit"}, {"oid": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "url": "https://github.com/senx/warp10-platform/commit/679a16a39c683e77dde83246cad5aeb0a0ae46a2", "message": "Addressed PR comments", "committedDate": "2020-05-05T11:21:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NzUwMw==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420097503", "bodyText": "forcedNopersist = true;", "author": "ftence", "createdAt": "2020-05-05T13:13:08Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneIngressHandler.java", "diffHunk": "@@ -357,20 +361,30 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n         \n         if (dr.getAttributesSize() > 0) {\n           if (null != dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n-            nocache = true;\n-          } else {\n-            nocache = false;\n+            forcedNocache = true;\n+            nocache = !\"false\".equals(dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n           }\n           if (null != dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST)) {\n-            nopersist = true;\n-          } else {\n-            nopersist = false;\n+            forcedNopersist = true;\n+            nopersist = !\"false\".equals(dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n           }\n         }\n       } else {        \n         if (null != request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER)) {\n-          nocache = request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER).contains(StandaloneAcceleratedStoreClient.NOCACHE);\n-          nopersist = request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER).contains(StandaloneAcceleratedStoreClient.NOPERSIST);                \n+          if (request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER).contains(StandaloneAcceleratedStoreClient.NOCACHE)) {\n+            nocache = true;\n+            forcedNocache = true;\n+          } else if (request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER).contains(StandaloneAcceleratedStoreClient.CACHE)) {\n+            nocache = false;\n+            forcedNocache = true;\n+          }\n+          if (request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER).contains(StandaloneAcceleratedStoreClient.NOPERSIST)) {\n+            nopersist = true;\n+            forcedNopersist = true;\n+          } else if (request.getHeader(StandaloneAcceleratedStoreClient.ACCELERATOR_HEADER).contains(StandaloneAcceleratedStoreClient.PERSIST)) {\n+            nopersist = false;\n+            forcedNopersist = false;", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5OTU2OA==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420099568", "bodyText": "Default not used, can be initialized to false.", "author": "ftence", "createdAt": "2020-05-05T13:16:06Z", "path": "warp10/src/main/java/io/warp10/script/functions/UPDATE.java", "diffHunk": "@@ -183,19 +183,32 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       conn.setRequestProperty(Constants.getHeader(Configuration.HTTP_HEADER_UPDATE_TOKENX), token);\n       conn.setRequestProperty(\"Content-Type\", \"application/gzip\");\n       \n-      boolean nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n-      boolean nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n-      \n       String accel = \"\";\n-      if (nocache) {\n-        accel = accel + StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultWriteNocache();", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5OTYxNQ==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420099615", "bodyText": "Default not used, can be initialized to false.", "author": "ftence", "createdAt": "2020-05-05T13:16:10Z", "path": "warp10/src/main/java/io/warp10/script/functions/UPDATE.java", "diffHunk": "@@ -183,19 +183,32 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       conn.setRequestProperty(Constants.getHeader(Configuration.HTTP_HEADER_UPDATE_TOKENX), token);\n       conn.setRequestProperty(\"Content-Type\", \"application/gzip\");\n       \n-      boolean nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n-      boolean nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n-      \n       String accel = \"\";\n-      if (nocache) {\n-        accel = accel + StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultWriteNocache();\n+      if (null != stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n+        nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n+        if (nocache) {\n+          accel = accel + StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+        } else {\n+          accel = accel + StandaloneAcceleratedStoreClient.CACHE + \" \";          \n+        }\n       }\n-      if (nopersist) {\n-        accel = accel + StandaloneAcceleratedStoreClient.NOPERSIST;\n+\n+      boolean nopersist = StandaloneAcceleratedStoreClient.getDefaultWriteNopersist();", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5OTg3MA==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420099870", "bodyText": "Default not used, can be initialized to false.", "author": "ftence", "createdAt": "2020-05-05T13:16:33Z", "path": "warp10/src/main/java/io/warp10/script/functions/DELETE.java", "diffHunk": "@@ -160,17 +160,26 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       qsurl.append(\"=\");\n       qsurl.append(WarpURLEncoder.encode(selector, StandardCharsets.UTF_8));\n \n-      boolean nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n-      boolean nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n-\n-      if (nocache) {\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultDeleteNocache();\n+      if (null != stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n+        nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n         qsurl.append(\"&\");\n-        qsurl.append(StandaloneAcceleratedStoreClient.NOCACHE);\n+        if (nocache) {\n+          qsurl.append(StandaloneAcceleratedStoreClient.NOCACHE);\n+        } else {\n+          qsurl.append(StandaloneAcceleratedStoreClient.CACHE);\n+        }\n       }\n-      \n-      if (nopersist) {\n+\n+      boolean nopersist = StandaloneAcceleratedStoreClient.getDefaultDeleteNopersist();", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5OTkwNA==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420099904", "bodyText": "Default not used, can be initialized to false.", "author": "ftence", "createdAt": "2020-05-05T13:16:37Z", "path": "warp10/src/main/java/io/warp10/script/functions/DELETE.java", "diffHunk": "@@ -160,17 +160,26 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       qsurl.append(\"=\");\n       qsurl.append(WarpURLEncoder.encode(selector, StandardCharsets.UTF_8));\n \n-      boolean nocache = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n-      boolean nopersist = Boolean.TRUE.equals(stack.getAttribute(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));\n-\n-      if (nocache) {\n+      boolean nocache = StandaloneAcceleratedStoreClient.getDefaultDeleteNocache();", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMDgzNw==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420110837", "bodyText": "In DELETE, FETCH and UPDATE, the test is Boolean.TRUE.equals so for coherency it should be \"true\".equals and switch if/else.", "author": "ftence", "createdAt": "2020-05-05T13:31:56Z", "path": "warp10/src/main/java/io/warp10/continuum/ingress/DatalogForwarder.java", "diffHunk": "@@ -267,10 +267,18 @@ private boolean doUpdate(DatalogAction action) {\n           if (action.request.getAttributesSize() > 0) {\n             String accel = \"\";\n             if (null != action.request.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n-              accel += StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+              if (\"false\".equals(action.request.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE))) {", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NzMxMA==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420347310", "bodyText": "ditto below", "author": "hbs", "createdAt": "2020-05-05T19:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMDgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMDkxMQ==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420110911", "bodyText": "In DELETE, FETCH and UPDATE, the test is Boolean.TRUE.equals so for coherency it should be \"true\".equals and switch if/else.", "author": "ftence", "createdAt": "2020-05-05T13:32:02Z", "path": "warp10/src/main/java/io/warp10/continuum/ingress/DatalogForwarder.java", "diffHunk": "@@ -267,10 +267,18 @@ private boolean doUpdate(DatalogAction action) {\n           if (action.request.getAttributesSize() > 0) {\n             String accel = \"\";\n             if (null != action.request.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n-              accel += StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+              if (\"false\".equals(action.request.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE))) {\n+                accel += StandaloneAcceleratedStoreClient.CACHE + \" \";                \n+              } else {\n+                accel += StandaloneAcceleratedStoreClient.NOCACHE + \" \";\n+              }\n             }\n             if (null != action.request.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST)) {\n-              accel += StandaloneAcceleratedStoreClient.NOPERSIST;              \n+              if (\"false\".equals(action.request.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST))) {", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMTUwNg==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420111506", "bodyText": "In DELETE, FETCH and UPDATE, the test is Boolean.TRUE.equals so for coherency it should be \"true\".equals.", "author": "ftence", "createdAt": "2020-05-05T13:32:54Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneIngressHandler.java", "diffHunk": "@@ -357,20 +361,30 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n         \n         if (dr.getAttributesSize() > 0) {\n           if (null != dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n-            nocache = true;\n-          } else {\n-            nocache = false;\n+            forcedNocache = true;\n+            nocache = !\"false\".equals(dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NzAzNg==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420347036", "bodyText": "The reason why we are checking if the attribute is \"false\" is because prior to this PR the attribute was simply set to the empty string to specify that it was true, not to 'true', so in order to remain backward compatible with DatalogRequests which might still be buffered, we check if the attribute is \"false\" and negate the test.", "author": "hbs", "createdAt": "2020-05-05T19:16:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMTUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMTYxNg==", "url": "https://github.com/senx/warp10-platform/pull/751#discussion_r420111616", "bodyText": "In DELETE, FETCH and UPDATE, the test is Boolean.TRUE.equals so for coherency it should be \"true\".equals.", "author": "ftence", "createdAt": "2020-05-05T13:33:03Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneIngressHandler.java", "diffHunk": "@@ -357,20 +361,30 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n         \n         if (dr.getAttributesSize() > 0) {\n           if (null != dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE)) {\n-            nocache = true;\n-          } else {\n-            nocache = false;\n+            forcedNocache = true;\n+            nocache = !\"false\".equals(dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOCACHE));\n           }\n           if (null != dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST)) {\n-            nopersist = true;\n-          } else {\n-            nopersist = false;\n+            forcedNopersist = true;\n+            nopersist = !\"false\".equals(dr.getAttributes().get(StandaloneAcceleratedStoreClient.ATTR_NOPERSIST));", "originalCommit": "679a16a39c683e77dde83246cad5aeb0a0ae46a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "680225833d77c7bf0dd9b3342f7a2f118dcacc5a", "url": "https://github.com/senx/warp10-platform/commit/680225833d77c7bf0dd9b3342f7a2f118dcacc5a", "message": "Merge branch 'master' of github.com:senx/warp10-platform into accelerator.default", "committedDate": "2020-05-05T16:37:24Z", "type": "commit"}, {"oid": "c6ccea062bab645bc0ebcf5b5bebd97f2ee51d69", "url": "https://github.com/senx/warp10-platform/commit/c6ccea062bab645bc0ebcf5b5bebd97f2ee51d69", "message": "Addressed PR comments", "committedDate": "2020-05-05T19:18:04Z", "type": "commit"}, {"oid": "a63906cc69c9547fe3319929c24e7a80fd540566", "url": "https://github.com/senx/warp10-platform/commit/a63906cc69c9547fe3319929c24e7a80fd540566", "message": "Added explanatory comments", "committedDate": "2020-05-06T06:35:27Z", "type": "commit"}, {"oid": "237915d8e5b46852e08baf3cad4871817ba62f2f", "url": "https://github.com/senx/warp10-platform/commit/237915d8e5b46852e08baf3cad4871817ba62f2f", "message": "Added defaults reporting", "committedDate": "2020-05-06T08:34:16Z", "type": "commit"}, {"oid": "3b0ca0130a66791241045fe9233b1b6fa0775012", "url": "https://github.com/senx/warp10-platform/commit/3b0ca0130a66791241045fe9233b1b6fa0775012", "message": "Removed unused attribute", "committedDate": "2020-05-06T15:03:22Z", "type": "commit"}]}