{"pr_number": 876, "pr_title": "ALMOSTEQ (~=): Make conditions on parameters less strict", "pr_createdAt": "2020-11-19T16:54:27Z", "pr_url": "https://github.com/senx/warp10-platform/pull/876", "timeline": [{"oid": "d73fd35951f1552597af6ecfe2b0c235c3135478", "url": "https://github.com/senx/warp10-platform/commit/d73fd35951f1552597af6ecfe2b0c235c3135478", "message": "Make conditions on parameters less strict", "committedDate": "2020-11-19T16:48:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc5Mjk3MA==", "url": "https://github.com/senx/warp10-platform/pull/876#discussion_r531792970", "bodyText": "Why use Math.abs for computing values of op1 and op2?", "author": "hbs", "createdAt": "2020-11-27T21:47:50Z", "path": "warp10/src/main/java/io/warp10/script/functions/ALMOSTEQ.java", "diffHunk": "@@ -40,26 +39,22 @@ public ALMOSTEQ(String name) {\n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     Object lambdaParam = stack.pop();\n-    Object op2 = stack.pop();\n-    Object op1 = stack.pop();\n-    \n-    double lambda;\n+    Object op2Param = stack.pop();\n+    Object op1Param = stack.pop();\n \n-    if (lambdaParam instanceof Number) {\n-      lambda = Math.abs(((Number) lambdaParam).doubleValue());\n-    } else {\n-      throw new WarpScriptException(getName() + \" needs three parameters on the stack: 'lambda' (a numeric type) and two operands.\");  \n+    // All operands need to be numeric.\n+    if  (!(lambdaParam instanceof Number) || !(op2Param instanceof Number)  || !(op1Param instanceof Number)) {\n+      throw new WarpScriptException(getName() + \" only accepts numeric parameters.\");\n     }\n \n-    // At least one of the operands must be a Double and both operands need to be numeric types\n-    if  (!(op2 instanceof Number)  || !(op1 instanceof Number) || !(op2 instanceof Double || op1 instanceof Double)) {\n-      throw new WarpScriptException(getName() + \" can only operate on numeric types and at least one of them must be a Double.\");  \n-    }\n-    \n-    if (Double.isNaN(((Number) op1).doubleValue()) || Double.isNaN(((Number) op2).doubleValue())) {\n-      stack.push(Double.isNaN(((Number) op1).doubleValue()) && Double.isNaN(((Number) op2).doubleValue()));\n+    double lambda = Math.abs(((Number) lambdaParam).doubleValue());\n+    double op1 = Math.abs(((Number) op1Param).doubleValue());", "originalCommit": "d73fd35951f1552597af6ecfe2b0c235c3135478", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3OTM3Ng==", "url": "https://github.com/senx/warp10-platform/pull/876#discussion_r534079376", "bodyText": "My bad, fixed.", "author": "ftence", "createdAt": "2020-12-02T11:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc5Mjk3MA=="}], "type": "inlineReview"}, {"oid": "968ced132e9a566314e9bc8459abaf25dbe911d7", "url": "https://github.com/senx/warp10-platform/commit/968ced132e9a566314e9bc8459abaf25dbe911d7", "message": "Remove wrongly added Math.abs on ops", "committedDate": "2020-12-02T11:00:47Z", "type": "commit"}]}