{"pr_number": 711, "pr_title": "Fixes #698, supersedes #701, empty GTSs from operations are UNDEF and keep metas", "pr_createdAt": "2020-03-31T15:05:58Z", "pr_url": "https://github.com/senx/warp10-platform/pull/711", "timeline": [{"oid": "ad431bc926ecf9775e06e9301b4e1e06ef7040aa", "url": "https://github.com/senx/warp10-platform/commit/ad431bc926ecf9775e06e9301b4e1e06ef7040aa", "message": "fix issue #698, gts ops type consistency", "committedDate": "2020-03-23T21:19:54Z", "type": "commit"}, {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "url": "https://github.com/senx/warp10-platform/commit/c79ced1a708519f757a0affac24cb1a8f5b95b27", "message": "Keep meta intact even if the returned GTS is empty.", "committedDate": "2020-03-31T14:57:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MzczNw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401043737", "bodyText": "There should be a test in applyBinaryOp that the operator is non null, as is the op.op() call will fail with an NPE.", "author": "hbs", "createdAt": "2020-03-31T16:19:26Z", "path": "warp10/src/main/java/io/warp10/script/binary/ADD.java", "diffHunk": "@@ -137,13 +137,16 @@ public Object op(GeoTimeSerie gtsa, GeoTimeSerie gtsb, int idxa, int idxb) {\n           };\n           break;\n         default:\n-          // both inputs are empty, return an empty gts.\n-          stack.push(new GeoTimeSerie());\n-          return stack;\n+          // Leave op to null.", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MjYzMQ==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401162631", "bodyText": "I agree this would be nicer, but this won't lead to a NPE because the default means both GTSs are empty and applyBinaryOp won't apply op at all.", "author": "ftence", "createdAt": "2020-03-31T19:31:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MzczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQwNQ==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047405", "bodyText": "avoiding the function call op.doubleValue() would probably be more efficient, at least before inlining/JIT kicks in.", "author": "hbs", "createdAt": "2020-03-31T16:24:45Z", "path": "warp10/src/main/java/io/warp10/script/binary/SUB.java", "diffHunk": "@@ -171,19 +164,31 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op;\n-       } else {\n-         value = op - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op.doubleValue();\n+          } else {\n+            value = op.doubleValue() - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MDM5MQ==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401160391", "bodyText": "Call to op.doubleValue() is mandatory because all we know is that it is a Number in the case gts.getType() == TYPE.DOUBLE.", "author": "ftence", "createdAt": "2020-03-31T19:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyMzcyNA==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401223724", "bodyText": "yes but you don't have to do it in the loop!", "author": "hbs", "createdAt": "2020-03-31T21:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQ0Nw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047447", "bodyText": "ditto", "author": "hbs", "createdAt": "2020-03-31T16:24:51Z", "path": "warp10/src/main/java/io/warp10/script/binary/SUB.java", "diffHunk": "@@ -171,19 +164,31 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op;\n-       } else {\n-         value = op - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op.doubleValue();\n+          } else {\n+            value = op.doubleValue() - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n+          }\n+          GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n+        }\n+      } else {\n+        for (int i = 0; i < n; i++) {\n+          long value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).longValue() - op.longValue();", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTIxMg==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401161212", "bodyText": "Same idea as previous comment, this time because if op is not a Double, it may be a Long or an AtomicLong.", "author": "ftence", "createdAt": "2020-03-31T19:29:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyMzgyNw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401223827", "bodyText": "get it out of the loop!", "author": "hbs", "createdAt": "2020-03-31T21:23:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0Nzg1MA==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047850", "bodyText": "avoid function call op.doubleValue()", "author": "hbs", "createdAt": "2020-03-31T16:25:28Z", "path": "warp10/src/main/java/io/warp10/script/binary/DIV.java", "diffHunk": "@@ -168,19 +161,30 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op;\n-       } else {\n-         value = op / ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op.doubleValue();", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTQxNg==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401161416", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-03-31T19:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0Nzg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyMzkwNw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401223907", "bodyText": "get it out of the LOOP!", "author": "hbs", "createdAt": "2020-03-31T21:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0Nzg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzkzNw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047937", "bodyText": "avoid op.longValue()", "author": "hbs", "createdAt": "2020-03-31T16:25:36Z", "path": "warp10/src/main/java/io/warp10/script/binary/DIV.java", "diffHunk": "@@ -168,19 +161,30 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op;\n-       } else {\n-         value = op / ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op.doubleValue();\n+          } else {\n+            value = op.doubleValue() / ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n+          }\n+          GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n+        }\n+      } else {\n+        for (int i = 0; i < n; i++) {\n+          long value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).longValue() / op.longValue();", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTQ0NA==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401161444", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-03-31T19:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyMzk3Mg==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401223972", "bodyText": "GET IT OUT OF THE LOOP!", "author": "hbs", "createdAt": "2020-03-31T21:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzkzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODEwMQ==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401048101", "bodyText": "avoid op.doubleValue()", "author": "hbs", "createdAt": "2020-03-31T16:25:50Z", "path": "warp10/src/main/java/io/warp10/script/binary/MUL.java", "diffHunk": "@@ -177,13 +170,20 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-        double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op;\n-        GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op.doubleValue();", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTQ5OQ==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401161499", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-03-31T19:29:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyNDA4Nw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401224087", "bodyText": "GET IT OUT OF THE LOOP!!!!!", "author": "hbs", "createdAt": "2020-03-31T21:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODIwNw==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401048207", "bodyText": "avoid op.longValue()", "author": "hbs", "createdAt": "2020-03-31T16:25:59Z", "path": "warp10/src/main/java/io/warp10/script/binary/MUL.java", "diffHunk": "@@ -177,13 +170,20 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-        double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op;\n-        GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op.doubleValue();\n+          GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n+        }\n+      } else {\n+        for (int i = 0; i < n; i++) {\n+          long value = ((Number) GTSHelper.valueAtIndex(gts, i)).longValue() * op.longValue();", "originalCommit": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MTUzNQ==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401161535", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-03-31T19:29:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODIwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyNDIxOA==", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401224218", "bodyText": "GET THIS FREAKING STATEMENT OUT OF THE LOOP!!!! ;-)", "author": "hbs", "createdAt": "2020-03-31T21:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODIwNw=="}], "type": "inlineReview"}, {"oid": "30c7e20790a8bcc3521dc81283cdf93a942993db", "url": "https://github.com/senx/warp10-platform/commit/30c7e20790a8bcc3521dc81283cdf93a942993db", "message": "Get long or double value outside the loop.", "committedDate": "2020-04-01T08:02:21Z", "type": "commit"}]}