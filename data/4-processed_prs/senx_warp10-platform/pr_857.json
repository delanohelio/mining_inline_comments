{"pr_number": 857, "pr_title": "Added support for fetching HBase cell TTLs.", "pr_createdAt": "2020-10-09T09:22:54Z", "pr_url": "https://github.com/senx/warp10-platform/pull/857", "timeline": [{"oid": "551d6c7b184d9874baa236fb282d165fb4c8fc19", "url": "https://github.com/senx/warp10-platform/commit/551d6c7b184d9874baa236fb282d165fb4c8fc19", "message": "Added support for fetching HBase cell TTLs.", "committedDate": "2020-10-09T09:22:20Z", "type": "commit"}, {"oid": "b85ba7585354c1a93145a000b4e4ba8760cfdc26", "url": "https://github.com/senx/warp10-platform/commit/b85ba7585354c1a93145a000b4e4ba8760cfdc26", "message": "Changed the way the TTL is accessed", "committedDate": "2020-10-12T15:55:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxMTYxNw==", "url": "https://github.com/senx/warp10-platform/pull/857#discussion_r503311617", "bodyText": "Typo: cell(s)", "author": "ftence", "createdAt": "2020-10-12T13:52:51Z", "path": "warp10/src/main/thrift/io_warp10_continuum_store_thrift_data.thrift", "diffHunk": "@@ -514,4 +514,8 @@ struct FetchRequest {\n    * Size of the post boundary in number of data points.\n    */\n   12: optional i64 postBoundary = 0,\n+  /**\n+   * Flag indicating we want to return the HBase celle TTL instead of the value", "originalCommit": "551d6c7b184d9874baa236fb282d165fb4c8fc19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c07cd7efced7821cab8e8307c58a625d0b10617", "url": "https://github.com/senx/warp10-platform/commit/1c07cd7efced7821cab8e8307c58a625d0b10617", "message": "Fixed typo", "committedDate": "2020-10-12T19:12:09Z", "type": "commit"}, {"oid": "68d0ba92c5790f6a815f671fe65e159ccf31ca53", "url": "https://github.com/senx/warp10-platform/commit/68d0ba92c5790f6a815f671fe65e159ccf31ca53", "message": "Added explanation and warning in Javadoc for TTL field of FetchRequest.", "committedDate": "2020-10-12T19:48:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxNTI5OA==", "url": "https://github.com/senx/warp10-platform/pull/857#discussion_r503815298", "bodyText": "This will break the whole decoding loop and should be removed.", "author": "ftence", "createdAt": "2020-10-13T09:45:13Z", "path": "warp10/src/main/java/io/warp10/continuum/store/MultiScanGTSDecoderIterator.java", "diffHunk": "@@ -448,9 +454,23 @@ public GTSDecoder next() {\n                     continue;\n                   }                               \n                 }\n-                                \n+\n                 if (writeTimestamp) {\n                   encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), cell.getTimestamp() * Constants.TIME_UNITS_PER_MS);\n+                } else if (fetchTTL) {\n+                  boolean hasTTL = false;\n+                  Tag tag = Tag.getTag(cell.getTagsArray(), cell.getTagsOffset(), cell.getTagsLength(), TagType.TTL_TAG_TYPE);\n+                  if (null != tag) {\n+                    if (Bytes.SIZEOF_LONG == tag.getTagLength()) {\n+                      long ttl = Bytes.toLong(tag.getBuffer(), tag.getTagOffset(), tag.getTagLength());\n+                      encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), ttl * Constants.TIME_UNITS_PER_MS);\n+                      hasTTL = true;\n+                    }\n+                    break;", "originalCommit": "68d0ba92c5790f6a815f671fe65e159ccf31ca53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxNTc5OA==", "url": "https://github.com/senx/warp10-platform/pull/857#discussion_r503815798", "bodyText": "Not needed anymore since you use Tag.getTag and null != tag.", "author": "ftence", "createdAt": "2020-10-13T09:46:00Z", "path": "warp10/src/main/java/io/warp10/continuum/store/MultiScanGTSDecoderIterator.java", "diffHunk": "@@ -448,9 +454,23 @@ public GTSDecoder next() {\n                     continue;\n                   }                               \n                 }\n-                                \n+\n                 if (writeTimestamp) {\n                   encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), cell.getTimestamp() * Constants.TIME_UNITS_PER_MS);\n+                } else if (fetchTTL) {\n+                  boolean hasTTL = false;", "originalCommit": "68d0ba92c5790f6a815f671fe65e159ccf31ca53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxNjA3MA==", "url": "https://github.com/senx/warp10-platform/pull/857#discussion_r503816070", "bodyText": "Should be in else of if (null != tag).", "author": "ftence", "createdAt": "2020-10-13T09:46:24Z", "path": "warp10/src/main/java/io/warp10/continuum/store/MultiScanGTSDecoderIterator.java", "diffHunk": "@@ -448,9 +454,23 @@ public GTSDecoder next() {\n                     continue;\n                   }                               \n                 }\n-                                \n+\n                 if (writeTimestamp) {\n                   encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), cell.getTimestamp() * Constants.TIME_UNITS_PER_MS);\n+                } else if (fetchTTL) {\n+                  boolean hasTTL = false;\n+                  Tag tag = Tag.getTag(cell.getTagsArray(), cell.getTagsOffset(), cell.getTagsLength(), TagType.TTL_TAG_TYPE);\n+                  if (null != tag) {\n+                    if (Bytes.SIZEOF_LONG == tag.getTagLength()) {\n+                      long ttl = Bytes.toLong(tag.getBuffer(), tag.getTagOffset(), tag.getTagLength());\n+                      encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), ttl * Constants.TIME_UNITS_PER_MS);\n+                      hasTTL = true;\n+                    }\n+                    break;\n+                  }\n+                  if (!hasTTL) {\n+                    encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), Long.MAX_VALUE);\n+                  }", "originalCommit": "68d0ba92c5790f6a815f671fe65e159ccf31ca53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxNjY3Mg==", "url": "https://github.com/senx/warp10-platform/pull/857#discussion_r503816672", "bodyText": "Same 3 comments as above.", "author": "ftence", "createdAt": "2020-10-13T09:47:17Z", "path": "warp10/src/main/java/io/warp10/continuum/store/SlicedRowFilterGTSDecoderIterator.java", "diffHunk": "@@ -413,6 +418,20 @@ public GTSDecoder next() {\n               try {\n                 if (writeTimestamp) {\n                   encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), cell.getTimestamp() * Constants.TIME_UNITS_PER_MS);\n+                } else if (fetchTTL) {\n+                  boolean hasTTL = false;\n+                  Tag tag = Tag.getTag(cell.getTagsArray(), cell.getTagsOffset(), cell.getTagsLength(), TagType.TTL_TAG_TYPE);\n+                  if (null != tag) {\n+                    if (Bytes.SIZEOF_LONG == tag.getTagLength()) {\n+                      long ttl = Bytes.toLong(tag.getBuffer(), tag.getTagOffset(), tag.getTagLength());\n+                      encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), ttl * Constants.TIME_UNITS_PER_MS);\n+                      hasTTL = true;\n+                    }\n+                    break;\n+                  }\n+                  if (!hasTTL) {\n+                    encoder.addValue(timestamp, decoder.getLocation(), decoder.getElevation(), Long.MAX_VALUE);\n+                  }", "originalCommit": "68d0ba92c5790f6a815f671fe65e159ccf31ca53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aab710c7c8534a2f52edc3564a35903184b9af30", "url": "https://github.com/senx/warp10-platform/commit/aab710c7c8534a2f52edc3564a35903184b9af30", "message": "Addressed PR comments.", "committedDate": "2020-10-13T13:15:09Z", "type": "commit"}]}