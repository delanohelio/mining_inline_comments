{"pr_number": 777, "pr_title": "Initial commit of labels priority support", "pr_createdAt": "2020-06-20T13:43:57Z", "pr_url": "https://github.com/senx/warp10-platform/pull/777", "timeline": [{"oid": "bac1b37dad8f131029215e15be238968ce8deb99", "url": "https://github.com/senx/warp10-platform/commit/bac1b37dad8f131029215e15be238968ce8deb99", "message": "Initial commit of labels priority support", "committedDate": "2020-06-20T13:43:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMDYxNg==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r449610616", "bodyText": "This isn't needed because labels will be overridden by rtoken.getLabels().\nYou can remove this line and modify labels = rtoken.getLabels(); below to Map<String, String> labels = rtoken.getLabels();", "author": "ftence", "createdAt": "2020-07-03T14:28:25Z", "path": "warp10/src/main/java/io/warp10/continuum/Tokens.java", "diffHunk": "@@ -345,11 +346,11 @@ public static void enableCheckAttributes() {\n    */\n   public static Map<String,String> labelSelectorsFromReadToken(ReadToken rtoken) {\n     \n-    Map<String,String> labelSelectors = new HashMap<String,String>();\n+    Map<String,String> labelSelectors = new LinkedHashMap<String,String>();\n     \n     List<String> owners = new ArrayList<String>();\n     List<String> producers = new ArrayList<String>();\n-    Map<String, String> labels = new HashMap<String, String>();\n+    Map<String, String> labels = new LinkedHashMap<String, String>();", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYyODQ1NQ==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r449628455", "bodyText": "In that case, I think it'd be nicer if parseLabelsSelectors explicitly returns a LinkedHashMap.", "author": "ftence", "createdAt": "2020-07-03T15:11:33Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSHelper.java", "diffHunk": "@@ -3604,7 +3604,7 @@ public static void fillGTSIds(byte[] bytes, int offset, long classId, long label\n     // Loop over the tokens\n     //\n     \n-    Map<String,String> result = new HashMap<String,String>(tokens.length);\n+    Map<String,String> result = new LinkedHashMap<String,String>(tokens.length);", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDU3MA==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r449630570", "bodyText": "As it applies only to WarpScript and not on /fetch or /find, it should be in the warpscript conf file.", "author": "ftence", "createdAt": "2020-07-03T15:17:05Z", "path": "etc/conf.templates/distributed/00-warp.conf.template", "diffHunk": "@@ -137,6 +137,13 @@ warp.components =\n // Maximum length of labels (names + values) - Defaults to 2048\n //\n #warp.labels.maxsize = 2048\n+\n+//\n+// Default priority order for matching labels when doing a FIND/FETCH.\n+// Comma separated list of label names.\n+// Defaults to .producer,.app,.owner\n+//\n+#warp.labels.priority =", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDY1Mw==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r449630653", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-07-03T15:17:16Z", "path": "etc/conf.templates/standalone/00-warp.conf.template", "diffHunk": "@@ -219,6 +219,13 @@ plasma.frontend.websocket.maxmessagesize = 1048576\n //\n #warp.labels.maxsize = 2048\n  \n+//\n+// Default priority order for matching labels when doing a FIND/FETCH.\n+// Comma separated list of label names.\n+// Defaults to .producer,.app,.owner\n+//\n+#warp.labels.priority =\n+", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDc5NQ==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r449630795", "bodyText": "Ditto.", "author": "ftence", "createdAt": "2020-07-03T15:17:42Z", "path": "warp10/src/main/java/io/warp10/continuum/Configuration.java", "diffHunk": "@@ -1674,6 +1674,13 @@\n    */\n   public static final String WARP_LABELS_MAXSIZE = \"warp.labels.maxsize\";\n   \n+  /**\n+   * Default priority order for matching labels when doing a FIND/FETCH.\n+   * Comma separated list of label names.\n+   * Defaults to .producer,.app,.owner\n+   */\n+  public static final String WARP_LABELS_PRIORITY = \"warp.labels.priority\";", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkyMTQwMg==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r450921402", "bodyText": "Ditto what? This is in Configuration.java, not in an actual configuration file.", "author": "hbs", "createdAt": "2020-07-07T14:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDc5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MTc5Mg==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459391792", "bodyText": "Sorry that was not clear.\nAs this conf should be moved to the warpscript conf file, the key must also start with warpscript.", "author": "ftence", "createdAt": "2020-07-23T11:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDc5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA1ODE1Mg==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r450058152", "bodyText": "Unneeded cast.", "author": "ftence", "createdAt": "2020-07-06T08:18:30Z", "path": "warp10/src/main/java/io/warp10/script/functions/FETCH.java", "diffHunk": "@@ -335,16 +338,62 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n           labelSelectors.remove(Constants.OWNER_LABEL);\n           labelSelectors.remove(Constants.APPLICATION_LABEL);\n           labelSelectors.putAll(Tokens.labelSelectorsFromReadToken(rtoken));\n-          lblsSels.add((Map<String,String>) labelSelectors);\n+          \n+          // Re-order the labels\n+          List<String> order = null;\n+          if (params.containsKey(PARAM_LABELS_PRIORITY)) {\n+            order = (List<String>) params.get(PARAM_LABELS_PRIORITY);\n+          } else {\n+            order = FIND.DEFAULT_LABELS_PRIORITY;\n+          }\n+          Map<String,String> ordered = new LinkedHashMap<String,String>(labelSelectors.size());\n+          for (String label: order) {\n+            if (labelSelectors.containsKey(label)) {\n+              ordered.put(label, labelSelectors.get(label));\n+            }\n+          }\n+          for (Entry<String,String> entry: labelSelectors.entrySet()) {\n+            if (order.contains(entry.getKey())) {\n+              continue;\n+            }\n+            ordered.put(entry.getKey(), entry.getValue());\n+          }\n+\n+          lblsSels.add((Map<String,String>) ordered);", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA1OTg4Nw==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r450059887", "bodyText": "Why don't you use FIND.DEFAULT_LABELS_PRIORITY?", "author": "ftence", "createdAt": "2020-07-06T08:21:36Z", "path": "warp10/src/main/java/io/warp10/script/functions/FETCH.java", "diffHunk": "@@ -335,16 +338,62 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n           labelSelectors.remove(Constants.OWNER_LABEL);\n           labelSelectors.remove(Constants.APPLICATION_LABEL);\n           labelSelectors.putAll(Tokens.labelSelectorsFromReadToken(rtoken));\n-          lblsSels.add((Map<String,String>) labelSelectors);\n+          \n+          // Re-order the labels\n+          List<String> order = null;\n+          if (params.containsKey(PARAM_LABELS_PRIORITY)) {\n+            order = (List<String>) params.get(PARAM_LABELS_PRIORITY);\n+          } else {\n+            order = FIND.DEFAULT_LABELS_PRIORITY;\n+          }\n+          Map<String,String> ordered = new LinkedHashMap<String,String>(labelSelectors.size());\n+          for (String label: order) {\n+            if (labelSelectors.containsKey(label)) {\n+              ordered.put(label, labelSelectors.get(label));\n+            }\n+          }\n+          for (Entry<String,String> entry: labelSelectors.entrySet()) {\n+            if (order.contains(entry.getKey())) {\n+              continue;\n+            }\n+            ordered.put(entry.getKey(), entry.getValue());\n+          }\n+\n+          lblsSels.add((Map<String,String>) ordered);\n         }\n       } else {\n+        clsSels.add(params.get(PARAM_CLASS).toString());\n+\n         Map<String,String> labelSelectors = (Map<String,String>) params.get(PARAM_LABELS);\n         labelSelectors.remove(Constants.PRODUCER_LABEL);\n         labelSelectors.remove(Constants.OWNER_LABEL);\n         labelSelectors.remove(Constants.APPLICATION_LABEL);\n         labelSelectors.putAll(Tokens.labelSelectorsFromReadToken(rtoken));\n-        clsSels.add(params.get(PARAM_CLASS).toString());\n-        lblsSels.add(labelSelectors);\n+\n+        // Re-order the labels\n+        List<String> order = null;\n+        if (params.containsKey(PARAM_LABELS_PRIORITY)) {\n+          order = (List<String>) params.get(PARAM_LABELS_PRIORITY);\n+        } else {\n+          order = new ArrayList<String>(3);\n+          order.add(Constants.PRODUCER_LABEL);\n+          order.add(Constants.APPLICATION_LABEL);\n+          order.add(Constants.OWNER_LABEL);", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwNDQ4OA==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r450304488", "bodyText": "In that case, I think it'd be nicer if labelSelectorsFromReadToken explicitly returns a LinkedHashMap.", "author": "ftence", "createdAt": "2020-07-06T15:32:11Z", "path": "warp10/src/main/java/io/warp10/continuum/Tokens.java", "diffHunk": "@@ -345,11 +346,11 @@ public static void enableCheckAttributes() {\n    */\n   public static Map<String,String> labelSelectorsFromReadToken(ReadToken rtoken) {\n     \n-    Map<String,String> labelSelectors = new HashMap<String,String>();\n+    Map<String,String> labelSelectors = new LinkedHashMap<String,String>();", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3NzgyMA==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r450277820", "bodyText": "labelSelectors can be null, and labelSelectors.size() raises a null pointer exception\nCode :\n{\n  'token' 'DataLakeR'\n  'selectors' [ 'class{v=x}' ]\n} FIND", "author": "pi-r-p", "createdAt": "2020-07-06T14:53:16Z", "path": "warp10/src/main/java/io/warp10/script/functions/FIND.java", "diffHunk": "@@ -319,12 +373,28 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n         // Fix labels\n         \n         if (drequest.isSetLabelsSelectors()) {\n-          for (Map<String,String> sel: drequest.getLabelsSelectors()) {\n+          for (int i = 0; i < drequest.getLabelsSelectorsSize(); i++) {\n+            Map<String,String> sel = drequest.getLabelsSelectors().get(i);\n             sel.remove(Constants.PRODUCER_LABEL);\n             sel.remove(Constants.OWNER_LABEL);\n             sel.remove(Constants.APPLICATION_LABEL);\n             sel.putAll(Tokens.labelSelectorsFromReadToken(rtoken));\n-          }          \n+\n+            // Re-order the labels\n+            Map<String,String> ordered = new LinkedHashMap<String,String>(labelSelectors.size());\n+            for (String label: order) {", "originalCommit": "bac1b37dad8f131029215e15be238968ce8deb99", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "32ef8e5f0c4dd54fa889e905d583d8b418c09e92", "url": "https://github.com/senx/warp10-platform/commit/32ef8e5f0c4dd54fa889e905d583d8b418c09e92", "message": "Addressed PR comments", "committedDate": "2020-07-07T14:47:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0MDg5OQ==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r456340899", "bodyText": "There is still a NPE here, order is null when using selectors.\n{\n  'token' 'DataLakeR'\n  'selectors' [ 'pourrissage{vm=' $label + '}' + ]\n} FIND", "author": "pi-r-p", "createdAt": "2020-07-17T09:50:34Z", "path": "warp10/src/main/java/io/warp10/script/functions/FIND.java", "diffHunk": "@@ -381,7 +381,7 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n             sel.putAll(Tokens.labelSelectorsFromReadToken(rtoken));\n \n             // Re-order the labels\n-            Map<String,String> ordered = new LinkedHashMap<String,String>(labelSelectors.size());\n+            Map<String,String> ordered = new LinkedHashMap<String,String>(null != labelSelectors ? labelSelectors.size() : 1);\n             for (String label: order) {", "originalCommit": "32ef8e5f0c4dd54fa889e905d583d8b418c09e92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "url": "https://github.com/senx/warp10-platform/commit/0452a6d4bb574aeb37879fc19708e94aa4791c56", "message": "Fixed NPE by setting order to DEFAULT_LABELS_PRIORITY instead of null", "committedDate": "2020-07-20T08:35:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTEyMA==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459395120", "bodyText": "Unnecessary change.", "author": "ftence", "createdAt": "2020-07-23T11:57:13Z", "path": "etc/conf.templates/distributed/00-warp.conf.template", "diffHunk": "@@ -137,7 +137,7 @@ warp.components =\n // Maximum length of labels (names + values) - Defaults to 2048\n //\n #warp.labels.maxsize = 2048\n-  \n+", "originalCommit": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTEzNw==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459395137", "bodyText": "Unnecessary change.", "author": "ftence", "createdAt": "2020-07-23T11:57:16Z", "path": "etc/conf.templates/distributed/00-warp.conf.template", "diffHunk": "@@ -1,5 +1,5 @@\n //\n-//   Copyright 2019  SenX S.A.S.\n+//   Copyright 2019-2020  SenX S.A.S.", "originalCommit": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTM5Ng==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459395396", "bodyText": "Change warp to warpscript and update copyright date.", "author": "ftence", "createdAt": "2020-07-23T11:57:49Z", "path": "etc/conf.templates/distributed/20-warpscript.conf.template", "diffHunk": "@@ -222,3 +222,10 @@ warpscript.mobius.pool = 16\n // allow C style block comments. /**** valid block comment ****/\n //\n warpscript.comments.loose = true\n+\n+//\n+// Default priority order for matching labels when doing a FIND/FETCH.\n+// Comma separated list of label names.\n+// Defaults to .producer,.app,.owner\n+//\n+#warp.labels.priority =", "originalCommit": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ1MzIyMQ==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459453221", "bodyText": "the feature is not limited to WarpScript since it is also applies via the /fetch endpoint, so it is a general Warp config. Maybe we should move it back in another file.", "author": "hbs", "createdAt": "2020-07-23T13:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1MDQ0Nw==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r460750447", "bodyText": "Are you sure?\nConfiguration.WARP_LABELS_PRIORITY is only used to build FIND.DEFAULT_LABELS_PRIORITY which is only used in FIND.apply and FETCH.apply, but not in EgressFetchHandler.\nSo it seems to me this is only a WarpScript configuration key.", "author": "ftence", "createdAt": "2020-07-27T09:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTM5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTU0Ng==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459395546", "bodyText": "Unnecessary change.", "author": "ftence", "createdAt": "2020-07-23T11:58:06Z", "path": "etc/conf.templates/standalone/00-warp.conf.template", "diffHunk": "@@ -1,5 +1,5 @@\n //\n-//   Copyright 2019  SenX S.A.S.\n+//   Copyright 2019-2020  SenX S.A.S.", "originalCommit": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5NTYzMA==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459395630", "bodyText": "Change warp to warpscript and update copyright date.", "author": "ftence", "createdAt": "2020-07-23T11:58:19Z", "path": "etc/conf.templates/standalone/20-warpscript.conf.template", "diffHunk": "@@ -220,3 +220,10 @@ warpscript.runner.bootstrap.period = 120000\n // allow C style block comments. /**** valid block comment ****/\n //\n warpscript.comments.loose = true\n+\n+//\n+// Default priority order for matching labels when doing a FIND/FETCH.\n+// Comma separated list of label names.\n+// Defaults to .producer,.app,.owner\n+//\n+#warp.labels.priority =", "originalCommit": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMDA3MQ==", "url": "https://github.com/senx/warp10-platform/pull/777#discussion_r459410071", "bodyText": "I think it should be Map<String,String> ordered = new LinkedHashMap<String,String>(sel.size());.", "author": "ftence", "createdAt": "2020-07-23T12:26:42Z", "path": "warp10/src/main/java/io/warp10/script/functions/FIND.java", "diffHunk": "@@ -317,14 +368,30 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n         drequest.setLabelsSelectors(lblsSels);\n       } else {\n         // Fix labels\n-        \n+\n         if (drequest.isSetLabelsSelectors()) {\n-          for (Map<String,String> sel: drequest.getLabelsSelectors()) {\n+          for (int i = 0; i < drequest.getLabelsSelectorsSize(); i++) {\n+            Map<String,String> sel = drequest.getLabelsSelectors().get(i);\n             sel.remove(Constants.PRODUCER_LABEL);\n             sel.remove(Constants.OWNER_LABEL);\n             sel.remove(Constants.APPLICATION_LABEL);\n             sel.putAll(Tokens.labelSelectorsFromReadToken(rtoken));\n-          }          \n+\n+            // Re-order the labels\n+            Map<String,String> ordered = new LinkedHashMap<String,String>(null != labelSelectors ? labelSelectors.size() : 1);", "originalCommit": "0452a6d4bb574aeb37879fc19708e94aa4791c56", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e126ef9071a16208c0791945ed71d802b88f1bc3", "url": "https://github.com/senx/warp10-platform/commit/e126ef9071a16208c0791945ed71d802b88f1bc3", "message": "Merge branch 'master' into directory-match", "committedDate": "2020-07-28T06:55:35Z", "type": "commit"}, {"oid": "10bec2a92fecbee3c8894771cee6a909eda926fb", "url": "https://github.com/senx/warp10-platform/commit/10bec2a92fecbee3c8894771cee6a909eda926fb", "message": "Addressed PR comments", "committedDate": "2020-07-28T07:02:02Z", "type": "commit"}]}