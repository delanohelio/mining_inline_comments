{"pr_number": 4701, "pr_title": "Add getRole(tradeId) to core api", "pr_createdAt": "2020-10-25T19:27:03Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4701", "timeline": [{"oid": "cb65de6d2e1497eb8eaf86404fc3285729aba87c", "url": "https://github.com/bisq-network/bisq/commit/cb65de6d2e1497eb8eaf86404fc3285729aba87c", "message": "Block on tx-fee-request in core TakeOfferModel init\n\nAdded license comment too.", "committedDate": "2020-10-23T15:47:06Z", "type": "commit"}, {"oid": "ab20225cd2d50003a8f7f45feca6227a2370a9fb", "url": "https://github.com/bisq-network/bisq/commit/ab20225cd2d50003a8f7f45feca6227a2370a9fb", "message": "Add compiler warning suppression, remove comment", "committedDate": "2020-10-24T19:25:20Z", "type": "commit"}, {"oid": "63cf4369904855013ac5b8e37de43462c02e1551", "url": "https://github.com/bisq-network/bisq/commit/63cf4369904855013ac5b8e37de43462c02e1551", "message": "Add fields to grpc TradeInfo proto & wrapper", "committedDate": "2020-10-24T19:27:03Z", "type": "commit"}, {"oid": "296e4f98cb6231ed2226e72d95c1317981a9d008", "url": "https://github.com/bisq-network/bisq/commit/296e4f98cb6231ed2226e72d95c1317981a9d008", "message": "Replace static TradeUtil with singleton TradeUtil\n\nThe API is going to need some desktop trade utilities, which should be\nshared between :desktop and :core.api.", "committedDate": "2020-10-24T20:26:10Z", "type": "commit"}, {"oid": "ccd3c99f2e5b9cf276e6b70bceb34e73fb0a6858", "url": "https://github.com/bisq-network/bisq/commit/ccd3c99f2e5b9cf276e6b70bceb34e73fb0a6858", "message": "Fix comment typos", "committedDate": "2020-10-24T20:45:01Z", "type": "commit"}, {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019", "url": "https://github.com/bisq-network/bisq/commit/24ba9215cd12f65605b23c2f5d53037258afd019", "message": "Refactor PendingTradesViewModel methods -> TradeUtil & OfferUtil", "committedDate": "2020-10-25T13:41:19Z", "type": "commit"}, {"oid": "36ad1379496d29bf26d6d3c90c4cc50b8c74b928", "url": "https://github.com/bisq-network/bisq/commit/36ad1379496d29bf26d6d3c90c4cc50b8c74b928", "message": "Remove trailing spaces for codacy", "committedDate": "2020-10-25T13:54:40Z", "type": "commit"}, {"oid": "95bcb1ef9c74c6fa48f946ebc29b9af55bd1ed70", "url": "https://github.com/bisq-network/bisq/commit/95bcb1ef9c74c6fa48f946ebc29b9af55bd1ed70", "message": "Refactor PendingTradesDataModel methods -> TradeUtil\n\nScope of this refactoring is small;  more can be done, but the short\nterm goal is to share trade util logic with core api.\n\n- Removed unused method getCurrencyCode()\n- Made minor style changes\n- Removed duplicated code block", "committedDate": "2020-10-25T14:27:30Z", "type": "commit"}, {"oid": "bbd7a31c88907e7c29ce473e5a71603f976ace21", "url": "https://github.com/bisq-network/bisq/commit/bbd7a31c88907e7c29ce473e5a71603f976ace21", "message": "Remove unused import", "committedDate": "2020-10-25T14:38:03Z", "type": "commit"}, {"oid": "161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "url": "https://github.com/bisq-network/bisq/commit/161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "message": "Add getRole(tradeId) to core api\n\nAPI users will need to see their role as maker/taker when looking at trade details.\n\n- Add getRole(trade) to TradeUtil.\n- Add getTradeRole(tradeId) to CoreApi, CoreTradesService.\n- Add role field to TradeInfo proto and its wrapper class.", "committedDate": "2020-10-25T19:22:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2ODM5Ng==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515068396", "bodyText": "Could consider renaming to getMyRole but perhaps that's rather implicit.", "author": "sqrrm", "createdAt": "2020-10-30T12:38:54Z", "path": "core/src/main/java/bisq/core/trade/TradeUtil.java", "diffHunk": "@@ -173,6 +174,27 @@ public String getPaymentMethodNameWithCountryCode(Trade trade) {\n         return paymentMethodDescription;\n     }\n \n+    /**\n+     * Returns a string describing a trader's role for a given trade.\n+     * @param trade Trade\n+     * @return String describing a trader's role for a given trade\n+     */\n+    public String getRole(Trade trade) {", "originalCommit": "161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2OTM4MQ==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515069381", "bodyText": "I don't get why currenycode should be needed to decide role", "author": "sqrrm", "createdAt": "2020-10-30T12:40:51Z", "path": "core/src/main/java/bisq/core/trade/TradeUtil.java", "diffHunk": "@@ -173,6 +174,27 @@ public String getPaymentMethodNameWithCountryCode(Trade trade) {\n         return paymentMethodDescription;\n     }\n \n+    /**\n+     * Returns a string describing a trader's role for a given trade.\n+     * @param trade Trade\n+     * @return String describing a trader's role for a given trade\n+     */\n+    public String getRole(Trade trade) {\n+        Contract contract = trade.getContract();\n+        if (contract == null)\n+            throw new IllegalStateException(format(\"could not get role because no contract was found for trade '%s'\",\n+                    trade.getShortId()));\n+\n+        Offer offer = trade.getOffer();\n+        if (offer == null)\n+            throw new IllegalStateException(format(\"could not get role because no offer was found for trade '%s'\",\n+                    trade.getShortId()));\n+\n+        return getRole(contract.isBuyerMakerAndSellerTaker(),\n+                offer.isMyOffer(keyRing),\n+                offer.getCurrencyCode());", "originalCommit": "161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0ODM5Mw==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515148393", "bodyText": "Below is an example of the console output for a CLI's gettrade id command, where the role = BTC buyer as taker, showing what is being bought or sold.\nID      My Role             Price in USD for 1 BTC  Amount(BTC)  Tx Fee(BTC)  Taker Fee(BTC)  Deposit Published  Deposit Confirmed  Fiat Sent  Fiat Received  Payout Published  Withdrawn  \nAGnSOw  BTC buyer as taker             13,263.6578   0.12500000   0.00068800      0.00037500  YES                NO                 NO         NO             NO                NO", "author": "ghubstan", "createdAt": "2020-10-30T14:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2OTM4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyNTM2Ng==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515225366", "bodyText": "Ok, I get it, thanks.", "author": "sqrrm", "createdAt": "2020-10-30T16:32:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2OTM4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDI4Mw==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515070283", "bodyText": "Would be easier to just add new fields at the end, but I guess there is some system to it.", "author": "sqrrm", "createdAt": "2020-10-30T12:42:43Z", "path": "proto/src/main/proto/grpc.proto", "diffHunk": "@@ -218,25 +218,26 @@ message TradeInfo {\n     string tradeId = 2;\n     string shortId = 3;\n     uint64 date = 4;\n-    bool isCurrencyForTakerFeeBtc = 5;\n-    uint64 txFeeAsLong = 6;\n-    uint64 takerFeeAsLong = 7;\n-    string takerFeeTxId = 8;\n-    string depositTxId = 9;\n-    string payoutTxId = 10;\n-    uint64 tradeAmountAsLong = 11;\n-    uint64 tradePrice = 12;\n-    string tradingPeerNodeAddress = 13;\n-    string state = 14;\n-    string phase = 15;\n-    string tradePeriodState = 16;\n-    bool isDepositPublished = 17;\n-    bool isDepositConfirmed = 18;\n-    bool isFiatSent = 19;\n-    bool isFiatReceived = 20;\n-    bool isPayoutPublished = 21;\n-    bool isWithdrawn = 22;\n-    string contractAsJson = 23;\n+    string role = 5;\n+    bool isCurrencyForTakerFeeBtc = 6;\n+    uint64 txFeeAsLong = 7;\n+    uint64 takerFeeAsLong = 8;\n+    string takerFeeTxId = 9;\n+    string depositTxId = 10;\n+    string payoutTxId = 11;\n+    uint64 tradeAmountAsLong = 12;\n+    uint64 tradePrice = 13;\n+    string tradingPeerNodeAddress = 14;\n+    string state = 15;\n+    string phase = 16;\n+    string tradePeriodState = 17;\n+    bool isDepositPublished = 18;\n+    bool isDepositConfirmed = 19;\n+    bool isFiatSent = 20;\n+    bool isFiatReceived = 21;\n+    bool isPayoutPublished = 22;\n+    bool isWithdrawn = 23;\n+    string contractAsJson = 24;", "originalCommit": "161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1MjkyNA==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515152924", "bodyText": "There is a system, but don't know what it's called yet.  I'm just trying to keep field 'types' grouped together as I add more -- protocol flags together, tx-ids together, price & amt together, json-contract always the last field,  ...\nI thought about backward compatibility problems being caused by doing this, but I think it's safe to assume the CLI and server will always be in sync until a single server can support multiple clients on remote hosts.", "author": "ghubstan", "createdAt": "2020-10-30T14:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyNzE0Nw==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515227147", "bodyText": "I think you should not assume that CLI and server is in sync. Basically, once we announce the API publicly the protocol is fixed and should only be added to and old fields deprecated but not changed.", "author": "sqrrm", "createdAt": "2020-10-30T16:35:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyOTAxMA==", "url": "https://github.com/bisq-network/bisq/pull/4701#discussion_r515229010", "bodyText": "OK, I will stop re-ordering fields like this before the public announcement.", "author": "ghubstan", "createdAt": "2020-10-30T16:38:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDI4Mw=="}], "type": "inlineReview"}]}