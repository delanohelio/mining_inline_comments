{"pr_number": 4559, "pr_title": "Build out 'createoffer' API method", "pr_createdAt": "2020-09-23T23:34:44Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4559", "timeline": [{"oid": "9132722bbf38a7df0136b8f8c5087593125fe2f4", "url": "https://github.com/bisq-network/bisq/commit/9132722bbf38a7df0136b8f8c5087593125fe2f4", "message": "Replace hardcoded version with Version.java value\n\nBats version check tests now use a bash script for parsing\nthe value from the Bisq class file, and these test cases\nno longer need to be manually updated.", "committedDate": "2020-09-22T17:45:21Z", "type": "commit"}, {"oid": "34cfe9532ffa1d77f4310787bccca754b3745420", "url": "https://github.com/bisq-network/bisq/commit/34cfe9532ffa1d77f4310787bccca754b3745420", "message": "Remove comment", "committedDate": "2020-09-22T17:51:31Z", "type": "commit"}, {"oid": "8896372a0f34c5c253593aaadfccb904f82ee492", "url": "https://github.com/bisq-network/bisq/commit/8896372a0f34c5c253593aaadfccb904f82ee492", "message": "Move test dispute agent type constants to core\n\nThe string constants deleted from the test case are re-defined as enums,\nbut the test harness still passes around strings (enum.name()) because\nthe handling of invalid dispute agent type string args needs to be\ntested.  (Reminder:  CLI does not accept any enum arguments.)", "committedDate": "2020-09-22T18:31:38Z", "type": "commit"}, {"oid": "1f307c8263b424b9b5c5960d21bd17815b5e5f75", "url": "https://github.com/bisq-network/bisq/commit/1f307c8263b424b9b5c5960d21bd17815b5e5f75", "message": "Fix indentation", "committedDate": "2020-09-22T19:31:31Z", "type": "commit"}, {"oid": "6a5040228efaae72616f37896d15b51485d7b6c2", "url": "https://github.com/bisq-network/bisq/commit/6a5040228efaae72616f37896d15b51485d7b6c2", "message": "Add simple create payment acct test\n\nAnd make test dispute agent registration work from static fixture\nsetup methods.", "committedDate": "2020-09-22T21:05:09Z", "type": "commit"}, {"oid": "1d88d2733019da4c6231d5fa4159b69cba2dbf44", "url": "https://github.com/bisq-network/bisq/commit/1d88d2733019da4c6231d5fa4159b69cba2dbf44", "message": "Remove final modifiers", "committedDate": "2020-09-22T21:11:55Z", "type": "commit"}, {"oid": "c4dd041d97fbe5a100d9a56d763cf4b4b8ee7e16", "url": "https://github.com/bisq-network/bisq/commit/c4dd041d97fbe5a100d9a56d763cf4b4b8ee7e16", "message": "Don't use static boilerplate helpers if not necessary", "committedDate": "2020-09-22T21:20:23Z", "type": "commit"}, {"oid": "e63a6c57718ab6c480dd77b024ed9710f32bb72c", "url": "https://github.com/bisq-network/bisq/commit/e63a6c57718ab6c480dd77b024ed9710f32bb72c", "message": "Remove comment", "committedDate": "2020-09-22T21:45:50Z", "type": "commit"}, {"oid": "92f36ed03a4d054b7517f1ac1a8af7bf99b03b17", "url": "https://github.com/bisq-network/bisq/commit/92f36ed03a4d054b7517f1ac1a8af7bf99b03b17", "message": "Add get default payment acct helper", "committedDate": "2020-09-23T01:08:01Z", "type": "commit"}, {"oid": "2b68e572738d31afcdf41327d670d3a1dd654b87", "url": "https://github.com/bisq-network/bisq/commit/2b68e572738d31afcdf41327d670d3a1dd654b87", "message": "Stub out createoffer method in CLI", "committedDate": "2020-09-23T01:09:58Z", "type": "commit"}, {"oid": "3c0c443680a7eca723eb6efaf0b73a41b1781f9e", "url": "https://github.com/bisq-network/bisq/commit/3c0c443680a7eca723eb6efaf0b73a41b1781f9e", "message": "Change API's createoffer return value from bool to Offer", "committedDate": "2020-09-23T01:13:42Z", "type": "commit"}, {"oid": "70e3be0032218d37e0fc8a22023a1995394d49ad", "url": "https://github.com/bisq-network/bisq/commit/70e3be0032218d37e0fc8a22023a1995394d49ad", "message": "Add API CreateOfferTest case", "committedDate": "2020-09-23T01:16:55Z", "type": "commit"}, {"oid": "fc1f0bac60635e98bad75becfc7282567eb152d8", "url": "https://github.com/bisq-network/bisq/commit/fc1f0bac60635e98bad75becfc7282567eb152d8", "message": "Fix imports", "committedDate": "2020-09-23T01:56:08Z", "type": "commit"}, {"oid": "d190d09e2bc21ab8aaf686ba3a81a0936a716904", "url": "https://github.com/bisq-network/bisq/commit/d190d09e2bc21ab8aaf686ba3a81a0936a716904", "message": "Fix unnecessary use of fully qualified name", "committedDate": "2020-09-23T01:58:32Z", "type": "commit"}, {"oid": "adb175c21aed46d3f41da1d336bd9ecdfcdb2e4a", "url": "https://github.com/bisq-network/bisq/commit/adb175c21aed46d3f41da1d336bd9ecdfcdb2e4a", "message": "Add options helper for handling negative number CLI params", "committedDate": "2020-09-23T22:50:04Z", "type": "commit"}, {"oid": "1431a076b2c3dad0921c1ec0d623f4e82898b13a", "url": "https://github.com/bisq-network/bisq/commit/1431a076b2c3dad0921c1ec0d623f4e82898b13a", "message": "Add license comment", "committedDate": "2020-09-23T22:51:40Z", "type": "commit"}, {"oid": "d5b8800ba4dcab2e4c3a024140141dbfd3704510", "url": "https://github.com/bisq-network/bisq/commit/d5b8800ba4dcab2e4c3a024140141dbfd3704510", "message": "Add license comment and btc-string to satoshi converter\n\nThe converter is needed for CLI, which has no access to core or\ncommon utils.", "committedDate": "2020-09-23T22:52:37Z", "type": "commit"}, {"oid": "c8a7fe4b97bf6c2f439507695c97c33501015c98", "url": "https://github.com/bisq-network/bisq/commit/c8a7fe4b97bf6c2f439507695c97c33501015c98", "message": "Print createoffer's reply in the CLI's console", "committedDate": "2020-09-23T22:57:22Z", "type": "commit"}, {"oid": "a6048a4f7dc7bd105899daea608f0dc5b223ed97", "url": "https://github.com/bisq-network/bisq/commit/a6048a4f7dc7bd105899daea608f0dc5b223ed97", "message": "Add comment to empty catch block for codacy", "committedDate": "2020-09-23T23:43:56Z", "type": "commit"}, {"oid": "ec9c1b0f109f15edb41fac9ca400345e027dd472", "url": "https://github.com/bisq-network/bisq/commit/ec9c1b0f109f15edb41fac9ca400345e027dd472", "message": "Uppercase direction & ccy-code CLI arguments in core\n\nDon't convert parameter case in CLI.", "committedDate": "2020-09-24T12:18:13Z", "type": "commit"}, {"oid": "9999c95a9efe8de8597acddc679deba5e5e47621", "url": "https://github.com/bisq-network/bisq/commit/9999c95a9efe8de8597acddc679deba5e5e47621", "message": "Change 'createoffer' argument order\n\nAnd list the args in CLI --help outout.", "committedDate": "2020-09-24T16:48:50Z", "type": "commit"}, {"oid": "942a6f22030326fd05c6648d6b0dfdfc059c8fa8", "url": "https://github.com/bisq-network/bisq/commit/942a6f22030326fd05c6648d6b0dfdfc059c8fa8", "message": "Scale & convert (double) fixed price input to long", "committedDate": "2020-09-24T17:56:27Z", "type": "commit"}, {"oid": "6cdbc137c1420fc850c0ca1646d5c90841f24bfe", "url": "https://github.com/bisq-network/bisq/commit/6cdbc137c1420fc850c0ca1646d5c90841f24bfe", "message": "Move 'createoffer' price arg transform to server & test it\n\nThe CreateOfferRequest's price field type was changed from long to string,\nso a CLI param like 10000.0055 can be passed to the server as is, to be\nscaled and converted there.  In general, we want to keep validation logic\non the CLI as simple as possible, and use existing core logic to\nvalidate args and convert arg types when needed.", "committedDate": "2020-09-24T21:13:19Z", "type": "commit"}, {"oid": "96278b9babdac9276a4251fedb84e18006db0b1c", "url": "https://github.com/bisq-network/bisq/commit/96278b9babdac9276a4251fedb84e18006db0b1c", "message": "Push currencyCode.toUpperCase conversion below CoreApi", "committedDate": "2020-09-25T15:33:51Z", "type": "commit"}, {"oid": "995af0dd210a732feee09a8898601d8d63eb8a75", "url": "https://github.com/bisq-network/bisq/commit/995af0dd210a732feee09a8898601d8d63eb8a75", "message": "Convert mktPriceMargin to %, make createAndPlaceOffer private\n\nAnd move createAndPlaceOffer to bottom of class file.", "committedDate": "2020-09-25T16:50:50Z", "type": "commit"}, {"oid": "6cf9bbbaa99b902ace35f74b04224698e34b2172", "url": "https://github.com/bisq-network/bisq/commit/6cf9bbbaa99b902ace35f74b04224698e34b2172", "message": "Minor createoffer test changes", "committedDate": "2020-09-25T16:58:32Z", "type": "commit"}, {"oid": "3b518249d41e3d2c3daf61a80fe2710ae61f14dc", "url": "https://github.com/bisq-network/bisq/commit/3b518249d41e3d2c3daf61a80fe2710ae61f14dc", "message": "Do not reassign currencyCode parameter", "committedDate": "2020-09-25T17:44:35Z", "type": "commit"}, {"oid": "82ce864fda806a1de55d4fa0af5ab2ae7b0cfa79", "url": "https://github.com/bisq-network/bisq/commit/82ce864fda806a1de55d4fa0af5ab2ae7b0cfa79", "message": "Delete trailing spaces from blank line for codacy", "committedDate": "2020-09-25T18:19:10Z", "type": "commit"}, {"oid": "2f3e3a31e19cf9d488da2a6b01e0d6f7227838cd", "url": "https://github.com/bisq-network/bisq/commit/2f3e3a31e19cf9d488da2a6b01e0d6f7227838cd", "message": "Add simple mkt-price service & test calculated offer prices\n\nA gRPC price service was added, and api create-offer tests can check\nmkt based price margin calculations.", "committedDate": "2020-09-25T23:48:26Z", "type": "commit"}, {"oid": "18df1e2fd442af82c74c2e00b871fe30b1bda202", "url": "https://github.com/bisq-network/bisq/commit/18df1e2fd442af82c74c2e00b871fe30b1bda202", "message": "Fix abs(dbl) comparison", "committedDate": "2020-09-25T23:53:45Z", "type": "commit"}, {"oid": "92042d70ad06e878a7959bee85cd3faaf3861dfa", "url": "https://github.com/bisq-network/bisq/commit/92042d70ad06e878a7959bee85cd3faaf3861dfa", "message": "Remove unused import", "committedDate": "2020-09-25T23:56:25Z", "type": "commit"}, {"oid": "de3105a62be05e0e21bb22cb39c648a46b2c7845", "url": "https://github.com/bisq-network/bisq/commit/de3105a62be05e0e21bb22cb39c648a46b2c7845", "message": "Add license comment", "committedDate": "2020-09-25T23:56:48Z", "type": "commit"}, {"oid": "96abda4e2d1830e8d4b1ada46e5f97c96b144973", "url": "https://github.com/bisq-network/bisq/commit/96abda4e2d1830e8d4b1ada46e5f97c96b144973", "message": "Tidy up create offer using mkt price margin % test", "committedDate": "2020-09-26T16:40:10Z", "type": "commit"}, {"oid": "35a77be7e433b16351c29549563c82b2bb70fee8", "url": "https://github.com/bisq-network/bisq/commit/35a77be7e433b16351c29549563c82b2bb70fee8", "message": "Redefine DisputeAgentType REFUNDAGENT as REFUND_AGENT\n\nThe CLI needs to be able to register a REFUND_AGENT using the\n'refund_agent' or 'refundagent' parameter value (in any case),\nso an alt-name mapping was added to the enum def.", "committedDate": "2020-09-27T18:23:19Z", "type": "commit"}, {"oid": "70531693f00985ded648e9bb198e318a0cd43f36", "url": "https://github.com/bisq-network/bisq/commit/70531693f00985ded648e9bb198e318a0cd43f36", "message": "Fix asserts", "committedDate": "2020-09-27T20:02:38Z", "type": "commit"}, {"oid": "82b7b79c5b4252fd6ecfcaac82b7cd4f5769c3b7", "url": "https://github.com/bisq-network/bisq/commit/82b7b79c5b4252fd6ecfcaac82b7cd4f5769c3b7", "message": "Factor out duplicated OfferInfo wrapping", "committedDate": "2020-09-27T20:06:08Z", "type": "commit"}, {"oid": "50d4b9f5e1084caae1562ffeeffd6fc25aa22f76", "url": "https://github.com/bisq-network/bisq/commit/50d4b9f5e1084caae1562ffeeffd6fc25aa22f76", "message": "Fix 'switch statements should have a default label' codacy problem\n\nThis is an ugly, temporary fix.  Need to refactor again.", "committedDate": "2020-09-27T20:18:50Z", "type": "commit"}, {"oid": "d9ece9f5ba253f92719255a6e22c926717493269", "url": "https://github.com/bisq-network/bisq/commit/d9ece9f5ba253f92719255a6e22c926717493269", "message": "Revert \"Fix 'switch statements should have a default label' codacy problem\"\n\nThis reverts commit 50d4b9f5e1084caae1562ffeeffd6fc25aa22f76.\nBack out codacy fix;  it did not work.", "committedDate": "2020-09-27T20:25:44Z", "type": "commit"}, {"oid": "f3761530b541519ef23d8d8edc48f53e4a61282b", "url": "https://github.com/bisq-network/bisq/commit/f3761530b541519ef23d8d8edc48f53e4a61282b", "message": "Codacy requires default label in switch", "committedDate": "2020-09-28T12:38:08Z", "type": "commit"}, {"oid": "94996a5e25e0a141ad408250fb6b41838722f2c3", "url": "https://github.com/bisq-network/bisq/commit/94996a5e25e0a141ad408250fb6b41838722f2c3", "message": "Fix tx result handling in GrpcOffersService\n\nSeparates offer placement from offer creation to fix tx result\nhandling problem in GrpcOffersService, and readies the core api\nfor a new CLI 'placeoffer' implementation.  Offer placement still\nhappens in the api's 'createoffer', but we may want to change it\nto show the created offer to a CLI user for review, prior to manual\nplacement via a new 'placeoffer offer-id' (of 'confirmoffer offer-id'?)\napi method.", "committedDate": "2020-09-28T14:48:56Z", "type": "commit"}, {"oid": "fa5c21c0b22fac731b0298995521838cee5914d7", "url": "https://github.com/bisq-network/bisq/commit/fa5c21c0b22fac731b0298995521838cee5914d7", "message": "Fix BitcoinCli wrapper create bug", "committedDate": "2020-09-28T17:30:30Z", "type": "commit"}, {"oid": "fc94b97a0046ac2588faf83561c2b6a6f1b5cf41", "url": "https://github.com/bisq-network/bisq/commit/fc94b97a0046ac2588faf83561c2b6a6f1b5cf41", "message": "Throw exception to CLI if attempted offer placement fails", "committedDate": "2020-09-28T21:11:08Z", "type": "commit"}, {"oid": "cfe22c3cec4b3b6b2a00ee142ac48c37f04b663d", "url": "https://github.com/bisq-network/bisq/commit/cfe22c3cec4b3b6b2a00ee142ac48c37f04b663d", "message": "Make task handler's error msg CLI friendly (needs review)\n\nThis needs to be carefully reviewed to be sure it does not break the\ncreate/place offer error messaging in the UI, and should be\nreverted if offer validation will be refactored to work for both\nUI and gRPC CLI.", "committedDate": "2020-09-28T21:11:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMzIzOA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498223238", "bodyText": "Why put at i-1? Wouldn't it be more natural to use i?", "author": "sqrrm", "createdAt": "2020-10-01T12:57:53Z", "path": "cli/src/main/java/bisq/cli/NegativeNumberOptions.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.cli;\n+\n+import java.math.BigDecimal;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+import static java.util.Arrays.stream;\n+\n+class NegativeNumberOptions {\n+\n+    private final Map<Integer, String> negativeNumberParams = new HashMap<>();\n+\n+    String[] removeNegativeNumberOptions(String[] args) {\n+        // Cache any negative number params that will be rejected by the parser.\n+        // This should be called before command line parsing.\n+        for (int i = 0; i < args.length; i++) {\n+            if (isNegativeNumber.test(args[i])) {\n+                String param = args[i];\n+                negativeNumberParams.put(i - 1, new BigDecimal(param).toString());", "originalCommit": "adb175c21aed46d3f41da1d336bd9ecdfcdb2e4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk2MTQ2MQ==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498961461", "bodyText": "I use negativeNumberParams.put(i - 1, ...) because i-1 is the index of the api method param, but args includes the method name too.\n args[0] = method name\n negativeNumberParams.get(0) = 1st parameter of method name ( i.e., args[1] )\n\nI added an explanation in commit e09b821", "author": "ghubstan", "createdAt": "2020-10-02T17:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMzIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNzY5NA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499037694", "bodyText": "Wouldn't it be more natural to start the for loop at 1 then? Like for (int i = 1; i < args.length; i++) { since it's known that argument 0 is irrelevant and it would also make the code self explanatory.", "author": "sqrrm", "createdAt": "2020-10-02T20:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMzIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1MzA4OA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499053088", "bodyText": "Yes -- commit  723fc8f.", "author": "ghubstan", "createdAt": "2020-10-02T21:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyMzIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyNjA1NA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498226054", "bodyText": "How about nonOptionArgsClone.set(idx, v);?", "author": "sqrrm", "createdAt": "2020-10-01T13:02:14Z", "path": "cli/src/main/java/bisq/cli/NegativeNumberOptions.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.cli;\n+\n+import java.math.BigDecimal;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+import static java.util.Arrays.stream;\n+\n+class NegativeNumberOptions {\n+\n+    private final Map<Integer, String> negativeNumberParams = new HashMap<>();\n+\n+    String[] removeNegativeNumberOptions(String[] args) {\n+        // Cache any negative number params that will be rejected by the parser.\n+        // This should be called before command line parsing.\n+        for (int i = 0; i < args.length; i++) {\n+            if (isNegativeNumber.test(args[i])) {\n+                String param = args[i];\n+                negativeNumberParams.put(i - 1, new BigDecimal(param).toString());\n+                args[i] = \"0\";  // Substitute a zero so the options parser won't barf.\n+            }\n+        }\n+        return args;\n+    }\n+\n+    List<String> restoreNegativeNumberOptions(List<String> nonOptionArgs) {\n+        // Put cached negative number params into a clone of the nonOptionArgs list.\n+        // This should be called after command line parsing.\n+        if (!negativeNumberParams.isEmpty()) {\n+            List<String> nonOptionArgsClone = new ArrayList<>(nonOptionArgs);\n+            negativeNumberParams.forEach((k, v) -> {\n+                int idx = k;\n+                nonOptionArgsClone.remove(idx);\n+                nonOptionArgsClone.add(idx, v);", "originalCommit": "adb175c21aed46d3f41da1d336bd9ecdfcdb2e4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk2MTYwMA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498961600", "bodyText": "Ugh.  Fixed in commit  23a677d", "author": "ghubstan", "createdAt": "2020-10-02T17:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyNjA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIzMTczMg==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498231732", "bodyText": "Expected more than 8 options but only 8 expected options listed", "author": "sqrrm", "createdAt": "2020-10-01T13:11:00Z", "path": "cli/src/main/java/bisq/cli/CliMain.java", "diffHunk": "@@ -169,8 +189,39 @@ public static void run(String[] args) {\n                     return;\n                 }\n                 case createoffer: {\n-                    // TODO\n-                    out.println(\"offer created\");\n+                    if (nonOptionArgs.size() < 9)\n+                        throw new IllegalArgumentException(\"incorrect parameter count,\"\n+                                + \" expecting buy | sell, payment acct id, currency code, amount, min amount,\"\n+                                + \" use-market-based-price, fixed-price | mkt-price-margin, security-deposit\");", "originalCommit": "c8a7fe4b97bf6c2f439507695c97c33501015c98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MDgzNA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498770834", "bodyText": "I think this was fixed in a later commit", "author": "sqrrm", "createdAt": "2020-10-02T11:42:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIzMTczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc2ODA5Ng==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498768096", "bodyText": "I think we can ignore codacy on this one going forward as it's possible to merge even when it's complaining. Perhaps we could even configure codacy to ignore it.", "author": "sqrrm", "createdAt": "2020-10-02T11:35:50Z", "path": "core/src/main/java/bisq/core/api/CoreDisputeAgentsService.java", "diffHunk": "@@ -100,6 +100,10 @@ void registerDisputeAgent(String disputeAgentTypeString, String registrationKey)\n                     signature = refundAgentManager.signStorageSignaturePubKey(Objects.requireNonNull(ecKey));\n                     registerRefundAgent(nodeAddress, languageCodes, ecKey, signature);\n                     return;\n+                default:\n+                    // Codacy requires default label in switch, Intellij does not.\n+                    //noinspection UnnecessaryReturnStatement\n+                    return;", "originalCommit": "f3761530b541519ef23d8d8edc48f53e4a61282b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3NDg1Nw==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498974857", "bodyText": "Unused default switch label deleted in 0332711.", "author": "ghubstan", "createdAt": "2020-10-02T18:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc2ODA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MDU5MA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498770590", "bodyText": "The UI might get a bit verbose on errors with this change.", "author": "sqrrm", "createdAt": "2020-10-02T11:42:22Z", "path": "common/src/main/java/bisq/common/taskrunner/Task.java", "diffHunk": "@@ -65,7 +67,7 @@ protected void failed(String message) {\n \n     protected void failed(Throwable t) {\n         log.error(errorMessage, t);\n-        taskHandler.handleErrorMessage(errorMessage);\n+        taskHandler.handleErrorMessage(format(\"%s: %s\", errorMessage, t.getMessage()));", "originalCommit": "cfe22c3cec4b3b6b2a00ee142ac48c37f04b663d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3MjgzOQ==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r498972839", "bodyText": "I reverted it, then pushed a change (631c3f4) -> taskHandler.handleErrorMessage(t.getMessage());, which is what I meant to do in the first place.  Now, the verbose msg in logged on the server, but just the exception msg is passed up to clients.", "author": "ghubstan", "createdAt": "2020-10-02T18:07:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MDU5MA=="}], "type": "inlineReview"}, {"oid": "23a677d3b8eb51c8d7abac397f628e9469feb506", "url": "https://github.com/bisq-network/bisq/commit/23a677d3b8eb51c8d7abac397f628e9469feb506", "message": "Use list.set, not list.remove, list.add", "committedDate": "2020-10-02T17:24:22Z", "type": "commit"}, {"oid": "e09b821222f363df7d4ef69339fe05dfc4a5b11d", "url": "https://github.com/bisq-network/bisq/commit/e09b821222f363df7d4ef69339fe05dfc4a5b11d", "message": "Explain use of args clone index (i-1)", "committedDate": "2020-10-02T17:41:47Z", "type": "commit"}, {"oid": "628c557a98b38a8ce5d821f0046742e85b6da669", "url": "https://github.com/bisq-network/bisq/commit/628c557a98b38a8ce5d821f0046742e85b6da669", "message": "Revert \"Make task handler's error msg CLI friendly (needs review)\"\n\nThis reverts commit cfe22c3cec4b3b6b2a00ee142ac48c37f04b663d.\n\nThis will be Too verbose in UI.", "committedDate": "2020-10-02T17:51:43Z", "type": "commit"}, {"oid": "631c3f4f12a5130bb2d16ba9b8f202da0c9ef096", "url": "https://github.com/bisq-network/bisq/commit/631c3f4f12a5130bb2d16ba9b8f202da0c9ef096", "message": "Log provenance of Task error on server, but pass only exception msg to clients\n\nAdjusted create offer validation test", "committedDate": "2020-10-02T18:02:37Z", "type": "commit"}, {"oid": "033271189ff888c4f50b7269067c381e11412803", "url": "https://github.com/bisq-network/bisq/commit/033271189ff888c4f50b7269067c381e11412803", "message": "Ignore codacy complaint about (dead) default switch labels", "committedDate": "2020-10-02T18:10:13Z", "type": "commit"}, {"oid": "f1693a6cf4d1b7cb5f0380f63dad8d50cdc72157", "url": "https://github.com/bisq-network/bisq/commit/f1693a6cf4d1b7cb5f0380f63dad8d50cdc72157", "message": "Add switch statement break to make codacy happy", "committedDate": "2020-10-02T18:25:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNTU2MA==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499035560", "bodyText": "For symmetry I would probably have a return here, or break in the MEDIATOR case. Not serious, but it makes more sense when similar cases are handled the same way. In this case one has to wonder why there is a return in one case and break in the next.", "author": "sqrrm", "createdAt": "2020-10-02T20:28:24Z", "path": "core/src/main/java/bisq/core/api/CoreDisputeAgentsService.java", "diffHunk": "@@ -99,6 +99,7 @@ void registerDisputeAgent(String disputeAgentTypeString, String registrationKey)\n                     ecKey = refundAgentManager.getRegistrationKey(registrationKey);\n                     signature = refundAgentManager.signStorageSignaturePubKey(Objects.requireNonNull(ecKey));\n                     registerRefundAgent(nodeAddress, languageCodes, ecKey, signature);\n+                    break;", "originalCommit": "f1693a6cf4d1b7cb5f0380f63dad8d50cdc72157", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0NTgwNg==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499045806", "bodyText": "I did not make sense to me, but codacy wanted a break (statement).   I'll change it to a return.", "author": "ghubstan", "createdAt": "2020-10-02T20:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNTU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0ODUxMg==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499048512", "bodyText": "My two ducat's worth... I think Intellij's code inspector is more intelligent than codacy's.", "author": "ghubstan", "createdAt": "2020-10-02T21:01:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNTU2MA=="}], "type": "inlineReview"}, {"oid": "c71ad8489c0a0e7ec89a9a0c1575b683f216548f", "url": "https://github.com/bisq-network/bisq/commit/c71ad8489c0a0e7ec89a9a0c1575b683f216548f", "message": "Change 'break' to 'return' at end of switch.", "committedDate": "2020-10-02T20:57:31Z", "type": "commit"}, {"oid": "723fc8fc08ab25b471436b24eb42d62c1412caee", "url": "https://github.com/bisq-network/bisq/commit/723fc8fc08ab25b471436b24eb42d62c1412caee", "message": "Skip over method name in args loop, start at i=1", "committedDate": "2020-10-02T21:11:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MjQ5Mg==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499142492", "bodyText": "I would like to exclude this change from this PR. It would affect the UI notifications that depend on the errormessage being reasonable for display.\nGenerally refactoring is fine (although more care is needed now with the many big PRs coming in, to avoid conflicts) and behavioral changes are fine as long as the ramifications are taken into account, I feel that's lacking here.\nThat's the only issue I have left. The rest looks good.", "author": "sqrrm", "createdAt": "2020-10-03T12:08:50Z", "path": "common/src/main/java/bisq/common/taskrunner/Task.java", "diffHunk": "@@ -65,7 +65,7 @@ protected void failed(String message) {\n \n     protected void failed(Throwable t) {\n         log.error(errorMessage, t);\n-        taskHandler.handleErrorMessage(errorMessage);\n+        taskHandler.handleErrorMessage(t.getMessage());", "originalCommit": "631c3f4f12a5130bb2d16ba9b8f202da0c9ef096", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NTE3NQ==", "url": "https://github.com/bisq-network/bisq/pull/4559#discussion_r499155175", "bodyText": "I put Task.java back to the way it was before I made any changes to it. It now sends An error occurred at task: ValidateOffer up to the CLI, instead of the details of the error, i.e., Amount is larger than 1.00 BTC, but solving this is for another PR, with better analysis of how a solution affects the UI.", "author": "ghubstan", "createdAt": "2020-10-03T15:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MjQ5Mg=="}], "type": "inlineReview"}, {"oid": "d3d6d98666a6c86110f9a907488a4df54b257a0a", "url": "https://github.com/bisq-network/bisq/commit/d3d6d98666a6c86110f9a907488a4df54b257a0a", "message": "Revert all changes since commit d55114e\n\nRevert Task.java back to the state it was in prior to\nmy attempts to make it work for passing error msgs to a\ngRPC CLI running 'placeoffer'.  Adjust the affected test\naccordingly.", "committedDate": "2020-10-03T14:55:58Z", "type": "commit"}]}