{"pr_number": 2908, "pr_title": "Fix HunspellRuleTest on Windows", "pr_createdAt": "2020-05-11T15:20:13Z", "pr_url": "https://github.com/languagetool-org/languagetool/pull/2908", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDU1OQ==", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423124559", "bodyText": "I'm not sure if this is a good idea, the input file could be very large and would be loaded into memory this way (the same is true for other cases in HttpApiSentenceChecler)...", "author": "danielnaber", "createdAt": "2020-05-11T15:28:57Z", "path": "languagetool-dev/src/main/java/org/languagetool/dev/httpchecker/HttpApiSentenceChecker.java", "diffHunk": "@@ -80,15 +80,8 @@ private String formatDuration(Duration duration) {\n     return String.format(\"%d:%02d:%02d\", absSeconds / 3600, (absSeconds % 3600) / 60, absSeconds % 60);\n   }\n \n-  private int countLines(File input) throws FileNotFoundException {\n-    int count = 0;\n-    try (Scanner sc = new Scanner(input)) {\n-      while (sc.hasNextLine()) {\n-        sc.nextLine();\n-        count++;\n-      }\n-    }\n-    return count;\n+  private int countLines(File input) throws IOException {\n+    return Files.readAllLines(input.toPath()).size();", "originalCommit": "018ed4f577081d1ad23bf6cc3cc05b0048fd128d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0ODY3Nw==", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423148677", "bodyText": "You are definitely right, this approach doesn't work for large files.\nIt has been changed, please let me know if other places also need lines to be read one-by-one.", "author": "asashour", "createdAt": "2020-05-11T16:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MDkxNQ==", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423570915", "bodyText": "This should also use scanner to avoid reading everything into RAM.", "author": "danielnaber", "createdAt": "2020-05-12T08:52:19Z", "path": "languagetool-dev/src/main/java/org/languagetool/dev/bigdata/TextIndexCreator.java", "diffHunk": "@@ -56,16 +57,13 @@ private void index(File outputDir, String[] inputFiles) throws IOException {\n   private void indexFile(IndexWriter indexWriter, String inputFile) throws IOException {\n     System.out.println(\"Indexing \" + inputFile);\n     int lineCount = 0;\n-    try (Scanner scanner = new Scanner(new File(inputFile))) {\n-      while (scanner.hasNextLine()) {\n-        String line = scanner.nextLine();\n-        Document doc = new Document();\n-        doc.add(new TextField(Lucene.FIELD_NAME, line, Field.Store.YES));\n-        doc.add(new TextField(Lucene.FIELD_NAME_LOWERCASE, line.toLowerCase(), Field.Store.YES));\n-        indexWriter.addDocument(doc);\n-        if (++lineCount % 10_000 == 0) {\n-          System.out.println(lineCount + \"...\");\n-        }\n+    for (String line : Files.readAllLines(Paths.get(inputFile))) {", "originalCommit": "5eaf9a64758588ab86fc824341e850020b676390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MTA5OA==", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423571098", "bodyText": "This should also use scanner to avoid reading everything into RAM.", "author": "danielnaber", "createdAt": "2020-05-12T08:52:35Z", "path": "languagetool-dev/src/main/java/org/languagetool/dev/diff/LightRuleMatchParser.java", "diffHunk": "@@ -54,18 +55,17 @@\n     ObjectMapper mapper = new ObjectMapper();\n     List<LightRuleMatch> ruleMatches = new ArrayList<>();\n     int lineCount = 1;\n-    try (Scanner scanner = new Scanner(inputFile)) {\n-      while (scanner.hasNextLine()) {\n-        String line = scanner.nextLine();\n+    for (String line : Files.readAllLines(inputFile.toPath())) {", "originalCommit": "5eaf9a64758588ab86fc824341e850020b676390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4MjQwNQ==", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423582405", "bodyText": "Done, and I removed the try/catch, because no exception is thrown from the enclosed methods.", "author": "asashour", "createdAt": "2020-05-12T09:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MTA5OA=="}], "type": "inlineReview"}, {"oid": "1baebe695df3229b46aaa68f78292ac2f34ab20f", "url": "https://github.com/languagetool-org/languagetool/commit/1baebe695df3229b46aaa68f78292ac2f34ab20f", "message": "Fix HunspellRuleTest\n\nFixes #2202", "committedDate": "2020-05-12T09:04:48Z", "type": "commit"}]}