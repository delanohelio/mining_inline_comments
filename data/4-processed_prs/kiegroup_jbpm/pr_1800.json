{"pr_number": 1800, "pr_title": "[JBPM-9461] Add a flag/switch to include or exclude process variables\u2026", "pr_createdAt": "2020-11-11T15:10:59Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1800", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NjY4NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r522076685", "bodyText": "assertThat is deprecated.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat(data.size(), is(queryContext.getCount()));\n          \n          \n            \n                        assertEquals(queryContext.getCount(), data.size());", "author": "afalhambra", "createdAt": "2020-11-12T12:41:38Z", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -220,6 +222,22 @@ public void testQueryLikeToOperator() {\n         }\n     }\n \n+    @Test\n+    public void testQueryProcVarsExclusion() {\n+\n+        List<QueryParam> variables = list(likeTo(\"var_a\", false, \"a%\"));\n+        List<QueryParam> attributes = list(exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, variables, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));", "originalCommit": "3d75a62dbf1df5df71128241e4924aec28119de6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3NjQyNQ==", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r524076425", "bodyText": "done", "author": "elguardian", "createdAt": "2020-11-16T10:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NjY4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NzEwMA==", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r522077100", "bodyText": "minor, just skip it if you want - static import\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Assert.assertEquals(0, p.getVariables().size());\n          \n          \n            \n                        assertEquals(0, p.getVariables().size());", "author": "afalhambra", "createdAt": "2020-11-12T12:42:20Z", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -220,6 +222,22 @@ public void testQueryLikeToOperator() {\n         }\n     }\n \n+    @Test\n+    public void testQueryProcVarsExclusion() {\n+\n+        List<QueryParam> variables = list(likeTo(\"var_a\", false, \"a%\"));\n+        List<QueryParam> attributes = list(exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, variables, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        }\n+\n+        for (ProcessInstanceWithVarsDesc p : data) {\n+            Assert.assertEquals(0, p.getVariables().size());", "originalCommit": "3d75a62dbf1df5df71128241e4924aec28119de6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3NjY3OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r524076679", "bodyText": "done", "author": "elguardian", "createdAt": "2020-11-16T10:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NzEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3Nzg4OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r522077889", "bodyText": "same comments as above", "author": "afalhambra", "createdAt": "2020-11-12T12:43:47Z", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -300,6 +318,21 @@ public void testQueryTaskByVariables() {\n         }\n     }\n \n+    @Test\n+    public void testQueryTaskExcludeByVariables() {\n+        List<QueryParam> variables = list(equalsTo(\"task_in_a1\", \"a0\"));\n+        List<QueryParam> attributes = list(equalsTo(PROCESS_ATTR_DEPLOYMENT_ID, \"org.jbpm.test:test-module:1.0.0\"), exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<String> potOwners = emptyList();\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, variables, emptyList(), potOwners, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        }\n+        for (UserTaskInstanceWithPotOwnerDesc p : data) {\n+            Assert.assertEquals(0, p.getProcessVariables().size());\n+        }", "originalCommit": "3d75a62dbf1df5df71128241e4924aec28119de6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3NzQyMg==", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r524077422", "bodyText": "done", "author": "elguardian", "createdAt": "2020-11-16T10:18:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3Nzg4OQ=="}], "type": "inlineReview"}, {"oid": "28254d73c4d65ed5127907ce2e58dd2ed1f0d6ca", "url": "https://github.com/kiegroup/jbpm/commit/28254d73c4d65ed5127907ce2e58dd2ed1f0d6ca", "message": "[JBPM-9461] Add a flag/switch to include or exclude process variables in the results in the new Advanced Runtime API", "committedDate": "2020-11-16T10:18:54Z", "type": "commit"}, {"oid": "28254d73c4d65ed5127907ce2e58dd2ed1f0d6ca", "url": "https://github.com/kiegroup/jbpm/commit/28254d73c4d65ed5127907ce2e58dd2ed1f0d6ca", "message": "[JBPM-9461] Add a flag/switch to include or exclude process variables in the results in the new Advanced Runtime API", "committedDate": "2020-11-16T10:18:54Z", "type": "forcePushed"}]}