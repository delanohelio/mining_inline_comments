{"pr_number": 1635, "pr_title": "[RHPAM-2861] JPA vs JMS audit produces different logs", "pr_createdAt": "2020-04-16T11:18:31Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1635", "timeline": [{"oid": "805982b7bf61781c02f40044174eff4d3d7915e7", "url": "https://github.com/kiegroup/jbpm/commit/805982b7bf61781c02f40044174eff4d3d7915e7", "message": "[RHPAM-2861] JPA vs JMS audit produces different logs", "committedDate": "2020-04-16T12:16:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MjkzMg==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r409682932", "bodyText": "May getId be better to use in comparison than getDate ?  Anyway, is it needed to sort the collection?", "author": "gmunozfe", "createdAt": "2020-04-16T16:17:52Z", "path": "jbpm-audit/src/test/java/org/jbpm/process/audit/jms/AsyncAuditLogProducerTest.java", "diffHunk": "@@ -233,12 +235,19 @@ public void testAsyncAuditLoggerComplete() throws Exception {\n         List<ProcessInstanceLog> processInstances = logService.findProcessInstances(\"com.sample.ruleflow\");\n         Assertions.assertThat(processInstances.size()).isEqualTo(1);\n         List<NodeInstanceLog> nodeInstances = logService.findNodeInstances(processInstance.getId());\n+        Collections.sort(nodeInstances, (o1, o2) -> o1.getDate().compareTo(o2.getDate()));", "originalCommit": "805982b7bf61781c02f40044174eff4d3d7915e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMDQ5MA==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r410020490", "bodyText": "that line was  not needed (removed)", "author": "elguardian", "createdAt": "2020-04-17T06:39:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MjkzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4ODIwMA==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r409688200", "bodyText": "It should be BEFORE_NODE_LEFT_EVENT_TYPE, shouldn't it?\nSo, now, it's logging it before leaving the node", "author": "gmunozfe", "createdAt": "2020-04-16T16:25:39Z", "path": "jbpm-audit/src/main/java/org/jbpm/process/audit/jms/AsyncAuditLogProducer.java", "diffHunk": "@@ -161,10 +159,11 @@ public void afterNodeTriggered(ProcessNodeTriggeredEvent event) {\n     \t}\n     }\n \n+\n     @Override\n     public void beforeNodeLeft(ProcessNodeLeftEvent event) {\n-\n-        \n+        NodeInstanceLog log = (NodeInstanceLog) builder.buildEvent(event, null);\n+        sendMessage(log, AFTER_NODE_LEFT_EVENT_TYPE, 1);", "originalCommit": "805982b7bf61781c02f40044174eff4d3d7915e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNDQ2Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r410024466", "bodyText": "this can cause an incompatibility. So I wouldn't do that at least for now.", "author": "elguardian", "createdAt": "2020-04-17T06:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4ODIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MDM2NA==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r409690364", "bodyText": "Setting the level is not longer needed?", "author": "gmunozfe", "createdAt": "2020-04-16T16:28:54Z", "path": "jbpm-flow/src/main/java/org/jbpm/workflow/instance/impl/NodeInstanceImpl.java", "diffHunk": "@@ -176,15 +175,7 @@ public final void trigger(NodeInstance from, String type) {\n     \t}\n     \t\n     \tif (from != null) {\n-    \t    int level = ((org.jbpm.workflow.instance.NodeInstance)from).getLevel();\n-    \t    ((org.jbpm.workflow.instance.NodeInstanceContainer)getNodeInstanceContainer()).setCurrentLevel(level);", "originalCommit": "805982b7bf61781c02f40044174eff4d3d7915e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNDc3OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r410024779", "bodyText": "nope. this is really complex to explain, but this piece of code creates new NodeInstanceImpl under the good so it is not good either.", "author": "elguardian", "createdAt": "2020-04-17T06:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MDM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MTg2OA==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r409691868", "bodyText": "\"UniqueId\" could be defined as constant (as it is used three times in this class) (SonarCloud code smell)", "author": "gmunozfe", "createdAt": "2020-04-16T16:31:17Z", "path": "jbpm-flow/src/main/java/org/jbpm/workflow/instance/impl/NodeInstanceImpl.java", "diffHunk": "@@ -176,15 +175,7 @@ public final void trigger(NodeInstance from, String type) {\n     \t}\n     \t\n     \tif (from != null) {\n-    \t    int level = ((org.jbpm.workflow.instance.NodeInstance)from).getLevel();\n-    \t    ((org.jbpm.workflow.instance.NodeInstanceContainer)getNodeInstanceContainer()).setCurrentLevel(level);\n-\t    \tCollection<Connection> incoming = getNode().getIncomingConnections(type);\n-\t    \tfor (Connection conn : incoming) {\n-\t    \t    if (conn.getFrom().getId() == from.getNodeId()) {\n-\t    \t        this.metaData.put(\"IncomingConnection\", conn.getMetaData().get(\"UniqueId\"));\n-\t    \t        break;\n-\t    \t    }\n-\t    \t}\n+            this.metaData.put(\"IncomingConnection\", from.getNode().getMetaData().get(\"UniqueId\"));", "originalCommit": "805982b7bf61781c02f40044174eff4d3d7915e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNDgyMw==", "url": "https://github.com/kiegroup/jbpm/pull/1635#discussion_r410024823", "bodyText": "ok", "author": "elguardian", "createdAt": "2020-04-17T06:51:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MTg2OA=="}], "type": "inlineReview"}, {"oid": "2c47c0b4b93df071924ce0c7c4752269ff0109e0", "url": "https://github.com/kiegroup/jbpm/commit/2c47c0b4b93df071924ce0c7c4752269ff0109e0", "message": "[RHPAM-2861] JPA vs JMS audit produces different logs", "committedDate": "2020-04-17T06:51:32Z", "type": "commit"}, {"oid": "2c47c0b4b93df071924ce0c7c4752269ff0109e0", "url": "https://github.com/kiegroup/jbpm/commit/2c47c0b4b93df071924ce0c7c4752269ff0109e0", "message": "[RHPAM-2861] JPA vs JMS audit produces different logs", "committedDate": "2020-04-17T06:51:32Z", "type": "forcePushed"}]}