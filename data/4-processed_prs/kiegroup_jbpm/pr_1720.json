{"pr_number": 1720, "pr_title": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)", "pr_createdAt": "2020-08-04T13:05:39Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1720", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NTQ2Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r465685466", "bodyText": "Why is removed? I think this is not exactly a Test class, as there are no assertions.\nWe could expand this PR jbpm#1714 to check also new files at certification matrix only for postgres allocated dbs.", "author": "gmunozfe", "createdAt": "2020-08-05T12:20:32Z", "path": "jbpm-db-scripts/src/test/java/org/jbpm/persistence/scripts/GenerateDDLScriptsTests.java", "diffHunk": "@@ -36,33 +35,38 @@\n  * Utility class for generating DDL scripts (create and drop) please ignore it.\n  */\n @RunWith(Parameterized.class)\n-@Ignore", "originalCommit": "416a2a587f021e3465ad4af5eb61ba7b4cbff396", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzEwNQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466317105", "bodyText": "done", "author": "elguardian", "createdAt": "2020-08-06T10:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NTQ2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NTk2NA==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r465685964", "bodyText": "Shouldn't it be \"springboot-\" subtype instead of \"new-\"?", "author": "gmunozfe", "createdAt": "2020-08-05T12:21:28Z", "path": "jbpm-db-scripts/src/test/java/org/jbpm/persistence/scripts/GenerateDDLScriptsTests.java", "diffHunk": "@@ -36,33 +35,38 @@\n  * Utility class for generating DDL scripts (create and drop) please ignore it.\n  */\n @RunWith(Parameterized.class)\n-@Ignore\n public class GenerateDDLScriptsTests {\n \n-    private static class ScriptFile {\n+    static {\n+        System.setProperty(\"org.kie.persistence.postgresql.useBytea\", \"false\");\n+    }\n+\n+    public static class ScriptFile {\n \n         private String dialect;\n         private String alias;\n         private String prefix;\n+        private String subtype;\n         private boolean newGenerator;\n \n         public ScriptFile(String dialect, String alias, boolean newGenerator) {\n-            this(dialect, alias, alias, newGenerator);\n+            this(dialect, alias, alias, (newGenerator ? \"new-\" : \"\"), newGenerator);", "originalCommit": "416a2a587f021e3465ad4af5eb61ba7b4cbff396", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzI2OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466317269", "bodyText": "done", "author": "elguardian", "createdAt": "2020-08-06T10:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NTk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NzA1Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r465687056", "bodyText": "Same as above, perhaps better merge with this PR jbpm#1714", "author": "gmunozfe", "createdAt": "2020-08-05T12:23:31Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/TestsUtil.java", "diffHunk": "@@ -51,7 +51,7 @@\n             final boolean sortByName, final boolean dropFiles) {\n         final File folderWithScripts = new File(folderWithDDLs.getPath() + File.separator + databaseType.getScriptsFolderName());\n         if (folderWithScripts.exists()) {\n-            Predicate<File> filterNew = (name) -> name.getName().toLowerCase().contains(\"springboot\");\n+            Predicate<File> filterNew = (name) -> name.getName().toLowerCase().contains(\"springboot\") || name.getName().toLowerCase().contains(\"bytea\");", "originalCommit": "416a2a587f021e3465ad4af5eb61ba7b4cbff396", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzE4NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466317185", "bodyText": "done", "author": "elguardian", "createdAt": "2020-08-06T10:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NzA1Ng=="}], "type": "inlineReview"}, {"oid": "599f21bdc9e3df856eb07da1cfa9dce4808ba200", "url": "https://github.com/kiegroup/jbpm/commit/599f21bdc9e3df856eb07da1cfa9dce4808ba200", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-06T10:25:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ2ODI4NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466468285", "bodyText": "There are parsing errors when executing line by line, as current parser expects \";\" (DELIMITER_STANDARD) at the end of line", "author": "gmunozfe", "createdAt": "2020-08-06T14:48:36Z", "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-bytea-jbpm-drop-schema.sql", "diffHunk": "@@ -0,0 +1,123 @@\n+alter table Attachment drop constraint FKd5xpm81gxg8n40167lbu5rbfb\n+alter table Attachment drop constraint FKjj9psk52ifamilliyo16epwpc\n+alter table BooleanExpression drop constraint FKqth56a8k6d8pv6ngsu2vjp4kj\n+alter table CorrelationPropertyInfo drop constraint FKbchyl7kb8i6ghvi3dbr86bgo0\n+alter table Deadline drop constraint FK361ggw230po88svgfasg36i2w\n+alter table Deadline drop constraint FKpeiadnoy228t35213t63c3imm\n+alter table Delegation_delegates drop constraint FKewkdyi0wrgy9byp6abyglpcxq\n+alter table Delegation_delegates drop constraint FK85x3trafk3wfbrv719cafr591\n+alter table ErrorInfo drop constraint FKdarp6ushq06q39jmij3fdpdbs\n+alter table Escalation drop constraint FK37v8ova8ti6jiblda7n6j298e\n+alter table EventTypes drop constraint FKj0o3uve2nqo5yrjwrkc9jfttq\n+alter table I18NText drop constraint FKcd6eb4q62d9ab8p0di8pb99ch\n+alter table I18NText drop constraint FKiogka67sji8fk4cp7a369895i\n+alter table I18NText drop constraint FKrisdlmalotmk64mdeqpo4s5m0\n+alter table I18NText drop constraint FKqxgws3fnukyqlaet11tivqg5u\n+alter table I18NText drop constraint FKthf8ix3t3opf9hya1s04hwsx8\n+alter table I18NText drop constraint FKg2jsybeuc8pbj8ek8xwxutuyo\n+alter table I18NText drop constraint FKp0m7uhipskrljktvfeubdgfid\n+alter table I18NText drop constraint FK6k8hmfvhko069970eghiy2ifp\n+alter table I18NText drop constraint FK8wn7sw34q6bifsi1pvl2b1yyb\n+alter table Notification drop constraint FKoxq5uqfg4ylwyijsg2ubyflna\n+alter table Notification_BAs drop constraint FK378pb1cvjv54w4ljqpw99s3wr\n+alter table Notification_BAs drop constraint FKb123fgeomc741s9yc014421yy\n+alter table Notification_email_header drop constraint FKd74pdu41avy2f7a8qyp7wn2n\n+alter table Notification_email_header drop constraint FKfdnoyp8rl0kxu29l4pyaa5566\n+alter table Notification_Recipients drop constraint FKot769nimyq1jvw0m61pgsq5g3\n+alter table Notification_Recipients drop constraint FKn7v944d0hw37bh0auv4gr3hsf\n+alter table PeopleAssignments_BAs drop constraint FKa90cdfgc4km384n1ataqigq67\n+alter table PeopleAssignments_BAs drop constraint FKt4xs0glwhbsa0xwg69r6xduv9\n+alter table PeopleAssignments_ExclOwners drop constraint FK5ituvd6t8uvp63hsx6282xo6h\n+alter table PeopleAssignments_ExclOwners drop constraint FKqxbjm1b3dl7w8w2f2y6sk0fv8\n+alter table PeopleAssignments_PotOwners drop constraint FKsa3rrrjsm1qw98ajbbu2s7cjr\n+alter table PeopleAssignments_PotOwners drop constraint FKh8oqmk4iuh2pmpgby6g8r3jd1\n+alter table PeopleAssignments_Recipients drop constraint FKrd0h9ud1bhs9waf2mdmiv6j2r\n+alter table PeopleAssignments_Recipients drop constraint FK9gnbv6bplxkxoedj35vg8n7ir\n+alter table PeopleAssignments_Stakeholders drop constraint FK9uy76cu650rg1nnkrtjwj1e9t\n+alter table PeopleAssignments_Stakeholders drop constraint FKaeyk4nwslvx0jywjomjq7083i\n+alter table Reassignment drop constraint FKessy30safh44b30f1cfoujv2k\n+alter table Reassignment_potentialOwners drop constraint FKsqrmpvehlc4qe9i0km22nmkjl\n+alter table Reassignment_potentialOwners drop constraint FKftegfexshix752bh2jfxf6bnh\n+alter table Task drop constraint FK48d1bfgwf0jqow1yk8ku4xcpi\n+alter table Task drop constraint FKpmkxvqq63aed2y2boruu53a0s\n+alter table Task drop constraint FKexuboqnbla7jfyyesyo61ucmb\n+alter table task_comment drop constraint FKqb4mkarf209y9546w7n75lb7a\n+alter table task_comment drop constraint FKm2mwc1ukcpdsiqwgkoroy6ise\n+drop table if exists Attachment cascade\n+drop table if exists AuditTaskImpl cascade\n+drop table if exists BAMTaskSummary cascade\n+drop table if exists BooleanExpression cascade\n+drop table if exists CaseFileDataLog cascade\n+drop table if exists CaseIdInfo cascade\n+drop table if exists CaseRoleAssignmentLog cascade\n+drop table if exists Content cascade\n+drop table if exists ContextMappingInfo cascade\n+drop table if exists CorrelationKeyInfo cascade\n+drop table if exists CorrelationPropertyInfo cascade\n+drop table if exists Deadline cascade\n+drop table if exists Delegation_delegates cascade\n+drop table if exists DeploymentStore cascade\n+drop table if exists email_header cascade\n+drop table if exists ErrorInfo cascade\n+drop table if exists Escalation cascade\n+drop table if exists EventTypes cascade\n+drop table if exists ExecutionErrorInfo cascade\n+drop table if exists I18NText cascade\n+drop table if exists NodeInstanceLog cascade\n+drop table if exists Notification cascade\n+drop table if exists Notification_BAs cascade\n+drop table if exists Notification_email_header cascade\n+drop table if exists Notification_Recipients cascade\n+drop table if exists OrganizationalEntity cascade\n+drop table if exists PeopleAssignments_BAs cascade\n+drop table if exists PeopleAssignments_ExclOwners cascade\n+drop table if exists PeopleAssignments_PotOwners cascade\n+drop table if exists PeopleAssignments_Recipients cascade\n+drop table if exists PeopleAssignments_Stakeholders cascade\n+drop table if exists ProcessInstanceInfo cascade\n+drop table if exists ProcessInstanceLog cascade\n+drop table if exists QueryDefinitionStore cascade\n+drop table if exists Reassignment cascade\n+drop table if exists Reassignment_potentialOwners cascade\n+drop table if exists RequestInfo cascade\n+drop table if exists SessionInfo cascade\n+drop table if exists Task cascade\n+drop table if exists task_comment cascade\n+drop table if exists TaskDef cascade\n+drop table if exists TaskEvent cascade\n+drop table if exists TaskVariableImpl cascade\n+drop table if exists VariableInstanceLog cascade\n+drop table if exists WorkItemInfo cascade\n+drop sequence if exists ATTACHMENT_ID_SEQ\n+drop sequence if exists AUDIT_ID_SEQ\n+drop sequence if exists BAM_TASK_ID_SEQ\n+drop sequence if exists BOOLEANEXPR_ID_SEQ\n+drop sequence if exists CASE_FILE_DATA_LOG_ID_SEQ\n+drop sequence if exists CASE_ID_INFO_ID_SEQ\n+drop sequence if exists CASE_ROLE_ASSIGN_LOG_ID_SEQ\n+drop sequence if exists COMMENT_ID_SEQ\n+drop sequence if exists CONTENT_ID_SEQ\n+drop sequence if exists CONTEXT_MAPPING_INFO_ID_SEQ\n+drop sequence if exists CORRELATION_KEY_ID_SEQ\n+drop sequence if exists CORRELATION_PROP_ID_SEQ\n+drop sequence if exists DEADLINE_ID_SEQ\n+drop sequence if exists DEPLOY_STORE_ID_SEQ\n+drop sequence if exists EMAILNOTIFHEAD_ID_SEQ\n+drop sequence if exists ERROR_INFO_ID_SEQ\n+drop sequence if exists ESCALATION_ID_SEQ\n+drop sequence if exists EXEC_ERROR_INFO_ID_SEQ\n+drop sequence if exists I18NTEXT_ID_SEQ\n+drop sequence if exists NODE_INST_LOG_ID_SEQ\n+drop sequence if exists NOTIFICATION_ID_SEQ\n+drop sequence if exists PROC_INST_LOG_ID_SEQ\n+drop sequence if exists PROCESS_INSTANCE_INFO_ID_SEQ\n+drop sequence if exists QUERY_DEF_ID_SEQ\n+drop sequence if exists REASSIGNMENT_ID_SEQ\n+drop sequence if exists REQUEST_INFO_ID_SEQ\n+drop sequence if exists SESSIONINFO_ID_SEQ\n+drop sequence if exists TASK_DEF_ID_SEQ\n+drop sequence if exists TASK_EVENT_ID_SEQ\n+drop sequence if exists TASK_ID_SEQ\n+drop sequence if exists TASK_VAR_ID_SEQ\n+drop sequence if exists VAR_INST_LOG_ID_SEQ\n+drop sequence if exists WORKITEMINFO_ID_SEQ", "originalCommit": "599f21bdc9e3df856eb07da1cfa9dce4808ba200", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ2ODY1Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466468657", "bodyText": "Same here, expecting \";\" at the end of lines", "author": "gmunozfe", "createdAt": "2020-08-06T14:49:07Z", "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-bytea-jbpm-schema.sql", "diffHunk": "@@ -0,0 +1,221 @@\n+create sequence ATTACHMENT_ID_SEQ start 1 increment 1\n+create sequence AUDIT_ID_SEQ start 1 increment 1\n+create sequence BAM_TASK_ID_SEQ start 1 increment 1\n+create sequence BOOLEANEXPR_ID_SEQ start 1 increment 1\n+create sequence CASE_FILE_DATA_LOG_ID_SEQ start 1 increment 1\n+create sequence CASE_ID_INFO_ID_SEQ start 1 increment 1\n+create sequence CASE_ROLE_ASSIGN_LOG_ID_SEQ start 1 increment 1\n+create sequence COMMENT_ID_SEQ start 1 increment 1\n+create sequence CONTENT_ID_SEQ start 1 increment 1\n+create sequence CONTEXT_MAPPING_INFO_ID_SEQ start 1 increment 1\n+create sequence CORRELATION_KEY_ID_SEQ start 1 increment 1\n+create sequence CORRELATION_PROP_ID_SEQ start 1 increment 1\n+create sequence DEADLINE_ID_SEQ start 1 increment 1\n+create sequence DEPLOY_STORE_ID_SEQ start 1 increment 1\n+create sequence EMAILNOTIFHEAD_ID_SEQ start 1 increment 1\n+create sequence ERROR_INFO_ID_SEQ start 1 increment 1\n+create sequence ESCALATION_ID_SEQ start 1 increment 1\n+create sequence EXEC_ERROR_INFO_ID_SEQ start 1 increment 1\n+create sequence I18NTEXT_ID_SEQ start 1 increment 1\n+create sequence NODE_INST_LOG_ID_SEQ start 1 increment 1\n+create sequence NOTIFICATION_ID_SEQ start 1 increment 1\n+create sequence PROC_INST_LOG_ID_SEQ start 1 increment 1\n+create sequence PROCESS_INSTANCE_INFO_ID_SEQ start 1 increment 1\n+create sequence QUERY_DEF_ID_SEQ start 1 increment 1\n+create sequence REASSIGNMENT_ID_SEQ start 1 increment 1\n+create sequence REQUEST_INFO_ID_SEQ start 1 increment 1\n+create sequence SESSIONINFO_ID_SEQ start 1 increment 1\n+create sequence TASK_DEF_ID_SEQ start 1 increment 1\n+create sequence TASK_EVENT_ID_SEQ start 1 increment 1\n+create sequence TASK_ID_SEQ start 1 increment 1\n+create sequence TASK_VAR_ID_SEQ start 1 increment 1\n+create sequence VAR_INST_LOG_ID_SEQ start 1 increment 1\n+create sequence WORKITEMINFO_ID_SEQ start 1 increment 1\n+create table Attachment (id int8 not null, accessType int4, attachedAt timestamp, attachmentContentId int8 not null, contentType varchar(255), name varchar(255), attachment_size int4, attachedBy_id varchar(255), TaskData_Attachments_Id int8, primary key (id))\n+create table AuditTaskImpl (id int8 not null, activationTime timestamp, actualOwner varchar(255), createdBy varchar(255), createdOn timestamp, deploymentId varchar(255), description varchar(255), dueDate timestamp, lastModificationDate timestamp, name varchar(255), parentId int8 not null, priority int4 not null, processId varchar(255), processInstanceId int8 not null, processSessionId int8 not null, status varchar(255), taskId int8, workItemId int8, primary key (id))\n+create table BAMTaskSummary (pk int8 not null, createdDate timestamp, duration int8, endDate timestamp, processInstanceId int8 not null, startDate timestamp, status varchar(255), taskId int8 not null, taskName varchar(255), userId varchar(255), OPTLOCK int4, primary key (pk))\n+create table BooleanExpression (id int8 not null, expression text, type varchar(255), Escalation_Constraints_Id int8, primary key (id))\n+create table CaseFileDataLog (id int8 not null, caseDefId varchar(255), caseId varchar(255), itemName varchar(255), itemType varchar(255), itemValue varchar(255), lastModified timestamp, lastModifiedBy varchar(255), primary key (id))\n+create table CaseIdInfo (id int8 not null, caseIdPrefix varchar(255), currentValue int8, primary key (id))\n+create table CaseRoleAssignmentLog (id int8 not null, caseId varchar(255), entityId varchar(255), processInstanceId int8 not null, roleName varchar(255), type int4 not null, primary key (id))\n+create table Content (id int8 not null, content bytea, primary key (id))\n+create table ContextMappingInfo (mappingId int8 not null, CONTEXT_ID varchar(255) not null, KSESSION_ID int8 not null, OWNER_ID varchar(255), OPTLOCK int4, primary key (mappingId))\n+create table CorrelationKeyInfo (keyId int8 not null, name varchar(255), processInstanceId int8 not null, OPTLOCK int4, primary key (keyId))\n+create table CorrelationPropertyInfo (propertyId int8 not null, name varchar(255), value varchar(255), OPTLOCK int4, correlationKey_keyId int8, primary key (propertyId))\n+create table Deadline (id int8 not null, deadline_date timestamp, escalated int2, Deadlines_StartDeadLine_Id int8, Deadlines_EndDeadLine_Id int8, primary key (id))\n+create table Delegation_delegates (task_id int8 not null, entity_id varchar(255) not null)\n+create table DeploymentStore (id int8 not null, attributes varchar(255), DEPLOYMENT_ID varchar(255), deploymentUnit text, state int4, updateDate timestamp, primary key (id))\n+create table email_header (id int8 not null, body text, fromAddress varchar(255), language varchar(255), replyToAddress varchar(255), subject varchar(255), primary key (id))\n+create table ErrorInfo (id int8 not null, message varchar(255), stacktrace varchar(5000), timestamp timestamp, REQUEST_ID int8 not null, primary key (id))\n+create table Escalation (id int8 not null, name varchar(255), Deadline_Escalation_Id int8, primary key (id))\n+create table EventTypes (InstanceId int8 not null, element varchar(255))\n+create table ExecutionErrorInfo (id int8 not null, ERROR_ACK int2, ERROR_ACK_AT timestamp, ERROR_ACK_BY varchar(255), ACTIVITY_ID int8, ACTIVITY_NAME varchar(255), DEPLOYMENT_ID varchar(255), ERROR_INFO text, ERROR_DATE timestamp, ERROR_ID varchar(255), ERROR_MSG varchar(255), INIT_ACTIVITY_ID int8, JOB_ID int8, PROCESS_ID varchar(255), PROCESS_INST_ID int8, ERROR_TYPE varchar(255), primary key (id))\n+create table I18NText (id int8 not null, language varchar(255), shortText varchar(255), text text, Task_Subjects_Id int8, Task_Names_Id int8, Task_Descriptions_Id int8, Reassignment_Documentation_Id int8, Notification_Subjects_Id int8, Notification_Names_Id int8, Notification_Documentation_Id int8, Notification_Descriptions_Id int8, Deadline_Documentation_Id int8, primary key (id))\n+create table NodeInstanceLog (id int8 not null, connection varchar(255), log_date timestamp, externalId varchar(255), nodeContainerId varchar(255), nodeId varchar(255), nodeInstanceId varchar(255), nodeName varchar(255), nodeType varchar(255), processId varchar(255), processInstanceId int8 not null, referenceId int8, slaCompliance int4, sla_due_date timestamp, type int4 not null, workItemId int8, primary key (id))\n+create table Notification (DTYPE varchar(31) not null, id int8 not null, priority int4 not null, Escalation_Notifications_Id int8, primary key (id))\n+create table Notification_BAs (task_id int8 not null, entity_id varchar(255) not null)\n+create table Notification_email_header (Notification_id int8 not null, emailHeaders_id int8 not null, mapkey varchar(255) not null, primary key (Notification_id, mapkey))\n+create table Notification_Recipients (task_id int8 not null, entity_id varchar(255) not null)\n+create table OrganizationalEntity (DTYPE varchar(31) not null, id varchar(255) not null, primary key (id))\n+create table PeopleAssignments_BAs (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_ExclOwners (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_PotOwners (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_Recipients (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_Stakeholders (task_id int8 not null, entity_id varchar(255) not null)\n+create table ProcessInstanceInfo (InstanceId int8 not null, lastModificationDate timestamp, lastReadDate timestamp, processId varchar(255), processInstanceByteArray bytea, startDate timestamp, state int4 not null, OPTLOCK int4, primary key (InstanceId))\n+create table ProcessInstanceLog (id int8 not null, correlationKey varchar(255), duration int8, end_date timestamp, externalId varchar(255), user_identity varchar(255), outcome varchar(255), parentProcessInstanceId int8, processId varchar(255), processInstanceDescription varchar(255), processInstanceId int8 not null, processName varchar(255), processType int4, processVersion varchar(255), slaCompliance int4, sla_due_date timestamp, start_date timestamp, status int4, primary key (id))\n+create table QueryDefinitionStore (id int8 not null, qExpression text, qName varchar(255), qSource varchar(255), qTarget varchar(255), primary key (id))\n+create table Reassignment (id int8 not null, Escalation_Reassignments_Id int8, primary key (id))\n+create table Reassignment_potentialOwners (task_id int8 not null, entity_id varchar(255) not null)\n+create table RequestInfo (id int8 not null, commandName varchar(255), deploymentId varchar(255), executions int4 not null, businessKey varchar(255), message varchar(255), owner varchar(255), priority int4 not null, processInstanceId int8, requestData bytea, responseData bytea, retries int4 not null, status varchar(255), timestamp timestamp, primary key (id))\n+create table SessionInfo (id int8 not null, lastModificationDate timestamp, rulesByteArray bytea, startDate timestamp, OPTLOCK int4, primary key (id))\n+create table Task (id int8 not null, archived int2, allowedToDelegate varchar(255), description varchar(255), formName varchar(255), name varchar(255), priority int4 not null, subTaskStrategy varchar(255), subject varchar(255), activationTime timestamp, createdOn timestamp, deploymentId varchar(255), documentAccessType int4, documentContentId int8 not null, documentType varchar(255), expirationTime timestamp, faultAccessType int4, faultContentId int8 not null, faultName varchar(255), faultType varchar(255), outputAccessType int4, outputContentId int8 not null, outputType varchar(255), parentId int8 not null, previousStatus int4, processId varchar(255), processInstanceId int8 not null, processSessionId int8 not null, skipable boolean not null, status varchar(255), workItemId int8 not null, taskType varchar(255), OPTLOCK int4, taskInitiator_id varchar(255), actualOwner_id varchar(255), createdBy_id varchar(255), primary key (id))\n+create table task_comment (id int8 not null, addedAt timestamp, text text, addedBy_id varchar(255), TaskData_Comments_Id int8, primary key (id))\n+create table TaskDef (id int8 not null, name varchar(255), priority int4 not null, primary key (id))\n+create table TaskEvent (id int8 not null, correlationKey varchar(255), logTime timestamp, message varchar(255), processInstanceId int8, processType int4, taskId int8, type varchar(255), userId varchar(255), OPTLOCK int4, workItemId int8, primary key (id))\n+create table TaskVariableImpl (id int8 not null, modificationDate timestamp, name varchar(255), processId varchar(255), processInstanceId int8, taskId int8, type int4, value varchar(4000), primary key (id))\n+create table VariableInstanceLog (id int8 not null, log_date timestamp, externalId varchar(255), oldValue varchar(255), processId varchar(255), processInstanceId int8 not null, value varchar(255), variableId varchar(255), variableInstanceId varchar(255), primary key (id))\n+create table WorkItemInfo (workItemId int8 not null, creationDate timestamp, name varchar(255), processInstanceId int8 not null, state int8 not null, OPTLOCK int4, workItemByteArray bytea, primary key (workItemId))\n+create index IDX_Attachment_Id on Attachment (attachedBy_id)\n+create index IDX_Attachment_DataId on Attachment (TaskData_Attachments_Id)\n+create index IDX_AuditTaskImpl_taskId on AuditTaskImpl (taskId)\n+create index IDX_AuditTaskImpl_pInstId on AuditTaskImpl (processInstanceId)\n+create index IDX_AuditTaskImpl_workItemId on AuditTaskImpl (workItemId)\n+create index IDX_AuditTaskImpl_name on AuditTaskImpl (name)\n+create index IDX_AuditTaskImpl_processId on AuditTaskImpl (processId)\n+create index IDX_AuditTaskImpl_status on AuditTaskImpl (status)\n+create index IDX_BAMTaskSumm_createdDate on BAMTaskSummary (createdDate)\n+create index IDX_BAMTaskSumm_duration on BAMTaskSummary (duration)\n+create index IDX_BAMTaskSumm_endDate on BAMTaskSummary (endDate)\n+create index IDX_BAMTaskSumm_pInstId on BAMTaskSummary (processInstanceId)\n+create index IDX_BAMTaskSumm_startDate on BAMTaskSummary (startDate)\n+create index IDX_BAMTaskSumm_status on BAMTaskSummary (status)\n+create index IDX_BAMTaskSumm_taskId on BAMTaskSummary (taskId)\n+create index IDX_BAMTaskSumm_taskName on BAMTaskSummary (taskName)\n+create index IDX_BAMTaskSumm_userId on BAMTaskSummary (userId)\n+create index IDX_BoolExpr_Id on BooleanExpression (Escalation_Constraints_Id)\n+alter table CaseIdInfo add constraint UKftvt225gyxpjnl3d06alqkqyj unique (caseIdPrefix)\n+create index IDX_CMI_Context on ContextMappingInfo (CONTEXT_ID)\n+create index IDX_CMI_KSession on ContextMappingInfo (KSESSION_ID)\n+create index IDX_CMI_Owner on ContextMappingInfo (OWNER_ID)\n+alter table CorrelationKeyInfo add constraint IDX_CorrelationKeyInfo_name unique (name)\n+create index IDX_CorrPropInfo_Id on CorrelationPropertyInfo (correlationKey_keyId)\n+create index IDX_Deadline_StartId on Deadline (Deadlines_StartDeadLine_Id)\n+create index IDX_Deadline_EndId on Deadline (Deadlines_EndDeadLine_Id)\n+create index IDX_Delegation_EntityId on Delegation_delegates (entity_id)\n+create index IDX_Delegation_TaskId on Delegation_delegates (task_id)\n+alter table DeploymentStore add constraint UK85rgskt09thd8mkkfl3tb0y81 unique (DEPLOYMENT_ID)\n+create index IDX_ErrorInfo_Id on ErrorInfo (REQUEST_ID)\n+create index IDX_Escalation_Id on Escalation (Deadline_Escalation_Id)\n+create index IDX_EventTypes_Id on EventTypes (InstanceId)\n+create index IDX_EventTypes_element on EventTypes (element)\n+create index IDX_ErrorInfo_pInstId on ExecutionErrorInfo (PROCESS_INST_ID)\n+create index IDX_ErrorInfo_errorAck on ExecutionErrorInfo (ERROR_ACK)\n+create index IDX_I18NText_SubjId on I18NText (Task_Subjects_Id)\n+create index IDX_I18NText_NameId on I18NText (Task_Names_Id)\n+create index IDX_I18NText_DescrId on I18NText (Task_Descriptions_Id)\n+create index IDX_I18NText_ReassignId on I18NText (Reassignment_Documentation_Id)\n+create index IDX_I18NText_NotSubjId on I18NText (Notification_Subjects_Id)\n+create index IDX_I18NText_NotNamId on I18NText (Notification_Names_Id)\n+create index IDX_I18NText_NotDocId on I18NText (Notification_Documentation_Id)\n+create index IDX_I18NText_NotDescrId on I18NText (Notification_Descriptions_Id)\n+create index IDX_I18NText_DeadDocId on I18NText (Deadline_Documentation_Id)\n+create index IDX_NInstLog_pInstId on NodeInstanceLog (processInstanceId)\n+create index IDX_NInstLog_nodeType on NodeInstanceLog (nodeType)\n+create index IDX_NInstLog_pId on NodeInstanceLog (processId)\n+create index IDX_Not_EscId on Notification (Escalation_Notifications_Id)\n+create index IDX_NotBAs_Entity on Notification_BAs (entity_id)\n+create index IDX_NotBAs_Task on Notification_BAs (task_id)\n+alter table Notification_email_header add constraint UK_ptaka5kost68h7l3wflv7w6y8 unique (emailHeaders_id)\n+create index IDX_NotRec_Entity on Notification_Recipients (entity_id)\n+create index IDX_NotRec_Task on Notification_Recipients (task_id)\n+create index IDX_PAsBAs_Entity on PeopleAssignments_BAs (entity_id)\n+create index IDX_PAsBAs_Task on PeopleAssignments_BAs (task_id)\n+create index IDX_PAsExcl_Entity on PeopleAssignments_ExclOwners (entity_id)\n+create index IDX_PAsExcl_Task on PeopleAssignments_ExclOwners (task_id)\n+create index IDX_PAsPot_TaskEntity on PeopleAssignments_PotOwners (task_id, entity_id)\n+create index IDX_PAsRecip_Entity on PeopleAssignments_Recipients (entity_id)\n+create index IDX_PAsRecip_Task on PeopleAssignments_Recipients (task_id)\n+create index IDX_PAsStake_Entity on PeopleAssignments_Stakeholders (entity_id)\n+create index IDX_PAsStake_Task on PeopleAssignments_Stakeholders (task_id)\n+create index IDX_PInstLog_duration on ProcessInstanceLog (duration)\n+create index IDX_PInstLog_end_date on ProcessInstanceLog (end_date)\n+create index IDX_PInstLog_extId on ProcessInstanceLog (externalId)\n+create index IDX_PInstLog_user_identity on ProcessInstanceLog (user_identity)\n+create index IDX_PInstLog_outcome on ProcessInstanceLog (outcome)\n+create index IDX_PInstLog_parentPInstId on ProcessInstanceLog (parentProcessInstanceId)\n+create index IDX_PInstLog_pId on ProcessInstanceLog (processId)\n+create index IDX_PInstLog_pInsteDescr on ProcessInstanceLog (processInstanceDescription)\n+create index IDX_PInstLog_pInstId on ProcessInstanceLog (processInstanceId)\n+create index IDX_PInstLog_pName on ProcessInstanceLog (processName)\n+create index IDX_PInstLog_pVersion on ProcessInstanceLog (processVersion)\n+create index IDX_PInstLog_start_date on ProcessInstanceLog (start_date)\n+create index IDX_PInstLog_status on ProcessInstanceLog (status)\n+create index IDX_PInstLog_correlation on ProcessInstanceLog (correlationKey)\n+alter table QueryDefinitionStore add constraint UK1dmy087nhbykucpgjipcnyluv unique (qName)\n+create index IDX_Reassign_Esc on Reassignment (Escalation_Reassignments_Id)\n+create index IDX_ReassignPO_Entity on Reassignment_potentialOwners (entity_id)\n+create index IDX_ReassignPO_Task on Reassignment_potentialOwners (task_id)\n+create index IDX_RequestInfo_status on RequestInfo (status)\n+create index IDX_RequestInfo_owner on RequestInfo (owner)\n+create index IDX_Task_Initiator on Task (taskInitiator_id)\n+create index IDX_Task_ActualOwner on Task (actualOwner_id)\n+create index IDX_Task_CreatedBy on Task (createdBy_id)\n+create index IDX_Task_processInstanceId on Task (processInstanceId)\n+create index IDX_Task_processId on Task (processId)\n+create index IDX_Task_status on Task (status)\n+create index IDX_Task_archived on Task (archived)\n+create index IDX_Task_workItemId on Task (workItemId)\n+create index IDX_TaskComments_CreatedBy on task_comment (addedBy_id)\n+create index IDX_TaskComments_Id on task_comment (TaskData_Comments_Id)\n+create index IDX_TaskVariableImpl_taskId on TaskVariableImpl (taskId)\n+create index IDX_TaskVariableImpl_pInstId on TaskVariableImpl (processInstanceId)\n+create index IDX_TaskVariableImpl_processId on TaskVariableImpl (processId)\n+create index IDX_VInstLog_pInstId on VariableInstanceLog (processInstanceId)\n+create index IDX_VInstLog_varId on VariableInstanceLog (variableId)\n+create index IDX_VInstLog_pId on VariableInstanceLog (processId)\n+alter table Attachment add constraint FKd5xpm81gxg8n40167lbu5rbfb foreign key (attachedBy_id) references OrganizationalEntity\n+alter table Attachment add constraint FKjj9psk52ifamilliyo16epwpc foreign key (TaskData_Attachments_Id) references Task\n+alter table BooleanExpression add constraint FKqth56a8k6d8pv6ngsu2vjp4kj foreign key (Escalation_Constraints_Id) references Escalation\n+alter table CorrelationPropertyInfo add constraint FKbchyl7kb8i6ghvi3dbr86bgo0 foreign key (correlationKey_keyId) references CorrelationKeyInfo\n+alter table Deadline add constraint FK361ggw230po88svgfasg36i2w foreign key (Deadlines_StartDeadLine_Id) references Task\n+alter table Deadline add constraint FKpeiadnoy228t35213t63c3imm foreign key (Deadlines_EndDeadLine_Id) references Task\n+alter table Delegation_delegates add constraint FKewkdyi0wrgy9byp6abyglpcxq foreign key (entity_id) references OrganizationalEntity\n+alter table Delegation_delegates add constraint FK85x3trafk3wfbrv719cafr591 foreign key (task_id) references Task\n+alter table ErrorInfo add constraint FKdarp6ushq06q39jmij3fdpdbs foreign key (REQUEST_ID) references RequestInfo\n+alter table Escalation add constraint FK37v8ova8ti6jiblda7n6j298e foreign key (Deadline_Escalation_Id) references Deadline\n+alter table EventTypes add constraint FKj0o3uve2nqo5yrjwrkc9jfttq foreign key (InstanceId) references ProcessInstanceInfo\n+alter table I18NText add constraint FKcd6eb4q62d9ab8p0di8pb99ch foreign key (Task_Subjects_Id) references Task\n+alter table I18NText add constraint FKiogka67sji8fk4cp7a369895i foreign key (Task_Names_Id) references Task\n+alter table I18NText add constraint FKrisdlmalotmk64mdeqpo4s5m0 foreign key (Task_Descriptions_Id) references Task\n+alter table I18NText add constraint FKqxgws3fnukyqlaet11tivqg5u foreign key (Reassignment_Documentation_Id) references Reassignment\n+alter table I18NText add constraint FKthf8ix3t3opf9hya1s04hwsx8 foreign key (Notification_Subjects_Id) references Notification\n+alter table I18NText add constraint FKg2jsybeuc8pbj8ek8xwxutuyo foreign key (Notification_Names_Id) references Notification\n+alter table I18NText add constraint FKp0m7uhipskrljktvfeubdgfid foreign key (Notification_Documentation_Id) references Notification\n+alter table I18NText add constraint FK6k8hmfvhko069970eghiy2ifp foreign key (Notification_Descriptions_Id) references Notification\n+alter table I18NText add constraint FK8wn7sw34q6bifsi1pvl2b1yyb foreign key (Deadline_Documentation_Id) references Deadline\n+alter table Notification add constraint FKoxq5uqfg4ylwyijsg2ubyflna foreign key (Escalation_Notifications_Id) references Escalation\n+alter table Notification_BAs add constraint FK378pb1cvjv54w4ljqpw99s3wr foreign key (entity_id) references OrganizationalEntity\n+alter table Notification_BAs add constraint FKb123fgeomc741s9yc014421yy foreign key (task_id) references Notification\n+alter table Notification_email_header add constraint FKd74pdu41avy2f7a8qyp7wn2n foreign key (emailHeaders_id) references email_header\n+alter table Notification_email_header add constraint FKfdnoyp8rl0kxu29l4pyaa5566 foreign key (Notification_id) references Notification\n+alter table Notification_Recipients add constraint FKot769nimyq1jvw0m61pgsq5g3 foreign key (entity_id) references OrganizationalEntity\n+alter table Notification_Recipients add constraint FKn7v944d0hw37bh0auv4gr3hsf foreign key (task_id) references Notification\n+alter table PeopleAssignments_BAs add constraint FKa90cdfgc4km384n1ataqigq67 foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_BAs add constraint FKt4xs0glwhbsa0xwg69r6xduv9 foreign key (task_id) references Task\n+alter table PeopleAssignments_ExclOwners add constraint FK5ituvd6t8uvp63hsx6282xo6h foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_ExclOwners add constraint FKqxbjm1b3dl7w8w2f2y6sk0fv8 foreign key (task_id) references Task\n+alter table PeopleAssignments_PotOwners add constraint FKsa3rrrjsm1qw98ajbbu2s7cjr foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_PotOwners add constraint FKh8oqmk4iuh2pmpgby6g8r3jd1 foreign key (task_id) references Task\n+alter table PeopleAssignments_Recipients add constraint FKrd0h9ud1bhs9waf2mdmiv6j2r foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_Recipients add constraint FK9gnbv6bplxkxoedj35vg8n7ir foreign key (task_id) references Task\n+alter table PeopleAssignments_Stakeholders add constraint FK9uy76cu650rg1nnkrtjwj1e9t foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_Stakeholders add constraint FKaeyk4nwslvx0jywjomjq7083i foreign key (task_id) references Task\n+alter table Reassignment add constraint FKessy30safh44b30f1cfoujv2k foreign key (Escalation_Reassignments_Id) references Escalation\n+alter table Reassignment_potentialOwners add constraint FKsqrmpvehlc4qe9i0km22nmkjl foreign key (entity_id) references OrganizationalEntity\n+alter table Reassignment_potentialOwners add constraint FKftegfexshix752bh2jfxf6bnh foreign key (task_id) references Reassignment\n+alter table Task add constraint FK48d1bfgwf0jqow1yk8ku4xcpi foreign key (taskInitiator_id) references OrganizationalEntity\n+alter table Task add constraint FKpmkxvqq63aed2y2boruu53a0s foreign key (actualOwner_id) references OrganizationalEntity\n+alter table Task add constraint FKexuboqnbla7jfyyesyo61ucmb foreign key (createdBy_id) references OrganizationalEntity\n+alter table task_comment add constraint FKqb4mkarf209y9546w7n75lb7a foreign key (addedBy_id) references OrganizationalEntity\n+alter table task_comment add constraint FKm2mwc1ukcpdsiqwgkoroy6ise foreign key (TaskData_Comments_Id) references Task", "originalCommit": "599f21bdc9e3df856eb07da1cfa9dce4808ba200", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ2OTQzMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466469431", "bodyText": "Same here, expecting \";\" at end of lines", "author": "gmunozfe", "createdAt": "2020-08-06T14:50:10Z", "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-springboot-bytea-jbpm-drop-schema.sql", "diffHunk": "@@ -0,0 +1,123 @@\n+alter table Attachment drop constraint FKd5xpm81gxg8n40167lbu5rbfb\n+alter table Attachment drop constraint FKjj9psk52ifamilliyo16epwpc\n+alter table BooleanExpression drop constraint FKqth56a8k6d8pv6ngsu2vjp4kj\n+alter table CorrelationPropertyInfo drop constraint FKbchyl7kb8i6ghvi3dbr86bgo0\n+alter table Deadline drop constraint FK361ggw230po88svgfasg36i2w\n+alter table Deadline drop constraint FKpeiadnoy228t35213t63c3imm\n+alter table Delegation_delegates drop constraint FKewkdyi0wrgy9byp6abyglpcxq\n+alter table Delegation_delegates drop constraint FK85x3trafk3wfbrv719cafr591\n+alter table ErrorInfo drop constraint FKdarp6ushq06q39jmij3fdpdbs\n+alter table Escalation drop constraint FK37v8ova8ti6jiblda7n6j298e\n+alter table EventTypes drop constraint FKj0o3uve2nqo5yrjwrkc9jfttq\n+alter table I18NText drop constraint FKcd6eb4q62d9ab8p0di8pb99ch\n+alter table I18NText drop constraint FKiogka67sji8fk4cp7a369895i\n+alter table I18NText drop constraint FKrisdlmalotmk64mdeqpo4s5m0\n+alter table I18NText drop constraint FKqxgws3fnukyqlaet11tivqg5u\n+alter table I18NText drop constraint FKthf8ix3t3opf9hya1s04hwsx8\n+alter table I18NText drop constraint FKg2jsybeuc8pbj8ek8xwxutuyo\n+alter table I18NText drop constraint FKp0m7uhipskrljktvfeubdgfid\n+alter table I18NText drop constraint FK6k8hmfvhko069970eghiy2ifp\n+alter table I18NText drop constraint FK8wn7sw34q6bifsi1pvl2b1yyb\n+alter table Notification drop constraint FKoxq5uqfg4ylwyijsg2ubyflna\n+alter table Notification_BAs drop constraint FK378pb1cvjv54w4ljqpw99s3wr\n+alter table Notification_BAs drop constraint FKb123fgeomc741s9yc014421yy\n+alter table Notification_email_header drop constraint FKd74pdu41avy2f7a8qyp7wn2n\n+alter table Notification_email_header drop constraint FKfdnoyp8rl0kxu29l4pyaa5566\n+alter table Notification_Recipients drop constraint FKot769nimyq1jvw0m61pgsq5g3\n+alter table Notification_Recipients drop constraint FKn7v944d0hw37bh0auv4gr3hsf\n+alter table PeopleAssignments_BAs drop constraint FKa90cdfgc4km384n1ataqigq67\n+alter table PeopleAssignments_BAs drop constraint FKt4xs0glwhbsa0xwg69r6xduv9\n+alter table PeopleAssignments_ExclOwners drop constraint FK5ituvd6t8uvp63hsx6282xo6h\n+alter table PeopleAssignments_ExclOwners drop constraint FKqxbjm1b3dl7w8w2f2y6sk0fv8\n+alter table PeopleAssignments_PotOwners drop constraint FKsa3rrrjsm1qw98ajbbu2s7cjr\n+alter table PeopleAssignments_PotOwners drop constraint FKh8oqmk4iuh2pmpgby6g8r3jd1\n+alter table PeopleAssignments_Recipients drop constraint FKrd0h9ud1bhs9waf2mdmiv6j2r\n+alter table PeopleAssignments_Recipients drop constraint FK9gnbv6bplxkxoedj35vg8n7ir\n+alter table PeopleAssignments_Stakeholders drop constraint FK9uy76cu650rg1nnkrtjwj1e9t\n+alter table PeopleAssignments_Stakeholders drop constraint FKaeyk4nwslvx0jywjomjq7083i\n+alter table Reassignment drop constraint FKessy30safh44b30f1cfoujv2k\n+alter table Reassignment_potentialOwners drop constraint FKsqrmpvehlc4qe9i0km22nmkjl\n+alter table Reassignment_potentialOwners drop constraint FKftegfexshix752bh2jfxf6bnh\n+alter table Task drop constraint FK48d1bfgwf0jqow1yk8ku4xcpi\n+alter table Task drop constraint FKpmkxvqq63aed2y2boruu53a0s\n+alter table Task drop constraint FKexuboqnbla7jfyyesyo61ucmb\n+alter table task_comment drop constraint FKqb4mkarf209y9546w7n75lb7a\n+alter table task_comment drop constraint FKm2mwc1ukcpdsiqwgkoroy6ise\n+drop table if exists Attachment cascade\n+drop table if exists AuditTaskImpl cascade\n+drop table if exists BAMTaskSummary cascade\n+drop table if exists BooleanExpression cascade\n+drop table if exists CaseFileDataLog cascade\n+drop table if exists CaseIdInfo cascade\n+drop table if exists CaseRoleAssignmentLog cascade\n+drop table if exists Content cascade\n+drop table if exists ContextMappingInfo cascade\n+drop table if exists CorrelationKeyInfo cascade\n+drop table if exists CorrelationPropertyInfo cascade\n+drop table if exists Deadline cascade\n+drop table if exists Delegation_delegates cascade\n+drop table if exists DeploymentStore cascade\n+drop table if exists email_header cascade\n+drop table if exists ErrorInfo cascade\n+drop table if exists Escalation cascade\n+drop table if exists EventTypes cascade\n+drop table if exists ExecutionErrorInfo cascade\n+drop table if exists I18NText cascade\n+drop table if exists NodeInstanceLog cascade\n+drop table if exists Notification cascade\n+drop table if exists Notification_BAs cascade\n+drop table if exists Notification_email_header cascade\n+drop table if exists Notification_Recipients cascade\n+drop table if exists OrganizationalEntity cascade\n+drop table if exists PeopleAssignments_BAs cascade\n+drop table if exists PeopleAssignments_ExclOwners cascade\n+drop table if exists PeopleAssignments_PotOwners cascade\n+drop table if exists PeopleAssignments_Recipients cascade\n+drop table if exists PeopleAssignments_Stakeholders cascade\n+drop table if exists ProcessInstanceInfo cascade\n+drop table if exists ProcessInstanceLog cascade\n+drop table if exists QueryDefinitionStore cascade\n+drop table if exists Reassignment cascade\n+drop table if exists Reassignment_potentialOwners cascade\n+drop table if exists RequestInfo cascade\n+drop table if exists SessionInfo cascade\n+drop table if exists Task cascade\n+drop table if exists task_comment cascade\n+drop table if exists TaskDef cascade\n+drop table if exists TaskEvent cascade\n+drop table if exists TaskVariableImpl cascade\n+drop table if exists VariableInstanceLog cascade\n+drop table if exists WorkItemInfo cascade\n+drop sequence if exists ATTACHMENT_ID_SEQ\n+drop sequence if exists AUDIT_ID_SEQ\n+drop sequence if exists BAM_TASK_ID_SEQ\n+drop sequence if exists BOOLEANEXPR_ID_SEQ\n+drop sequence if exists CASE_FILE_DATA_LOG_ID_SEQ\n+drop sequence if exists CASE_ID_INFO_ID_SEQ\n+drop sequence if exists CASE_ROLE_ASSIGN_LOG_ID_SEQ\n+drop sequence if exists COMMENT_ID_SEQ\n+drop sequence if exists CONTENT_ID_SEQ\n+drop sequence if exists CONTEXT_MAPPING_INFO_ID_SEQ\n+drop sequence if exists CORRELATION_KEY_ID_SEQ\n+drop sequence if exists CORRELATION_PROP_ID_SEQ\n+drop sequence if exists DEADLINE_ID_SEQ\n+drop sequence if exists DEPLOY_STORE_ID_SEQ\n+drop sequence if exists EMAILNOTIFHEAD_ID_SEQ\n+drop sequence if exists ERROR_INFO_ID_SEQ\n+drop sequence if exists ESCALATION_ID_SEQ\n+drop sequence if exists EXEC_ERROR_INFO_ID_SEQ\n+drop sequence if exists I18NTEXT_ID_SEQ\n+drop sequence if exists NODE_INST_LOG_ID_SEQ\n+drop sequence if exists NOTIFICATION_ID_SEQ\n+drop sequence if exists PROC_INST_LOG_ID_SEQ\n+drop sequence if exists PROCESS_INSTANCE_INFO_ID_SEQ\n+drop sequence if exists QUERY_DEF_ID_SEQ\n+drop sequence if exists REASSIGNMENT_ID_SEQ\n+drop sequence if exists REQUEST_INFO_ID_SEQ\n+drop sequence if exists SESSIONINFO_ID_SEQ\n+drop sequence if exists TASK_DEF_ID_SEQ\n+drop sequence if exists TASK_EVENT_ID_SEQ\n+drop sequence if exists TASK_ID_SEQ\n+drop sequence if exists TASK_VAR_ID_SEQ\n+drop sequence if exists VAR_INST_LOG_ID_SEQ\n+drop sequence if exists WORKITEMINFO_ID_SEQ", "originalCommit": "599f21bdc9e3df856eb07da1cfa9dce4808ba200", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ2OTgxOA==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466469818", "bodyText": "Same", "author": "gmunozfe", "createdAt": "2020-08-06T14:50:36Z", "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-springboot-bytea-jbpm-schema.sql", "diffHunk": "@@ -0,0 +1,221 @@\n+create sequence ATTACHMENT_ID_SEQ start 1 increment 1\n+create sequence AUDIT_ID_SEQ start 1 increment 1\n+create sequence BAM_TASK_ID_SEQ start 1 increment 50\n+create sequence BOOLEANEXPR_ID_SEQ start 1 increment 1\n+create sequence CASE_FILE_DATA_LOG_ID_SEQ start 1 increment 1\n+create sequence CASE_ID_INFO_ID_SEQ start 1 increment 50\n+create sequence CASE_ROLE_ASSIGN_LOG_ID_SEQ start 1 increment 1\n+create sequence COMMENT_ID_SEQ start 1 increment 1\n+create sequence CONTENT_ID_SEQ start 1 increment 1\n+create sequence CONTEXT_MAPPING_INFO_ID_SEQ start 1 increment 50\n+create sequence CORRELATION_KEY_ID_SEQ start 1 increment 50\n+create sequence CORRELATION_PROP_ID_SEQ start 1 increment 50\n+create sequence DEADLINE_ID_SEQ start 1 increment 1\n+create sequence DEPLOY_STORE_ID_SEQ start 1 increment 1\n+create sequence EMAILNOTIFHEAD_ID_SEQ start 1 increment 1\n+create sequence ERROR_INFO_ID_SEQ start 1 increment 50\n+create sequence ESCALATION_ID_SEQ start 1 increment 1\n+create sequence EXEC_ERROR_INFO_ID_SEQ start 1 increment 1\n+create sequence I18NTEXT_ID_SEQ start 1 increment 1\n+create sequence NODE_INST_LOG_ID_SEQ start 1 increment 1\n+create sequence NOTIFICATION_ID_SEQ start 1 increment 1\n+create sequence PROC_INST_LOG_ID_SEQ start 1 increment 1\n+create sequence PROCESS_INSTANCE_INFO_ID_SEQ start 1 increment 50\n+create sequence QUERY_DEF_ID_SEQ start 1 increment 1\n+create sequence REASSIGNMENT_ID_SEQ start 1 increment 1\n+create sequence REQUEST_INFO_ID_SEQ start 1 increment 50\n+create sequence SESSIONINFO_ID_SEQ start 1 increment 50\n+create sequence TASK_DEF_ID_SEQ start 1 increment 50\n+create sequence TASK_EVENT_ID_SEQ start 1 increment 50\n+create sequence TASK_ID_SEQ start 1 increment 1\n+create sequence TASK_VAR_ID_SEQ start 1 increment 1\n+create sequence VAR_INST_LOG_ID_SEQ start 1 increment 1\n+create sequence WORKITEMINFO_ID_SEQ start 1 increment 50\n+create table Attachment (id int8 not null, accessType int4, attachedAt timestamp, attachmentContentId int8 not null, contentType varchar(255), name varchar(255), attachment_size int4, attachedBy_id varchar(255), TaskData_Attachments_Id int8, primary key (id))\n+create table AuditTaskImpl (id int8 not null, activationTime timestamp, actualOwner varchar(255), createdBy varchar(255), createdOn timestamp, deploymentId varchar(255), description varchar(255), dueDate timestamp, lastModificationDate timestamp, name varchar(255), parentId int8 not null, priority int4 not null, processId varchar(255), processInstanceId int8 not null, processSessionId int8 not null, status varchar(255), taskId int8, workItemId int8, primary key (id))\n+create table BAMTaskSummary (pk int8 not null, createdDate timestamp, duration int8, endDate timestamp, processInstanceId int8 not null, startDate timestamp, status varchar(255), taskId int8 not null, taskName varchar(255), userId varchar(255), OPTLOCK int4, primary key (pk))\n+create table BooleanExpression (id int8 not null, expression text, type varchar(255), Escalation_Constraints_Id int8, primary key (id))\n+create table CaseFileDataLog (id int8 not null, caseDefId varchar(255), caseId varchar(255), itemName varchar(255), itemType varchar(255), itemValue varchar(255), lastModified timestamp, lastModifiedBy varchar(255), primary key (id))\n+create table CaseIdInfo (id int8 not null, caseIdPrefix varchar(255), currentValue int8, primary key (id))\n+create table CaseRoleAssignmentLog (id int8 not null, caseId varchar(255), entityId varchar(255), processInstanceId int8 not null, roleName varchar(255), type int4 not null, primary key (id))\n+create table Content (id int8 not null, content bytea, primary key (id))\n+create table ContextMappingInfo (mappingId int8 not null, CONTEXT_ID varchar(255) not null, KSESSION_ID int8 not null, OWNER_ID varchar(255), OPTLOCK int4, primary key (mappingId))\n+create table CorrelationKeyInfo (keyId int8 not null, name varchar(255), processInstanceId int8 not null, OPTLOCK int4, primary key (keyId))\n+create table CorrelationPropertyInfo (propertyId int8 not null, name varchar(255), value varchar(255), OPTLOCK int4, correlationKey_keyId int8, primary key (propertyId))\n+create table Deadline (id int8 not null, deadline_date timestamp, escalated int2, Deadlines_StartDeadLine_Id int8, Deadlines_EndDeadLine_Id int8, primary key (id))\n+create table Delegation_delegates (task_id int8 not null, entity_id varchar(255) not null)\n+create table DeploymentStore (id int8 not null, attributes varchar(255), DEPLOYMENT_ID varchar(255), deploymentUnit text, state int4, updateDate timestamp, primary key (id))\n+create table email_header (id int8 not null, body text, fromAddress varchar(255), language varchar(255), replyToAddress varchar(255), subject varchar(255), primary key (id))\n+create table ErrorInfo (id int8 not null, message varchar(255), stacktrace varchar(5000), timestamp timestamp, REQUEST_ID int8 not null, primary key (id))\n+create table Escalation (id int8 not null, name varchar(255), Deadline_Escalation_Id int8, primary key (id))\n+create table EventTypes (InstanceId int8 not null, element varchar(255))\n+create table ExecutionErrorInfo (id int8 not null, ERROR_ACK int2, ERROR_ACK_AT timestamp, ERROR_ACK_BY varchar(255), ACTIVITY_ID int8, ACTIVITY_NAME varchar(255), DEPLOYMENT_ID varchar(255), ERROR_INFO text, ERROR_DATE timestamp, ERROR_ID varchar(255), ERROR_MSG varchar(255), INIT_ACTIVITY_ID int8, JOB_ID int8, PROCESS_ID varchar(255), PROCESS_INST_ID int8, ERROR_TYPE varchar(255), primary key (id))\n+create table I18NText (id int8 not null, language varchar(255), shortText varchar(255), text text, Task_Subjects_Id int8, Task_Names_Id int8, Task_Descriptions_Id int8, Reassignment_Documentation_Id int8, Notification_Subjects_Id int8, Notification_Names_Id int8, Notification_Documentation_Id int8, Notification_Descriptions_Id int8, Deadline_Documentation_Id int8, primary key (id))\n+create table NodeInstanceLog (id int8 not null, connection varchar(255), log_date timestamp, externalId varchar(255), nodeContainerId varchar(255), nodeId varchar(255), nodeInstanceId varchar(255), nodeName varchar(255), nodeType varchar(255), processId varchar(255), processInstanceId int8 not null, referenceId int8, slaCompliance int4, sla_due_date timestamp, type int4 not null, workItemId int8, primary key (id))\n+create table Notification (DTYPE varchar(31) not null, id int8 not null, priority int4 not null, Escalation_Notifications_Id int8, primary key (id))\n+create table Notification_BAs (task_id int8 not null, entity_id varchar(255) not null)\n+create table Notification_email_header (Notification_id int8 not null, emailHeaders_id int8 not null, mapkey varchar(255) not null, primary key (Notification_id, mapkey))\n+create table Notification_Recipients (task_id int8 not null, entity_id varchar(255) not null)\n+create table OrganizationalEntity (DTYPE varchar(31) not null, id varchar(255) not null, primary key (id))\n+create table PeopleAssignments_BAs (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_ExclOwners (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_PotOwners (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_Recipients (task_id int8 not null, entity_id varchar(255) not null)\n+create table PeopleAssignments_Stakeholders (task_id int8 not null, entity_id varchar(255) not null)\n+create table ProcessInstanceInfo (InstanceId int8 not null, lastModificationDate timestamp, lastReadDate timestamp, processId varchar(255), processInstanceByteArray bytea, startDate timestamp, state int4 not null, OPTLOCK int4, primary key (InstanceId))\n+create table ProcessInstanceLog (id int8 not null, correlationKey varchar(255), duration int8, end_date timestamp, externalId varchar(255), user_identity varchar(255), outcome varchar(255), parentProcessInstanceId int8, processId varchar(255), processInstanceDescription varchar(255), processInstanceId int8 not null, processName varchar(255), processType int4, processVersion varchar(255), slaCompliance int4, sla_due_date timestamp, start_date timestamp, status int4, primary key (id))\n+create table QueryDefinitionStore (id int8 not null, qExpression text, qName varchar(255), qSource varchar(255), qTarget varchar(255), primary key (id))\n+create table Reassignment (id int8 not null, Escalation_Reassignments_Id int8, primary key (id))\n+create table Reassignment_potentialOwners (task_id int8 not null, entity_id varchar(255) not null)\n+create table RequestInfo (id int8 not null, commandName varchar(255), deploymentId varchar(255), executions int4 not null, businessKey varchar(255), message varchar(255), owner varchar(255), priority int4 not null, processInstanceId int8, requestData bytea, responseData bytea, retries int4 not null, status varchar(255), timestamp timestamp, primary key (id))\n+create table SessionInfo (id int8 not null, lastModificationDate timestamp, rulesByteArray bytea, startDate timestamp, OPTLOCK int4, primary key (id))\n+create table Task (id int8 not null, archived int2, allowedToDelegate varchar(255), description varchar(255), formName varchar(255), name varchar(255), priority int4 not null, subTaskStrategy varchar(255), subject varchar(255), activationTime timestamp, createdOn timestamp, deploymentId varchar(255), documentAccessType int4, documentContentId int8 not null, documentType varchar(255), expirationTime timestamp, faultAccessType int4, faultContentId int8 not null, faultName varchar(255), faultType varchar(255), outputAccessType int4, outputContentId int8 not null, outputType varchar(255), parentId int8 not null, previousStatus int4, processId varchar(255), processInstanceId int8 not null, processSessionId int8 not null, skipable boolean not null, status varchar(255), workItemId int8 not null, taskType varchar(255), OPTLOCK int4, taskInitiator_id varchar(255), actualOwner_id varchar(255), createdBy_id varchar(255), primary key (id))\n+create table task_comment (id int8 not null, addedAt timestamp, text text, addedBy_id varchar(255), TaskData_Comments_Id int8, primary key (id))\n+create table TaskDef (id int8 not null, name varchar(255), priority int4 not null, primary key (id))\n+create table TaskEvent (id int8 not null, correlationKey varchar(255), logTime timestamp, message varchar(255), processInstanceId int8, processType int4, taskId int8, type varchar(255), userId varchar(255), OPTLOCK int4, workItemId int8, primary key (id))\n+create table TaskVariableImpl (id int8 not null, modificationDate timestamp, name varchar(255), processId varchar(255), processInstanceId int8, taskId int8, type int4, value varchar(4000), primary key (id))\n+create table VariableInstanceLog (id int8 not null, log_date timestamp, externalId varchar(255), oldValue varchar(255), processId varchar(255), processInstanceId int8 not null, value varchar(255), variableId varchar(255), variableInstanceId varchar(255), primary key (id))\n+create table WorkItemInfo (workItemId int8 not null, creationDate timestamp, name varchar(255), processInstanceId int8 not null, state int8 not null, OPTLOCK int4, workItemByteArray bytea, primary key (workItemId))\n+create index IDX_Attachment_Id on Attachment (attachedBy_id)\n+create index IDX_Attachment_DataId on Attachment (TaskData_Attachments_Id)\n+create index IDX_AuditTaskImpl_taskId on AuditTaskImpl (taskId)\n+create index IDX_AuditTaskImpl_pInstId on AuditTaskImpl (processInstanceId)\n+create index IDX_AuditTaskImpl_workItemId on AuditTaskImpl (workItemId)\n+create index IDX_AuditTaskImpl_name on AuditTaskImpl (name)\n+create index IDX_AuditTaskImpl_processId on AuditTaskImpl (processId)\n+create index IDX_AuditTaskImpl_status on AuditTaskImpl (status)\n+create index IDX_BAMTaskSumm_createdDate on BAMTaskSummary (createdDate)\n+create index IDX_BAMTaskSumm_duration on BAMTaskSummary (duration)\n+create index IDX_BAMTaskSumm_endDate on BAMTaskSummary (endDate)\n+create index IDX_BAMTaskSumm_pInstId on BAMTaskSummary (processInstanceId)\n+create index IDX_BAMTaskSumm_startDate on BAMTaskSummary (startDate)\n+create index IDX_BAMTaskSumm_status on BAMTaskSummary (status)\n+create index IDX_BAMTaskSumm_taskId on BAMTaskSummary (taskId)\n+create index IDX_BAMTaskSumm_taskName on BAMTaskSummary (taskName)\n+create index IDX_BAMTaskSumm_userId on BAMTaskSummary (userId)\n+create index IDX_BoolExpr_Id on BooleanExpression (Escalation_Constraints_Id)\n+alter table CaseIdInfo add constraint UKftvt225gyxpjnl3d06alqkqyj unique (caseIdPrefix)\n+create index IDX_CMI_Context on ContextMappingInfo (CONTEXT_ID)\n+create index IDX_CMI_KSession on ContextMappingInfo (KSESSION_ID)\n+create index IDX_CMI_Owner on ContextMappingInfo (OWNER_ID)\n+alter table CorrelationKeyInfo add constraint IDX_CorrelationKeyInfo_name unique (name)\n+create index IDX_CorrPropInfo_Id on CorrelationPropertyInfo (correlationKey_keyId)\n+create index IDX_Deadline_StartId on Deadline (Deadlines_StartDeadLine_Id)\n+create index IDX_Deadline_EndId on Deadline (Deadlines_EndDeadLine_Id)\n+create index IDX_Delegation_EntityId on Delegation_delegates (entity_id)\n+create index IDX_Delegation_TaskId on Delegation_delegates (task_id)\n+alter table DeploymentStore add constraint UK85rgskt09thd8mkkfl3tb0y81 unique (DEPLOYMENT_ID)\n+create index IDX_ErrorInfo_Id on ErrorInfo (REQUEST_ID)\n+create index IDX_Escalation_Id on Escalation (Deadline_Escalation_Id)\n+create index IDX_EventTypes_Id on EventTypes (InstanceId)\n+create index IDX_EventTypes_element on EventTypes (element)\n+create index IDX_ErrorInfo_pInstId on ExecutionErrorInfo (PROCESS_INST_ID)\n+create index IDX_ErrorInfo_errorAck on ExecutionErrorInfo (ERROR_ACK)\n+create index IDX_I18NText_SubjId on I18NText (Task_Subjects_Id)\n+create index IDX_I18NText_NameId on I18NText (Task_Names_Id)\n+create index IDX_I18NText_DescrId on I18NText (Task_Descriptions_Id)\n+create index IDX_I18NText_ReassignId on I18NText (Reassignment_Documentation_Id)\n+create index IDX_I18NText_NotSubjId on I18NText (Notification_Subjects_Id)\n+create index IDX_I18NText_NotNamId on I18NText (Notification_Names_Id)\n+create index IDX_I18NText_NotDocId on I18NText (Notification_Documentation_Id)\n+create index IDX_I18NText_NotDescrId on I18NText (Notification_Descriptions_Id)\n+create index IDX_I18NText_DeadDocId on I18NText (Deadline_Documentation_Id)\n+create index IDX_NInstLog_pInstId on NodeInstanceLog (processInstanceId)\n+create index IDX_NInstLog_nodeType on NodeInstanceLog (nodeType)\n+create index IDX_NInstLog_pId on NodeInstanceLog (processId)\n+create index IDX_Not_EscId on Notification (Escalation_Notifications_Id)\n+create index IDX_NotBAs_Entity on Notification_BAs (entity_id)\n+create index IDX_NotBAs_Task on Notification_BAs (task_id)\n+alter table Notification_email_header add constraint UK_ptaka5kost68h7l3wflv7w6y8 unique (emailHeaders_id)\n+create index IDX_NotRec_Entity on Notification_Recipients (entity_id)\n+create index IDX_NotRec_Task on Notification_Recipients (task_id)\n+create index IDX_PAsBAs_Entity on PeopleAssignments_BAs (entity_id)\n+create index IDX_PAsBAs_Task on PeopleAssignments_BAs (task_id)\n+create index IDX_PAsExcl_Entity on PeopleAssignments_ExclOwners (entity_id)\n+create index IDX_PAsExcl_Task on PeopleAssignments_ExclOwners (task_id)\n+create index IDX_PAsPot_TaskEntity on PeopleAssignments_PotOwners (task_id, entity_id)\n+create index IDX_PAsRecip_Entity on PeopleAssignments_Recipients (entity_id)\n+create index IDX_PAsRecip_Task on PeopleAssignments_Recipients (task_id)\n+create index IDX_PAsStake_Entity on PeopleAssignments_Stakeholders (entity_id)\n+create index IDX_PAsStake_Task on PeopleAssignments_Stakeholders (task_id)\n+create index IDX_PInstLog_duration on ProcessInstanceLog (duration)\n+create index IDX_PInstLog_end_date on ProcessInstanceLog (end_date)\n+create index IDX_PInstLog_extId on ProcessInstanceLog (externalId)\n+create index IDX_PInstLog_user_identity on ProcessInstanceLog (user_identity)\n+create index IDX_PInstLog_outcome on ProcessInstanceLog (outcome)\n+create index IDX_PInstLog_parentPInstId on ProcessInstanceLog (parentProcessInstanceId)\n+create index IDX_PInstLog_pId on ProcessInstanceLog (processId)\n+create index IDX_PInstLog_pInsteDescr on ProcessInstanceLog (processInstanceDescription)\n+create index IDX_PInstLog_pInstId on ProcessInstanceLog (processInstanceId)\n+create index IDX_PInstLog_pName on ProcessInstanceLog (processName)\n+create index IDX_PInstLog_pVersion on ProcessInstanceLog (processVersion)\n+create index IDX_PInstLog_start_date on ProcessInstanceLog (start_date)\n+create index IDX_PInstLog_status on ProcessInstanceLog (status)\n+create index IDX_PInstLog_correlation on ProcessInstanceLog (correlationKey)\n+alter table QueryDefinitionStore add constraint UK1dmy087nhbykucpgjipcnyluv unique (qName)\n+create index IDX_Reassign_Esc on Reassignment (Escalation_Reassignments_Id)\n+create index IDX_ReassignPO_Entity on Reassignment_potentialOwners (entity_id)\n+create index IDX_ReassignPO_Task on Reassignment_potentialOwners (task_id)\n+create index IDX_RequestInfo_status on RequestInfo (status)\n+create index IDX_RequestInfo_owner on RequestInfo (owner)\n+create index IDX_Task_Initiator on Task (taskInitiator_id)\n+create index IDX_Task_ActualOwner on Task (actualOwner_id)\n+create index IDX_Task_CreatedBy on Task (createdBy_id)\n+create index IDX_Task_processInstanceId on Task (processInstanceId)\n+create index IDX_Task_processId on Task (processId)\n+create index IDX_Task_status on Task (status)\n+create index IDX_Task_archived on Task (archived)\n+create index IDX_Task_workItemId on Task (workItemId)\n+create index IDX_TaskComments_CreatedBy on task_comment (addedBy_id)\n+create index IDX_TaskComments_Id on task_comment (TaskData_Comments_Id)\n+create index IDX_TaskVariableImpl_taskId on TaskVariableImpl (taskId)\n+create index IDX_TaskVariableImpl_pInstId on TaskVariableImpl (processInstanceId)\n+create index IDX_TaskVariableImpl_processId on TaskVariableImpl (processId)\n+create index IDX_VInstLog_pInstId on VariableInstanceLog (processInstanceId)\n+create index IDX_VInstLog_varId on VariableInstanceLog (variableId)\n+create index IDX_VInstLog_pId on VariableInstanceLog (processId)\n+alter table Attachment add constraint FKd5xpm81gxg8n40167lbu5rbfb foreign key (attachedBy_id) references OrganizationalEntity\n+alter table Attachment add constraint FKjj9psk52ifamilliyo16epwpc foreign key (TaskData_Attachments_Id) references Task\n+alter table BooleanExpression add constraint FKqth56a8k6d8pv6ngsu2vjp4kj foreign key (Escalation_Constraints_Id) references Escalation\n+alter table CorrelationPropertyInfo add constraint FKbchyl7kb8i6ghvi3dbr86bgo0 foreign key (correlationKey_keyId) references CorrelationKeyInfo\n+alter table Deadline add constraint FK361ggw230po88svgfasg36i2w foreign key (Deadlines_StartDeadLine_Id) references Task\n+alter table Deadline add constraint FKpeiadnoy228t35213t63c3imm foreign key (Deadlines_EndDeadLine_Id) references Task\n+alter table Delegation_delegates add constraint FKewkdyi0wrgy9byp6abyglpcxq foreign key (entity_id) references OrganizationalEntity\n+alter table Delegation_delegates add constraint FK85x3trafk3wfbrv719cafr591 foreign key (task_id) references Task\n+alter table ErrorInfo add constraint FKdarp6ushq06q39jmij3fdpdbs foreign key (REQUEST_ID) references RequestInfo\n+alter table Escalation add constraint FK37v8ova8ti6jiblda7n6j298e foreign key (Deadline_Escalation_Id) references Deadline\n+alter table EventTypes add constraint FKj0o3uve2nqo5yrjwrkc9jfttq foreign key (InstanceId) references ProcessInstanceInfo\n+alter table I18NText add constraint FKcd6eb4q62d9ab8p0di8pb99ch foreign key (Task_Subjects_Id) references Task\n+alter table I18NText add constraint FKiogka67sji8fk4cp7a369895i foreign key (Task_Names_Id) references Task\n+alter table I18NText add constraint FKrisdlmalotmk64mdeqpo4s5m0 foreign key (Task_Descriptions_Id) references Task\n+alter table I18NText add constraint FKqxgws3fnukyqlaet11tivqg5u foreign key (Reassignment_Documentation_Id) references Reassignment\n+alter table I18NText add constraint FKthf8ix3t3opf9hya1s04hwsx8 foreign key (Notification_Subjects_Id) references Notification\n+alter table I18NText add constraint FKg2jsybeuc8pbj8ek8xwxutuyo foreign key (Notification_Names_Id) references Notification\n+alter table I18NText add constraint FKp0m7uhipskrljktvfeubdgfid foreign key (Notification_Documentation_Id) references Notification\n+alter table I18NText add constraint FK6k8hmfvhko069970eghiy2ifp foreign key (Notification_Descriptions_Id) references Notification\n+alter table I18NText add constraint FK8wn7sw34q6bifsi1pvl2b1yyb foreign key (Deadline_Documentation_Id) references Deadline\n+alter table Notification add constraint FKoxq5uqfg4ylwyijsg2ubyflna foreign key (Escalation_Notifications_Id) references Escalation\n+alter table Notification_BAs add constraint FK378pb1cvjv54w4ljqpw99s3wr foreign key (entity_id) references OrganizationalEntity\n+alter table Notification_BAs add constraint FKb123fgeomc741s9yc014421yy foreign key (task_id) references Notification\n+alter table Notification_email_header add constraint FKd74pdu41avy2f7a8qyp7wn2n foreign key (emailHeaders_id) references email_header\n+alter table Notification_email_header add constraint FKfdnoyp8rl0kxu29l4pyaa5566 foreign key (Notification_id) references Notification\n+alter table Notification_Recipients add constraint FKot769nimyq1jvw0m61pgsq5g3 foreign key (entity_id) references OrganizationalEntity\n+alter table Notification_Recipients add constraint FKn7v944d0hw37bh0auv4gr3hsf foreign key (task_id) references Notification\n+alter table PeopleAssignments_BAs add constraint FKa90cdfgc4km384n1ataqigq67 foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_BAs add constraint FKt4xs0glwhbsa0xwg69r6xduv9 foreign key (task_id) references Task\n+alter table PeopleAssignments_ExclOwners add constraint FK5ituvd6t8uvp63hsx6282xo6h foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_ExclOwners add constraint FKqxbjm1b3dl7w8w2f2y6sk0fv8 foreign key (task_id) references Task\n+alter table PeopleAssignments_PotOwners add constraint FKsa3rrrjsm1qw98ajbbu2s7cjr foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_PotOwners add constraint FKh8oqmk4iuh2pmpgby6g8r3jd1 foreign key (task_id) references Task\n+alter table PeopleAssignments_Recipients add constraint FKrd0h9ud1bhs9waf2mdmiv6j2r foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_Recipients add constraint FK9gnbv6bplxkxoedj35vg8n7ir foreign key (task_id) references Task\n+alter table PeopleAssignments_Stakeholders add constraint FK9uy76cu650rg1nnkrtjwj1e9t foreign key (entity_id) references OrganizationalEntity\n+alter table PeopleAssignments_Stakeholders add constraint FKaeyk4nwslvx0jywjomjq7083i foreign key (task_id) references Task\n+alter table Reassignment add constraint FKessy30safh44b30f1cfoujv2k foreign key (Escalation_Reassignments_Id) references Escalation\n+alter table Reassignment_potentialOwners add constraint FKsqrmpvehlc4qe9i0km22nmkjl foreign key (entity_id) references OrganizationalEntity\n+alter table Reassignment_potentialOwners add constraint FKftegfexshix752bh2jfxf6bnh foreign key (task_id) references Reassignment\n+alter table Task add constraint FK48d1bfgwf0jqow1yk8ku4xcpi foreign key (taskInitiator_id) references OrganizationalEntity\n+alter table Task add constraint FKpmkxvqq63aed2y2boruu53a0s foreign key (actualOwner_id) references OrganizationalEntity\n+alter table Task add constraint FKexuboqnbla7jfyyesyo61ucmb foreign key (createdBy_id) references OrganizationalEntity\n+alter table task_comment add constraint FKqb4mkarf209y9546w7n75lb7a foreign key (addedBy_id) references OrganizationalEntity\n+alter table task_comment add constraint FKm2mwc1ukcpdsiqwgkoroy6ise foreign key (TaskData_Comments_Id) references Task", "originalCommit": "599f21bdc9e3df856eb07da1cfa9dce4808ba200", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4MzA1NA==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r466483054", "bodyText": "This quartz validation is failing for non-standard configurations (i.e., 1, 2 and 3 of parameterized configs for postgres and 1 for oracle):\nFor these configurations (e.g. [1]):\nReturned DDL files: [postgresql-springboot-jbpm-schema.sql]\ninstead of working configurations [0]:\nReturned DDL files: [postgresql-jbpm-schema.sql, postgresql-jbpm-lo-trigger-clob.sql, quartz_tables_postgres.sql, task_assigning_tables_postgresql.sql]\nAt least, quartz_tables_postgres.sql should be either returned for all configurations or skipping this validations for all configurations but 0.", "author": "gmunozfe", "createdAt": "2020-08-06T15:09:22Z", "path": "jbpm-db-scripts/src/test/java/org/jbpm/persistence/scripts/DDLScriptsTest.java", "diffHunk": "@@ -16,28 +16,79 @@\n \n package org.jbpm.persistence.scripts;\n \n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import org.jbpm.test.persistence.scripts.DatabaseType;\n+import org.jbpm.test.persistence.scripts.PersistenceUnit;\n import org.jbpm.test.persistence.scripts.ScriptsBase;\n+import org.jbpm.test.persistence.scripts.TestPersistenceContextBase;\n import org.jbpm.test.persistence.scripts.util.ScriptFilter;\n+import org.jbpm.test.persistence.scripts.util.ScriptFilter.Option;\n import org.junit.Assert;\n+import org.junit.Before;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n \n+import static org.jbpm.persistence.scripts.TestPersistenceContext.createAndInitContext;\n import static org.jbpm.test.persistence.scripts.PersistenceUnit.DB_QUARTZ_VALIDATE;\n import static org.jbpm.test.persistence.scripts.PersistenceUnit.DB_TESTING_VALIDATE;\n-import static org.jbpm.persistence.scripts.TestPersistenceContext.createAndInitContext;\n+import static org.jbpm.test.persistence.scripts.util.ScriptFilter.filter;\n+import static org.junit.Assume.assumeTrue;\n \n /**\n  * Contains tests that test DDL scripts.\n  */\n+@RunWith(Parameterized.class)\n public class DDLScriptsTest extends ScriptsBase {\n+\n+    @Parameters\n+    public static Collection<ScriptFilter[]> data() {\n+        ScriptFilter[] standard = new ScriptFilter[]{ScriptFilter.init(false, true), ScriptFilter.init(false, false)};\n+\n+        ScriptFilter[] springBoot = new ScriptFilter[]{ScriptFilter.init(true, true)\n+                                                                   .setSupportedDatabase(DatabaseType.POSTGRESQL, DatabaseType.ORACLE),\n+                                                       ScriptFilter.init(true, false)};\n+\n+\n+        ScriptFilter[] pqlBytea = new ScriptFilter[]{filter(\"postgresql-bytea-jbpm-schema.sql\")\n+                                                                 .setSupportedDatabase(DatabaseType.POSTGRESQL)\n+                                                                 .setOptions(Option.DISALLOW_EMTPY_RESULTS, Option.THROW_ON_SCRIPT_ERROR),\n+                                                     filter(\"postgresql-bytea-jbpm-schema-drop.sql\")};\n+\n+        ScriptFilter[] pqlSpringBootBytea = new ScriptFilter[]{filter(\"postgresql-springboot-bytea-jbpm-schema.sql\")\n+                                                                           .setSupportedDatabase(DatabaseType.POSTGRESQL)\n+                                                                           .setOptions(Option.DISALLOW_EMTPY_RESULTS, Option.THROW_ON_SCRIPT_ERROR),\n+                                                               filter(\"postgresql-springboot-bytea-jbpm-schema-drop.sql\")};\n+\n+        return Arrays.asList(standard, springBoot, pqlBytea, pqlSpringBootBytea);\n+    }\n+\n+    private ScriptFilter createScript;\n+    private ScriptFilter dropScript;\n+\n+    public DDLScriptsTest(ScriptFilter createScript, ScriptFilter dropScript) {\n+        this.createScript = createScript;\n+        this.dropScript = dropScript;\n+    }\n+\n+    @Before\n+    public void prepare() {\n+        TestPersistenceContextBase scriptRunnerContext = createAndInitContext(PersistenceUnit.SCRIPT_RUNNER);\n+        DatabaseType dbType = scriptRunnerContext.getDatabaseType();\n+        assumeTrue(\"Scripts test not supported this database \" + dbType, createScript.isSupportedDatabase(dbType));\n+    }\n     /**\n      * Tests that DB schema is created properly using DDL scripts.\n      */\n     @Test\n     public void createAndDropSchemaUsingDDLs() throws Exception {\n-        executeScriptRunner(DB_DDL_SCRIPTS_RESOURCE_PATH, ScriptFilter.init(false, true));\n+        executeScriptRunner(DB_DDL_SCRIPTS_RESOURCE_PATH, createScript);\n         validateAndPersistProcess();\n         validateQuartz();", "originalCommit": "599f21bdc9e3df856eb07da1cfa9dce4808ba200", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b2a5d072b7f0cb84d1c95ff2e06bf9cf4ee2ea93", "url": "https://github.com/kiegroup/jbpm/commit/b2a5d072b7f0cb84d1c95ff2e06bf9cf4ee2ea93", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-07T07:37:49Z", "type": "forcePushed"}, {"oid": "162100a7a16f3b316dd0f17b33e1924effb9f2d3", "url": "https://github.com/kiegroup/jbpm/commit/162100a7a16f3b316dd0f17b33e1924effb9f2d3", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-07T07:38:35Z", "type": "forcePushed"}, {"oid": "5dec37df8cb0a146403532d8a39ec8ac1fc86174", "url": "https://github.com/kiegroup/jbpm/commit/5dec37df8cb0a146403532d8a39ec8ac1fc86174", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-09T09:04:53Z", "type": "forcePushed"}, {"oid": "0f1acf46d159703dfbbc5ca81e46619d954d78a4", "url": "https://github.com/kiegroup/jbpm/commit/0f1acf46d159703dfbbc5ca81e46619d954d78a4", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-10T07:02:06Z", "type": "forcePushed"}, {"oid": "7aefb626aa5dc7ee98c24b9a50f00946edd4e149", "url": "https://github.com/kiegroup/jbpm/commit/7aefb626aa5dc7ee98c24b9a50f00946edd4e149", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-10T07:06:23Z", "type": "forcePushed"}, {"oid": "7514e428b9741a32d6875389bcf17c8897503fe4", "url": "https://github.com/kiegroup/jbpm/commit/7514e428b9741a32d6875389bcf17c8897503fe4", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-11T15:24:54Z", "type": "commit"}, {"oid": "7514e428b9741a32d6875389bcf17c8897503fe4", "url": "https://github.com/kiegroup/jbpm/commit/7514e428b9741a32d6875389bcf17c8897503fe4", "message": "[JBPM-9264] Provide alternative to oid column in Postgres (bytea)\n\nadded sql scripts for bytea\nadded type contributor and a new flag for bytea", "committedDate": "2020-08-11T15:24:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2NjU0OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r468466549", "bodyText": "It can be made static class", "author": "afalhambra", "createdAt": "2020-08-11T10:00:16Z", "path": "jbpm-persistence/jbpm-persistence-jpa/src/main/java/org/jbpm/persistence/jpa/hibernate/PostgreSQLByteaTypeContributor.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jbpm.persistence.jpa.hibernate;\n+\n+import org.hibernate.boot.model.TypeContributions;\n+import org.hibernate.boot.model.TypeContributor;\n+import org.hibernate.dialect.Dialect;\n+import org.hibernate.engine.jdbc.spi.JdbcServices;\n+import org.hibernate.service.ServiceRegistry;\n+import org.hibernate.type.StandardBasicTypeTemplate;\n+import org.hibernate.type.StandardBasicTypes;\n+import org.hibernate.type.descriptor.java.PrimitiveByteArrayTypeDescriptor;\n+import org.hibernate.type.descriptor.sql.BinaryTypeDescriptor;\n+\n+\n+public class PostgreSQLByteaTypeContributor implements TypeContributor {\n+\n+    public class ByteaContributorType extends StandardBasicTypeTemplate<byte[]> {", "originalCommit": "7aefb626aa5dc7ee98c24b9a50f00946edd4e149", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzMzA5MA==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r468533090", "bodyText": "I would remove start 1 increment 1 from the sequence statements, like file\nhttps://github.com/kiegroup/jbpm/blob/master/jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-jbpm-schema.sql\nSo we avoid any possible confusion about this - default sequence behaviour in postgresql might change when not set/specified.", "author": "afalhambra", "createdAt": "2020-08-11T12:12:17Z", "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/postgresql/postgresql-bytea-jbpm-schema.sql", "diffHunk": "@@ -0,0 +1,221 @@\n+create sequence ATTACHMENT_ID_SEQ start 1 increment 1;\n+create sequence AUDIT_ID_SEQ start 1 increment 1;\n+create sequence BAM_TASK_ID_SEQ start 1 increment 1;\n+create sequence BOOLEANEXPR_ID_SEQ start 1 increment 1;\n+create sequence CASE_FILE_DATA_LOG_ID_SEQ start 1 increment 1;\n+create sequence CASE_ID_INFO_ID_SEQ start 1 increment 1;\n+create sequence CASE_ROLE_ASSIGN_LOG_ID_SEQ start 1 increment 1;\n+create sequence COMMENT_ID_SEQ start 1 increment 1;\n+create sequence CONTENT_ID_SEQ start 1 increment 1;\n+create sequence CONTEXT_MAPPING_INFO_ID_SEQ start 1 increment 1;\n+create sequence CORRELATION_KEY_ID_SEQ start 1 increment 1;\n+create sequence CORRELATION_PROP_ID_SEQ start 1 increment 1;\n+create sequence DEADLINE_ID_SEQ start 1 increment 1;\n+create sequence DEPLOY_STORE_ID_SEQ start 1 increment 1;\n+create sequence EMAILNOTIFHEAD_ID_SEQ start 1 increment 1;\n+create sequence ERROR_INFO_ID_SEQ start 1 increment 1;\n+create sequence ESCALATION_ID_SEQ start 1 increment 1;\n+create sequence EXEC_ERROR_INFO_ID_SEQ start 1 increment 1;\n+create sequence I18NTEXT_ID_SEQ start 1 increment 1;\n+create sequence NODE_INST_LOG_ID_SEQ start 1 increment 1;\n+create sequence NOTIFICATION_ID_SEQ start 1 increment 1;\n+create sequence PROC_INST_LOG_ID_SEQ start 1 increment 1;\n+create sequence PROCESS_INSTANCE_INFO_ID_SEQ start 1 increment 1;\n+create sequence QUERY_DEF_ID_SEQ start 1 increment 1;\n+create sequence REASSIGNMENT_ID_SEQ start 1 increment 1;\n+create sequence REQUEST_INFO_ID_SEQ start 1 increment 1;\n+create sequence SESSIONINFO_ID_SEQ start 1 increment 1;\n+create sequence TASK_DEF_ID_SEQ start 1 increment 1;\n+create sequence TASK_EVENT_ID_SEQ start 1 increment 1;\n+create sequence TASK_ID_SEQ start 1 increment 1;\n+create sequence TASK_VAR_ID_SEQ start 1 increment 1;\n+create sequence VAR_INST_LOG_ID_SEQ start 1 increment 1;\n+create sequence WORKITEMINFO_ID_SEQ start 1 increment 1;", "originalCommit": "7aefb626aa5dc7ee98c24b9a50f00946edd4e149", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzNzUxNg==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r468537516", "bodyText": "just out of curiosity, is this change related to this PR?", "author": "afalhambra", "createdAt": "2020-08-11T12:20:34Z", "path": "jbpm-workitems/jbpm-workitems-rest/pom.xml", "diffHunk": "@@ -92,11 +92,6 @@\n       <type>test-jar</type>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.jboss.spec.javax.xml.bind</groupId>\n-      <artifactId>jboss-jaxb-api_2.3_spec</artifactId>\n-      <scope>provided</scope>\n-    </dependency>", "originalCommit": "7aefb626aa5dc7ee98c24b9a50f00946edd4e149", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU3ODE0OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r468578149", "bodyText": "Typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DISALLOW_EMTPY_RESULTS, // if the filter allow no results\n          \n          \n            \n                    DISALLOW_EMPTY_RESULTS, // if the filter allows no results", "author": "afalhambra", "createdAt": "2020-08-11T13:27:44Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/ScriptFilter.java", "diffHunk": "@@ -16,25 +16,87 @@\n \n package org.jbpm.test.persistence.scripts.util;\n \n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+import org.jbpm.test.persistence.scripts.DatabaseType;\n+\n+\n public class ScriptFilter {\n \n-    private boolean springboot;\n-    private boolean create;\n-    \n-    public ScriptFilter(boolean springboot, boolean create) {\n-        this.springboot = springboot;\n-        this.create = create;\n+    public enum Option {\n+        DISALLOW_EMTPY_RESULTS, // if the filter allow no results", "originalCommit": "7aefb626aa5dc7ee98c24b9a50f00946edd4e149", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzMTA2MA==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r469031060", "bodyText": "Typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Map<String, Object> getEnvironent() {\n          \n          \n            \n                public Map<String, Object> getEnvironment() {", "author": "afalhambra", "createdAt": "2020-08-12T06:24:29Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/ScriptFilter.java", "diffHunk": "@@ -16,25 +16,104 @@\n \n package org.jbpm.test.persistence.scripts.util;\n \n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+import org.jbpm.test.persistence.scripts.DatabaseType;\n+\n+\n public class ScriptFilter {\n \n-    private boolean springboot;\n-    private boolean create;\n-    \n-    public ScriptFilter(boolean springboot, boolean create) {\n-        this.springboot = springboot;\n-        this.create = create;\n+    public enum Option {\n+        DISALLOW_EMTPY_RESULTS, // if the filter allow no results\n+        THROW_ON_SCRIPT_ERROR // if the filter allows script errors\n+    }\n+\n+    private Set<DatabaseType> dbTypes;\n+    private Set<Option> options;\n+    private List<Predicate<File>> predicates;\n+    private Map<String, Object> env;\n+\n+    @SafeVarargs\n+    public ScriptFilter(Predicate<File>... filters) {\n+        this.predicates = new ArrayList<>();\n+        this.options = new TreeSet<>();\n+        this.dbTypes = new TreeSet<>();\n+        Collections.addAll(this.dbTypes, DatabaseType.values());\n+        Collections.addAll(this.predicates, filters);\n+        env = new HashMap<String, Object>();\n+    }\n+\n+    @SafeVarargs\n+    public static ScriptFilter create(Predicate<File>... filters) {\n+        return new ScriptFilter(filters);\n     }\n-    \n+\n+    public static ScriptFilter filter(String... scripts) {\n+        Predicate<File> predicate = Arrays.asList(scripts).stream().map(s -> (Predicate<File>) file -> file.getName().contains(s)).reduce(x -> false, Predicate::or);\n+        ScriptFilter filter = new ScriptFilter(predicate);\n+        return filter;\n+    }\n+\n+    public ScriptFilter env(String key, Object value) {\n+        env.put(key, value);\n+        return this;\n+    }\n+\n     public static ScriptFilter init(boolean springboot, boolean create) {\n-        return new ScriptFilter(springboot, create);\n+        Predicate<File> filterExtension = file -> file.getName().toLowerCase().endsWith(\".sql\");\n+\n+        Predicate<File> filterSpringboot = file -> file.getName().toLowerCase().contains(\"springboot\");\n+        filterSpringboot = springboot ? filterSpringboot : filterSpringboot.negate();\n+\n+        Predicate<File> filterBytea = file -> !file.getName().toLowerCase().contains(\"bytea\");\n+\n+        Predicate<File> filterName = file -> file.getName().contains(\"drop\");\n+        filterName = !create ? filterName : filterName.negate();\n+        ScriptFilter filter = new ScriptFilter(filterExtension, filterName, filterSpringboot, filterBytea);\n+        if (create) {\n+            filter.setOptions(Option.DISALLOW_EMTPY_RESULTS, Option.THROW_ON_SCRIPT_ERROR);\n+        }\n+        return filter;\n+    }\n+\n+    public ScriptFilter setSupportedDatabase(DatabaseType... types) {\n+        this.dbTypes.clear();\n+        Collections.addAll(this.dbTypes, types);\n+        return this;\n+    }\n+\n+    public boolean isSupportedDatabase(DatabaseType type) {\n+        return dbTypes.contains(type);\n+    }\n+\n+    public ScriptFilter setOptions(Option... elements) {\n+        Collections.addAll(this.options, elements);\n+        return this;\n     }\n-    \n-    public boolean isSpringboot() {\n-        return springboot;\n+\n+    public boolean hasOption(Option option) {\n+        return options.contains(option);\n+    }\n+\n+    public Predicate<File> build() {\n+        return predicates.stream().reduce(x -> true, Predicate::and);\n     }\n-    \n-    public boolean isCreate() {\n-        return create;\n+\n+    public Set<DatabaseType> getSupportedDatabase() {\n+        return this.dbTypes;\n     }\n+\n+    public Map<String, Object> getEnvironent() {", "originalCommit": "7514e428b9741a32d6875389bcf17c8897503fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE3MzUwNg==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r469173506", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    env = new HashMap<String, Object>();\n          \n          \n            \n                    env = new HashMap<>();", "author": "afalhambra", "createdAt": "2020-08-12T10:52:32Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/ScriptFilter.java", "diffHunk": "@@ -16,25 +16,104 @@\n \n package org.jbpm.test.persistence.scripts.util;\n \n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+import org.jbpm.test.persistence.scripts.DatabaseType;\n+\n+\n public class ScriptFilter {\n \n-    private boolean springboot;\n-    private boolean create;\n-    \n-    public ScriptFilter(boolean springboot, boolean create) {\n-        this.springboot = springboot;\n-        this.create = create;\n+    public enum Option {\n+        DISALLOW_EMTPY_RESULTS, // if the filter allow no results\n+        THROW_ON_SCRIPT_ERROR // if the filter allows script errors\n+    }\n+\n+    private Set<DatabaseType> dbTypes;\n+    private Set<Option> options;\n+    private List<Predicate<File>> predicates;\n+    private Map<String, Object> env;\n+\n+    @SafeVarargs\n+    public ScriptFilter(Predicate<File>... filters) {\n+        this.predicates = new ArrayList<>();\n+        this.options = new TreeSet<>();\n+        this.dbTypes = new TreeSet<>();\n+        Collections.addAll(this.dbTypes, DatabaseType.values());\n+        Collections.addAll(this.predicates, filters);\n+        env = new HashMap<String, Object>();", "originalCommit": "7514e428b9741a32d6875389bcf17c8897503fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE3NDIwMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r469174201", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Predicate<File> predicate = Arrays.asList(scripts).stream().map(s -> (Predicate<File>) file -> file.getName().contains(s)).reduce(x -> false, Predicate::or);\n          \n          \n            \n                    Predicate<File> predicate = Arrays.stream(scripts).map(s -> (Predicate<File>) file -> file.getName().contains(s)).reduce(x -> false, Predicate::or);", "author": "afalhambra", "createdAt": "2020-08-12T10:53:56Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/ScriptFilter.java", "diffHunk": "@@ -16,25 +16,104 @@\n \n package org.jbpm.test.persistence.scripts.util;\n \n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+import org.jbpm.test.persistence.scripts.DatabaseType;\n+\n+\n public class ScriptFilter {\n \n-    private boolean springboot;\n-    private boolean create;\n-    \n-    public ScriptFilter(boolean springboot, boolean create) {\n-        this.springboot = springboot;\n-        this.create = create;\n+    public enum Option {\n+        DISALLOW_EMTPY_RESULTS, // if the filter allow no results\n+        THROW_ON_SCRIPT_ERROR // if the filter allows script errors\n+    }\n+\n+    private Set<DatabaseType> dbTypes;\n+    private Set<Option> options;\n+    private List<Predicate<File>> predicates;\n+    private Map<String, Object> env;\n+\n+    @SafeVarargs\n+    public ScriptFilter(Predicate<File>... filters) {\n+        this.predicates = new ArrayList<>();\n+        this.options = new TreeSet<>();\n+        this.dbTypes = new TreeSet<>();\n+        Collections.addAll(this.dbTypes, DatabaseType.values());\n+        Collections.addAll(this.predicates, filters);\n+        env = new HashMap<String, Object>();\n+    }\n+\n+    @SafeVarargs\n+    public static ScriptFilter create(Predicate<File>... filters) {\n+        return new ScriptFilter(filters);\n     }\n-    \n+\n+    public static ScriptFilter filter(String... scripts) {\n+        Predicate<File> predicate = Arrays.asList(scripts).stream().map(s -> (Predicate<File>) file -> file.getName().contains(s)).reduce(x -> false, Predicate::or);", "originalCommit": "7514e428b9741a32d6875389bcf17c8897503fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE3NTE3Mw==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r469175173", "bodyText": "Do we really need TreeSet, why not HashSet?", "author": "afalhambra", "createdAt": "2020-08-12T10:56:00Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/ScriptFilter.java", "diffHunk": "@@ -16,25 +16,104 @@\n \n package org.jbpm.test.persistence.scripts.util;\n \n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Predicate;\n+\n+import org.jbpm.test.persistence.scripts.DatabaseType;\n+\n+\n public class ScriptFilter {\n \n-    private boolean springboot;\n-    private boolean create;\n-    \n-    public ScriptFilter(boolean springboot, boolean create) {\n-        this.springboot = springboot;\n-        this.create = create;\n+    public enum Option {\n+        DISALLOW_EMTPY_RESULTS, // if the filter allow no results\n+        THROW_ON_SCRIPT_ERROR // if the filter allows script errors\n+    }\n+\n+    private Set<DatabaseType> dbTypes;\n+    private Set<Option> options;\n+    private List<Predicate<File>> predicates;\n+    private Map<String, Object> env;\n+\n+    @SafeVarargs\n+    public ScriptFilter(Predicate<File>... filters) {\n+        this.predicates = new ArrayList<>();\n+        this.options = new TreeSet<>();\n+        this.dbTypes = new TreeSet<>();", "originalCommit": "7514e428b9741a32d6875389bcf17c8897503fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE3NzY2MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1720#discussion_r469177661", "bodyText": "folderWithScripts.listFiles() might be null\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    File[] foundFiles = Arrays.asList(folderWithScripts.listFiles()).stream().filter(scriptFilter.build()).toArray(File[]::new);\n          \n          \n            \n                    File[] foundFiles = Arrays.stream(Objects.requireNonNull(folderWithScripts.listFiles())).filter(scriptFilter.build()).toArray(File[]::new);", "author": "afalhambra", "createdAt": "2020-08-12T11:01:06Z", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/util/TestsUtil.java", "diffHunk": "@@ -53,14 +52,8 @@\n             logger.warn(\"Folder with DDLs doesn't exist {}\", folderWithDDLs);\n             return new File[0];\n         }\n-        \n-        Predicate<File> filterExtension = file -> file.getName().toLowerCase().endsWith(\".sql\");\n-        Predicate<File> filterSpringboot = file -> file.getName().toLowerCase().contains(\"springboot\");\n-        Predicate<File> filterName = file -> file.getName().contains(\"drop\");\n-        Predicate<File> filter = filterExtension.and((!scriptFilter.isCreate()) ? filterName : filterName.negate())\n-                                                .and((scriptFilter.isSpringboot()) ? filterSpringboot : filterSpringboot.negate());\n-        \n-        File[] foundFiles = Arrays.asList(folderWithScripts.listFiles()).stream().filter(filter).toArray(File[]::new);\n+\n+        File[] foundFiles = Arrays.asList(folderWithScripts.listFiles()).stream().filter(scriptFilter.build()).toArray(File[]::new);", "originalCommit": "7514e428b9741a32d6875389bcf17c8897503fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}