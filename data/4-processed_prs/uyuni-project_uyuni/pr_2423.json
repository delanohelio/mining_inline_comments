{"pr_number": 2423, "pr_title": "Resynchronize all branches", "pr_createdAt": "2020-07-16T20:40:13Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2423", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456264506", "bodyText": "centos or centos ssh in the title scenario?", "author": "srbarrios", "createdAt": "2020-07-17T07:21:22Z", "path": "testsuite/features/secondary/allcli_reboot.feature", "diffHunk": "@@ -37,19 +37,16 @@ Feature: Reboot systems managed by SUSE Manager\n     And I run \"rhn_check -vvv\" on \"sle_client\"\n     Then I wait and check that \"sle_client\" has rebooted\n \n-# WORKAROUND\n-#    This scenario is disabled as long as we have failures during CentOS reboots\n-#\n-#@centos_minion\n-#  Scenario: Reboot the CentOS minion and wait until reboot is completed\n-#    Given I am on the Systems overview page of this \"ceos_ssh_minion\"\n-#    When I follow first \"Schedule System Reboot\"\n-#    Then I should see a \"System Reboot Confirmation\" text\n-#    And I should see a \"Reboot system\" button\n-#    When I click on \"Reboot system\"\n-#    Then I should see a \"Reboot scheduled for system\" text\n-#    When I wait at most 600 seconds until event \"System reboot scheduled by admin\" is completed\n-#    Then I should see a \"Reboot completed.\" text\n+@centos_minion\n+  Scenario: Reboot the CentOS minion and wait until reboot is completed\n+    Given I am on the Systems overview page of this \"ceos_ssh_minion\"", "originalCommit": "e5e74a07895d818c22ed4169248818492764b12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NDM0OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456274348", "bodyText": "Our centos minion, like the ubuntu minion, is always accessed via SSH. The scenario name is a bit vague I agree, but I think we do the same at many other places.", "author": "Bischoff", "createdAt": "2020-07-17T07:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MTMwNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456281305", "bodyText": "After verification, you are right and I am wrong. I will fix it.", "author": "Bischoff", "createdAt": "2020-07-17T07:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MTczNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456281736", "bodyText": "Should we then reflect that in the title?", "author": "srbarrios", "createdAt": "2020-07-17T07:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4ODcxNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456288716", "bodyText": "I just said I will fix it :troll:", "author": "Bischoff", "createdAt": "2020-07-17T08:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMDE3Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456300177", "bodyText": "Done", "author": "Bischoff", "createdAt": "2020-07-17T08:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMjgyMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456302821", "bodyText": "haha sorry, GitHub doesn't seem to update fast enough", "author": "srbarrios", "createdAt": "2020-07-17T08:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NDUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NTQxNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456265414", "bodyText": "Not sure about it, but here again the mahine is called by centos_ssh_minion but the scenario says Centos minion", "author": "srbarrios", "createdAt": "2020-07-17T07:23:30Z", "path": "testsuite/features/secondary/allcli_software_channels.feature", "diffHunk": "@@ -136,7 +136,7 @@ Feature: Chanel subscription via SSM\n     And channel \"Test Child Channel\" should be enabled on \"sle_client\"\n \n @centos_minion\n-  Scenario: System default channel can't be determined\n+  Scenario: System default channel can't be determined on the CentOS minion", "originalCommit": "e5e74a07895d818c22ed4169248818492764b12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NjgzMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456276831", "bodyText": "Right (see above).\nAs a side note: we might revert the decision to access CentOS and Ubuntu via SSH some day. The reason for moving to salt-ssh was that it was unsufficiently tested at the time. But now it is correctly tested, so it could be a good idea to shake the tree and revert to normal minions. What do you think?", "author": "Bischoff", "createdAt": "2020-07-17T07:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MzQzNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456283437", "bodyText": "Ideally, I would use Salt minions as a default. SSH minions use to have fewer problems, as in the end, the server does more guided stuff in the client by connecting through ssh. So, yeah, maybe better have again salt minions.\nAnyhow, I would reflect the kind of protocol we use in the title.", "author": "srbarrios", "createdAt": "2020-07-17T08:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4ODM0OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456288348", "bodyText": "Absolutely. I'll start an email thread as announced so everyone is fully aware of that change, but I think that's what we should do. In the meantime i'll do as you suggested and reflect the protocol in the title.", "author": "Bischoff", "createdAt": "2020-07-17T08:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMjQwNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456302407", "bodyText": "Done.", "author": "Bischoff", "createdAt": "2020-07-17T08:36:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2NTQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MzcwMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456273702", "bodyText": "What do you think about the filename? Should the filename reflect the VM we are using to run that test? Or should the filename reflect what the feature title is about? \ud83e\udd14", "author": "srbarrios", "createdAt": "2020-07-17T07:41:02Z", "path": "testsuite/features/secondary/min_change_software_channel.feature", "diffHunk": "@@ -1,10 +1,10 @@\n # Copyright (c) 2020 SUSE LLC\n # Licensed under the terms of the MIT license.\n \n-Feature: Assign child channel to system\n+Feature: Assign child channel to a system", "originalCommit": "e5e74a07895d818c22ed4169248818492764b12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NzIxNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456277216", "bodyText": "The VM, definitely. Using \"a system\" is just a trick to avoid duplicate scenario names.", "author": "Bischoff", "createdAt": "2020-07-17T07:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MzcwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NjYyNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456276625", "bodyText": "Off-topic:\nI wouldn't assume that monitoring is enabled via sumaform, instead, I would start with a scenario enabling monitoring, and then another scenario disabling it. What do you think guys?\nIf make sense for you, we might plan it in a card as tech-debt", "author": "srbarrios", "createdAt": "2020-07-17T07:46:54Z", "path": "testsuite/features/secondary/srv_monitoring.feature", "diffHunk": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2019 SUSE LLC\n+# Copyright (c) 2019-2020 SUSE LLC\n # Licensed under the terms of the MIT license.", "originalCommit": "e5e74a07895d818c22ed4169248818492764b12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3ODkwMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456278903", "bodyText": "The real problem is that this feature is not idempotent, and you will not solve that by splitting it. Also we already have enough features, let's not add more.\nOkay for a QA debt card, but it should be \"make that feature idempotent\", not \"split that feature\".\nMore important, that feature does not really test monitoring, it just plays with options. We need a real monitoring feature, where we really inspect monitoring data of client VMs. But that is another story.", "author": "Bischoff", "createdAt": "2020-07-17T07:51:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NjYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4NTMxOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456285319", "bodyText": "I didn't mention splitting the feature.\nJust to reverse the order of the scenarios, first enable, then disable, and not let sumaform the work of the pre-condition, enabling the monitoring.\nBut yes, sure, this is a QA Debt card, nothing really important.", "author": "srbarrios", "createdAt": "2020-07-17T08:04:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NjYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5MDA4OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456290089", "bodyText": "ah, sorry, I misread.\nIf you change the order you might still have an idempotency problem, depending on current statuse of monitoring, even if we remove that in sumaform.\nImagine for example that test execution aborts in the middle of one of these series of scenarios.", "author": "Bischoff", "createdAt": "2020-07-17T08:13:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NjYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMxMTQwNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456311405", "bodyText": "SUSE/spacewalk#11967", "author": "srbarrios", "createdAt": "2020-07-17T08:53:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NjYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MDY4Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456280683", "bodyText": "Off-topic:\n    And I should see a list item with text \"System\" and bullet with style \"fa-check text-success\"\n    And I should see a list item with text \"PostgreSQL database\" and bullet with style \"fa-check text-success\"\n    And I should see a list item with text \"Server self monitoring\" and bullet with style \"fa-hand-o-right text-success\"\n    And I should see a list item with text \"Taskomatic (Java JMX)\" and bullet with style \"fa-hand-o-right text-success\"\n    And I should see a list item with text \"Tomcat (Java JMX)\" and bullet with style \"fa-hand-o-right text-success\"\n\nIt might be good to change, as we did in other steps, the with style \"xxxxx\"  by some more natural language", "author": "srbarrios", "createdAt": "2020-07-17T07:55:00Z", "path": "testsuite/features/secondary/srv_monitoring.feature", "diffHunk": "@@ -21,7 +21,7 @@ Feature: Enable and disable monitoring of the server\n     And file \"/etc/sysconfig/tomcat\" should not contain \"Dcom.sun.management.jmxremote.port=3333 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=\" on server\n     And file \"/etc/rhn/taskomatic.conf\" should not contain \"Dcom.sun.management.jmxremote.port=3334 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=\" on server\n \n-  Scenario: Restart spacewalk services to apply monitoring config changes\n+  Scenario: Restart spacewalk services to apply config changes after disabling monitoring\n     When I restart the spacewalk service\n \n   Scenario: Check that monitoring is disabled using the UI", "originalCommit": "e5e74a07895d818c22ed4169248818492764b12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MjM1NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456282354", "bodyText": "Oh yes!!!! +10000 !!!! That's worth a card.", "author": "Bischoff", "createdAt": "2020-07-17T07:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MDY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNjc5NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2423#discussion_r456306794", "bodyText": "SUSE/spacewalk#11966", "author": "srbarrios", "createdAt": "2020-07-17T08:44:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI4MDY4Mw=="}], "type": "inlineReview"}, {"oid": "d5bd803181cc8a6c36c67b87b47fde16793b6a81", "url": "https://github.com/uyuni-project/uyuni/commit/d5bd803181cc8a6c36c67b87b47fde16793b6a81", "message": "Resynchronize all branches", "committedDate": "2020-07-17T08:30:25Z", "type": "commit"}]}