{"pr_number": 3062, "pr_title": "Change Select component to use react-select", "pr_createdAt": "2020-12-30T15:58:11Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/3062", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551203368", "bodyText": "Would recommend import ReactSelect from 'react-select'; instead unless there's a specific reason for importing this way here?", "author": "Etheryte", "createdAt": "2021-01-04T09:33:20Z", "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import { default as ReactSelect } from 'react-select';", "originalCommit": "a5f920c40c2a40be25aacc3fa82686115795a8f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwOTMyMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551209321", "bodyText": "The real thing to import is named Select and that would conflict with the name of the component that is exported in this JS module... The regular import is import Select from 'react-select'; but maybe I'm overlooking something.", "author": "cbosdo", "createdAt": "2021-01-04T09:44:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxNDE1Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551214156", "bodyText": "Unless we have a linter rule that disallows it, importing the default export is already an alias, even without as. To shortly elaborate, all of these should be equivalent:\nimport Foo from 'somewhere';\nconst Bar = Foo;\n\nimport { default as Bar } from 'somewhere';\n\nimport Bar from 'somewhere';\nThe main benefit of aliasing imports with as is when you want to rename named exports:\nimport { tea as coffee } from 'somewhere';", "author": "Etheryte", "createdAt": "2021-01-04T09:53:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1MzE5NA==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551453194", "bodyText": "addressed", "author": "cbosdo", "createdAt": "2021-01-04T17:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwMzM2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNjg4Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551206887", "bodyText": "I think this could be simplified a bit, right now we loop over options twice. Perhaps something along these lines?\nconst convertedOptions = (options || []).map(item => typeof item === 'string' ? { label: item, value: item } : item);\nUnless there's an additional edge case I missed here and options can also be something that isn't an array at all?", "author": "Etheryte", "createdAt": "2021-01-04T09:39:46Z", "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -36,32 +47,49 @@ type Props = {\n export function Select(props: Props) {\n   const {\n     inputClass,\n-    children,\n+    options,\n+    getOptionLabel,\n+    getOptionValue,\n+    formatOptionLabel,\n+    placeholder,\n+    isClearable,\n     ...propsToPass\n   } = props;\n   const formContext = React.useContext(FormContext);\n+  const convertedOptions = options instanceof Array && options.every(item => !(item instanceof Object)) ?", "originalCommit": "a5f920c40c2a40be25aacc3fa82686115795a8f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxMDM1MA==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551210350", "bodyText": "indeed", "author": "cbosdo", "createdAt": "2021-01-04T09:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNjg4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1MzQwMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551453401", "bodyText": "done", "author": "cbosdo", "createdAt": "2021-01-04T17:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNjg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNzcxMg==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551207712", "bodyText": "I suspect nullable options would be a common use case (correct me if I'm wrong here?), in which case it could be useful to move this into the select component and handle it centrally there.", "author": "Etheryte", "createdAt": "2021-01-04T09:41:19Z", "path": "web/html/src/manager/content-management/shared/components/panels/environment-lifecycle/environment-form.js", "diffHunk": "@@ -54,17 +54,12 @@ const EnvironmentForm = (props: Props) =>\n             name=\"predecessorLabel\"\n             label={t(\"Insert before\")}\n             labelClass=\"col-md-3\"\n-            divClass=\"col-md-8\">\n-            <option\n-              key={\"predecessorLabelEmpty\"}/>\n-            {props.environments && props.environments.map(env =>\n-              <option\n-                key={env.label}\n-                value={env.label}>\n-                {env.name}\n-              </option>\n-            )}\n-          </Select>\n+            divClass=\"col-md-8\"\n+            isClearable\n+            options={props.environments}\n+            getOptionValue={option => option != null ? option.label : null}", "originalCommit": "a5f920c40c2a40be25aacc3fa82686115795a8f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxMDU0MQ==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551210541", "bodyText": "I'll have a look at that then, thanks for the suggestion", "author": "cbosdo", "createdAt": "2021-01-04T09:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNzcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1MzI5NA==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551453294", "bodyText": "done", "author": "cbosdo", "createdAt": "2021-01-04T17:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwNzcxMg=="}], "type": "inlineReview"}, {"oid": "69ca7f017c32e8f16b6a461fb2cd2f1c6dd728c1", "url": "https://github.com/uyuni-project/uyuni/commit/69ca7f017c32e8f16b6a461fb2cd2f1c6dd728c1", "message": "testsuite: handle both regular and react select in steps\n\nSince the react-select component is gradually taking over the regular\nHTML select elements, handle both cases in the step to avoid touching\nevery use of it in the features.", "committedDate": "2021-01-04T16:53:27Z", "type": "forcePushed"}, {"oid": "00998d2cead7b308b907100ab9b67f61b42a8ee6", "url": "https://github.com/uyuni-project/uyuni/commit/00998d2cead7b308b907100ab9b67f61b42a8ee6", "message": "fixup! Change Select component to use react-select", "committedDate": "2021-01-04T17:16:15Z", "type": "forcePushed"}, {"oid": "1311f79459bb6efbd45f0f71485f9c76f6a8a521", "url": "https://github.com/uyuni-project/uyuni/commit/1311f79459bb6efbd45f0f71485f9c76f6a8a521", "message": "fixup! testsuite: handle both regular and react select in steps", "committedDate": "2021-01-05T10:25:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5NDEwMg==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551894102", "bodyText": "IIUC, it's allowed to have strings in options. Maybe define it as something like:\ntype OptionType = {\n  value: number | string,\n  label: string\n}\n\nand then in type Props:\noptions: Array<OptionType | string>", "author": "cbbayburt", "createdAt": "2021-01-05T12:11:34Z", "path": "web/html/src/components/input/Select.js", "diffHunk": "@@ -1,12 +1,23 @@\n // @flow\n \n import * as React from 'react';\n+import ReactSelect from 'react-select';\n import { InputBase } from './InputBase';\n import { FormContext } from './Form';\n \n type Props = {\n-  /** <option> elements to display */\n-  children: React.Node,\n+  /** Select options */\n+  options: Array<Object>,", "originalCommit": "1311f79459bb6efbd45f0f71485f9c76f6a8a521", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY2ODcwNg==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r552668706", "bodyText": "well, OptionType wouldn't fly since you can have any object as long as you set the getOptionValue and getOptionLabel properties. but options: Array<Object | string> yes", "author": "cbosdo", "createdAt": "2021-01-06T14:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5NDEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551896897", "bodyText": "When used directly, this won't have the added styling. Would this be a problem?", "author": "cbbayburt", "createdAt": "2021-01-05T12:17:45Z", "path": "web/html/src/manager/images/image-profile-edit.js", "diffHunk": "@@ -351,15 +341,12 @@ class CreateImageProfile extends React.Component {\n     const select = <FormGroup>\n       <Label className=\"col-md-3\" name={t(\"Custom Info Values\")}/>\n       <div className=\"col-md-6\">\n-        <select value=\"\" onChange={(e) => this.addCustomData(e.target.value)}\n-          className=\"form-control\">\n-          <option key=\"0\" value=\"\" disabled=\"disabled\">{t(\"Select a custom info key\")}</option>\n-          {\n+        <ReactSelect value=\"\" onChange={({value}) => this.addCustomData(value)}", "originalCommit": "1311f79459bb6efbd45f0f71485f9c76f6a8a521", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MjI4Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r551942286", "bodyText": "what do you mean? the added zIndex style on the menu? would be impacting only in some cases depending on the components that are right below the Select. I had to add the zIndex to higher than 2 otherwise the menu could be hidden by a date picker.", "author": "cbosdo", "createdAt": "2021-01-05T13:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyMjAwMA==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r552022000", "bodyText": "Yes, that one, and maybe more stuff in the future. IIUC, you use it directly to avoid the model handling, am I right?", "author": "cbbayburt", "createdAt": "2021-01-05T15:55:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAyMzQxMA==", "url": "https://github.com/uyuni-project/uyuni/pull/3062#discussion_r552023410", "bodyText": "yes, and because that one replaces a standard <select>, not our component", "author": "cbosdo", "createdAt": "2021-01-05T15:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5Njg5Nw=="}], "type": "inlineReview"}, {"oid": "8f222a830d6d6c1dfb61368f1a8c58e2e466c74a", "url": "https://github.com/uyuni-project/uyuni/commit/8f222a830d6d6c1dfb61368f1a8c58e2e466c74a", "message": "Merge the Combo input component into Select", "committedDate": "2021-01-06T16:02:42Z", "type": "forcePushed"}, {"oid": "12fa2bcf1deae73da88d68fdab8fd66dd8a1c6da", "url": "https://github.com/uyuni-project/uyuni/commit/12fa2bcf1deae73da88d68fdab8fd66dd8a1c6da", "message": "Change Select component to use react-select\n\nIn order to start unifying the various select implementation, use\nreact-select as the Select component implementation.\n\nThis involves some API changes since the options can no longer be\nchildren, but a property. Also exposing some of the more advanced\nreact-select properties.", "committedDate": "2021-01-06T16:03:47Z", "type": "commit"}, {"oid": "5c8b8286bfa94719c96ab7ebd540b05562209604", "url": "https://github.com/uyuni-project/uyuni/commit/5c8b8286bfa94719c96ab7ebd540b05562209604", "message": "testsuite: handle both regular and react select in steps\n\nSince the react-select component is gradually taking over the regular\nHTML select elements, handle both cases in the step to avoid touching\nevery use of it in the features.", "committedDate": "2021-01-06T16:03:47Z", "type": "commit"}, {"oid": "5864b8ccb8689be239a9716cfe0b3aad683ef131", "url": "https://github.com/uyuni-project/uyuni/commit/5864b8ccb8689be239a9716cfe0b3aad683ef131", "message": "yarn build missing update\n\nCommit missing yarn.lock update after yarn build run.", "committedDate": "2021-01-06T16:03:47Z", "type": "commit"}, {"oid": "372f594acf2d4155c55f61f3eb0b8d1bbf7784d8", "url": "https://github.com/uyuni-project/uyuni/commit/372f594acf2d4155c55f61f3eb0b8d1bbf7784d8", "message": "Merge the Combo input component into Select", "committedDate": "2021-01-06T16:03:47Z", "type": "commit"}, {"oid": "372f594acf2d4155c55f61f3eb0b8d1bbf7784d8", "url": "https://github.com/uyuni-project/uyuni/commit/372f594acf2d4155c55f61f3eb0b8d1bbf7784d8", "message": "Merge the Combo input component into Select", "committedDate": "2021-01-06T16:03:47Z", "type": "forcePushed"}]}