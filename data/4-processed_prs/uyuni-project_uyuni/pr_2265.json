{"pr_number": 2265, "pr_title": "Implement selecting maintenance windows in Struts actions", "pr_createdAt": "2020-05-28T09:18:32Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2265", "timeline": [{"oid": "9f3c145e21f8e8390f596f964be5136b7c5e6210", "url": "https://github.com/uyuni-project/uyuni/commit/9f3c145e21f8e8390f596f964be5136b7c5e6210", "message": "IMPORTANT: MOIO: Create the ServerAction after setting its parameters\n\nThis is because of the dat check in the ServerAction assignment.", "committedDate": "2020-05-28T09:25:15Z", "type": "forcePushed"}, {"oid": "6aa1371a725f43e016405fd94745fa404fefdfac", "url": "https://github.com/uyuni-project/uyuni/commit/6aa1371a725f43e016405fd94745fa404fefdfac", "message": "IMPORTANT: MOIO: Create the ServerAction after setting its parameters\n\nThis is because of the dat check in the ServerAction assignment.", "committedDate": "2020-05-28T09:26:23Z", "type": "forcePushed"}, {"oid": "ac983745d9b90ad50d10b91e21b9984eb1fcc037", "url": "https://github.com/uyuni-project/uyuni/commit/ac983745d9b90ad50d10b91e21b9984eb1fcc037", "message": "IMPORTANT: MOIO: Create the ServerAction after setting its parameters\n\nThis is because of the dat check in the ServerAction assignment.", "committedDate": "2020-05-28T09:27:08Z", "type": "forcePushed"}, {"oid": "e6bcf6b988a88daca8d4eb461e48235035cbac4d", "url": "https://github.com/uyuni-project/uyuni/commit/e6bcf6b988a88daca8d4eb461e48235035cbac4d", "message": "Changelog", "committedDate": "2020-05-28T09:29:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwODE3OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r431808179", "bodyText": "empty() is not correct here, right? You need to check if schedules has a multi calendar and if yes, pass the schedule name to it.", "author": "mcalmer", "createdAt": "2020-05-28T12:47:56Z", "path": "java/code/src/com/suse/manager/maintenance/MaintenanceManager.java", "diffHunk": "@@ -96,6 +106,101 @@ public static MaintenanceManager instance() {\n         return instance;\n     }\n \n+    /**\n+     * Given the systems and action type, return upcoming maintenance windows.\n+     *\n+     * The upper limit of returned maintenance windows is currently hardcoded to 10.\n+     *\n+     * If given action type is not maintenance-mode-only, return an empty optional.\n+     * If given systems do not have any maint. <b>schedules</b> assigned, return an empty optional.\n+     * If given systems have different maint. schedules assigned, throw an exception.\n+     * Otherwise return list of maintenance windows (the list can be empty, if the schedule does not contain\n+     * any upcoming maintenance windows).\n+     *\n+     * @param actionType the action type\n+     * @param systemIds the system ids\n+     * @return the optional upcoming maintenance windows\n+     * @throws IllegalStateException if two or more systems have different maint. schedules assigned\n+     */\n+    public Optional<List<Triple<String, String, Long>>> calculateUpcomingMaintenanceWindows(ActionType actionType,\n+            Set<Long> systemIds) throws IllegalStateException {\n+        // non-maintenance mode only don't use maint. windows\n+        if (!actionType.isMaintenancemodeOnly()) {\n+            return empty();\n+        }\n+\n+        Set<MaintenanceSchedule> schedules = MaintenanceManager.instance().listSchedulesOfSystems(systemIds);\n+        // if there are no schedules, we don't populate any windows (and display an empty list instead)\n+        if (schedules.isEmpty()) {\n+            return empty();\n+        }\n+\n+        // there are multiple schedules, we warn the user about it\n+        if (schedules.size() > 1) {\n+            throw new IllegalStateException(\"Multiple schedules\");\n+        }\n+\n+        PeriodList periods = schedules.iterator().next().getCalendarOpt()\n+                .flatMap(c -> parseCalendar(c))\n+                .map(c -> calculateUpcomingPeriodList(c, empty(), new Date(), 10))", "originalCommit": "e6bcf6b988a88daca8d4eb461e48235035cbac4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzNTY5MQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r435035691", "bodyText": "Good catch! This overflowed here from the prototype somehow :)", "author": "hustodemon", "createdAt": "2020-06-04T07:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwODE3OQ=="}], "type": "inlineReview"}, {"oid": "e1faf0956bc32f12565855fe9940575c81feaa24", "url": "https://github.com/uyuni-project/uyuni/commit/e1faf0956bc32f12565855fe9940575c81feaa24", "message": "Changelog", "committedDate": "2020-05-28T14:29:53Z", "type": "forcePushed"}, {"oid": "c2031ba6464015309325d48797d3578c9bc263ce", "url": "https://github.com/uyuni-project/uyuni/commit/c2031ba6464015309325d48797d3578c9bc263ce", "message": "Changelog", "committedDate": "2020-05-29T13:08:37Z", "type": "forcePushed"}, {"oid": "ebf28b022205627da12df4c1123fb1a02edf1052", "url": "https://github.com/uyuni-project/uyuni/commit/ebf28b022205627da12df4c1123fb1a02edf1052", "message": "Test computing upcoming windows from a calendar with multiple timezones", "committedDate": "2020-06-08T10:34:51Z", "type": "forcePushed"}, {"oid": "9967f32a5838e488657eb706a55d68da390c106b", "url": "https://github.com/uyuni-project/uyuni/commit/9967f32a5838e488657eb706a55d68da390c106b", "message": "Test computing upcoming windows from a calendar with multiple timezones", "committedDate": "2020-06-08T10:42:42Z", "type": "forcePushed"}, {"oid": "f18415381bd7c8d85ec2396e9c23b0b0d4097950", "url": "https://github.com/uyuni-project/uyuni/commit/f18415381bd7c8d85ec2396e9c23b0b0d4097950", "message": "Test computing upcoming windows from a calendar with multiple timezones", "committedDate": "2020-06-08T10:44:50Z", "type": "forcePushed"}, {"oid": "0bbdfb4758399228fb303c6b6155750f09fe20be", "url": "https://github.com/uyuni-project/uyuni/commit/0bbdfb4758399228fb303c6b6155750f09fe20be", "message": "Fix checkstyle violations", "committedDate": "2020-06-08T15:50:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDk3Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r436824972", "bodyText": "Note for the reviewer: I made the original class abstract and split the actual implementation into 2 concrete classes (above) since struts action using this class resulted in 2 different backend actions (diff or deploy).", "author": "hustodemon", "createdAt": "2020-06-08T16:10:26Z", "path": "java/code/src/com/redhat/rhn/frontend/action/configuration/sdc/FileListConfirmSetupAction.java", "diffHunk": "@@ -30,13 +31,14 @@\n import org.apache.struts.action.DynaActionForm;\n \n import java.util.List;\n+import java.util.Set;\n \n \n /**\n  * FileListConfirmSetupAction, for sdc configuration\n  * @version $Rev$\n  */\n-public class FileListConfirmSetupAction extends BaseListAction {\n+public abstract class FileListConfirmSetupAction extends BaseListAction implements MaintenanceWindowsAware {", "originalCommit": "07c89f10ba04a1072a5ca13be9e3091878fc66d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "91e8ed0561d7be270ff0ffdb2d0b3768bb1ca2d0", "url": "https://github.com/uyuni-project/uyuni/commit/91e8ed0561d7be270ff0ffdb2d0b3768bb1ca2d0", "message": "Backend: Method for calculating upcoming maintenance windows", "committedDate": "2020-06-08T16:18:50Z", "type": "commit"}, {"oid": "ed6470ae94f4b2bb6fdabc74a309163c1f493b1c", "url": "https://github.com/uyuni-project/uyuni/commit/ed6470ae94f4b2bb6fdabc74a309163c1f493b1c", "message": "Test computing upcoming windows from a calendar with multiple timezones", "committedDate": "2020-06-08T16:18:50Z", "type": "commit"}, {"oid": "d27bf7c7ab246c773059619a6441138e1e56ffb0", "url": "https://github.com/uyuni-project/uyuni/commit/d27bf7c7ab246c773059619a6441138e1e56ffb0", "message": "Struts: Refactor: USE_DATE -> SCHEDULE_TYPE field in the form\n\nThis will allow support of multiple action schedule selectors (not just\ndate picker and action chains).", "committedDate": "2020-06-08T16:18:50Z", "type": "commit"}, {"oid": "9cf07cb8248f9d04a24fbf71ad568e2d9148350e", "url": "https://github.com/uyuni-project/uyuni/commit/9cf07cb8248f9d04a24fbf71ad568e2d9148350e", "message": "JSP: Support for greying out date picker # Bitte geben Sie eine Commit-Beschreibung f\u00fcr Ihre \u00c4nderungen ein. Zeilen,", "committedDate": "2020-06-08T16:18:50Z", "type": "commit"}, {"oid": "1e0e3c99a9cfb6bd89561ee3b1973778d8c5aa11", "url": "https://github.com/uyuni-project/uyuni/commit/1e0e3c99a9cfb6bd89561ee3b1973778d8c5aa11", "message": "JSP: Implement maintenance window picker", "committedDate": "2020-06-08T16:18:50Z", "type": "commit"}, {"oid": "0295573dea49b8654f700a22a0debe2d5a6cbe82", "url": "https://github.com/uyuni-project/uyuni/commit/0295573dea49b8654f700a22a0debe2d5a6cbe82", "message": "Struts: Support reading maint. window date from the dynaForm", "committedDate": "2020-06-08T16:18:50Z", "type": "commit"}, {"oid": "e545294be42ac1f576779ff298a4df7753157beb", "url": "https://github.com/uyuni-project/uyuni/commit/e545294be42ac1f576779ff298a4df7753157beb", "message": "Struts: Support maintenance windows in Actions [1/2]: Populate the maintenance window picker", "committedDate": "2020-06-08T16:18:51Z", "type": "commit"}, {"oid": "c05acba712e454dcc3f7ae71982120b2924b8a7b", "url": "https://github.com/uyuni-project/uyuni/commit/c05acba712e454dcc3f7ae71982120b2924b8a7b", "message": "Struts: Support maintenance windows in Actions [2/2]: Read schedule date from maintenance window picker", "committedDate": "2020-06-08T16:18:51Z", "type": "commit"}, {"oid": "46bf7cce4feefb30689b7780fa75512ec3d32deb", "url": "https://github.com/uyuni-project/uyuni/commit/46bf7cce4feefb30689b7780fa75512ec3d32deb", "message": "Struts: Support maintenance windows for action chains", "committedDate": "2020-06-08T16:18:51Z", "type": "commit"}, {"oid": "7bb1bdcb71b8ab8a9b8876f74f7214244b454903", "url": "https://github.com/uyuni-project/uyuni/commit/7bb1bdcb71b8ab8a9b8876f74f7214244b454903", "message": "Localization", "committedDate": "2020-06-08T16:18:51Z", "type": "commit"}, {"oid": "5891e963a80c4391944fa05ef594d4a93929a12a", "url": "https://github.com/uyuni-project/uyuni/commit/5891e963a80c4391944fa05ef594d4a93929a12a", "message": "Fix checkstyle violations", "committedDate": "2020-06-08T16:18:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0NjMwMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437346301", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String formatDate(Instant instant) {\n          \n          \n            \n                    Context ctx = Context.getCurrentContext();\n          \n          \n            \n                    Date date = Date.from(instant);\n          \n          \n            \n                    return formatDate(date, ctx.getLocale());\n          \n          \n            \n                }\n          \n          \n            \n                public String formatDate(Instant instant) {\n          \n          \n            \n                    return formatDate(Date.from(instant));\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nMaybe this?", "author": "mcalmer", "createdAt": "2020-06-09T11:47:34Z", "path": "java/code/src/com/redhat/rhn/common/localization/LocalizationService.java", "diffHunk": "@@ -393,6 +394,17 @@ public String formatDate(Date date) {\n         return formatDate(date, ctx.getLocale());\n     }\n \n+    /**\n+     * Format the instant and let the service determine the locale\n+     * @param instant the instant\n+     * @return String representation of given date.\n+     */\n+    public String formatDate(Instant instant) {\n+        Context ctx = Context.getCurrentContext();\n+        Date date = Date.from(instant);\n+        return formatDate(date, ctx.getLocale());\n+    }", "originalCommit": "91e8ed0561d7be270ff0ffdb2d0b3768bb1ca2d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTkzNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437469934", "bodyText": "Hm, that looks better, thanks!", "author": "hustodemon", "createdAt": "2020-06-09T14:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0NjMwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1Mzk3NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437353974", "bodyText": "They need to be copied over to all other language files.\nBut we can also decide to do it later on the maintenance-windows branch", "author": "mcalmer", "createdAt": "2020-06-09T12:02:10Z", "path": "java/code/src/com/redhat/rhn/frontend/strings/jsp/StringResource_en_US.xml", "diffHunk": "@@ -6157,6 +6157,15 @@ organization. You may grant or remove the organization administrator role in the\n           <context context-type=\"sourcefile\">/rhn/systems/details/packages/ScheduleRemoteCommand.do</context>\n         </context-group>\n       </trans-unit>\n+      <trans-unit id=\"schedule.jsp.maint-window\">\n+        <source>Maintenance window:</source>\n+      </trans-unit>\n+      <trans-unit id=\"schedule.jsp.multiple_maintenance_schedules\">\n+        <source>There are multiple maintenance schedules for selected systems. Make sure that systems in the set use at most 1 maintenance schedule if you want to schedule by date or maintenance window.</source>\n+      </trans-unit>\n+      <trans-unit id=\"schedule.jsp.no_maintenance_windows\">\n+        <source>No upcoming maintenance windows</source>\n+      </trans-unit>", "originalCommit": "7bb1bdcb71b8ab8a9b8876f74f7214244b454903", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTYzOA==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437469638", "bodyText": "Right, I noticed nobody does this, so I also decided not to \ud83d\ude09", "author": "hustodemon", "createdAt": "2020-06-09T14:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1Mzk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNjAzMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437426032", "bodyText": "Minor nitpick: don -> do", "author": "parlt91", "createdAt": "2020-06-09T13:41:18Z", "path": "java/code/webapp/WEB-INF/pages/common/fragments/schedule-options.jspf", "diffHunk": "@@ -1,27 +1,50 @@\n <%@ page pageEncoding=\"iso-8859-1\" contentType=\"text/html;charset=utf-8\" %>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n <%@ taglib uri=\"http://struts.apache.org/tags-bean\" prefix=\"bean\" %>\n <%@ taglib uri=\"http://rhn.redhat.com/rhn\" prefix=\"rhn\" %>\n \n <script type=\"text/javascript\" src=\"/javascript/schedule-options.js?cb=${rhn:getConfig('web.buildtimestamp')}\"></script>\n <div class=\"spacewalk-scheduler\">\n     <div class=\"form-horizontal\">\n+        <c:choose>\n+            <%-- When there are multiple schedules, we don not display date picker nor the maint. window picker --%>", "originalCommit": "1e0e3c99a9cfb6bd89561ee3b1973778d8c5aa11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4NjI4Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2265#discussion_r437486286", "bodyText": "Same typo here", "author": "parlt91", "createdAt": "2020-06-09T14:52:52Z", "path": "java/code/webapp/WEB-INF/pages/schedule/actionchain.jsp", "diffHunk": "@@ -97,31 +97,54 @@\n         <div class=\"panel-body\">\n             <form action=\"/rhn/schedule/ActionChain.do?id=${param.id}\" method=\"post\" class=\"schedule\">\n             <div class=\"form-horizontal\">\n-                <div class=\"form-group\">\n-                    <div class=\"col-sm-12\">\n-                        <p>\n-                            <bean:message key=\"actionchain.jsp.schedulesummary\"/>\n-                        </p>\n-                    </div>\n-                </div>\n-                <div class=\"form-group\">\n-                    <rhn:hidden name=\"schedule_type\" value=\"date\"/>\n-                    <html:hidden property=\"dispatch\" value=\"${rhn:localize('actionchain.jsp.saveandschedule')}\"/>\n-                    <rhn:csrf/>\n-                    <rhn:submitted/>\n-                    <div class=\"col-md-offset-3 col-md-6\">\n-                        <jsp:include page=\"/WEB-INF/pages/common/fragments/date-picker.jsp\">\n-                            <jsp:param name=\"widget\" value=\"date\"/>\n-                        </jsp:include>\n-                    </div>\n-                </div>\n-                <div class=\"form-group\">\n-                    <div class=\"col-md-offset-3 col-md-6\">\n-                        <button type=\"button\" class=\"btn btn-success\" id=\"save-and-schedule\">\n-                            <bean:message key=\"actionchain.jsp.saveandschedule\"/>\n-                        </button>\n-                    </div>\n-                </div>\n+                <html:hidden property=\"dispatch\" value=\"${rhn:localize('actionchain.jsp.saveandschedule')}\"/>\n+                <rhn:csrf/>\n+                <rhn:submitted/>\n+\n+                <c:choose>\n+                    <%-- When there are multiple schedules, we don not display date picker nor the maint. window picker --%>", "originalCommit": "46bf7cce4feefb30689b7780fa75512ec3d32deb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fd02d6367fe34941ba9a74ddfcbf55a526ef0451", "url": "https://github.com/uyuni-project/uyuni/commit/fd02d6367fe34941ba9a74ddfcbf55a526ef0451", "message": "Reload action chain editor, when dealing with maintenance windows\n\nWe want to display either date picker/maintenance windows picker/warning\nbased on the systems and scheduled actions. When the systems change\n(user clicks delete system or delete action), we want to reload the\npage, so that the picker gets refreshed.", "committedDate": "2020-06-10T06:44:43Z", "type": "forcePushed"}, {"oid": "eb51a3ef2c16bf3887458ee98efadd12cc102fc2", "url": "https://github.com/uyuni-project/uyuni/commit/eb51a3ef2c16bf3887458ee98efadd12cc102fc2", "message": "Create the ServerAction after setting its parameters\n\nThis is because of the date check in the ServerAction assignment.", "committedDate": "2020-06-10T08:16:52Z", "type": "commit"}, {"oid": "390fcf1829f139a89188e541e953bf1a8b903e75", "url": "https://github.com/uyuni-project/uyuni/commit/390fcf1829f139a89188e541e953bf1a8b903e75", "message": "Changelog", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "b8ff228e985b4d112b259c2bd5d48e0f947626cb", "url": "https://github.com/uyuni-project/uyuni/commit/b8ff228e985b4d112b259c2bd5d48e0f947626cb", "message": "Fix checkstyle violations", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "37342d04aac3da822c5d823bedf26372afe33970", "url": "https://github.com/uyuni-project/uyuni/commit/37342d04aac3da822c5d823bedf26372afe33970", "message": "Use review suggestion for formatting instant\n\nCo-authored-by: Michael Calmer <Michael.Calmer@suse.de>", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "e0ec041b98f377e620d6598ee21924f15ec46517", "url": "https://github.com/uyuni-project/uyuni/commit/e0ec041b98f377e620d6598ee21924f15ec46517", "message": "Fix typos", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "fec57bbd97fd7d0a8bf0208824a0a2205377bf47", "url": "https://github.com/uyuni-project/uyuni/commit/fec57bbd97fd7d0a8bf0208824a0a2205377bf47", "message": "Reload action chain editor, when dealing with maintenance windows\n\nWe want to display either date picker/maintenance windows picker/warning\nbased on the systems and scheduled actions. When the systems change\n(user clicks delete system or delete action), we want to reload the\npage, so that the picker gets refreshed.", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "7dafb94f7d0a9c0e5d29f992ec9c9308009a26fd", "url": "https://github.com/uyuni-project/uyuni/commit/7dafb94f7d0a9c0e5d29f992ec9c9308009a26fd", "message": "Prevent scheduling actions when there are empty maintenance windows\n\nIn this case, display a warning to the user and hide the scheduling UI.\n\nThe maintenance-window-picker.jsp could be simplified: it's displayed,\nonly if the maintenance windows are non-empty (therefore the check in it\nwas unneeded).", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "2c560b660441fde9c96f9179925240a6e4cfd667", "url": "https://github.com/uyuni-project/uyuni/commit/2c560b660441fde9c96f9179925240a6e4cfd667", "message": "Minor improvement: Maint. window caption in action chains scheduler", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "e8341c84534bfd1b2ed45ebb51e9c3e029772595", "url": "https://github.com/uyuni-project/uyuni/commit/e8341c84534bfd1b2ed45ebb51e9c3e029772595", "message": "Minor: Pre-check the maint. windows radio button when displaying the maint. windows picker", "committedDate": "2020-06-10T08:17:00Z", "type": "commit"}, {"oid": "e8341c84534bfd1b2ed45ebb51e9c3e029772595", "url": "https://github.com/uyuni-project/uyuni/commit/e8341c84534bfd1b2ed45ebb51e9c3e029772595", "message": "Minor: Pre-check the maint. windows radio button when displaying the maint. windows picker", "committedDate": "2020-06-10T08:17:00Z", "type": "forcePushed"}]}