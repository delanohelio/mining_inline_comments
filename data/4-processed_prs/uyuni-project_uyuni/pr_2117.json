{"pr_number": 2117, "pr_title": "Tool to check Uyuni versions before a release", "pr_createdAt": "2020-04-13T15:50:48Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2117", "timeline": [{"oid": "e44a4c8aceff72e44e61b07abe18c6f6ef24d0cb", "url": "https://github.com/uyuni-project/uyuni/commit/e44a4c8aceff72e44e61b07abe18c6f6ef24d0cb", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-13T15:50:43Z", "type": "forcePushed"}, {"oid": "e229b2a68f3cbe867b9c71447d3999fab971eab8", "url": "https://github.com/uyuni-project/uyuni/commit/e229b2a68f3cbe867b9c71447d3999fab971eab8", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-13T15:52:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1MjQ5OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2117#discussion_r407552499", "bodyText": "IIRC new osc versions have a new path for this file, so maybe we will need to check both.", "author": "juliogonzalez", "createdAt": "2020-04-13T15:54:28Z", "path": "rel-eng/uyuni-check-version", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/python3\n+\n+from argparse import ArgumentParser\n+from configparser import ConfigParser\n+from itertools import chain\n+from os.path import dirname, expanduser, realpath\n+from re import match\n+from sys import exit\n+import urllib.parse\n+import urllib.request\n+\n+PRJ = 'systemsmanagement:Uyuni:Master'\n+PACKAGES = ['patterns-uyuni', 'uyuni-docs_en',\n+            'release-notes-uyuni', 'release-notes-uyuni-proxy']\n+\n+\n+def webui_version(conf='%s/../web/conf/rhn_web.conf' % dirname(realpath(__file__))):\n+    config = ConfigParser()\n+    with open(conf) as f:\n+        # This is basically a hack, as our .conf file does not have sections\n+        config.read_file(chain(['[section]'], f), source=conf)\n+        return config.get('section', 'web.version.uyuni')\n+\n+\n+def obs_get_package_ver(args, project, package):\n+    url = \"%s/source/%s/%s/%s.spec\" % (args.apiurl, project, package, package)\n+    user = args.user\n+    password = args.password\n+    password_mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()\n+    password_mgr.add_password(None, url, user, password)\n+    auth_handler = urllib.request.HTTPBasicAuthHandler(password_mgr)\n+    opener = urllib.request.build_opener(auth_handler)\n+    urllib.request.install_opener(opener)\n+    req = urllib.request.Request(url=url, method='GET')\n+    resource = urllib.request.urlopen(req)\n+    charset = resource.headers.get_content_charset()\n+    if charset is None:\n+        charset = 'utf-8'\n+    for line in resource.read().decode(charset).split('\\n'):\n+        version = match('^Version:\\s*(\\S+)$', line)\n+        if version:\n+            return version.group(1)\n+\n+\n+def parse_arguments():\n+    \"\"\" Parse arguments from command line \"\"\"\n+    parser = ArgumentParser(\n+        description=\"Check if Uyuni versions are aligned at all packages before a release\")\n+    parser.add_argument(\"-u\", \"--user\", action=\"store\", dest=\"user\",\n+                        help=\"OBS Username or read from ~/.oscrc\")\n+    parser.add_argument(\"-p\", \"--password\", action=\"store\", dest=\"password\",\n+                        help=\"OBS Password or read from ~/.oscrc\")\n+    parser.add_argument(\"-a\", \"--api-url\", action=\"store\", dest=\"apiurl\",\n+                        default=\"https://api.opensuse.org\",\n+                        help=\"OBS API URL (Default: https://api.opensuse.org\")\n+    args = parser.parse_args()\n+    if not args.user or not args.password:\n+        try:\n+            creds_path = \"%s/.oscrc\" % expanduser('~')", "originalCommit": "e229b2a68f3cbe867b9c71447d3999fab971eab8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5036803afb20728d2c011c1d08d4c7dc92412863", "url": "https://github.com/uyuni-project/uyuni/commit/5036803afb20728d2c011c1d08d4c7dc92412863", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-14T12:46:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MTUyMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2117#discussion_r411441522", "bodyText": "I would use a different name for the variable to not overwrite the webui_version function.", "author": "meaksh", "createdAt": "2020-04-20T14:50:27Z", "path": "rel-eng/uyuni-check-version", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/python3\n+\n+from argparse import ArgumentParser\n+from configparser import ConfigParser\n+from itertools import chain\n+from os.path import dirname, expanduser, realpath\n+from re import match\n+from sys import exit\n+import urllib.parse\n+import urllib.request\n+\n+PRJ = 'systemsmanagement:Uyuni:Master'\n+PACKAGES = ['patterns-uyuni', 'uyuni-docs_en',\n+            'release-notes-uyuni', 'release-notes-uyuni-proxy']\n+\n+\n+def webui_version(conf='%s/../web/conf/rhn_web.conf' % dirname(realpath(__file__))):\n+    config = ConfigParser()\n+    with open(conf) as f:\n+        # This is basically a hack, as our .conf file does not have sections\n+        config.read_file(chain(['[section]'], f), source=conf)\n+        return config.get('section', 'web.version.uyuni')\n+\n+\n+def obs_get_package_ver(args, project, package):\n+    url = \"%s/source/%s/%s/%s.spec\" % (args.apiurl, project, package, package)\n+    user = args.user\n+    password = args.password\n+    password_mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()\n+    password_mgr.add_password(None, url, user, password)\n+    auth_handler = urllib.request.HTTPBasicAuthHandler(password_mgr)\n+    opener = urllib.request.build_opener(auth_handler)\n+    urllib.request.install_opener(opener)\n+    req = urllib.request.Request(url=url, method='GET')\n+    resource = urllib.request.urlopen(req)\n+    charset = resource.headers.get_content_charset()\n+    if charset is None:\n+        charset = 'utf-8'\n+    for line in resource.read().decode(charset).split('\\n'):\n+        version = match('^Version:\\s*(\\S+)$', line)\n+        if version:\n+            return version.group(1)\n+\n+\n+def parse_arguments():\n+    \"\"\" Parse arguments from command line \"\"\"\n+    parser = ArgumentParser(\n+        description=\"Check if Uyuni versions are aligned at all packages before a release\")\n+    parser.add_argument(\"-u\", \"--user\", action=\"store\", dest=\"user\",\n+                        help=\"OBS Username or read from ~/.oscrc\")\n+    parser.add_argument(\"-p\", \"--password\", action=\"store\", dest=\"password\",\n+                        help=\"OBS Password or read from ~/.oscrc\")\n+    parser.add_argument(\"-a\", \"--api-url\", action=\"store\", dest=\"apiurl\",\n+                        default=\"https://api.opensuse.org\",\n+                        help=\"OBS API URL (Default: https://api.opensuse.org\")\n+    args = parser.parse_args()\n+    if not args.user or not args.password:\n+        try:\n+            creds_path = \"%s/.oscrc\" % expanduser('~')\n+            creds = ConfigParser()\n+            creds.read(creds_path)\n+            args.user = creds.get(args.apiurl, 'user')\n+            args.password = creds.get(args.apiurl, 'pass')\n+        except Exception:\n+            raise RuntimeError(\n+                'Could not find credentials for %s at %s' % (args.apiurl, creds_path))\n+    return args\n+\n+\n+def print_info(msg):\n+    print(\"[\\033[01m\\033[34mINFO \\033[0m] %s\" % msg)\n+\n+\n+def print_ok(msg):\n+    print(\"[\\033[01m\\033[32mOK   \\033[0m] %s\" % msg)\n+\n+\n+def print_error(msg):\n+    print(\"[\\033[01m\\033[31mERROR\\033[0m] %s\" % msg)\n+\n+\n+args = parse_arguments()\n+webui_version = webui_version()", "originalCommit": "5036803afb20728d2c011c1d08d4c7dc92412863", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ1MTk5OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2117#discussion_r411451998", "bodyText": "I changed the function to get_webui_version.", "author": "juliogonzalez", "createdAt": "2020-04-20T15:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MTUyMg=="}], "type": "inlineReview"}, {"oid": "d2f85356ae88d17ede1e49a19935f17d7a14d038", "url": "https://github.com/uyuni-project/uyuni/commit/d2f85356ae88d17ede1e49a19935f17d7a14d038", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:03:05Z", "type": "forcePushed"}, {"oid": "2efe510f7ab70cd49144ab8a605fc3c5810dbdf2", "url": "https://github.com/uyuni-project/uyuni/commit/2efe510f7ab70cd49144ab8a605fc3c5810dbdf2", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:20:41Z", "type": "forcePushed"}, {"oid": "a74ebdcc69c0efafa8e04c7190e83494550dcbca", "url": "https://github.com/uyuni-project/uyuni/commit/a74ebdcc69c0efafa8e04c7190e83494550dcbca", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:20:56Z", "type": "forcePushed"}, {"oid": "d5502f922ed22de44e34c6c78b7dd9e6d8ebe871", "url": "https://github.com/uyuni-project/uyuni/commit/d5502f922ed22de44e34c6c78b7dd9e6d8ebe871", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:22:59Z", "type": "forcePushed"}, {"oid": "7e2332e9419d5fce5d1a65fe6b23abf5c8bfd1e1", "url": "https://github.com/uyuni-project/uyuni/commit/7e2332e9419d5fce5d1a65fe6b23abf5c8bfd1e1", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:34:07Z", "type": "forcePushed"}, {"oid": "0d9eb31558c7eb02c0abcc1f4dd75e50e5038bf6", "url": "https://github.com/uyuni-project/uyuni/commit/0d9eb31558c7eb02c0abcc1f4dd75e50e5038bf6", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:36:50Z", "type": "commit"}, {"oid": "0d9eb31558c7eb02c0abcc1f4dd75e50e5038bf6", "url": "https://github.com/uyuni-project/uyuni/commit/0d9eb31558c7eb02c0abcc1f4dd75e50e5038bf6", "message": "Tool to check Uyuni versions before a release", "committedDate": "2020-04-20T15:36:50Z", "type": "forcePushed"}]}