{"pr_number": 2226, "pr_title": "Implement CaaSP cluster upgrade procedure in cluster provider module", "pr_createdAt": "2020-05-18T13:26:55Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2226", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NDM4Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2226#discussion_r426754383", "bodyText": "@ereslibre : for this file only and related to skuba upgrade: can you please review?\nIt should be as per your comment in #2128 (comment)", "author": "mbologna", "createdAt": "2020-05-18T16:33:48Z", "path": "susemanager-utils/susemanager-sls/src/modules/mgr_caasp_manager.py", "diffHunk": "@@ -175,19 +196,115 @@ def add_node(skuba_cluster_path,\n     return ret\n \n \n+def _upgrade_cluster_plan(skuba_cluster_path,", "originalCommit": "3c87941824c062b5588e9539290d781e09806b5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "19f7502ca5227f5bce761079a6d08e67730df9ea", "url": "https://github.com/uyuni-project/uyuni/commit/19f7502ca5227f5bce761079a6d08e67730df9ea", "message": "Do not crash if kubernetes python libs are not found", "committedDate": "2020-05-20T09:35:13Z", "type": "forcePushed"}, {"oid": "43d536242a59ab15c7ce49916c85f12999e943bb", "url": "https://github.com/uyuni-project/uyuni/commit/43d536242a59ab15c7ce49916c85f12999e943bb", "message": "Feat: make Salt clusters.listnodes return the machine-id", "committedDate": "2020-05-27T11:46:27Z", "type": "commit"}, {"oid": "b601ae20dc8fa1f31e4d5e970eeb5413b478042b", "url": "https://github.com/uyuni-project/uyuni/commit/b601ae20dc8fa1f31e4d5e970eeb5413b478042b", "message": "Fix: match parameters with the example", "committedDate": "2020-05-27T11:46:30Z", "type": "commit"}, {"oid": "d357eaf78823de6545b6e065a222d2f0cd691ffc", "url": "https://github.com/uyuni-project/uyuni/commit/d357eaf78823de6545b6e065a222d2f0cd691ffc", "message": "Collect internal IPs from kubeapi and expose them on list_nodes", "committedDate": "2020-05-27T11:46:30Z", "type": "commit"}, {"oid": "f9cb130e41a87eaa61413b6d5a998a040dc4839a", "url": "https://github.com/uyuni-project/uyuni/commit/f9cb130e41a87eaa61413b6d5a998a040dc4839a", "message": "Refactor code and add _join_return_dicts", "committedDate": "2020-05-27T11:46:30Z", "type": "commit"}, {"oid": "c8e2ee876dd9e21b60a15bdaa27446c59d5d558b", "url": "https://github.com/uyuni-project/uyuni/commit/c8e2ee876dd9e21b60a15bdaa27446c59d5d558b", "message": "Implement CaaSP cluster upgrade procedure for upgrade_cluster method", "committedDate": "2020-05-27T11:46:31Z", "type": "commit"}, {"oid": "b84260fc061a0b67260ad5ecda9e3a80b7e62928", "url": "https://github.com/uyuni-project/uyuni/commit/b84260fc061a0b67260ad5ecda9e3a80b7e62928", "message": "Update changelog for spacewalk-sls", "committedDate": "2020-05-27T11:46:52Z", "type": "commit"}, {"oid": "538141025fc5d67a6a7f68138fc711ed930e86b0", "url": "https://github.com/uyuni-project/uyuni/commit/538141025fc5d67a6a7f68138fc711ed930e86b0", "message": "Fix indentation and upgrade procedure comments", "committedDate": "2020-05-27T11:46:52Z", "type": "commit"}, {"oid": "3d9e0de9c964b5f8cbef5489d4f0c2e559f149f4", "url": "https://github.com/uyuni-project/uyuni/commit/3d9e0de9c964b5f8cbef5489d4f0c2e559f149f4", "message": "Add missing header to ClusterProviderParameters.java file", "committedDate": "2020-05-27T11:46:53Z", "type": "commit"}, {"oid": "e183e073e306c0d5d22709aaece88c75e3c65c52", "url": "https://github.com/uyuni-project/uyuni/commit/e183e073e306c0d5d22709aaece88c75e3c65c52", "message": "Do not crash if kubernetes python libs are not found", "committedDate": "2020-05-27T11:46:53Z", "type": "commit"}, {"oid": "18861842c15ac6715ba6a5641756e82152b4877c", "url": "https://github.com/uyuni-project/uyuni/commit/18861842c15ac6715ba6a5641756e82152b4877c", "message": "Use kubectl instead of python kubernetes library", "committedDate": "2020-05-27T11:48:57Z", "type": "commit"}, {"oid": "18861842c15ac6715ba6a5641756e82152b4877c", "url": "https://github.com/uyuni-project/uyuni/commit/18861842c15ac6715ba6a5641756e82152b4877c", "message": "Use kubectl instead of python kubernetes library", "committedDate": "2020-05-27T11:48:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MDUyOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2226#discussion_r432550529", "bodyText": "From what I see there's no safety in that list_nodes will list control plane nodes first, right? I think I have always seen them listed first, but it would be good if we ensure that this is the case, so when we upgrade nodes we enforce the upgrade of the control plane nodes first, then the workers.", "author": "ereslibre", "createdAt": "2020-05-29T15:08:05Z", "path": "susemanager-utils/susemanager-sls/src/modules/mgr_caasp_manager.py", "diffHunk": "@@ -175,19 +229,114 @@ def add_node(skuba_cluster_path,\n     return ret\n \n \n+def _upgrade_cluster_plan(skuba_cluster_path,\n+                          verbosity=None,\n+                          timeout=DEFAULT_TIMEOUT,\n+                          **kwargs):\n+\n+    cmd_args = \"cluster upgrade plan\"\n+\n+    if verbosity:\n+        cmd_args += \" --verbosity {}\".format(verbosity)\n+\n+    skuba_proc = _call_skuba(skuba_cluster_path, cmd_args, timeout=timeout)\n+    if skuba_proc.process.returncode != 0:\n+        error_msg = \"Unexpected error {} at skuba when upgrading the cluster: {}\".format(\n+                skuba_proc.process.returncode,\n+                salt.utils.stringutils.to_str(skuba_proc.stderr))\n+        log.error(error_msg)\n+\n+    ret = {\n+        'stdout': salt.utils.stringutils.to_str(skuba_proc.stdout),\n+        'stderr': salt.utils.stringutils.to_str(skuba_proc.stderr),\n+        'success': not skuba_proc.process.returncode,\n+        'retcode': skuba_proc.process.returncode,\n+    }\n+    return ret\n+\n+\n def upgrade_cluster(skuba_cluster_path,\n                     verbosity=None,\n                     timeout=DEFAULT_TIMEOUT,\n+                    plan=False,\n                     **kwargs):\n \n-    cmd_args = \"cluster upgrade plan\"\n+    if plan:\n+        return _upgrade_cluster_plan(skuba_cluster_path=skuba_cluster_path,\n+                                     verbosity=verbosity,\n+                                     timeout=timeout,\n+                                     **kwargs)\n+\n+    # Perform the cluster upgrade procedure.\n+    # 1. Upgrade addons\n+    # 2. Upgrade all nodes\n+    # 3. Upgrade addons\n+    ret = {\n+        'success' : True,\n+        'retcode' : 0,\n+        'stage0_upgrade_addons': {},\n+        'stage1_upgrade_nodes': {},\n+        'stage2_upgrade_addons': {},\n+    }\n+\n+    ret['stage0_upgrade_addons'] = upgrade_addons(skuba_cluster_path=skuba_cluster_path,\n+                                                  verbosity=verbosity,\n+                                                  timeout=timeout,\n+                                                  plan=plan,\n+                                                  **kwargs)\n+\n+    if not ret['stage0_upgrade_addons']['success']:\n+        ret['success'] = False\n+        return ret\n+\n+    nodes = list_nodes(skuba_cluster_path=skuba_cluster_path,", "originalCommit": "18861842c15ac6715ba6a5641756e82152b4877c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUyNTAwNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2226#discussion_r434525007", "bodyText": "Thanks for the feedback @ereslibre.\nI've pushed a minor change to ensure master nodes are always upgraded first \ud83d\udc4d", "author": "meaksh", "createdAt": "2020-06-03T12:21:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MDUyOQ=="}], "type": "inlineReview"}, {"oid": "3439d75c9c8363ac034219736a5aed63fc7e706e", "url": "https://github.com/uyuni-project/uyuni/commit/3439d75c9c8363ac034219736a5aed63fc7e706e", "message": "Ensure master nodes are upgraded first", "committedDate": "2020-06-03T12:18:05Z", "type": "commit"}]}