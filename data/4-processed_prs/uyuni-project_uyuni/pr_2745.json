{"pr_number": 2745, "pr_title": "Fix modular data handling for cloned channels", "pr_createdAt": "2020-10-22T19:55:21Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2745", "timeline": [{"oid": "a50a8c11240dc244067aa691776dd8a969fc011f", "url": "https://github.com/uyuni-project/uyuni/commit/a50a8c11240dc244067aa691776dd8a969fc011f", "message": "wip: python", "committedDate": "2020-10-23T07:44:05Z", "type": "forcePushed"}, {"oid": "affffa93da4c8489352193ced1c247fc38623b50", "url": "https://github.com/uyuni-project/uyuni/commit/affffa93da4c8489352193ced1c247fc38623b50", "message": "Reposync: include the the modules.yaml checksum in the filename when reposyncing", "committedDate": "2020-10-23T07:48:15Z", "type": "forcePushed"}, {"oid": "c00a144640010932bb010a5912b1f2ba3df8fca0", "url": "https://github.com/uyuni-project/uyuni/commit/c00a144640010932bb010a5912b1f2ba3df8fca0", "message": "todo", "committedDate": "2020-10-23T09:21:03Z", "type": "forcePushed"}, {"oid": "99fe71b3a063733959345cd796c7d1d0c44492b7", "url": "https://github.com/uyuni-project/uyuni/commit/99fe71b3a063733959345cd796c7d1d0c44492b7", "message": "Changelog", "committedDate": "2020-10-23T10:34:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwMjc5Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r510802797", "bodyText": "I would adjust the padding of the message like previous messages in this same stage of reposync\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log(0, \"Including the checksum in the modules file name: %s\" % basename)\n          \n          \n            \n                        log(0, \"  Including the checksum in the modules file name: %s\" % basename)", "author": "meaksh", "createdAt": "2020-10-23T10:55:35Z", "path": "backend/satellite_tools/reposync.py", "diffHunk": "@@ -748,6 +760,12 @@ def copy_metadata_file(self, plug, filename, comps_type, relative_dir):\n         if comps_type == 'comps' and not re.match('comps.xml(' + \"|\".join(compressed_suffixes) + ')*', basename):\n             log(0, \"  Renaming non-standard filename %s to %s.\" % (basename, 'comps' + basename[basename.find('.'):]))\n             basename = 'comps' + basename[basename.find('.'):]\n+        elif comps_type == 'modules' and re.match('modules.yaml(' + \"|\".join(compressed_suffixes) + ')*', basename):\n+            # decompress only for getting the checksum\n+            checksum = self._getDecompressedFileChecksum(filename, 'sha256')\n+            basename = checksum + \"-\" + basename\n+            log(0, \"Including the checksum in the modules file name: %s\" % basename)", "originalCommit": "99fe71b3a063733959345cd796c7d1d0c44492b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwNzE3Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r510807177", "bodyText": "Let's try to prevent introducing more camelCase code in Python files if possible \ud83d\ude04\nBetter use something more pythonic like, _get_decompressed_file_checksum", "author": "meaksh", "createdAt": "2020-10-23T11:04:25Z", "path": "backend/satellite_tools/reposync.py", "diffHunk": "@@ -734,6 +735,17 @@ def import_updates(self, plug):\n             elif notices_type == 'patches':\n                 self.upload_patches(notices)\n \n+    @staticmethod\n+    def _getDecompressedFileChecksum(abspath, hashtype):", "originalCommit": "99fe71b3a063733959345cd796c7d1d0c44492b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgyMzk0Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r510823946", "bodyText": "Makes sense. I was confused by the getFileCheckSum, but that one is imported from somewhere else.", "author": "hustodemon", "createdAt": "2020-10-23T11:40:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwNzE3Nw=="}], "type": "inlineReview"}, {"oid": "e48fcb08a19581a2a0c87fdc7648967add25262e", "url": "https://github.com/uyuni-project/uyuni/commit/e48fcb08a19581a2a0c87fdc7648967add25262e", "message": "WIP: Job for cleaning unused channel modular data\n\nIt'll be part of the existing 'cleanup-data-bunch' bunch.", "committedDate": "2020-10-26T18:35:38Z", "type": "forcePushed"}, {"oid": "b5be2424cc890f11f2925930d90093c8e06be9de", "url": "https://github.com/uyuni-project/uyuni/commit/b5be2424cc890f11f2925930d90093c8e06be9de", "message": "WIP: Job for cleaning unused channel modular data\n\nIt'll be part of the existing 'cleanup-data-bunch' bunch.", "committedDate": "2020-10-26T18:36:22Z", "type": "forcePushed"}, {"oid": "f764ed3bf00a2b97081cb9301439196bc00cc6cb", "url": "https://github.com/uyuni-project/uyuni/commit/f764ed3bf00a2b97081cb9301439196bc00cc6cb", "message": "WIP: Job for cleaning unused channel modular data\n\nIt'll be part of the existing 'cleanup-data-bunch' bunch.", "committedDate": "2020-10-26T18:40:58Z", "type": "forcePushed"}, {"oid": "1ddda519719baeac392d2e3f38f12e20091ab34b", "url": "https://github.com/uyuni-project/uyuni/commit/1ddda519719baeac392d2e3f38f12e20091ab34b", "message": "WIP: Job for cleaning unused channel modular data\n\nIt'll be part of the existing 'cleanup-data-bunch' bunch.", "committedDate": "2020-10-26T18:41:53Z", "type": "forcePushed"}, {"oid": "8f912e9580c13c7484f1b59671ab6e2fa878e3c0", "url": "https://github.com/uyuni-project/uyuni/commit/8f912e9580c13c7484f1b59671ab6e2fa878e3c0", "message": "Reposync: treat resources using 'with'", "committedDate": "2020-10-27T09:52:00Z", "type": "forcePushed"}, {"oid": "aad2cef91cf3130c20603c991d575144dd5274bd", "url": "https://github.com/uyuni-project/uyuni/commit/aad2cef91cf3130c20603c991d575144dd5274bd", "message": "Reposync: treat resources using 'with'", "committedDate": "2020-10-27T10:12:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4ODY3OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512588678", "bodyText": "typo", "author": "mcalmer", "createdAt": "2020-10-27T10:51:07Z", "path": "schema/spacewalk/common/data/rhnTaskoTask.sql", "diffHunk": "@@ -116,4 +116,7 @@ INSERT INTO rhnTaskoTask (id, name, class)\n INSERT INTO rhnTaskoTask (id, name, class)\n    VALUES (sequence_nextval('rhn_tasko_task_id_seq'), 'ssh-minion-action-executor', 'com.redhat.rhn.taskomatic.task.SSHMinionActionExecutor');\n \n+INSERT INTO rhnTaskoTask (id, name, class)\n+   VALUES (sequence_nextval('rhn_tasko_task_id_seq'), 'channel-modular-data-cleaunp', 'com.redhat.rhn.taskomatic.task.ModularDataCleanup');", "originalCommit": "59587ad3da951f41ea63f8f4238f7000c71c8237", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0MzUxMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512643512", "bodyText": "Good catch.", "author": "hustodemon", "createdAt": "2020-10-27T12:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4ODY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4ODc5NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512588795", "bodyText": "typo", "author": "mcalmer", "createdAt": "2020-10-27T10:51:17Z", "path": "schema/spacewalk/common/data/rhnTaskoTemplate.sql", "diffHunk": "@@ -252,4 +252,11 @@ INSERT INTO rhnTaskoTemplate (id, bunch_id, task_id, ordering, start_if)\n                         0,\n                         null);\n \n+INSERT INTO rhnTaskoTemplate (id, bunch_id, task_id, ordering, start_if)\n+            VALUES (sequence_nextval('rhn_tasko_template_id_seq'),\n+                        (SELECT id FROM rhnTaskoBunch WHERE name='cleanup-data-bunch'),\n+                        (SELECT id FROM rhnTaskoTask WHERE name='channel-modular-data-cleaunp'),", "originalCommit": "59587ad3da951f41ea63f8f4238f7000c71c8237", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU5NDcyMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512594720", "bodyText": "So we have a new Task, but use an existing Bunch. Ok, but the typo in the task name should be fixed.", "author": "mcalmer", "createdAt": "2020-10-27T10:58:59Z", "path": "schema/spacewalk/upgrade/susemanager-schema-4.2.2-to-susemanager-schema-4.2.3/210-channel-modular-data-cleaunp-job.sql", "diffHunk": "@@ -0,0 +1,16 @@\n+INSERT INTO rhnTaskoTask (id, name, class)\n+SELECT sequence_nextval('rhn_tasko_task_id_seq'), 'channel-modular-data-cleaunp', 'com.redhat.rhn.taskomatic.task.ModularDataCleanup'\n+WHERE NOT EXISTS (SELECT 1 FROM rhnTaskoTask WHERE name='channel-modular-data-cleaunp');\n+\n+INSERT INTO rhnTaskoTemplate (id, bunch_id, task_id, ordering, start_if)\n+SELECT sequence_nextval('rhn_tasko_template_id_seq'),\n+    (SELECT id FROM rhnTaskoBunch WHERE name='cleanup-data-bunch'),\n+    (SELECT id FROM rhnTaskoTask WHERE name='channel-modular-data-cleaunp'),\n+    1,\n+    null\n+WHERE NOT EXISTS (\n+    SELECT 1 FROM rhnTaskoTemplate\n+    WHERE bunch_id = (SELECT id FROM rhnTaskoBunch WHERE name = 'cleanup-data-bunch')\n+      AND task_id = (SELECT id FROM rhnTaskoTask WHERE name = 'channel-modular-data-cleaunp')", "originalCommit": "59587ad3da951f41ea63f8f4238f7000c71c8237", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU5ODYzOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512598639", "bodyText": "Is there any good reason to call this with false in future? Will true break the functionality under some conditions?\nIf true should work in general, we should just do it always and do not implement an extra function.", "author": "mcalmer", "createdAt": "2020-10-27T11:04:46Z", "path": "java/code/src/com/redhat/rhn/frontend/xmlrpc/channel/software/ChannelSoftwareHandler.java", "diffHunk": "@@ -2331,6 +2331,32 @@ private void channelAdminPermCheck(User loggedInUser) {\n      */\n     public Object[] mergePackages(User loggedInUser, String mergeFromLabel,\n             String mergeToLabel) {\n+        return mergePackages(loggedInUser, mergeFromLabel, mergeToLabel, false);", "originalCommit": "59587ad3da951f41ea63f8f4238f7000c71c8237", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1ODU2Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512658567", "bodyText": "This is a bit tricky topic, but I'd say it shouldn't be a default behavior. I think, that in situations when user wants to merge 1 package from a modular channel into another one, it does not make sense to align the modular metadata (unless user really wants it, in which case they can use the boolean parameter). In any case, using mergePackages on modular channels can be somewhat risky: let's say that both source and target channels have incompatible modular data. Blindly aligning the modular data could break the target channel...\n\nWhat about cloneByDate tool?\n\nThis tool uses CloneChannelCommand in the end -> the modular metadata is cloned as well. Next question would be: is the modular repodata valid if the target channel only contains subset packages of the source? I think using this tool for modular channels can bring some funky results.", "author": "hustodemon", "createdAt": "2020-10-27T12:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU5ODYzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY4NzYyNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512687626", "bodyText": "Ok, I just wanted to double check if this is really needed.\nAbout CloneByDate: should we prevent using this tool for modular channels? Should we document that it would be better to not use it?", "author": "mcalmer", "createdAt": "2020-10-27T13:24:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU5ODYzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYxNjQ1MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512616450", "bodyText": "There are some unused imports in this one, and maybe in some other test classes as well", "author": "cbbayburt", "createdAt": "2020-10-27T11:34:25Z", "path": "java/code/src/com/redhat/rhn/manager/contentmgmt/test/ContentManagerChannelAlignmentTest.java", "diffHunk": "@@ -22,13 +22,15 @@\n import static com.redhat.rhn.domain.role.RoleFactory.ORG_ADMIN;\n import static java.util.Collections.emptyList;\n import static java.util.Collections.singleton;\n+import static java.util.Optional.empty;", "originalCommit": "3a3112f2acd245a473d1dc9371503fac5210cda0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1OTAwMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2745#discussion_r512659000", "bodyText": "I'll revisit the tests. Thanks for reminding!", "author": "hustodemon", "createdAt": "2020-10-27T12:41:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYxNjQ1MA=="}], "type": "inlineReview"}, {"oid": "218980ebc96ec4406b9e309b7fabe4e2c426a610", "url": "https://github.com/uyuni-project/uyuni/commit/218980ebc96ec4406b9e309b7fabe4e2c426a610", "message": "Remove unused imports in ContentManagerChannelAlignmentTest", "committedDate": "2021-01-19T08:12:13Z", "type": "forcePushed"}, {"oid": "5b278f59e4654ce4f8fadc61551cf0618642420f", "url": "https://github.com/uyuni-project/uyuni/commit/5b278f59e4654ce4f8fadc61551cf0618642420f", "message": "Remove unused imports in ContentManagerChannelAlignmentTest", "committedDate": "2021-01-19T08:30:22Z", "type": "forcePushed"}, {"oid": "09e6868f1578c94fbfbb297818ab128edb370d0c", "url": "https://github.com/uyuni-project/uyuni/commit/09e6868f1578c94fbfbb297818ab128edb370d0c", "message": "Remove unused imports in ContentManagerChannelAlignmentTest", "committedDate": "2021-01-19T08:36:15Z", "type": "forcePushed"}, {"oid": "83e718a51785fb1c4972ac6c52438b41b3659324", "url": "https://github.com/uyuni-project/uyuni/commit/83e718a51785fb1c4972ac6c52438b41b3659324", "message": "Allow changing RepoMetadata (and child classes) from hibernate", "committedDate": "2021-01-19T09:13:23Z", "type": "commit"}, {"oid": "405bdd99dd7ca52e8c05d279c97c06c6c7024763", "url": "https://github.com/uyuni-project/uyuni/commit/405bdd99dd7ca52e8c05d279c97c06c6c7024763", "message": "Clone modules metadata when clonning a channel", "committedDate": "2021-01-19T09:13:23Z", "type": "commit"}, {"oid": "79d97227450de0647224c8568036e6d1bf3c969c", "url": "https://github.com/uyuni-project/uyuni/commit/79d97227450de0647224c8568036e6d1bf3c969c", "message": "Test: Clone modules metadata when clonning a channel", "committedDate": "2021-01-19T09:13:24Z", "type": "commit"}, {"oid": "43007cef564dfd016e02016aa68f23f613dd3739", "url": "https://github.com/uyuni-project/uyuni/commit/43007cef564dfd016e02016aa68f23f613dd3739", "message": "Refactor: Extract common functionality to a method", "committedDate": "2021-01-19T09:13:24Z", "type": "commit"}, {"oid": "ab81b47f6e79bde6184a658135fec3777bfd34c0", "url": "https://github.com/uyuni-project/uyuni/commit/ab81b47f6e79bde6184a658135fec3777bfd34c0", "message": "Set the modular information of channels on CLM project build/promote", "committedDate": "2021-01-19T09:13:24Z", "type": "commit"}, {"oid": "3c46abe87b8c122f952b1f73cc7960e97964a87a", "url": "https://github.com/uyuni-project/uyuni/commit/3c46abe87b8c122f952b1f73cc7960e97964a87a", "message": "Refactor: Move the modules handling", "committedDate": "2021-01-19T09:13:24Z", "type": "commit"}, {"oid": "a675b143d134583f3f61c2b9220f51eade97c1f1", "url": "https://github.com/uyuni-project/uyuni/commit/a675b143d134583f3f61c2b9220f51eade97c1f1", "message": "Test: Set the modular information of channels on CLM project build/promote", "committedDate": "2021-01-19T09:13:24Z", "type": "commit"}, {"oid": "fe185fc2f5bc21c917eb0bd776197703f1ab898a", "url": "https://github.com/uyuni-project/uyuni/commit/fe185fc2f5bc21c917eb0bd776197703f1ab898a", "message": "Reposync: include the the modules.yaml checksum in the filename when reposyncing", "committedDate": "2021-01-19T09:13:24Z", "type": "commit"}, {"oid": "f01c4a9cc3e0566783b38c71be8b40f710415169", "url": "https://github.com/uyuni-project/uyuni/commit/f01c4a9cc3e0566783b38c71be8b40f710415169", "message": "Changelog", "committedDate": "2021-01-19T09:13:37Z", "type": "commit"}, {"oid": "6c407fa7a55798373977a4db36fd040fa50358ea", "url": "https://github.com/uyuni-project/uyuni/commit/6c407fa7a55798373977a4db36fd040fa50358ea", "message": "Update backend/satellite_tools/reposync.py\n\nCo-authored-by: Pablo Su\u00e1rez Hern\u00e1ndez <psuarezhernandez@suse.com>", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "41645868c2322a5c16a3742eca7ca1bb6b3dbd63", "url": "https://github.com/uyuni-project/uyuni/commit/41645868c2322a5c16a3742eca7ca1bb6b3dbd63", "message": "Merge repo modular data in \"spacewalk manage lifecycle\" tool", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "7c1bf0a383032777b5d61b8b58db079a3279b7e9", "url": "https://github.com/uyuni-project/uyuni/commit/7c1bf0a383032777b5d61b8b58db079a3279b7e9", "message": "Reposync: turn camelCase into underscores", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "9fd17d747180443b8f133fe2e56f025a1ba95b93", "url": "https://github.com/uyuni-project/uyuni/commit/9fd17d747180443b8f133fe2e56f025a1ba95b93", "message": "Job for cleaning unused channel modular data\n\nIt'll be part of the existing 'cleanup-data-bunch' bunch.", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "b7af15e8fe4ee58e16fefae92d8263fa47f110b9", "url": "https://github.com/uyuni-project/uyuni/commit/b7af15e8fe4ee58e16fefae92d8263fa47f110b9", "message": "Reposync: treat resources using 'with'", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "de87cc4d4c6e5e624858d0e1beff939bcaa58f4f", "url": "https://github.com/uyuni-project/uyuni/commit/de87cc4d4c6e5e624858d0e1beff939bcaa58f4f", "message": "Make checkstyle happy", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "a520bdf833123a5b5c96561cd719d6016bce1ddb", "url": "https://github.com/uyuni-project/uyuni/commit/a520bdf833123a5b5c96561cd719d6016bce1ddb", "message": "Fix a typo: cleaunp -> cleanup", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "c46b420be2f3cf4b7a17141e5c044c53ae99353a", "url": "https://github.com/uyuni-project/uyuni/commit/c46b420be2f3cf4b7a17141e5c044c53ae99353a", "message": "Remove unused imports in ContentManagerChannelAlignmentTest", "committedDate": "2021-01-19T09:13:38Z", "type": "commit"}, {"oid": "c46b420be2f3cf4b7a17141e5c044c53ae99353a", "url": "https://github.com/uyuni-project/uyuni/commit/c46b420be2f3cf4b7a17141e5c044c53ae99353a", "message": "Remove unused imports in ContentManagerChannelAlignmentTest", "committedDate": "2021-01-19T09:13:38Z", "type": "forcePushed"}]}