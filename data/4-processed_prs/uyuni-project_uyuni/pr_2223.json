{"pr_number": 2223, "pr_title": "Testsuite - avoid mandatory proxy for client boostrapping", "pr_createdAt": "2020-05-15T14:53:02Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2223", "timeline": [{"oid": "0fb112d10ea5af5f9a7a10fc76a09340e65533ef", "url": "https://github.com/uyuni-project/uyuni/commit/0fb112d10ea5af5f9a7a10fc76a09340e65533ef", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-15T14:54:51Z", "type": "forcePushed"}, {"oid": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "url": "https://github.com/uyuni-project/uyuni/commit/90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-15T15:01:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NDU4NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426474584", "bodyText": "Missing parens\nserver|proxy -> (server|proxy)", "author": "calancha", "createdAt": "2020-05-18T09:01:56Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|", "originalCommit": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MzI4Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426563283", "bodyText": "Changed.", "author": "lkotek", "createdAt": "2020-05-18T11:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NDU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NjIzNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426476237", "bodyText": "I recommend here to use or instead of ||:\nif target_type.include? 'server' or $proxy.nil?\notherwise, you need to add parens (because || has different precedence than or):\nif (target_type.include? 'server') || $proxy.nil?\nIndeed, I just noticed that we have a Rubocop rule for that and it's alerting on this issue (Rubocop suggests adding the parens).", "author": "calancha", "createdAt": "2020-05-18T09:04:33Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n+  # Use server if proxy is not defined as proxy is not mandatory\n+  if target_type.include? 'server' || $proxy.nil?\n+    target = $server\n+  else", "originalCommit": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTQ3OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426561478", "bodyText": "Thanks a lot. I will change it in a way you recommended.", "author": "lkotek", "createdAt": "2020-05-18T11:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NjIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MzM4Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426563387", "bodyText": "Done.", "author": "lkotek", "createdAt": "2020-05-18T11:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NjIzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTE3Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426561177", "bodyText": "Since you are not using code I'd prefix it with _, i.e. _code or just write the underscore as follows:\n output,  _ = target.run(cmd)", "author": "calancha", "createdAt": "2020-05-18T11:36:25Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n+  # Use server if proxy is not defined as proxy is not mandatory\n+  if target_type.include? 'server' || $proxy.nil?\n+    target = $server\n+  else\n+    target = $proxy\n+  end\n   cmd = \"mgr-bootstrap #{client} &&\n   sed -i s\\'/^exit 1//\\' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   sed -i '/^ACTIVATION_KEYS=/c\\\\ACTIVATION_KEYS=#{key}' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   chmod 644 /srv/www/htdocs/pub/RHN-ORG-TRUSTED-SSL-CERT &&\n   sed -i '/^ORG_GPG_KEY=/c\\\\ORG_GPG_KEY=RHN-ORG-TRUSTED-SSL-CERT' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   cat /srv/www/htdocs/pub/bootstrap/bootstrap.sh\"\n-  output, code = $proxy.run(cmd)\n+  output, code = target.run(cmd)", "originalCommit": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MzU1Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426563552", "bodyText": "Done :-)", "author": "lkotek", "createdAt": "2020-05-18T11:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTE3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTM4Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426561382", "bodyText": "Same here (unused code).", "author": "calancha", "createdAt": "2020-05-18T11:36:53Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -643,25 +643,31 @@\n   $server.run(\"salt-key -y --accept=pxeboot.example.org\")\n end\n \n-When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the proxy$/) do |client_type, host, key|\n+When(/^I bootstrap (traditional|minion) client \"([^\"]*)\" using bootstrap script with activation key \"([^\"]*)\" from the server|proxy$/) do |client_type, host, key, target_type|\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n+  # Use server if proxy is not defined as proxy is not mandatory\n+  if target_type.include? 'server' || $proxy.nil?\n+    target = $server\n+  else\n+    target = $proxy\n+  end\n   cmd = \"mgr-bootstrap #{client} &&\n   sed -i s\\'/^exit 1//\\' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   sed -i '/^ACTIVATION_KEYS=/c\\\\ACTIVATION_KEYS=#{key}' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   chmod 644 /srv/www/htdocs/pub/RHN-ORG-TRUSTED-SSL-CERT &&\n   sed -i '/^ORG_GPG_KEY=/c\\\\ORG_GPG_KEY=RHN-ORG-TRUSTED-SSL-CERT' /srv/www/htdocs/pub/bootstrap/bootstrap.sh &&\n   cat /srv/www/htdocs/pub/bootstrap/bootstrap.sh\"\n-  output, code = $proxy.run(cmd)\n+  output, code = target.run(cmd)\n   raise \"Key: #{key} not included\" unless output.include? key\n   # Run bootstrap script and check for result\n   boostrap_script = 'bootstrap-general.exp'\n   source = File.dirname(__FILE__) + '/../upload_files/' + boostrap_script\n   dest = '/tmp/' + boostrap_script\n-  return_code = file_inject($proxy, source, dest)\n+  return_code = file_inject(target, source, dest)\n   raise 'File injection failed' unless return_code.zero?\n   system_name = get_system_name(host)\n-  output, code = $proxy.run(\"expect -f /tmp/#{boostrap_script} #{system_name}\")\n+  output, code = target.run(\"expect -f /tmp/#{boostrap_script} #{system_name}\")", "originalCommit": "90c8b88f216a1c8882e8f4d74f30b1e90ff07104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MjQ2OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426562468", "bodyText": "True, I will change it. Just at the beginning I had plan to check code value to be equal to 6. I abandoned the idea, but this remained. Good catch :-)", "author": "lkotek", "createdAt": "2020-05-18T11:39:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2MTM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyOTI4NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426629285", "bodyText": "I get a syntactic error in this line.  The following is OK:\ntarget = (target_type.include? 'server') || $proxy.nil? ? $server : $proxy", "author": "calancha", "createdAt": "2020-05-18T13:33:56Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,11 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  if target_type.include? 'server' or $proxy.nil?\n-    target = $server\n-  else\n-    target = $proxy\n-  end\n+  target = target_type.include? 'server' or $proxy.nil? ? $server : $proxy", "originalCommit": "32762beb935a69021dea4c7b8f07dfbecde9a036", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY0MjMxMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426642310", "bodyText": "Rubocop really doesn't make it easy this time ;-) Now we have different complaints:\nfeatures/step_definitions/common_steps.rb:650:3: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.\n  if target_type.include? 'server' || $proxy.nil? ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nfeatures/step_definitions/common_steps.rb:650:6: W: Lint/RequireParentheses: Use parentheses in the method call to avoid confusion about precedence.\n  if target_type.include? 'server' || $proxy.nil?\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "author": "lkotek", "createdAt": "2020-05-18T13:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyOTI4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4NDc2OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426684769", "bodyText": "Sorry, I just noticed that the end paren is too far, It must be:\ntarget = (target_type.include? 'server') || $proxy.nil? ? $server : $proxy\nIn case Rubocop gets picky, the following is equivalent:\ntarget = if (target_type.include? 'server') || $proxy.nil? then $server else $proxy", "author": "calancha", "createdAt": "2020-05-18T14:52:26Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,7 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  target = target_type.include? 'server' or $proxy.nil? ? $server : $proxy\n+  target = (target_type.include? 'server' || $proxy.nil?) ? $server : $proxy", "originalCommit": "943deec67da886f512ff77807d8f0b6f8af32f91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5MTcyMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426691723", "bodyText": "Nothing to sorry about. I did a silly typo. Thanks for pointing me :-)", "author": "lkotek", "createdAt": "2020-05-18T15:01:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4NDc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5OTA5Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r426699092", "bodyText": "We lost the if keyword", "author": "calancha", "createdAt": "2020-05-18T15:11:54Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,7 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  target = (target_type.include? 'server' || $proxy.nil?) ? $server : $proxy\n+  target = (target_type.include? 'server') || $proxy.nil? then $server else $proxy", "originalCommit": "81472b66c60d0d3ceceb8d576cbaacb37767e113", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEzMzk1OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r427133958", "bodyText": "done", "author": "lkotek", "createdAt": "2020-05-19T08:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5OTA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEzMzQxNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2223#discussion_r427133414", "bodyText": "Opps, my bad! This is not Python, so we must close the if expression (i.e., we must add end):\nif (target_type.include? 'server') || $proxy.nil? then $server else $proxy end", "author": "calancha", "createdAt": "2020-05-19T08:46:10Z", "path": "testsuite/features/step_definitions/common_steps.rb", "diffHunk": "@@ -647,7 +647,7 @@\n   # Preparation of bootstrap script for different types of clients\n   client = client_type == 'traditional' ? '--traditional' : ''\n   # Use server if proxy is not defined as proxy is not mandatory\n-  target = (target_type.include? 'server') || $proxy.nil? then $server else $proxy\n+  target = if (target_type.include? 'server') || $proxy.nil? then $server else $proxy", "originalCommit": "0cf297b32632c357151bfb5c7bc67ffd1c41f82c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6d7b178f6c07578dd4de54f9f5cf93118b5e607", "url": "https://github.com/uyuni-project/uyuni/commit/a6d7b178f6c07578dd4de54f9f5cf93118b5e607", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-21T08:38:46Z", "type": "forcePushed"}, {"oid": "33cb057211885c191652050b960f280597c4208a", "url": "https://github.com/uyuni-project/uyuni/commit/33cb057211885c191652050b960f280597c4208a", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-21T13:21:19Z", "type": "forcePushed"}, {"oid": "851bc74be156071eacb81738cdf4c3323798f18d", "url": "https://github.com/uyuni-project/uyuni/commit/851bc74be156071eacb81738cdf4c3323798f18d", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-21T13:59:07Z", "type": "forcePushed"}, {"oid": "20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "url": "https://github.com/uyuni-project/uyuni/commit/20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-21T14:06:34Z", "type": "commit"}, {"oid": "20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "url": "https://github.com/uyuni-project/uyuni/commit/20b7ba1b04fb5fc08ef796338c8f4c76a1b3a992", "message": "avoid proxy to be mandatory for boostrap", "committedDate": "2020-05-21T14:06:34Z", "type": "forcePushed"}]}