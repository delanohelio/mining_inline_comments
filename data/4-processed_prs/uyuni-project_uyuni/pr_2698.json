{"pr_number": 2698, "pr_title": "enable redfish by default", "pr_createdAt": "2020-10-07T14:52:06Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2698", "timeline": [{"oid": "dfba436d5f5f7077631f9da1d5d17167ee1921cd", "url": "https://github.com/uyuni-project/uyuni/commit/dfba436d5f5f7077631f9da1d5d17167ee1921cd", "message": "enable redfish by default", "committedDate": "2020-10-12T11:49:47Z", "type": "forcePushed"}, {"oid": "1bd62e2e602a4f96462cd19ea025161d7763b74e", "url": "https://github.com/uyuni-project/uyuni/commit/1bd62e2e602a4f96462cd19ea025161d7763b74e", "message": "update changelog", "committedDate": "2020-10-13T12:04:40Z", "type": "forcePushed"}, {"oid": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "url": "https://github.com/uyuni-project/uyuni/commit/9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "message": "provide Redfish-Mockup-Server from our git", "committedDate": "2020-10-13T13:33:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDAzNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504020037", "bodyText": "Add \"Redfish\" word", "author": "Bischoff", "createdAt": "2020-10-13T14:54:51Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTIxOA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559218", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:08:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDMzNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504020334", "bodyText": "Or \"when\"", "author": "Bischoff", "createdAt": "2020-10-13T14:55:11Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTI4Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559287", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:08:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDMzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDYyMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504020620", "bodyText": "\"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:55:27Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTM3Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559372", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDc0MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504020740", "bodyText": "\"And\"", "author": "Bischoff", "createdAt": "2020-10-13T14:55:37Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTQ0NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559444", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDg3MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504020870", "bodyText": "\"should contain\"", "author": "Bischoff", "createdAt": "2020-10-13T14:55:48Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTUyNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559526", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMDg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTAxOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021019", "bodyText": "\"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:55:59Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTYzMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559631", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTIxMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021212", "bodyText": "\"And\"", "author": "Bischoff", "createdAt": "2020-10-13T14:56:14Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTczMg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559732", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTIxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTM4Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021386", "bodyText": "\"Then\"", "author": "Bischoff", "createdAt": "2020-10-13T14:56:26Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTgzMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559830", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTUwNg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021506", "bodyText": "\"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:56:34Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTkyNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559925", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTYxNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021617", "bodyText": "\"Then\"", "author": "Bischoff", "createdAt": "2020-10-13T14:56:43Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDExNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560114", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTYxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTc0Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021746", "bodyText": "\"When\", etc", "author": "Bischoff", "createdAt": "2020-10-13T14:56:53Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"\n+    Then I click on \"Power On\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1OTk5Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504559996", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTkzMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504021933", "bodyText": "\"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:57:07Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"\n+    Then I click on \"Power On\"\n+    And I should see a \"system has been powered on\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    Then I click on \"Reboot\"\n+    And I should see a \"system has been rebooted\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+\n+  Scenario: Check power management SSM configuration for Redfish\n+    Given I am authorized\n+    And I am on the System Overview page\n+    And I check the \"sle_minion\" client", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDIxNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560215", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMTkzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjI0MQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504022241", "bodyText": "\"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:57:29Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"\n+    Then I click on \"Power On\"\n+    And I should see a \"system has been powered on\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    Then I click on \"Reboot\"\n+    And I should see a \"system has been rebooted\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+\n+  Scenario: Check power management SSM configuration for Redfish\n+    Given I am authorized\n+    And I am on the System Overview page\n+    And I check the \"sle_minion\" client\n+    And I am on System Set Manager Overview\n+    And I follow \"Configure power management\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Change Power Management Configuration\" text\n+    And I should see a \"Type\" text\n+    And I should see a \"Network address\" text\n+    And I should see a \"Username\" text\n+    And I should see a \"Password\" text\n+    And I should see a \"System identifier\" text\n+    And I should see a \"Update\" button\n+    When I enter \"testing\" as \"powerUsername\"\n+    And I enter \"qwertz\" as \"powerPassword\"\n+    And I click on \"Update\"\n+    Then I should see a \"Configuration successfully saved for 1 system(s)\" text\n+    And the cobbler report contains \"Power Management Username      : testing\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : qwertz\" for system \"sle_minion\"\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Check power management SSM operation for Redfish\n+    Given I am authorized\n+    And I am on System Set Manager Overview\n+    And I follow \"power management operations\" in the content area", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDMyMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560323", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:10:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjI0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjQwMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504022403", "bodyText": "\"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:57:41Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"\n+    Then I click on \"Power On\"\n+    And I should see a \"system has been powered on\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    Then I click on \"Reboot\"\n+    And I should see a \"system has been rebooted\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+\n+  Scenario: Check power management SSM configuration for Redfish\n+    Given I am authorized\n+    And I am on the System Overview page\n+    And I check the \"sle_minion\" client\n+    And I am on System Set Manager Overview\n+    And I follow \"Configure power management\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Change Power Management Configuration\" text\n+    And I should see a \"Type\" text\n+    And I should see a \"Network address\" text\n+    And I should see a \"Username\" text\n+    And I should see a \"Password\" text\n+    And I should see a \"System identifier\" text\n+    And I should see a \"Update\" button\n+    When I enter \"testing\" as \"powerUsername\"\n+    And I enter \"qwertz\" as \"powerPassword\"\n+    And I click on \"Update\"\n+    Then I should see a \"Configuration successfully saved for 1 system(s)\" text\n+    And the cobbler report contains \"Power Management Username      : testing\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : qwertz\" for system \"sle_minion\"\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Check power management SSM operation for Redfish\n+    Given I am authorized\n+    And I am on System Set Manager Overview\n+    And I follow \"power management operations\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Power On\" button\n+    And I should see a \"Power Off\" button\n+    And I should see a \"Reboot\" button\n+\n+  Scenario: Cleanup: reset Redfish values\n+    Given I am logged in via XML-RPC powermgmt as user \"admin\" and password \"admin\"\n+    And I want to operate on this \"sle_minion\"\n+    Then I set power management value \"\" for \"powerAddress\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDQwNA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560404", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:10:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjQwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjYxMw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504022613", "bodyText": "\"Then\", \"should\"", "author": "Bischoff", "createdAt": "2020-10-13T14:57:57Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"\n+    Then I click on \"Power On\"\n+    And I should see a \"system has been powered on\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    Then I click on \"Reboot\"\n+    And I should see a \"system has been rebooted\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+\n+  Scenario: Check power management SSM configuration for Redfish\n+    Given I am authorized\n+    And I am on the System Overview page\n+    And I check the \"sle_minion\" client\n+    And I am on System Set Manager Overview\n+    And I follow \"Configure power management\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Change Power Management Configuration\" text\n+    And I should see a \"Type\" text\n+    And I should see a \"Network address\" text\n+    And I should see a \"Username\" text\n+    And I should see a \"Password\" text\n+    And I should see a \"System identifier\" text\n+    And I should see a \"Update\" button\n+    When I enter \"testing\" as \"powerUsername\"\n+    And I enter \"qwertz\" as \"powerPassword\"\n+    And I click on \"Update\"\n+    Then I should see a \"Configuration successfully saved for 1 system(s)\" text\n+    And the cobbler report contains \"Power Management Username      : testing\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : qwertz\" for system \"sle_minion\"\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Check power management SSM operation for Redfish\n+    Given I am authorized\n+    And I am on System Set Manager Overview\n+    And I follow \"power management operations\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Power On\" button\n+    And I should see a \"Power Off\" button\n+    And I should see a \"Reboot\" button\n+\n+  Scenario: Cleanup: reset Redfish values\n+    Given I am logged in via XML-RPC powermgmt as user \"admin\" and password \"admin\"\n+    And I want to operate on this \"sle_minion\"\n+    Then I set power management value \"\" for \"powerAddress\"\n+    And I set power management value \"\" for \"powerUsername\"\n+    And I set power management value \"\" for \"powerPassword\"\n+    And I set power management value \"ipmitool\" for \"powerType\"\n+    And the cobbler report contains \"Power Management Address       :\" for system \"sle_minion\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDQ4NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560484", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjc2Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504022763", "bodyText": "or \"When\"", "author": "Bischoff", "createdAt": "2020-10-13T14:58:09Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"\n+    Then I click on \"Get status\"\n+    And I should see the power is \"Off\"\n+    Then I click on \"Power On\"\n+    And I should see a \"system has been powered on\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    Then I click on \"Reboot\"\n+    And I should see a \"system has been rebooted\" text\n+    Then I click on \"Get status\"\n+    And I should see the power is \"On\"\n+\n+  Scenario: Check power management SSM configuration for Redfish\n+    Given I am authorized\n+    And I am on the System Overview page\n+    And I check the \"sle_minion\" client\n+    And I am on System Set Manager Overview\n+    And I follow \"Configure power management\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Change Power Management Configuration\" text\n+    And I should see a \"Type\" text\n+    And I should see a \"Network address\" text\n+    And I should see a \"Username\" text\n+    And I should see a \"Password\" text\n+    And I should see a \"System identifier\" text\n+    And I should see a \"Update\" button\n+    When I enter \"testing\" as \"powerUsername\"\n+    And I enter \"qwertz\" as \"powerPassword\"\n+    And I click on \"Update\"\n+    Then I should see a \"Configuration successfully saved for 1 system(s)\" text\n+    And the cobbler report contains \"Power Management Username      : testing\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : qwertz\" for system \"sle_minion\"\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Check power management SSM operation for Redfish\n+    Given I am authorized\n+    And I am on System Set Manager Overview\n+    And I follow \"power management operations\" in the content area\n+    Then I should see \"sle_minion\" as link\n+    And I should see a \"Power On\" button\n+    And I should see a \"Power Off\" button\n+    And I should see a \"Reboot\" button\n+\n+  Scenario: Cleanup: reset Redfish values\n+    Given I am logged in via XML-RPC powermgmt as user \"admin\" and password \"admin\"\n+    And I want to operate on this \"sle_minion\"\n+    Then I set power management value \"\" for \"powerAddress\"\n+    And I set power management value \"\" for \"powerUsername\"\n+    And I set power management value \"\" for \"powerPassword\"\n+    And I set power management value \"ipmitool\" for \"powerType\"\n+    And the cobbler report contains \"Power Management Address       :\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      :\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      :\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : ipmitool\" for system \"sle_minion\"\n+\n+  Scenario: Cleanup: don't fake a Redfish host\n+    Given the server stops mocking a Redfish host", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDU5Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560597", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyMjc2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504024084", "bodyText": "Excellent :-) directly from the standards\nOnly problem is it will fail if we have no external network at this point in time. But I still like it more than copying it to our git.", "author": "Bischoff", "createdAt": "2020-10-13T14:59:46Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -445,6 +445,25 @@\n   $server.run(\"kill $(pidof -x fake_ipmi_host.sh)\")\n end\n \n+When(/^the server starts mocking a Redfish host$/) do\n+  $server.run(\"mkdir -p /root/Redfish-Mockup-Server/\")\n+  [\"redfishMockupServer.py\", \"rfSsdpServer.py\"].each do |file|\n+    source = File.dirname(__FILE__) + '/../upload_files/Redfish-Mockup-Server/' + file\n+    dest = \"/root/Redfish-Mockup-Server/\" + file\n+    return_code = file_inject($server, source, dest)\n+    raise 'File injection failed' unless return_code.zero?\n+  end\n+  $server.run(\"curl --output DSP2043_2019.1.zip https://www.dmtf.org/sites/default/files/standards/documents/DSP2043_2019.1.zip\")", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0OTQ1Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504049453", "bodyText": "Could we please add it to our mirrors? better not have dependencies with external network.", "author": "srbarrios", "createdAt": "2020-10-13T15:30:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MDk1Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504560952", "bodyText": "Nuremberg instances do not use a mirror. We need to think about a better solution", "author": "mcalmer", "createdAt": "2020-10-14T10:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU4OTc3Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504589776", "bodyText": "Ok, then we might need something like that:\ndef use_mirror(domain)\n  if ENV['SERVER'].include? 'mgr.prv.suse.net'\n    domain\n  else\n    'minima-mirror.mgr.prv.suse.net'\n  end\nend\n\n $server.run(\"curl --output DSP2043_2019.1.zip https://#{use_mirror('www.dmtf.org')}/sites/default/files/standards/documents/DSP2043_2019.1.zip\")", "author": "srbarrios", "createdAt": "2020-10-14T11:04:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5MTAzNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504591035", "bodyText": "Anyhow, nevermind, we can make it in a different PR, don't bother with that for now...", "author": "srbarrios", "createdAt": "2020-10-14T11:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYxODQxMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504618410", "bodyText": "I thought to put it on one of our server, but for Uyuni users this is not reachable. So downloading from DMTF directly seems to be the best approach for now. Feel free to come up with a solution which works for us and the community.", "author": "mcalmer", "createdAt": "2020-10-14T11:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYzMTE0Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504631143", "bodyText": "Yes, let's think twice and do it in a different PR", "author": "mcalmer", "createdAt": "2020-10-14T12:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDc2Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504024763", "bodyText": "I would even put one parameter per line, I'm not a big fan of very long lines", "author": "Bischoff", "createdAt": "2020-10-13T15:00:37Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -445,6 +445,25 @@\n   $server.run(\"kill $(pidof -x fake_ipmi_host.sh)\")\n end\n \n+When(/^the server starts mocking a Redfish host$/) do\n+  $server.run(\"mkdir -p /root/Redfish-Mockup-Server/\")\n+  [\"redfishMockupServer.py\", \"rfSsdpServer.py\"].each do |file|\n+    source = File.dirname(__FILE__) + '/../upload_files/Redfish-Mockup-Server/' + file\n+    dest = \"/root/Redfish-Mockup-Server/\" + file\n+    return_code = file_inject($server, source, dest)\n+    raise 'File injection failed' unless return_code.zero?\n+  end\n+  $server.run(\"curl --output DSP2043_2019.1.zip https://www.dmtf.org/sites/default/files/standards/documents/DSP2043_2019.1.zip\")\n+  $server.run(\"unzip DSP2043_2019.1.zip\")\n+  cmd = \"/usr/bin/python3 /root/Redfish-Mockup-Server/redfishMockupServer.py -H #{$server.full_hostname} -p 8443 -S \" \\", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MTIxNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504561217", "bodyText": "done, but I tried to keep belonging params together", "author": "mcalmer", "createdAt": "2020-10-14T10:11:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDc2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDk4MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504024980", "bodyText": "should", "author": "Bischoff", "createdAt": "2020-10-13T15:00:54Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -474,7 +493,13 @@\n   node.run('rm /tmp/test_user_defined_state')\n end\n \n-Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, system|\n+Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, host|", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MTM0Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504561346", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:12:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNDk4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNTEyOA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504025128", "bodyText": "should", "author": "Bischoff", "createdAt": "2020-10-13T15:01:05Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -474,7 +493,13 @@\n   node.run('rm /tmp/test_user_defined_state')\n end\n \n-Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, system|\n+Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, host|\n+  node = get_target(host)\n+  output = sshcmd(\"cobbler system report --name #{node.full_hostname}:1\", ignore_err: true)[:stdout]\n+  raise \"Not found: #{output}\" unless output.include?(arg1)\n+end\n+\n+Then(/^the cobbler report contains \"([^\"]*)\" for cobbler system \"([^\"]*)\"$/) do |arg1, system|", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MTQ3OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504561478", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNTEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MDg1Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504050857", "bodyText": "I prefer single quotes if we don't have something that needs to be escaped.\nIt applies to different places of these lines.", "author": "srbarrios", "createdAt": "2020-10-13T15:32:13Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -445,6 +445,25 @@\n   $server.run(\"kill $(pidof -x fake_ipmi_host.sh)\")\n end\n \n+When(/^the server starts mocking a Redfish host$/) do\n+  $server.run(\"mkdir -p /root/Redfish-Mockup-Server/\")\n+  [\"redfishMockupServer.py\", \"rfSsdpServer.py\"].each do |file|", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MTU4OA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504561588", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MDg1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NTE5NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504055194", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              raise \"Not found: #{output}\" unless output.include?(arg1)\n          \n          \n            \n              raise \"Not found:\\n#{output}\" unless output.include?(arg1)", "author": "srbarrios", "createdAt": "2020-10-13T15:37:38Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -474,7 +493,13 @@\n   node.run('rm /tmp/test_user_defined_state')\n end\n \n-Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, system|\n+Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, host|\n+  node = get_target(host)\n+  output = sshcmd(\"cobbler system report --name #{node.full_hostname}:1\", ignore_err: true)[:stdout]\n+  raise \"Not found: #{output}\" unless output.include?(arg1)", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MTY3Nw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504561677", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:12:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NTE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NTk1MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504055950", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, host|\n          \n          \n            \n            Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |text, system|", "author": "srbarrios", "createdAt": "2020-10-13T15:38:43Z", "path": "testsuite/features/step_definitions/command_steps.rb", "diffHunk": "@@ -474,7 +493,13 @@\n   node.run('rm /tmp/test_user_defined_state')\n end\n \n-Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, system|\n+Then(/^the cobbler report contains \"([^\"]*)\" for system \"([^\"]*)\"$/) do |arg1, host|", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjA2OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504562069", "bodyText": "not done. We use \"host\" when we expect something like 'sle_client' or 'sle_minion'.", "author": "mcalmer", "createdAt": "2020-10-14T10:13:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NTk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NzUwNQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504057505", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When(/^I enter \"([^\"]*)\" as the redfish server address$/) do |host|\n          \n          \n            \n            When(/^I enter the server hostname as the redfish server address$/) do", "author": "srbarrios", "createdAt": "2020-10-13T15:40:51Z", "path": "testsuite/features/step_definitions/navigation_steps.rb", "diffHunk": "@@ -950,3 +950,8 @@\n When(/^I select the next maintenance window$/) do\n   find(:xpath, \"//select[@id='maintenance-window-select']/option\", match: :first).select_option\n end\n+\n+When(/^I enter \"([^\"]*)\" as the redfish server address$/) do |host|", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1ODE5NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504058195", "bodyText": "In my opinion, if we are already sticking into use it only on the server node, in other steps like the stop.\nWe shouldn't allow here to pass other values. Just create a sentence without parameters, it's fine.", "author": "srbarrios", "createdAt": "2020-10-13T15:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NzUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjE3NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504562174", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T10:13:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NzUwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA2MDA5Mg==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504060092", "bodyText": "I would just hide the point that we are moking it, in our Gherkin scenarios.\nThe implementation we make behind the scenarios shouldn't be important at the test description level.\nIt should just be part of the tets framework, but not part of the step definitions or Scenario description.", "author": "srbarrios", "createdAt": "2020-10-13T15:44:18Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYxNDc4NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504614785", "bodyText": "done", "author": "mcalmer", "createdAt": "2020-10-14T11:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA2MDA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA2MzEyNw==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504063127", "bodyText": "Please just add a timeout of 20 seconds inside the step definition of I should see the power is \"Unknown\", so we can get rid of steps like I wait for x seconds", "author": "srbarrios", "createdAt": "2020-10-13T15:48:25Z", "path": "testsuite/features/secondary/srv_power_management_redfish.feature", "diffHunk": "@@ -0,0 +1,95 @@\n+# Copyright (c) 2020 SUSE LLC\n+# Licensed under the terms of the MIT license.\n+\n+Feature: Power management\n+\n+  Scenario: Fake a Redfish host\n+    Given the server starts mocking a Redfish host\n+\n+  Scenario: Save power management values for Redfish\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    When I enter \"server\" as the redfish server address\n+    And I enter \"ipmiusr\" as \"powerUsername\"\n+    And I enter \"test\" as \"powerPassword\"\n+    And I select \"Redfish\" from \"powerType\"\n+    And I click on \"Save\"\n+    Then I should see a \"Power settings saved\" text\n+    And the cobbler report contains \":8443\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Username      : ipmiusr\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Password      : test\" for system \"sle_minion\"\n+    And the cobbler report contains \"Power Management Type          : redfish\" for system \"sle_minion\"\n+\n+  Scenario: Test Redfish functions\n+    Given I am on the Systems overview page of this \"sle_minion\"\n+    And I follow \"Provisioning\" in the content area\n+    And I follow \"Power Management\" in the content area\n+    Then I click on \"Power On\"\n+    And I click on \"Get status\"\n+    And I should see the power is \"On\"\n+    And I click on \"Power Off\"\n+    And I should see a \"system has been powered off\" text\n+    And I wait for \"20\" seconds\n+    And I should see the power is \"Unknown\"", "originalCommit": "9f9bd28d36c8d648f8be995342768b2bb6c1a74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYxNDcxMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2698#discussion_r504614710", "bodyText": "I think the wait is useless. Maybe a artifact from the times when we used a real IPMI system. I will remove it", "author": "mcalmer", "createdAt": "2020-10-14T11:52:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA2MzEyNw=="}], "type": "inlineReview"}, {"oid": "448a02d52cce8017f946599dc055fff7c6e3e2bd", "url": "https://github.com/uyuni-project/uyuni/commit/448a02d52cce8017f946599dc055fff7c6e3e2bd", "message": "provide Redfish-Mockup-Server from our git", "committedDate": "2020-10-14T08:33:26Z", "type": "forcePushed"}, {"oid": "fa5cef6fa24c06ff5329945b77837edd2b706569", "url": "https://github.com/uyuni-project/uyuni/commit/fa5cef6fa24c06ff5329945b77837edd2b706569", "message": "Clear SSM before working with it", "committedDate": "2020-10-14T12:20:12Z", "type": "forcePushed"}, {"oid": "98dd1d91a4849fb42fffc220b0f8004cb3ca85ef", "url": "https://github.com/uyuni-project/uyuni/commit/98dd1d91a4849fb42fffc220b0f8004cb3ca85ef", "message": "enable redfish by default", "committedDate": "2020-10-15T07:33:46Z", "type": "commit"}, {"oid": "59f3873616728ca93c4ca951e8a651a394a9ab56", "url": "https://github.com/uyuni-project/uyuni/commit/59f3873616728ca93c4ca951e8a651a394a9ab56", "message": "cucumber tests for redfish power management", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "1d3e594073993515b2674671af2abd38cd4247e3", "url": "https://github.com/uyuni-project/uyuni/commit/1d3e594073993515b2674671af2abd38cd4247e3", "message": "update changelog", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "708390bfe767ab2ef7ca05312a548075bbd5cadd", "url": "https://github.com/uyuni-project/uyuni/commit/708390bfe767ab2ef7ca05312a548075bbd5cadd", "message": "copy Redfish-Mockup-Server to our git\n\nhttps://github.com/DMTF/Redfish-Mockup-Server", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "7a708f91bf199d952cd8583ff796b36526f82d5a", "url": "https://github.com/uyuni-project/uyuni/commit/7a708f91bf199d952cd8583ff796b36526f82d5a", "message": "make python grequests optional\n\nnot needed for our usecase and we can save a lot of dependencies", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "4d22fee0fbd78b36e2d7bfefa4fafda25e6c2a62", "url": "https://github.com/uyuni-project/uyuni/commit/4d22fee0fbd78b36e2d7bfefa4fafda25e6c2a62", "message": "provide Redfish-Mockup-Server from our git", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "4ea6680f625da33e2ba216d1bee7f12006ff8061", "url": "https://github.com/uyuni-project/uyuni/commit/4ea6680f625da33e2ba216d1bee7f12006ff8061", "message": "refactor test descriptions", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "4551fef5c5f4fc75765bb4abb9a3bac43c04f4a4", "url": "https://github.com/uyuni-project/uyuni/commit/4551fef5c5f4fc75765bb4abb9a3bac43c04f4a4", "message": "Clear SSM before working with it", "committedDate": "2020-10-15T07:33:47Z", "type": "commit"}, {"oid": "d6c872c23fbb50de559a0c84e7546834d32ec499", "url": "https://github.com/uyuni-project/uyuni/commit/d6c872c23fbb50de559a0c84e7546834d32ec499", "message": "fix broken VAR name", "committedDate": "2020-10-15T07:35:10Z", "type": "commit"}, {"oid": "d6c872c23fbb50de559a0c84e7546834d32ec499", "url": "https://github.com/uyuni-project/uyuni/commit/d6c872c23fbb50de559a0c84e7546834d32ec499", "message": "fix broken VAR name", "committedDate": "2020-10-15T07:35:10Z", "type": "forcePushed"}]}