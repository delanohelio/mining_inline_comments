{"pr_number": 1854, "pr_title": "Testsuite - salt parser json exception catch", "pr_createdAt": "2020-02-01T09:22:43Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/1854", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NjIyOQ==", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373786229", "bodyText": "If we want to perform a continue in the iteration, I'd move the except block a line after, as following code is also using j content:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                except ValueError as e:\n          \n          \n            \n                try:\n          \n          \n            \n                    j = json.loads(\"\".join(error))\n          \n          \n            \n                    if not \"return\" in j:\n          \n          \n            \n                        break\n          \n          \n            \n                except ValueError as e:\n          \n          \n            \n                    print(\"JSON cannot be parsed due {0}\".format(e))\n          \n          \n            \n                    continue\n          \n          \n            \n                for k in j[\"return\"]:\n          \n          \n            \n                    if not j[\"return\"][k][\"result\"]:\n          \n          \n            \n                        failure_count += 1\n          \n          \n            \n                        print(\"\\n# Failure\", failure_count, \", _stamp:\", j['_stamp'], json.dumps(j[\"return\"][k], sort_keys=True, indent=4))\n          \n      \n    \n    \n  \n\nAlso, we can let it as it is, but making sure on next steps that we check if j has content to process.", "author": "srbarrios", "createdAt": "2020-02-01T15:42:26Z", "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:", "originalCommit": "07a14ce0c27ca790525d158fb6176dcc31cb3d60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4MDg0Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373980843", "bodyText": "@srbarrios Change included, thanks ;-)", "author": "lkotek", "createdAt": "2020-02-03T08:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NjIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3ODE1MA==", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373978150", "bodyText": "due to", "author": "Bischoff", "createdAt": "2020-02-03T08:47:07Z", "path": "testsuite/features/upload_files/salt_event_parser.py", "diffHunk": "@@ -5,21 +5,25 @@\n \n # open salt event log and create correct json from it\n errors = []\n-item = [] \n+item = []\n f = open('/var/log/rhn/salt-event.log', \"r\")\n for line in f.readlines():\n     item.append(line)\n     if re.search(r\"^\\}\", line):\n         if '\\\"result\\\": false' in \"\".join(item):\n             item[0] = \"{\"\n             errors.append(item)\n-        item = [] \n+        item = []\n f.close()\n \n # parse json and find results ending as failed\n failure_count = 0\n for error in errors:\n-    j = json.loads(\"\".join(error))\n+    try:\n+        j = json.loads(\"\".join(error))\n+    except ValueError as e:\n+        print(\"JSON cannot be parsed due {0}\".format(e))", "originalCommit": "07a14ce0c27ca790525d158fb6176dcc31cb3d60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NzA5MA==", "url": "https://github.com/uyuni-project/uyuni/pull/1854#discussion_r373987090", "bodyText": "Thanks :-) Corrected.", "author": "lkotek", "createdAt": "2020-02-03T09:07:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3ODE1MA=="}], "type": "inlineReview"}, {"oid": "a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "url": "https://github.com/uyuni-project/uyuni/commit/a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "message": "salt parser json exception catch", "committedDate": "2020-02-03T09:07:14Z", "type": "commit"}, {"oid": "a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "url": "https://github.com/uyuni-project/uyuni/commit/a6c0e8c498bda0ef64cf51f980bb6df4c8c6710c", "message": "salt parser json exception catch", "committedDate": "2020-02-03T09:07:14Z", "type": "forcePushed"}]}