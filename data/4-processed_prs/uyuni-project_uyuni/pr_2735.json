{"pr_number": 2735, "pr_title": "Reposync add timeout config", "pr_createdAt": "2020-10-19T16:21:45Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/2735", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNjgyMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r531136821", "bodyText": "Why is the reason of removing this block? Wouldn't we miss to do:\nself.curl_obj.setopt(pycurl.FORBID_REUSE, 0)", "author": "meaksh", "createdAt": "2020-11-26T16:32:07Z", "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -138,11 +138,6 @@ def _do_perform(self):\n                 self.parent.first_in_queue_done = True\n                 self.parent.first_in_queue_lock.release()\n \n-    def _set_opts(self, opts=None):\n-        if not opts:\n-            opts = {}\n-        PyCurlFileObject._set_opts(self, opts=opts)\n-        self.curl_obj.setopt(pycurl.FORBID_REUSE, 0) # pylint: disable=E1101", "originalCommit": "fffa0ada67d293882addc267d9828e8257332158", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMTUwMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r531521501", "bodyText": "I think we don't need that here if we pass keepalive=True as part of the options when we instantiate PyCurlFileObjectThread.\n# urlgrabber/grabber.py\nclass PyCurlFileObject(object):\n    def __init__(self, url, filename, opts):\n        self.opts=opts\n        # ...\n\n    def _set_opts(self, opts={}):\n        # XXX\n        if not opts:\n            opts = self.opts\n\n        # keepalives\n        if not opts.keepalive:\n            self.curl_obj.setopt(pycurl.FORBID_REUSE, 1)\n     \n        # ... \nMy understanding is that setting FORBID_REUSE to 0 is only needed because we let urlgrabber set it to 1 by not specifying keepalive=True. I've added that to the opts dict in line 215.\nCurl's default is 0 (docs), as long as we don't set it to 1 we should be fine.", "author": "agraul", "createdAt": "2020-11-27T10:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNjgyMQ=="}], "type": "inlineReview"}, {"oid": "fbfd6c97ff4fc16d015444c89f06bd170ad3d767", "url": "https://github.com/uyuni-project/uyuni/commit/fbfd6c97ff4fc16d015444c89f06bd170ad3d767", "message": "Use super() for inheritance", "committedDate": "2020-11-27T10:50:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyOTg1MA==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r531529850", "bodyText": "Here I was not sure if this should be its own setting or if we want to re-use timeout in rhn_server.conf.\nI think the former, but I'm interested in what you are thinking.", "author": "agraul", "createdAt": "2020-11-27T10:56:19Z", "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT", "originalCommit": "fbfd6c97ff4fc16d015444c89f06bd170ad3d767", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0Mzc4Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594343783", "bodyText": "I'd also say we should keep this as a separate setting. Using the rhn config would be kind of surprising, especially since its use-case is the rpclib right now.", "author": "brejoc", "createdAt": "2021-03-15T13:41:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyOTg1MA=="}], "type": "inlineReview"}, {"oid": "4f9065c9509b05bd5345635e9043a5c0fed905e2", "url": "https://github.com/uyuni-project/uyuni/commit/4f9065c9509b05bd5345635e9043a5c0fed905e2", "message": "Use super() for inheritance", "committedDate": "2021-02-18T15:05:32Z", "type": "forcePushed"}, {"oid": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3", "url": "https://github.com/uyuni-project/uyuni/commit/bf4a0ac026acc20a0161d71ba75348cbfb2a84a3", "message": "Use super() for inheritance", "committedDate": "2021-02-25T17:39:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0NDgxMA==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594344810", "bodyText": "I think this is a copy-paste error.", "author": "brejoc", "createdAt": "2021-03-15T13:42:33Z", "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT\n+        except ValueError:\n+            raise ValueError(\n+                \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS", "originalCommit": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDQ0NDQ0Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594444446", "bodyText": "yes, thanks!", "author": "agraul", "createdAt": "2021-03-15T15:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0NDgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0NTM1NA==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594345354", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n          \n          \n            \n                            \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_TIMEOUT", "author": "brejoc", "createdAt": "2021-03-15T13:43:18Z", "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -278,16 +282,31 @@ class ThreadedDownloader:\n     def __init__(self, retries=3, log_obj=None, force=False):\n         self.queues = {}\n         comp = CFG.getComponent()\n-        initCFG('server.satellite')\n+        initCFG(\"server.satellite\")\n         try:\n             self.threads = int(CFG.REPOSYNC_DOWNLOAD_THREADS)\n         except ValueError:\n-            initCFG(comp)\n-            raise ValueError(\"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS)\n-        else:\n-            initCFG(comp)\n+            raise ValueError(\n+                \"Number of threads expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS\n+            )\n+        try:\n+            self.timeout = int(CFG.REPOSYNC_TIMEOUT)  # we could also use CFG.TIMEOUT\n+        except ValueError:\n+            raise ValueError(\n+                \"Timeout in seconds expected, found: '%s'\" % CFG.REPOSYNC_DOWNLOAD_THREADS", "originalCommit": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDU0OTAwMQ==", "url": "https://github.com/uyuni-project/uyuni/pull/2735#discussion_r594549001", "bodyText": "self shouldn't be passed here (noting here so I don't forget to change it)", "author": "agraul", "createdAt": "2021-03-15T17:40:15Z", "path": "backend/satellite_tools/download.py", "diffHunk": "@@ -132,26 +132,20 @@ def _do_perform(self):\n             if self.parent.first_in_queue_done:\n                 self.parent.first_in_queue_lock.release()\n         try:\n-            PyCurlFileObject._do_perform(self)\n+            super()._do_perform(self)", "originalCommit": "bf4a0ac026acc20a0161d71ba75348cbfb2a84a3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "606af4a792353ba2e4eb639a3c14a688a732b053", "url": "https://github.com/uyuni-project/uyuni/commit/606af4a792353ba2e4eb639a3c14a688a732b053", "message": "Test that reposync config values are used", "committedDate": "2021-03-16T18:39:13Z", "type": "forcePushed"}, {"oid": "da1c8bf0f6bfdc69139fca6a73062fa0bd70396e", "url": "https://github.com/uyuni-project/uyuni/commit/da1c8bf0f6bfdc69139fca6a73062fa0bd70396e", "message": "Add timeout/minrate config values to reposync\n\nAdd a configuration value for setting the minimal transfer rate and a\ntimeout period. If the transfer speed falls under the minimal transfer\nrate for the timeout duration, the download is aborted.\n\nI've reused the variable names (\"minrate\", \"timeout\") from urlgrabber.", "committedDate": "2021-03-18T13:12:12Z", "type": "commit"}, {"oid": "fd1b088ee1c0a711d6f2490b811eca46497a39a7", "url": "https://github.com/uyuni-project/uyuni/commit/fd1b088ee1c0a711d6f2490b811eca46497a39a7", "message": "Use super() for inheritance", "committedDate": "2021-03-18T13:12:23Z", "type": "commit"}, {"oid": "577c49800a4bcb485870b0a1197a67875a293b1b", "url": "https://github.com/uyuni-project/uyuni/commit/577c49800a4bcb485870b0a1197a67875a293b1b", "message": "Test that reposync config values are used", "committedDate": "2021-03-18T13:12:24Z", "type": "commit"}, {"oid": "577c49800a4bcb485870b0a1197a67875a293b1b", "url": "https://github.com/uyuni-project/uyuni/commit/577c49800a4bcb485870b0a1197a67875a293b1b", "message": "Test that reposync config values are used", "committedDate": "2021-03-18T13:12:24Z", "type": "forcePushed"}]}