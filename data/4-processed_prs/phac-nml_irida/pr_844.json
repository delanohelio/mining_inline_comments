{"pr_number": 844, "pr_title": "Announcements upgrade database", "pr_createdAt": "2020-10-28T15:33:42Z", "pr_url": "https://github.com/phac-nml/irida/pull/844", "timeline": [{"oid": "bda6a980f272a4a1fe39a88beb7cfbf1dd07a435", "url": "https://github.com/phac-nml/irida/commit/bda6a980f272a4a1fe39a88beb7cfbf1dd07a435", "message": "adding liquibase changes to add new title and priority columns to the announcements table", "committedDate": "2020-10-28T15:01:31Z", "type": "commit"}, {"oid": "09c38933065c2f73c8ada70f797482f68931d95a", "url": "https://github.com/phac-nml/irida/commit/09c38933065c2f73c8ada70f797482f68931d95a", "message": "adding scripts that populate the new title column in the announcements table", "committedDate": "2020-10-28T15:16:32Z", "type": "commit"}, {"oid": "e82ed0098fcc74120f96a3c417f4e313dbb80de2", "url": "https://github.com/phac-nml/irida/commit/e82ed0098fcc74120f96a3c417f4e313dbb80de2", "message": "reflecting the new announcement changes in the model object", "committedDate": "2020-10-28T19:41:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjA1Ng==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r513696056", "bodyText": "Check in the hibernate generated database for these _AUD fields, but I would assume these fields are nullable in the _AUD tables.  The constraints in the liquibase version of the db should match the hibernate version.", "author": "tom114", "createdAt": "2020-10-28T19:09:55Z", "path": "src/main/resources/ca/corefacility/bioinformatics/irida/database/changesets/21.01/announcements_upgrade.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd\">\n+\n+    <changeSet id=\"announcement_upgrade\" author=\"katherine\">\n+        <addColumn tableName=\"announcement\">\n+            <column name=\"title\" type=\"varchar(255)\" />\n+        </addColumn>\n+        <addColumn tableName=\"announcement\">\n+            <column name=\"priority\" type=\"tinyint(1)\">\n+                <constraints nullable=\"false\" />\n+            </column>\n+        </addColumn>\n+\n+        <addColumn tableName=\"announcement_AUD\">\n+            <column name=\"title\" type=\"varchar(255)\" />\n+        </addColumn>\n+        <addColumn tableName=\"announcement_AUD\">\n+            <column name=\"priority\" type=\"tinyint(1)\">\n+                <constraints nullable=\"false\" />", "originalCommit": "09c38933065c2f73c8ada70f797482f68931d95a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwMjk3Nw==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r514402977", "bodyText": "The hibernate generated database set priority to null=\"true\" in the announcement_AUD table. I will fix this to reflect hibernate. Please see 8328ac4.", "author": "ksierks", "createdAt": "2020-10-29T16:36:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2ODI3Ng==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r514468276", "bodyText": "Yeah I assumed.  That's what we usually see with the not null things in the _AUD tables.  You can just remove the constraint here.", "author": "tom114", "createdAt": "2020-10-29T18:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjA1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjM4MA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r513696380", "bodyText": "Do we have a default for the priority?  If not I believe when upgrading an existing database this priority may fail.\nI tested and it looks like it defaulted everything to 0, but it would be better not to rely on chance.  I think if you add a value=0 to the column tag it'll definitively set the priority to false.", "author": "tom114", "createdAt": "2020-10-28T19:10:29Z", "path": "src/main/resources/ca/corefacility/bioinformatics/irida/database/changesets/21.01/announcements_upgrade.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd\">\n+\n+    <changeSet id=\"announcement_upgrade\" author=\"katherine\">\n+        <addColumn tableName=\"announcement\">\n+            <column name=\"title\" type=\"varchar(255)\" />\n+        </addColumn>\n+        <addColumn tableName=\"announcement\">\n+            <column name=\"priority\" type=\"tinyint(1)\">\n+                <constraints nullable=\"false\" />", "originalCommit": "09c38933065c2f73c8ada70f797482f68931d95a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQxMzAxMg==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r514413012", "bodyText": "Done.", "author": "ksierks", "createdAt": "2020-10-29T16:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzQyMQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r513697421", "bodyText": "Can we get some documentation in these files?  Particularly a big statement at the top about what the scripts are doing.  I can see in previous update scripts in here there isn't much but we should do it in the future.\nWe'll write up a big info section in the UPGRADING.md guide and probably https://irida.corefacility.ca/documentation/administrator/upgrades/ about these but still worthwhile to add something to the files themselves.", "author": "tom114", "createdAt": "2020-10-28T19:12:34Z", "path": "src/main/resources/scripts/announcements/generate_json.py", "diffHunk": "@@ -0,0 +1,59 @@\n+#!/usr/bin/python\n+import argparse\n+from bs4 import BeautifulSoup\n+import json\n+from markdown import markdown\n+import mysql.connector\n+import re\n+\n+def create_json_file(json_file, host, user, password, database):", "originalCommit": "09c38933065c2f73c8ada70f797482f68931d95a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyMzExMA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r514423110", "bodyText": "Done. I'm not a great writer. Hopefully, this will suffice. Please see 19a454c.", "author": "ksierks", "createdAt": "2020-10-29T17:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NzkyNQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515157925", "bodyText": "Perfect for the block comment.  Thanks @ksierks !", "author": "tom114", "createdAt": "2020-10-30T14:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcxNzE4OA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r513717188", "bodyText": "This is a bit pedantic, but in most cases we like to use the primitive boolean where we can in the models.  Capital B Boolean sometimes can get us into a weird tri-state since it can also be null.", "author": "tom114", "createdAt": "2020-10-28T19:48:22Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/model/announcements/Announcement.java", "diffHunk": "@@ -48,10 +48,17 @@\n     @Column(name = \"created_date\", updatable = false)\n     private Date createdDate;\n \n+    @Column(name = \"title\")\n+    private String title;\n+\n     @Column(name = \"message\")\n     @Lob\n     private String message;\n \n+    @Column(name = \"priority\")\n+    @NotNull\n+    private Boolean priority;", "originalCommit": "e82ed0098fcc74120f96a3c417f4e313dbb80de2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ4MzgwOA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r514483808", "bodyText": "Done. Please see 3b1ab44.", "author": "ksierks", "createdAt": "2020-10-29T18:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcxNzE4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcxOTcwNA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r513719704", "bodyText": "If we're having external libraries we'll need to include install instructions for those libraries, or a script or something to install.  Something like a script to build a virutalenv or something would be good.\nIf at all possible try to use base Python libraries.  I'm guessing this case is being used to render the md to HTML to pull out the title?", "author": "tom114", "createdAt": "2020-10-28T19:52:42Z", "path": "src/main/resources/scripts/announcements/generate_json.py", "diffHunk": "@@ -0,0 +1,59 @@\n+#!/usr/bin/python\n+import argparse\n+from bs4 import BeautifulSoup", "originalCommit": "e82ed0098fcc74120f96a3c417f4e313dbb80de2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2OTYxNw==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515069617", "bodyText": "I removed the external libraries. Please see f6aae03.", "author": "ksierks", "createdAt": "2020-10-30T12:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcxOTcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0MjgwMw==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r513742803", "bodyText": "This should probably also be not null.  It's a pain because we haven't set the titles yet with your python scripts.  An option would be to set a default value with the value=something tag here.  It could even be as simple as Announcement title not found.  At least that way we can set the not null constraint.", "author": "tom114", "createdAt": "2020-10-28T20:34:22Z", "path": "src/main/resources/ca/corefacility/bioinformatics/irida/database/changesets/21.01/announcements_upgrade.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd\">\n+\n+    <changeSet id=\"announcement_upgrade\" author=\"katherine\">\n+        <addColumn tableName=\"announcement\">\n+            <column name=\"title\" type=\"varchar(255)\" />", "originalCommit": "e82ed0098fcc74120f96a3c417f4e313dbb80de2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5Nzg1Mw==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r514497853", "bodyText": "Done. Please see 8328ac4 and dee5891.", "author": "ksierks", "createdAt": "2020-10-29T19:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0MjgwMw=="}], "type": "inlineReview"}, {"oid": "5e0137610a04374a1b730e8eb9f1a90a991b96be", "url": "https://github.com/phac-nml/irida/commit/5e0137610a04374a1b730e8eb9f1a90a991b96be", "message": "setting announcement priority column to default false", "committedDate": "2020-10-29T17:25:23Z", "type": "commit"}, {"oid": "19a454c15f2baadf1a22d9f7da226d04a5197912", "url": "https://github.com/phac-nml/irida/commit/19a454c15f2baadf1a22d9f7da226d04a5197912", "message": "adding some documentation to the python scripts", "committedDate": "2020-10-29T18:35:29Z", "type": "commit"}, {"oid": "3b1ab44793167beaede37b37b46c11335359f81f", "url": "https://github.com/phac-nml/irida/commit/3b1ab44793167beaede37b37b46c11335359f81f", "message": "changing announcement priority data type from Boolean to boolean", "committedDate": "2020-10-29T18:55:14Z", "type": "commit"}, {"oid": "8328ac4df67c43e5694c7ebf59f67836d836baf9", "url": "https://github.com/phac-nml/irida/commit/8328ac4df67c43e5694c7ebf59f67836d836baf9", "message": "adding default value to title in announcement table", "committedDate": "2020-10-29T19:03:30Z", "type": "commit"}, {"oid": "f6aae03c16b38cc1e465ff7a86fa8cece6297e0d", "url": "https://github.com/phac-nml/irida/commit/f6aae03c16b38cc1e465ff7a86fa8cece6297e0d", "message": "removing third party libraries from python script", "committedDate": "2020-10-30T12:32:00Z", "type": "commit"}, {"oid": "835920ad38513b8a0ec8efcff9a8ac8c1434ec7f", "url": "https://github.com/phac-nml/irida/commit/835920ad38513b8a0ec8efcff9a8ac8c1434ec7f", "message": "reverting change", "committedDate": "2020-10-30T12:53:59Z", "type": "commit"}, {"oid": "dee5891e98e3ed096e2edda6065051c62087d94d", "url": "https://github.com/phac-nml/irida/commit/dee5891e98e3ed096e2edda6065051c62087d94d", "message": "updating regular expression", "committedDate": "2020-10-30T13:47:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1ODQ2NQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515158465", "bodyText": "Since we've got this funky regex stuff going on in here can you add some inline comments on how this is working?", "author": "tom114", "createdAt": "2020-10-30T14:54:34Z", "path": "src/main/resources/scripts/announcements/generate_json.py", "diffHunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/python\n+import argparse\n+import json\n+import mysql.connector\n+import re\n+\n+# This script will fetch all the rows from the announcement table, then parse\n+# the title out from the message content and return a json file with the newly\n+# populated title and modified message content.\n+#\n+# Step #1: Run this script to generate a json file with the modified\n+# announcement data.\n+#\n+# Step #2: Please review the json file to make sure the title was parsed\n+# correctly from the message content.\n+#\n+# Step #3: To update the announcement table with the json file run the\n+# update_announcement.py script next.\n+\n+def create_json_file(json_file, host, user, password, database):\n+\n+    json_data = []\n+    json_file = open(json_file,\"w+\")\n+\n+    db = mysql.connector.connect(\n+        host=host,\n+        user=user,\n+        password=password,\n+        database=database\n+    )\n+    cursor = db.cursor()\n+    cursor.execute(\"SELECT id, created_date, created_by_id, title, message, priority FROM announcement\")\n+    result = cursor.fetchall()\n+    cursor.close()\n+    db.close()\n+\n+    for id, created_date, created_by_id, title, message, priority in result:\n+        \n+        if not title:\n+            lines = message.split(\"\\n\",1)\n+\n+            if len(lines) > 0:\n+                first_line = lines[0]\n+                header = re.match(r\"^#+\\s(.+)$\", first_line)\n+                \n+                if header:\n+                    title = header[1]\n+\n+                    if len(lines) > 1:\n+                        message = lines[1]\n+                else:\n+                    if len(lines) > 1:\n+                        lines = lines[1].split(\"\\n\",1)\n+\n+                        if len(lines) > 0:\n+                            second_line = lines[0]\n+                            underline = re.match(r\"^(-|=)+$\", second_line)\n+\n+                            if underline:\n+                                title = first_line\n+\n+                                if len(lines) > 1:\n+                                    message = lines[1]", "originalCommit": "dee5891e98e3ed096e2edda6065051c62087d94d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxNzg1Ng==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515217856", "bodyText": "Yeah, lots of if statements. Please see 649d364.", "author": "ksierks", "createdAt": "2020-10-30T16:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1ODQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1OTA0OQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515159049", "bodyText": "Since this field is not null in the liquibase please add @NotNull here as well please.", "author": "tom114", "createdAt": "2020-10-30T14:55:25Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/model/announcements/Announcement.java", "diffHunk": "@@ -48,10 +48,17 @@\n     @Column(name = \"created_date\", updatable = false)\n     private Date createdDate;\n \n+    @Column(name = \"title\")\n+    private String title;", "originalCommit": "dee5891e98e3ed096e2edda6065051c62087d94d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxNzQzOA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515217438", "bodyText": "Sorry I missed this. Please see bd781b5.", "author": "ksierks", "createdAt": "2020-10-30T16:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1OTA0OQ=="}], "type": "inlineReview"}, {"oid": "bd781b5750cdd53260d15238c2e6a9e398c09c1d", "url": "https://github.com/phac-nml/irida/commit/bd781b5750cdd53260d15238c2e6a9e398c09c1d", "message": "making announcement title not null", "committedDate": "2020-10-30T16:11:43Z", "type": "commit"}, {"oid": "649d36421ac3535ab3a16283aac93e9e96130a64", "url": "https://github.com/phac-nml/irida/commit/649d36421ac3535ab3a16283aac93e9e96130a64", "message": "adding more commments to python script", "committedDate": "2020-10-30T16:18:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyNjk2NQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515226965", "bodyText": "Looks like an accidental addition here", "author": "tom114", "createdAt": "2020-10-30T16:35:11Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/model/announcements/Announcement.java", "diffHunk": "@@ -31,7 +31,7 @@\n  * An announcement object. Announcements can be created only by admin users, and announcements\n  * are displayed on the dashboard page.\n  */\n-@Entity\n+@Entity.sql", "originalCommit": "649d36421ac3535ab3a16283aac93e9e96130a64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzMDgzNQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r515230835", "bodyText": "My mistake. Please see d57593d.", "author": "ksierks", "createdAt": "2020-10-30T16:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyNjk2NQ=="}], "type": "inlineReview"}, {"oid": "d57593d3e1ae927a707170237a803d18d7edb1c3", "url": "https://github.com/phac-nml/irida/commit/d57593d3e1ae927a707170237a803d18d7edb1c3", "message": "reverting mistake", "committedDate": "2020-10-30T16:40:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMzMxNA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516223314", "bodyText": "Unfortunately this isn't part of base python either.  You'll have to add instructions for how to install.  Please be sure to use something like a virtualenv.", "author": "tom114", "createdAt": "2020-11-02T20:03:37Z", "path": "src/main/resources/scripts/announcements/generate_json.py", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/python\n+import argparse\n+import json\n+import mysql.connector", "originalCommit": "d57593d3e1ae927a707170237a803d18d7edb1c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3MDgxOA==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516670818", "bodyText": "I hope a README would suffice? I don't really know how far to go with these instructions. Can we assume the user has Python and pip already installed? Do we need to specify where the scripts are run  to be run if they use a virtual env? If they run the scripts in place with a virtual env, a folder is created with the executable files. Do we add this folder to git ignore? Please see 7a9b7ea and 776a156.", "author": "ksierks", "createdAt": "2020-11-03T13:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMzMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcxMDg1MQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516710851", "bodyText": "Yup I think a README would be good.  I think you can definitely assume python & pip, but in general I like when it can be (mostly) foolproof with just giving them the list of commands.\nSo like:\n\nrun this to create the venv\nrun this to activate it\nrun this to install the necessary libraries\nThen here's some basic usage for how to run the scripts.\n\nIf this was a larger and more regularily used script, I'd say we need a full blown install process (such as the one with the IRIDA uploader https://github.com/phac-nml/irida-uploader/blob/development/Makefile).  In this case since its a \"run once and forget it\" thing I think just some instructions is fine.", "author": "tom114", "createdAt": "2020-11-03T14:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMzMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcyODM2Ng==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516728366", "bodyText": "Please see cad41a5 and 9fdf41f.", "author": "ksierks", "createdAt": "2020-11-03T14:55:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMzMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2OTk2Mw==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516769963", "bodyText": "That looks great.  Thanks!", "author": "tom114", "createdAt": "2020-11-03T15:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyMzMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNDc2NQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516224765", "bodyText": "Typically we've used the defaults as the defaults of our test database.  Use test/test for the defaults for user/password please.", "author": "tom114", "createdAt": "2020-11-02T20:06:29Z", "path": "src/main/resources/scripts/announcements/generate_json.py", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/python\n+import argparse\n+import json\n+import mysql.connector\n+import re\n+\n+# This script will fetch all the rows from the announcement table, then parse\n+# the title out from the message content and return a json file with the newly\n+# populated title and modified message content.\n+#\n+# Step #1: Run this script to generate a json file with the modified\n+# announcement data.\n+#\n+# Step #2: Please review the json file to make sure the title was parsed\n+# correctly from the message content.\n+#\n+# Step #3: To update the announcement table with the json file run the\n+# update_announcement.py script next.\n+\n+def create_json_file(json_file, host, user, password, database):\n+\n+    json_data = []\n+    json_file = open(json_file,\"w+\")\n+\n+    db = mysql.connector.connect(\n+        host=host,\n+        user=user,\n+        password=password,\n+        database=database\n+    )\n+    cursor = db.cursor()\n+    cursor.execute(\"SELECT id, created_date, created_by_id, title, message, priority FROM announcement\")\n+    result = cursor.fetchall()\n+    cursor.close()\n+    db.close()\n+\n+    for id, created_date, created_by_id, title, message, priority in result:\n+        \n+        if not title:\n+            # split the message into two,\n+            # the first line and the rest of the message\n+            lines = message.split(\"\\n\",1)\n+\n+            if len(lines) > 0:\n+                # check if the first line in the message is a header\n+                # by trying to find number signs in front of a word\n+                first_line = lines[0]\n+                header = re.match(r\"^#+\\s(.+)$\", first_line)\n+                \n+                if header:\n+                    title = header[1]\n+\n+                    if len(lines) > 1:\n+                        message = lines[1]\n+                else:\n+                    if len(lines) > 1:\n+                        # split the rest of the message into two again,\n+                        # the first line and the rest of the message\n+                        lines = lines[1].split(\"\\n\",1)\n+\n+                        if len(lines) > 0:\n+                            # check if the second line in the message is a header\n+                            # by trying to find any number of = or - characters\n+                            second_line = lines[0]\n+                            underline = re.match(r\"^(-|=)+$\", second_line)\n+\n+                            if underline:\n+                                title = first_line\n+\n+                                if len(lines) > 1:\n+                                    message = lines[1]\n+\n+            json_data.append({\"id\":id, \"created_date\":created_date, \"created_by_id\":created_by_id, \"title\":title, \"message\":message, \"priority\":priority})\n+\n+    # convert the list to a JSON string\n+    json_string = json.dumps(json_data, indent=2, default=str)\n+    json_file.write(json_string)\n+    json_file.close()\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser()\n+\n+    parser.add_argument( 'json_file', help=\"The output json file of announcement titles to be populated.\")\n+    parser.add_argument( '--host', default='localhost', help=\"The database host name.\", required=False)\n+    parser.add_argument( '--database', default='irida_test', help=\"The database name.\", required=False)\n+    parser.add_argument( '--user', default='root', help=\"The database user name.\", required=False)", "originalCommit": "d57593d3e1ae927a707170237a803d18d7edb1c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2OTU5Nw==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516669597", "bodyText": "Please see f79d1ff.", "author": "ksierks", "createdAt": "2020-11-03T13:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNDc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTc3OQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516241779", "bodyText": "Kinda a funky oops here.  You select for title, but since we're automatically adding the fake title to the announcements in the liquibase it means that none of them get added to this file.  If you remove this if it works as expected.", "author": "tom114", "createdAt": "2020-11-02T20:41:29Z", "path": "src/main/resources/scripts/announcements/generate_json.py", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/python\n+import argparse\n+import json\n+import mysql.connector\n+import re\n+\n+# This script will fetch all the rows from the announcement table, then parse\n+# the title out from the message content and return a json file with the newly\n+# populated title and modified message content.\n+#\n+# Step #1: Run this script to generate a json file with the modified\n+# announcement data.\n+#\n+# Step #2: Please review the json file to make sure the title was parsed\n+# correctly from the message content.\n+#\n+# Step #3: To update the announcement table with the json file run the\n+# update_announcement.py script next.\n+\n+def create_json_file(json_file, host, user, password, database):\n+\n+    json_data = []\n+    json_file = open(json_file,\"w+\")\n+\n+    db = mysql.connector.connect(\n+        host=host,\n+        user=user,\n+        password=password,\n+        database=database\n+    )\n+    cursor = db.cursor()\n+    cursor.execute(\"SELECT id, created_date, created_by_id, title, message, priority FROM announcement\")\n+    result = cursor.fetchall()\n+    cursor.close()\n+    db.close()\n+\n+    for id, created_date, created_by_id, title, message, priority in result:\n+        \n+        if not title:", "originalCommit": "d57593d3e1ae927a707170237a803d18d7edb1c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY2NTU2MQ==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516665561", "bodyText": "I forgot we changed the title to auto populate the title. I didn't think about the downstream effects. I changed the if statement to check that the message is populated. As long as the message comes back as an empty string, it's not needed. Please see 5e99a12.", "author": "ksierks", "createdAt": "2020-11-03T13:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTc3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc3MDI2Ng==", "url": "https://github.com/phac-nml/irida/pull/844#discussion_r516770266", "bodyText": "That seems to work now.  Thanks", "author": "tom114", "createdAt": "2020-11-03T15:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MTc3OQ=="}], "type": "inlineReview"}, {"oid": "5e99a12949d8abbde11ffbe791b35846b6d2e104", "url": "https://github.com/phac-nml/irida/commit/5e99a12949d8abbde11ffbe791b35846b6d2e104", "message": "title is getting auto populated by liquibase", "committedDate": "2020-11-03T13:23:58Z", "type": "commit"}, {"oid": "f79d1ffb165ec9620a3a465b77df392aa29b00e4", "url": "https://github.com/phac-nml/irida/commit/f79d1ffb165ec9620a3a465b77df392aa29b00e4", "message": "changing default database credentials on scripts", "committedDate": "2020-11-03T13:32:13Z", "type": "commit"}, {"oid": "7a9b7eaab92153dda3da0124fa24c5b7de0e32b4", "url": "https://github.com/phac-nml/irida/commit/7a9b7eaab92153dda3da0124fa24c5b7de0e32b4", "message": "adding a readme for how to run the scripts", "committedDate": "2020-11-03T14:42:47Z", "type": "commit"}, {"oid": "776a1562764fa2036657b8bba02916d1ea9b1b9b", "url": "https://github.com/phac-nml/irida/commit/776a1562764fa2036657b8bba02916d1ea9b1b9b", "message": "adding a readme for how to run the scripts", "committedDate": "2020-11-03T14:45:25Z", "type": "commit"}, {"oid": "cad41a5c5b492472a2c327c888a1e58494b59140", "url": "https://github.com/phac-nml/irida/commit/cad41a5c5b492472a2c327c888a1e58494b59140", "message": "changing README to be more constistent with Makefile", "committedDate": "2020-11-03T14:54:14Z", "type": "commit"}, {"oid": "9fdf41fc21506daadb3333d4ac53e97c2f8391d3", "url": "https://github.com/phac-nml/irida/commit/9fdf41fc21506daadb3333d4ac53e97c2f8391d3", "message": "pip freeze requirements", "committedDate": "2020-11-03T15:12:04Z", "type": "commit"}]}