{"pr_number": 801, "pr_title": "Fix remoate oath create remote project", "pr_createdAt": "2020-09-11T18:06:38Z", "pr_url": "https://github.com/phac-nml/irida/pull/801", "timeline": [{"oid": "389e0c8e0180920907a6caf234ea154e235db04c", "url": "https://github.com/phac-nml/irida/commit/389e0c8e0180920907a6caf234ea154e235db04c", "message": ":construction: Working fetch projects when switching apis", "committedDate": "2020-09-11T12:07:08Z", "type": "commit"}, {"oid": "ffce86308d56cb0bdcafea2672cdc2d80780d956", "url": "https://github.com/phac-nml/irida/commit/ffce86308d56cb0bdcafea2672cdc2d80780d956", "message": ":construction: Working create remote.:construction:\n\nStill needs to have redirect and errors set up.", "committedDate": "2020-09-11T17:45:46Z", "type": "commit"}, {"oid": "b1767b6f742f5b51dbae7c587cf188f7fc7abc57", "url": "https://github.com/phac-nml/irida/commit/b1767b6f742f5b51dbae7c587cf188f7fc7abc57", "message": ":construction: Working with redirect", "committedDate": "2020-09-11T17:53:17Z", "type": "commit"}, {"oid": "e44c7e70d89ea0bee0892c95ff49b3f005ff4eb4", "url": "https://github.com/phac-nml/irida/commit/e44c7e70d89ea0bee0892c95ff49b3f005ff4eb4", "message": ":recycle: Cleaning up old code and updating i18n", "committedDate": "2020-09-11T18:33:32Z", "type": "commit"}, {"oid": "0e65dc7c8ad6eacb9c1707f0d0e61474a83936db", "url": "https://github.com/phac-nml/irida/commit/0e65dc7c8ad6eacb9c1707f0d0e61474a83936db", "message": ":recycle: Removed unused method calls", "committedDate": "2020-09-14T11:26:33Z", "type": "commit"}, {"oid": "2ec33e76113a2299b092ea14a0beeb6c8e1e3ec2", "url": "https://github.com/phac-nml/irida/commit/2ec33e76113a2299b092ea14a0beeb6c8e1e3ec2", "message": ":bulb: Updated JavaDoc", "committedDate": "2020-09-14T12:32:11Z", "type": "commit"}, {"oid": "32e2ad220274e602ab45fbd4e68d0a07db969c5a", "url": "https://github.com/phac-nml/irida/commit/32e2ad220274e602ab45fbd4e68d0a07db969c5a", "message": ":white_check_mark: Updated service testing", "committedDate": "2020-09-14T12:37:49Z", "type": "commit"}, {"oid": "97af6a369f9c335b1fb56bf2f519398f55316f0e", "url": "https://github.com/phac-nml/irida/commit/97af6a369f9c335b1fb56bf2f519398f55316f0e", "message": "Merge branch 'FIX-remote-oauth-CLIENT_DETAILS' into FIX-remoate-oath-CREATE_REMOTE_PROJECT\n\n# Conflicts:\n#\tsrc/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIRemoteAPIService.java", "committedDate": "2020-09-14T15:14:05Z", "type": "commit"}, {"oid": "5fd394498c4cc6d5e46a16d1055787e6895f1633", "url": "https://github.com/phac-nml/irida/commit/5fd394498c4cc6d5e46a16d1055787e6895f1633", "message": ":construction: Cleaned up imports from merge", "committedDate": "2020-09-14T16:03:25Z", "type": "commit"}, {"oid": "0ba73ad0e6d12451424eaa56c29e1200da12f8ed", "url": "https://github.com/phac-nml/irida/commit/0ba73ad0e6d12451424eaa56c29e1200da12f8ed", "message": ":construction: Fixed removed page request", "committedDate": "2020-09-14T16:22:04Z", "type": "commit"}, {"oid": "3b17dd0bdc30ef487b860880c60e059b8ccbd2ac", "url": "https://github.com/phac-nml/irida/commit/3b17dd0bdc30ef487b860880c60e059b8ccbd2ac", "message": ":bulb: Updated JavaDoc", "committedDate": "2020-09-14T17:39:26Z", "type": "commit"}, {"oid": "f41b1d6c59ec6d875bd65693071965cd3e39965f", "url": "https://github.com/phac-nml/irida/commit/f41b1d6c59ec6d875bd65693071965cd3e39965f", "message": ":construction: Updated request to create remote project with better enum support", "committedDate": "2020-09-14T17:58:05Z", "type": "commit"}, {"oid": "5b4cb7fbb52a1cee26cbb096b064961ddace1d61", "url": "https://github.com/phac-nml/irida/commit/5b4cb7fbb52a1cee26cbb096b064961ddace1d61", "message": ":memo: Fixed typo", "committedDate": "2020-09-14T18:13:38Z", "type": "commit"}, {"oid": "6776d1b0c0a53952420effbd5a157263be78b4e6", "url": "https://github.com/phac-nml/irida/commit/6776d1b0c0a53952420effbd5a157263be78b4e6", "message": ":memo: Fixed typo", "committedDate": "2020-09-14T18:15:25Z", "type": "commit"}, {"oid": "80ebcbb567a318e20b3e7437e9884cd80440ecf4", "url": "https://github.com/phac-nml/irida/commit/80ebcbb567a318e20b3e7437e9884cd80440ecf4", "message": ":construction: removed old angular reference and page variables", "committedDate": "2020-09-14T18:33:08Z", "type": "commit"}, {"oid": "7bfe2c4a7fa552679b66d3a8884f3d115c0701ac", "url": "https://github.com/phac-nml/irida/commit/7bfe2c4a7fa552679b66d3a8884f3d115c0701ac", "message": ":construction: Seperated out the create form", "committedDate": "2020-09-14T18:55:58Z", "type": "commit"}, {"oid": "2e654ab99b60e780b635f9ec402c3381298b7609", "url": "https://github.com/phac-nml/irida/commit/2e654ab99b60e780b635f9ec402c3381298b7609", "message": ":construction: This was added to the wrong page", "committedDate": "2020-09-15T10:38:28Z", "type": "commit"}, {"oid": "e9e1554b9a578679e6f94a30b7745e7a8ca7be11", "url": "https://github.com/phac-nml/irida/commit/e9e1554b9a578679e6f94a30b7745e7a8ca7be11", "message": ":construction: Fixed issue with sync frequencies", "committedDate": "2020-09-15T11:32:25Z", "type": "commit"}, {"oid": "f261953c51a7511b4f0f5365c5a707e2ba964b8b", "url": "https://github.com/phac-nml/irida/commit/f261953c51a7511b4f0f5365c5a707e2ba964b8b", "message": ":memo: Updated CHANGELOG.md", "committedDate": "2020-09-15T11:40:15Z", "type": "commit"}, {"oid": "1bed89508ebc796091a80d8e68a964fdd9676377", "url": "https://github.com/phac-nml/irida/commit/1bed89508ebc796091a80d8e68a964fdd9676377", "message": "Merge branch 'FIX-remote-oauth-CLIENT_DETAILS' into FIX-remoate-oath-CREATE_REMOTE_PROJECT\n\n# Conflicts:\n#\tCHANGELOG.md", "committedDate": "2020-09-15T11:40:53Z", "type": "commit"}, {"oid": "c1a7990bd9d94aa551b0410b1fda607a67fc8936", "url": "https://github.com/phac-nml/irida/commit/c1a7990bd9d94aa551b0410b1fda607a67fc8936", "message": ":construction: Fixed issue with center popup window on screen", "committedDate": "2020-09-15T13:16:02Z", "type": "commit"}, {"oid": "ac8d0804c0d4ddf25e5ce842583b2ad1b8497e4a", "url": "https://github.com/phac-nml/irida/commit/ac8d0804c0d4ddf25e5ce842583b2ad1b8497e4a", "message": ":bulb: Fixed typo in CreateRemoteProjectRequest docs", "committedDate": "2020-09-15T14:33:56Z", "type": "commit"}, {"oid": "e6279225572747be61cfd7b03fbda8dfb5e6e536", "url": "https://github.com/phac-nml/irida/commit/e6279225572747be61cfd7b03fbda8dfb5e6e536", "message": ":white_check_mark: Fixed broken tests", "committedDate": "2020-09-15T15:53:02Z", "type": "commit"}, {"oid": "585c70733be6286d5dae2c90f1fbdaffcb590ef3", "url": "https://github.com/phac-nml/irida/commit/585c70733be6286d5dae2c90f1fbdaffcb590ef3", "message": "Merge branch 'FIX-remote-oath' into FIX-remoate-oath-CREATE_REMOTE_PROJECT", "committedDate": "2020-09-15T17:02:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NTcxOQ==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488795719", "bodyText": "I don't think we need these final variables", "author": "deepsidhu85", "createdAt": "2020-09-15T16:18:56Z", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/ProjectsController.java", "diffHunk": "@@ -654,8 +569,8 @@ private DTProject createDataTablesProject(Project project) {\n \t * Response class for a {@link Project} and its {@link RemoteStatus}\n \t */\n \tpublic class ProjectByApiResponse {\n-\t\tprivate RemoteStatus remoteStatus;\n-\t\tprivate Project project;\n+\t\tprivate final RemoteStatus remoteStatus;", "originalCommit": "e6279225572747be61cfd7b03fbda8dfb5e6e536", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzNjM3OA==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488836378", "bodyText": "That internal class is not used. Removed in cf21801", "author": "joshsadam", "createdAt": "2020-09-15T17:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NTcxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgwNzUyMQ==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488807521", "bodyText": "Function comments", "author": "deepsidhu85", "createdAt": "2020-09-15T16:37:43Z", "path": "src/main/webapp/resources/js/apis/remote-api/remote-api.js", "diffHunk": "@@ -1,13 +1,48 @@\n import axios from \"axios\";\n import { setBaseUrl } from \"../../utilities/url-utilities\";\n \n+const BASE_URL = setBaseUrl(`ajax/remote_api`);\n+\n /**\n  * Check the status of a specific Remote API.\n  * @param {number} id - identifier for the API.\n  * @returns {Promise<boolean>}\n  */\n export function checkConnectionStatus({ id }) {\n   return axios\n-    .get(setBaseUrl(`ajax/remote_api/status/${id}`))\n-    .then(({ data }) => data === \"valid_token\");\n+    .get(`${BASE_URL}/status/${id}`)\n+    .then(({ data }) => data)\n+    .catch(() => false);\n+}\n+\n+/**\n+ * Get the specific details about a remote api connection\n+ * @param id - identifier for a remote api\n+ * @returns {Promise<*>}\n+ */\n+export function getConnectionDetails({ id }) {\n+  return axios.get(`${BASE_URL}/${id}`).then(({ data }) => data);\n+}\n+\n+/**\n+ * Delete a specific remote api\n+ * @param id - identifier for a remote api\n+ * @returns {Promise<AxiosResponse<any>>}\n+ */\n+export function deleteRemoteApi({ id }) {\n+  return axios.delete(`${BASE_URL}/${id}/delete`);\n+}\n+", "originalCommit": "e6279225572747be61cfd7b03fbda8dfb5e6e536", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzODA1MQ==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488838051", "bodyText": "Updated in 76197dc", "author": "joshsadam", "createdAt": "2020-09-15T17:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgwNzUyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMDE5MQ==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488810191", "bodyText": "Internationalize", "author": "deepsidhu85", "createdAt": "2020-09-15T16:42:09Z", "path": "src/main/webapp/resources/js/components/remote-api/CreateRemoteProjectSyncForm.jsx", "diffHunk": "@@ -0,0 +1,158 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import { Button, Checkbox, Form, Input, Select } from \"antd\";\n+import {\n+  createSynchronizedProject,\n+  getListOfRemoteApis,\n+  getProjectsForAPI,\n+} from \"../../apis/remote-api/remote-api\";\n+import { setBaseUrl } from \"../../utilities/url-utilities\";\n+import { RemoteApiStatus } from \"../../pages/admin/components/remote-connections/RemoteApiStatus\";\n+import { HelpPopover } from \"../popovers\";\n+\n+/**\n+ * React form for creating a Synchronized Remote Project\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function CreateRemoteProjectSyncForm() {\n+  const [apis, setApis] = useState([]);\n+  const [selectedApi, setSelectedApi] = useState();\n+  const [projects, setProjects] = useState([]);\n+  const [connected, setConnected] = useState();\n+  const [manual, setManual] = useState(false);\n+  const [form] = Form.useForm();\n+  const apiRef = useRef();\n+\n+  useEffect(() => {\n+    // Load all remote api's at mount time\n+    getListOfRemoteApis().then((list) => {\n+      setApis(list);\n+      if (list.length === 1) {\n+        form.setFieldsValue({ api: 0 });\n+        setSelectedApi(list[0]);\n+      }\n+      // Set user focus on the api select after at mount time\n+      apiRef.current.focus();\n+    });\n+  }, [form]);\n+\n+  /**\n+   * Update the status of a specific api.\n+   * @param {number} value - index of the api in the apis list.\n+   */\n+  const updateApiStatus = (value) => setSelectedApi(apis[value]);\n+\n+  const getApiProjects = () => {\n+    if (selectedApi.id) {\n+      getProjectsForAPI({ id: selectedApi.id })\n+        .then(setProjects)\n+        .then(() => setConnected(true));\n+    }\n+  };\n+\n+  const createRemote = () => {\n+    const url = form.getFieldValue(\"project\");\n+    const frequency = form.getFieldValue(\"frequency\");\n+    createSynchronizedProject({\n+      url,\n+      frequency,\n+    }).then(({ id }) => (window.location.href = setBaseUrl(`/projects/${id}`)));\n+  };\n+\n+  return (\n+    <Form\n+      form={form}\n+      layout=\"vertical\"\n+      initialValues={{\n+        frequency: 2,\n+      }}\n+    >\n+      <Form.Item\n+        name=\"api\"\n+        label={i18n(\"NewProjectSync.api\")}\n+        help={i18n(\"NewProjectSync.api.help\")}\n+      >\n+        <Select\n+          ref={apiRef}\n+          showSearch\n+          onChange={updateApiStatus}\n+          placeholder={i18n(\"NewProjectSync.api.placeholder\")}\n+        >\n+          {apis.map((api, index) => (\n+            <Select.Option key={`api-${api.id}`} value={index}>\n+              {api.name}\n+            </Select.Option>\n+          ))}\n+        </Select>\n+      </Form.Item>\n+      {selectedApi ? (\n+        <>\n+          <Form.Item label={i18n(\"NewProjectSync.api-status\")}>\n+            <RemoteApiStatus api={selectedApi} onConnect={getApiProjects} />\n+          </Form.Item>\n+          {connected ? (\n+            <>\n+              <Form.Item label={i18n(\"NewProjectSync.project\")} name=\"project\">\n+                <Select\n+                  onChange={(value) =>\n+                    form.setFieldsValue({ projectUrl: value })\n+                  }\n+                  showSearch\n+                  options={projects}\n+                  placeholder={i18n(\"NewProjectSync.project.placeholder\")}\n+                />\n+              </Form.Item>\n+              <Form.Item\n+                required\n+                label={\n+                  <span>\n+                    REMOTE PROJECT URL", "originalCommit": "e6279225572747be61cfd7b03fbda8dfb5e6e536", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0Mjk2NQ==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488842965", "bodyText": "Updated in 822fbe4", "author": "joshsadam", "createdAt": "2020-09-15T17:32:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMDE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMDI5OA==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488810298", "bodyText": "Internationalize", "author": "deepsidhu85", "createdAt": "2020-09-15T16:42:19Z", "path": "src/main/webapp/resources/js/components/remote-api/CreateRemoteProjectSyncForm.jsx", "diffHunk": "@@ -0,0 +1,158 @@\n+import React, { useEffect, useRef, useState } from \"react\";\n+import { Button, Checkbox, Form, Input, Select } from \"antd\";\n+import {\n+  createSynchronizedProject,\n+  getListOfRemoteApis,\n+  getProjectsForAPI,\n+} from \"../../apis/remote-api/remote-api\";\n+import { setBaseUrl } from \"../../utilities/url-utilities\";\n+import { RemoteApiStatus } from \"../../pages/admin/components/remote-connections/RemoteApiStatus\";\n+import { HelpPopover } from \"../popovers\";\n+\n+/**\n+ * React form for creating a Synchronized Remote Project\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function CreateRemoteProjectSyncForm() {\n+  const [apis, setApis] = useState([]);\n+  const [selectedApi, setSelectedApi] = useState();\n+  const [projects, setProjects] = useState([]);\n+  const [connected, setConnected] = useState();\n+  const [manual, setManual] = useState(false);\n+  const [form] = Form.useForm();\n+  const apiRef = useRef();\n+\n+  useEffect(() => {\n+    // Load all remote api's at mount time\n+    getListOfRemoteApis().then((list) => {\n+      setApis(list);\n+      if (list.length === 1) {\n+        form.setFieldsValue({ api: 0 });\n+        setSelectedApi(list[0]);\n+      }\n+      // Set user focus on the api select after at mount time\n+      apiRef.current.focus();\n+    });\n+  }, [form]);\n+\n+  /**\n+   * Update the status of a specific api.\n+   * @param {number} value - index of the api in the apis list.\n+   */\n+  const updateApiStatus = (value) => setSelectedApi(apis[value]);\n+\n+  const getApiProjects = () => {\n+    if (selectedApi.id) {\n+      getProjectsForAPI({ id: selectedApi.id })\n+        .then(setProjects)\n+        .then(() => setConnected(true));\n+    }\n+  };\n+\n+  const createRemote = () => {\n+    const url = form.getFieldValue(\"project\");\n+    const frequency = form.getFieldValue(\"frequency\");\n+    createSynchronizedProject({\n+      url,\n+      frequency,\n+    }).then(({ id }) => (window.location.href = setBaseUrl(`/projects/${id}`)));\n+  };\n+\n+  return (\n+    <Form\n+      form={form}\n+      layout=\"vertical\"\n+      initialValues={{\n+        frequency: 2,\n+      }}\n+    >\n+      <Form.Item\n+        name=\"api\"\n+        label={i18n(\"NewProjectSync.api\")}\n+        help={i18n(\"NewProjectSync.api.help\")}\n+      >\n+        <Select\n+          ref={apiRef}\n+          showSearch\n+          onChange={updateApiStatus}\n+          placeholder={i18n(\"NewProjectSync.api.placeholder\")}\n+        >\n+          {apis.map((api, index) => (\n+            <Select.Option key={`api-${api.id}`} value={index}>\n+              {api.name}\n+            </Select.Option>\n+          ))}\n+        </Select>\n+      </Form.Item>\n+      {selectedApi ? (\n+        <>\n+          <Form.Item label={i18n(\"NewProjectSync.api-status\")}>\n+            <RemoteApiStatus api={selectedApi} onConnect={getApiProjects} />\n+          </Form.Item>\n+          {connected ? (\n+            <>\n+              <Form.Item label={i18n(\"NewProjectSync.project\")} name=\"project\">\n+                <Select\n+                  onChange={(value) =>\n+                    form.setFieldsValue({ projectUrl: value })\n+                  }\n+                  showSearch\n+                  options={projects}\n+                  placeholder={i18n(\"NewProjectSync.project.placeholder\")}\n+                />\n+              </Form.Item>\n+              <Form.Item\n+                required\n+                label={\n+                  <span>\n+                    REMOTE PROJECT URL\n+                    <Checkbox onChange={(e) => setManual(e.target.checked)}>\n+                      Set url manually", "originalCommit": "e6279225572747be61cfd7b03fbda8dfb5e6e536", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MzA5Mw==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488843093", "bodyText": "Updated in 822fbe4", "author": "joshsadam", "createdAt": "2020-09-15T17:32:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMDI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMjU4Nw==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488812587", "bodyText": "Add comments to this function", "author": "deepsidhu85", "createdAt": "2020-09-15T16:46:05Z", "path": "src/main/webapp/resources/js/pages/admin/components/remote-connections/RemoteApiStatus.jsx", "diffHunk": "@@ -0,0 +1,91 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Alert, Button } from \"antd\";\n+import { checkConnectionStatus } from \"../../../../apis/remote-api/remote-api\";\n+import { setBaseUrl } from \"../../../../utilities/url-utilities\";\n+import { IconLoading, IconLogin } from \"../../../../components/icons/Icons\";\n+import { SPACE_XS } from \"../../../../styles/spacing\";\n+import { formatInternationalizedDateTime } from \"../../../../utilities/date-utilities\";\n+\n+/**\n+ * React component to render the status of a Remote API.\n+ * If the API is not connected it will present the user a button allowing\n+ * them to connect.\n+ * @param {object} api - details about the remote API\n+ * @param {function} onConnect - what do when the connection is made.\n+ * @returns {*}\n+ * @constructor\n+ */\n+export function RemoteApiStatus({ api, onConnect = () => {} }) {\n+  const [loading, setLoading] = useState(true);\n+  const [expiration, setExpiration] = useState(undefined);\n+\n+  useEffect(checkApiStatus, []);\n+\n+  useEffect(() => {\n+    // Listen for a remote api connection\n+    window.addEventListener(\"message\", updateRemoteApi, false);\n+    return () => window.removeEventListener(\"message\", updateRemoteApi);\n+  }, []);\n+\n+  useEffect(() => checkApiStatus(), [api.id]);\n+\n+  function checkApiStatus() {\n+    setLoading(true);\n+    checkConnectionStatus({ id: api.id }).then((data) => {\n+      setLoading(false);\n+      setExpiration(data);\n+      data && onConnect();\n+    });\n+  }\n+\n+  function updateRemoteApi(event) {\n+    if (\n+      event.origin === window.location.origin &&\n+      event.data === \"remote_api_connect\"\n+    ) {\n+      checkApiStatus();\n+    }\n+  }\n+\n+  function updateConnectionStatus() {", "originalCommit": "e6279225572747be61cfd7b03fbda8dfb5e6e536", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NTA1NA==", "url": "https://github.com/phac-nml/irida/pull/801#discussion_r488845054", "bodyText": "Updated in 611706c", "author": "joshsadam", "createdAt": "2020-09-15T17:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMjU4Nw=="}], "type": "inlineReview"}, {"oid": "cf21801406f8704b290fe2765b38dd26ac6bd17f", "url": "https://github.com/phac-nml/irida/commit/cf21801406f8704b290fe2765b38dd26ac6bd17f", "message": ":fire: This class was not used anymore", "committedDate": "2020-09-15T17:23:12Z", "type": "commit"}, {"oid": "76197dc4c28387a4bfb35cc6133e5ae2b0044731", "url": "https://github.com/phac-nml/irida/commit/76197dc4c28387a4bfb35cc6133e5ae2b0044731", "message": ":bulb: Added JSDoc", "committedDate": "2020-09-15T17:25:09Z", "type": "commit"}, {"oid": "822fbe4d0a6e2fa59b9a28536d5e05606f1e7987", "url": "https://github.com/phac-nml/irida/commit/822fbe4d0a6e2fa59b9a28536d5e05606f1e7987", "message": ":globe_with_meridians: Updated i18n", "committedDate": "2020-09-15T17:32:06Z", "type": "commit"}, {"oid": "611706cbe6ec2624b3ea759cf6541983c98a771e", "url": "https://github.com/phac-nml/irida/commit/611706cbe6ec2624b3ea759cf6541983c98a771e", "message": ":bulb: Updated JSDoc", "committedDate": "2020-09-15T17:34:08Z", "type": "commit"}, {"oid": "00cff37f2827c5d40a090f4e365138f1227d7726", "url": "https://github.com/phac-nml/irida/commit/00cff37f2827c5d40a090f4e365138f1227d7726", "message": ":recycle: Made the sync frequency into its own component", "committedDate": "2020-09-15T19:46:32Z", "type": "commit"}, {"oid": "4c7714e2284ab0d8ad76c3e3755b419bcdc1ace1", "url": "https://github.com/phac-nml/irida/commit/4c7714e2284ab0d8ad76c3e3755b419bcdc1ace1", "message": ":construction: Removed offensive word alert!", "committedDate": "2020-09-15T19:48:49Z", "type": "commit"}, {"oid": "da661e69eb6dbb64f291c61d4b410c701d38896c", "url": "https://github.com/phac-nml/irida/commit/da661e69eb6dbb64f291c61d4b410c701d38896c", "message": ":white_check_mark: Fixed broken remote sync page tests", "committedDate": "2020-09-16T12:10:24Z", "type": "commit"}, {"oid": "3d6d0f3b96d75b15fe89acee2419483bf6c9a1d0", "url": "https://github.com/phac-nml/irida/commit/3d6d0f3b96d75b15fe89acee2419483bf6c9a1d0", "message": "\ud83d\udcdd Updated synchronize-connect-api image", "committedDate": "2020-09-16T12:51:45Z", "type": "commit"}, {"oid": "a070fc4c969c001014f9f08c2acbf7776413c9a7", "url": "https://github.com/phac-nml/irida/commit/a070fc4c969c001014f9f08c2acbf7776413c9a7", "message": ":memo: Updated create remote project docs", "committedDate": "2020-09-16T13:16:58Z", "type": "commit"}, {"oid": "11bab01d21a1fcfe66b5172dc764675e60a29992", "url": "https://github.com/phac-nml/irida/commit/11bab01d21a1fcfe66b5172dc764675e60a29992", "message": "Merge branch 'FIX-remote-oath' into FIX-remoate-oath-CREATE_REMOTE_PROJECT\n\n# Conflicts:\n#\tCHANGELOG.md", "committedDate": "2020-09-16T13:58:32Z", "type": "commit"}]}