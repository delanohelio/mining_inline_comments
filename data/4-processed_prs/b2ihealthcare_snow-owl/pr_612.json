{"pr_number": 612, "pr_title": "SO-4151: When finding unpublished duplicate FSNS, ensure they are ...", "pr_createdAt": "2020-07-20T16:00:21Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/612", "timeline": [{"oid": "23fb437c804cedfcdddcdd2dcc582ae4c42e7585", "url": "https://github.com/b2ihealthcare/snow-owl/commit/23fb437c804cedfcdddcdd2dcc582ae4c42e7585", "message": "SO-4151: When finding unpublished duplicate FSNS, ensure they are ...\n\n... compared to every other FSN and not only other unpublished FSNs", "committedDate": "2020-07-20T15:59:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxNjUxNw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/612#discussion_r458716517", "bodyText": "Hint: this can be used to check if a value is an unset effective time: com.b2international.snowowl.core.date.EffectiveTimes.isUnset(Object).", "author": "cmark", "createdAt": "2020-07-22T11:13:37Z", "path": "snomed/com.b2international.snowowl.validation.snomed/src/main/resources/scripts/rule664.groovy", "diffHunk": "@@ -39,23 +39,24 @@ ExpressionBuilder activeFsnExpression = Expressions.builder()\n \t\t.filter(SnomedDescriptionIndexEntry.Expressions.type(Concepts.FULLY_SPECIFIED_NAME))\n \t\t.filter(SnomedDescriptionIndexEntry.Expressions.concepts(activeConceptIds))\n \n-if (params.isUnpublishedOnly) {\n-\tactiveFsnExpression.filter(SnomedDocument.Expressions.effectiveTime(EffectiveTimes.UNSET_EFFECTIVE_TIME))\n-}\n-\n-Aggregation<String> activeDescriptionsByOriginalTerm = searcher\n-\t\t.aggregate(AggregationBuilder.bucket(\"ruleSnomedCommon2\", String.class, SnomedDescriptionIndexEntry.class)\n+Aggregation<String[]> activeDescriptionsByOriginalTerm = searcher\n+\t\t.aggregate(AggregationBuilder.bucket(\"ruleSnomedCommon2\", String[].class, SnomedDescriptionIndexEntry.class)\n \t\t.query(activeFsnExpression.build())\n \t\t.onFieldValue(SnomedDescriptionIndexEntry.Fields.ORIGINAL_TERM)\n-\t\t.fields(SnomedDescriptionIndexEntry.Fields.ID)\n+\t\t.fields(SnomedDescriptionIndexEntry.Fields.ID,\n+\t\t\tSnomedDescriptionIndexEntry.Fields.EFFECTIVE_TIME)\n \t\t.minBucketSize(2))\n \n-\t\t\n List<ComponentIdentifier> issues = Lists.newArrayList()\n \n activeDescriptionsByOriginalTerm.getBuckets().values().each({ bucket ->\n-\tbucket.each({ id ->\n-\t\tissues.add(ComponentIdentifier.of(SnomedTerminologyComponentConstants.DESCRIPTION_NUMBER, id))\n+\tbucket.each({ hit ->\n+\t\tdef id = hit[0]\n+\t\tdef effectiveTime = hit[1]\n+\t\t\n+\t\tif (!params.isUnpublishedOnly || Long.valueOf(effectiveTime).equals(EffectiveTimes.UNSET_EFFECTIVE_TIME)) {", "originalCommit": "23fb437c804cedfcdddcdd2dcc582ae4c42e7585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d35087c63a9c4a41ccb4ef80c9951cff7322dd2b", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d35087c63a9c4a41ccb4ef80c9951cff7322dd2b", "message": "SO-4151: Use EffectiveTimes helper method", "committedDate": "2020-07-22T11:23:24Z", "type": "commit"}]}