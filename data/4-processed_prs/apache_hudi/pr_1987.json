{"pr_number": 1987, "pr_title": "[HUDI-1177]: fixed TaskNotSerializableException in TimestampBasedKeyGenerator", "pr_createdAt": "2020-08-19T17:55:24Z", "pr_url": "https://github.com/apache/hudi/pull/1987", "timeline": [{"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e", "url": "https://github.com/apache/hudi/commit/62bfa3460fa72543ffcf943e594130ab9cb4294e", "message": "[HUDI-1177]: fixed TaskNotSerializableException in TimestampBasedKeyGenerator", "committedDate": "2020-08-19T17:49:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473253462", "bodyText": "let's make these transient and lazily init this as needed.\nprivate void initIfNeeded() {\n  if (inputFormatter != null) {\n   this.inputFormatter = parser.getInputFormatter();\n   this.partitionFormatter = DateTimeFormat.forPattern(outputDateFormat);\n  }\n}", "author": "vinothchandar", "createdAt": "2020-08-19T18:59:15Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -153,7 +147,8 @@ public String getPartitionPath(GenericRecord record) {\n    * @return the parsed partition path based on data type\n    * @throws ParseException on any parse exception\n    */\n-  private String getPartitionPath(Object partitionVal) throws ParseException {\n+  private String getPartitionPath(Object partitionVal) {\n+    DateTimeFormatter inputFormatter = parser.getInputFormatter();", "originalCommit": "62bfa3460fa72543ffcf943e594130ab9cb4294e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzY4NA==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473253684", "bodyText": "let's move any other per record allocation here.", "author": "vinothchandar", "createdAt": "2020-08-19T18:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4MjYyMQ==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473282621", "bodyText": "I did not get this check, if (inputFormatter != null) then why are we re-initialising? Ok, you mean to say the variable will be marked transient and will still get initialised in constructor? initIfNeeded() gets called from getPartitionPath() then? Please help me understand. @vinothchandar", "author": "pratyakshsharma", "createdAt": "2020-08-19T19:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4OTc0Mg==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473289742", "bodyText": "@pratyakshsharma  InitIfNeeded() should be called from getPartitionPath that way for each getPartitionPath() call we dont create DateTimeFormatter objects. And initIfNeeded() should check for if (inputFormatter == null) {. The variables will be marked transient and dont get initialized in the constructor.", "author": "bhasudha", "createdAt": "2020-08-19T20:09:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI5Mzc0Mg==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473293742", "bodyText": "ok, I was thinking on similar lines but got confused by that if condition. Let me do the changes. :) Thank you for the clarification.", "author": "pratyakshsharma", "createdAt": "2020-08-19T20:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1NzQwOQ==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473257409", "bodyText": "throw an exception?  returning null is like playing with fire :)", "author": "vinothchandar", "createdAt": "2020-08-19T19:06:49Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParserImpl.java", "diffHunk": "@@ -95,7 +86,15 @@ public String getOutputDateFormat() {\n \n   @Override\n   public DateTimeFormatter getInputFormatter() {\n-    return this.inputFormatter;\n+    TimestampType timestampType = TimestampType.valueOf(config.getString(Config.TIMESTAMP_TYPE_FIELD_PROP));\n+    if (timestampType == TimestampType.DATE_STRING || timestampType == TimestampType.MIXED) {\n+      DataSourceUtils.checkRequiredProperties(config,\n+          Collections.singletonList(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP));\n+      this.configInputDateFormatList = config.getString(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP, \"\");\n+      return getInputDateFormatter();\n+    }\n+\n+    return null;", "originalCommit": "62bfa3460fa72543ffcf943e594130ab9cb4294e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4MjgwMA==", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473282800", "bodyText": "Taken care of this :)", "author": "pratyakshsharma", "createdAt": "2020-08-19T19:55:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1NzQwOQ=="}], "type": "inlineReview"}, {"oid": "a54e49993ab7ce979cb615d059c8611b05efb9d4", "url": "https://github.com/apache/hudi/commit/a54e49993ab7ce979cb615d059c8611b05efb9d4", "message": "[HUDI-1177]: addressed code review comments", "committedDate": "2020-08-19T20:02:12Z", "type": "commit"}, {"oid": "096ce3e158c95637d1713080f8acadaf074404f3", "url": "https://github.com/apache/hudi/commit/096ce3e158c95637d1713080f8acadaf074404f3", "message": "[HUDI-1177]: addressed code review comments", "committedDate": "2020-08-19T20:33:59Z", "type": "commit"}, {"oid": "fe1b348d0373277e6fa9aa42ca2947dfbd62e93b", "url": "https://github.com/apache/hudi/commit/fe1b348d0373277e6fa9aa42ca2947dfbd62e93b", "message": "Fix unit test failures.", "committedDate": "2020-08-19T23:45:31Z", "type": "commit"}]}