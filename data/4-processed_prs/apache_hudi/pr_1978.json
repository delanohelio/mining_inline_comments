{"pr_number": 1978, "pr_title": "[HUDI-1184] Fix the support of hbase index partition path change", "pr_createdAt": "2020-08-18T13:13:55Z", "pr_url": "https://github.com/apache/hudi/pull/1978", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzgxMg==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r480453812", "bodyText": "It seems like only the following lines have changed but the PR changes indentation for other lines making it hard to understand the exact changes, can you please rework this to change only what is intended ?", "author": "n3nash", "createdAt": "2020-08-31T22:56:51Z", "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -213,36 +215,61 @@ private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String comm\n           statements.add(generateStatement(rec.getRecordKey()));\n           currentBatchOfRecords.add(rec);\n           // iterator till we reach batch size\n-          if (statements.size() >= multiGetBatchSize || !hoodieRecordIterator.hasNext()) {\n-            // get results for batch from Hbase\n-            Result[] results = doGet(hTable, statements);\n-            // clear statements to be GC'd\n-            statements.clear();\n-            for (Result result : results) {\n-              // first, attempt to grab location from HBase\n-              HoodieRecord currentRecord = currentBatchOfRecords.remove(0);\n-              if (result.getRow() != null) {\n-                String keyFromResult = Bytes.toString(result.getRow());\n-                String commitTs = Bytes.toString(result.getValue(SYSTEM_COLUMN_FAMILY, COMMIT_TS_COLUMN));\n-                String fileId = Bytes.toString(result.getValue(SYSTEM_COLUMN_FAMILY, FILE_NAME_COLUMN));\n-                String partitionPath = Bytes.toString(result.getValue(SYSTEM_COLUMN_FAMILY, PARTITION_PATH_COLUMN));\n-\n-                if (checkIfValidCommit(metaClient, commitTs)) {\n-                  currentRecord = new HoodieRecord(new HoodieKey(currentRecord.getRecordKey(), partitionPath),\n+          if (hoodieRecordIterator.hasNext() && statements.size() < multiGetBatchSize) {\n+            continue;\n+          }\n+\n+          // get results for batch from Hbase\n+          Result[] results = doGet(hTable, statements);\n+          // clear statements to be GC'd\n+          statements.clear();\n+          for (Result result : results) {\n+            // first, attempt to grab location from HBase\n+            HoodieRecord currentRecord = currentBatchOfRecords.remove(0);\n+\n+            if (result.getRow() == null) {\n+              taggedRecords.add(currentRecord);\n+              continue;\n+            }\n+\n+            String keyFromResult = Bytes.toString(result.getRow());\n+            String commitTs = Bytes.toString(result.getValue(SYSTEM_COLUMN_FAMILY, COMMIT_TS_COLUMN));\n+            String fileId = Bytes.toString(result.getValue(SYSTEM_COLUMN_FAMILY, FILE_NAME_COLUMN));\n+            String partitionPath = Bytes.toString(result.getValue(SYSTEM_COLUMN_FAMILY, PARTITION_PATH_COLUMN));\n+\n+            if (!checkIfValidCommit(metaClient, commitTs)) {\n+              // if commit is invalid, treat this as a new taggedRecord\n+              taggedRecords.add(currentRecord);\n+              continue;\n+            }\n+\n+\n+            if (updatePartitionPath && !partitionPath.equals(currentRecord.getPartitionPath())) {", "originalCommit": "4fc3471b6ff9ddab370a6c2155a7932bba523a60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4Nzg5OA==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r481087898", "bodyText": "When I modify this code, I feel that the readability of multi-level nested for if code is poor, so I reduce the number of nesting levels of if and for statements, and think it is clearer to read.\nIf you don't think it's reasonable to modify this way, I can only change the judgment of the partition change part. What do you think? I don't know if the indentation problem you mentioned is the one I mentioned above?", "author": "hj2016", "createdAt": "2020-09-01T12:07:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzgxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUzNjMxMg==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r481536312", "bodyText": "I removed the extra line breaks. I wonder if it is the problem you said?", "author": "hj2016", "createdAt": "2020-09-02T01:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzgxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI5MjQyNw==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r481292427", "bodyText": "can we also have another test where, the config value is set to false and the record is tagged w/ old partition. since we have introduced a new config, would be good to have tests covering both branches.", "author": "nsivabalan", "createdAt": "2020-09-01T16:52:55Z", "path": "hudi-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseIndex.java", "diffHunk": "@@ -156,6 +160,46 @@ public void testSimpleTagLocationAndUpdate() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testTagLocationAndPartitionPathUpdate() throws Exception {", "originalCommit": "4fc3471b6ff9ddab370a6c2155a7932bba523a60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAwOTY3Mw==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r484009673", "bodyText": "Do you mean to consider the HBASE_INDEX_UPDATE_PARTITION_PATH parameter true and false test cases when testing?", "author": "hj2016", "createdAt": "2020-09-06T02:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI5MjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYyODc0NA==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r484628744", "bodyText": "yes, I see we have a test for true, but can you also add a test for false as well.", "author": "nsivabalan", "createdAt": "2020-09-08T03:21:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI5MjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzMjAxMQ==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r484632011", "bodyText": "Okay, I will refine this use case later\u3002", "author": "hj2016", "createdAt": "2020-09-08T03:36:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI5MjQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMDQ0MA==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r484820440", "bodyText": "sorry, I missed to take a closer look at the test last time. instead of fiddling w/ table directly, can we test using index apis only.\n\ngenerate records with pp_1 and insert\nupdate records with pp_2 and call index.tagLocation.\nYou should be able to test both paths (false and true for the interested config) with this.\ntrue path:\nVerify that index.tagLocation returns 2 * #records, and half of them are referring to delete records in pp_1 and remaining records are pointing to pp_2\nfalse path:\nVerify that index.tagLocation return 1 * #records, and all of them are pointing to pp_1.", "author": "nsivabalan", "createdAt": "2020-09-08T10:38:59Z", "path": "hudi-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseIndex.java", "diffHunk": "@@ -156,6 +160,53 @@ public void testSimpleTagLocationAndUpdate() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testTagLocationAndPartitionPathUpdate() throws Exception {\n+    final String newCommitTime = \"001\";\n+    final int numRecords = 10;\n+    final String oldPartitionPath = \"1970/01/01\";\n+\n+    // init old index to hbase\n+    List<HoodieRecord> records = dataGen.generateInserts(newCommitTime, numRecords);\n+    JavaRDD<HoodieRecord> writeRecords = jsc().parallelize(records, 1);\n+    HoodieWriteConfig config = getConfig(true);\n+    HBaseIndex index = new HBaseIndex(getConfig(true));\n+\n+    try (HoodieWriteClient writeClient = getHoodieWriteClient(config);) {\n+      // allowed path change test\n+      metaClient = HoodieTableMetaClient.reload(metaClient);\n+      HoodieTable hoodieTable = HoodieTable.create(metaClient, config, hadoopConf);\n+\n+      JavaRDD<HoodieRecord> records1 = index.tagLocation(writeRecords, jsc(), hoodieTable);\n+      assertEquals(0, records1.filter(record -> record.isCurrentLocationKnown()).count());\n+      writeClient.startCommitWithTime(newCommitTime);\n+      JavaRDD<WriteStatus> writeStatues = writeClient.upsert(writeRecords, newCommitTime);\n+      writeClient.commit(newCommitTime, writeStatues);\n+      assertNoWriteErrors(writeStatues.collect());\n+      // mock old partition data\n+      Table table = utility.getConnection().getTable(TableName.valueOf(TABLE_NAME));", "originalCommit": "2a26f557059b37dddc601dc8780b6aba7a395de3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyMjk4Ng==", "url": "https://github.com/apache/hudi/pull/1978#discussion_r484922986", "bodyText": "I modified it, can you confirm it?", "author": "hj2016", "createdAt": "2020-09-08T13:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMDQ0MA=="}], "type": "inlineReview"}, {"oid": "6d8621702f92f84a90268aa556fbcc7bfcf1b890", "url": "https://github.com/apache/hudi/commit/6d8621702f92f84a90268aa556fbcc7bfcf1b890", "message": "[HUDI-1184] Fix the support of hbase index partition path change\n\nWhen the hbase index is used, when the record partition is changed to another partition, the path does not change according to the value of the partition column", "committedDate": "2020-10-12T01:22:00Z", "type": "commit"}, {"oid": "6d8621702f92f84a90268aa556fbcc7bfcf1b890", "url": "https://github.com/apache/hudi/commit/6d8621702f92f84a90268aa556fbcc7bfcf1b890", "message": "[HUDI-1184] Fix the support of hbase index partition path change\n\nWhen the hbase index is used, when the record partition is changed to another partition, the path does not change according to the value of the partition column", "committedDate": "2020-10-12T01:22:00Z", "type": "forcePushed"}]}