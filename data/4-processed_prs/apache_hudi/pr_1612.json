{"pr_number": 1612, "pr_title": "[HUDI-528] Handle empty commit in incremental pulling", "pr_createdAt": "2020-05-11T00:09:14Z", "pr_url": "https://github.com/apache/hudi/pull/1612", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODYwOQ==", "url": "https://github.com/apache/hudi/pull/1612#discussion_r423138609", "bodyText": "Original Avro Schema (without hudi fields) is now getting written in commit metadata. Can we try reading it first and fallback to reading from parquet if we cannot find schema in commit metadata ?", "author": "bvaradar", "createdAt": "2020-05-11T15:49:16Z", "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -65,15 +65,20 @@ class IncrementalRelation(val sqlContext: SQLContext,\n       s\"option ${DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY}\")\n   }\n \n-  val lastInstant = commitTimeline.lastInstant().get()\n+  private val lastInstant = commitTimeline.getReverseOrderedInstants.iterator().find(instant => {\n+    // Skip empty instants\n+    HoodieCommitMetadata\n+      .fromBytes(commitTimeline.getInstantDetails(instant).get(), classOf[HoodieCommitMetadata])\n+      .fetchTotalRecordsWritten() > 0\n+  }).getOrElse(throw new HoodieException(\"Couldn't find any non empty instant in the hoodie commit timeline.\"))\n \n-  val commitsToReturn = commitTimeline.findInstantsInRange(\n+  private val commitsToReturn = commitTimeline.findInstantsInRange(\n     optParams(DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY),\n     optParams.getOrElse(DataSourceReadOptions.END_INSTANTTIME_OPT_KEY, lastInstant.getTimestamp))\n     .getInstants.iterator().toList\n \n   // use schema from a file produced in the latest instant\n-  val latestSchema = {\n+  private val latestSchema = {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MTQyNg==", "url": "https://github.com/apache/hudi/pull/1612#discussion_r424171426", "bodyText": "Done, fallback to reading from parquet was already handled by TableSchemaResolver", "author": "garyli1019", "createdAt": "2020-05-13T04:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzOTMzNw==", "url": "https://github.com/apache/hudi/pull/1612#discussion_r423139337", "bodyText": "Can we return an empty relation instead of throwing an error here.", "author": "bvaradar", "createdAt": "2020-05-11T15:50:17Z", "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -65,15 +65,20 @@ class IncrementalRelation(val sqlContext: SQLContext,\n       s\"option ${DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY}\")\n   }\n \n-  val lastInstant = commitTimeline.lastInstant().get()\n+  private val lastInstant = commitTimeline.getReverseOrderedInstants.iterator().find(instant => {\n+    // Skip empty instants\n+    HoodieCommitMetadata\n+      .fromBytes(commitTimeline.getInstantDetails(instant).get(), classOf[HoodieCommitMetadata])\n+      .fetchTotalRecordsWritten() > 0\n+  }).getOrElse(throw new HoodieException(\"Couldn't find any non empty instant in the hoodie commit timeline.\"))", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MTcwNA==", "url": "https://github.com/apache/hudi/pull/1612#discussion_r424171704", "bodyText": "No longer need to handle empty commit here since schema was handled by TableSchemaResolver", "author": "garyli1019", "createdAt": "2020-05-13T04:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzOTMzNw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "url": "https://github.com/apache/hudi/commit/f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "message": "HUDI-528 Handle empty commit in incremental pulling", "committedDate": "2020-05-14T19:19:21Z", "type": "commit"}, {"oid": "f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "url": "https://github.com/apache/hudi/commit/f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "message": "HUDI-528 Handle empty commit in incremental pulling", "committedDate": "2020-05-14T19:19:21Z", "type": "forcePushed"}]}