{"pr_number": 1432, "pr_title": "[HUDI-716] Exception: Not an Avro data file when running HoodieCleanClient.runClean", "pr_createdAt": "2020-03-21T06:57:54Z", "pr_url": "https://github.com/apache/hudi/pull/1432", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExNjEyMw==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r396116123", "bodyText": "@lamber-ken : Can we rollback the corrupted instant seamlessly in this case ?\nCan you also add a CLI (called timeline upgrade) which would read the timeline  and fix upgrade issues.  For now, the CLI can just handle only known issue - to deal with corrupted inflight clean instants.  We can have users run them before upgrade for now and also see if this can be done seamlessly.", "author": "bvaradar", "createdAt": "2020-03-22T16:56:17Z", "path": "hudi-client/src/main/java/org/apache/hudi/client/HoodieCleanClient.java", "diffHunk": "@@ -85,7 +85,11 @@ public HoodieCleanMetadata clean(String startCleanTime) throws HoodieIOException\n     // If there are inflight(failed) or previously requested clean operation, first perform them\n     table.getCleanTimeline().filterInflightsAndRequested().getInstants().forEach(hoodieInstant -> {\n       LOG.info(\"There were previously unfinished cleaner operations. Finishing Instant=\" + hoodieInstant);\n-      runClean(table, hoodieInstant);\n+      try {\n+        runClean(table, hoodieInstant);\n+      } catch (Exception e) {\n+        LOG.warn(\"Failed to perform previous clean operation, instant: \" + hoodieInstant, e);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExNjg4Mg==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r396116882", "bodyText": "Good idea \ud83d\udc4d , will update the pr.", "author": "lamberken", "createdAt": "2020-03-22T17:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExNjEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ1NTIzMQ==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r399455231", "bodyText": "Sorry for delay, had updated the pr, any suggestion are welcome, thanks @bvaradar", "author": "lamberken", "createdAt": "2020-03-27T18:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExNjEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MTgzOA==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r400041838", "bodyText": "minor : rename to removeCorruptedPendingCleanAction ?", "author": "bvaradar", "createdAt": "2020-03-30T09:15:52Z", "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/UpgradesCommand.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.cli.commands;\n+\n+import org.apache.hudi.cli.HoodieCLI;\n+import org.apache.hudi.common.table.HoodieTableMetaClient;\n+import org.apache.hudi.common.table.timeline.HoodieActiveTimeline;\n+import org.apache.hudi.common.util.CleanerUtils;\n+import org.apache.hudi.common.util.FSUtils;\n+import org.apache.log4j.Logger;\n+import org.springframework.shell.core.CommandMarker;\n+import org.springframework.shell.core.annotation.CliCommand;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.IOException;\n+\n+/**\n+ * CLI command to during upgrading.\n+ */\n+@Component\n+public class UpgradesCommand implements CommandMarker {\n+  private static final Logger LOG = Logger.getLogger(UpgradesCommand.class);\n+\n+  @CliCommand(value = \"cleanup corrupted files\", help = \"cleanup corrupted files\")\n+  public void cleanUpCorruptedFiles() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MjU1Nw==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r400042557", "bodyText": "On second thought, I think this method can be best present in existing RepairsCommand class instead of this new class. Let me know your thoughts ?", "author": "bvaradar", "createdAt": "2020-03-30T09:17:04Z", "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/UpgradesCommand.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.cli.commands;\n+\n+import org.apache.hudi.cli.HoodieCLI;\n+import org.apache.hudi.common.table.HoodieTableMetaClient;\n+import org.apache.hudi.common.table.timeline.HoodieActiveTimeline;\n+import org.apache.hudi.common.util.CleanerUtils;\n+import org.apache.hudi.common.util.FSUtils;\n+import org.apache.log4j.Logger;\n+import org.springframework.shell.core.CommandMarker;\n+import org.springframework.shell.core.annotation.CliCommand;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.IOException;\n+\n+/**\n+ * CLI command to during upgrading.\n+ */\n+@Component\n+public class UpgradesCommand implements CommandMarker {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MzExNQ==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r400043115", "bodyText": "Add a Log message to not what is getting deleted ?", "author": "bvaradar", "createdAt": "2020-03-30T09:17:51Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/util/FSUtils.java", "diffHunk": "@@ -485,6 +485,14 @@ public static void deleteOlderRollbackMetaFiles(FileSystem fs, String metaPath,\n     });\n   }\n \n+  public static void deleteInstantFile(FileSystem fs, String metaPath, HoodieInstant instant) {\n+    try {\n+      fs.delete(new Path(metaPath, instant.getFileName()), false);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3MDk0OQ==", "url": "https://github.com/apache/hudi/pull/1432#discussion_r400070949", "bodyText": "reasonable", "author": "lamberken", "createdAt": "2020-03-30T10:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MzExNQ=="}], "type": "inlineReview"}, {"oid": "a81f022d51e1430af451461e0e378315030348c7", "url": "https://github.com/apache/hudi/commit/a81f022d51e1430af451461e0e378315030348c7", "message": "[HUDI-716] Exception: Not an Avro data file when running HoodieCleanClient.runClean", "committedDate": "2020-03-30T10:00:38Z", "type": "commit"}]}