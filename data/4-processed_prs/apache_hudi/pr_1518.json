{"pr_number": 1518, "pr_title": "[HUDI-723] Register avro schema if infered from SQL transformation", "pr_createdAt": "2020-04-14T22:19:47Z", "pr_url": "https://github.com/apache/hudi/pull/1518", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MDU3NA==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r409840574", "bodyText": "is n't this block the same as above? why break it up into an else-if?", "author": "vinothchandar", "createdAt": "2020-04-16T20:51:22Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -296,10 +296,21 @@ private void refreshTimeline() throws IOException {\n \n       // Use Transformed Row's schema if not overridden. If target schema is not specified\n       // default to RowBasedSchemaProvider\n-      schemaProvider = this.schemaProvider == null || this.schemaProvider.getTargetSchema() == null\n-          ? transformed.map(r -> (SchemaProvider) new RowBasedSchemaProvider(r.schema())).orElse(\n-          dataAndCheckpoint.getSchemaProvider())\n-          : this.schemaProvider;\n+      if (this.schemaProvider == null) {\n+        schemaProvider =\n+            transformed\n+                .map(r -> (SchemaProvider) new RowBasedSchemaProvider(r.schema()))\n+                .orElse(dataAndCheckpoint.getSchemaProvider());\n+      } else if (this.schemaProvider.getTargetSchema() == null) {\n+        schemaProvider =", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMDk3MQ==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r426010971", "bodyText": "Fixed.", "author": "bvaradar", "createdAt": "2020-05-15T19:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MDU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4NzIyMg==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r409887222", "bodyText": "wondering if we can just redo the schema registration without forcing recreating the entire client?", "author": "vinothchandar", "createdAt": "2020-04-16T22:34:02Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -460,8 +471,17 @@ private void syncHive() {\n    * this constraint.\n    */\n   public void setupWriteClient() {\n+    setupWriteClient(schemaProvider, false);\n+  }\n+\n+  /**\n+   * Note that depending on configs and source-type, schemaProvider could either be eagerly or lazily created.\n+   * SchemaProvider creation is a precursor to HoodieWriteClient and AsyncCompactor creation. This method takes care of\n+   * this constraint.\n+   */\n+  private void setupWriteClient(SchemaProvider schemaProvider, boolean forceRecreate) {\n     LOG.info(\"Setting up Hoodie Write Client\");\n-    if ((null != schemaProvider) && (null == writeClient)) {\n+    if (forceRecreate || (null != schemaProvider) && (null == writeClient)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM4MTMzMA==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r416381330", "bodyText": "that is a good question. @bvaradar , any suggestions?", "author": "afilipchik", "createdAt": "2020-04-28T07:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4NzIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE5MjAzNg==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r420192036", "bodyText": "@bvaradar ping again :)", "author": "vinothchandar", "createdAt": "2020-05-05T15:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4NzIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYwMzQ3NA==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r425603474", "bodyText": "I agree. We should just do schema re-registration alone and not recreate client.", "author": "bvaradar", "createdAt": "2020-05-15T06:58:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4NzIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYyNjY4Ng==", "url": "https://github.com/apache/hudi/pull/1518#discussion_r425626686", "bodyText": "Actually, I just realized HoodieWriteConfig schema also needs to be updated in this case. Trying to see if we can have a consistent point of creating WriteClient and SchemaProvider", "author": "bvaradar", "createdAt": "2020-05-15T07:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4NzIyMg=="}], "type": "inlineReview"}, {"oid": "7e94ab7d11caf2acd034f675c3f1e417594835a7", "url": "https://github.com/apache/hudi/commit/7e94ab7d11caf2acd034f675c3f1e417594835a7", "message": "Register avro schema if infered from SQL transformation", "committedDate": "2020-05-15T11:02:35Z", "type": "commit"}, {"oid": "cb1e6bab49978d33bde9b8dbd7735c52d3195b09", "url": "https://github.com/apache/hudi/commit/cb1e6bab49978d33bde9b8dbd7735c52d3195b09", "message": "removed dub", "committedDate": "2020-05-15T11:02:36Z", "type": "commit"}, {"oid": "8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "url": "https://github.com/apache/hudi/commit/8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "message": "Make HoodieWriteClient creation done lazily always. Handle setting schema-provider and avro-schemas correctly when using SQL transformer", "committedDate": "2020-05-15T11:04:48Z", "type": "commit"}, {"oid": "8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "url": "https://github.com/apache/hudi/commit/8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "message": "Make HoodieWriteClient creation done lazily always. Handle setting schema-provider and avro-schemas correctly when using SQL transformer", "committedDate": "2020-05-15T11:04:48Z", "type": "forcePushed"}]}