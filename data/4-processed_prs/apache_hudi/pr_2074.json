{"pr_number": 2074, "pr_title": "[HUDI-1233] Deltastreamer Kafka consumption delay reporting indicators", "pr_createdAt": "2020-09-07T02:43:09Z", "pr_url": "https://github.com/apache/hudi/pull/2074", "timeline": [{"oid": "d357ada55a69e6c392035b795bc83bd1c8317070", "url": "https://github.com/apache/hudi/commit/d357ada55a69e6c392035b795bc83bd1c8317070", "message": "HUDI-1233", "committedDate": "2020-09-07T02:40:37Z", "type": "commit"}, {"oid": "4d3c82857f0bbae01ab7df8c42b19f1075ac0048", "url": "https://github.com/apache/hudi/commit/4d3c82857f0bbae01ab7df8c42b19f1075ac0048", "message": "HUDI-1233", "committedDate": "2020-09-07T06:17:41Z", "type": "commit"}, {"oid": "a258c019dc33e928935a6a1725f2792912907ff3", "url": "https://github.com/apache/hudi/commit/a258c019dc33e928935a6a1725f2792912907ff3", "message": "hudi-1233", "committedDate": "2020-09-16T14:39:44Z", "type": "commit"}, {"oid": "086cd7db0eb1d9a4f5911f31fca7cb9b431b243b", "url": "https://github.com/apache/hudi/commit/086cd7db0eb1d9a4f5911f31fca7cb9b431b243b", "message": "Merge branch 'master' into HUDI-1233\n\n# Conflicts:\n#\thudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "committedDate": "2020-09-16T14:54:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkwODAzNw==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r489908037", "bodyText": "Why two empty lines?", "author": "yanghua", "createdAt": "2020-09-17T02:52:55Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -191,9 +193,13 @@ public DeltaSync(HoodieDeltaStreamer.Config cfg, SparkSession sparkSession, Sche\n     this.transformer = UtilHelpers.createTransformer(cfg.transformerClassNames);\n     this.keyGenerator = DataSourceUtils.createKeyGenerator(props);\n \n+    this.metrics = new HoodieDeltaStreamerMetrics(getHoodieClientConfig(this.schemaProvider));\n+\n     this.formatAdapter = new SourceFormatAdapter(\n-        UtilHelpers.createSource(cfg.sourceClassName, props, jssc, sparkSession, schemaProvider));\n+        UtilHelpers.createSource(cfg.sourceClassName, props, jssc, sparkSession, schemaProvider, metrics));\n     this.conf = conf;\n+\n+", "originalCommit": "086cd7db0eb1d9a4f5911f31fca7cb9b431b243b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "85aa4a3c0ea12494db45d2b3df3901606f07ff3a", "url": "https://github.com/apache/hudi/commit/85aa4a3c0ea12494db45d2b3df3901606f07ff3a", "message": "HUDI-1282", "committedDate": "2020-09-18T06:39:19Z", "type": "commit"}, {"oid": "0fb592e72645c45e1cd084ea735ea0eca6c3dffe", "url": "https://github.com/apache/hudi/commit/0fb592e72645c45e1cd084ea735ea0eca6c3dffe", "message": "HUDI-1282", "committedDate": "2020-09-18T06:40:21Z", "type": "commit"}, {"oid": "de68e7a5addf4a333039a13b744e932db0cfba81", "url": "https://github.com/apache/hudi/commit/de68e7a5addf4a333039a13b744e932db0cfba81", "message": "Merge branch 'master' into HUDI-1233\n\n# Conflicts:\n#\thudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "committedDate": "2020-09-25T15:23:32Z", "type": "commit"}, {"oid": "765d7df68c4b0f4923df6bf834032e1ed56df4c7", "url": "https://github.com/apache/hudi/commit/765d7df68c4b0f4923df6bf834032e1ed56df4c7", "message": "Merge branch 'master' into HUDI-1233\n\n# Conflicts:\n#\thudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "committedDate": "2020-09-25T15:26:00Z", "type": "commit"}, {"oid": "3a60ed846064adc016146783b09f1061c5456e14", "url": "https://github.com/apache/hudi/commit/3a60ed846064adc016146783b09f1061c5456e14", "message": "Merge branch 'master' into HUDI-1233\n\n# Conflicts:\n#\thudi-utilities/src/main/java/org/apache/hudi/utilities/UtilHelpers.java", "committedDate": "2020-09-25T15:37:08Z", "type": "commit"}, {"oid": "53dcd36258f746ed5ae1629dfccb58f911712b8d", "url": "https://github.com/apache/hudi/commit/53dcd36258f746ed5ae1629dfccb58f911712b8d", "message": "hudi-1233", "committedDate": "2020-09-26T03:22:05Z", "type": "commit"}, {"oid": "ed39ee43058bbd3efd46400a9801a0401150e4ea", "url": "https://github.com/apache/hudi/commit/ed39ee43058bbd3efd46400a9801a0401150e4ea", "message": "hudi-1233", "committedDate": "2020-09-26T03:50:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDI4Mg==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495514282", "bodyText": "Replace class name  with XXX.class.getName() should be better", "author": "wangxianghu", "createdAt": "2020-09-27T01:36:09Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -190,8 +192,16 @@ public DeltaSync(HoodieDeltaStreamer.Config cfg, SparkSession sparkSession, Sche\n     this.transformer = UtilHelpers.createTransformer(cfg.transformerClassNames);\n     this.keyGenerator = DataSourceUtils.createKeyGenerator(props);\n \n-    this.formatAdapter = new SourceFormatAdapter(\n-        UtilHelpers.createSource(cfg.sourceClassName, props, jssc, sparkSession, schemaProvider));\n+    this.metrics = new HoodieDeltaStreamerMetrics(getHoodieClientConfig(this.schemaProvider));\n+\n+    if (\"org.apache.hudi.utilities.sources.JsonKafkaSource\".equals(cfg.sourceClassName)\n+            || \"org.apache.hudi.utilities.sources.AvroKafkaSource\".equals(cfg.sourceClassName)) {", "originalCommit": "ed39ee43058bbd3efd46400a9801a0401150e4ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODE0Mg==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495518142", "bodyText": "OK, all right", "author": "liujinhui1994", "createdAt": "2020-09-27T02:30:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDI4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNjcyMg==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495516722", "bodyText": "@liujinhui1994 thanks for your contribution, I left some comments you can consider.", "author": "wangxianghu", "createdAt": "2020-09-27T02:10:13Z", "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestKafkaSource.java", "diffHunk": "@@ -242,7 +245,7 @@ public void testJsonKafkaSourceWithConfigurableUpperCap() {\n     HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n     TypedProperties props = createPropsForJsonSource(500L, \"earliest\");\n \n-    Source jsonSource = new JsonKafkaSource(props, jsc, sparkSession, schemaProvider);\n+    Source jsonSource = new JsonKafkaSource(props, jsc, sparkSession, schemaProvider, metrics);\n     SourceFormatAdapter kafkaSource = new SourceFormatAdapter(jsonSource);\n \n     // 1. Extract without any checkpoint => get all the data, respecting sourceLimit", "originalCommit": "ed39ee43058bbd3efd46400a9801a0401150e4ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODI1OA==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495518258", "bodyText": "It seems we can use the same metric in one sync loop.  how about initializing it at the begging(in DeltaSync ) and deliver it to the source constructor?", "author": "wangxianghu", "createdAt": "2020-09-27T02:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODgwNg==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495518806", "bodyText": "This is also a way. Currently non-kafka souce has not used metic, so I made a judgment and only passed metic when kafka souce", "author": "liujinhui1994", "createdAt": "2020-09-27T02:39:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNjcyMg=="}], "type": "inlineReview"}, {"oid": "da4b7808fbf299645670183fac0b3b05a586d436", "url": "https://github.com/apache/hudi/commit/da4b7808fbf299645670183fac0b3b05a586d436", "message": "HUDI-1233", "committedDate": "2020-09-27T02:27:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxOTM5Nw==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495519397", "bodyText": "Move this check into UtilHelpers#createSource?  use different constructor according to source type\nthis can avoid checking two times", "author": "wangxianghu", "createdAt": "2020-09-27T02:47:03Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -190,8 +194,16 @@ public DeltaSync(HoodieDeltaStreamer.Config cfg, SparkSession sparkSession, Sche\n     this.transformer = UtilHelpers.createTransformer(cfg.transformerClassNames);\n     this.keyGenerator = DataSourceUtils.createKeyGenerator(props);\n \n-    this.formatAdapter = new SourceFormatAdapter(\n-        UtilHelpers.createSource(cfg.sourceClassName, props, jssc, sparkSession, schemaProvider));\n+    this.metrics = new HoodieDeltaStreamerMetrics(getHoodieClientConfig(this.schemaProvider));\n+\n+    if (JsonKafkaSource.class.getName().equals(cfg.sourceClassName)", "originalCommit": "da4b7808fbf299645670183fac0b3b05a586d436", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c404b86975ee84fdc8de271915ffc81c3da0148b", "url": "https://github.com/apache/hudi/commit/c404b86975ee84fdc8de271915ffc81c3da0148b", "message": "HUDI-1233", "committedDate": "2020-09-27T03:35:44Z", "type": "commit"}, {"oid": "37eaf056a1763394fe46147462eb7df97cd01d4c", "url": "https://github.com/apache/hudi/commit/37eaf056a1763394fe46147462eb7df97cd01d4c", "message": "HUDI-1233", "committedDate": "2020-09-27T06:35:23Z", "type": "commit"}, {"oid": "fbf281f59d808b3ea021012019d3f35ce524fa15", "url": "https://github.com/apache/hudi/commit/fbf281f59d808b3ea021012019d3f35ce524fa15", "message": "HUDI-1233", "committedDate": "2020-09-27T08:39:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYzOTM0Mg==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495639342", "bodyText": "Why change this indent?", "author": "yanghua", "createdAt": "2020-09-28T00:32:35Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/UtilHelpers.java", "diffHunk": "@@ -93,11 +96,19 @@\n   private static final Logger LOG = LogManager.getLogger(UtilHelpers.class);\n \n   public static Source createSource(String sourceClass, TypedProperties cfg, JavaSparkContext jssc,\n-                                    SparkSession sparkSession, SchemaProvider schemaProvider) throws IOException {\n+                                    SparkSession sparkSession, SchemaProvider schemaProvider, HoodieDeltaStreamerMetrics metrics) throws IOException {\n+\n     try {\n+      if (JsonKafkaSource.class.getName().equals(sourceClass)\n+              || AvroKafkaSource.class.getName().equals(sourceClass)) {\n+        return (Source) ReflectionUtils.loadClass(sourceClass,\n+                new Class<?>[]{TypedProperties.class, JavaSparkContext.class, SparkSession.class, SchemaProvider.class, HoodieDeltaStreamerMetrics.class}, cfg,\n+                jssc, sparkSession, schemaProvider, metrics);\n+      }\n+\n       return (Source) ReflectionUtils.loadClass(sourceClass,\n-          new Class<?>[] {TypedProperties.class, JavaSparkContext.class, SparkSession.class, SchemaProvider.class}, cfg,\n-          jssc, sparkSession, schemaProvider);\n+              new Class<?>[] {TypedProperties.class, JavaSparkContext.class, SparkSession.class, SchemaProvider.class}, cfg,", "originalCommit": "fbf281f59d808b3ea021012019d3f35ce524fa15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYzOTM5NQ==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495639395", "bodyText": "The first indent is correct?", "author": "yanghua", "createdAt": "2020-09-28T00:32:58Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -190,8 +192,10 @@ public DeltaSync(HoodieDeltaStreamer.Config cfg, SparkSession sparkSession, Sche\n     this.transformer = UtilHelpers.createTransformer(cfg.transformerClassNames);\n     this.keyGenerator = DataSourceUtils.createKeyGenerator(props);\n \n+    this.metrics = new HoodieDeltaStreamerMetrics(getHoodieClientConfig(this.schemaProvider));\n+\n     this.formatAdapter = new SourceFormatAdapter(\n-        UtilHelpers.createSource(cfg.sourceClassName, props, jssc, sparkSession, schemaProvider));\n+         UtilHelpers.createSource(cfg.sourceClassName, props, jssc, sparkSession, schemaProvider, metrics));", "originalCommit": "fbf281f59d808b3ea021012019d3f35ce524fa15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYzOTczMQ==", "url": "https://github.com/apache/hudi/pull/2074#discussion_r495639731", "bodyText": "delayOffectCalculation  -> delayOffsetCalculation ?", "author": "yanghua", "createdAt": "2020-09-28T00:35:36Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -233,6 +235,18 @@ public KafkaOffsetGen(TypedProperties props) {\n     return checkpointOffsetReseter ? earliestOffsets : checkpointOffsets;\n   }\n \n+  private Long delayOffectCalculation(Option<String> lastCheckpointStr, Set<TopicPartition> topicPartitions, KafkaConsumer consumer) {", "originalCommit": "fbf281f59d808b3ea021012019d3f35ce524fa15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "625bd7fa9719fdb65fbfdaca3594be509dfd35e1", "url": "https://github.com/apache/hudi/commit/625bd7fa9719fdb65fbfdaca3594be509dfd35e1", "message": "HUDI-1233", "committedDate": "2020-09-28T01:17:12Z", "type": "commit"}, {"oid": "478633269aafefcb7fdc8f0c2d12dc2bb93387df", "url": "https://github.com/apache/hudi/commit/478633269aafefcb7fdc8f0c2d12dc2bb93387df", "message": "HUDI-1233", "committedDate": "2020-09-29T02:51:11Z", "type": "commit"}]}