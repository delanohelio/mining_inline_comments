{"pr_number": 1633, "pr_title": "[HUDI-858] Allow multiple operations to be executed within a single commit", "pr_createdAt": "2020-05-16T01:47:51Z", "pr_url": "https://github.com/apache/hudi/pull/1633", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODM0OA==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426138348", "bodyText": "better to change JavaRDD<HoodieRecord> to JavaRDD<WriteStatus> ?", "author": "leesf", "createdAt": "2020-05-16T09:49:03Z", "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientOnCopyOnWriteStorage.java", "diffHunk": "@@ -988,6 +988,44 @@ public void testRollbackAfterConsistencyCheckFailure() throws Exception {\n     return Pair.of(markerFilePath, result);\n   }\n \n+  @Test\n+  public void testMultiOperationsPerCommit() throws IOException {\n+    HoodieWriteConfig cfg = getConfigBuilder().withAutoCommit(false)\n+        .withAllowUnsafeMultiOperationsPerCommit(true)\n+        .build();\n+    HoodieWriteClient client = getHoodieWriteClient(cfg);\n+    String firstInstantTime = \"0000\";\n+    client.startCommitWithTime(firstInstantTime);\n+    int numRecords = 200;\n+    JavaRDD<HoodieRecord> writeRecords = jsc.parallelize(dataGen.generateInserts(firstInstantTime, numRecords), 1);\n+    JavaRDD<WriteStatus> result = client.bulkInsert(writeRecords, firstInstantTime);\n+    assertTrue(client.commit(firstInstantTime, result), \"Commit should succeed\");\n+    assertTrue(HoodieTestUtils.doesCommitExist(basePath, firstInstantTime),\n+        \"After explicit commit, commit file should be created\");\n+\n+    // Check the entire dataset has all records still\n+    String[] fullPartitionPaths = new String[dataGen.getPartitionPaths().length];\n+    for (int i = 0; i < fullPartitionPaths.length; i++) {\n+      fullPartitionPaths[i] = String.format(\"%s/%s/*\", basePath, dataGen.getPartitionPaths()[i]);\n+    }\n+    assertEquals(numRecords,\n+        HoodieClientTestUtils.read(jsc, basePath, sqlContext, fs, fullPartitionPaths).count(),\n+        \"Must contain \" + numRecords + \" records\");\n+\n+    String nextInstantTime = \"0001\";\n+    client.startCommitWithTime(nextInstantTime);\n+    JavaRDD<HoodieRecord> updateRecords = jsc.parallelize(dataGen.generateUpdates(nextInstantTime, numRecords), 1);\n+    JavaRDD<HoodieRecord> insertRecords = jsc.parallelize(dataGen.generateInserts(nextInstantTime, numRecords), 1);\n+    JavaRDD<HoodieRecord> inserts = client.bulkInsert(insertRecords, nextInstantTime);\n+    JavaRDD<HoodieRecord> upserts = client.upsert(updateRecords, nextInstantTime);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MzEzOQ==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426293139", "bodyText": "Fixed.", "author": "bvaradar", "createdAt": "2020-05-17T18:58:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODU1Mg==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426138552", "bodyText": "can be removed?", "author": "leesf", "createdAt": "2020-05-16T09:52:19Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/timeline/HoodieActiveTimeline.java", "diffHunk": "@@ -322,7 +327,15 @@ private void transitionState(HoodieInstant fromInstant, HoodieInstant toInstant,\n         ValidationUtils.checkArgument(metaClient.getFs().exists(new Path(metaClient.getMetaPath(),\n             fromInstant.getFileName())));\n         // Use Write Once to create Target File\n-        createImmutableFileInPath(new Path(metaClient.getMetaPath(), toInstant.getFileName()), data);\n+        if (allowRedundantTransitions) {\n+          createFileInPath(new Path(metaClient.getMetaPath(), toInstant.getFileName()), data);\n+        } else {\n+          if (allowRedundantTransitions) {\n+            createFileInPath(new Path(metaClient.getMetaPath(), toInstant.getFileName()), data);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MDg0Ng==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426290846", "bodyText": "Thanks for catching it. It was a bad merge.", "author": "bvaradar", "createdAt": "2020-05-17T18:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODU1Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4OTc0NQ==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426489745", "bodyText": "lets not mix underscore and dot notation? :)", "author": "vinothchandar", "createdAt": "2020-05-18T09:26:23Z", "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -99,6 +99,20 @@\n   private static final String MAX_CONSISTENCY_CHECKS_PROP = \"hoodie.consistency.check.max_checks\";\n   private static int DEFAULT_MAX_CONSISTENCY_CHECKS = 7;\n \n+  /**\n+   * HUDI-858 : There are users who had been directly using RDD APIs and have relied on a behavior in 0.4.x to allow\n+   * multiple write operations (upsert/buk-insert/...) to be executed within a single commit.\n+   *\n+   * Given Hudi commit protocol, these are generally unsafe operations and user need to handle failure scenarios. It\n+   * only works with COW table. Hudi 0.5.x had stopped this behavior.\n+   *\n+   * Given the importance of supporting such cases for the user's migration to 0.5.x, we are proposing a safety flag\n+   * (disabled by default) which will allow this old behavior.\n+   */\n+  private static final String ALLOW_UNSAFE_MULTI_OPERATIONS_PER_COMMIT =\n+      \"hoodie.allow.unsafe.multi_operations_per_commit\";", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MjU3Ng==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426492576", "bodyText": "@n3nash was also thinking about adding one of these.. Let's give these a consistent name.prefix.. _.hoodie.allow.multi.write.on.same.instant .. beginning with underscore can mean (spark also has similar undoced params.. ) its undoc-ed/hidden and to be used with full understanding..", "author": "vinothchandar", "createdAt": "2020-05-18T09:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4OTc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MjkyNA==", "url": "https://github.com/apache/hudi/pull/1633#discussion_r426492924", "bodyText": "rename based on property name suggested above?", "author": "vinothchandar", "createdAt": "2020-05-18T09:31:26Z", "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -723,6 +741,11 @@ public Builder withEmbeddedTimelineServerEnabled(boolean enabled) {\n       return this;\n     }\n \n+    public Builder withAllowUnsafeMultiOperationsPerCommit(boolean allow) {\n+      props.setProperty(ALLOW_UNSAFE_MULTI_OPERATIONS_PER_COMMIT, String.valueOf(allow));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "47cd94ca0f49bdabb005f03ad15cfae976d44527", "url": "https://github.com/apache/hudi/commit/47cd94ca0f49bdabb005f03ad15cfae976d44527", "message": "[HUDI-858] Allow multiple operations to be executed within a single commit", "committedDate": "2020-05-18T16:59:31Z", "type": "commit"}, {"oid": "47cd94ca0f49bdabb005f03ad15cfae976d44527", "url": "https://github.com/apache/hudi/commit/47cd94ca0f49bdabb005f03ad15cfae976d44527", "message": "[HUDI-858] Allow multiple operations to be executed within a single commit", "committedDate": "2020-05-18T16:59:31Z", "type": "forcePushed"}]}