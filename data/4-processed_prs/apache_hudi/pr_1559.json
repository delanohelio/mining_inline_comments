{"pr_number": 1559, "pr_title": "[HUDI-838] Support schema from HoodieCommitMetadata for HiveSync", "pr_createdAt": "2020-04-24T23:30:32Z", "pr_url": "https://github.com/apache/hudi/pull/1559", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3OTYzMw==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r416879633", "bodyText": "Rename to just getTableAvroSchema ?", "author": "bvaradar", "createdAt": "2020-04-28T19:50:15Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java", "diffHunk": "@@ -145,23 +146,37 @@ public MessageType getDataSchema() throws Exception {\n    * @return Avro schema for this table\n    * @throws Exception\n    */\n-  public Schema getTableSchema() throws Exception {\n-    return convertParquetSchemaToAvro(getDataSchema());\n+  public Schema getTableSchemaInAvroFormat() throws Exception {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxOTMyMg==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r417019322", "bodyText": "Done.", "author": "umehrot2", "createdAt": "2020-04-29T01:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3OTYzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4MzU2Nw==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r416883567", "bodyText": "You can introduce a getTableAvroSchemaFromDataFile to return in avro format.", "author": "bvaradar", "createdAt": "2020-04-28T19:57:08Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java", "diffHunk": "@@ -145,23 +146,37 @@ public MessageType getDataSchema() throws Exception {\n    * @return Avro schema for this table\n    * @throws Exception\n    */\n-  public Schema getTableSchema() throws Exception {\n-    return convertParquetSchemaToAvro(getDataSchema());\n+  public Schema getTableSchemaInAvroFormat() throws Exception {\n+    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata();\n+    return schemaFromCommitMetadata.isPresent() ? schemaFromCommitMetadata.get() :\n+           convertParquetSchemaToAvro(getDataSchema());\n+  }\n+\n+  /**\n+   * Gets the schema for a hoodie table in Parquet format.\n+   *\n+   * @return Parquet schema for the table\n+   * @throws Exception\n+   */\n+  public MessageType getTableSchemaInParquetFormat() throws Exception {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxOTQ1Nw==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r417019457", "bodyText": "Added.", "author": "umehrot2", "createdAt": "2020-04-29T01:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4MzU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4NDIxMQ==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r416884211", "bodyText": "Please check ParquetUtils class for similar APIs", "author": "bvaradar", "createdAt": "2020-04-28T19:58:13Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java", "diffHunk": "@@ -178,6 +193,17 @@ public Schema convertParquetSchemaToAvro(MessageType parquetSchema) {\n     return avroSchemaConverter.convert(parquetSchema);\n   }\n \n+  /**\n+   * Convert a avro scheme to the parquet format.\n+   *\n+   * @param schema The avro schema to convert\n+   * @return The converted parquet schema\n+   */\n+  public MessageType convertAvroSchemaToParquet(Schema schema) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMDQ1MA==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r417020450", "bodyText": "There is nothing really that we can re-use from ParquetUtils for the purpose of this PR. The APIs in ParquetUtils class accept a file path from which to read. However, here it first needs to go through the active timeline and find out the file path and then read the schema. The reading from file functions of this class can internally re-use some of the APIs from ParquetUtils but I don't think we should touch it as part of this PR.", "author": "umehrot2", "createdAt": "2020-04-29T01:32:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4NDIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1MTM1Ng==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r421851356", "bodyText": "the current code change is fine.", "author": "bvaradar", "createdAt": "2020-05-07T23:29:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4NDIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5MTI4MQ==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r416891281", "bodyText": "On a related note :  As we are start to rely on avro schema to be present in commit-metadata, we should store avro-schema as first-level entity in commit metadata instead of storing it in extra-metadata map and handle upgrade-downgrade (Added https://jira.apache.org/jira/browse/HUDI-844)", "author": "bvaradar", "createdAt": "2020-04-28T20:11:12Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java", "diffHunk": "@@ -145,23 +146,37 @@ public MessageType getDataSchema() throws Exception {\n    * @return Avro schema for this table\n    * @throws Exception\n    */\n-  public Schema getTableSchema() throws Exception {\n-    return convertParquetSchemaToAvro(getDataSchema());\n+  public Schema getTableSchemaInAvroFormat() throws Exception {\n+    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata();\n+    return schemaFromCommitMetadata.isPresent() ? schemaFromCommitMetadata.get() :\n+           convertParquetSchemaToAvro(getDataSchema());\n+  }\n+\n+  /**\n+   * Gets the schema for a hoodie table in Parquet format.\n+   *\n+   * @return Parquet schema for the table\n+   * @throws Exception\n+   */\n+  public MessageType getTableSchemaInParquetFormat() throws Exception {\n+    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata();\n+    return schemaFromCommitMetadata.isPresent() ? convertAvroSchemaToParquet(schemaFromCommitMetadata.get()) :\n+           getDataSchema();\n   }\n \n   /**\n    * Gets the schema for a hoodie table in Avro format from the HoodieCommitMetadata of the last commit.\n    *\n    * @return Avro schema for this table\n-   * @throws Exception\n    */\n-  public Schema getTableSchemaFromCommitMetadata() throws Exception {\n+  private Option<Schema> getTableSchemaFromCommitMetadata() {\n     try {\n       HoodieTimeline timeline = metaClient.getActiveTimeline().getCommitsTimeline().filterCompletedInstants();\n       byte[] data = timeline.getInstantDetails(timeline.lastInstant().get()).get();\n       HoodieCommitMetadata metadata = HoodieCommitMetadata.fromBytes(data, HoodieCommitMetadata.class);\n       String existingSchemaStr = metadata.getMetadata(HoodieCommitMetadata.SCHEMA_KEY);\n-      return new Schema.Parser().parse(existingSchemaStr);\n+      return StringUtils.isNullOrEmpty(existingSchemaStr) ? Option.empty() :", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMDYzNg==", "url": "https://github.com/apache/hudi/pull/1559#discussion_r417020636", "bodyText": "Agreed. This would be a good addition and make it cleaner.", "author": "umehrot2", "createdAt": "2020-04-29T01:33:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5MTI4MQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "6f30a6deb26f389f9cc8a6cabf6bdd2c6041920c", "url": "https://github.com/apache/hudi/commit/6f30a6deb26f389f9cc8a6cabf6bdd2c6041920c", "message": "Support schema from HoodieCommitMetadata for HiveSync\n\ncr https://code.amazon.com/reviews/CR-24090847", "committedDate": "2020-04-29T02:38:44Z", "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "e2acdb900ea8cb3a1c245467e474ee5fd659cedd", "url": "https://github.com/apache/hudi/commit/e2acdb900ea8cb3a1c245467e474ee5fd659cedd", "message": "Support schema from HoodieCommitMetadata for HiveSync", "committedDate": "2020-05-07T20:49:05Z", "type": "commit"}, {"oid": "e2acdb900ea8cb3a1c245467e474ee5fd659cedd", "url": "https://github.com/apache/hudi/commit/e2acdb900ea8cb3a1c245467e474ee5fd659cedd", "message": "Support schema from HoodieCommitMetadata for HiveSync", "committedDate": "2020-05-07T20:49:05Z", "type": "forcePushed"}]}