{"pr_number": 1317, "pr_title": "[HUDI-605] Avoid calculating the size of schema redundantly", "pr_createdAt": "2020-02-10T06:24:47Z", "pr_url": "https://github.com/apache/hudi/pull/1317", "timeline": [{"oid": "7e46bdda66a74eeb622db3f61706a6c925a81ec7", "url": "https://github.com/apache/hudi/commit/7e46bdda66a74eeb622db3f61706a6c925a81ec7", "message": "[HUDI-605] Avoid calculating the size of schema redundantly", "committedDate": "2020-02-10T06:18:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NDYxMA==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r376894610", "bodyText": "why change these?", "author": "vinothchandar", "createdAt": "2020-02-10T07:09:07Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/util/collection/DiskBasedMap.java", "diffHunk": "@@ -223,8 +223,8 @@ private R get(ValueMetadata entry) {\n   private synchronized R put(T key, R value, boolean flush) {\n     try {\n       byte[] val = SerializationUtils.serialize(value);\n-      Integer valueSize = val.length;\n-      Long timestamp = System.currentTimeMillis();\n+      int valueSize = val.length;", "originalCommit": "7e46bdda66a74eeb622db3f61706a6c925a81ec7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NzI2Mw==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r376897263", "bodyText": "The type of val.lenght is primitive type(int), the type of System.currentTimeMillis() is primitive type(long).", "author": "lamberken", "createdAt": "2020-02-10T07:19:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NDYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5ODQ3Mw==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r376898473", "bodyText": "Will revert it if this against contribution guide. Thanks", "author": "lamberken", "createdAt": "2020-02-10T07:23:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NDYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5OTM3NQ==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r376899375", "bodyText": "Done.", "author": "lamberken", "createdAt": "2020-02-10T07:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NDYxMA=="}], "type": "inlineReview"}, {"oid": "9784ca2f0df2e9da85ee0c548ac05a487aec4049", "url": "https://github.com/apache/hudi/commit/9784ca2f0df2e9da85ee0c548ac05a487aec4049", "message": "revert org.apache.hudi.common.util.collection.DiskBasedMap", "committedDate": "2020-02-10T07:26:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0OTE1MQ==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r377649151", "bodyText": "Would be still keep to LOG.info or Any reason to change to debug?", "author": "leesf", "createdAt": "2020-02-11T13:57:47Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/util/HoodieRecordSizeEstimator.java", "diffHunk": "@@ -49,8 +48,9 @@ public long sizeEstimate(HoodieRecord<T> hoodieRecord) {\n     // note the sizes and differences. A correct estimation in such cases is handled in\n     /** {@link ExternalSpillableMap} **/\n     long sizeOfRecord = ObjectSizeCalculator.getObjectSize(hoodieRecord);\n-    long sizeOfSchema = ObjectSizeCalculator.getObjectSize(schema);\n-    LOG.info(\"SizeOfRecord => \" + sizeOfRecord + \" SizeOfSchema => \" + sizeOfSchema);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"SizeOfRecord => \" + sizeOfRecord + \" SizeOfSchema => \" + sizeOfSchema);\n+    }", "originalCommit": "9784ca2f0df2e9da85ee0c548ac05a487aec4049", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczMTkwMA==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r377731900", "bodyText": "Thanks for reviewing this. Use LOG.info will print each time when you put an element, LOG.debug is better.", "author": "lamberken", "createdAt": "2020-02-11T16:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0OTE1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczNDQ0Nw==", "url": "https://github.com/apache/hudi/pull/1317#discussion_r377734447", "bodyText": "More, HoodieRecordSizeEstimator is mainly used in ExternalSpillableMap, ExternalSpillableMap#put has logged it.\nif (shouldEstimatePayloadSize && estimatedPayloadSize == 0) {\n  // At first, use the sizeEstimate of a record being inserted into the spillable map.\n  // Note, the converter may over estimate the size of a record in the JVM\n  this.estimatedPayloadSize = keySizeEstimator.sizeEstimate(key) + valueSizeEstimator.sizeEstimate(value);\n  LOG.info(\"Estimated Payload size => \" + estimatedPayloadSize);\n}", "author": "lamberken", "createdAt": "2020-02-11T16:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0OTE1MQ=="}], "type": "inlineReview"}]}