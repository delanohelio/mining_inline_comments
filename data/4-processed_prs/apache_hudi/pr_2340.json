{"pr_number": 2340, "pr_title": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "pr_createdAt": "2020-12-16T09:18:11Z", "pr_url": "https://github.com/apache/hudi/pull/2340", "timeline": [{"oid": "67f95c9158c3810f92f97d3ec9b18d624952fef2", "url": "https://github.com/apache/hudi/commit/67f95c9158c3810f92f97d3ec9b18d624952fef2", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T09:20:11Z", "type": "forcePushed"}, {"oid": "c7e796f2ea3d362fdd0fe15bd3ab8cf9449f552f", "url": "https://github.com/apache/hudi/commit/c7e796f2ea3d362fdd0fe15bd3ab8cf9449f552f", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T10:27:05Z", "type": "forcePushed"}, {"oid": "85a4b6d72fc61296301fb0b7ec6fabcc8957f041", "url": "https://github.com/apache/hudi/commit/85a4b6d72fc61296301fb0b7ec6fabcc8957f041", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T10:28:48Z", "type": "forcePushed"}, {"oid": "472bc82cb6cbf381181030731ab6791088f0e075", "url": "https://github.com/apache/hudi/commit/472bc82cb6cbf381181030731ab6791088f0e075", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T10:30:17Z", "type": "forcePushed"}, {"oid": "aa0b73a258c04644054f6894620ff6221785f0ce", "url": "https://github.com/apache/hudi/commit/aa0b73a258c04644054f6894620ff6221785f0ce", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T10:32:38Z", "type": "forcePushed"}, {"oid": "99af63bdc0b94adb8cd6f364175c91039c3ac6af", "url": "https://github.com/apache/hudi/commit/99af63bdc0b94adb8cd6f364175c91039c3ac6af", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T10:51:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyNDgwMg==", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544224802", "bodyText": "It's not good for reading.  now - daysBefore  = now - (now - daysTillNow * 24 * 60 * 60 * 1000L)?", "author": "yanghua", "createdAt": "2020-12-16T11:31:57Z", "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,23 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"\n+              + riderDriverSuffix, generateRangeRandomTimestamp(7));\n       return new OverwriteWithLatestAvroPayload(Option.of(rec));\n     }\n \n+    /**\n+     * Generate timestamp range from {@param daysTillNow} before to now.\n+     */\n+    private static long generateRangeRandomTimestamp(int daysTillNow) {\n+      long now = System.currentTimeMillis();\n+      long daysBefore = now - daysTillNow * 24 * 60 * 60 * 1000L;\n+      return daysBefore + (long)(Math.random() * (now - daysBefore));", "originalCommit": "99af63bdc0b94adb8cd6f364175c91039c3ac6af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDM3MA==", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544234370", "bodyText": "It's not good for reading. now - daysBefore  = now - (now - daysTillNow * 24 * 60 * 60 * 1000L)?\n\nhow about this\n    private static long generateRangeRandomTimestamp(int daysTillNow) {\n      long interval = daysTillNow * 24 * 60 * 60 * 1000L;\n      return System.currentTimeMillis() - (long)(Math.random() * interval);\n    }", "author": "wangxianghu", "createdAt": "2020-12-16T11:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyNDgwMg=="}], "type": "inlineReview"}, {"oid": "10a83f56167663bc570ce1b3dd71d42fa0525858", "url": "https://github.com/apache/hudi/commit/10a83f56167663bc570ce1b3dd71d42fa0525858", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T11:45:14Z", "type": "forcePushed"}, {"oid": "0d61040f6bc755b9acf8302b61649e9e13a336b4", "url": "https://github.com/apache/hudi/commit/0d61040f6bc755b9acf8302b61649e9e13a336b4", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-16T11:46:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1OTQ0NA==", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544359444", "bodyText": "Does maxIntervalMillis look better?", "author": "yanghua", "createdAt": "2020-12-16T14:50:03Z", "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,22 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"\n+              + riderDriverSuffix, generateRangeRandomTimestamp(7));\n       return new OverwriteWithLatestAvroPayload(Option.of(rec));\n     }\n \n+    /**\n+     * Generate timestamp range from {@param daysTillNow} before to now.\n+     */\n+    private static long generateRangeRandomTimestamp(int daysTillNow) {\n+      long interval = daysTillNow * 24 * 60 * 60 * 1000L;", "originalCommit": "0d61040f6bc755b9acf8302b61649e9e13a336b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM3Mzk0Mg==", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544373942", "bodyText": "Miss whitespace before \"driver-\"", "author": "yanghua", "createdAt": "2020-12-16T15:07:32Z", "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,22 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"", "originalCommit": "0d61040f6bc755b9acf8302b61649e9e13a336b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0aac1b438e22050552e44bc2c8df1ccc55c74eda", "url": "https://github.com/apache/hudi/commit/0aac1b438e22050552e44bc2c8df1ccc55c74eda", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-17T01:16:49Z", "type": "commit"}, {"oid": "0aac1b438e22050552e44bc2c8df1ccc55c74eda", "url": "https://github.com/apache/hudi/commit/0aac1b438e22050552e44bc2c8df1ccc55c74eda", "message": "[MINOR] Make QuickstartUtil generate random timestamp instead of 0", "committedDate": "2020-12-17T01:16:49Z", "type": "forcePushed"}]}