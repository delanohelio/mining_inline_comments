{"pr_number": 1348, "pr_title": "HUDI-597 Enable incremental pulling from defined partitions", "pr_createdAt": "2020-02-22T02:56:39Z", "pr_url": "https://github.com/apache/hudi/pull/1348", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NjU5NA==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r382966594", "bodyText": "can we move the \"\" default to DataSourceOptions, to keep it consistent with how the other options are defined", "author": "vinothchandar", "createdAt": "2020-02-23T05:46:39Z", "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -84,7 +85,7 @@ class IncrementalRelation(val sqlContext: SQLContext,\n \n   val filters = {\n     if (optParams.contains(DataSourceReadOptions.PUSH_DOWN_INCR_FILTERS_OPT_KEY)) {\n-      val filterStr = optParams.get(DataSourceReadOptions.PUSH_DOWN_INCR_FILTERS_OPT_KEY).getOrElse(\"\")\n+      val filterStr = optParams.getOrElse(DataSourceReadOptions.PUSH_DOWN_INCR_FILTERS_OPT_KEY, \"\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA1NTYxNw==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r383055617", "bodyText": "Good point, will do", "author": "garyli1019", "createdAt": "2020-02-24T00:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NjU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NjY2NA==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r382966664", "bodyText": "here we will compare with the default variable constant.", "author": "vinothchandar", "createdAt": "2020-02-23T05:48:26Z", "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -100,17 +101,22 @@ class IncrementalRelation(val sqlContext: SQLContext,\n         .get, classOf[HoodieCommitMetadata])\n       fileIdToFullPath ++= metadata.getFileIdAndFullPaths(basePath).toMap\n     }\n+    val pathGlobPattern = optParams.getOrElse(DataSourceReadOptions.INCR_PATH_GLOB_OPT_KEY, \"\")\n+    val filteredFullPath = if(!pathGlobPattern.equals(\"\")) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2NjcwNQ==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r382966705", "bodyText": "please enclose within braces for readability.", "author": "vinothchandar", "createdAt": "2020-02-23T05:49:24Z", "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -100,17 +101,22 @@ class IncrementalRelation(val sqlContext: SQLContext,\n         .get, classOf[HoodieCommitMetadata])\n       fileIdToFullPath ++= metadata.getFileIdAndFullPaths(basePath).toMap\n     }\n+    val pathGlobPattern = optParams.getOrElse(DataSourceReadOptions.INCR_PATH_GLOB_OPT_KEY, \"\")\n+    val filteredFullPath = if(!pathGlobPattern.equals(\"\")) {\n+      val globMatcher = new GlobPattern(\"*\" + pathGlobPattern)\n+      fileIdToFullPath.filter(p => globMatcher.matches(p._2))\n+    } else fileIdToFullPath", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2Njg1Mg==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r382966852", "bodyText": "should we leave the * to the user? i.e let the user pass in * if needed? or is that needed for the matching...\nI am not familiar with this class per se..\nAlso http://hadoop.apache.org/docs/r2.8.0/api/allclasses-noframe.html does not seem to have GlobPattern is this class still around.. Was a bit confused by that..", "author": "vinothchandar", "createdAt": "2020-02-23T05:52:37Z", "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -100,17 +101,22 @@ class IncrementalRelation(val sqlContext: SQLContext,\n         .get, classOf[HoodieCommitMetadata])\n       fileIdToFullPath ++= metadata.getFileIdAndFullPaths(basePath).toMap\n     }\n+    val pathGlobPattern = optParams.getOrElse(DataSourceReadOptions.INCR_PATH_GLOB_OPT_KEY, \"\")\n+    val filteredFullPath = if(!pathGlobPattern.equals(\"\")) {\n+      val globMatcher = new GlobPattern(\"*\" + pathGlobPattern)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA1NTU2MA==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r383055560", "bodyText": "the path here is a full HDFS path so we need * here to match with the prefix.  The benefit if we include * here is that the user will have a consistent interface. When loading the full table, they will do .load(basePath + \"/2016/*/*/*\") and in incremental pulling the String the user defined will be the same. If we leave the * to the user I think it might cause some confusion there and the users need to read this part of the code themselves to fully understand how things work here.\nYea I couldn't find any documents as well. The GlobFilter in the API list is using GlobPattern inside https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/GlobFilter.java#L67 and the class is still around https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/GlobPattern.java", "author": "garyli1019", "createdAt": "2020-02-24T00:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2Njg1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2Njk2Nw==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r382966967", "bodyText": "is the leading / necessary?  could we make it (if not already) such that the matchong works with or without it..", "author": "vinothchandar", "createdAt": "2020-02-23T05:54:41Z", "path": "hudi-spark/src/test/scala/TestDataSource.scala", "diffHunk": "@@ -135,6 +136,14 @@ class TestDataSource extends AssertionsForJUnit {\n     countsPerCommit = hoodieIncViewDF2.groupBy(\"_hoodie_commit_time\").count().collect();\n     assertEquals(1, countsPerCommit.length)\n     assertEquals(commitInstantTime2, countsPerCommit(0).get(0))\n+\n+    // pull the latest commit within certain partitions\n+    val hoodieIncViewDF3 = spark.read.format(\"org.apache.hudi\")\n+      .option(DataSourceReadOptions.QUERY_TYPE_OPT_KEY, DataSourceReadOptions.QUERY_TYPE_INCREMENTAL_OPT_VAL)\n+      .option(DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY, commitInstantTime1)\n+      .option(DataSourceReadOptions.INCR_PATH_GLOB_OPT_KEY, \"/2016/*/*/*\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA1NTk1OQ==", "url": "https://github.com/apache/hudi/pull/1348#discussion_r383055959", "bodyText": "Since we add * in front of it so it will still work without /. Here is just trying to be consistent with loading the full table.", "author": "garyli1019", "createdAt": "2020-02-24T00:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2Njk2Nw=="}], "type": "inlineReview"}, {"oid": "8306986f932c7a012226d82c7b3e8a8c967440e8", "url": "https://github.com/apache/hudi/commit/8306986f932c7a012226d82c7b3e8a8c967440e8", "message": "HUDI-597 Enable incremental pulling from defined partitions", "committedDate": "2020-02-24T00:52:50Z", "type": "commit"}, {"oid": "8306986f932c7a012226d82c7b3e8a8c967440e8", "url": "https://github.com/apache/hudi/commit/8306986f932c7a012226d82c7b3e8a8c967440e8", "message": "HUDI-597 Enable incremental pulling from defined partitions", "committedDate": "2020-02-24T00:52:50Z", "type": "forcePushed"}]}