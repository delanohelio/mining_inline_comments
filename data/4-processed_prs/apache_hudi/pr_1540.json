{"pr_number": 1540, "pr_title": "[HUDI-819] Fix a bug with MergeOnReadLazyInsertIterable. ", "pr_createdAt": "2020-04-20T22:36:32Z", "pr_url": "https://github.com/apache/hudi/pull/1540", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NDgxMg==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r413294812", "bodyText": "Can we rename things per a standard factory pattern here?  WriteHandleCreatorFactory with a create() method?", "author": "vinothchandar", "createdAt": "2020-04-22T20:11:58Z", "path": "hudi-client/src/main/java/org/apache/hudi/io/HoodieHandleCreator.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public interface HoodieHandleCreator<T extends HoodieRecordPayload> {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NTYzNw==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r413295637", "bodyText": "this will then become CreateHandleFactory", "author": "vinothchandar", "createdAt": "2020-04-22T20:12:40Z", "path": "hudi-client/src/main/java/org/apache/hudi/io/DefaultHoodieWriteHandleCreator.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class DefaultHoodieWriteHandleCreator<T extends HoodieRecordPayload> implements HoodieHandleCreator<T> {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NTkzNg==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r413295936", "bodyText": "and this AppendHandleFactory", "author": "vinothchandar", "createdAt": "2020-04-22T20:12:55Z", "path": "hudi-client/src/main/java/org/apache/hudi/io/HoodieAppendHandleCreator.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class HoodieAppendHandleCreator<T extends HoodieRecordPayload> extends DefaultHoodieWriteHandleCreator<T> {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NTMxOQ==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414295319", "bodyText": "This inheritance is kind of confusing..", "author": "vinothchandar", "createdAt": "2020-04-24T05:05:19Z", "path": "hudi-client/src/main/java/org/apache/hudi/io/AppendHandleFactory.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class AppendHandleFactory<T extends HoodieRecordPayload> extends CreateHandleFactory<T> {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5Njc2MQ==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414296761", "bodyText": "if you need some method in both Append and Create Handle factories, perhaps move it as a default method in the interface?", "author": "vinothchandar", "createdAt": "2020-04-24T05:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NTMxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NjE5MQ==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414296191", "bodyText": "Rename to just WriteHandleFactory?", "author": "vinothchandar", "createdAt": "2020-04-24T05:07:30Z", "path": "hudi-client/src/main/java/org/apache/hudi/io/WriteHandleCreatorFactory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public interface WriteHandleCreatorFactory<T extends HoodieRecordPayload> {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5Njg1MA==", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414296850", "bodyText": "please rename this accordingly as well", "author": "vinothchandar", "createdAt": "2020-04-24T05:09:18Z", "path": "hudi-client/src/main/java/org/apache/hudi/execution/LazyInsertIterable.java", "diffHunk": "@@ -43,26 +44,34 @@\n /**\n  * Lazy Iterable, that writes a stream of HoodieRecords sorted by the partitionPath, into new files.\n  */\n-public class CopyOnWriteLazyInsertIterable<T extends HoodieRecordPayload>\n+public class LazyInsertIterable<T extends HoodieRecordPayload>\n     extends LazyIterableIterator<HoodieRecord<T>, List<WriteStatus>> {\n \n   protected final HoodieWriteConfig hoodieConfig;\n   protected final String instantTime;\n   protected final HoodieTable<T> hoodieTable;\n   protected final String idPrefix;\n-  protected int numFilesWritten;\n   protected SparkTaskContextSupplier sparkTaskContextSupplier;\n+  protected WriteHandleCreatorFactory<T> writeHandleCreatorFactory;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8647744e16254a56598565f0a6a6276e936251d9", "url": "https://github.com/apache/hudi/commit/8647744e16254a56598565f0a6a6276e936251d9", "message": "Fix a bug with MergeOnReadLazyInsertIterable. Variable declared here[1] masks protected statuses variable. So although hoodie writes data, will not include writestatus in the completed section. This can cause duplicates being written\n\n[1] https://github.com/apache/incubator-hudi/blob/master/hudi-client/src/main/java/org/apache/hudi/execution/MergeOnReadLazyInsertIterable.java#L53", "committedDate": "2020-04-24T19:10:53Z", "type": "commit"}, {"oid": "8647744e16254a56598565f0a6a6276e936251d9", "url": "https://github.com/apache/hudi/commit/8647744e16254a56598565f0a6a6276e936251d9", "message": "Fix a bug with MergeOnReadLazyInsertIterable. Variable declared here[1] masks protected statuses variable. So although hoodie writes data, will not include writestatus in the completed section. This can cause duplicates being written\n\n[1] https://github.com/apache/incubator-hudi/blob/master/hudi-client/src/main/java/org/apache/hudi/execution/MergeOnReadLazyInsertIterable.java#L53", "committedDate": "2020-04-24T19:10:53Z", "type": "forcePushed"}]}