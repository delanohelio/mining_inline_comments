{"pr_number": 1690, "pr_title": "[HUDI-908] Add some data types to HoodieTestDataGenerator and fix some bugs", "pr_createdAt": "2020-05-31T03:02:05Z", "pr_url": "https://github.com/apache/hudi/pull/1690", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3OTIyMQ==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r435079221", "bodyText": "Is this guaranteed to be list for a fixed decimal value ? Shouldn't this be scalar ?", "author": "bvaradar", "createdAt": "2020-06-04T08:24:56Z", "path": "hudi-common/src/main/java/org/apache/hudi/avro/MercifulJsonConverter.java", "diffHunk": "@@ -245,10 +245,14 @@ private static JsonToAvroFieldProcessor generateFixedTypeHandler() {\n     return new JsonToAvroFieldProcessor() {\n       @Override\n       public Pair<Boolean, Object> convert(Object value, String name, Schema schema) {\n-        byte[] src = value.toString().getBytes();\n+        ArrayList<Integer> converval = (ArrayList<Integer>) value;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY5MjUyOQ==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r435692529", "bodyText": "Currently Fix.toString() will convert bytes to string,\n\npublic String toString() { return Arrays.toString(bytes); } \n\nthe result is like \"decimal_val\": [0, 0, 14, -63, -52],\n\nMercifulJsonConverter.convert will parse json string to jsonObjectMap,\n\npublic GenericRecord convert(String json, Schema schema) {\n    try {\n      Map<String, Object> jsonObjectMap = mapper.readValue(json, Map.class);\n      return convertJsonToAvro(jsonObjectMap, schema);\n    } catch (IOException e) {\n      throw new HoodieIOException(e.getMessage(), e);\n    }\n  }\n\nit will convert \"decimal_val\": [0, 0, 14, -63, -52], to ArrayList.\n\n\nthe generateFixedTypeHandler() will process it incorrect.", "author": "shenh062326", "createdAt": "2020-06-05T05:08:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3OTIyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0NDE3Mw==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r435744173", "bodyText": "@bvaradar Is it a bug?", "author": "shenh062326", "createdAt": "2020-06-05T07:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3OTIyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1NzQ1Mw==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r436257453", "bodyText": "Thanks for the explanation. Makes sense. ObjectMapper uses List to represent FixedType.  So, each entry in the list is within the range of [-128, 127]. right ?", "author": "bvaradar", "createdAt": "2020-06-06T10:27:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3OTIyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMxMTczNg==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r436311736", "bodyText": "Thanks for the explanation. Makes sense. ObjectMapper uses List to represent FixedType. So, each entry in the list is within the range of [-128, 127]. right ?\n\nYes.", "author": "shenh062326", "createdAt": "2020-06-07T00:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA3OTIyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1NzUxMw==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r436257513", "bodyText": "Minor Comment: Can you use List instead of ArrayList", "author": "bvaradar", "createdAt": "2020-06-06T10:29:01Z", "path": "hudi-common/src/main/java/org/apache/hudi/avro/MercifulJsonConverter.java", "diffHunk": "@@ -245,10 +245,14 @@ private static JsonToAvroFieldProcessor generateFixedTypeHandler() {\n     return new JsonToAvroFieldProcessor() {\n       @Override\n       public Pair<Boolean, Object> convert(Object value, String name, Schema schema) {\n-        byte[] src = value.toString().getBytes();\n+        ArrayList<Integer> converval = (ArrayList<Integer>) value;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMxMzA4Nw==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r436313087", "bodyText": "Sure", "author": "shenh062326", "createdAt": "2020-06-07T00:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1NzUxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMxMzEzNw==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r436313137", "bodyText": "Minor Comment: Can you use List instead of ArrayList\n\nDone", "author": "shenh062326", "createdAt": "2020-06-07T00:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1NzUxMw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2NDk0Mg==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r443164942", "bodyText": "Minor: Instead of naming based on types, can we give relevant names like :distance_in_meters (int_type), seconds_since_epoch(long_val), payment_in_dollars,...", "author": "bvaradar", "createdAt": "2020-06-20T22:36:33Z", "path": "hudi-utilities/src/test/resources/delta-streamer-config/source.avsc", "diffHunk": "@@ -43,8 +43,41 @@\n   }, {\n     \"name\" : \"end_lon\",\n     \"type\" : \"double\"\n-  },\n-  {\n+  }, {\n+    \"name\" : \"int_val\",", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIxNjA2Nw==", "url": "https://github.com/apache/hudi/pull/1690#discussion_r443216067", "bodyText": "Done", "author": "shenh062326", "createdAt": "2020-06-21T12:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2NDk0Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "024ad1a637353d90f200bed81284f39e4380447d", "url": "https://github.com/apache/hudi/commit/024ad1a637353d90f200bed81284f39e4380447d", "message": "[HUDI-908] Add some data types to HoodieTestDataGenerator and fix some some bugs.", "committedDate": "2020-06-21T13:55:08Z", "type": "commit"}, {"oid": "024ad1a637353d90f200bed81284f39e4380447d", "url": "https://github.com/apache/hudi/commit/024ad1a637353d90f200bed81284f39e4380447d", "message": "[HUDI-908] Add some data types to HoodieTestDataGenerator and fix some some bugs.", "committedDate": "2020-06-21T13:55:08Z", "type": "forcePushed"}]}