{"pr_number": 1584, "pr_title": "[HUDI-902] Avoid exception when getSchemaProvider", "pr_createdAt": "2020-05-02T09:30:52Z", "pr_url": "https://github.com/apache/hudi/pull/1584", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0ODU3OA==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419148578", "bodyText": "So this is the line where you mentioned the exception is thrown for you. Am I correct?", "author": "pratyakshsharma", "createdAt": "2020-05-03T19:32:03Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/SourceFormatAdapter.java", "diffHunk": "@@ -64,19 +64,22 @@ public SourceFormatAdapter(Source source) {\n       }\n       case ROW: {\n         InputBatch<Dataset<Row>> r = ((RowSource) source).fetchNext(lastCkptStr, sourceLimit);\n-        return new InputBatch<>(Option.ofNullable(r.getBatch().map(\n-            rdd -> (\n-                (r.getSchemaProvider() instanceof FilebasedSchemaProvider)\n-                    // If the source schema is specified through Avro schema,\n-                    // pass in the schema for the Row-to-Avro conversion\n-                    // to avoid nullability mismatch between Avro schema and Row schema\n-                    ? AvroConversionUtils.createRdd(\n-                        rdd, r.getSchemaProvider().getSourceSchema(),\n-                        HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                    : AvroConversionUtils.createRdd(\n-                        rdd, HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                ))\n-            .orElse(null)), r.getCheckpointForNextBatch(), r.getSchemaProvider());\n+        if (r.getBatch().isPresent()) {\n+          return new InputBatch<>(r.getBatch().map(\n+              rdd -> (\n+                  (r.getSchemaProvider() instanceof FilebasedSchemaProvider)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0OTAyOA==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419149028", "bodyText": "I think since this method tries to fetch data in avro format, pre specifying a schema provider is mandatory. So even if you do not get any data, you should mention RowBasedSchemaProvider as the schema provider in the very beginning. If that is done, there is no need to do this change I believe. :)\nDo you face issues after pre specifying schema provider?\nPlease let me know your thoughts on this.", "author": "pratyakshsharma", "createdAt": "2020-05-03T19:35:23Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/SourceFormatAdapter.java", "diffHunk": "@@ -64,19 +64,22 @@ public SourceFormatAdapter(Source source) {\n       }\n       case ROW: {\n         InputBatch<Dataset<Row>> r = ((RowSource) source).fetchNext(lastCkptStr, sourceLimit);\n-        return new InputBatch<>(Option.ofNullable(r.getBatch().map(\n-            rdd -> (\n-                (r.getSchemaProvider() instanceof FilebasedSchemaProvider)\n-                    // If the source schema is specified through Avro schema,\n-                    // pass in the schema for the Row-to-Avro conversion\n-                    // to avoid nullability mismatch between Avro schema and Row schema\n-                    ? AvroConversionUtils.createRdd(\n-                        rdd, r.getSchemaProvider().getSourceSchema(),\n-                        HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                    : AvroConversionUtils.createRdd(\n-                        rdd, HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                ))\n-            .orElse(null)), r.getCheckpointForNextBatch(), r.getSchemaProvider());\n+        if (r.getBatch().isPresent()) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1MDE1MQ==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419150151", "bodyText": "If I understand correctly, not specifying schema provider should be feasible in case of row based sources when you try to fetch the data in row format (i.e when using transformers).", "author": "pratyakshsharma", "createdAt": "2020-05-03T19:44:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0OTAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxOTMzNw==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419919337", "bodyText": "If I understand correctly, not specifying schema provider should be feasible in case of row based sources when you try to fetch the data in row format (i.e when using transformers).\n\nhi @pratyakshsharma I don't quite get this point. I'm referring tofetchNewDataInAvroFormat() being called when transformer is not set\nhttps://github.com/apache/incubator-hudi/blob/14d4fea8339913c0df8ea829036a45a187c55208/hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java#L305-L306\nin case of ROW type source and no new data, r.getSchemaProvider() will throw an exception.\nAn example use case: reading a parquet source (ROW format) without setting either transformer or schemaprovider class, it works when new data keeps coming. But an exception will be thrown when no new data detected, calling r.getSchemaProvider() in this line below will throw and ask user to set schemaprovider.\nhttps://github.com/apache/incubator-hudi/blob/d0ee95ed16de6c3568f575169cb993b9c10ced3d/hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/SourceFormatAdapter.java#L79\nIf in this example we still require users to set schema provider (like the built-in RowBasedSchemaProvider), then it conflicts with ROW source getting implicit schema. It seems like a usability issue.\nCould you confirm this understanding is accurate please?", "author": "xushiyan", "createdAt": "2020-05-05T07:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0OTAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2NjAwMg==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r422366002", "bodyText": "I'm referring tofetchNewDataInAvroFormat() being called when transformer is not set in case of ROW type source and no new data\n\nYeah I got that. I was actually thinking on the following lines - Avro relies on schemas. So the original thinking behind writing the function fetchNewDataInAvroFormat() might have been that schema provider should be pre specified.\n\nit conflicts with ROW source getting implicit schema. It seems like a usability issue.\n\nBut the above point is valid. I guess you are correct :)", "author": "pratyakshsharma", "createdAt": "2020-05-08T20:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0OTAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1MDkyMQ==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419150921", "bodyText": "when fetching in row format, this change should not be needed since RowBasedSchemaProvider is already getting initialised at the end.", "author": "pratyakshsharma", "createdAt": "2020-05-03T19:50:20Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -276,6 +276,8 @@ private void refreshTimeline() throws IOException {\n       // to generic records for writing\n       InputBatch<Dataset<Row>> dataAndCheckpoint =\n           formatAdapter.fetchNewDataInRowFormat(resumeCheckpointStr, cfg.sourceLimit);\n+      SchemaProvider schemaProviderFromFetched = dataAndCheckpoint.getBatch().isPresent()\n+          ? dataAndCheckpoint.getSchemaProvider() : null;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2NzIwMQ==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r422367201", "bodyText": "@xushiyan Here this change should not be needed. WDYT?", "author": "pratyakshsharma", "createdAt": "2020-05-08T20:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1MDkyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1MTAzMg==", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419151032", "bodyText": "please refer to my other comment on the changes in SourceFormatAdapter.", "author": "pratyakshsharma", "createdAt": "2020-05-03T19:51:20Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -298,15 +300,15 @@ private void refreshTimeline() throws IOException {\n       // default to RowBasedSchemaProvider\n       schemaProvider = this.schemaProvider == null || this.schemaProvider.getTargetSchema() == null\n           ? transformed.map(r -> (SchemaProvider) new RowBasedSchemaProvider(r.schema())).orElse(\n-          dataAndCheckpoint.getSchemaProvider())\n+          schemaProviderFromFetched)\n           : this.schemaProvider;\n     } else {\n       // Pull the data from the source & prepare the write\n       InputBatch<JavaRDD<GenericRecord>> dataAndCheckpoint =\n           formatAdapter.fetchNewDataInAvroFormat(resumeCheckpointStr, cfg.sourceLimit);\n       avroRDDOptional = dataAndCheckpoint.getBatch();\n       checkpointStr = dataAndCheckpoint.getCheckpointForNextBatch();\n-      schemaProvider = dataAndCheckpoint.getSchemaProvider();\n+      schemaProvider = avroRDDOptional.isPresent() ? dataAndCheckpoint.getSchemaProvider() : null;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "29ba2223ad1ee729ee3330693e2514081335cd9d", "url": "https://github.com/apache/hudi/commit/29ba2223ad1ee729ee3330693e2514081335cd9d", "message": "[HUDI-902] Avoid exception when getSchemaProvider\n\n* When no new input data, don't throw exception for null SchemaProvider\n* Return the newly added NullSchemaProvider instead", "committedDate": "2020-05-16T01:45:40Z", "type": "commit"}, {"oid": "29ba2223ad1ee729ee3330693e2514081335cd9d", "url": "https://github.com/apache/hudi/commit/29ba2223ad1ee729ee3330693e2514081335cd9d", "message": "[HUDI-902] Avoid exception when getSchemaProvider\n\n* When no new input data, don't throw exception for null SchemaProvider\n* Return the newly added NullSchemaProvider instead", "committedDate": "2020-05-16T01:45:40Z", "type": "forcePushed"}]}