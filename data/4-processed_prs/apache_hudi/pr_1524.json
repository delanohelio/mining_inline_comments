{"pr_number": 1524, "pr_title": "[HUDI-801] Adding a way to post process schema after it is fetched", "pr_createdAt": "2020-04-16T20:11:26Z", "pr_url": "https://github.com/apache/hudi/pull/1524", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MDA0NQ==", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410180045", "bodyText": "Can we try to use the one from TestHoodieDeltaStreamer? That would help avoid code duplication.", "author": "pratyakshsharma", "createdAt": "2020-04-17T12:09:22Z", "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestSchemaPostProcessor.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.apache.hudi.utilities;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.io.IOException;\n+import org.apache.avro.Schema;\n+import org.apache.avro.Schema.Type;\n+import org.apache.avro.SchemaBuilder;\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.apache.hudi.common.util.collection.Pair;\n+import org.apache.hudi.utilities.schema.SchemaPostProcessor;\n+import org.apache.hudi.utilities.schema.SchemaProvider;\n+import org.apache.hudi.utilities.schema.SchemaProvider.Config;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.junit.Test;\n+\n+public class TestSchemaPostProcessor {\n+\n+  private TypedProperties properties = new TypedProperties();\n+\n+  @Test\n+  public void testPostProcessor() throws IOException {\n+    properties.put(Config.SCHEMA_POST_PROCESSOR_PROP, DummySchemaPostProcessor.class.getName());\n+\n+    JavaSparkContext jsc =\n+        UtilHelpers.buildSparkContext(this.getClass().getName() + \"-hoodie\", \"local[2]\");\n+    SchemaProvider provider =\n+        UtilHelpers.createSchemaProvider(DummySchemaProvider.class.getName(), properties, jsc);\n+\n+    Schema schema = provider.getSourceSchema();\n+    assertEquals(schema.getType(), Type.RECORD);\n+    assertEquals(schema.getName(), \"test\");\n+    assertNotNull(schema.getField(\"testString\"));\n+  }\n+\n+  public static class DummySchemaProvider extends SchemaProvider {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0NjAzNg==", "url": "https://github.com/apache/hudi/pull/1524#discussion_r411546036", "bodyText": "done", "author": "afilipchik", "createdAt": "2020-04-20T17:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MDA0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzOTcyNA==", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410439724", "bodyText": "can we fix the import order here?", "author": "pratyakshsharma", "createdAt": "2020-04-17T19:56:15Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/UtilHelpers.java", "diffHunk": "@@ -18,6 +18,30 @@\n \n package org.apache.hudi.utilities;\n \n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.StringReader;\n+import java.nio.ByteBuffer;\n+import java.sql.Connection;\n+import java.sql.Driver;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Properties;\n+import org.apache.avro.Schema;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzOTk4NQ==", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410439985", "bodyText": "ditto", "author": "pratyakshsharma", "createdAt": "2020-04-17T19:56:50Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/schema/FilebasedSchemaProvider.java", "diffHunk": "@@ -18,24 +18,27 @@\n \n package org.apache.hudi.utilities.schema;\n \n+import java.io.IOException;\n+import java.util.Collections;\n+import org.apache.avro.Schema;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MDM2Ng==", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410440366", "bodyText": "ditto.", "author": "pratyakshsharma", "createdAt": "2020-04-17T19:57:45Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/schema/NullTargetSchemaRegistryProvider.java", "diffHunk": "@@ -18,14 +18,14 @@\n \n package org.apache.hudi.utilities.schema;\n \n-import org.apache.hudi.common.config.TypedProperties;\n-\n import org.apache.avro.Schema;\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.apache.hudi.common.util.collection.Pair;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MDc2MA==", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410440760", "bodyText": "please reorder imports according to our checkstyle rules everywhere.", "author": "pratyakshsharma", "createdAt": "2020-04-17T19:58:37Z", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/schema/RowBasedSchemaProvider.java", "diffHunk": "@@ -22,29 +22,30 @@\n import org.apache.hudi.common.config.TypedProperties;\n \n import org.apache.avro.Schema;\n+import org.apache.hudi.common.util.collection.Pair;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "6d5ec76aa98d2a3e6246104cb757f60eac0332d8", "url": "https://github.com/apache/hudi/commit/6d5ec76aa98d2a3e6246104cb757f60eac0332d8", "message": "merged TestHoodieDeltaStreamer\nAdded test\nMoved DummySchemaProvider to a separate class\nReformatted imports using HUDI checkstyle\nReformatted imports using HUDI checkstyle\nUpdated docs\nFixed codestyle", "committedDate": "2020-05-15T19:59:06Z", "type": "forcePushed"}, {"oid": "8a0c8332518833605a80c79aa538a3eeac3bb7d7", "url": "https://github.com/apache/hudi/commit/8a0c8332518833605a80c79aa538a3eeac3bb7d7", "message": "[HUDI-801] Adding a way to post process schema after it is fetched", "committedDate": "2020-09-17T23:34:14Z", "type": "commit"}, {"oid": "8a0c8332518833605a80c79aa538a3eeac3bb7d7", "url": "https://github.com/apache/hudi/commit/8a0c8332518833605a80c79aa538a3eeac3bb7d7", "message": "[HUDI-801] Adding a way to post process schema after it is fetched", "committedDate": "2020-09-17T23:34:14Z", "type": "forcePushed"}, {"oid": "3e047e6d33dfa9164562eea329787c57f7009f72", "url": "https://github.com/apache/hudi/commit/3e047e6d33dfa9164562eea329787c57f7009f72", "message": "Fix unit-tests", "committedDate": "2020-09-19T07:14:01Z", "type": "commit"}]}