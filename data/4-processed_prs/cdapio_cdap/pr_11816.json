{"pr_number": 11816, "pr_title": "[CDAP-16201] Integration test for stage level validation", "pr_createdAt": "2020-01-09T19:35:03Z", "pr_url": "https://github.com/cdapio/cdap/pull/11816", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjIwMg==", "url": "https://github.com/cdapio/cdap/pull/11816#discussion_r365436202", "bodyText": "nit: Shouldn't validation fail for this? I neither see a dataset named randomDataset nor a table named randomTableName. When I try to manually test this locally it seems to show the right error message.", "author": "ajainarayanan", "createdAt": "2020-01-10T21:25:15Z", "path": "cdap-ui/cypress/integration/plugins.validation.spec.ts", "diffHunk": "@@ -0,0 +1,104 @@\n+import {getArtifactsPoll, loginIfRequired} from '../helpers';\n+import {DEFAULT_BIGQUERY_DATASET, DEFAULT_BIGQUERY_TABLE, DEFAULT_GCP_PROJECTID, DEFAULT_GCP_SERVICEACCOUNT_PATH} from '../support/constants';\n+import {INodeInfo} from '../typings';\n+\n+const sourceNode: INodeInfo = {\n+  nodeName: 'BigQueryTable',\n+  nodeType: 'batchsource'\n+};\n+\n+const sourceProperties = {\n+  referenceName: 'BQ_Source',\n+  project: DEFAULT_GCP_PROJECTID,\n+  datasetProject: DEFAULT_GCP_PROJECTID,\n+  dataset: DEFAULT_BIGQUERY_DATASET,\n+  table: DEFAULT_BIGQUERY_TABLE,\n+  serviceFilePath: DEFAULT_GCP_SERVICEACCOUNT_PATH,\n+};\n+\n+let headers = {};\n+\n+describe('Plugin properties', () => {\n+  // Uses API call to login instead of logging in manually through UI\n+  before(() => {\n+    loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+    cy.visit('/pipelines/ns/default/studio');\n+  });\n+\n+  beforeEach(() => {\n+    getArtifactsPoll(headers);\n+  });\n+\n+  it('should be validated and errors found in properties', () => {\n+    cy.add_node_to_canvas(sourceNode);\n+    cy.get(\n+          '[data-cy=\"plugin-node-BigQueryTable-batchsource-0\"] .node .node-configure-btn')\n+        .invoke('show')\n+        .click();\n+    // Testing for errors found, rgb(164, 4, 3) is the red border color\n+    cy.get('[data-cy=\"plugin-properties-validate-btn\"]').click();\n+    cy.get('[data-cy=\"plugin-properties-errors-found\"]')\n+        .should('have.text', '3 errors found.');\n+    cy.get('[data-cy=\"referenceName\"] > [data-cy=\"widget-wrapper-container\"]')\n+        .should('have.css', 'border-color', 'rgb(164, 4, 3)');\n+    // Testing if the widget is highlighted when there is an error\n+    // and the error text\n+    cy.get('[data-cy=\"referenceName\"] ~ [data-cy=\"property-row-error\"]')\n+        .should(\n+            'have.text', 'Required property \\'referenceName\\' has no value.');\n+    cy.get('[data-cy=\"referenceName\"] > [data-cy=\"widget-wrapper-container\"]')\n+        .should('have.css', 'border-color', 'rgb(164, 4, 3)');\n+  });\n+\n+  it('should be validated and no errors found in plugin properties', () => {\n+    // Testing for no errors found\n+    cy.get('input[data-cy=\"referenceName\"]').type('randomName');\n+    cy.get('input[data-cy=\"dataset\"]').type('randomDataset');", "originalCommit": "50eb08ea65fe49f00c26f706ca429bcc64e0888b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3NDE3MQ==", "url": "https://github.com/cdapio/cdap/pull/11816#discussion_r371574171", "bodyText": "Fixed. When the project-id is set to auto-detect, this passes because I don't think it makes actual connection.", "author": "itsanudeep", "createdAt": "2020-01-28T01:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjQzNg==", "url": "https://github.com/cdapio/cdap/pull/11816#discussion_r365436436", "bodyText": "nit: One suggestion would be to make this into a variable. Tomorrow if we decided to change the shade of red this would need to be updated in more places if we have more tests testing for color.", "author": "ajainarayanan", "createdAt": "2020-01-10T21:25:57Z", "path": "cdap-ui/cypress/integration/plugins.validation.spec.ts", "diffHunk": "@@ -0,0 +1,104 @@\n+import {getArtifactsPoll, loginIfRequired} from '../helpers';\n+import {DEFAULT_BIGQUERY_DATASET, DEFAULT_BIGQUERY_TABLE, DEFAULT_GCP_PROJECTID, DEFAULT_GCP_SERVICEACCOUNT_PATH} from '../support/constants';\n+import {INodeInfo} from '../typings';\n+\n+const sourceNode: INodeInfo = {\n+  nodeName: 'BigQueryTable',\n+  nodeType: 'batchsource'\n+};\n+\n+const sourceProperties = {\n+  referenceName: 'BQ_Source',\n+  project: DEFAULT_GCP_PROJECTID,\n+  datasetProject: DEFAULT_GCP_PROJECTID,\n+  dataset: DEFAULT_BIGQUERY_DATASET,\n+  table: DEFAULT_BIGQUERY_TABLE,\n+  serviceFilePath: DEFAULT_GCP_SERVICEACCOUNT_PATH,\n+};\n+\n+let headers = {};\n+\n+describe('Plugin properties', () => {\n+  // Uses API call to login instead of logging in manually through UI\n+  before(() => {\n+    loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+    cy.visit('/pipelines/ns/default/studio');\n+  });\n+\n+  beforeEach(() => {\n+    getArtifactsPoll(headers);\n+  });\n+\n+  it('should be validated and errors found in properties', () => {\n+    cy.add_node_to_canvas(sourceNode);\n+    cy.get(\n+          '[data-cy=\"plugin-node-BigQueryTable-batchsource-0\"] .node .node-configure-btn')\n+        .invoke('show')\n+        .click();\n+    // Testing for errors found, rgb(164, 4, 3) is the red border color\n+    cy.get('[data-cy=\"plugin-properties-validate-btn\"]').click();\n+    cy.get('[data-cy=\"plugin-properties-errors-found\"]')\n+        .should('have.text', '3 errors found.');\n+    cy.get('[data-cy=\"referenceName\"] > [data-cy=\"widget-wrapper-container\"]')\n+        .should('have.css', 'border-color', 'rgb(164, 4, 3)');\n+    // Testing if the widget is highlighted when there is an error\n+    // and the error text\n+    cy.get('[data-cy=\"referenceName\"] ~ [data-cy=\"property-row-error\"]')\n+        .should(\n+            'have.text', 'Required property \\'referenceName\\' has no value.');\n+    cy.get('[data-cy=\"referenceName\"] > [data-cy=\"widget-wrapper-container\"]')\n+        .should('have.css', 'border-color', 'rgb(164, 4, 3)');", "originalCommit": "50eb08ea65fe49f00c26f706ca429bcc64e0888b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MzMyOA==", "url": "https://github.com/cdapio/cdap/pull/11816#discussion_r371573328", "bodyText": "Fixed", "author": "itsanudeep", "createdAt": "2020-01-28T01:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjQzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNzA0Mg==", "url": "https://github.com/cdapio/cdap/pull/11816#discussion_r365437042", "bodyText": "nit: May be give a higher timeout. Or better yet remove the timeout and have the default timeout for cy.get to be like 1min.", "author": "ajainarayanan", "createdAt": "2020-01-10T21:27:48Z", "path": "cdap-ui/cypress/integration/plugins.validation.spec.ts", "diffHunk": "@@ -0,0 +1,104 @@\n+import {getArtifactsPoll, loginIfRequired} from '../helpers';\n+import {DEFAULT_BIGQUERY_DATASET, DEFAULT_BIGQUERY_TABLE, DEFAULT_GCP_PROJECTID, DEFAULT_GCP_SERVICEACCOUNT_PATH} from '../support/constants';\n+import {INodeInfo} from '../typings';\n+\n+const sourceNode: INodeInfo = {\n+  nodeName: 'BigQueryTable',\n+  nodeType: 'batchsource'\n+};\n+\n+const sourceProperties = {\n+  referenceName: 'BQ_Source',\n+  project: DEFAULT_GCP_PROJECTID,\n+  datasetProject: DEFAULT_GCP_PROJECTID,\n+  dataset: DEFAULT_BIGQUERY_DATASET,\n+  table: DEFAULT_BIGQUERY_TABLE,\n+  serviceFilePath: DEFAULT_GCP_SERVICEACCOUNT_PATH,\n+};\n+\n+let headers = {};\n+\n+describe('Plugin properties', () => {\n+  // Uses API call to login instead of logging in manually through UI\n+  before(() => {\n+    loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+    cy.visit('/pipelines/ns/default/studio');\n+  });\n+\n+  beforeEach(() => {\n+    getArtifactsPoll(headers);\n+  });\n+\n+  it('should be validated and errors found in properties', () => {\n+    cy.add_node_to_canvas(sourceNode);\n+    cy.get(\n+          '[data-cy=\"plugin-node-BigQueryTable-batchsource-0\"] .node .node-configure-btn')\n+        .invoke('show')\n+        .click();\n+    // Testing for errors found, rgb(164, 4, 3) is the red border color\n+    cy.get('[data-cy=\"plugin-properties-validate-btn\"]').click();\n+    cy.get('[data-cy=\"plugin-properties-errors-found\"]')\n+        .should('have.text', '3 errors found.');\n+    cy.get('[data-cy=\"referenceName\"] > [data-cy=\"widget-wrapper-container\"]')\n+        .should('have.css', 'border-color', 'rgb(164, 4, 3)');\n+    // Testing if the widget is highlighted when there is an error\n+    // and the error text\n+    cy.get('[data-cy=\"referenceName\"] ~ [data-cy=\"property-row-error\"]')\n+        .should(\n+            'have.text', 'Required property \\'referenceName\\' has no value.');\n+    cy.get('[data-cy=\"referenceName\"] > [data-cy=\"widget-wrapper-container\"]')\n+        .should('have.css', 'border-color', 'rgb(164, 4, 3)');\n+  });\n+\n+  it('should be validated and no errors found in plugin properties', () => {\n+    // Testing for no errors found\n+    cy.get('input[data-cy=\"referenceName\"]').type('randomName');\n+    cy.get('input[data-cy=\"dataset\"]').type('randomDataset');\n+    cy.get('input[data-cy=\"table\"]').type('randomTableName');\n+    cy.get('[data-cy=\"plugin-properties-validate-btn\"]').click();\n+    cy.get('[data-cy=\"plugin-properties-no-errors\"]')\n+        .should('have.text', 'No errors found.');\n+  });\n+\n+  it('should be validated and errors found in schema', () => {\n+    // configuring properties for the plugin\n+    cy.get('input[data-cy=\"referenceName\"]')\n+        .clear()\n+        .type(sourceProperties.referenceName);\n+    cy.get('input[data-cy=\"project\"]').clear().type(sourceProperties.project);\n+    cy.get('input[data-cy=\"datasetProject\"]')\n+        .clear()\n+        .type(sourceProperties.datasetProject);\n+    cy.get('input[data-cy=\"dataset\"]').clear().type(sourceProperties.dataset);\n+    cy.get('input[data-cy=\"table\"]').clear().type(sourceProperties.table);\n+    cy.get('input[data-cy=\"serviceFilePath\"]')\n+        .clear()\n+        .type(sourceProperties.serviceFilePath);\n+    // retrieving schema\n+    cy.get('[data-cy=\"get-schema-btn\"]').click();\n+    cy.get('[data-cy=\"get-schema-btn\"]').contains('Get Schema', {", "originalCommit": "50eb08ea65fe49f00c26f706ca429bcc64e0888b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MzM3Mw==", "url": "https://github.com/cdapio/cdap/pull/11816#discussion_r371573373", "bodyText": "Fixed", "author": "itsanudeep", "createdAt": "2020-01-28T01:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNzA0Mg=="}], "type": "inlineReview"}, {"oid": "5a79752c239436fc62d1e9b54c90492ab72c4a0b", "url": "https://github.com/cdapio/cdap/commit/5a79752c239436fc62d1e9b54c90492ab72c4a0b", "message": "using dataCy", "committedDate": "2020-01-28T01:34:54Z", "type": "forcePushed"}, {"oid": "2028a4dc9aeddeaabd0bb551bf5cd0e5ec6d24c0", "url": "https://github.com/cdapio/cdap/commit/2028a4dc9aeddeaabd0bb551bf5cd0e5ec6d24c0", "message": "Integration test for stage level validation", "committedDate": "2020-01-29T01:38:29Z", "type": "commit"}, {"oid": "2028a4dc9aeddeaabd0bb551bf5cd0e5ec6d24c0", "url": "https://github.com/cdapio/cdap/commit/2028a4dc9aeddeaabd0bb551bf5cd0e5ec6d24c0", "message": "Integration test for stage level validation", "committedDate": "2020-01-29T01:38:29Z", "type": "forcePushed"}]}