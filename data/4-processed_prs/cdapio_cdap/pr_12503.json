{"pr_number": 12503, "pr_title": "[CDAP-16850] Adds error handling for schema editor", "pr_createdAt": "2020-07-25T20:56:45Z", "pr_url": "https://github.com/cdapio/cdap/pull/12503", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NTQ3Ng==", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461195476", "bodyText": "can if (typeProperties && typeProperties.doc) also work as well?", "author": "jennac3", "createdAt": "2020-07-27T22:00:24Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "diffHunk": "@@ -235,6 +237,12 @@ function SchemaGenerator(schemaTree: INode) {\n       if (isFieldComplexType) {\n         field.type = generateSchemaFromComplexType(type, currentField, nullable);\n       }\n+      if (!isEmpty(typeProperties) && typeProperties.doc) {", "originalCommit": "02d83c2f233e3cb08d32d1581781ec73dde19eae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NTk2NQ==", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461195965", "bodyText": "Could we add a comment explaining why we need such condition? Or could we possibly break it down into a function or const?", "author": "jennac3", "createdAt": "2020-07-27T22:01:32Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/RowButtons/FieldAttributes/FieldAttributesPopoverButton.tsx", "diffHunk": "@@ -98,10 +103,15 @@ function FieldPropertiesPopoverButton({\n         }}\n       >\n         <fieldset className={classes.popoverContainer} disabled={disabled}>\n-          <If condition={!isFlatRowTypeComplex(type)}>\n-            <strong>No Attributes</strong>\n-          </If>\n-          <If condition={type === AvroSchemaTypesEnum.RECORD || type === AvroSchemaTypesEnum.ENUM}>\n+          <If\n+            condition={\n+              (type === AvroSchemaTypesEnum.RECORD ||", "originalCommit": "02d83c2f233e3cb08d32d1581781ec73dde19eae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDA2Mw==", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461200063", "bodyText": "What are the types of doc and aliases? aliases is an array, correct? Should they be copied here to avoid any issues from downstream mutations?", "author": "njbriggs", "createdAt": "2020-07-27T22:11:51Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/SchemaEditor/Context/SchemaGenerator.ts", "diffHunk": "@@ -235,6 +237,12 @@ function SchemaGenerator(schemaTree: INode) {\n       if (isFieldComplexType) {\n         field.type = generateSchemaFromComplexType(type, currentField, nullable);\n       }\n+      if (!isEmpty(typeProperties) && typeProperties.doc) {\n+        field.doc = typeProperties.doc;\n+      }\n+      if (!isEmpty(typeProperties) && typeProperties.aliases) {\n+        field.aliases = typeProperties.aliases;\n+      }", "originalCommit": "02d83c2f233e3cb08d32d1581781ec73dde19eae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMDk4Mg==", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461210982", "bodyText": "Some of the operations that happens in schema manager does in place changes instead of creating copies. This is purely done for performance. In a schema with 5k-10k fields with 10 levels nesting there was a lot more performance issue with creating copies to avoid mutation. Most of the operations happening in the tree are mutations.\nSpecifically here the doc is a string and aliases is an array of string. We intentionally break the chain between mutations happening within the component to state maintained in schema manager. If you strongly feel we should use ImmutableJS its a broader conversation we should probably discuss outside this PR.", "author": "ajainarayanan", "createdAt": "2020-07-27T22:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMjkyNQ==", "url": "https://github.com/cdapio/cdap/pull/12503#discussion_r461212925", "bodyText": "I'm not arguing for Immutable.js. I was just wondering if doing a .slice() on these arrays when they get assigned would avoid potential issues down the line.", "author": "njbriggs", "createdAt": "2020-07-27T22:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMDA2Mw=="}], "type": "inlineReview"}, {"oid": "49bda057a928c7191cca867122adeef975de8ea0", "url": "https://github.com/cdapio/cdap/commit/49bda057a928c7191cca867122adeef975de8ea0", "message": "Addresses review comments", "committedDate": "2020-07-28T01:35:08Z", "type": "forcePushed"}, {"oid": "4bad4e2b59388d253b305632441be22501470db7", "url": "https://github.com/cdapio/cdap/commit/4bad4e2b59388d253b305632441be22501470db7", "message": "[CDAP-16850] Adds error handling for schema editor\n\n - Modifies schema editor to accept errors as input for handling errors during stage level validation\n - Fixes angular nodeconfig controller to pass on validation errors to schema editor\n - Adds the ability to add doc and aliases to fields in the record (valid avro spec)\n - Replaces TextboxOnValium with Textbox for macro editor in plugin schema editor", "committedDate": "2020-07-28T01:36:36Z", "type": "commit"}, {"oid": "4bad4e2b59388d253b305632441be22501470db7", "url": "https://github.com/cdapio/cdap/commit/4bad4e2b59388d253b305632441be22501470db7", "message": "[CDAP-16850] Adds error handling for schema editor\n\n - Modifies schema editor to accept errors as input for handling errors during stage level validation\n - Fixes angular nodeconfig controller to pass on validation errors to schema editor\n - Adds the ability to add doc and aliases to fields in the record (valid avro spec)\n - Replaces TextboxOnValium with Textbox for macro editor in plugin schema editor", "committedDate": "2020-07-28T01:36:36Z", "type": "forcePushed"}]}