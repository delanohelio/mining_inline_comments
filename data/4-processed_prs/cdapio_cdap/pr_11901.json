{"pr_number": 11901, "pr_title": "[CDAP-16232] Replicator detail view", "pr_createdAt": "2020-02-28T00:43:58Z", "pr_url": "https://github.com/cdapio/cdap/pull/11901", "timeline": [{"oid": "39cc07f0691024602719bd3a151483b589eb3aac", "url": "https://github.com/cdapio/cdap/commit/39cc07f0691024602719bd3a151483b589eb3aac", "message": "[CDAP-16232] Replicator detail view", "committedDate": "2020-03-03T19:05:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1MjgyMQ==", "url": "https://github.com/cdapio/cdap/pull/11901#discussion_r387952821", "bodyText": "nit: Assuming we will have another PR for adding the flag and hiding it from Theme right?", "author": "ajainarayanan", "createdAt": "2020-03-04T21:45:25Z", "path": "cdap-ui/app/cdap/components/AppHeader/AppDrawer/AppDrawer.tsx", "diffHunk": "@@ -177,6 +177,15 @@ class AppDrawer extends React.PureComponent<IAppDrawerProps> {\n               location.pathname.startsWith(`/cdap/${nsurl}/connections`)\n             }\n           />\n+          <DrawerFeatureLink\n+            featureName=\"Delta Replicator\"\n+            featureFlag={true}", "originalCommit": "39cc07f0691024602719bd3a151483b589eb3aac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1MzQ5NQ==", "url": "https://github.com/cdapio/cdap/pull/11901#discussion_r387953495", "bodyText": "nit: Assuming this will come from backend in subsequent PRs? Can we add a TODO.", "author": "ajainarayanan", "createdAt": "2020-03-04T21:46:45Z", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Summary/index.tsx", "diffHunk": "@@ -65,19 +64,24 @@ const SummaryView: React.FC<ICreateContext & WithStyles<typeof styles>> = ({\n   name,\n   description,\n   draftId,\n+  getReplicatorConfig,\n }) => {\n   const [loading, setLoading] = React.useState(false);\n   const [error, setError] = React.useState(null);\n   const [redirect, setRedirect] = React.useState(false);\n   function constructJson() {\n-    return constructReplicatorSpec(\n+    return {\n       name,\n-      description,\n-      sourcePluginInfo,\n-      targetPluginInfo,\n-      sourceConfig,\n-      targetConfig\n-    );\n+      artifact: {", "originalCommit": "39cc07f0691024602719bd3a151483b589eb3aac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1NDUxMg==", "url": "https://github.com/cdapio/cdap/pull/11901#discussion_r387954512", "bodyText": "nit: HeadingTypes?", "author": "ajainarayanan", "createdAt": "2020-03-04T21:48:46Z", "path": "cdap-ui/app/cdap/components/Replicator/Detail/Metrics/index.tsx", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { detailContextConnect, IDetailContext } from 'components/Replicator/Detail';\n+import { getCurrentNamespace } from 'services/NamespaceStore';\n+import { PROGRAM_INFO } from 'components/Replicator/constants';\n+import MetricsQueryHelper from 'services/MetricsQueryHelper';\n+import { MyReplicatorApi } from 'api/replicator';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {\n+      display: 'grid',\n+      gridTemplateColumns: '33.33% 33.33% 33.33%',\n+    },\n+    metricCard: {\n+      textAlign: 'center',\n+      border: `1px solid ${theme.palette.grey[200]}`,\n+      fontSize: '32px',\n+      padding: '15px',\n+    },\n+  };\n+};\n+\n+function aggregateValue(seriesData) {\n+  return seriesData.reduce((acc, curr) => acc + curr.value, 0);\n+}\n+\n+const MetricsView: React.FC<IDetailContext & WithStyles<typeof styles>> = ({\n+  classes,\n+  targetPluginInfo,\n+  name,\n+}) => {\n+  const [inserts, setInserts] = React.useState(0);\n+  const [updates, setUpdates] = React.useState(0);\n+  const [deletes, setDeletes] = React.useState(0);\n+\n+  const updateMap = {\n+    insert: setInserts,\n+    update: setUpdates,\n+    delete: setDeletes,\n+  };\n+\n+  React.useEffect(() => {\n+    if (!targetPluginInfo) {\n+      return;\n+    }\n+\n+    const tags = {\n+      namespace: getCurrentNamespace(),\n+      app: name,\n+      worker: PROGRAM_INFO.programId,\n+    };\n+\n+    const tagsParams = MetricsQueryHelper.tagsToParams(tags);\n+\n+    const targetStageName = targetPluginInfo.name;\n+    const metrics = ['insert', 'update', 'delete']\n+      .map((metric) => {\n+        return `metric=user.${targetStageName}.dml.${metric}`;\n+      })\n+      .join('&');\n+\n+    const start = 'start=now-24h';\n+    const end = 'end=now';\n+    const aggregate = 'aggregate=false';\n+    const resolution = 'resolution=auto';\n+\n+    const queryParams = [start, end, aggregate, resolution, tagsParams, metrics].join('&');\n+\n+    // TODO: optimize polling\n+    // Don't poll when status is not running - only do a single request\n+    MyReplicatorApi.pollMetrics({ queryParams }).subscribe(\n+      (res) => {\n+        res.series.forEach((metric) => {\n+          const value = aggregateValue(metric.data);\n+          const metricName = metric.metricName.split('.');\n+          const metricType = metricName[metricName.length - 1];\n+\n+          updateMap[metricType](value);\n+        });\n+      },\n+      (err) => {\n+        // tslint:disable-next-line: no-console\n+        console.log('error', err);\n+      }\n+    );\n+  }, [targetPluginInfo]);\n+\n+  return (\n+    <div className={classes.root}>\n+      <div className={classes.metricCard}>\n+        <h4>Inserts</h4>", "originalCommit": "39cc07f0691024602719bd3a151483b589eb3aac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1NTQ0Mg==", "url": "https://github.com/cdapio/cdap/pull/11901#discussion_r387955442", "bodyText": "nit: Does it necessarily need an empty root?", "author": "ajainarayanan", "createdAt": "2020-03-04T21:50:49Z", "path": "cdap-ui/app/cdap/components/Replicator/Detail/TopPanel/ActionButtons/StatusIndicator/index.tsx", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { detailContextConnect, IDetailContext } from 'components/Replicator/Detail';\n+import Status from 'components/Status';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    root: {},", "originalCommit": "39cc07f0691024602719bd3a151483b589eb3aac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6a25002fdb9d568115b24ad7797eb66b6e8cebb1", "url": "https://github.com/cdapio/cdap/commit/6a25002fdb9d568115b24ad7797eb66b6e8cebb1", "message": "[CDAP-16232] Replicator detail view", "committedDate": "2020-03-05T22:22:57Z", "type": "commit"}, {"oid": "6a25002fdb9d568115b24ad7797eb66b6e8cebb1", "url": "https://github.com/cdapio/cdap/commit/6a25002fdb9d568115b24ad7797eb66b6e8cebb1", "message": "[CDAP-16232] Replicator detail view", "committedDate": "2020-03-05T22:22:57Z", "type": "forcePushed"}, {"oid": "9e60e51e38fb7946e0887e9392b46b01900fc03c", "url": "https://github.com/cdapio/cdap/commit/9e60e51e38fb7946e0887e9392b46b01900fc03c", "message": "UI linting fix", "committedDate": "2020-03-05T22:34:31Z", "type": "commit"}]}