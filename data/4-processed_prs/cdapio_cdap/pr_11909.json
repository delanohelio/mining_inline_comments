{"pr_number": 11909, "pr_title": "[CDAP-16338] Moves the polling logic to client", "pr_createdAt": "2020-03-02T08:48:54Z", "pr_url": "https://github.com/cdapio/cdap/pull/11909", "timeline": [{"oid": "373aba95e776e9b9714212e7173bd757faa01ba3", "url": "https://github.com/cdapio/cdap/commit/373aba95e776e9b9714212e7173bd757faa01ba3", "message": "Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-02T09:24:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMTc3OQ==", "url": "https://github.com/cdapio/cdap/pull/11909#discussion_r386721779", "bodyText": "There might be a potential issue with using interval. We are queing request every 10 seconds, so if for some reason response takes longer than 10 seconds, the request will keep piling. Would it be better to do this as a timeout on the response callback instead?", "author": "elfenheart", "createdAt": "2020-03-02T23:53:32Z", "path": "cdap-ui/app/cdap/services/datasource/index.js", "diffHunk": "@@ -230,26 +240,33 @@ export default class Datasource {\n       type: 'POLL',\n     };\n \n-    this.socketSend('poll-start', generatedResource);\n+    this.socketSend('request', generatedResource);\n \n     return observable;\n   }\n \n+  startClientPoll = (resourceId, interval) => {\n+    const intervalTimer = setInterval(() => {", "originalCommit": "373aba95e776e9b9714212e7173bd757faa01ba3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc2NzgyNQ==", "url": "https://github.com/cdapio/cdap/pull/11909#discussion_r386767825", "bodyText": "Good point. Have updated the PR", "author": "ajainarayanan", "createdAt": "2020-03-03T02:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMTc3OQ=="}], "type": "inlineReview"}, {"oid": "57a15f26885fbc20125918255d45a144dea7e7cb", "url": "https://github.com/cdapio/cdap/commit/57a15f26885fbc20125918255d45a144dea7e7cb", "message": "Changes setInterval to setTimeout to wait for the previous request to come in before making another request", "committedDate": "2020-03-03T05:02:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA3Mzc5NQ==", "url": "https://github.com/cdapio/cdap/pull/11909#discussion_r387073795", "bodyText": "Please change this to debug", "author": "nitinmotgi", "createdAt": "2020-03-03T14:54:43Z", "path": "cdap-ui/server.js", "diffHunk": "@@ -156,9 +156,11 @@ getCDAPConfig()\n     });\n \n     sockServer.on('connection', function(c) {\n+      log.info('[SOCKET OPEN] Connection to client \"' + c.id + '\" opened');", "originalCommit": "57a15f26885fbc20125918255d45a144dea7e7cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA3NDQ3Mw==", "url": "https://github.com/cdapio/cdap/pull/11909#discussion_r387074473", "bodyText": "This should be debug or info. This can fill up disk.", "author": "nitinmotgi", "createdAt": "2020-03-03T14:55:37Z", "path": "cdap-ui/server/aggregator.js", "diffHunk": "@@ -449,21 +310,13 @@ function onSocketData(message) {\n         );\n         this.pushConfiguration(r);\n         break;\n-      case 'poll-start':\n-        log.debug('[POLL-START]: (method: ' + r.method + ', id: ' + r.id + ', url: ' + r.url + ')');\n-        this.startPolling(r);\n-        break;\n       case 'request':\n         r.startTs = Date.now();\n-        log.debug('[REQUEST]: (method: ' + r.method + ', id: ' + r.id + ', url: ' + r.url + ')');\n+        log.info('[REQUEST]: (method: ' + r.method + ', id: ' + r.id + ', url: ' + r.url + ')');", "originalCommit": "57a15f26885fbc20125918255d45a144dea7e7cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA3NDY4NQ==", "url": "https://github.com/cdapio/cdap/pull/11909#discussion_r387074685", "bodyText": "Same level as connect", "author": "nitinmotgi", "createdAt": "2020-03-03T14:55:55Z", "path": "cdap-ui/server/aggregator.js", "diffHunk": "@@ -474,8 +327,7 @@ function onSocketData(message) {\n  * @private onSocketClose\n  */\n function onSocketClose() {\n-  this.stopPollingAll();\n-  this.polledResources = {};\n+  log.info('[SOCKET CLOSE] Connection to client \"' + this.connection.id + '\" closed');", "originalCommit": "57a15f26885fbc20125918255d45a144dea7e7cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5bc6e645f587b04b38b84ef2757de22926f89a5", "url": "https://github.com/cdapio/cdap/commit/c5bc6e645f587b04b38b84ef2757de22926f89a5", "message": "[CDAP-16338] Moves the polling logic to client\n\n  - Removes global and object-hash npm modules\n  - Fixes datasource in both angular and react to handle the polling at the client side\n  - Fixes Nodejs & Aggregator modules to remove all the polling logic from the Nodejs server\n  - Adds ifvisible node module to detect page visibility\n  - Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-04T01:16:24Z", "type": "forcePushed"}, {"oid": "1fa945e39f08133eb63da7308aaf2b093982d954", "url": "https://github.com/cdapio/cdap/commit/1fa945e39f08133eb63da7308aaf2b093982d954", "message": "[CDAP-16338] Moves the polling logic to client\n\n  - Removes global and object-hash npm modules\n  - Fixes datasource in both angular and react to handle the polling at the client side\n  - Fixes Nodejs & Aggregator modules to remove all the polling logic from the Nodejs server\n  - Adds ifvisible node module to detect page visibility\n  - Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-04T06:22:41Z", "type": "forcePushed"}, {"oid": "c109422bcfd3fbbc1ade1e9984e9c0aa9ddf209f", "url": "https://github.com/cdapio/cdap/commit/c109422bcfd3fbbc1ade1e9984e9c0aa9ddf209f", "message": "[CDAP-16338] Moves the polling logic to client\n\n  - Removes global and object-hash npm modules\n  - Fixes datasource in both angular and react to handle the polling at the client side\n  - Fixes Nodejs & Aggregator modules to remove all the polling logic from the Nodejs server\n  - Adds ifvisible node module to detect page visibility\n  - Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-04T06:23:23Z", "type": "forcePushed"}, {"oid": "1ec51cb7389287a0de7c90222516a5e455ffdd35", "url": "https://github.com/cdapio/cdap/commit/1ec51cb7389287a0de7c90222516a5e455ffdd35", "message": "[CDAP-16338] Moves the polling logic to client\n\n  - Removes global and object-hash npm modules\n  - Fixes datasource in both angular and react to handle the polling at the client side\n  - Fixes Nodejs & Aggregator modules to remove all the polling logic from the Nodejs server\n  - Adds ifvisible node module to detect page visibility\n  - Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-04T21:09:07Z", "type": "forcePushed"}, {"oid": "b8957e0abad53e54386da13178de2128c5549e1a", "url": "https://github.com/cdapio/cdap/commit/b8957e0abad53e54386da13178de2128c5549e1a", "message": "[CDAP-16338] Moves the polling logic to client\n\n  - Removes global and object-hash npm modules\n  - Fixes datasource in both angular and react to handle the polling at the client side\n  - Fixes Nodejs & Aggregator modules to remove all the polling logic from the Nodejs server\n  - Adds ifvisible node module to detect page visibility\n  - Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-04T21:26:06Z", "type": "commit"}, {"oid": "b8957e0abad53e54386da13178de2128c5549e1a", "url": "https://github.com/cdapio/cdap/commit/b8957e0abad53e54386da13178de2128c5549e1a", "message": "[CDAP-16338] Moves the polling logic to client\n\n  - Removes global and object-hash npm modules\n  - Fixes datasource in both angular and react to handle the polling at the client side\n  - Fixes Nodejs & Aggregator modules to remove all the polling logic from the Nodejs server\n  - Adds ifvisible node module to detect page visibility\n  - Adds ifvisible module to check for idle/wakeup states and focussed and blurred states of the browser to stop/resume polling", "committedDate": "2020-03-04T21:26:06Z", "type": "forcePushed"}]}