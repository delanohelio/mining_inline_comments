{"pr_number": 12206, "pr_title": "[CDAP-16861] Define configuration groups (plugin JSON Creator)", "pr_createdAt": "2020-05-27T14:59:12Z", "pr_url": "https://github.com/cdapio/cdap/pull/12206", "timeline": [{"oid": "11cd13cedbc0186419a39c99dd935323349ea481", "url": "https://github.com/cdapio/cdap/commit/11cd13cedbc0186419a39c99dd935323349ea481", "message": "[CDAP-16861] add and define configuration groups for the widget JSON", "committedDate": "2020-05-27T15:02:24Z", "type": "forcePushed"}, {"oid": "6ca653782a60f78758a2d8a43a590fa19a9744af", "url": "https://github.com/cdapio/cdap/commit/6ca653782a60f78758a2d8a43a590fa19a9744af", "message": "[CDAP-16861] Define configuration groups (plugin JSON Creator)", "committedDate": "2020-06-01T18:41:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMTE5OA==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r434301198", "bodyText": "nit: Lines 17 and 18 can be combined. import withStyles, { StyleRules } from '@material-ui/core/styles/withStyles'", "author": "ajainarayanan", "createdAt": "2020-06-03T04:29:51Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/GroupInfoInput/index.tsx", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { withStyles } from '@material-ui/core';", "originalCommit": "6ca653782a60f78758a2d8a43a590fa19a9744af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMDYzNQ==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r435900635", "bodyText": "changed!", "author": "jennac3", "createdAt": "2020-06-05T12:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMTE5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMTYxOQ==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r434301619", "bodyText": "It would be good if we can import these from their respective submodules. It is easier for webpack to code split if we import from specific module rather than from the root module.", "author": "ajainarayanan", "createdAt": "2020-06-03T04:31:29Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {", "originalCommit": "6ca653782a60f78758a2d8a43a590fa19a9744af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMDgxNQ==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r435900815", "bodyText": "changed!", "author": "jennac3", "createdAt": "2020-06-05T12:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMTYxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMjA3Ng==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r434302076", "bodyText": "nit: Will probably need a key", "author": "ajainarayanan", "createdAt": "2020-06-03T04:33:36Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/index.tsx", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import {\n+  ExpansionPanel,\n+  ExpansionPanelActions,\n+  ExpansionPanelSummary,\n+  IconButton,\n+  Typography,\n+  withStyles,\n+} from '@material-ui/core';\n+import Button from '@material-ui/core/Button';\n+import { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import GroupInfoInput from 'components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/GroupInfoInput';\n+import StepButtons from 'components/PluginJSONCreator/Create/Content/StepButtons';\n+import {\n+  CreateContext,\n+  createContextConnect,\n+  IConfigurationGroupInfo,\n+  ICreateContext,\n+} from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    eachGroup: {\n+      display: 'grid',\n+      gridTemplateColumns: '5fr 1fr',\n+    },\n+    groupContent: {\n+      display: 'block',\n+      padding: '0px 0',\n+      width: 'calc(100%)',\n+    },\n+  };\n+};\n+\n+const ConfigurationGroupsCollectionView: React.FC<ICreateContext & WithStyles<typeof styles>> = ({\n+  classes,\n+  configurationGroups,\n+  setConfigurationGroups,\n+  groupToInfo,\n+  setGroupToInfo,\n+}) => {\n+  const [localConfigurationGroups, setLocalConfigurationGroups] = React.useState(\n+    configurationGroups\n+  );\n+  const [activeGroupIndex, setActiveGroupIndex] = React.useState(null);\n+  const [localGroupToInfo, setLocalGroupToInfo] = React.useState(groupToInfo);\n+\n+  function addConfigurationGroup(index: number) {\n+    const newGroupID = 'ConfigGroup_' + uuidV4();\n+\n+    // add a new group's ID at the specified index\n+    const newGroups = [...localConfigurationGroups];\n+    if (newGroups.length === 0) {\n+      newGroups.splice(0, 0, newGroupID);\n+    } else {\n+      newGroups.splice(index + 1, 0, newGroupID);\n+    }\n+    setLocalConfigurationGroups(newGroups);\n+\n+    // set the activeGroupIndex to the new group's index\n+    if (newGroups.length <= 1) {\n+      setActiveGroupIndex(0);\n+    } else {\n+      setActiveGroupIndex(index + 1);\n+    }\n+\n+    // set the default label and description of the group\n+    setLocalGroupToInfo({\n+      ...localGroupToInfo,\n+      [newGroupID]: {\n+        label: '',\n+        description: '',\n+      } as IConfigurationGroupInfo,\n+    });\n+  }\n+\n+  function deleteConfigurationGroup(index: number) {\n+    setActiveGroupIndex(null);\n+\n+    // delete a group at the specified index\n+    const newGroups = [...localConfigurationGroups];\n+    const groupToDelete = newGroups[index];\n+    newGroups.splice(index, 1);\n+    setLocalConfigurationGroups(newGroups);\n+\n+    // delete the corresponding information of the group\n+    const { [groupToDelete]: info, ...restGroupToInfo } = localGroupToInfo;\n+    setLocalGroupToInfo(restGroupToInfo);\n+  }\n+\n+  const switchEditConfigurationGroup = (index) => (event, newExpanded) => {\n+    if (newExpanded) {\n+      setActiveGroupIndex(index);\n+    } else {\n+      setActiveGroupIndex(null);\n+    }\n+  };\n+\n+  function saveAllResults() {\n+    setConfigurationGroups(localConfigurationGroups);\n+    setGroupToInfo(localGroupToInfo);\n+  }\n+\n+  return (\n+    <div>\n+      <Heading type={HeadingTypes.h3} label=\"Configuration Groups\" />\n+      <br />\n+      <If condition={localConfigurationGroups.length === 0}>\n+        <Button variant=\"contained\" color=\"primary\" onClick={() => addConfigurationGroup(0)}>\n+          Add Configuration Group\n+        </Button>\n+      </If>\n+\n+      {localConfigurationGroups.map((groupID, i) => {\n+        const configurationGroupExpanded = activeGroupIndex === i;\n+        const group = localGroupToInfo[groupID];\n+        return (\n+          <div className={classes.eachGroup}>", "originalCommit": "6ca653782a60f78758a2d8a43a590fa19a9744af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMDk5Ng==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r435900996", "bodyText": "changed! This fixed warnings in console.", "author": "jennac3", "createdAt": "2020-06-05T12:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMjA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMjgyMQ==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r434302821", "bodyText": "Seems like one single widget is doing a whole bunch of things. Can we a utility function that return appropriate component instead of one single component handling all? Something along the lines of AbstractWidgetFactory", "author": "ajainarayanan", "createdAt": "2020-06-03T04:37:04Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/PluginInput/index.tsx", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import * as React from 'react';\n+\n+const PluginInput = ({", "originalCommit": "6ca653782a60f78758a2d8a43a590fa19a9744af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgzNjg2OA==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r434836868", "bodyText": "I will be sure to make this changes in the separate PR, since I use this component a lot across different PRs!", "author": "jennac3", "createdAt": "2020-06-03T20:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMjgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMzA0Mw==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r434303043", "bodyText": "nit: This should be onChange. It is being passed to the onChange prop of WidgetWrapper but this is named as setValue. value and onChange are standard for all AbstractWidgets", "author": "ajainarayanan", "createdAt": "2020-06-03T04:37:52Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/PluginInput/index.tsx", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import * as React from 'react';\n+\n+const PluginInput = ({\n+  widgetType,\n+  setValue,", "originalCommit": "6ca653782a60f78758a2d8a43a590fa19a9744af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwMTEwMQ==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r435901101", "bodyText": "changed!", "author": "jennac3", "createdAt": "2020-06-05T12:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwMzA0Mw=="}], "type": "inlineReview"}, {"oid": "568aa354090a15a9a1223e75c17fc53163cddd86", "url": "https://github.com/cdapio/cdap/commit/568aa354090a15a9a1223e75c17fc53163cddd86", "message": "[CDAP-16861] Define configuration groups (plugin JSON Creator)", "committedDate": "2020-06-03T20:20:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDYyNw==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r436220627", "bodyText": "nit: just set padding: 0", "author": "elfenheart", "createdAt": "2020-06-06T00:48:24Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/index.tsx", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import Typography from '@material-ui/core/Typography';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import GroupInfoInput from 'components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/GroupInfoInput';\n+import StepButtons from 'components/PluginJSONCreator/Create/Content/StepButtons';\n+import {\n+  CreateContext,\n+  createContextConnect,\n+  IConfigurationGroupInfo,\n+  ICreateContext,\n+} from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    eachGroup: {\n+      display: 'grid',\n+      gridTemplateColumns: '5fr 1fr',\n+    },\n+    groupContent: {\n+      display: 'block',\n+      padding: '0px 0',", "originalCommit": "9275fcb37d7abfdb5f25a1011acedb679bf92f51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3MTQ4Mg==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r436671482", "bodyText": "Resolved!", "author": "jennac3", "createdAt": "2020-06-08T12:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDY0OA==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r436220648", "bodyText": "nit: width: 100%", "author": "elfenheart", "createdAt": "2020-06-06T00:48:33Z", "path": "cdap-ui/app/cdap/components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/index.tsx", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import Button from '@material-ui/core/Button';\n+import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n+import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n+import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n+import IconButton from '@material-ui/core/IconButton';\n+import withStyles, { StyleRules, WithStyles } from '@material-ui/core/styles/withStyles';\n+import Typography from '@material-ui/core/Typography';\n+import AddIcon from '@material-ui/icons/Add';\n+import DeleteIcon from '@material-ui/icons/Delete';\n+import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+import If from 'components/If';\n+import GroupInfoInput from 'components/PluginJSONCreator/Create/Content/ConfigurationGroupsCollection/GroupInfoInput';\n+import StepButtons from 'components/PluginJSONCreator/Create/Content/StepButtons';\n+import {\n+  CreateContext,\n+  createContextConnect,\n+  IConfigurationGroupInfo,\n+  ICreateContext,\n+} from 'components/PluginJSONCreator/CreateContextConnect';\n+import * as React from 'react';\n+import uuidV4 from 'uuid/v4';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    eachGroup: {\n+      display: 'grid',\n+      gridTemplateColumns: '5fr 1fr',\n+    },\n+    groupContent: {\n+      display: 'block',\n+      padding: '0px 0',\n+      width: 'calc(100%)',", "originalCommit": "9275fcb37d7abfdb5f25a1011acedb679bf92f51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3MTU2Mw==", "url": "https://github.com/cdapio/cdap/pull/12206#discussion_r436671563", "bodyText": "Resolved", "author": "jennac3", "createdAt": "2020-06-08T12:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDY0OA=="}], "type": "inlineReview"}, {"oid": "c34d7583c1e59dd3975e6678d61b4dd4294cb419", "url": "https://github.com/cdapio/cdap/commit/c34d7583c1e59dd3975e6678d61b4dd4294cb419", "message": "[CDAP-16861] Define configuration groups (plugin JSON Creator)", "committedDate": "2020-06-08T15:05:30Z", "type": "forcePushed"}, {"oid": "17590ea851e91faaaf5dffcf69d63f00319b9efb", "url": "https://github.com/cdapio/cdap/commit/17590ea851e91faaaf5dffcf69d63f00319b9efb", "message": "[CDAP-16861] Define configuration groups (plugin JSON Creator)", "committedDate": "2020-06-08T19:10:53Z", "type": "commit"}, {"oid": "17590ea851e91faaaf5dffcf69d63f00319b9efb", "url": "https://github.com/cdapio/cdap/commit/17590ea851e91faaaf5dffcf69d63f00319b9efb", "message": "[CDAP-16861] Define configuration groups (plugin JSON Creator)", "committedDate": "2020-06-08T19:10:53Z", "type": "forcePushed"}]}