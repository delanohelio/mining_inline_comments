{"pr_number": 11825, "pr_title": "[CDAP-16210] Support multiple hubs in UI", "pr_createdAt": "2020-01-22T21:12:31Z", "pr_url": "https://github.com/cdapio/cdap/pull/11825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzEwNQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387973105", "bodyText": "Why is the function returning empty string? This should be undefined if UI is trying fetch an asset form an unknown market right.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:28:41Z", "path": "cdap-ui/app/cdap/api/market.js", "diffHunk": "@@ -19,14 +19,21 @@ import { apiCreatorAbsPath } from 'services/resource-helper';\n \n let dataSrc = DataSourceConfigurer.getInstance();\n const basepath = window.CDAP_CONFIG.marketUrl;\n+const basepaths = window.CDAP_CONFIG.marketUrls;\n // FIXME (CDAP-14836): Right now this is scattered across node and client. Need to consolidate this.\n const REQUEST_TYPE_MARKET = 'MARKET';\n const requestOptions = {\n   requestOrigin: REQUEST_TYPE_MARKET,\n };\n \n+function getVerifiedMarketBaseUrl(url) {\n+  const found = basepaths.find((element) => element === decodeURIComponent(url));", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzM2OA==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387973368", "bodyText": "nit: the input is also not url. It should be host. We are checking the host of the url to talk to right.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NzgyNw==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r388387827", "bodyText": "No strong opinion on using empty string. I originally use it to make the return type more predictable (string instead of string|undefined). But I can definitely switch to undefined if it is preferred.\nRename url to host sounds good to me. But just to make sure that we are on the same page, we don't restrict the market host to only has host portion of the final URL, right? Our market place host url will definitely contains path in addition to host.", "author": "Biao", "createdAt": "2020-03-05T15:57:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NDQ4OQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387974489", "bodyText": "There could also be a case where basepaths could be empty right? If the user doesn't provide multiple market urls the property would be empty and we need to fallback to basepath", "author": "ajainarayanan", "createdAt": "2020-03-04T22:31:57Z", "path": "cdap-ui/app/cdap/api/market.js", "diffHunk": "@@ -35,11 +42,27 @@ export const MyMarketApi = {\n     `/packages/:packageName/:version/spec.json`,\n     requestOptions\n   ),\n-  getCategoryIcon: (category) => {\n-    return `${basepath}/categories/${category}/icon.png`;\n+  getCategoryIcon: (category, marketHost) => {\n+    if (basepaths.length === 0) {\n+      return `${basepath}/categories/${category}/icon.png`;\n+    }\n+\n+    if (marketHost) {\n+      const verifiedMarketHost = getVerifiedMarketBaseUrl(marketHost);\n+      return `${verifiedMarketHost}/categories/${category}/icon.png`;\n+    }\n+    return `${basepaths[0].url}/categories/${category}/icon.png`;", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NTYzNA==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387975634", "bodyText": "Also assuming the default market would be at 0 index might not be valid all the time. The user can always change the order.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NDQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNTE2Mw==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r388425163", "bodyText": "I thought we want to remove basepath once all instances migrate to the new pattern. If it is not the case, I can switch to basepath.", "author": "Biao", "createdAt": "2020-03-05T16:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NDQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NzM3MQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387977371", "bodyText": "This might look a little unconventional, we are passing the path as main url and the host as query parameter. We can define the market host to be a url param, so that when we make a call to the Nodejs it already has the full url to talk to.\nFor instance in api/market.js we can define,\n{\n...\ngetSampleData: apiCreateorAbsPath(\n  dataSrc,\n  'GET',\n  'REQUEST',\n  ':host/packages/:entityName/:entityVersion/:filename',\n   requestOptions\n),\n...\n\nThis still makes the call to getSampleData the same, but the host is actually added and we send a valid market url.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:39:02Z", "path": "cdap-ui/app/cdap/components/CaskWizards/LicenseStep/index.js", "diffHunk": "@@ -30,9 +31,11 @@ export default class LicenseStep extends Component {\n   }\n   componentWillMount() {\n     let { entityName, entityVersion, licenseFileName } = this.props;\n+    const marketHost = MarketStore.getState().selectedMarketHost;\n     let params = {\n       entityName,\n       entityVersion,\n+      marketHost,", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMTgzNQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r388401835", "bodyText": "This might look a little unconventional, we are passing the path as main url and the host as query parameter. We can define the market host to be a url param, so that when we make a call to the Nodejs it already has the full url to talk to.\nFor instance in api/market.js we can define,\n{\n...\ngetSampleData: apiCreateorAbsPath(\n  dataSrc,\n  'GET',\n  'REQUEST',\n  ':host/packages/:entityName/:entityVersion/:filename',\n   requestOptions\n),\n...\n\nThis still makes the call to getSampleData the same, but the host is actually added and we send a valid market url.\n\nIt would mean that the full url is passed which I thought we want to avoid due to security reason? Or perhaps I understand it wrong. We are exposing the host in the query parameter anyway.\nAn alternative is passing the index of the market host? We then use the index as key to fetch the real host on nodejs side.\nPlease let me know whats your preference.", "author": "Biao", "createdAt": "2020-03-05T16:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NzM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzNjM3NQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390336375", "bodyText": "Switched to use :marketHost", "author": "Biao", "createdAt": "2020-03-10T14:04:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NzM3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NzgxNQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387977815", "bodyText": "Correspondingly we will change the matketPath directly to be full url instead of passing an additional marketHost as query parameter.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:40:13Z", "path": "cdap-ui/app/cdap/components/CaskWizards/OneStepDeploy/OneStepDeployPlugin.js", "diffHunk": "@@ -129,6 +133,7 @@ export default class OneStepDeployPlugin extends Component {\n         }\n \n         let fetchUrl = `/forwardMarketToCdap?source=${marketPath}&target=${cdapPath}`;\n+        fetchUrl += marketHost ? `&marketHost=${encodeURIComponent(marketHost)}` : '';", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3OTEzMw==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387979133", "bodyText": "nit: Remove?", "author": "ajainarayanan", "createdAt": "2020-03-04T22:43:29Z", "path": "cdap-ui/app/cdap/components/Market/index.js", "diffHunk": "@@ -49,12 +60,52 @@ export default class Market extends Component {\n       }\n     });\n \n-    MyMarketApi.list().subscribe(this.getCategories, (err) => {\n-      console.log('Error', err);\n-      MarketAction.setError();\n+    if (!enableMultipleHub()) {\n+      MyMarketApi.list().subscribe(this.getCategories, (err) => {\n+        this.handleMarketConnectionError(err);\n+      });\n+      return;\n+    }\n+\n+    this.populateMultipleMarkets();\n+  }\n+\n+  populateMultipleMarkets() {\n+    if (!enableMultipleHub()) {\n+      return;\n+    }\n+    const markets = window.CDAP_CONFIG.marketUrls;\n+\n+    // Cache all market names from market metadata.\n+    const observables = markets.map((marketHost) =>\n+      MyMarketApi.getMetaData({ marketHost }).catch(() => {\n+        // Fallback to \"Unknown\" as the market name. If the user clicks the unknown\n+        // market, a connection failure UI would most likly appear.\n+        return Observable.of({ marketName: 'Unknown' });\n+      })\n+    );\n+    Observable.forkJoin(observables).subscribe((marketMetas) => {\n+      const marketNames = marketMetas.map((marketMeta) => marketMeta.marketName);\n+      this.setState({ marketNames }, () => {\n+        const marketHost = markets[0];\n+        MyMarketApi.list({ marketHost }).subscribe(\n+          (packages) => {\n+            this.getCategories(packages, marketHost);\n+          },\n+          (err) => {\n+            this.handleMarketConnectionError(err, marketHost);\n+          }\n+        );\n+      });\n     });\n   }\n \n+  handleMarketConnectionError(e, marketHost) {\n+    console.log(e);", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxMTQ3Mw==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r388411473", "bodyText": "sg. But just want to double confirm as it was in the original error handling code path.", "author": "Biao", "createdAt": "2020-03-05T16:31:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3OTEzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4MDc4NQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387980785", "bodyText": "This should also be the window.CDAP_CONFIG.marketBaseUrl. We cannot assume the market 0 index will be the default.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:47:31Z", "path": "cdap-ui/app/cdap/components/Market/store/market-store.js", "diffHunk": "@@ -21,8 +21,13 @@ import Version from 'services/VersionRange/Version';\n import VersionStore from 'services/VersionStore';\n import isNil from 'lodash/isNil';\n \n+function getDefaultMarketHost() {\n+  return window.CDAP_CONFIG.marketUrls.length > 0 ? window.CDAP_CONFIG.marketUrls[0] : '';", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4MTc2NQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387981765", "bodyText": "One solution would be to check if there is list of markets passed on and find the host that we host (marketBaseUrl). If there is no list then we should fallback to marketBaseUrl which will always be passed.\nThis assumes that we always set marketBaseUrl to be cdap default market.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4MjE1NA==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387982154", "bodyText": "This prompted, we should have a fallback to handle when user removes all market urls. We should the very least say no markets specified. We don't have to address it in this JIRA but we can come back to it later.", "author": "ajainarayanan", "createdAt": "2020-03-04T22:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyMDMzMg==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r388420332", "bodyText": "One solution would be to check if there is list of markets passed on and find the host that we host (marketBaseUrl). If there is no list then we should fallback to marketBaseUrl which will always be passed.\nThis assumes that we always set marketBaseUrl to be cdap default market.\n\nCould you give me a little bit more information on what do we want to achieve with the propose design? If a malicious user can modify marketBaseUrls, the same user can easily modify marketBaseUrl to defeat the proposed design.\nAre they trying to make their hub the first one to show up and we want the CDAP hub be the first one to show up?", "author": "Biao", "createdAt": "2020-03-05T16:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4MDc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NDI4NA==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r387984284", "bodyText": "This should check if the sourceLink is a valid market url and return undefined.\nThe consumer (/forwardMarketToCdap) API should send a 403 response denying the request.\nAs an attacker I can construct a link like https:///forwardMarketToCdap?sourceLink=\"mymaliciousdomain.com/packages/malware\"&targetLink=\"cdap-instance\"", "author": "ajainarayanan", "createdAt": "2020-03-04T22:56:20Z", "path": "cdap-ui/server/url-helper.js", "diffHunk": "@@ -19,31 +19,63 @@\n const REQUEST_ORIGIN_ROUTER = 'ROUTER';\n const REQUEST_ORIGIN_MARKET = 'MARKET';\n \n+// return market host string from path's query parameter. empty string will be\n+// return if not found.\n+function getMarketHostParam(path) {\n+  const EXTRACT_MARKET_HOST_REGEX = /[?|&]marketHost=([^&]+).*$/;\n+  const matches = path.match(EXTRACT_MARKET_HOST_REGEX);\n+  return matches ? matches[1] : '';\n+}\n+\n+function getMarketUrls(cdapConfig) {\n+  return cdapConfig['market.base.urls'] ? cdapConfig['market.base.urls'].split('+') : [];\n+}\n+\n+function getVerifiedMarketHost(cdapConfig, urlOrPath) {\n+    if (!cdapConfig['market.base.urls']) {\n+      return `${cdapConfig['market.base.url']}`;\n+    }\n+\n+    const marketHost = getMarketHostParam(urlOrPath);\n+    const found = getMarketUrls(cdapConfig).find(element => element === decodeURIComponent(marketHost));\n+    return found ? found : '';", "originalCommit": "40d61999d2a35da82751b8f96e10081e51bc83a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQzNDY2Nw==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r388434667", "bodyText": "I am not entirely sure I understand this comment. Currently the sourceLink doesn't contain a host, it gets the host from marketHost parameter which should be validated by line 40.\nIf you are referring to switch to fullpath for all request, I think we just need to change line 40 to something like this:\nreturn getMarketUrls(cdapConfig).find(e => urlOrPath.startsWith(e));\nPlease let me know IIUC. I might have missed something obvious.", "author": "Biao", "createdAt": "2020-03-05T17:06:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NDI4NA=="}], "type": "inlineReview"}, {"oid": "d3a841b3f054ab87af3ea0534d376112ff09cc24", "url": "https://github.com/cdapio/cdap/commit/d3a841b3f054ab87af3ea0534d376112ff09cc24", "message": "Minor cleanup", "committedDate": "2020-03-09T19:49:39Z", "type": "forcePushed"}, {"oid": "4502dc1e990f1657fb18bb2fb9b2df41db47e06c", "url": "https://github.com/cdapio/cdap/commit/4502dc1e990f1657fb18bb2fb9b2df41db47e06c", "message": "Address reviews", "committedDate": "2020-03-09T19:57:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAzNTc5MA==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390035790", "bodyText": "Can we fallback to the domain name? If there are too many markets without a /metadata api then it becomes hard to track which is a specific market user is looking for.", "author": "ajainarayanan", "createdAt": "2020-03-10T00:40:47Z", "path": "cdap-ui/app/cdap/components/Market/index.js", "diffHunk": "@@ -49,12 +56,52 @@ export default class Market extends Component {\n       }\n     });\n \n-    MyMarketApi.list().subscribe(this.getCategories, (err) => {\n-      console.log('Error', err);\n-      MarketAction.setError();\n+    if (hasMultipleMarkets()) {\n+      this.populateMarketNames();\n+      return;\n+    }\n+\n+    this.populateMarketPackages(window.CDAP_CONFIG.marketUrls[0]);\n+  }\n+\n+  populateMarketPackages(marketHost) {\n+    MyMarketApi.list({ marketHost }).subscribe(\n+      (packages) => {\n+        this.getCategories(packages, marketHost);\n+      },\n+      () => {\n+        this.handleMarketConnectionError(marketHost);\n+      }\n+    );\n+  }\n+\n+  populateMarketNames() {\n+    if (!hasMultipleMarkets()) {\n+      return;\n+    }\n+    const markets = window.CDAP_CONFIG.marketUrls;\n+\n+    // Cache all market names from market metadata.\n+    const observables = markets.map((marketHost) =>\n+      MyMarketApi.getMetaData({ marketHost }).catch(() => {\n+        // Fallback to \"Unknown\" as the market name. If the user clicks the unknown\n+        // market, a connection failure UI would most likly appear.\n+        return Observable.of({ marketName: 'Unknown' });", "originalCommit": "4502dc1e990f1657fb18bb2fb9b2df41db47e06c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzNjk0MA==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390336940", "bodyText": "Discussed yesterday. I have switched to use market base url for now. let me know if it is acceptable as a short term solution.", "author": "Biao", "createdAt": "2020-03-10T14:05:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAzNTc5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAzOTA1Mg==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390039052", "bodyText": "nit: Would we have to verify the host here? Shouldn't this be already done on any market url we get before constructing the url? If we return invalid-market-url I believe express server will still make the call right?", "author": "ajainarayanan", "createdAt": "2020-03-10T00:53:15Z", "path": "cdap-ui/server/url-helper.js", "diffHunk": "@@ -14,28 +14,57 @@\n  * the License.\n */\n \n+import memoize from 'lodash/memoize';\n+\n export const REQUEST_ORIGIN_ROUTER = 'ROUTER';\n export const REQUEST_ORIGIN_MARKET = 'MARKET';\n \n+function getRouterHost(cdapConfig) {\n+  const routerhost = cdapConfig['router.server.address'],\n+    routerport =\n+      cdapConfig['ssl.external.enabled'] === 'true'\n+        ? cdapConfig['router.ssl.server.port']\n+        : cdapConfig['router.server.port'],\n+    routerprotocol = cdapConfig['ssl.external.enabled'] === 'true' ? 'https' : 'http';\n+  return `${routerprotocol}://${routerhost}:${routerport}`;\n+}\n+\n+function extractMarketUrls(cdapConfig) {\n+  if (!cdapConfig) {\n+    return [];\n+  }\n+  const defaultMarketUrl = cdapConfig['market.base.url'];\n+  if (!cdapConfig['market.base.urls']) {\n+    return [defaultMarketUrl];\n+  }\n+  const marketUrls = cdapConfig['market.base.urls'].split('+');\n+  const filteredMarketUrls = marketUrls.filter(element => element !== defaultMarketUrl); \n+  // Make sure the default CDAP market is the first market.\n+  filteredMarketUrls.splice(0, 0, defaultMarketUrl);\n+  return filteredMarketUrls;\n+}\n+\n+export const getMarketUrls = memoize(extractMarketUrls);\n+\n+export function isVerifiedMarketHost(cdapConfig, url) {\n+  return !!getMarketUrls(cdapConfig).find(element => url.startsWith(element));\n+}\n+\n export function constructUrl(cdapConfig, path, origin = REQUEST_ORIGIN_ROUTER) {\n   if (!cdapConfig) {\n     return null;\n   }\n   path = path && path[0] === '/' ? path.slice(1) : path;\n   if (origin === REQUEST_ORIGIN_MARKET) {\n-    return `${cdapConfig['market.base.url']}/${path}`;\n+    return isVerifiedMarketHost(cdapConfig, path) ? path : 'invalid-market-url';", "originalCommit": "4502dc1e990f1657fb18bb2fb9b2df41db47e06c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2OTQyMQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390069421", "bodyText": "You are right, it is not necessary. I was just adding another layer of safe net. I have removed it to be less confusing.", "author": "Biao", "createdAt": "2020-03-10T02:58:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAzOTA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0MDY4OQ==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390040689", "bodyText": "nit: We can remove these I think", "author": "ajainarayanan", "createdAt": "2020-03-10T00:59:39Z", "path": "cdap-ui/app/cdap/services/resource-helper/index.js", "diffHunk": "@@ -54,6 +54,8 @@ function createApiFromExactPath(dataSrc, method, type, path, options = {}) {\n   return (params = {}, body, headers) => {\n     let url = buildUrl(path, params);\n \n+    console.log(`createApi path = ${path}`);", "originalCommit": "4502dc1e990f1657fb18bb2fb9b2df41db47e06c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2OTU0Nw==", "url": "https://github.com/cdapio/cdap/pull/11825#discussion_r390069547", "bodyText": "done", "author": "Biao", "createdAt": "2020-03-10T02:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0MDY4OQ=="}], "type": "inlineReview"}, {"oid": "3b35403bca880f121944a5996a995f386fa4e4bf", "url": "https://github.com/cdapio/cdap/commit/3b35403bca880f121944a5996a995f386fa4e4bf", "message": "Address more reviews", "committedDate": "2020-03-10T14:08:40Z", "type": "forcePushed"}, {"oid": "475c16f08fb086b29476f3da181a1ca2def7970f", "url": "https://github.com/cdapio/cdap/commit/475c16f08fb086b29476f3da181a1ca2def7970f", "message": "Add support for multiple market in CDAP", "committedDate": "2020-03-10T22:07:16Z", "type": "forcePushed"}, {"oid": "385371b749128fea4a17b99ced6aedd81305ae94", "url": "https://github.com/cdapio/cdap/commit/385371b749128fea4a17b99ced6aedd81305ae94", "message": "Add support for multiple market in CDAP", "committedDate": "2020-03-11T12:51:36Z", "type": "commit"}, {"oid": "385371b749128fea4a17b99ced6aedd81305ae94", "url": "https://github.com/cdapio/cdap/commit/385371b749128fea4a17b99ced6aedd81305ae94", "message": "Add support for multiple market in CDAP", "committedDate": "2020-03-11T12:51:36Z", "type": "forcePushed"}]}