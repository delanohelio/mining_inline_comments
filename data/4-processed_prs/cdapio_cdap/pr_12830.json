{"pr_number": 12830, "pr_title": "(CDAP-17276) Save accelerator annotation as system metadata", "pr_createdAt": "2020-10-29T21:30:19Z", "pr_url": "https://github.com/cdapio/cdap/pull/12830", "timeline": [{"oid": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "url": "https://github.com/cdapio/cdap/commit/8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "message": "(CDAP-17276) Save accelerator annotation as system metadata when application is deployed.", "committedDate": "2020-10-29T22:58:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3NjQ3OQ==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514676479", "bodyText": "Have one function per line to have a cleaner look:\nappSpec.getPlugins().values().stream()\n  .map(Plugin::getPluginClass)\n  .map(PluginClass::getRequirements)\n  .map(Requirements::getAccelerators)\n  .flatMap(Set::stream)\n  .collect(Collectors.toSet());", "author": "chtyim", "createdAt": "2020-10-30T01:39:40Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(", "originalCommit": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1Mzg3OQ==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515353879", "bodyText": "Done", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T20:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3NjQ3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3Njk2MA==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514676960", "bodyText": "It won't be null, right?", "author": "chtyim", "createdAt": "2020-10-30T01:40:08Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);\n+    if (acceleratorsValue == null || acceleratorsValue.isEmpty()) {", "originalCommit": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NjM4Ng==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515356386", "bodyText": "Yes :) . Changed to size check for the set.", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T20:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3Njk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY4MDcyMQ==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514680721", "bodyText": "Have it on one line. programId -> { }", "author": "chtyim", "createdAt": "2020-10-30T01:44:14Z", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "diffHunk": "@@ -128,6 +148,34 @@ public void testAppDeletionMultipleNS() throws Exception {\n     deleteAppAndData(testNSAppId);\n   }\n \n+  @Test\n+  public void testAcceleratorMetaDataDeletion() throws Exception {\n+    Id.Artifact artifactId = Id.Artifact\n+      .from(Id.Namespace.DEFAULT, AppWithWorkflow.class.getSimpleName(), \"1.0.0-SNAPSHOT\");\n+    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, AppWithWorkflow.class);\n+    File appJarFile = new File(tmpFolder.newFolder(),\n+                               String.format(\"%s-%s.jar\", artifactId.getName(), artifactId.getVersion().getVersion()));\n+    Files.copy(Locations.newInputSupplier(appJar), appJarFile);\n+    appJar.delete();\n+\n+    //deploy app\n+    applicationLifecycleService\n+      .deployAppAndArtifact(NamespaceId.DEFAULT, AppWithWorkflow.class.getSimpleName(), artifactId, appJarFile, null,\n+                            null, programId -> {", "originalCommit": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTQ1Mg==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515355452", "bodyText": "Done. Have to fix the intellij settings.", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T20:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY4MDcyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODY2Ng==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514898666", "bodyText": "Should we use a constant here instead of hard-coded string?", "author": "wyzhang", "createdAt": "2020-10-30T06:42:14Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);\n+    if (acceleratorsValue == null || acceleratorsValue.isEmpty()) {\n+      return;\n+    }\n+    properties.put(\"accelerator\", acceleratorsValue);", "originalCommit": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTYwMQ==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515355601", "bodyText": "Done.", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T20:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODgzMg==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514898832", "bodyText": "Move this after acceleratorValue emptiness check.", "author": "wyzhang", "createdAt": "2020-10-30T06:42:56Z", "path": "cdap-data-fabric/src/main/java/io/cdap/cdap/data2/metadata/system/AppSystemMetadataWriter.java", "diffHunk": "@@ -72,9 +78,27 @@ public AppSystemMetadataWriter(MetadataServiceClient metadataServiceClient, Appl\n         existingPluginClasses.add(plugin.getPluginClass());\n       }\n     }\n+    addAccelerators(appSpec, applicationClass, properties);\n     return properties.build();\n   }\n \n+  private void addAccelerators(ApplicationSpecification appSpec,\n+                               ApplicationClass applicationClass,\n+                               ImmutableMap.Builder<String, String> properties) {\n+    //add from all plugins\n+    Set<String> acceleratorSet = appSpec.getPlugins().values().stream().map(Plugin::getPluginClass)\n+      .map(PluginClass::getRequirements).map(\n+        Requirements::getAccelerators).flatMap(Set::stream)\n+      .collect(Collectors.toSet());\n+    //add from application\n+    acceleratorSet.addAll(applicationClass.getRequirements().getAccelerators());\n+    String acceleratorsValue = String.join(\",\", acceleratorSet);", "originalCommit": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTcwNA==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515355704", "bodyText": "Thanks, moved it.", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T20:18:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODk4MA==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r514898980", "bodyText": "Maybe avoid hard-coded string?", "author": "wyzhang", "createdAt": "2020-10-30T06:43:33Z", "path": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/ApplicationLifecycleServiceTest.java", "diffHunk": "@@ -128,6 +148,34 @@ public void testAppDeletionMultipleNS() throws Exception {\n     deleteAppAndData(testNSAppId);\n   }\n \n+  @Test\n+  public void testAcceleratorMetaDataDeletion() throws Exception {\n+    Id.Artifact artifactId = Id.Artifact\n+      .from(Id.Namespace.DEFAULT, AppWithWorkflow.class.getSimpleName(), \"1.0.0-SNAPSHOT\");\n+    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, AppWithWorkflow.class);\n+    File appJarFile = new File(tmpFolder.newFolder(),\n+                               String.format(\"%s-%s.jar\", artifactId.getName(), artifactId.getVersion().getVersion()));\n+    Files.copy(Locations.newInputSupplier(appJar), appJarFile);\n+    appJar.delete();\n+\n+    //deploy app\n+    applicationLifecycleService\n+      .deployAppAndArtifact(NamespaceId.DEFAULT, AppWithWorkflow.class.getSimpleName(), artifactId, appJarFile, null,\n+                            null, programId -> {\n+        }, true);\n+    //Check for the accelerator metadata\n+    ApplicationId appId = NamespaceId.DEFAULT.app(AppWithWorkflow.class.getSimpleName());\n+    Assert.assertEquals(false, metadataStorage.read(new Read(appId.toMetadataEntity(),\n+                                                             MetadataScope.SYSTEM, MetadataKind.PROPERTY)).isEmpty());\n+    Map<String, String> metadataProperties = metadataStorage\n+      .read(new Read(appId.toMetadataEntity())).getProperties(MetadataScope.SYSTEM);\n+    Assert.assertEquals(\"cdc\", metadataProperties.get(\"accelerator\"));", "originalCommit": "8edacdfb0123fa1b519f6ab2bde9ac98ba0fa9c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NjA4MQ==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515356081", "bodyText": "Done.", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T20:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5ODk4MA=="}], "type": "inlineReview"}, {"oid": "9890dab02c6c90b7c1ecfcf6c5ad64b062569411", "url": "https://github.com/cdapio/cdap/commit/9890dab02c6c90b7c1ecfcf6c5ad64b062569411", "message": "(CDAP-17276) Save accelerator annotation as system metadata when application is deployed.", "committedDate": "2020-10-30T20:10:08Z", "type": "commit"}, {"oid": "9890dab02c6c90b7c1ecfcf6c5ad64b062569411", "url": "https://github.com/cdapio/cdap/commit/9890dab02c6c90b7c1ecfcf6c5ad64b062569411", "message": "(CDAP-17276) Save accelerator annotation as system metadata when application is deployed.", "committedDate": "2020-10-30T20:10:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNDEwNw==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515404107", "bodyText": "no need to use fully qualified name.", "author": "chtyim", "createdAt": "2020-10-30T22:09:20Z", "path": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/deploy/pipeline/AppDeploymentInfo.java", "diffHunk": "@@ -88,10 +89,10 @@ public NamespaceId getNamespaceId() {\n   }\n \n   /**\n-   * Returns the class name of the {@link Application}.\n+   * Returns the {@link io.cdap.cdap.api.artifact.ApplicationClass} associated with this {@link Application}.", "originalCommit": "9890dab02c6c90b7c1ecfcf6c5ad64b062569411", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwODk1Nw==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515408957", "bodyText": "Missed this, will fix in a new checkin.", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T22:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQxMjEzMQ==", "url": "https://github.com/cdapio/cdap/pull/12830#discussion_r515412131", "bodyText": "Created PR #12833", "author": "greeshmaswaminathan", "createdAt": "2020-10-30T22:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNDEwNw=="}], "type": "inlineReview"}]}