{"pr_number": 12438, "pr_title": "[CDAP-17057] Fix preference modal not resetting after error", "pr_createdAt": "2020-07-07T14:51:18Z", "pr_url": "https://github.com/cdapio/cdap/pull/12438", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3ODU0NA==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r453878544", "bodyText": "nit: typo accordion", "author": "elfenheart", "createdAt": "2020-07-13T19:24:03Z", "path": "cdap-ui/app/cdap/components/Administration/AdminConfigTabContent/SystemPrefsAccordion/index.js", "diffHunk": "@@ -215,6 +219,7 @@ export default class SystemPrefsAccordion extends Component {\n         className={classnames('admin-config-container system-prefs-container', {\n           expanded: this.props.expanded,\n         })}\n+        data-cy=\"system-prefs-accordian\"", "originalCommit": "437ba43dec91c05fdedf537fd331efb63edd32cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkzMjIxNg==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r453932216", "bodyText": "Fixed!", "author": "yukiej", "createdAt": "2020-07-13T21:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3ODU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTAzNQ==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r453879035", "bodyText": "does null work? It's better to set to null than undefined. Undefined can imply that the property doesn't exist", "author": "elfenheart", "createdAt": "2020-07-13T19:24:57Z", "path": "cdap-ui/app/cdap/components/FastAction/SetPreferenceAction/SetPreferenceModal.js", "diffHunk": "@@ -258,6 +259,7 @@ export default class SetPreferenceModal extends Component {\n     event.preventDefault();\n     this.setState({\n       showResetMessage: true,\n+      error: undefined,", "originalCommit": "437ba43dec91c05fdedf537fd331efb63edd32cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkzMzQ5OA==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r453933498", "bodyText": "Fixed", "author": "yukiej", "createdAt": "2020-07-13T21:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3OTAzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1ODM1NA==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455858354", "bodyText": "Could we use If component instead of ternary operator?", "author": "jennac3", "createdAt": "2020-07-16T15:06:20Z", "path": "cdap-ui/app/cdap/components/FastAction/SetPreferenceAction/SetPreferenceModal.js", "diffHunk": "@@ -469,9 +472,7 @@ export default class SetPreferenceModal extends Component {\n                 ) : null}\n               </div>\n               <div className=\"preferences-error\">\n-                {this.state.error ? (\n-                  <div className=\"bg-danger text-white\">{this.state.error}</div>\n-                ) : null}\n+                {this.state.error ? <div className=\"text-danger\">{this.state.error}</div> : null}", "originalCommit": "d286109a3279fd3120e3751c0bdb3b9ced238d33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MzQ1Mg==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455883452", "bodyText": "Done!", "author": "yukiej", "createdAt": "2020-07-16T15:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1ODM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1OTA4NQ==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455859085", "bodyText": "Can we have a blank space between it blocks?", "author": "jennac3", "createdAt": "2020-07-16T15:07:20Z", "path": "cdap-ui/cypress/integration/admin.spec.ts", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as Helpers from '../helpers';\n+\n+let headers = {};\n+\n+describe('Setting and saving preferences', () => {\n+  before(() => {\n+    Helpers.loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+  });\n+  it('Should show error message if user tries to set profile at the instance level', () => {", "originalCommit": "d286109a3279fd3120e3751c0bdb3b9ced238d33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2NTk4Mw==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455865983", "bodyText": "Done!", "author": "yukiej", "createdAt": "2020-07-16T15:16:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1OTA4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1OTQxNg==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455859416", "bodyText": "nit: We can also use dataCy('key-value-pair-0') for referring to data-cy.", "author": "jennac3", "createdAt": "2020-07-16T15:07:44Z", "path": "cdap-ui/cypress/integration/admin.spec.ts", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as Helpers from '../helpers';\n+\n+let headers = {};\n+\n+describe('Setting and saving preferences', () => {\n+  before(() => {\n+    Helpers.loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+  });\n+  it('Should show error message if user tries to set profile at the instance level', () => {\n+    cy.visit('cdap/administration/configuration');\n+\n+    cy.get('[data-cy=\"system-prefs-accordion\"]').click();\n+    cy.get('[data-cy=\"edit-system-prefs-btn\"]').click();\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {\n+      cy.get('input[placeholder=\"key\"]')\n+        .clear()\n+        .type('system.profile.name');\n+      cy.get('input[placeholder=\"value\"]')\n+        .clear()\n+        .type('hello');\n+    });\n+    cy.get('[data-cy=\"save-prefs-btn\"]').click();\n+    cy.get('.preferences-error').should('exist');\n+  });\n+  it('Should allow user to save valid preference at instance level after fixing error', () => {\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {", "originalCommit": "d286109a3279fd3120e3751c0bdb3b9ced238d33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MDQzMA==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455890430", "bodyText": "Good call, done!", "author": "yukiej", "createdAt": "2020-07-16T15:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1OTQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDk4MQ==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455860981", "bodyText": "nit: Is it possible to save name and hello into a constant variable since we use it across it blocks?", "author": "jennac3", "createdAt": "2020-07-16T15:09:53Z", "path": "cdap-ui/cypress/integration/admin.spec.ts", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as Helpers from '../helpers';\n+\n+let headers = {};\n+\n+describe('Setting and saving preferences', () => {\n+  before(() => {\n+    Helpers.loginIfRequired().then(() => {\n+      cy.getCookie('CDAP_Auth_Token').then((cookie) => {\n+        if (!cookie) {\n+          return;\n+        }\n+        headers = {\n+          Authorization: 'Bearer ' + cookie.value,\n+        };\n+      });\n+    });\n+  });\n+  it('Should show error message if user tries to set profile at the instance level', () => {\n+    cy.visit('cdap/administration/configuration');\n+\n+    cy.get('[data-cy=\"system-prefs-accordion\"]').click();\n+    cy.get('[data-cy=\"edit-system-prefs-btn\"]').click();\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {\n+      cy.get('input[placeholder=\"key\"]')\n+        .clear()\n+        .type('system.profile.name');\n+      cy.get('input[placeholder=\"value\"]')\n+        .clear()\n+        .type('hello');\n+    });\n+    cy.get('[data-cy=\"save-prefs-btn\"]').click();\n+    cy.get('.preferences-error').should('exist');\n+  });\n+  it('Should allow user to save valid preference at instance level after fixing error', () => {\n+    cy.get('[data-cy=\"key-value-pair-0\"]').within(() => {\n+      cy.get('input[placeholder=\"key\"]')\n+        .clear()\n+        .type('name');\n+    });\n+    cy.get('[data-cy=\"save-prefs-btn\"]').click();\n+    cy.get('.grid-row').within(() => {\n+      cy.contains('name').should('be.visible');", "originalCommit": "d286109a3279fd3120e3751c0bdb3b9ced238d33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MDM1OA==", "url": "https://github.com/cdapio/cdap/pull/12438#discussion_r455890358", "bodyText": "Done!", "author": "yukiej", "createdAt": "2020-07-16T15:51:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDk4MQ=="}], "type": "inlineReview"}, {"oid": "737b89544fc1edeefee65b17fb5513dc28a292b1", "url": "https://github.com/cdapio/cdap/commit/737b89544fc1edeefee65b17fb5513dc28a292b1", "message": "Reset save button on error and add preferences e2e test\n\nClear error on reset\n\nDon't disable save unless a field is missing", "committedDate": "2020-07-16T15:54:22Z", "type": "commit"}, {"oid": "737b89544fc1edeefee65b17fb5513dc28a292b1", "url": "https://github.com/cdapio/cdap/commit/737b89544fc1edeefee65b17fb5513dc28a292b1", "message": "Reset save button on error and add preferences e2e test\n\nClear error on reset\n\nDon't disable save unless a field is missing", "committedDate": "2020-07-16T15:54:22Z", "type": "forcePushed"}]}