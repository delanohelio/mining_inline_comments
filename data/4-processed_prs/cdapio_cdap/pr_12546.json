{"pr_number": 12546, "pr_title": "[CDAP-17137] Fix preview stop bug and empty error message bug", "pr_createdAt": "2020-07-30T22:33:22Z", "pr_url": "https://github.com/cdapio/cdap/pull/12546", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NDE5NA==", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r464564194", "bodyText": "Could we define enum for status type if it also has other status such as failure?", "author": "jennac3", "createdAt": "2020-08-03T17:40:49Z", "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -678,15 +678,31 @@ class HydratorPlusPlusTopPanelCtrl {\n     };\n     this.previewLoading = true;\n     this.loadingLabel = 'Stopping';\n-    this.stopTimer();\n-    this.updateTimerLabelAndTitle();\n     this.myPipelineApi\n         .stopPreview(params, {})\n         .$promise\n         .then(\n-          (err) => {\n+          () => {\n+            this.stopTimer();\n+            this.updateTimerLabelAndTitle();\n             this.previewLoading = false;\n             this.previewRunning = false;\n+            this.dataSrc.stopPoll(this.pollId);\n+            this.pollId = null;\n+\n+            let pipelinePreviewPlaceholder = 'The preview of the pipeline';\n+            let pipelineName = this.HydratorPlusPlusConfigStore.getName();\n+            if (pipelineName.length > 0) {\n+              pipelinePreviewPlaceholder += ` \"${pipelineName}\"`;\n+            }\n+            this.myAlertOnValium.show({\n+              type: 'success',", "originalCommit": "fdf0e17f117fdd08434e56611a7d855ee7c930c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0MzM2Nw==", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r465943367", "bodyText": "I believe these types are coming from an external library (ngStrap's alert) which we want to deprecate. I don't think it makes sense to add an enum for the status here, since the bigger to do is to replace this alert entirely.", "author": "yukiej", "createdAt": "2020-08-05T19:09:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NDE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NTI2MA==", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r464565260", "bodyText": "Should we also check the nullness of bindings?\nconst resource = bindings && bindings[resourceId]? bindings[resourceId].resource : undefined;", "author": "jennac3", "createdAt": "2020-08-03T17:41:59Z", "path": "cdap-ui/app/services/cask-angular-socket-datasource/datasource.js", "diffHunk": "@@ -172,7 +172,7 @@ var socketDataSource = angular.module(PKG.name+'.services');\n \n       function startClientPoll(resourceId, bindings, interval) {\n         const intervalTimer = setTimeout(() => {\n-          const resource = bindings[resourceId].resource;\n+          const resource = bindings[resourceId]? bindings[resourceId].resource : undefined;", "originalCommit": "fdf0e17f117fdd08434e56611a7d855ee7c930c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NjAzMA==", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r465946030", "bodyText": "Good question - we check for the nullness of bindings before we call startClientPoll, so we don't need to do it here. Also, I don't think bindings can ever be null because we initialize it as an empty object anyway.", "author": "yukiej", "createdAt": "2020-08-05T19:14:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NTI2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NjA0NQ==", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r464566045", "bodyText": "Can we use const for pipelineName, since its values are not changed?", "author": "jennac3", "createdAt": "2020-08-03T17:43:09Z", "path": "cdap-ui/app/hydrator/controllers/create/toppanel-ctrl.js", "diffHunk": "@@ -678,15 +678,31 @@ class HydratorPlusPlusTopPanelCtrl {\n     };\n     this.previewLoading = true;\n     this.loadingLabel = 'Stopping';\n-    this.stopTimer();\n-    this.updateTimerLabelAndTitle();\n     this.myPipelineApi\n         .stopPreview(params, {})\n         .$promise\n         .then(\n-          (err) => {\n+          () => {\n+            this.stopTimer();\n+            this.updateTimerLabelAndTitle();\n             this.previewLoading = false;\n             this.previewRunning = false;\n+            this.dataSrc.stopPoll(this.pollId);\n+            this.pollId = null;\n+\n+            let pipelinePreviewPlaceholder = 'The preview of the pipeline';\n+            let pipelineName = this.HydratorPlusPlusConfigStore.getName();", "originalCommit": "fdf0e17f117fdd08434e56611a7d855ee7c930c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0NjI5MA==", "url": "https://github.com/cdapio/cdap/pull/12546#discussion_r465946290", "bodyText": "Fixed!", "author": "yukiej", "createdAt": "2020-08-05T19:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NjA0NQ=="}], "type": "inlineReview"}, {"oid": "13c50c43d37ea000e6312f6e9d56ec87eec02da2", "url": "https://github.com/cdapio/cdap/commit/13c50c43d37ea000e6312f6e9d56ec87eec02da2", "message": "Fix stop preview callback to remove empty error banner and allow retry to stop preview\n\nReset timer label when backend status returns error\n\nLet user retry stopping preview run if preview stop returns error from backend\n\nStop polling for preview status and show stop success banner as long as backend does not reply with error when stopping  preview", "committedDate": "2020-08-05T19:25:58Z", "type": "commit"}, {"oid": "b6a4d17083a7bc8ba5e23117109259875ecdacc8", "url": "https://github.com/cdapio/cdap/commit/b6a4d17083a7bc8ba5e23117109259875ecdacc8", "message": "Fix arguments for stopping pools in datasource", "committedDate": "2020-08-05T19:26:01Z", "type": "commit"}, {"oid": "b6a4d17083a7bc8ba5e23117109259875ecdacc8", "url": "https://github.com/cdapio/cdap/commit/b6a4d17083a7bc8ba5e23117109259875ecdacc8", "message": "Fix arguments for stopping pools in datasource", "committedDate": "2020-08-05T19:26:01Z", "type": "forcePushed"}]}