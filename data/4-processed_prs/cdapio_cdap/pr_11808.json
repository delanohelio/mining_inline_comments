{"pr_number": 11808, "pr_title": "Page level error handling", "pr_createdAt": "2020-01-02T20:11:47Z", "pr_url": "https://github.com/cdapio/cdap/pull/11808", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0Mzk1NQ==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r363543955", "bodyText": "nit: typo retrieve", "author": "elfenheart", "createdAt": "2020-01-07T00:22:59Z", "path": "cdap-ui/app/cdap/main.js", "diffHunk": "@@ -119,6 +134,33 @@ class CDAP extends Component {\n     this.fetchSessionTokenAndUpdateState().then(this.setUIState);\n   };\n \n+  retriveNamespace = () => {", "originalCommit": "cc5a1fd614cf8a3763572ad7dee5b92635cb23d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDQ2Mg==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r363544462", "bodyText": "remove", "author": "elfenheart", "createdAt": "2020-01-07T00:25:19Z", "path": "cdap-ui/app/hydrator/main.js", "diffHunk": "@@ -274,6 +274,43 @@ angular\n     var activeThemeClass = caskTheme.getClassName();\n     var dataSource = new MyCDAPDataSource($scope);\n     getVersion();\n+    this.eventEmitter = window.CaskCommon.ee(window.CaskCommon.ee);\n+    this.namespaceAvailable = true;\n+\n+    this.eventEmitter.on(window.CaskCommon.globalEvents.NSCALLFAILED, () => {\n+      this.namespaceAvailable = false;\n+    });\n+\n+    this.eventEmitter.on(window.CaskCommon.globalEvents.NSAVAILABLE, () => {\n+      this.namespaceAvailable = true;\n+    });\n+\n+    this.namespaceRefreshFn = () => {\n+      dataSource.request({_cdapPath: '/namespaces', method: 'GET'})\n+          .then((res) => {\n+            console.log('call successs',res);", "originalCommit": "cc5a1fd614cf8a3763572ad7dee5b92635cb23d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDUzOQ==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r363544539", "bodyText": "typo", "author": "elfenheart", "createdAt": "2020-01-07T00:25:40Z", "path": "cdap-ui/app/hydrator/main.js", "diffHunk": "@@ -274,6 +274,43 @@ angular\n     var activeThemeClass = caskTheme.getClassName();\n     var dataSource = new MyCDAPDataSource($scope);\n     getVersion();\n+    this.eventEmitter = window.CaskCommon.ee(window.CaskCommon.ee);\n+    this.namespaceAvailable = true;\n+\n+    this.eventEmitter.on(window.CaskCommon.globalEvents.NSCALLFAILED, () => {\n+      this.namespaceAvailable = false;\n+    });\n+\n+    this.eventEmitter.on(window.CaskCommon.globalEvents.NSAVAILABLE, () => {\n+      this.namespaceAvailable = true;\n+    });\n+\n+    this.namespaceRefreshFn = () => {\n+      dataSource.request({_cdapPath: '/namespaces', method: 'GET'})\n+          .then((res) => {\n+            console.log('call successs',res);\n+            if (res.length > 0) {\n+              window.CaskCommon.Store.dispatch({\n+                type: window.CaskCommon.NameSpaceStoreActions.updateNamespaces,\n+                payload: {\n+                  namespaces: res,\n+                },\n+              });\n+              this.eventEmitter.emit(\n+                  window.CaskCommon.globalEvents.NSAVAILABLE);\n+            } else {\n+              // TL;DR - This is emitted for Authorization in main.js\n+              // This means there is no namespace for the user to work on.\n+              // which indicates she/he have no authorization for any namesapce\n+              // in the system.\n+              this.eventEmitter.emit(\n+                  window.CaskCommon.globalEvents.NONAMESPACE);\n+            }\n+          },(err) => {\n+            console.log('hydratoer err ',err);", "originalCommit": "cc5a1fd614cf8a3763572ad7dee5b92635cb23d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDk2MA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r363544960", "bodyText": "rather than wrapping all components individually with ErrorBoundary, can we just create a wrapper component for Route that will add this ErrorBoundary implicitly?", "author": "elfenheart", "createdAt": "2020-01-07T00:27:35Z", "path": "cdap-ui/app/cdap/main.js", "diffHunk": "@@ -171,6 +213,114 @@ class CDAP extends Component {\n         </div>\n       );\n     }\n+    const container = (\n+      <div className=\"container-fluid\">\n+        <Switch>\n+          <Route\n+            exact\n+            path=\"/\"\n+            render={(props) => (\n+              <ErrorBoundary>\n+                <RouteToNamespace {...props} />\n+              </ErrorBoundary>", "originalCommit": "cc5a1fd614cf8a3763572ad7dee5b92635cb23d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzc2Mg==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r367607762", "bodyText": "Added error boundary outside Switch", "author": "itsanudeep", "createdAt": "2020-01-16T19:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDk2MA=="}], "type": "inlineReview"}, {"oid": "9fb0e9cde0a85121af865a1ed196d71af7edf79c", "url": "https://github.com/cdapio/cdap/commit/9fb0e9cde0a85121af865a1ed196d71af7edf79c", "message": "page level handling for no namespace", "committedDate": "2020-01-16T19:40:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NzIzNg==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r368187236", "bodyText": "We don't need to set state if there is no workspaceError. Will avoid re-renders in UI.", "author": "ajainarayanan", "createdAt": "2020-01-18T00:23:51Z", "path": "cdap-ui/app/cdap/components/DataPrep/index.js", "diffHunk": "@@ -77,6 +79,17 @@ export default class DataPrep extends Component {\n     this._isMounted = true;\n     this.checkBackendUp(this.props);\n     checkDataPrepHigherVersion();\n+    this.storeSub = DataPrepStore.subscribe(() => {\n+      let state = DataPrepStore.getState();\n+      this.setState({ workspaceError: state.error.workspaceError }, () => {", "originalCommit": "9fb0e9cde0a85121af865a1ed196d71af7edf79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQyMDA1Mg==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r371420052", "bodyText": "fixed", "author": "itsanudeep", "createdAt": "2020-01-27T18:55:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NzIzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODAwMg==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r368188002", "bodyText": "Are we replacing all setDataError to setWorkspaceError? I now don't see this event being emitted anywhere.", "author": "ajainarayanan", "createdAt": "2020-01-18T00:28:38Z", "path": "cdap-ui/app/cdap/components/DataPrepHome/index.js", "diffHunk": "@@ -221,9 +226,9 @@ export default class DataPrepHome extends Component {\n             type: DataPrepActions.disableLoading,\n           });\n           DataPrepStore.dispatch({\n-            type: DataPrepActions.setDataError,\n+            type: DataPrepActions.setWorkspaceError,", "originalCommit": "9fb0e9cde0a85121af865a1ed196d71af7edf79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxOTkxMw==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r371419913", "bodyText": "We're dispatching this when call to get workspace fails. We still use setDataError in other places like in DataPrepActionCreator", "author": "itsanudeep", "createdAt": "2020-01-27T18:55:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4ODAwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4OTIzOA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r368189238", "bodyText": "Seems like duplicate code. Can we export it as a common utility function and use it here?", "author": "ajainarayanan", "createdAt": "2020-01-18T00:36:34Z", "path": "cdap-ui/app/tracker/main.js", "diffHunk": "@@ -250,6 +250,35 @@ angular\n     var activeThemeClass = caskTheme.getClassName();\n     var dataSource = new MyCDAPDataSource($scope);\n     getVersion();\n+    this.eventEmitter = window.CaskCommon.ee(window.CaskCommon.ee);\n+    this.pageLevelError = null;\n+    const {globalEvents} = window.CaskCommon;\n+\n+    const handlePageLevelError = (error) => {\n+      // This function parses receiveing error messages and converts it to a\n+      // format that page level error supports\n+      let message = null;", "originalCommit": "9fb0e9cde0a85121af865a1ed196d71af7edf79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxOTk3NA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r371419974", "bodyText": "Fixed.", "author": "itsanudeep", "createdAt": "2020-01-27T18:55:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4OTIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDY2MQ==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r368190661", "bodyText": "Is this even a function in namespace api?", "author": "ajainarayanan", "createdAt": "2020-01-18T00:46:39Z", "path": "cdap-ui/app/cdap/main.js", "diffHunk": "@@ -119,6 +131,52 @@ class CDAP extends Component {\n     this.fetchSessionTokenAndUpdateState().then(this.setUIState);\n   };\n \n+  handlePageLevelError = (error) => {\n+    // This function parses receiveing error messages and converts it to a\n+    // format that page level error supports\n+    let message = null;\n+    let errorCode = null;\n+    if (error.data) {\n+      message = error.data;\n+    } else if (typeof error.response === 'string') {\n+      message = error.response;\n+    }\n+\n+    if (error.statusCode) {\n+      errorCode = error.statusCode;\n+    } else {\n+      // If we don't know about the error type, showing a 500 level error\n+      errorCode = 500;\n+    }\n+    return { errorCode, message };\n+  };\n+\n+  retrieveNamespace = () => {\n+    this.setState({ retrievingNs: true });\n+    this.namespaceSub = MyNamespaceApi.pollListTrue().subscribe(", "originalCommit": "9fb0e9cde0a85121af865a1ed196d71af7edf79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDcwNA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r368190704", "bodyText": "Also why do we need to poll for the list of namespaces?", "author": "ajainarayanan", "createdAt": "2020-01-18T00:46:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDY2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQyMTM1MA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r371421350", "bodyText": "My bad, I was testing something and added another function with that name. I missed cleaning it up. Fixed.", "author": "itsanudeep", "createdAt": "2020-01-27T18:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDY2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDk0MQ==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r368190941", "bodyText": "Have simple variable name. retrieving sounds like its still doing it. isNamespaceFetchInFlight may be?", "author": "ajainarayanan", "createdAt": "2020-01-18T00:48:43Z", "path": "cdap-ui/app/cdap/main.js", "diffHunk": "@@ -96,6 +100,8 @@ class CDAP extends Component {\n       version: '',\n       authorizationFailed: false,\n       loading: true,\n+      pageLevelError: false,\n+      retrievingNs: false,", "originalCommit": "9fb0e9cde0a85121af865a1ed196d71af7edf79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQyMjQyOA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r371422428", "bodyText": "I feel this is similar to other variables we use like loading for example and retrievingNs sounds simpler than isNamespaceFetchInFlight, no? \ud83d\ude05", "author": "itsanudeep", "createdAt": "2020-01-27T19:00:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDk0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MzQ2MA==", "url": "https://github.com/cdapio/cdap/pull/11808#discussion_r371543460", "bodyText": "IMHO isNamespaceFetchInFlight says exactly what is the variable tracking. If you feel retrievingNs makes sense we can have it. Don't want to stall the PR over a variable name.", "author": "ajainarayanan", "createdAt": "2020-01-27T23:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDk0MQ=="}], "type": "inlineReview"}, {"oid": "6928155113999595ce540aaf1ee9fddf59fc0224", "url": "https://github.com/cdapio/cdap/commit/6928155113999595ce540aaf1ee9fddf59fc0224", "message": "handling unknown routes", "committedDate": "2020-01-27T18:48:43Z", "type": "forcePushed"}, {"oid": "5c3797e15b2bfaefe17d98ebcf7b00bde7e19a40", "url": "https://github.com/cdapio/cdap/commit/5c3797e15b2bfaefe17d98ebcf7b00bde7e19a40", "message": "adding license to new file", "committedDate": "2020-01-27T19:18:55Z", "type": "forcePushed"}, {"oid": "7d1ee47b7911bb8daef3063d595255a477dd9ead", "url": "https://github.com/cdapio/cdap/commit/7d1ee47b7911bb8daef3063d595255a477dd9ead", "message": "removing link from 404 comp", "committedDate": "2020-01-29T22:04:44Z", "type": "forcePushed"}, {"oid": "13a522b36d4469a91ee04c6e3fb216b62fa0eeb0", "url": "https://github.com/cdapio/cdap/commit/13a522b36d4469a91ee04c6e3fb216b62fa0eeb0", "message": "refactoring variable name;", "committedDate": "2020-01-29T22:18:02Z", "type": "forcePushed"}, {"oid": "21b8b503b067cf2ad13b8d095a519cdb8e4f17af", "url": "https://github.com/cdapio/cdap/commit/21b8b503b067cf2ad13b8d095a519cdb8e4f17af", "message": "reverting a commit", "committedDate": "2020-01-29T22:29:12Z", "type": "forcePushed"}, {"oid": "1ef000db0423d5d4d1c5bbb5c03376ec7045b6ed", "url": "https://github.com/cdapio/cdap/commit/1ef000db0423d5d4d1c5bbb5c03376ec7045b6ed", "message": "removing link from 404 comp", "committedDate": "2020-01-29T22:38:37Z", "type": "forcePushed"}, {"oid": "b1cfaacb998df25c0499bc7428c242bd7cc3bd9d", "url": "https://github.com/cdapio/cdap/commit/b1cfaacb998df25c0499bc7428c242bd7cc3bd9d", "message": "removing link from 404 comp", "committedDate": "2020-02-05T18:24:37Z", "type": "forcePushed"}, {"oid": "d665e066c765996d97e3f8c97fd2ef8e8e4a091f", "url": "https://github.com/cdapio/cdap/commit/d665e066c765996d97e3f8c97fd2ef8e8e4a091f", "message": "fixing namespace in route, hydrator no artifacts message, merge conflicts", "committedDate": "2020-02-07T01:20:17Z", "type": "forcePushed"}, {"oid": "85bcce2c9391353f62c36dc74849b05a1c751e35", "url": "https://github.com/cdapio/cdap/commit/85bcce2c9391353f62c36dc74849b05a1c751e35", "message": "fixing namespace in route, hydrator no artifacts message, merge conflicts", "committedDate": "2020-02-10T22:00:03Z", "type": "forcePushed"}, {"oid": "5f25f40e9f6fae024b5c63c3e5829d71040ae27d", "url": "https://github.com/cdapio/cdap/commit/5f25f40e9f6fae024b5c63c3e5829d71040ae27d", "message": "page level handling for no namespace", "committedDate": "2020-02-11T17:47:27Z", "type": "commit"}, {"oid": "5f25f40e9f6fae024b5c63c3e5829d71040ae27d", "url": "https://github.com/cdapio/cdap/commit/5f25f40e9f6fae024b5c63c3e5829d71040ae27d", "message": "page level handling for no namespace", "committedDate": "2020-02-11T17:47:27Z", "type": "forcePushed"}]}