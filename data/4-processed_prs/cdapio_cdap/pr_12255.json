{"pr_number": 12255, "pr_title": "(CDAP-16669) New Dataproc provisioner for existing cluster", "pr_createdAt": "2020-06-04T05:54:03Z", "pr_url": "https://github.com/cdapio/cdap/pull/12255", "timeline": [{"oid": "d08a6ddc40c4711e14a239d0e9cc3cca33f82d1f", "url": "https://github.com/cdapio/cdap/commit/d08a6ddc40c4711e14a239d0e9cc3cca33f82d1f", "message": "(CDAP-16669) Refactor Dataproc Provisioner\n\n- Cleanup private instance logic. Delay private instance network check to create cluster call instead of from the create() method\n- Create abstract base Dataproc provisioner for different types of Dataproc based provisioner", "committedDate": "2020-06-04T05:35:35Z", "type": "commit"}, {"oid": "dc050313e3c1ae54fea42ea1fd6df603bcfd430b", "url": "https://github.com/cdapio/cdap/commit/dc050313e3c1ae54fea42ea1fd6df603bcfd430b", "message": "(CDAP-16669) Refactor Dataproc Provisioner\n\n- Cleanup private instance logic. Delay private instance network check to create cluster call instead of from the create() method\n- Create abstract base Dataproc provisioner for different types of Dataproc based provisioner", "committedDate": "2020-06-04T09:28:07Z", "type": "commit"}, {"oid": "599aaa8887ecc692163d6bd0ccecc7276668390d", "url": "https://github.com/cdapio/cdap/commit/599aaa8887ecc692163d6bd0ccecc7276668390d", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster", "committedDate": "2020-06-04T09:28:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNjA4OA==", "url": "https://github.com/cdapio/cdap/pull/12255#discussion_r435416088", "bodyText": "nit: can use CLUSTER_NAME instead", "author": "CuriousVini", "createdAt": "2020-06-04T17:10:13Z", "path": "cdap-runtime-ext-dataproc/src/main/java/io/cdap/cdap/runtime/spi/provisioner/dataproc/ExistingDataprocProvisioner.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package io.cdap.cdap.runtime.spi.provisioner.dataproc;\n+\n+import com.google.common.base.Strings;\n+import io.cdap.cdap.runtime.spi.RuntimeMonitorType;\n+import io.cdap.cdap.runtime.spi.provisioner.Cluster;\n+import io.cdap.cdap.runtime.spi.provisioner.ClusterStatus;\n+import io.cdap.cdap.runtime.spi.provisioner.PollingStrategies;\n+import io.cdap.cdap.runtime.spi.provisioner.PollingStrategy;\n+import io.cdap.cdap.runtime.spi.provisioner.ProvisionerContext;\n+import io.cdap.cdap.runtime.spi.provisioner.ProvisionerSpecification;\n+import io.cdap.cdap.runtime.spi.ssh.SSHKeyPair;\n+import io.cdap.cdap.runtime.spi.ssh.SSHPublicKey;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Provisioner for connecting an existing Dataproc cluster.\n+ */\n+public class ExistingDataprocProvisioner extends AbstractDataprocProvisioner {\n+\n+  private static final ProvisionerSpecification SPEC = new ProvisionerSpecification(\n+    \"gcp-existing-dataproc\", \"Existing Dataproc\",\n+    \"Connect and Execute jobs on existing Dataproc cluster.\");\n+  // Keys for looking up system properties\n+\n+  private static final String CLUSTER_NAME = \"clusterName\";\n+  private static final String SSH_USER = \"sshUser\";\n+  private static final String SSH_KEY = \"sshKey\";\n+\n+  public ExistingDataprocProvisioner() {\n+    super(SPEC);\n+  }\n+\n+  @Override\n+  public void validateProperties(Map<String, String> properties) {\n+    // Creates the DataprocConf for validation\n+    DataprocConf.create(properties);\n+\n+    String clusterName = properties.get(\"clusterName\");\n+    if (Strings.isNullOrEmpty(clusterName)) {\n+      throw new IllegalArgumentException(\"Dataproc cluster name is missing\");\n+    }\n+  }\n+\n+  @Override\n+  protected String getClusterName(ProvisionerContext context) {\n+    return context.getProperties().get(\"clusterName\");", "originalCommit": "599aaa8887ecc692163d6bd0ccecc7276668390d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyODgzMQ==", "url": "https://github.com/cdapio/cdap/pull/12255#discussion_r435428831", "bodyText": "fixed", "author": "chtyim", "createdAt": "2020-06-04T17:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNjA4OA=="}], "type": "inlineReview"}, {"oid": "f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "url": "https://github.com/cdapio/cdap/commit/f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster", "committedDate": "2020-06-04T17:31:22Z", "type": "commit"}, {"oid": "f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "url": "https://github.com/cdapio/cdap/commit/f655c17dfd40eeb2d1f5663f0ecdcf05915e7d21", "message": "(CDAP-16669) Added a new Dataproc provisioner for existing cluster", "committedDate": "2020-06-04T17:31:22Z", "type": "forcePushed"}]}