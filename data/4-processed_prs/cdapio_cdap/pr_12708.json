{"pr_number": 12708, "pr_title": "CDAP-17098 Add widget for Window Aggregation configuration", "pr_createdAt": "2020-08-21T21:43:31Z", "pr_url": "https://github.com/cdapio/cdap/pull/12708", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMzQ3MA==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r475713470", "bodyText": "This should probably get added to the widget attributes as well.  (Same goes for other widgets).", "author": "yukiej", "createdAt": "2020-08-24T15:47:59Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FormInputs/TextBox/index.tsx", "diffHunk": "@@ -23,6 +24,7 @@ import { objectQuery } from 'services/helpers';\n interface ITextBoxWidgetProps {\n   placeholder?: string;\n   default?: string;\n+  enableUnderline?: boolean;", "originalCommit": "c8979e089763c10343f0b382fba1224f1fc0cd63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU1MjQ2OA==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r476552468", "bodyText": "I'd prefer to address that for other widgets in another PR. In particular, I'd prefer to have this be disableUnderline as the material-ui components have it, but the default is already set for our widgets. Maybe it can be addressed during the UI framework work.", "author": "njbriggs", "createdAt": "2020-08-25T15:48:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0MDg1MQ==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477440851", "bodyText": "Got it. In that case, maybe we can go ahead and create a JIRA for that (or document it elsewhere) and add a TO DO comment?", "author": "yukiej", "createdAt": "2020-08-26T16:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2ODM0OA==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477468348", "bodyText": "Added https://issues.cask.co/browse/CDAP-17244", "author": "njbriggs", "createdAt": "2020-08-26T17:28:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcxMzQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NTEwMg==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477475102", "bodyText": "Is there a comma missing after field?", "author": "yukiej", "createdAt": "2020-08-26T17:39:54Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/parser.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+export function parse(value) {\n+  const colonIndex = value.indexOf(':');\n+  // const [alias, fn] = value.split(':');\n+  const alias = value.substring(0, colonIndex);\n+  const fn = value.substring(colonIndex + 1);\n+\n+  const defaultResponse = {\n+    alias,\n+    func: '',\n+    field: '',\n+    ignoreNulls: true,\n+    arguments: '',\n+  };\n+\n+  if (!fn) {\n+    return defaultResponse;\n+  }\n+\n+  const openBracketIndex = fn.indexOf('(');\n+  const closeBracketIndex = fn.indexOf(')');\n+\n+  if (openBracketIndex === -1 || closeBracketIndex === -1) {\n+    return defaultResponse;\n+  }\n+\n+  const params = fn.substring(openBracketIndex + 1, closeBracketIndex).split(',');\n+  const field = params[0];\n+  const ignoreNulls = params[params.length - 1] !== 'false';\n+\n+  let args = '';\n+  if (params.length > 2) {\n+    args = decodeURIComponent(params.slice(1, params.length - 1).join(','));\n+  }\n+\n+  return {\n+    alias,\n+    func: fn.substring(0, openBracketIndex),\n+    field,\n+    ignoreNulls,\n+    arguments: args,\n+  };\n+}\n+\n+export function serialize(fields) {\n+  const { field, func, alias, arguments: args, ignoreNulls } = fields;\n+\n+  if (field.length === 0 || func.length === 0 || alias.length === 0) {\n+    return '';\n+  }\n+\n+  const trimmedArgs = args && args.trim();\n+  const argumentString =\n+    trimmedArgs && trimmedArgs.length > 0 ? `,${encodeURIComponent(trimmedArgs)}` : '';\n+\n+  const updatedValue = `${alias}:${func}(${field}${argumentString},${!!ignoreNulls})`;", "originalCommit": "c8979e089763c10343f0b382fba1224f1fc0cd63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2MDQ1NA==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477560454", "bodyText": "That's handled in argumentString (L68-69)", "author": "njbriggs", "createdAt": "2020-08-26T20:10:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NTEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NjYyNQ==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477476625", "bodyText": "Is it possible for an argument to include parentheses?", "author": "yukiej", "createdAt": "2020-08-26T17:42:36Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/__tests__/parser.tests.ts", "diffHunk": "@@ -0,0 +1,213 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import { parse, serialize } from 'components/AbstractWidget/FunctionDropdownArgumentsWidget/parser';\n+\n+describe('FunctionDropdownArgumentsRow', () => {\n+  describe('parser', () => {\n+    describe('parse', () => {\n+      it('should parse a string with no arguments', () => {\n+        expect(parse('myAlias:myFunc(field1,true)')).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: true,\n+          arguments: '',\n+        });\n+      });\n+\n+      it('should parse a string with ignoreNulls false', () => {\n+        expect(parse('myAlias:myFunc(field1,false)')).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: false,\n+          arguments: '',\n+        });\n+      });\n+\n+      it('should parse a string with one argument', () => {\n+        expect(parse(`myAlias:myFunc(field1,${encodeURIComponent('a')},true)`)).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: true,\n+          arguments: 'a',\n+        });\n+      });\n+\n+      it('should parse a string with multiple arguments', () => {\n+        expect(parse(`myAlias:myFunc(field1,${encodeURIComponent('a,b,c')},true)`)).toEqual({\n+          alias: 'myAlias',\n+          func: 'myFunc',\n+          field: 'field1',\n+          ignoreNulls: true,\n+          arguments: 'a,b,c',\n+        });\n+      });\n+\n+      it('should parse an argument with a colon', () => {", "originalCommit": "291e2e340babeda4347f498a01acb067ad994e97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2NDUzMQ==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r477564531", "bodyText": "Let me confirm with Bhooshan. For now, I'm assuming \"no\", since encodeURLComponent doesn't encode them.", "author": "njbriggs", "createdAt": "2020-08-26T20:18:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NjYyNQ=="}], "type": "inlineReview"}, {"oid": "ec2c1518abd19928f02265333867283f014a6503", "url": "https://github.com/cdapio/cdap/commit/ec2c1518abd19928f02265333867283f014a6503", "message": "Add comment requested in #12708", "committedDate": "2020-11-04T22:55:52Z", "type": "forcePushed"}, {"oid": "2edf9a7823e849579917611defe3583d9f6aad0c", "url": "https://github.com/cdapio/cdap/commit/2edf9a7823e849579917611defe3583d9f6aad0c", "message": "Add comment requested in #12708", "committedDate": "2020-11-13T20:47:57Z", "type": "forcePushed"}, {"oid": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "url": "https://github.com/cdapio/cdap/commit/8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "message": "Add comment requested in #12708", "committedDate": "2020-11-16T23:25:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0ODc3Ng==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529848776", "bodyText": "nit: I believe the theme object gets passed to withStyles? Like here", "author": "ajainarayanan", "createdAt": "2020-11-24T20:10:29Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FormInputs/Select/index.tsx", "diffHunk": "@@ -49,6 +49,18 @@ const CustomizedInput = withStyles(() => {\n   };\n })(InputBase);\n \n+const CustomizedInput = withStyles(() => {\n+  return {\n+    input: {\n+      padding: '7px 18px 7px 12px',\n+      '&:focus': {\n+        backgroundColor: 'transparent',\n+        outline: `1px solid ${blue[100]}`,", "originalCommit": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzNzg0OQ==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529937849", "bodyText": "Correct, fixed.", "author": "njbriggs", "createdAt": "2020-11-24T22:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0ODc3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0OTA3Mg==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529849072", "bodyText": "nit: Can we have a JIRA for this TODO with a fix version? Otherwise we will seldom revisit this issue.", "author": "ajainarayanan", "createdAt": "2020-11-24T20:11:06Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FormInputs/TextBox/index.tsx", "diffHunk": "@@ -23,6 +24,7 @@ import { objectQuery } from 'services/helpers';\n interface ITextBoxWidgetProps {\n   placeholder?: string;\n   default?: string;\n+  enableUnderline?: boolean; // TODO Add to all widgets", "originalCommit": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3MTEyNw==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529871127", "bodyText": "Yup, it's here: https://cdap.atlassian.net/browse/CDAP-17244", "author": "njbriggs", "createdAt": "2020-11-24T20:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0OTA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0OTg2OQ==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529849869", "bodyText": "Can we standardize this to id, value. Right now this is scattered and there is no standardization (Reference JIRA https://cdap.atlassian.net/browse/CDAP-17108)", "author": "ajainarayanan", "createdAt": "2020-11-24T20:12:41Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/FunctionDropdownArgumentsRow.tsx", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import TextBox from 'components/AbstractWidget/FormInputs/TextBox';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import withStyles, { StyleRules } from '@material-ui/core/styles/withStyles';\n+import Select from 'components/AbstractWidget/FormInputs/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import AbstractRow, {\n+  IAbstractRowProps,\n+  AbstractRowStyles,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget/AbstractRow';\n+import { parse, serialize } from 'components/AbstractWidget/FunctionDropdownArgumentsWidget/parser';\n+import InputFieldDropdown from 'components/AbstractWidget/InputFieldDropdown';\n+import If from 'components/If';\n+import { IWidgetExtraConfig } from 'components/AbstractWidget';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    ...AbstractRowStyles(theme),\n+    inputContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 1fr 1fr 1fr 30px 1fr',\n+      gridGap: '10px',\n+    },\n+    disabled: {\n+      color: `${theme.palette.grey['50']}`,\n+    },\n+    // Align with surrounding controls\n+    separator: {\n+      paddingTop: '10px',\n+      textAlign: 'center',\n+    },\n+  };\n+};\n+\n+interface IComplexDropdown {\n+  value: string | number;", "originalCommit": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzNjY0NQ==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529936645", "bodyText": "Yes, although MultiSelect uses id and label. I think id and value could be ambiguous, so I'll use label.", "author": "njbriggs", "createdAt": "2020-11-24T22:23:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0OTg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg1MTQzMA==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529851430", "bodyText": "nit: We right now manually type in the keys of IKeyValueState in different places (say field or ignoreNull). Can we have the keys as enum and use that in both IkeyValueState and in handleWidgetChange function invocation?", "author": "ajainarayanan", "createdAt": "2020-11-24T20:15:47Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/FunctionDropdownArgumentsWidget/FunctionDropdownArgumentsRow.tsx", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import TextBox from 'components/AbstractWidget/FormInputs/TextBox';\n+import Checkbox from '@material-ui/core/Checkbox';\n+import FormControlLabel from '@material-ui/core/FormControlLabel';\n+import withStyles, { StyleRules } from '@material-ui/core/styles/withStyles';\n+import Select from 'components/AbstractWidget/FormInputs/Select';\n+import MenuItem from '@material-ui/core/MenuItem';\n+import AbstractRow, {\n+  IAbstractRowProps,\n+  AbstractRowStyles,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget/AbstractRow';\n+import { parse, serialize } from 'components/AbstractWidget/FunctionDropdownArgumentsWidget/parser';\n+import InputFieldDropdown from 'components/AbstractWidget/InputFieldDropdown';\n+import If from 'components/If';\n+import { IWidgetExtraConfig } from 'components/AbstractWidget';\n+\n+const styles = (theme): StyleRules => {\n+  return {\n+    ...AbstractRowStyles(theme),\n+    inputContainer: {\n+      display: 'grid',\n+      gridTemplateColumns: '1fr 1fr 1fr 1fr 30px 1fr',\n+      gridGap: '10px',\n+    },\n+    disabled: {\n+      color: `${theme.palette.grey['50']}`,\n+    },\n+    // Align with surrounding controls\n+    separator: {\n+      paddingTop: '10px',\n+      textAlign: 'center',\n+    },\n+  };\n+};\n+\n+interface IComplexDropdown {\n+  value: string | number;\n+  label: string;\n+}\n+\n+export type IDropdownOption = string | number | IComplexDropdown;\n+\n+interface IFunctionDropdownArgumentsRowProps extends IAbstractRowProps<typeof styles> {\n+  placeholders: Record<string, string>;\n+  dropdownOptions: IDropdownOption[];\n+  extraConfig?: IWidgetExtraConfig;\n+}\n+\n+interface IKeyValueState {\n+  field: string;\n+  func: string;\n+  alias: string;\n+  arguments: string;\n+  ignoreNulls: boolean;\n+}\n+\n+type StateKeys = keyof IKeyValueState;", "originalCommit": "8650cbbb2ce2377f3b16b26d3d0840542a1167c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxMjE2Mg==", "url": "https://github.com/cdapio/cdap/pull/12708#discussion_r529912162", "bodyText": "Based on a quick look just now - I don't think so. keyof resolves to a string literal union, which is not referenceable at run time.", "author": "njbriggs", "createdAt": "2020-11-24T22:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg1MTQzMA=="}], "type": "inlineReview"}, {"oid": "a4e73a6fa7d873174693dbdfc6124bfad044d823", "url": "https://github.com/cdapio/cdap/commit/a4e73a6fa7d873174693dbdfc6124bfad044d823", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook.", "committedDate": "2020-11-24T22:37:44Z", "type": "forcePushed"}, {"oid": "aa9215aeabacbe4ec0651395f1a4f7b143c072b8", "url": "https://github.com/cdapio/cdap/commit/aa9215aeabacbe4ec0651395f1a4f7b143c072b8", "message": "CDAP-17098 Begin adding new widget for window aggregation configuration", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "d8136f29946a1ce6cc8ec848e8661be3cd7e3593", "url": "https://github.com/cdapio/cdap/commit/d8136f29946a1ce6cc8ec848e8661be3cd7e3593", "message": "Clean up new widget in React. Remove Angular version", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "0e16a239f990e2b30f40794774d10a3f9ceae5e0", "url": "https://github.com/cdapio/cdap/commit/0e16a239f990e2b30f40794774d10a3f9ceae5e0", "message": "Rename FunctionDropdownOptionsWidget to FunctionDropdownArgumentsWidget. Begin separate parser module for unit test", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "629f8d36bbb4610e005a44e26701524176cf1050", "url": "https://github.com/cdapio/cdap/commit/629f8d36bbb4610e005a44e26701524176cf1050", "message": "Add unit tests for arguments widget parsing and serialization CDAP-17098", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "6746686b9390c8ddcce50a2ce0b0f20bd2c44c61", "url": "https://github.com/cdapio/cdap/commit/6746686b9390c8ddcce50a2ce0b0f20bd2c44c61", "message": "Fix onChange handlers for FunctionDropdownArgumentsRow.\nSwitch fields input to InputFieldDropdown.\nAlign \"as\" text with alias input.", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "e94351888919463ad3ddae1084c5240a63a073d7", "url": "https://github.com/cdapio/cdap/commit/e94351888919463ad3ddae1084c5240a63a073d7", "message": "Convert FunctionDropdownArgumentsRows to use FormInputs components only", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "e0839810d60b1a23bdd5c847cfae0919c77b0520", "url": "https://github.com/cdapio/cdap/commit/e0839810d60b1a23bdd5c847cfae0919c77b0520", "message": "Remove unused code from FunctionDropdownArgumentsRow", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "fb3de2fdd9a79d1936971be530090c4752fd8a29", "url": "https://github.com/cdapio/cdap/commit/fb3de2fdd9a79d1936971be530090c4752fd8a29", "message": "Update FunctionDropdownArguments widget to encode optional arguments", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "4ffb06d9f46240e73ff063eac00a9c036f74a41e", "url": "https://github.com/cdapio/cdap/commit/4ffb06d9f46240e73ff063eac00a9c036f74a41e", "message": "Add optional underline to Select and TextBox form inputs", "committedDate": "2020-12-01T00:20:20Z", "type": "commit"}, {"oid": "42ca7acff750bff787b01285979eb329831ef147", "url": "https://github.com/cdapio/cdap/commit/42ca7acff750bff787b01285979eb329831ef147", "message": "Style Select FormInput component to look like other instances when underline is enabled", "committedDate": "2020-12-01T00:20:21Z", "type": "commit"}, {"oid": "15ab3daf717cceabde8efcb75a0ef99eb6c24958", "url": "https://github.com/cdapio/cdap/commit/15ab3daf717cceabde8efcb75a0ef99eb6c24958", "message": "Remove unneeded directive change for FunctionDropdownArgumentsWidget", "committedDate": "2020-12-01T00:20:21Z", "type": "commit"}, {"oid": "6f9f8ca859d03b843f3b893e2c3d254a67fa290b", "url": "https://github.com/cdapio/cdap/commit/6f9f8ca859d03b843f3b893e2c3d254a67fa290b", "message": "Add comment requested in #12708", "committedDate": "2020-12-01T00:20:21Z", "type": "commit"}, {"oid": "3672c842799469a400d2f0feba1760b826f41797", "url": "https://github.com/cdapio/cdap/commit/3672c842799469a400d2f0feba1760b826f41797", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook.", "committedDate": "2020-12-01T00:20:21Z", "type": "commit"}, {"oid": "3672c842799469a400d2f0feba1760b826f41797", "url": "https://github.com/cdapio/cdap/commit/3672c842799469a400d2f0feba1760b826f41797", "message": "Address feedback from #12708\n* Set blue from theme correctly\n* Update dropdown options for FunctionDropdownArgumentsWidget\nAlso, add FunctionDropdownArgumentsWidget to Storybook.", "committedDate": "2020-12-01T00:20:21Z", "type": "forcePushed"}]}