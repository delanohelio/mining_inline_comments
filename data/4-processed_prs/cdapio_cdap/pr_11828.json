{"pr_number": 11828, "pr_title": "[CDAP-16113] Webpack for server", "pr_createdAt": "2020-01-22T23:33:53Z", "pr_url": "https://github.com/cdapio/cdap/pull/11828", "timeline": [{"oid": "b43c3e0487a9375cf93b402a4e312293cca3c53d", "url": "https://github.com/cdapio/cdap/commit/b43c3e0487a9375cf93b402a4e312293cca3c53d", "message": "[CDAP-16113] Webpack for server", "committedDate": "2020-01-27T04:09:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MDQ0OA==", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372150448", "bodyText": "This is kind of awkward here. Can we not use require.resolve? Webpack documentation seems to suggest require.resolve to be a synchronous resolution for module check.", "author": "ajainarayanan", "createdAt": "2020-01-29T01:38:09Z", "path": "cdap-ui/server/config/parser.js", "diffHunk": "@@ -71,7 +66,7 @@ function extractConfig(param) {\n       path = getConfigPath(param);\n       if (path && path.length) {\n         path = path.replace(/\\\"/g, '');\n-        cache[param] = require(path);\n+        cache[param] = __non_webpack_require__(path);", "originalCommit": "b43c3e0487a9375cf93b402a4e312293cca3c53d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1MDAyMg==", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372650022", "bodyText": "I have to try it out, but from documentation, it doesn't seem to be possible:\nSynchronously retrieve a module's ID. The compiler will ensure that the dependency is available in the output bundle.\nFrom what I understand, this means that the path will actually gets resolved during build time instead of during runtime.", "author": "elfenheart", "createdAt": "2020-01-29T21:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MDQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MTMwOA==", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372151308", "bodyText": "Is there a specific reason why we renamed only the token and token_test to mjs modules? The other serverside files seem to be still having the .js extension. Is it solely for the token_test to be run locally?", "author": "ajainarayanan", "createdAt": "2020-01-29T01:41:10Z", "path": "cdap-ui/server/token.mjs", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright \u00a9 2019 Cask Data, Inc.\n+ * Copyright \u00a9 2019-2020 Cask Data, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not", "originalCommit": "b43c3e0487a9375cf93b402a4e312293cca3c53d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0ODQ3NQ==", "url": "https://github.com/cdapio/cdap/pull/11828#discussion_r372648475", "bodyText": "yes, it's solely because we need to run token_test, as token_test is not built. We can rename everything to .mjs, but at the moment there's no specific need to do that", "author": "elfenheart", "createdAt": "2020-01-29T21:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MTMwOA=="}], "type": "inlineReview"}, {"oid": "471c945bdc94006134b68d3256c9d89a2e81c61b", "url": "https://github.com/cdapio/cdap/commit/471c945bdc94006134b68d3256c9d89a2e81c61b", "message": "[CDAP-16113] Webpack for server", "committedDate": "2020-02-05T18:15:00Z", "type": "forcePushed"}, {"oid": "36c3c94aad1c8ba5f111a393c8c36248cabd6ded", "url": "https://github.com/cdapio/cdap/commit/36c3c94aad1c8ba5f111a393c8c36248cabd6ded", "message": "[CDAP-16113] Webpack for server", "committedDate": "2020-02-05T21:26:09Z", "type": "forcePushed"}, {"oid": "ff5506b90b8380c3534352ee978b8afbe63a4011", "url": "https://github.com/cdapio/cdap/commit/ff5506b90b8380c3534352ee978b8afbe63a4011", "message": "[CDAP-16113] Webpack for server", "committedDate": "2020-02-06T05:44:25Z", "type": "commit"}, {"oid": "ff5506b90b8380c3534352ee978b8afbe63a4011", "url": "https://github.com/cdapio/cdap/commit/ff5506b90b8380c3534352ee978b8afbe63a4011", "message": "[CDAP-16113] Webpack for server", "committedDate": "2020-02-06T05:44:25Z", "type": "forcePushed"}]}