{"pr_number": 12048, "pr_title": "[CDAP-16434][CDAP-16551] Replicator Manual Table Selection and Parallelism Config", "pr_createdAt": "2020-04-10T03:50:05Z", "pr_url": "https://github.com/cdapio/cdap/pull/12048", "timeline": [{"oid": "3b33a30e0788b3414b3fdef304381f02a09578c3", "url": "https://github.com/cdapio/cdap/commit/3b33a30e0788b3414b3fdef304381f02a09578c3", "message": "[CDAP-16434] replicator add ability to select tables and columns manually", "committedDate": "2020-04-10T02:47:25Z", "type": "commit"}, {"oid": "ad9ef61daf7927291ea0dd1b74518db19e8384d5", "url": "https://github.com/cdapio/cdap/commit/ad9ef61daf7927291ea0dd1b74518db19e8384d5", "message": "[CDAP-16551] Replicator add Parallelism config", "committedDate": "2020-04-10T03:51:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxNzkzMA==", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r406917930", "bodyText": "2020?", "author": "yukiej", "createdAt": "2020-04-10T19:58:01Z", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/ColumnRow.tsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright \u00a9 2019 Cask Data, Inc.", "originalCommit": "3b33a30e0788b3414b3fdef304381f02a09578c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzODc0OQ==", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r406938749", "bodyText": "this seems like it is for offsetBasePath?", "author": "yukiej", "createdAt": "2020-04-10T20:50:37Z", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Advanced/index.tsx", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import StepButtons from 'components/Replicator/Create/Content/StepButtons';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      padding: '30px 40px',\n+    },\n+    numInstances: {\n+      width: '200px',\n+    },\n+  };\n+};\n+\n+const OffsetBasePath = ({ onChange, value }) => {\n+  const widget = {\n+    label: 'Offset base path',\n+    name: 'offset',\n+    'widget-type': 'textbox',\n+    'widget-attributes': {\n+      min: 1,\n+    },\n+  };\n+\n+  const property = {\n+    required: false,\n+    name: 'offset',\n+  };\n+\n+  return (\n+    <WidgetWrapper\n+      widgetProperty={widget}\n+      pluginProperty={property}\n+      value={value}\n+      onChange={onChange}\n+    />\n+  );\n+};\n+\n+const NumInstances = ({ onChange, value }) => {\n+  const widget = {\n+    label: 'Number of instances',\n+    name: 'numInstance',\n+    'widget-type': 'number',\n+    'widget-attributes': {\n+      placeholder: 'Path for offset storage location',", "originalCommit": "ad9ef61daf7927291ea0dd1b74518db19e8384d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MjU2NQ==", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r406942565", "bodyText": "nit: It's a little confusing to me (and potentially prone to errors when ppl have typos) to have both OffsetBasePath and offsetBasePath - maybe this one and NumInstances could be named in a way to make it more clear that they are returning a widget/component?", "author": "yukiej", "createdAt": "2020-04-10T21:00:25Z", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/Advanced/index.tsx", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n+import { createContextConnect, ICreateContext } from 'components/Replicator/Create';\n+import StepButtons from 'components/Replicator/Create/Content/StepButtons';\n+import WidgetWrapper from 'components/ConfigurationGroup/WidgetWrapper';\n+import Heading, { HeadingTypes } from 'components/Heading';\n+\n+const styles = (): StyleRules => {\n+  return {\n+    root: {\n+      padding: '30px 40px',\n+    },\n+    numInstances: {\n+      width: '200px',\n+    },\n+  };\n+};\n+\n+const OffsetBasePath = ({ onChange, value }) => {", "originalCommit": "ad9ef61daf7927291ea0dd1b74518db19e8384d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01639c99b2788de4f355ee2238e4c0a1c3ab0c2a", "url": "https://github.com/cdapio/cdap/commit/01639c99b2788de4f355ee2238e4c0a1c3ab0c2a", "message": "[CDAP-16551] Replicator add Parallelism config", "committedDate": "2020-04-10T23:08:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzMTk5Nw==", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r407631997", "bodyText": "why do we use props.value.size here instead of length? (same question for tablemultirow)", "author": "yukiej", "createdAt": "2020-04-13T18:18:58Z", "path": "cdap-ui/app/cdap/components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/index.tsx", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright \u00a9 2020 Cask Data, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+import * as React from 'react';\n+import AbstractMultiRowWidget, {\n+  IMultiRowProps,\n+} from 'components/AbstractWidget/AbstractMultiRowWidget';\n+import ColumnRow from 'components/Replicator/Create/Content/SelectTables/ManualSelectTable/ColumnsMultiRow/ColumnRow';\n+\n+interface IColumnsMultiRowProps extends IMultiRowProps<{}> {\n+  value: any;\n+}\n+\n+class ColumnsMultiRow extends AbstractMultiRowWidget<IColumnsMultiRowProps> {\n+  public componentWillReceiveProps() {\n+    // overwrite\n+    // no-op\n+  }\n+\n+  public deconstructValues = (props) => {\n+    if (!props.value || props.value.size === 0) {", "originalCommit": "01639c99b2788de4f355ee2238e4c0a1c3ab0c2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0MTE4Mg==", "url": "https://github.com/cdapio/cdap/pull/12048#discussion_r407641182", "bodyText": "good catch. Left over from when I was using immutableJS here", "author": "elfenheart", "createdAt": "2020-04-13T18:35:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzMTk5Nw=="}], "type": "inlineReview"}, {"oid": "a57c8cb06b345e79e4723f2139edd9d0dacd9eb9", "url": "https://github.com/cdapio/cdap/commit/a57c8cb06b345e79e4723f2139edd9d0dacd9eb9", "message": "[CDAP-16551] Replicator add Parallelism config", "committedDate": "2020-04-13T18:35:12Z", "type": "commit"}, {"oid": "a57c8cb06b345e79e4723f2139edd9d0dacd9eb9", "url": "https://github.com/cdapio/cdap/commit/a57c8cb06b345e79e4723f2139edd9d0dacd9eb9", "message": "[CDAP-16551] Replicator add Parallelism config", "committedDate": "2020-04-13T18:35:12Z", "type": "forcePushed"}]}