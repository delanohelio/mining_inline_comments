{"pr_number": 12489, "pr_title": "(PLUGIN-303) Added new property to MutliStageSelector widget", "pr_createdAt": "2020-07-23T19:59:09Z", "pr_url": "https://github.com/cdapio/cdap/pull/12489", "timeline": [{"oid": "b351df20198c12eee20e21c341174964253d58f8", "url": "https://github.com/cdapio/cdap/commit/b351df20198c12eee20e21c341174964253d58f8", "message": "Added new property to MutliStageSelector widget", "committedDate": "2020-07-23T20:00:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjI1NA==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459732254", "bodyText": "Should this be optional?", "author": "yukiej", "createdAt": "2020-07-23T21:15:21Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -36,6 +37,7 @@ const styles = () => {\n \n interface IMultiStageSelectorWidgetProps {\n   delimiter: string;\n+  singleSelectOnly: boolean;", "originalCommit": "b351df20198c12eee20e21c341174964253d58f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzc3Mg==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459733772", "bodyText": "I think so, but I was following the convention for delimiter. I think thats technically an optional parameter (at least it is for the underlying MultiSelect) but we didnt mark it as optional here. Wasnt sure if that was important somehow. I can make it optional.", "author": "MEseifan", "createdAt": "2020-07-23T21:18:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjQ2Ng==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459732466", "bodyText": "I don't think we need the \"or\" logic here.", "author": "yukiej", "createdAt": "2020-07-23T21:15:49Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {", "originalCommit": "b351df20198c12eee20e21c341174964253d58f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzk0MQ==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459733941", "bodyText": "right...thanks!", "author": "MEseifan", "createdAt": "2020-07-23T21:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjQ2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMjc4NQ==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459732785", "bodyText": "nit: if singleSelectOnly value is not provided set it to false here like this,\nconst { delimiter, singleSelectOnly = false } = widgetProps;", "author": "ajainarayanan", "createdAt": "2020-07-23T21:16:32Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;", "originalCommit": "b351df20198c12eee20e21c341174964253d58f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzU1OA==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459733558", "bodyText": "Can we reuse the same getInputStages function here?", "author": "ajainarayanan", "createdAt": "2020-07-23T21:18:11Z", "path": "cdap-ui/app/cdap/components/AbstractWidget/MultiStageSelector/index.tsx", "diffHunk": "@@ -58,28 +60,44 @@ const MultiStageSelectorBase: React.FC<IMultiStageSelectorProps> = ({\n }) => {\n   const inputSchema = objectQuery(extraConfig, 'inputSchema');\n   const inputStages = getInputStages(inputSchema);\n-  const { delimiter } = widgetProps;\n-  const multiSelectWidgetProps = {\n-    delimiter,\n-    options: inputStages,\n-    showSelectionCount: false,\n-    emptyPlaceholder: 'Select input stage',\n-  };\n+  const { delimiter, singleSelectOnly } = widgetProps;\n+\n   if (!inputStages.length) {\n     return (\n       <div className={classes.emptyMessageContainer}>\n         <div className={classes.emptyMessage}>No input stages</div>\n       </div>\n     );\n   }\n-  return (\n-    <MultiSelect\n-      value={value}\n-      onChange={onChange}\n-      widgetProps={multiSelectWidgetProps}\n-      disabled={disabled}\n-    />\n-  );\n+\n+  if (singleSelectOnly || false) {\n+    const selectWidgetProps = {\n+      options: inputStages.map((stage) => stage.label),", "originalCommit": "b351df20198c12eee20e21c341174964253d58f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNTU3Ng==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459735576", "bodyText": "not quite...Multselect expects options to be {'id': '.', 'value': '.'} meanwhile Select expects  {'label': '.', 'value': '.'} so I would need to move this logic into that function anyway to change the format", "author": "MEseifan", "createdAt": "2020-07-23T21:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNzk0MQ==", "url": "https://github.com/cdapio/cdap/pull/12489#discussion_r459737941", "bodyText": "Haa! That's a bad API. Ok can you file a jira for this. It's ok to merge now but that's bad.", "author": "ajainarayanan", "createdAt": "2020-07-23T21:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMzU1OA=="}], "type": "inlineReview"}, {"oid": "e625ce39db150d4caf3cb28c04144c43aedb4d43", "url": "https://github.com/cdapio/cdap/commit/e625ce39db150d4caf3cb28c04144c43aedb4d43", "message": "Added new property to MutliStageSelector widget", "committedDate": "2020-07-23T21:38:40Z", "type": "commit"}, {"oid": "e625ce39db150d4caf3cb28c04144c43aedb4d43", "url": "https://github.com/cdapio/cdap/commit/e625ce39db150d4caf3cb28c04144c43aedb4d43", "message": "Added new property to MutliStageSelector widget", "committedDate": "2020-07-23T21:38:40Z", "type": "forcePushed"}]}