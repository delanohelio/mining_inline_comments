{"pr_number": 642, "pr_title": "Fix for Cuda 10.1 /Cuda 10.2 related torch package installation issue in Docker.", "pr_createdAt": "2020-08-24T11:34:10Z", "pr_url": "https://github.com/pytorch/serve/pull/642", "timeline": [{"oid": "2129f4c3429d25e916aceced788a3b30562c1570", "url": "https://github.com/pytorch/serve/commit/2129f4c3429d25e916aceced788a3b30562c1570", "message": "added cuda version specific package installation", "committedDate": "2020-08-24T11:27:33Z", "type": "commit"}, {"oid": "12bcdecc5da04d8fd443f241a281004856c381e2", "url": "https://github.com/pytorch/serve/commit/12bcdecc5da04d8fd443f241a281004856c381e2", "message": "updated readme", "committedDate": "2020-08-24T11:28:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODYzMw==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r475538633", "bodyText": "Looks to be duplicate?", "author": "dhaniram-kshirsagar", "createdAt": "2020-08-24T11:38:57Z", "path": "docker/Dockerfile", "diffHunk": "@@ -19,7 +19,7 @@\n ARG BASE_IMAGE=ubuntu:18.04\n \n FROM ${BASE_IMAGE} AS compile-image\n-\n+ARG BASE_IMAGE=ubuntu:18.04", "originalCommit": "12bcdecc5da04d8fd443f241a281004856c381e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MDIyNQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r475540225", "bodyText": "To refer the variable for installing cuda version specific packages, it needs to be reloaded after FROM statement.", "author": "harshbafna", "createdAt": "2020-08-24T11:42:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODYzMw=="}], "type": "inlineReview"}, {"oid": "d9e423b4500c202f52f90b289919b5beb1518552", "url": "https://github.com/pytorch/serve/commit/d9e423b4500c202f52f90b289919b5beb1518552", "message": "made cuda version check more generic to support multiple OS versions", "committedDate": "2020-08-24T13:49:20Z", "type": "commit"}, {"oid": "e36f76fb8a03981f4431874131e13efde14c3f12", "url": "https://github.com/pytorch/serve/commit/e36f76fb8a03981f4431874131e13efde14c3f12", "message": "fixed posix expression", "committedDate": "2020-08-24T16:21:00Z", "type": "commit"}, {"oid": "f4b6dc9f746ed392e6e7d9fc787fef4cfd97090d", "url": "https://github.com/pytorch/serve/commit/f4b6dc9f746ed392e6e7d9fc787fef4cfd97090d", "message": "Merge branch 'master' into issue_640", "committedDate": "2020-08-27T15:12:26Z", "type": "commit"}, {"oid": "972a6a05d78a011c6b8b06cc56c45dacb585f73c", "url": "https://github.com/pytorch/serve/commit/972a6a05d78a011c6b8b06cc56c45dacb585f73c", "message": "Merge branch 'master' into issue_640", "committedDate": "2020-09-08T17:40:23Z", "type": "commit"}, {"oid": "e1819bbd35130911ba9a599800c0714799dcffc5", "url": "https://github.com/pytorch/serve/commit/e1819bbd35130911ba9a599800c0714799dcffc5", "message": "Merge branch 'master' into issue_640", "committedDate": "2020-09-14T17:49:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r488117517", "bodyText": "@harshbafna Shouldn't this be in the else part based on the check?\nAlso please have the torchvision + cuda version a variable so that we don't have to keep changing the Dockerfile with each release", "author": "chauhang", "createdAt": "2020-09-14T17:53:31Z", "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\", "originalCommit": "e1819bbd35130911ba9a599800c0714799dcffc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4MDk5Ng==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r497680996", "bodyText": "@harshbafna ping", "author": "maaquib", "createdAt": "2020-09-30T17:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1NDU4NQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r506954585", "bodyText": "@harshbafna Any update on this?", "author": "chauhang", "createdAt": "2020-10-17T15:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3NjI3OQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r507476279", "bodyText": "@chauhang: This has been taken care of. @jeremiahschung has implemented these changes. Could you please review it once again?", "author": "harshbafna", "createdAt": "2020-10-19T05:32:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNzUxNw=="}], "type": "inlineReview"}, {"oid": "7c38aabc856ae2f96b158e98e2a98762a044dce4", "url": "https://github.com/pytorch/serve/commit/7c38aabc856ae2f96b158e98e2a98762a044dce4", "message": "Merge branch 'master' into issue_640", "committedDate": "2020-09-30T17:26:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503687330", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n          \n          \n            \n                pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n          \n          \n            \n                else \\\n          \n          \n            \n                pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n          \n          \n            \n                fi\n          \n          \n            \n            ARG CUDA_VERSION=\"\"\n          \n          \n            \n            \n          \n          \n            \n            RUN TORCH_VER=$(curl --silent --location https://pypi.org/pypi/torch/json | python -c \"import sys, json, pkg_resources; releases = json.load(sys.stdin)['releases']; print(sorted(releases, key=pkg_resources.parse_version)[-1])\") && \\\n          \n          \n            \n                TORCH_VISION_VER=$(curl --silent --location https://pypi.org/pypi/torchvision/json | python -c \"import sys, json, pkg_resources; releases = json.load(sys.stdin)['releases']; print(sorted(releases, key=pkg_resources.parse_version)[-1])\") && \\\n          \n          \n            \n                if echo \"$BASE_IMAGE\" | grep -q \"cuda:\"; then \\\n          \n          \n            \n                    # Install CUDA version specific binary when CUDA version is specified as a build arg\n          \n          \n            \n                    if [ \"$CUDA_VERSION\" ]; then \\\n          \n          \n            \n                        pip install --no-cache-dir torch==$TORCH_VER+$CUDA_VERSION torchvision==$TORCH_VISION_VER+$CUDA_VERSION -f https://download.pytorch.org/whl/torch_stable.html; \\\n          \n          \n            \n                    # Install the binary with the latest CUDA version support\n          \n          \n            \n                    else \\\n          \n          \n            \n                        pip install --no-cache-dir torch torchvision; \\\n          \n          \n            \n                    fi \\\n          \n          \n            \n                # Install the CPU binary\n          \n          \n            \n                else \\\n          \n          \n            \n                    pip install --no-cache-dir torch==$TORCH_VER+cpu torchvision==$TORCH_VISION_VER+cpu -f https://download.pytorch.org/whl/torch_stable.html; \\\n          \n          \n            \n                fi\n          \n          \n            \n            RUN pip install --no-cache-dir torchtext torchserve torch-model-archiver", "author": "jeremiahschung", "createdAt": "2020-10-13T06:06:06Z", "path": "docker/Dockerfile", "diffHunk": "@@ -41,13 +41,17 @@ RUN python3 -m venv /home/venv\n \n ENV PATH=\"/home/venv/bin:$PATH\"\n \n-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n \n-# This is only useful for cuda env \n+# This is only useful for cuda env\n RUN export USE_CUDA=1\n \n-RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n+RUN if [ \"$BASE_IMAGE\" != \"${BASE_IMAGE#*cuda:10.1}\" ]; then \\\n+    pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html; \\\n+    else \\\n+    pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver; \\\n+    fi", "originalCommit": "7c38aabc856ae2f96b158e98e2a98762a044dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTQ5NQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503689495", "bodyText": "Added suggestion that adds:\n\nChecks for the CUDA_VERSION build argument and if present, installs the newest version of torch/torchvision with the supplied cuda version in the format of \"cuda101\", \"cuda92\".\nPulls the CPU torch/torchvision binary when the BASE_IMAGE isn't explicitly passed in with the string \"cuda\". Before, the script was pulling the GPU-enabled binaries by default for CPU image builds. The resulting image is about 1GB smaller compared to the result of the previous build. (1.92GB -> 945MB)\nSupports legacy CUDA versions (e.g. cu92, etc.)\n\nFor the latest CUDA version that torch supports, users will have to specify a base image that supports it and NOT pass in the CUDA_VERSION argument. Made suggestion in the documentation too.", "author": "jeremiahschung", "createdAt": "2020-10-13T06:12:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NzA5NA==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503697094", "bodyText": "The goal here is to write the Dockerfile in a way that we don't have to modify it later.\nSince the commands \"pip install torch\" will always be updated to pull the latest GPU-enabled binary, there wasn't a way to fully automate this without a way to query the latest CUDA version that PT supports.\nI initially parsed the BASE_IMAGE string to deduce the CUDA version and tried using the -f flag to search on download.pytorch.org for all GPU based builds. This didn't work because the latest PT1.6 + CUDA 102 is named as \"torch-1.6.0\" instead of \"torch-1.6.0+cu102\" and pip failed to find the correct binary.\nSo while not ideal, users can get the latest CUDA + PT binaries by using the correct BASE_IMAGE and not supplying the CUDA_VERSION arg. For older versions, passing in the CUDA_VERSION arg will make the build find the correct binary.", "author": "jeremiahschung", "createdAt": "2020-10-13T06:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxNTg1OQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503715859", "bodyText": "Attaching build logs:\ncpu_log.txt\ncuda101_log.txt\ncuda102_log.txt", "author": "jeremiahschung", "createdAt": "2020-10-13T07:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ2NTM3Ng==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r504465376", "bodyText": "Thanks, @jeremiahschung. Merged all the recommendations :-)", "author": "harshbafna", "createdAt": "2020-10-14T07:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MjI5MQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503692291", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For creating GPU based image with Cuda 10.1 :\n          \n          \n            \n            For creating GPU based image with older CUDA versions (ex. CUDA 10.1):", "author": "jeremiahschung", "createdAt": "2020-10-13T06:19:45Z", "path": "docker/README.md", "diffHunk": "@@ -29,7 +29,14 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with Cuda 10.2 :\n+\n+```bash\n+DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n+```\n+\n+For creating GPU based image with Cuda 10.1 :", "originalCommit": "7c38aabc856ae2f96b158e98e2a98762a044dce4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MjQwMQ==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503692401", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n          \n          \n            \n            DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 --build-arg CUDA_VERSION=cu101 -t torchserve:latest .", "author": "jeremiahschung", "createdAt": "2020-10-13T06:20:05Z", "path": "docker/README.md", "diffHunk": "@@ -29,7 +29,14 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with Cuda 10.2 :\n+\n+```bash\n+DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n+```\n+\n+For creating GPU based image with Cuda 10.1 :\n+\n ```bash\n DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .", "originalCommit": "7c38aabc856ae2f96b158e98e2a98762a044dce4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MzM3Mw==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r503693373", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For creating GPU based image with Cuda 10.2 :\n          \n          \n            \n            For creating GPU based image with the latest CUDA version PyTorch supports (ex. CUDA 10.2 as of Oct 2020):", "author": "jeremiahschung", "createdAt": "2020-10-13T06:22:36Z", "path": "docker/README.md", "diffHunk": "@@ -29,7 +29,14 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with Cuda 10.2 :", "originalCommit": "7c38aabc856ae2f96b158e98e2a98762a044dce4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5c297b728c3f8ec73b61ee66c5820c49b621e1ce", "url": "https://github.com/pytorch/serve/commit/5c297b728c3f8ec73b61ee66c5820c49b621e1ce", "message": "Added support for multiple cuda versions.\n\nCo-authored-by: jeremiahschung <70922646+jeremiahschung@users.noreply.github.com>", "committedDate": "2020-10-14T07:38:13Z", "type": "commit"}, {"oid": "7849fbc8d2a53c59cb7d290437a76d65ee95bf25", "url": "https://github.com/pytorch/serve/commit/7849fbc8d2a53c59cb7d290437a76d65ee95bf25", "message": "Merge branch 'master' into issue_640", "committedDate": "2020-10-14T07:39:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkxMTExNA==", "url": "https://github.com/pytorch/serve/pull/642#discussion_r504911114", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For creating GPU based image with older CUDA versions (ex. CUDA 10.1):\n          \n          \n            \n            For creating GPU based image with older CUDA versions (ex. CUDA 10.1), make sure that the `--build-arg CUDA_VERSION=<version>` is specified. The version is in the format \"cuda92\", \"cuda101\":", "author": "jeremiahschung", "createdAt": "2020-10-14T19:11:58Z", "path": "docker/README.md", "diffHunk": "@@ -29,9 +29,16 @@ For creating CPU based image :\n DOCKER_BUILDKIT=1 docker build --file Dockerfile -t torchserve:latest .\n ```\n \n-For creating GPU based image :\n+For creating GPU based image with the latest CUDA version PyTorch supports (ex. CUDA 10.2 as of Oct 2020):\n+\n+```bash\n+DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n+```\n+\n+For creating GPU based image with older CUDA versions (ex. CUDA 10.1):", "originalCommit": "7849fbc8d2a53c59cb7d290437a76d65ee95bf25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c88e1031b35735f1aec7bb448f69a449591adbae", "url": "https://github.com/pytorch/serve/commit/c88e1031b35735f1aec7bb448f69a449591adbae", "message": "Update docker/README.md", "committedDate": "2020-10-14T19:12:19Z", "type": "commit"}, {"oid": "a7bcda360c3599c6501e48044fffa5a25a3a3d99", "url": "https://github.com/pytorch/serve/commit/a7bcda360c3599c6501e48044fffa5a25a3a3d99", "message": "Merge branch 'master' into issue_640", "committedDate": "2020-11-19T18:10:39Z", "type": "commit"}]}