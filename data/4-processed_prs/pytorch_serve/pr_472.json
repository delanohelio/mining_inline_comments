{"pr_number": 472, "pr_title": "Fixed model-archiver to accept handler name or handler_name:entry_pnt_func combinations", "pr_createdAt": "2020-06-22T12:14:09Z", "pr_url": "https://github.com/pytorch/serve/pull/472", "timeline": [{"oid": "14d14f1acf6f41767e668ddd8afdd89335e48dba", "url": "https://github.com/pytorch/serve/commit/14d14f1acf6f41767e668ddd8afdd89335e48dba", "message": "Fix for error while loading model on cpu which was saved on gpu", "committedDate": "2020-06-09T12:08:32Z", "type": "commit"}, {"oid": "d8092b2f37d6b7cfae79a73f9dec7f9e1ca5d91d", "url": "https://github.com/pytorch/serve/commit/d8092b2f37d6b7cfae79a73f9dec7f9e1ca5d91d", "message": "Merge branch 'master' of https://github.com/pytorch/serve", "committedDate": "2020-06-18T12:53:16Z", "type": "commit"}, {"oid": "9217583a2b78eeb79956cd9c0e9db570e2235aaa", "url": "https://github.com/pytorch/serve/commit/9217583a2b78eeb79956cd9c0e9db570e2235aaa", "message": "Fixed issue 465", "committedDate": "2020-06-22T10:39:43Z", "type": "commit"}, {"oid": "449206eb19f683b5020e811f182aa3c7eb41b975", "url": "https://github.com/pytorch/serve/commit/449206eb19f683b5020e811f182aa3c7eb41b975", "message": "Added more changes", "committedDate": "2020-06-22T11:21:29Z", "type": "commit"}, {"oid": "6275bfc75da1524c4fe6a5ae3bf8071bf7180cb2", "url": "https://github.com/pytorch/serve/commit/6275bfc75da1524c4fe6a5ae3bf8071bf7180cb2", "message": "Fixed UTs", "committedDate": "2020-06-22T12:28:26Z", "type": "commit"}, {"oid": "ad923db35db6baa4a59298fcfcc5f685f6bff9e5", "url": "https://github.com/pytorch/serve/commit/ad923db35db6baa4a59298fcfcc5f685f6bff9e5", "message": "Offline code review comments", "committedDate": "2020-06-23T06:12:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyMjUzMQ==", "url": "https://github.com/pytorch/serve/pull/472#discussion_r445922531", "bodyText": "@dhaniram-kshirsagar Will this require updates to automated tests?", "author": "chauhang", "createdAt": "2020-06-26T01:30:14Z", "path": "examples/text_classification/README.md", "diffHunk": "@@ -21,8 +21,12 @@ The above command generated the model's state dict as model.pt and the vocab use\n  * Create a torch model archive using the torch-model-archiver utility to archive the above files.\n  \n     ```bash\n-    torch-model-archiver --model-name my_text_classifier --version 1.0 --model-file model.py --serialized-file model.pt --source-vocab source_vocab.pt --handler text_classifier --extra-files index_to_name.json\n+    torch-model-archiver --model-name my_text_classifier --version 1.0 --model-file model.py --serialized-file model.pt  --handler text_classifier --extra-files \"index_to_name.json,source_vocab.pt\"", "originalCommit": "ad923db35db6baa4a59298fcfcc5f685f6bff9e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEwOTQxNQ==", "url": "https://github.com/pytorch/serve/pull/472#discussion_r447109415", "bodyText": "It is in place via torchserve_sanity which is part of CI.", "author": "dhaniram-kshirsagar", "createdAt": "2020-06-29T16:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyMjUzMQ=="}], "type": "inlineReview"}, {"oid": "53582f4eea9855de35992b8da9e0d67209b918e6", "url": "https://github.com/pytorch/serve/commit/53582f4eea9855de35992b8da9e0d67209b918e6", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-06-29T04:33:51Z", "type": "commit"}, {"oid": "bde62d64812492a7f29884685aaea63b11482669", "url": "https://github.com/pytorch/serve/commit/bde62d64812492a7f29884685aaea63b11482669", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-06T18:15:20Z", "type": "commit"}, {"oid": "06a5452d9b12959a6f2b80546820b6b9ceec0bcc", "url": "https://github.com/pytorch/serve/commit/06a5452d9b12959a6f2b80546820b6b9ceec0bcc", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-09T21:58:13Z", "type": "commit"}, {"oid": "26a003251bdf62252b3de6f2548def7cf0dd539d", "url": "https://github.com/pytorch/serve/commit/26a003251bdf62252b3de6f2548def7cf0dd539d", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-20T05:11:40Z", "type": "commit"}, {"oid": "d96c4634c98462f51fff4fd28059b5265ed92459", "url": "https://github.com/pytorch/serve/commit/d96c4634c98462f51fff4fd28059b5265ed92459", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-22T12:24:52Z", "type": "commit"}, {"oid": "d4c7e34f0c1992596d62c42f20208c4aa5521741", "url": "https://github.com/pytorch/serve/commit/d4c7e34f0c1992596d62c42f20208c4aa5521741", "message": "Fixed pylint error", "committedDate": "2020-07-22T12:49:28Z", "type": "commit"}, {"oid": "e4ea81b0dddbbddc9c37e36163aa3f171967bc67", "url": "https://github.com/pytorch/serve/commit/e4ea81b0dddbbddc9c37e36163aa3f171967bc67", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-22T17:00:39Z", "type": "commit"}, {"oid": "a55173372f316fbe775e16df60591d8d8355ff3b", "url": "https://github.com/pytorch/serve/commit/a55173372f316fbe775e16df60591d8d8355ff3b", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-22T19:24:09Z", "type": "commit"}, {"oid": "58d1b0428079b73d5ec01f4df7d3dcaa3e068f72", "url": "https://github.com/pytorch/serve/commit/58d1b0428079b73d5ec01f4df7d3dcaa3e068f72", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-22T20:56:49Z", "type": "commit"}, {"oid": "1fd88b1663394b6974e0669b42340db45a9b7462", "url": "https://github.com/pytorch/serve/commit/1fd88b1663394b6974e0669b42340db45a9b7462", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-23T04:46:06Z", "type": "commit"}, {"oid": "0a0532d6a78c16b86049746e8c904c5d3c470f3c", "url": "https://github.com/pytorch/serve/commit/0a0532d6a78c16b86049746e8c904c5d3c470f3c", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-23T16:02:40Z", "type": "commit"}, {"oid": "75da63f19445e2b556ebb2add498c7bee02eab83", "url": "https://github.com/pytorch/serve/commit/75da63f19445e2b556ebb2add498c7bee02eab83", "message": "Fixed conflicts and merged master", "committedDate": "2020-07-24T03:46:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4ODMwNw==", "url": "https://github.com/pytorch/serve/pull/472#discussion_r460188307", "bodyText": "@dhaniram-kshirsagar Shouldn't this be --handler /home/serve/examples/custom_image_classifier**.py**? Where is the module_name getting set in case of Custom Handlers?", "author": "chauhang", "createdAt": "2020-07-24T17:23:30Z", "path": "model-archiver/README.md", "diffHunk": "@@ -140,13 +137,17 @@ A serialized file (.pt or .pth) should be a checkpoint in case of torchscript an\n \n ### Handler\n \n-Handler can be TorchServe's inbuilt handler name or path to a py to handle custom TorchServe inference logic. TorchServe supports following handlers out or box:\n+Handler can be TorchServe's inbuilt handler name or path to a py file to handle custom TorchServe inference logic. TorchServe supports following handlers out or box:\n 1. `image_classifier`\n 2. `object_detector`\n 3. `text_classifier`\n 4. `image_segmenter`\n \n-For more details refer [default handler documentation](../docs/default_handlers.md)\n+In case of custom handler, if you plan to provide just `module_name` or `module_name:entry_point_function_name` then make sure that it is prefixed with absolute or relative path of python file.\n+e.g. if your custom handler custom_image_classifier.py is in /home/serve/examples then\n+`--handler /home/serve/examples/custom_image_classifier` or if it has my_entry_point module level function then `--handler /home/serve/examples/custom_image_classifier:my_entry_point_func`", "originalCommit": "75da63f19445e2b556ebb2add498c7bee02eab83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI2NDE3MA==", "url": "https://github.com/pytorch/serve/pull/472#discussion_r460264170", "bodyText": "Yes, that option is already there however these additional options i.e. handler_name:entry_pnt_func  or handler_name without py ext.\nThe framework had support for custom entry_point_function_names i.e. you can name entrypoint function as handle_request instead of the standard handle in custom handlers. However, due to bug which is fixed in this PR, this feature was hidden from the user [especially for users coming from MMS #465 ].  With this, we assume that the custom handler module_name or py file has the same name. The handler name or handler name with entry_point_func [i.e. handler:func_name] is recorded in mar Manifest file.\nThis --handler /home/serve/examples/custom_image_classifier is available as an additional option, along with main use case of supplying entry_point_function name with handler.", "author": "dhaniram-kshirsagar", "createdAt": "2020-07-24T20:07:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4ODMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5MTQ2OA==", "url": "https://github.com/pytorch/serve/pull/472#discussion_r460191468", "bodyText": "@dhaniram-kshirsagar Please provide details of actual tests run for backward compatibility", "author": "chauhang", "createdAt": "2020-07-24T17:29:52Z", "path": "ts/torch_handler/text_handler.py", "diffHunk": "@@ -27,9 +28,25 @@ def __init__(self):\n     def initialize(self, ctx):\n         super(TextHandler, self).initialize(ctx)\n         self.initialized = False\n-        self.source_vocab = torch.load(self.manifest['model']['sourceVocab'])\n+        source_vocab = self.manifest['model']['sourceVocab'] if 'sourceVocab' in self.manifest['model'] else None\n+        if source_vocab:\n+            # Backward compatibility", "originalCommit": "75da63f19445e2b556ebb2add498c7bee02eab83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI1NzEyOQ==", "url": "https://github.com/pytorch/serve/pull/472#discussion_r460257129", "bodyText": "The old mar is part of ci and it is working fine with this build.", "author": "dhaniram-kshirsagar", "createdAt": "2020-07-24T19:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5MTQ2OA=="}], "type": "inlineReview"}, {"oid": "352374af0575b3989fb2f44a72ee7b0837a94f04", "url": "https://github.com/pytorch/serve/commit/352374af0575b3989fb2f44a72ee7b0837a94f04", "message": "Added UT-IT", "committedDate": "2020-07-24T19:45:11Z", "type": "commit"}, {"oid": "6ddaee56c3337270f13286497aeecfddb549bd9f", "url": "https://github.com/pytorch/serve/commit/6ddaee56c3337270f13286497aeecfddb549bd9f", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-29T11:14:01Z", "type": "commit"}, {"oid": "916e063f826e6075bf1f8daeeda30b7ec68d06c8", "url": "https://github.com/pytorch/serve/commit/916e063f826e6075bf1f8daeeda30b7ec68d06c8", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-31T17:22:06Z", "type": "commit"}, {"oid": "51887270166955bc95d976752156fe4a866acd06", "url": "https://github.com/pytorch/serve/commit/51887270166955bc95d976752156fe4a866acd06", "message": "Merge branch 'master' into issue_465", "committedDate": "2020-07-31T23:44:57Z", "type": "commit"}]}