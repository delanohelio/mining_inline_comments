{"pr_number": 302, "pr_title": "Huggingface Transformers generalization", "pr_createdAt": "2020-05-04T16:17:09Z", "pr_url": "https://github.com/pytorch/serve/pull/302", "timeline": [{"oid": "61b7825f849e28bf09b24c4415dd6510f7ab09aa", "url": "https://github.com/pytorch/serve/commit/61b7825f849e28bf09b24c4415dd6510f7ab09aa", "message": "Scripts to seriliaze a Bert model using jit.trace and a handler for Bert model", "committedDate": "2020-04-24T23:19:38Z", "type": "commit"}, {"oid": "49d00121ae05a01f03a1bfce00160dd21b1bb361", "url": "https://github.com/pytorch/serve/commit/49d00121ae05a01f03a1bfce00160dd21b1bb361", "message": "modified to include mapping of predicitons and decoding received text", "committedDate": "2020-04-25T05:15:28Z", "type": "commit"}, {"oid": "2a4d5941fce84d8a90f90717549dcb29750f23cc", "url": "https://github.com/pytorch/serve/commit/2a4d5941fce84d8a90f90717549dcb29750f23cc", "message": "move back the original text", "committedDate": "2020-04-25T05:16:31Z", "type": "commit"}, {"oid": "3ada4526abc050348eb86518be7e07847717cd09", "url": "https://github.com/pytorch/serve/commit/3ada4526abc050348eb86518be7e07847717cd09", "message": "moved the index_to_name to bert folder", "committedDate": "2020-04-25T05:17:28Z", "type": "commit"}, {"oid": "7b22b62bd93b74c3f621f3ce31a27015aa37cab2", "url": "https://github.com/pytorch/serve/commit/7b22b62bd93b74c3f621f3ce31a27015aa37cab2", "message": "Transformers/ Bert serving with Torchserve readme", "committedDate": "2020-04-25T05:25:52Z", "type": "commit"}, {"oid": "c609fde3198077d3d358115c0fd2ca4478925475", "url": "https://github.com/pytorch/serve/commit/c609fde3198077d3d358115c0fd2ca4478925475", "message": " deleting an unused dictionary", "committedDate": "2020-04-25T05:34:47Z", "type": "commit"}, {"oid": "45f376d82a8a2f349351ded79359f3bf7fa23ead", "url": "https://github.com/pytorch/serve/commit/45f376d82a8a2f349351ded79359f3bf7fa23ead", "message": " just cleaning some of the commented out parts", "committedDate": "2020-04-25T05:41:52Z", "type": "commit"}, {"oid": "4f52a874acef97dd358ee84626c243741426f2fb", "url": "https://github.com/pytorch/serve/commit/4f52a874acef97dd358ee84626c243741426f2fb", "message": "cleaning up", "committedDate": "2020-04-26T17:52:43Z", "type": "commit"}, {"oid": "d13476adea12dcbe5e795788a3e1507d499a1b0b", "url": "https://github.com/pytorch/serve/commit/d13476adea12dcbe5e795788a3e1507d499a1b0b", "message": " Cleaning up", "committedDate": "2020-04-26T18:46:10Z", "type": "commit"}, {"oid": "f8998287f06d89a448b1b0dce5eb6b82c5d58fef", "url": "https://github.com/pytorch/serve/commit/f8998287f06d89a448b1b0dce5eb6b82c5d58fef", "message": "uncommenting the logging and cleaning  the comments", "committedDate": "2020-04-26T19:24:53Z", "type": "commit"}, {"oid": "92778233e50ff24de91027f44535f4267d998ab6", "url": "https://github.com/pytorch/serve/commit/92778233e50ff24de91027f44535f4267d998ab6", "message": "Download and save the checkpoints, config file and vocab of  the BERT from Transformers for demonstration purposes", "committedDate": "2020-04-29T07:08:37Z", "type": "commit"}, {"oid": "bda474ac5b59d749b50cf3660546deaf2983f458", "url": "https://github.com/pytorch/serve/commit/bda474ac5b59d749b50cf3660546deaf2983f458", "message": "mapping of predicitons to labels", "committedDate": "2020-04-29T07:09:18Z", "type": "commit"}, {"oid": "ec59c7913a4b555547dfd48ac33967600503ff77", "url": "https://github.com/pytorch/serve/commit/ec59c7913a4b555547dfd48ac33967600503ff77", "message": "a custom handler for transformers.", "committedDate": "2020-04-29T07:09:58Z", "type": "commit"}, {"oid": "0cdb264c59a5f9235167975acc71af4a0594855d", "url": "https://github.com/pytorch/serve/commit/0cdb264c59a5f9235167975acc71af4a0594855d", "message": "README.", "committedDate": "2020-04-29T07:10:37Z", "type": "commit"}, {"oid": "db45f87f5202557c2266a0ad8b85edaff663c749", "url": "https://github.com/pytorch/serve/commit/db45f87f5202557c2266a0ad8b85edaff663c749", "message": "sample of input text.", "committedDate": "2020-04-29T07:11:18Z", "type": "commit"}, {"oid": "940008d631047b7d6d3447d03a79c2d94c5a10ab", "url": "https://github.com/pytorch/serve/commit/940008d631047b7d6d3447d03a79c2d94c5a10ab", "message": " modifying the descriptions", "committedDate": "2020-04-29T15:47:37Z", "type": "commit"}, {"oid": "13b1e16bd1d95c768399adf71af040ee7f3c3e2d", "url": "https://github.com/pytorch/serve/commit/13b1e16bd1d95c768399adf71af040ee7f3c3e2d", "message": " modifying the descriptions", "committedDate": "2020-04-29T15:54:05Z", "type": "commit"}, {"oid": "deda5d2c20cbea6d37efcedbf257231bc8a75cdf", "url": "https://github.com/pytorch/serve/commit/deda5d2c20cbea6d37efcedbf257231bc8a75cdf", "message": " adding comments", "committedDate": "2020-04-29T16:30:29Z", "type": "commit"}, {"oid": "1e03fec8487293b8020c812aaed4942496533f26", "url": "https://github.com/pytorch/serve/commit/1e03fec8487293b8020c812aaed4942496533f26", "message": " adding commnets", "committedDate": "2020-04-29T16:31:07Z", "type": "commit"}, {"oid": "55c031842b507c9f0f784483f6a60ba582abb1fb", "url": "https://github.com/pytorch/serve/commit/55c031842b507c9f0f784483f6a60ba582abb1fb", "message": " Fromatting modifications", "committedDate": "2020-04-29T16:32:00Z", "type": "commit"}, {"oid": "e5fbc07d9a9e1d78909dd432de4595323efbb2f8", "url": "https://github.com/pytorch/serve/commit/e5fbc07d9a9e1d78909dd432de4595323efbb2f8", "message": " modified comments", "committedDate": "2020-04-29T16:37:47Z", "type": "commit"}, {"oid": "dbb8da5617ff4c945a46a19960eae45b83a2a3bf", "url": "https://github.com/pytorch/serve/commit/dbb8da5617ff4c945a46a19960eae45b83a2a3bf", "message": " added the citations", "committedDate": "2020-04-29T22:12:21Z", "type": "commit"}, {"oid": "56ceffac67fbafffccfd4926d54d7a7a34333112", "url": "https://github.com/pytorch/serve/commit/56ceffac67fbafffccfd4926d54d7a7a34333112", "message": "adding hugginface as the type of transformer model we are referring to", "committedDate": "2020-04-30T03:27:45Z", "type": "commit"}, {"oid": "6190198fb621d078c940f870af9da0c0467b2206", "url": "https://github.com/pytorch/serve/commit/6190198fb621d078c940f870af9da0c0467b2206", "message": "renaming the folder to huggingface_transformers", "committedDate": "2020-04-30T03:34:59Z", "type": "commit"}, {"oid": "58507d3d3740bc490e734de4fa77e70ec6b224a6", "url": "https://github.com/pytorch/serve/commit/58507d3d3740bc490e734de4fa77e70ec6b224a6", "message": "Removing the bert folder", "committedDate": "2020-04-30T03:46:28Z", "type": "commit"}, {"oid": "d5bc08edbc03cfb09bba1bc3895ef1b62e7ddaa7", "url": "https://github.com/pytorch/serve/commit/d5bc08edbc03cfb09bba1bc3895ef1b62e7ddaa7", "message": "simple modification", "committedDate": "2020-05-03T01:57:46Z", "type": "commit"}, {"oid": "766b74470fc7dd429a9af125f4b86f3de49c33e4", "url": "https://github.com/pytorch/serve/commit/766b74470fc7dd429a9af125f4b86f3de49c33e4", "message": "modifed the script to use a setup_config.json for loading and saving models", "committedDate": "2020-05-03T04:59:19Z", "type": "commit"}, {"oid": "5fc3d25d60fad15113dada527adced64ba41dabb", "url": "https://github.com/pytorch/serve/commit/5fc3d25d60fad15113dada527adced64ba41dabb", "message": "added the section for transfomer_handler_generalized", "committedDate": "2020-05-03T05:00:42Z", "type": "commit"}, {"oid": "c101a348978b11139b0ff2b7d98f28c8e89d5358", "url": "https://github.com/pytorch/serve/commit/c101a348978b11139b0ff2b7d98f28c8e89d5358", "message": "the generalized handler", "committedDate": "2020-05-03T05:01:15Z", "type": "commit"}, {"oid": "b950d8df697d0680d7406867c504dedf3771a279", "url": "https://github.com/pytorch/serve/commit/b950d8df697d0680d7406867c504dedf3771a279", "message": "set_up config intialization", "committedDate": "2020-05-03T05:02:09Z", "type": "commit"}, {"oid": "95f91fe52bf0944cf970ab3b912b4ac0c7892ae3", "url": "https://github.com/pytorch/serve/commit/95f91fe52bf0944cf970ab3b912b4ac0c7892ae3", "message": " edited for transfomer generalization", "committedDate": "2020-05-04T00:01:38Z", "type": "commit"}, {"oid": "de0b8d904403babc9110c59f598845fdd3f21127", "url": "https://github.com/pytorch/serve/commit/de0b8d904403babc9110c59f598845fdd3f21127", "message": " modified to use just input_ids as inputs for models", "committedDate": "2020-05-04T00:03:23Z", "type": "commit"}, {"oid": "12c17da33f4bc46e8bfab473c34e2164caba1536", "url": "https://github.com/pytorch/serve/commit/12c17da33f4bc46e8bfab473c34e2164caba1536", "message": "modified for question answering", "committedDate": "2020-05-04T00:04:10Z", "type": "commit"}, {"oid": "8f650bdaa947d7bb2c7de0efd6c75d94477717aa", "url": "https://github.com/pytorch/serve/commit/8f650bdaa947d7bb2c7de0efd6c75d94477717aa", "message": "modified to include the number of labels", "committedDate": "2020-05-04T00:04:51Z", "type": "commit"}, {"oid": "11648345c00cf2622df6e5118a1046a0cef64f86", "url": "https://github.com/pytorch/serve/commit/11648345c00cf2622df6e5118a1046a0cef64f86", "message": "corrected typos", "committedDate": "2020-05-04T00:10:41Z", "type": "commit"}, {"oid": "646b66a30eac12240d8062adfc86d0aad77f5b60", "url": "https://github.com/pytorch/serve/commit/646b66a30eac12240d8062adfc86d0aad77f5b60", "message": "modifed variable names", "committedDate": "2020-05-04T02:40:12Z", "type": "commit"}, {"oid": "1162c0132655cd797a8f2f71785c3653403f15b8", "url": "https://github.com/pytorch/serve/commit/1162c0132655cd797a8f2f71785c3653403f15b8", "message": "edited for clarity", "committedDate": "2020-05-04T02:40:36Z", "type": "commit"}, {"oid": "a8fea21ecbf0c2f1aa9c00f881c1ad2d75e78053", "url": "https://github.com/pytorch/serve/commit/a8fea21ecbf0c2f1aa9c00f881c1ad2d75e78053", "message": "modifed variable names, simplified the initlialize in the handler class, removed the warnning from QA case", "committedDate": "2020-05-04T02:43:03Z", "type": "commit"}, {"oid": "785737e3fd373492b8c9834a337b0c748c2f5f3d", "url": "https://github.com/pytorch/serve/commit/785737e3fd373492b8c9834a337b0c748c2f5f3d", "message": "modifed values for QA", "committedDate": "2020-05-04T02:44:54Z", "type": "commit"}, {"oid": "94abfd96d42bdeacd4d86858d75bd3af5e8fb1da", "url": "https://github.com/pytorch/serve/commit/94abfd96d42bdeacd4d86858d75bd3af5e8fb1da", "message": "modifed the variable names", "committedDate": "2020-05-04T02:45:29Z", "type": "commit"}, {"oid": "b3ab957dea79499f188c6d2fc930089e09e1eb64", "url": "https://github.com/pytorch/serve/commit/b3ab957dea79499f188c6d2fc930089e09e1eb64", "message": " added comments", "committedDate": "2020-05-04T03:12:33Z", "type": "commit"}, {"oid": "784a38f44302a122503a6ff7b7113cd328fcca6a", "url": "https://github.com/pytorch/serve/commit/784a38f44302a122503a6ff7b7113cd328fcca6a", "message": "modified to add clarity", "committedDate": "2020-05-04T16:03:02Z", "type": "commit"}, {"oid": "44217c1775ca52cbd1bf41a686d642b679a54333", "url": "https://github.com/pytorch/serve/commit/44217c1775ca52cbd1bf41a686d642b679a54333", "message": "add comment in preprocessing of QA", "committedDate": "2020-05-04T16:10:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mjk5Mg==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419692992", "bodyText": "Should we add a else warning here if the mode is not supported?", "author": "zhangguanheng66", "createdAt": "2020-05-04T20:01:13Z", "path": "examples/Huggingface_Transformers/Download_Transformer_models.py", "diffHunk": "@@ -0,0 +1,103 @@\n+import transformers\n+from pathlib import Path\n+import os\n+import json\n+import torch\n+from transformers import (AutoModelForSequenceClassification, AutoTokenizer, AutoModelForQuestionAnswering,\n+ AutoModelForTokenClassification, AutoConfig)\n+\"\"\" This function, save the checkpoint, config file along with tokenizer config and vocab files\n+    of a transformer model of your choice.\n+\"\"\"\n+print('Transformers version',transformers.__version__)\n+\n+def transformers_model_dowloader(mode,pretrained_model_name,num_labels,do_lower_case):\n+    print(\"Download model and tokenizer\", pretrained_model_name)\n+    #loading pre-trained model and tokenizer\n+    if mode== \"sequence_classification\":\n+        config = AutoConfig.from_pretrained(pretrained_model_name,num_labels=num_labels)\n+        model = AutoModelForSequenceClassification.from_pretrained(pretrained_model_name, config=config)\n+        tokenizer = AutoTokenizer.from_pretrained(pretrained_model_name,do_lower_case=do_lower_case)\n+    elif mode== \"question_answering\":\n+        model = AutoModelForQuestionAnswering.from_pretrained(pretrained_model_name)\n+        tokenizer = AutoTokenizer.from_pretrained(pretrained_model_name,do_lower_case=do_lower_case)\n+    elif mode== \"token_classification\":\n+        config = AutoConfig.from_pretrained(pretrained_model_name,num_labels=num_labels)\n+        model = AutoModelForTokenClassification.from_pretrained(pretrained_model_name)\n+        tokenizer = AutoTokenizer.from_pretrained(pretrained_model_name,do_lower_case=do_lower_case)\n+", "originalCommit": "44217c1775ca52cbd1bf41a686d642b679a54333", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0OTU4MQ==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419749581", "bodyText": "Thanks for your suggestion, the warning is added now.", "author": "HamidShojanazeri", "createdAt": "2020-05-04T21:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mjk5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTkzOQ==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419699939", "bodyText": "why not combine self.initialize func and constructor together? Do you expect user to initialize the class multiple times?", "author": "zhangguanheng66", "createdAt": "2020-05-04T20:14:15Z", "path": "examples/Huggingface_Transformers/Transformers_handler.py", "diffHunk": "@@ -0,0 +1,112 @@\n+from abc import ABC\n+import json\n+import logging\n+import os\n+\n+import torch\n+from transformers import AutoModelForSequenceClassification, AutoTokenizer\n+\n+from ts.torch_handler.base_handler import BaseHandler\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class TransformersSeqClassifierHandler(BaseHandler, ABC):\n+    \"\"\"\n+    Transformers text classifier handler class. This handler takes a text (string) and\n+    as input and returns the classification text based on the serialized transformers checkpoint.\n+    \"\"\"\n+    def __init__(self):\n+        super(TransformersSeqClassifierHandler, self).__init__()\n+        self.initialized = False\n+\n+    def initialize(self, ctx):", "originalCommit": "44217c1775ca52cbd1bf41a686d642b679a54333", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1MDI0MQ==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419750241", "bodyText": "Constructor and self.initialize func are combined.", "author": "HamidShojanazeri", "createdAt": "2020-05-04T21:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1NzcxNQ==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419757715", "bodyText": "How about this one?", "author": "zhangguanheng66", "createdAt": "2020-05-04T22:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3OTgyMQ==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419779821", "bodyText": "Sure, modified as well. Thanks.", "author": "HamidShojanazeri", "createdAt": "2020-05-04T23:06:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1MDI0OA==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r419850248", "bodyText": "@zhangguanheng66 The initialize method has a special purpose in TorchServe base model handlers. @mycpuorg Can you please describe the details for why it needs to be separate?", "author": "chauhang", "createdAt": "2020-05-05T03:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5OTkzOQ=="}], "type": "inlineReview"}, {"oid": "1a2d32af6da6e44d5cf34d65c00e4dc21f85f90a", "url": "https://github.com/pytorch/serve/commit/1a2d32af6da6e44d5cf34d65c00e4dc21f85f90a", "message": "added warning for the case mode is not selected properly and combined constructor and initlaize fucntion", "committedDate": "2020-05-04T21:44:04Z", "type": "commit"}, {"oid": "777466b6a20de61f03071e27ef4bd41c42548b0a", "url": "https://github.com/pytorch/serve/commit/777466b6a20de61f03071e27ef4bd41c42548b0a", "message": "clean up", "committedDate": "2020-05-04T21:46:38Z", "type": "commit"}, {"oid": "2518edc4908713aedba980031f881a696e6dd557", "url": "https://github.com/pytorch/serve/commit/2518edc4908713aedba980031f881a696e6dd557", "message": "clean up", "committedDate": "2020-05-04T22:22:36Z", "type": "commit"}, {"oid": "66ce189907effb8fb96e33cbd12fccea2353d958", "url": "https://github.com/pytorch/serve/commit/66ce189907effb8fb96e33cbd12fccea2353d958", "message": "combined constructor and initliaze func", "committedDate": "2020-05-04T23:05:02Z", "type": "commit"}, {"oid": "0752c4f8e47494cf853676bec862abbd08807f06", "url": "https://github.com/pytorch/serve/commit/0752c4f8e47494cf853676bec862abbd08807f06", "message": "combined constructor and initliaze func", "committedDate": "2020-05-04T23:05:38Z", "type": "commit"}, {"oid": "e609eb2e1daf68c29e5f6432b7a05d84c049daae", "url": "https://github.com/pytorch/serve/commit/e609eb2e1daf68c29e5f6432b7a05d84c049daae", "message": "Merge branch 'staging_0_1_1' into transformers_generalization", "committedDate": "2020-05-04T23:54:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE4ODk2Mw==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r421188963", "bodyText": "We could be doing all these inside the initialize method instead of the constructor. initialize is called with service context which can be very helpful.", "author": "mycpuorg", "createdAt": "2020-05-07T01:38:01Z", "path": "examples/Huggingface_Transformers/Transformer_handler_generalized.py", "diffHunk": "@@ -0,0 +1,148 @@\n+from abc import ABC\n+import json\n+import logging\n+import os\n+import ast\n+import torch\n+from transformers import AutoModelForSequenceClassification, AutoTokenizer, AutoModelForQuestionAnswering,AutoModelForTokenClassification\n+\n+from ts.torch_handler.base_handler import BaseHandler\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class TransformersSeqClassifierHandler(BaseHandler, ABC):\n+    \"\"\"\n+    Transformers handler class for sequence, token classification and question answering.\n+    \"\"\"\n+    def __init__(self,ctx):\n+        super(TransformersSeqClassifierHandler, self).__init__()\n+        self.manifest = ctx.manifest\n+        properties = ctx.system_properties", "originalCommit": "e609eb2e1daf68c29e5f6432b7a05d84c049daae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE4OTI5Ng==", "url": "https://github.com/pytorch/serve/pull/302#discussion_r421189296", "bodyText": "Same comment as before.\nIn general, both initialize and instantiation happen around the same time during model load stage. But the initialize function is called with service context  which gives the handler information provided about the model during registration such as:\n\nmodel_name\nmodel_dir\nmanifest\nbatch_size\ngpu\nts.version\n\nSo the handlers can make better decisions during initialize than in constructor.", "author": "mycpuorg", "createdAt": "2020-05-07T01:39:15Z", "path": "examples/Huggingface_Transformers/Transformers_handler.py", "diffHunk": "@@ -0,0 +1,106 @@\n+from abc import ABC\n+import json\n+import logging\n+import os\n+\n+import torch\n+from transformers import AutoModelForSequenceClassification, AutoTokenizer\n+\n+from ts.torch_handler.base_handler import BaseHandler\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class TransformersSeqClassifierHandler(BaseHandler, ABC):\n+    \"\"\"\n+    Transformers text classifier handler class. This handler takes a text (string) and\n+    as input and returns the classification text based on the serialized transformers checkpoint.\n+    \"\"\"\n+    def __init__(self, ctx):\n+        super(TransformersSeqClassifierHandler, self).__init__()", "originalCommit": "e609eb2e1daf68c29e5f6432b7a05d84c049daae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5bb1597dd213bb88e6199e1545a44135885473c2", "url": "https://github.com/pytorch/serve/commit/5bb1597dd213bb88e6199e1545a44135885473c2", "message": "Separated the constructor and initliaze func", "committedDate": "2020-05-07T04:22:49Z", "type": "commit"}, {"oid": "f08db9918ce491ba58e1b5edc7ce68c6a555737f", "url": "https://github.com/pytorch/serve/commit/f08db9918ce491ba58e1b5edc7ce68c6a555737f", "message": "Modified to remove the classification part and update with generalized version", "committedDate": "2020-05-07T05:38:45Z", "type": "commit"}, {"oid": "13af3dd57d86f84107157fb5f5e7699b6ab71aaa", "url": "https://github.com/pytorch/serve/commit/13af3dd57d86f84107157fb5f5e7699b6ab71aaa", "message": "Merge branch 'transformers_generalization' of https://github.com/HamidShojanazeri/serve into transformers_generalization", "committedDate": "2020-05-07T05:49:01Z", "type": "commit"}, {"oid": "04a84033ee260f936ae554d9bbc795def66388b4", "url": "https://github.com/pytorch/serve/commit/04a84033ee260f936ae554d9bbc795def66388b4", "message": "resolved the coflict and separated the costructor and initliaze func", "committedDate": "2020-05-07T05:57:29Z", "type": "commit"}, {"oid": "609f3f258d94ee836f1072b4abad0fd809dc7b76", "url": "https://github.com/pytorch/serve/commit/609f3f258d94ee836f1072b4abad0fd809dc7b76", "message": "removed the handler for classification case as the generalized version handles the case", "committedDate": "2020-05-07T23:19:09Z", "type": "commit"}, {"oid": "36717605b9cd6e0faeaa52fd0e57c33cba4aee94", "url": "https://github.com/pytorch/serve/commit/36717605b9cd6e0faeaa52fd0e57c33cba4aee94", "message": "Merge branch 'staging_0_1_1' into transformers_generalization", "committedDate": "2020-05-08T17:12:29Z", "type": "commit"}, {"oid": "3d08247f5825e59cffe415c6dcbd7b6d9b057b62", "url": "https://github.com/pytorch/serve/commit/3d08247f5825e59cffe415c6dcbd7b6d9b057b62", "message": "Merge branch 'staging_0_1_1' into transformers_generalization", "committedDate": "2020-05-16T20:58:15Z", "type": "commit"}, {"oid": "68c6e9513ef1cf9e13822fd622f2803c3311d6ed", "url": "https://github.com/pytorch/serve/commit/68c6e9513ef1cf9e13822fd622f2803c3311d6ed", "message": "Merge branch 'staging_0_1_1' into transformers_generalization", "committedDate": "2020-05-18T18:38:53Z", "type": "commit"}]}