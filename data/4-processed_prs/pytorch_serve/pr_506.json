{"pr_number": 506, "pr_title": "CircleCI Enhancements", "pr_createdAt": "2020-07-08T08:14:57Z", "pr_url": "https://github.com/pytorch/serve/pull/506", "timeline": [{"oid": "699ad770dc879a7aba6cc3332a636b14bbfc7d4d", "url": "https://github.com/pytorch/serve/commit/699ad770dc879a7aba6cc3332a636b14bbfc7d4d", "message": "Circleci project setup (#1)\n\n* Updated docker file for build\r\n\r\n* [skip ci]\r\n\r\n* [skip ci] pip3 path correction\r\n\r\n* Fixed Dockerfile\r\n\r\n* no cache dir to fix memory issue\r\n\r\n* [skip ci]\r\n\r\n* [skip ci] install python3 setuptools\r\n\r\n* install python3-dev\r\n\r\n* [skip ci]\r\n\r\n* wheel and build essential\r\n\r\n* basic circleci build\r\n\r\n* build on docker image for serve build\r\n\r\n* store gradle tests as artifacts\r\n\r\n* added Readme and build\\test scripts\r\n\r\n* updated scripts and config\r\n\r\n* update dockerfile for dependencies\r\n\r\n* correct file names\r\n\r\n* [skip ci]\r\n\r\n* Dockerfile corrected\r\n\r\n* [skip ci]\r\n\r\n* trigger all suites\r\n\r\n* register latest nodejs source and install node from it\r\n\r\n* [skip ci]\r\n\r\n* [skip ci] install curl\r\n\r\n* [skip ci] no sudo\r\n\r\n* corrected artifacts path\r\n\r\n* always trigger steps\r\n\r\n* install jmeter\r\n\r\n* [skip ci] updated docker image\r\n\r\n* curl command updated in docker\r\n\r\n* fixed https tests in api test suite\r\n\r\n* trigger from inside test directory\r\n\r\n* updated benchmark scripts\r\n\r\n* fixed artifact directory for benchmark\r\n\r\n* Updated benchmark script for circleci", "committedDate": "2020-07-08T08:14:07Z", "type": "commit"}, {"oid": "12404b6e466ec6d0c850fda76cb9cb264b71fc23", "url": "https://github.com/pytorch/serve/commit/12404b6e466ec6d0c850fda76cb9cb264b71fc23", "message": "Sanity tests as part of CI (#2)\n\n* Updated Dockerfile\r\n\r\n* Performance regression suite (Commented)\r\n\r\n* Sanity tests\r\n\r\n* Corrected CircleCI config", "committedDate": "2020-07-14T09:43:58Z", "type": "commit"}, {"oid": "0aeb2bfc3f2b991bf754f8762c8a696353760645", "url": "https://github.com/pytorch/serve/commit/0aeb2bfc3f2b991bf754f8762c8a696353760645", "message": "torch-model-archiver test and snapshot pytests as regression\n\n* Add torch-model-archiver test and snapshot pytests as regression\r\n* Increase sleep after start\\stop server to suite CircleCI medium resource machine", "committedDate": "2020-07-14T15:31:56Z", "type": "commit"}, {"oid": "03bd5699b49762e8d7f882c9c54791c35f786cde", "url": "https://github.com/pytorch/serve/commit/03bd5699b49762e8d7f882c9c54791c35f786cde", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_505", "committedDate": "2020-07-20T08:52:46Z", "type": "commit"}, {"oid": "5e3be505149386ec49c54cd818d0d4879acdef05", "url": "https://github.com/pytorch/serve/commit/5e3be505149386ec49c54cd818d0d4879acdef05", "message": "[skip ci] git is available in docker image", "committedDate": "2020-07-20T12:28:53Z", "type": "commit"}, {"oid": "97ad602cf723ae85691223d07874fcdca141ef5f", "url": "https://github.com/pytorch/serve/commit/97ad602cf723ae85691223d07874fcdca141ef5f", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_505\n\n# Conflicts:\n#\ttest/pytest/test_snapshot.py", "committedDate": "2020-07-23T07:06:20Z", "type": "commit"}, {"oid": "b66ddd282c8adc223a99231001c5bf188aacfdc2", "url": "https://github.com/pytorch/serve/commit/b66ddd282c8adc223a99231001c5bf188aacfdc2", "message": "added support for conda, pyenv and venv based docker images\n\n* added support for conda, pyenv and venv based docker images\r\n\r\n* added nightly temp for test\r\n\r\n* removed api tests and regression from smoke workflow\r\n\r\nCo-authored-by: Shivam Shriwas <shivamshriwas21@gmail.com>\r\nCo-authored-by: Ubuntu <ubuntu@ip-172-31-63-5.ec2.internal>", "committedDate": "2020-07-28T05:26:31Z", "type": "commit"}, {"oid": "57c2d4eb9ca439f70b856af69b20310673712bbd", "url": "https://github.com/pytorch/serve/commit/57c2d4eb9ca439f70b856af69b20310673712bbd", "message": "Merge branch 'master' of https://github.com/prashantsail/serve into issue_505", "committedDate": "2020-08-05T11:57:25Z", "type": "commit"}, {"oid": "b943fa2cb304f77495776578a13ac8cc90218b09", "url": "https://github.com/pytorch/serve/commit/b943fa2cb304f77495776578a13ac8cc90218b09", "message": "added markdown link check for circleci\n\n- updated linux_test_sanity\r\n- update docker images with markdown-link-check package", "committedDate": "2020-08-05T16:09:27Z", "type": "commit"}, {"oid": "186abdf1d81bec524e85fc287f442da8bb6eb3cc", "url": "https://github.com/pytorch/serve/commit/186abdf1d81bec524e85fc287f442da8bb6eb3cc", "message": "updated doc", "committedDate": "2020-08-05T18:57:33Z", "type": "commit"}, {"oid": "1b5a7dbd5a852cd8ff18a32c7811b889de4f875b", "url": "https://github.com/pytorch/serve/commit/1b5a7dbd5a852cd8ff18a32c7811b889de4f875b", "message": "added markdown check config file", "committedDate": "2020-08-06T04:27:32Z", "type": "commit"}, {"oid": "d3f3765427c6f73fdec3e4d382d9585564e08272", "url": "https://github.com/pytorch/serve/commit/d3f3765427c6f73fdec3e4d382d9585564e08272", "message": "Merge branch 'master' into issue_505", "committedDate": "2020-08-06T18:34:49Z", "type": "commit"}, {"oid": "03a6fae9059bced0d40ae4172959bda8af972fc3", "url": "https://github.com/pytorch/serve/commit/03a6fae9059bced0d40ae4172959bda8af972fc3", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_505", "committedDate": "2020-08-11T15:33:14Z", "type": "commit"}, {"oid": "b96f0436fa1ded3e3abe25a44ea6baaf6f5dc50f", "url": "https://github.com/pytorch/serve/commit/b96f0436fa1ded3e3abe25a44ea6baaf6f5dc50f", "message": "Store ts and ma *.whl files as dist", "committedDate": "2020-08-12T08:52:38Z", "type": "commit"}, {"oid": "536a8bfe313d0dc426c1b62b373d2aa4779bc97f", "url": "https://github.com/pytorch/serve/commit/536a8bfe313d0dc426c1b62b373d2aa4779bc97f", "message": "Issue 505 updates\n\n* frontend gradle tests as new job\r\n\r\n* added release flag while building wheel\r\n\r\n* fixed \"command\" and indentation\r\n\r\n* execute permission\r\n\r\n* model archiver built once\r\n\r\n* Conda buids as part of CI\r\n\r\n* [skip ci] install conda-build in docker image\r\n\r\n* [skip ci] Updated conda docker and added conda-build\r\n\r\n* conda38, ts & ma installation from a script", "committedDate": "2020-08-13T15:59:18Z", "type": "commit"}, {"oid": "676c8a4dd365b2cbb605a890b7b0ae269dbf90cf", "url": "https://github.com/pytorch/serve/commit/676c8a4dd365b2cbb605a890b7b0ae269dbf90cf", "message": "Issue 505 updates2 (#7)\n\n* Updated models as per master for sanity suite", "committedDate": "2020-08-13T18:47:33Z", "type": "commit"}, {"oid": "757a7ffa6d5b1caddb8c59ebc586bc08de01c7bd", "url": "https://github.com/pytorch/serve/commit/757a7ffa6d5b1caddb8c59ebc586bc08de01c7bd", "message": "Parameterised existing docker file for CCI\n- added shell script to generate docker images", "committedDate": "2020-08-16T17:52:20Z", "type": "commit"}, {"oid": "dcd57fe9f2e8bdd43262eb793b1503b45aa3fce5", "url": "https://github.com/pytorch/serve/commit/dcd57fe9f2e8bdd43262eb793b1503b45aa3fce5", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_505", "committedDate": "2020-08-21T12:32:16Z", "type": "commit"}, {"oid": "64943330a41394dbf06af233e996deba4f777c13", "url": "https://github.com/pytorch/serve/commit/64943330a41394dbf06af233e996deba4f777c13", "message": "Removed old config.yml", "committedDate": "2020-08-21T12:35:38Z", "type": "commit"}, {"oid": "af5711ed6c1134ce31e6ed8f841d6ce125cd37a4", "url": "https://github.com/pytorch/serve/commit/af5711ed6c1134ce31e6ed8f841d6ce125cd37a4", "message": "Uncomment PRT", "committedDate": "2020-08-21T12:35:48Z", "type": "commit"}, {"oid": "61567feba7066b7b4b02766ab40be727ff63335e", "url": "https://github.com/pytorch/serve/commit/61567feba7066b7b4b02766ab40be727ff63335e", "message": "Merge branch 'master' into issue_505", "committedDate": "2020-08-25T17:29:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MjI3Nw==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481782277", "bodyText": "Can you move this above. As this is going to be the most frequently used commands.", "author": "dhanainme", "createdAt": "2020-09-02T06:26:37Z", "path": ".circleci/README.md", "diffHunk": "@@ -0,0 +1,74 @@\n+# Pytorch Serve CircleCI build\n+TorchServe uses CircleCI for builds. This folder contains the config and scripts that are needed for CircleCI.\n+\n+## config.yml\n+_config.yml_ contains TorchServe's build logic which will be used by CircleCI.\n+\n+## Workflows and Jobs\n+Currently, following _workflows_ are available -\n+1. smoke\n+2. nightly\n+3. weekly\n+\n+Following _jobs_ are executed under each workflow -\n+1. **build** : Builds _frontend/model-server.jar_ and executes tests from gradle\n+2. **modelarchiver** : Builds and tests modelarchiver module\n+3. **python-tests** : Executes pytests from _serve/tests/unit_tests/_\n+4. **benchmark** : Executes latency benchmark using resnet-18 model\n+5. (NEW!) **api-tests** : Executes newman test suite for API testing\n+\n+Following _executors_ are available for job execution -\n+1. py36\n+\n+> Please check the _workflows_, _jobs_ and _executors_ section in _config.yml_ for an up to date list\n+\n+## scripts\n+Instead of using inline commands inside _config.yml_, job steps are configured as shell scripts.  \n+This is easier for maintenance and reduces chances of error in config.yml\n+\n+## images\n+TorchServe uses customized docker image for its CircleCI build.    \n+We have published the docker image on docker hub for code build\n+* prashantsail/pytorch-serve-build\n+\n+Following file in the _images_ folder is used to create the docker image\n+* Dockerfile - Dockerfile for prashantsail/pytorch-serve-build\n+\n+## Local CircleCI cli\n+To make it easy for developers to debug build issues locally, TorchServe supports CircleCI cli for running a job in a container on your machine.\n+\n+#### Dependencies\n+1. CircleCI cli ([Quick Install](https://circleci.com/docs/2.0/local-cli/#quick-installation))\n+2. PyYAML (pip install PyYaml)\n+3. docker (installed and running)\n+\n+#### Command\n+Developers can use the following command to execute CircleCI job:  \n+**_./run_circleci_tests.py <workflow_name> -j <job_name> -e <executor_name>**\n+\n+- _workflow_name_  \n+This is a madatory parameter\n+\n+- _-j, --job job_name_  \n+If specified, executes only the specified job name (along with the required parents).  \n+If not specified, all jobs in the workflow are executed sequentially.  \n+\n+- _-e, --executor executor_name_  \n+If specified, job is executed only on the specified executor(docker image).  \n+If not specified, job is executed on all the available executors.  \n+\n+```bash", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxMTk2OQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482311969", "bodyText": "As requested, moved \"Local CircleCI cli\" section to top of readme", "author": "prashantsail", "createdAt": "2020-09-02T19:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MjI3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MjY3Mg==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481782672", "bodyText": "Maintain existing names - torch-serve-build-gpu / torch-serve-build-cpu / torch-serve-regression-test-cpu / torch-serve-regression-test-gpu / torch-serve-regression-performance-test-cpu / torch-serve-regression-performance-test-gpu", "author": "dhanainme", "createdAt": "2020-09-02T06:26:57Z", "path": ".circleci/README.md", "diffHunk": "@@ -0,0 +1,74 @@\n+# Pytorch Serve CircleCI build\n+TorchServe uses CircleCI for builds. This folder contains the config and scripts that are needed for CircleCI.\n+\n+## config.yml\n+_config.yml_ contains TorchServe's build logic which will be used by CircleCI.\n+\n+## Workflows and Jobs\n+Currently, following _workflows_ are available -", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxMzY5Nw==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482313697", "bodyText": "Workflow names revised to sanity, regression, performance", "author": "prashantsail", "createdAt": "2020-09-02T19:02:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MjY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MzE0NQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481783145", "bodyText": "Move this to ECR & Use Credentials as env variables - https://github.com/pytorch/pytorch/blob/master/.circleci/config.yml", "author": "dhanainme", "createdAt": "2020-09-02T06:27:21Z", "path": ".circleci/config.yml", "diffHunk": "@@ -1,74 +1,298 @@\n version: 2.1\n \n+\n+executors:\n+  py36:\n+    docker:\n+      - image: shivamshriwas/torchserve:py36", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNDM3Ng==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482314376", "bodyText": "Moved docker images from dockerhub to AWS ECR", "author": "prashantsail", "createdAt": "2020-09-02T19:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4MzE0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4NDk0NQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481784945", "bodyText": "Make the env names consistent with https://github.com/pytorch/pytorch/blob/master/.circleci/config.yml", "author": "dhanainme", "createdAt": "2020-09-02T06:29:56Z", "path": ".circleci/config.yml", "diffHunk": "@@ -1,74 +1,298 @@\n version: 2.1\n \n+\n+executors:\n+  py36:\n+    docker:\n+      - image: shivamshriwas/torchserve:py36\n+    environment:\n+      _JAVA_OPTIONS: \"-Xmx2048m\"\n+  conda38:", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNTAxMA==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482315010", "bodyText": "executor names like torchserve\nexample: ubuntu18-pythn36-cpu-docker", "author": "prashantsail", "createdAt": "2020-09-02T19:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4NDk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4NTMyMw==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481785323", "bodyText": "_JAVA_OPTIONS may be redundant.", "author": "dhanainme", "createdAt": "2020-09-02T06:30:24Z", "path": ".circleci/config.yml", "diffHunk": "@@ -1,74 +1,298 @@\n version: 2.1\n \n+\n+executors:\n+  py36:\n+    docker:\n+      - image: shivamshriwas/torchserve:py36\n+    environment:\n+      _JAVA_OPTIONS: \"-Xmx2048m\"\n+  conda38:\n+    docker:\n+      - image: shivamshriwas/torchserve:conda38\n+    environment:\n+      _JAVA_OPTIONS: \"-Xmx2048m\"\n+  pyenv37:\n+    docker:\n+      - image: shivamshriwas/torchserve:pyenv37\n+    environment:\n+      _JAVA_OPTIONS: \"-Xmx2048m\"\n+  venv36:\n+    docker:\n+      - image: shivamshriwas/torchserve:venv36\n+    environment:\n+      _JAVA_OPTIONS: \"-Xmx2048m\"", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNTQxNQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482315415", "bodyText": "Removed redundant _JAVA_OPTIONS", "author": "prashantsail", "createdAt": "2020-09-02T19:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc4NTMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5MzQ1OA==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481793458", "bodyText": "Can you please create an issue to track the removal of redundant scripts.", "author": "dhanainme", "createdAt": "2020-09-02T06:41:39Z", "path": ".circleci/scripts/linux_test_benchmark.sh", "diffHunk": "@@ -0,0 +1,30 @@\n+#!/bin/bash", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxOTQ5OA==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482319498", "bodyText": "I will create an issue and all relevant details as soon as this PR is merged", "author": "prashantsail", "createdAt": "2020-09-02T19:08:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5MzQ1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5NjE4MQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481796181", "bodyText": "Can you document the build steps for this Docker file", "author": "dhanainme", "createdAt": "2020-09-02T06:45:19Z", "path": ".circleci/images/Dockerfile", "diffHunk": "@@ -0,0 +1,100 @@\n+ARG BASE_IMAGE=ubuntu:18.04\n+ARG ENV_TYPE=python\n+FROM ${BASE_IMAGE} AS compile-image\n+\n+ENV PYTHONUNBUFFERED TRUE\n+\n+RUN DEBIAN_FRONTEND=noninteractive \\\n+    && apt-get update \\\n+    && apt-get install --no-install-recommends -y \\\n+        build-essential \\\n+        ca-certificates\\\n+        curl \\\n+        git \\\n+        openjdk-11-jdk \\\n+    && curl -sL https://deb.nodesource.com/setup_14.x | bash - \\\n+    && apt-get update \\\n+    && apt-get install --no-install-recommends -y \\\n+        nodejs\n+\n+FROM compile-image as conda38-image", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNjA0Mg==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482316042", "bodyText": "Added comments in the docker file and also updated Readme for image creation commands with appropriate examples", "author": "prashantsail", "createdAt": "2020-09-02T19:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5NjE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5NjY0Nw==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481796647", "bodyText": "Can you pin versions", "author": "dhanainme", "createdAt": "2020-09-02T06:45:59Z", "path": ".circleci/images/Dockerfile", "diffHunk": "@@ -0,0 +1,100 @@\n+ARG BASE_IMAGE=ubuntu:18.04\n+ARG ENV_TYPE=python\n+FROM ${BASE_IMAGE} AS compile-image\n+\n+ENV PYTHONUNBUFFERED TRUE\n+\n+RUN DEBIAN_FRONTEND=noninteractive \\\n+    && apt-get update \\\n+    && apt-get install --no-install-recommends -y \\\n+        build-essential \\\n+        ca-certificates\\\n+        curl \\\n+        git \\\n+        openjdk-11-jdk \\\n+    && curl -sL https://deb.nodesource.com/setup_14.x | bash - \\\n+    && apt-get update \\\n+    && apt-get install --no-install-recommends -y \\\n+        nodejs\n+\n+FROM compile-image as conda38-image\n+ENV PATH ~/.local/bin/:$PATH\n+ENV PATH=/miniconda/bin:${PATH}\n+RUN curl -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n+        && bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b \\\n+        && rm Miniconda3-latest-Linux-x86_64.sh \\\n+        && rm -rf /var/lib/apt/lists/* \\\n+        && conda install -y conda-build\n+\n+FROM compile-image as py36-image\n+ENV PATH ~/.local/bin/:$PATH\n+RUN apt-get install --no-install-recommends -y \\\n+        python3 \\\n+        python3-dev \\\n+        python3-pip \\\n+        python3-setuptools \\\n+        python3-wheel \\\n+    && update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1\n+\n+FROM compile-image as pyenv37-image\n+ENV PATH ~/.local/bin/:$PATH\n+ENV PYENV_ROOT $HOME/.pyenv\n+ENV PATH=\"${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}\"\n+RUN apt-get install --no-install-recommends -y  libssl-dev zlib1g-dev libbz2-dev libreadline-dev \\\n+        libsqlite3-dev libxml2-dev libxmlsec1-dev libffi-dev\\\n+    && curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash \\\n+    && pyenv install 3.7.0 \\\n+    && pyenv global 3.7.0\n+\n+FROM compile-image as venv36-image\n+ENV PATH ~/.local/bin/:$PATH\n+ENV VIRTUAL_ENV=/opt/venv\n+ENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n+RUN apt-get install --no-install-recommends -y \\\n+        python3 \\\n+        python3-dev \\\n+        python3-pip \\\n+        python3-setuptools \\\n+        python3-wheel \\\n+        python3-venv\\\n+    && update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n+    && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1\\\n+    && python3 -m venv $VIRTUAL_ENV\n+\n+\n+FROM ${ENV_TYPE}-image AS final-image\n+ARG ENV_TYPE\n+# Install jmeter for Benchmark\n+RUN cd /opt \\\n+    && curl https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.3.tgz | tar -xz\\\n+    && cd apache-jmeter-5.3 \\\n+    && ln -s /opt/apache-jmeter-5.3/bin/jmeter /usr/local/bin/jmeter \\\n+    && curl --location -o lib/ext/jmeter-plugins-manager-1.4.jar https://jmeter-plugins.org/get/ \\\n+    && curl --location -o lib/cmdrunner-2.2.jar http://search.maven.org/remotecontent?filepath=kg/apc/cmdrunner/2.2/cmdrunner-2.2.jar \\\n+    && java -cp lib/ext/jmeter-plugins-manager-1.4.jar org.jmeterplugins.repository.PluginManagerCMDInstaller \\\n+    && bin/PluginsManagerCMD.sh install jpgc-synthesis=2.1,jpgc-filterresults=2.1,jpgc-mergeresults=2.1,jpgc-cmd=2.1,jpgc-perfmon=2.1\n+\n+# Install API tests dependencies\n+RUN npm install -g \\\n+        newman \\\n+        newman-reporter-html \\\n+        markdown-link-check\n+\n+# Install Torchserve, Pytest, Regression and Benchmark Dependencies\n+RUN pip install --no-cache-dir \\\n+        future \\\n+        mock \\\n+        pandas \\\n+        pillow \\\n+        psutil \\\n+        pylint==2.4.4 \\\n+        pytest \\\n+        pytest-cov \\\n+        pytest-mock \\\n+        sentencepiece==0.1.91 \\\n+        torch \\\n+        torchtext \\\n+        torchvision \\\n+        transformers\\", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNjk4NA==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482316984", "bodyText": "Added versions for all torch packages", "author": "prashantsail", "createdAt": "2020-09-02T19:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5NjY0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5OTE5OQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481799199", "bodyText": "Pls confirm that this is not an issue.", "author": "dhanainme", "createdAt": "2020-09-02T06:49:14Z", "path": "CODE_OF_CONDUCT.md", "diffHunk": "@@ -55,7 +55,7 @@ a project may be further defined and clarified by project maintainers.\n ## Enforcement\n \n Instances of abusive, harassing, or otherwise unacceptable behavior may be\n-reported by contacting the project team at <conduct@pytorch.org>. All\n+reported by contacting the project team at \\<conduct@pytorch.org\\>. All\n complaints will be reviewed and investigated and will result in a response that", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzI5MQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482317291", "bodyText": "Reverted this unintended change", "author": "prashantsail", "createdAt": "2020-09-02T19:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5OTE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwMDYwOQ==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r481800609", "bodyText": "Pls move then to a function.", "author": "dhanainme", "createdAt": "2020-09-02T06:51:03Z", "path": "run_circleci_tests.py", "diffHunk": "@@ -0,0 +1,168 @@\n+#!/usr/bin/env python\n+\"\"\"\n+- This script helps to execute circleci jobs in a container on developer's local machine.\n+- The script accepts workflow(mandatory), job(optional) and executor(optional) arguments.\n+- The script used circleci cli's process command to generate a processed yaml.\n+- The processed yaml, is parsed and tweaked to generate a new transformed yaml.\n+- The transformed yaml contains a single job, which is merged and ordered list of job steps\n+from the specified and required parent jobs.\n+\"\"\"\n+\n+# Make sure you have following dependencies installed on your local machine\n+# 1. PyYAML (pip install PyYaml)\n+# 2. CircleCI cli from - https://circleci.com/docs/2.0/local-cli/#installation\n+# 3. docker\n+\n+from collections import OrderedDict\n+from functools import reduce\n+\n+import subprocess\n+import sys\n+import copy\n+import argparse\n+import yaml\n+\n+parser = argparse.ArgumentParser(description='Execute circleci jobs in a container \\\n+                                                on your local machine')\n+parser.add_argument('workflow', type=str, help='Workflow name from config.yml')\n+parser.add_argument('-j', '--job', type=str, help='Job name from config.yml')\n+parser.add_argument('-e', '--executor', type=str, help='Executor name from config.yml')\n+args = parser.parse_args()\n+\n+workflow = args.workflow\n+job = args.job\n+executor = args.executor\n+\n+CCI_CONFIG_FILE = '.circleci/config.yml'\n+PROCESSED_FILE = '.circleci/processed.yml'\n+XFORMED_FILE = '.circleci/xformed.yml'\n+CCI_CONFIG = {}\n+PROCESSED_CONFIG = {}\n+XFORMED_CONFIG = {}\n+XFORMED_JOB_NAME = 'ts_xformed_job'\n+BLACKLISTED_STEPS = ['persist_to_workspace', 'attach_workspace', 'store_artifacts']\n+\n+# Read CircleCI's config\n+with open(CCI_CONFIG_FILE) as fstream:\n+    try:\n+        CCI_CONFIG = yaml.safe_load(fstream)\n+    except yaml.YAMLError as err:\n+        print(err)\n+\n+# Create processed YAML using circleci cli's 'config process' commands\n+PROCESS_CONFIG_CMD = 'circleci config process {} > {}'.format(CCI_CONFIG_FILE, PROCESSED_FILE)\n+print(\"Executing command : \", PROCESS_CONFIG_CMD)\n+subprocess.check_call(PROCESS_CONFIG_CMD, shell=True)\n+\n+# Read the processed config\n+with open(PROCESSED_FILE) as fstream:\n+    try:\n+        PROCESSED_CONFIG = yaml.safe_load(fstream)\n+    except yaml.YAMLError as err:\n+        print(err)\n+\n+# All executors available in the config file\n+available_executors = list(CCI_CONFIG['executors'])\n+\n+# All jobs available under the specified workflow\n+jobs_in_workflow = PROCESSED_CONFIG['workflows'][workflow]['jobs']\n+", "originalCommit": "61567feba7066b7b4b02766ab40be727ff63335e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzk0Ng==", "url": "https://github.com/pytorch/serve/pull/506#discussion_r482317946", "bodyText": "Refactored the code into modular functions", "author": "prashantsail", "createdAt": "2020-09-02T19:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwMDYwOQ=="}], "type": "inlineReview"}, {"oid": "ee76d873b48aa05f0ad50a3e0fa5693ab93d5f5b", "url": "https://github.com/pytorch/serve/commit/ee76d873b48aa05f0ad50a3e0fa5693ab93d5f5b", "message": "Issue 505 rc (#8)\n\n* Rename environment and workflow names\r\n\r\n* fixed indentation\r\n\r\n* fix config\r\n\r\n* config correction\r\n\r\n* config correction\r\n\r\n* config.correction\r\n\r\n* corrected indent\r\n\r\n* Updated config\r\n\r\n* Revert unintended changes to code of conduct\r\n\r\n* Review comments for Dockerfile\r\n\r\n* Docker images from ECR\r\n\r\n* Updated readme\r\n\r\n* no resource in executor name, comment PRT\r\n\r\n* Updated comments in Dockerfile and Readme.md\r\n\r\n* run circleci local updated for ECR images\r\n\r\n* Tweaked Readme for docker image building\r\n\r\n* Refactor run circleci local execution py\r\n\r\nCo-authored-by: Shivam Shriwas <shivamshriwas21@gmail.com>", "committedDate": "2020-09-02T18:58:27Z", "type": "commit"}, {"oid": "5623912a30b8cabe11b9d556a0d7be255c900e9c", "url": "https://github.com/pytorch/serve/commit/5623912a30b8cabe11b9d556a0d7be255c900e9c", "message": "Merge branch 'master' of https://github.com/pytorch/serve into issue_505", "committedDate": "2020-09-03T02:50:53Z", "type": "commit"}, {"oid": "a14e50289ace4a3c9093e7668e3f52564b590b51", "url": "https://github.com/pytorch/serve/commit/a14e50289ace4a3c9093e7668e3f52564b590b51", "message": "[skip ci] comment on access and secret key for aws ecr", "committedDate": "2020-09-03T04:51:46Z", "type": "commit"}, {"oid": "557ab06facfc4a60215f9da2ebb23135d8ff6bff", "url": "https://github.com/pytorch/serve/commit/557ab06facfc4a60215f9da2ebb23135d8ff6bff", "message": "Trigger AB suite and save results\n\n* Execute AB soak test\r\n\r\n* test benchmark\r\n\r\n* install ab\r\n\r\n* ab and requirements in image\r\n\r\n* [skip ci] Revert test changes to config", "committedDate": "2020-09-08T09:49:37Z", "type": "commit"}, {"oid": "aeb8b8da39f5f35a19662e60b17eb09efcf495c6", "url": "https://github.com/pytorch/serve/commit/aeb8b8da39f5f35a19662e60b17eb09efcf495c6", "message": "Merge branch 'master' into issue_505", "committedDate": "2020-09-08T20:04:13Z", "type": "commit"}, {"oid": "17daca93ebd85b3a832a5ad9b4f8f43626f90445", "url": "https://github.com/pytorch/serve/commit/17daca93ebd85b3a832a5ad9b4f8f43626f90445", "message": "[skip ci] Update AWS account name", "committedDate": "2020-09-11T16:58:39Z", "type": "commit"}, {"oid": "80a26f13bdd30bb88b59edd52746bc374a16e317", "url": "https://github.com/pytorch/serve/commit/80a26f13bdd30bb88b59edd52746bc374a16e317", "message": "Merge branch 'issue_505' of https://github.com/prashantsail/serve into issue_505", "committedDate": "2020-09-11T16:58:53Z", "type": "commit"}, {"oid": "e59bc535c57543ae15e87864392046154bd979f1", "url": "https://github.com/pytorch/serve/commit/e59bc535c57543ae15e87864392046154bd979f1", "message": "Update README.md", "committedDate": "2020-09-11T18:50:14Z", "type": "commit"}, {"oid": "7c9ae35ca5b23f5ed6348a2cb49e9d8e307d0985", "url": "https://github.com/pytorch/serve/commit/7c9ae35ca5b23f5ed6348a2cb49e9d8e307d0985", "message": "Update README.md", "committedDate": "2020-09-11T18:56:17Z", "type": "commit"}, {"oid": "f016b53f665c3c9d6b627a937c2fc77843b713b1", "url": "https://github.com/pytorch/serve/commit/f016b53f665c3c9d6b627a937c2fc77843b713b1", "message": "Merge branch 'master' into issue_505", "committedDate": "2020-09-11T18:57:20Z", "type": "commit"}]}