{"pr_number": 1348, "pr_title": "Order results from getColumns", "pr_createdAt": "2020-05-29T06:23:38Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1348", "timeline": [{"oid": "c97b863c95385bdcd1afc897ef39cbebaf495578", "url": "https://github.com/microsoft/mssql-jdbc/commit/c97b863c95385bdcd1afc897ef39cbebaf495578", "message": "Fix AEv2 tests exclude for reqExternalSetup and cleanup (#1247)", "committedDate": "2020-02-05T19:03:48Z", "type": "commit"}, {"oid": "54b5a194e5d46552419c86e0d1f8c800f42d3de8", "url": "https://github.com/microsoft/mssql-jdbc/commit/54b5a194e5d46552419c86e0d1f8c800f42d3de8", "message": "Fix | Add null check for getObject() with LocalTime and LocalDate (#1250)", "committedDate": "2020-02-08T00:19:05Z", "type": "commit"}, {"oid": "672b7d67caae75250c53f82a760e8d3880e62a37", "url": "https://github.com/microsoft/mssql-jdbc/commit/672b7d67caae75250c53f82a760e8d3880e62a37", "message": "added all AKV tests to use reqExternalSetup tag so they will be skipped by default (#1254)\n\n* skip AKV test properly\r\n\r\n* removed enclave properties string to failed errors as enclave tests could be skipped", "committedDate": "2020-02-10T19:04:22Z", "type": "commit"}, {"oid": "3c3331b7b0ff1b27b1e80271bf9ffdc6aae7be79", "url": "https://github.com/microsoft/mssql-jdbc/commit/3c3331b7b0ff1b27b1e80271bf9ffdc6aae7be79", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-25T06:21:47Z", "type": "commit"}, {"oid": "e2c5640370daa89c0d8c1559b5791e99656f78c8", "url": "https://github.com/microsoft/mssql-jdbc/commit/e2c5640370daa89c0d8c1559b5791e99656f78c8", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-26T06:10:08Z", "type": "commit"}, {"oid": "aad696640378b75f3cb8cb24cc2fa299358db9ac", "url": "https://github.com/microsoft/mssql-jdbc/commit/aad696640378b75f3cb8cb24cc2fa299358db9ac", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-28T03:18:02Z", "type": "commit"}, {"oid": "92bf04c2787c3b2a704f641f50cb4a83193f1d6d", "url": "https://github.com/microsoft/mssql-jdbc/commit/92bf04c2787c3b2a704f641f50cb4a83193f1d6d", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-31T01:58:20Z", "type": "commit"}, {"oid": "3ba5ab72008501e23f43dbcbcc333775320ddafa", "url": "https://github.com/microsoft/mssql-jdbc/commit/3ba5ab72008501e23f43dbcbcc333775320ddafa", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-04T05:47:37Z", "type": "commit"}, {"oid": "d20823deffea162b2b17b079cc291f91269558aa", "url": "https://github.com/microsoft/mssql-jdbc/commit/d20823deffea162b2b17b079cc291f91269558aa", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-07T00:45:05Z", "type": "commit"}, {"oid": "4cc959f7e76eedbf49e30e5b92de43c86d7eb803", "url": "https://github.com/microsoft/mssql-jdbc/commit/4cc959f7e76eedbf49e30e5b92de43c86d7eb803", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-29T02:59:23Z", "type": "commit"}, {"oid": "7b301f8184b26da4d99b2feab8b2aea886c01cea", "url": "https://github.com/microsoft/mssql-jdbc/commit/7b301f8184b26da4d99b2feab8b2aea886c01cea", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-30T06:36:21Z", "type": "commit"}, {"oid": "56bcf139fe6acd87c41b3829b4f157c59bd9f873", "url": "https://github.com/microsoft/mssql-jdbc/commit/56bcf139fe6acd87c41b3829b4f157c59bd9f873", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-07T22:26:03Z", "type": "commit"}, {"oid": "744e0ca78e57bc6c0db98910a9066d5b583c6ba8", "url": "https://github.com/microsoft/mssql-jdbc/commit/744e0ca78e57bc6c0db98910a9066d5b583c6ba8", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-12T22:47:18Z", "type": "commit"}, {"oid": "df8fd41ffa6005b18b0e328593faaeb495ce6547", "url": "https://github.com/microsoft/mssql-jdbc/commit/df8fd41ffa6005b18b0e328593faaeb495ce6547", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-19T01:06:51Z", "type": "commit"}, {"oid": "652e68b110828db6b172c1b02df6a06ab04c2b59", "url": "https://github.com/microsoft/mssql-jdbc/commit/652e68b110828db6b172c1b02df6a06ab04c2b59", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-26T07:07:35Z", "type": "commit"}, {"oid": "d24c7e5c8449d54cf631ebf16a024f959557de9f", "url": "https://github.com/microsoft/mssql-jdbc/commit/d24c7e5c8449d54cf631ebf16a024f959557de9f", "message": "Merge remote-tracking branch 'upstream/dev' into columninfo", "committedDate": "2020-05-26T23:02:18Z", "type": "commit"}, {"oid": "37fd1a553291e8059eb34b71c0c784b9d2a235d3", "url": "https://github.com/microsoft/mssql-jdbc/commit/37fd1a553291e8059eb34b71c0c784b9d2a235d3", "message": "added order by", "committedDate": "2020-05-29T04:43:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5NzE0Mg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r436997142", "bodyText": "missing a semicolon after ORDINAL_POSITION. This could be relevant later.", "author": "peterbae", "createdAt": "2020-06-08T20:58:51Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -637,7 +638,9 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     + \"CASE SS_IS_COMPUTED WHEN 0 THEN 'NO' WHEN 1 THEN 'YES' WHEN '' THEN '' END AS IS_GENERATEDCOLUMN, \"\n                     + \"SS_IS_SPARSE, SS_IS_COLUMN_SET, SS_UDT_CATALOG_NAME, SS_UDT_SCHEMA_NAME, SS_UDT_ASSEMBLY_TYPE_NAME,\"\n                     + \"SS_XML_SCHEMACOLLECTION_CATALOG_NAME, SS_XML_SCHEMACOLLECTION_SCHEMA_NAME, SS_XML_SCHEMACOLLECTION_NAME \"\n-                    + \"FROM @mssqljdbc_temp_sp_columns_result;\";\n+                    + \"FROM @mssqljdbc_temp_sp_columns_result \"\n+\n+                    + \"ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION\";", "originalCommit": "37fd1a553291e8059eb34b71c0c784b9d2a235d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwMTc0Mg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r437001742", "bodyText": "This line and the line below should be on the same line?", "author": "peterbae", "createdAt": "2020-06-08T21:08:03Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -637,7 +638,9 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     + \"CASE SS_IS_COMPUTED WHEN 0 THEN 'NO' WHEN 1 THEN 'YES' WHEN '' THEN '' END AS IS_GENERATEDCOLUMN, \"\n                     + \"SS_IS_SPARSE, SS_IS_COLUMN_SET, SS_UDT_CATALOG_NAME, SS_UDT_SCHEMA_NAME, SS_UDT_ASSEMBLY_TYPE_NAME,\"\n                     + \"SS_XML_SCHEMACOLLECTION_CATALOG_NAME, SS_XML_SCHEMACOLLECTION_SCHEMA_NAME, SS_XML_SCHEMACOLLECTION_NAME \"\n-                    + \"FROM @mssqljdbc_temp_sp_columns_result;\";\n+                    + \"FROM @mssqljdbc_temp_sp_columns_result \"", "originalCommit": "37fd1a553291e8059eb34b71c0c784b9d2a235d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwMjAxNg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r437002016", "bodyText": "combine this line and the line below", "author": "peterbae", "createdAt": "2020-06-08T21:08:36Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -738,6 +741,8 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     boolean isFirstRow = true; // less expensive than continuously checking isFirst()\n                     while (rs.next()) {\n                         if (!isFirstRow) {\n+                            azureDwSelectBuilder", "originalCommit": "37fd1a553291e8059eb34b71c0c784b9d2a235d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4NTgzMg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r437785832", "bodyText": "Wouldn't this append ORDER BY  after every row?", "author": "ulvii", "createdAt": "2020-06-09T23:57:12Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -738,6 +741,8 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n                     boolean isFirstRow = true; // less expensive than continuously checking isFirst()\n                     while (rs.next()) {\n                         if (!isFirstRow) {\n+                            azureDwSelectBuilder\n+                                    .append(\" ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION \");", "originalCommit": "37fd1a553291e8059eb34b71c0c784b9d2a235d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f48473f79fd20bd8047bfcc7be2de7277c1de7a9", "url": "https://github.com/microsoft/mssql-jdbc/commit/f48473f79fd20bd8047bfcc7be2de7277c1de7a9", "message": "Merge remote-tracking branch 'upstream/dev' into columninfo", "committedDate": "2020-06-10T00:27:22Z", "type": "commit"}, {"oid": "3879bf8d2d1ce672691f6438f059331f246811ad", "url": "https://github.com/microsoft/mssql-jdbc/commit/3879bf8d2d1ce672691f6438f059331f246811ad", "message": "review updates", "committedDate": "2020-06-10T01:28:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1NTU3OA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1348#discussion_r438255578", "bodyText": "Can you explain this, isn't the ORDER BY clause covered above? This 0 length check is meant to return an empty resultset if the user's query returned no results; added for consistency with normal SQL Server.\nEdit: nvm, I see why you need this.", "author": "rene-ye", "createdAt": "2020-06-10T16:27:10Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDatabaseMetaData.java", "diffHunk": "@@ -746,7 +747,10 @@ private static String EscapeIDName(String inID) throws SQLServerException {\n \n                     if (0 == azureDwSelectBuilder.length()) {\n                         azureDwSelectBuilder.append(generateAzureDWEmptyRS(getColumnsDWColumns));\n+                    } else {\n+                        azureDwSelectBuilder.append(\" ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION \");", "originalCommit": "3879bf8d2d1ce672691f6438f059331f246811ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}