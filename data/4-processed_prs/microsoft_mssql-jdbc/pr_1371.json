{"pr_number": 1371, "pr_title": "Fixed test failures when AE enabled", "pr_createdAt": "2020-06-24T20:52:05Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1371", "timeline": [{"oid": "c97b863c95385bdcd1afc897ef39cbebaf495578", "url": "https://github.com/microsoft/mssql-jdbc/commit/c97b863c95385bdcd1afc897ef39cbebaf495578", "message": "Fix AEv2 tests exclude for reqExternalSetup and cleanup (#1247)", "committedDate": "2020-02-05T19:03:48Z", "type": "commit"}, {"oid": "54b5a194e5d46552419c86e0d1f8c800f42d3de8", "url": "https://github.com/microsoft/mssql-jdbc/commit/54b5a194e5d46552419c86e0d1f8c800f42d3de8", "message": "Fix | Add null check for getObject() with LocalTime and LocalDate (#1250)", "committedDate": "2020-02-08T00:19:05Z", "type": "commit"}, {"oid": "672b7d67caae75250c53f82a760e8d3880e62a37", "url": "https://github.com/microsoft/mssql-jdbc/commit/672b7d67caae75250c53f82a760e8d3880e62a37", "message": "added all AKV tests to use reqExternalSetup tag so they will be skipped by default (#1254)\n\n* skip AKV test properly\r\n\r\n* removed enclave properties string to failed errors as enclave tests could be skipped", "committedDate": "2020-02-10T19:04:22Z", "type": "commit"}, {"oid": "3c3331b7b0ff1b27b1e80271bf9ffdc6aae7be79", "url": "https://github.com/microsoft/mssql-jdbc/commit/3c3331b7b0ff1b27b1e80271bf9ffdc6aae7be79", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-25T06:21:47Z", "type": "commit"}, {"oid": "e2c5640370daa89c0d8c1559b5791e99656f78c8", "url": "https://github.com/microsoft/mssql-jdbc/commit/e2c5640370daa89c0d8c1559b5791e99656f78c8", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-26T06:10:08Z", "type": "commit"}, {"oid": "aad696640378b75f3cb8cb24cc2fa299358db9ac", "url": "https://github.com/microsoft/mssql-jdbc/commit/aad696640378b75f3cb8cb24cc2fa299358db9ac", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-28T03:18:02Z", "type": "commit"}, {"oid": "92bf04c2787c3b2a704f641f50cb4a83193f1d6d", "url": "https://github.com/microsoft/mssql-jdbc/commit/92bf04c2787c3b2a704f641f50cb4a83193f1d6d", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-31T01:58:20Z", "type": "commit"}, {"oid": "3ba5ab72008501e23f43dbcbcc333775320ddafa", "url": "https://github.com/microsoft/mssql-jdbc/commit/3ba5ab72008501e23f43dbcbcc333775320ddafa", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-04T05:47:37Z", "type": "commit"}, {"oid": "d20823deffea162b2b17b079cc291f91269558aa", "url": "https://github.com/microsoft/mssql-jdbc/commit/d20823deffea162b2b17b079cc291f91269558aa", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-07T00:45:05Z", "type": "commit"}, {"oid": "4cc959f7e76eedbf49e30e5b92de43c86d7eb803", "url": "https://github.com/microsoft/mssql-jdbc/commit/4cc959f7e76eedbf49e30e5b92de43c86d7eb803", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-29T02:59:23Z", "type": "commit"}, {"oid": "7b301f8184b26da4d99b2feab8b2aea886c01cea", "url": "https://github.com/microsoft/mssql-jdbc/commit/7b301f8184b26da4d99b2feab8b2aea886c01cea", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-30T06:36:21Z", "type": "commit"}, {"oid": "56bcf139fe6acd87c41b3829b4f157c59bd9f873", "url": "https://github.com/microsoft/mssql-jdbc/commit/56bcf139fe6acd87c41b3829b4f157c59bd9f873", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-07T22:26:03Z", "type": "commit"}, {"oid": "744e0ca78e57bc6c0db98910a9066d5b583c6ba8", "url": "https://github.com/microsoft/mssql-jdbc/commit/744e0ca78e57bc6c0db98910a9066d5b583c6ba8", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-12T22:47:18Z", "type": "commit"}, {"oid": "df8fd41ffa6005b18b0e328593faaeb495ce6547", "url": "https://github.com/microsoft/mssql-jdbc/commit/df8fd41ffa6005b18b0e328593faaeb495ce6547", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-19T01:06:51Z", "type": "commit"}, {"oid": "652e68b110828db6b172c1b02df6a06ab04c2b59", "url": "https://github.com/microsoft/mssql-jdbc/commit/652e68b110828db6b172c1b02df6a06ab04c2b59", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-26T07:07:35Z", "type": "commit"}, {"oid": "53736db944298004a4a383be14ae83370ffab717", "url": "https://github.com/microsoft/mssql-jdbc/commit/53736db944298004a4a383be14ae83370ffab717", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-26T23:02:59Z", "type": "commit"}, {"oid": "9ba6a42285fcc046a0a68e110454b62d8f7f6657", "url": "https://github.com/microsoft/mssql-jdbc/commit/9ba6a42285fcc046a0a68e110454b62d8f7f6657", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-06-02T06:50:57Z", "type": "commit"}, {"oid": "6d156f728a1253dd469da1c6896189762b00097b", "url": "https://github.com/microsoft/mssql-jdbc/commit/6d156f728a1253dd469da1c6896189762b00097b", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-06-05T19:15:40Z", "type": "commit"}, {"oid": "e08ffe5f54050344920bc48d44dc8e04cd143866", "url": "https://github.com/microsoft/mssql-jdbc/commit/e08ffe5f54050344920bc48d44dc8e04cd143866", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-06-10T21:34:05Z", "type": "commit"}, {"oid": "6b6cab266b655c48858187f56071aa3e4ba87054", "url": "https://github.com/microsoft/mssql-jdbc/commit/6b6cab266b655c48858187f56071aa3e4ba87054", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-06-18T19:14:21Z", "type": "commit"}, {"oid": "68b3990ca68c2de7eec62fa916fda45def881f6a", "url": "https://github.com/microsoft/mssql-jdbc/commit/68b3990ca68c2de7eec62fa916fda45def881f6a", "message": "bamboofail", "committedDate": "2020-06-23T23:24:12Z", "type": "commit"}, {"oid": "e60bfe2fb3fe30eebedcb255b370f0fe77aa25cf", "url": "https://github.com/microsoft/mssql-jdbc/commit/e60bfe2fb3fe30eebedcb255b370f0fe77aa25cf", "message": "fixed typo", "committedDate": "2020-06-24T04:56:22Z", "type": "commit"}, {"oid": "1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "url": "https://github.com/microsoft/mssql-jdbc/commit/1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "message": "removed debug", "committedDate": "2020-06-24T20:50:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE0MTM0Ng==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r447141346", "bodyText": "It's not a real concern as it's a scenario that'd happen if someone really wanted to break this logic, but our driver takes the last instance of the value. So if you declare columnEncryptionSetting=enabled;columnEncryptionSetting=disabled, this logic would detect it's on even though it's off.", "author": "rene-ye", "createdAt": "2020-06-29T17:39:21Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/tvp/TVPResultSetCursorTest.java", "diffHunk": "@@ -224,7 +224,18 @@ public void testInvalidStoredProcedureName() throws SQLException {\n                 pstmt.execute();\n             } catch (SQLException e) {\n                 if (!e.getMessage().contains(TestResource.getResource(\"R_StoredProcedureNotFound\"))) {\n-                    fail(e.getMessage());\n+                    // diff error msg if AE enabled\n+                    int start = connectionString.toUpperCase().indexOf(Constants.COLUMN_ENCRYPTION_SETTING);", "originalCommit": "1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzOTk3Ng==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r447339976", "bodyText": "Looks like you are trying to check if AE is enabled. You can simply use ds.getColumnEncryptionSetting().", "author": "ulvii", "createdAt": "2020-06-30T00:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE0MTM0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MDA5Mg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r447340092", "bodyText": "Same here, use  ds.getColumnEncryptionSetting()", "author": "ulvii", "createdAt": "2020-06-30T00:41:34Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/statement/PreparedStatementTest.java", "diffHunk": "@@ -647,6 +648,17 @@ private void testStatementPoolingInternal(String mode) throws Exception {\n                 assertNotSame(0, handle);\n             }\n \n+            // AE has 1 more prepared statement handle as it calls sp_describe_parameter_encryption\n+            int start = connectionString.toUpperCase().indexOf(Constants.COLUMN_ENCRYPTION_SETTING);\n+            if (-1 != start) {", "originalCommit": "1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MDI3OA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r447340278", "bodyText": "Different error message if AE is enabled.", "author": "ulvii", "createdAt": "2020-06-30T00:42:21Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/tvp/TVPResultSetCursorTest.java", "diffHunk": "@@ -224,7 +224,18 @@ public void testInvalidStoredProcedureName() throws SQLException {\n                 pstmt.execute();\n             } catch (SQLException e) {\n                 if (!e.getMessage().contains(TestResource.getResource(\"R_StoredProcedureNotFound\"))) {\n-                    fail(e.getMessage());\n+                    // diff error msg if AE enabled", "originalCommit": "1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MDQwMg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r447340402", "bodyText": "Can you explain why you have to do this?", "author": "ulvii", "createdAt": "2020-06-30T00:42:48Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/preparedStatement/BatchExecutionWithBulkCopyTest.java", "diffHunk": "@@ -570,7 +571,7 @@ public void testIllegalNumberOfArgNoColumnList() throws Exception {\n \n             pstmt.executeBatch();\n             fail(TestResource.getResource(\"R_expectedExceptionNotThrown\"));\n-        } catch (BatchUpdateException e) {\n+        } catch (BatchUpdateException | SQLServerException e) {", "originalCommit": "1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMDQ2OQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r449320469", "bodyText": "fails thru a different code path for AE", "author": "lilgreenbird", "createdAt": "2020-07-03T00:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MDQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MDU4Mg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r447340582", "bodyText": "Can you explain why this error message is thrown?", "author": "ulvii", "createdAt": "2020-06-30T00:43:23Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/tvp/TVPResultSetCursorTest.java", "diffHunk": "@@ -224,7 +224,18 @@ public void testInvalidStoredProcedureName() throws SQLException {\n                 pstmt.execute();\n             } catch (SQLException e) {\n                 if (!e.getMessage().contains(TestResource.getResource(\"R_StoredProcedureNotFound\"))) {\n-                    fail(e.getMessage());\n+                    // diff error msg if AE enabled\n+                    int start = connectionString.toUpperCase().indexOf(Constants.COLUMN_ENCRYPTION_SETTING);\n+                    if (-1 != start) {\n+                        int end = connectionString.indexOf(\";\", start);\n+                        String value = connectionString.substring(\n+                                start + Constants.COLUMN_ENCRYPTION_SETTING.length() + 1,\n+                                (-1 != end) ? end : connectionString.length());\n+                        if (value.equalsIgnoreCase(Constants.ENABLED)\n+                                && !e.getMessage().contains(TestResource.getResource(\"R_incorrectSyntaxP0\"))) {", "originalCommit": "1a3a3435ec11b7816dc1dcd24d0e41340b87ea24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxNDE2MA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r449314160", "bodyText": "that's the error returned by sql server when columns are encrypted", "author": "lilgreenbird", "createdAt": "2020-07-02T23:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MDU4Mg=="}], "type": "inlineReview"}, {"oid": "fb1e7ab11b9503a2bba5e8c42ebe074db7921160", "url": "https://github.com/microsoft/mssql-jdbc/commit/fb1e7ab11b9503a2bba5e8c42ebe074db7921160", "message": "review updates", "committedDate": "2020-07-02T23:56:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcwMTIzMA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1371#discussion_r449701230", "bodyText": "Will this ever pass ? Don't you need to || (or)?", "author": "ulvii", "createdAt": "2020-07-03T20:49:33Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/tvp/TVPResultSetCursorTest.java", "diffHunk": "@@ -223,12 +223,14 @@ public void testInvalidStoredProcedureName() throws SQLException {\n                 pstmt.setStructured(1, tvpName, rs);\n                 pstmt.execute();\n             } catch (SQLException e) {\n-                if (!e.getMessage().contains(TestResource.getResource(\"R_StoredProcedureNotFound\"))) {\n+                if (!e.getMessage().contains(TestResource.getResource(\"R_StoredProcedureNotFound\"))\n+                        && !(ds.getColumnEncryptionSetting().equalsIgnoreCase(Constants.ENABLED)", "originalCommit": "fb1e7ab11b9503a2bba5e8c42ebe074db7921160", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}