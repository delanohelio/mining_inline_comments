{"pr_number": 1273, "pr_title": "TINKERPOP-2349 Migrate JSON serialization to System.Text.Json in Gremlin.NET", "pr_createdAt": "2020-04-01T10:01:27Z", "pr_url": "https://github.com/apache/tinkerpop/pull/1273", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyNTQ5NA==", "url": "https://github.com/apache/tinkerpop/pull/1273#discussion_r401525494", "bodyText": "I think there's no need to add netcoreapp3.0 as a target for the core project, given that netcoreapp3.0 implements netstandard2.0.", "author": "jorgebay", "createdAt": "2020-04-01T10:49:54Z", "path": "gremlin-dotnet/glv/Gremlin.Net.csproj.template", "diffHunk": "@@ -19,7 +19,7 @@ limitations under the License.\n <Project Sdk=\"Microsoft.NET.Sdk\">\n \n   <PropertyGroup Label=\"Build\">\n-    <TargetFramework>netstandard2.0</TargetFramework>\n+    <TargetFrameworks>netstandard2.0;netcoreapp3.0</TargetFrameworks>", "originalCommit": "2cbcbfb17539a20250893d5346e33dd3e66e10f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjE1Nw==", "url": "https://github.com/apache/tinkerpop/pull/1273#discussion_r401566157", "bodyText": "I wasn't sure here whether it makes sense or not. I thought that doing it like this is necessary to prevent the SDK from installing the NuGet package for System.Text.Json on .NET Core >= 3.0 as it's already included there. Or is that already detected automatically?", "author": "FlorianHockmann", "createdAt": "2020-04-01T12:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyNTQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5ODg2Nw==", "url": "https://github.com/apache/tinkerpop/pull/1273#discussion_r401598867", "bodyText": "It will be resolved automatically for netcoreapp3.0 users.", "author": "jorgebay", "createdAt": "2020-04-01T13:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyNTQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwMTI3OA==", "url": "https://github.com/apache/tinkerpop/pull/1273#discussion_r401601278", "bodyText": "Good to know. Then I'll remove this target again.", "author": "FlorianHockmann", "createdAt": "2020-04-01T13:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyNTQ5NA=="}], "type": "inlineReview"}, {"oid": "a1a8e1ec52a235bd5a62fc1009597a04a955dabe", "url": "https://github.com/apache/tinkerpop/commit/a1a8e1ec52a235bd5a62fc1009597a04a955dabe", "message": " TINKERPOP-2349 Migrate to System.Text.Json\n\nResults from a simple benchmark with BenchmarkDotNet showed that this\nimproves the performance of the deserialization roughly by a factor of\n2. The deserialization now also allocates far less memory, by a factor\nof ~7 which also results in less garbage collections.\nThe performance of the serialization however stayed basically the same.\nIt got even slightly slower by ~4% in this benchmark, but it also\nallocates a bit less memory (-12%). This seems acceptable in my opinion,\ngiven that it is only a very small increase, especially compared to the\ndifferences for the deserialization and because it allocates less\nmemory now.\n\nOutput from BenchmarkDotNet:\n\nBefore:\n\n|          Method |     Mean |    Error |   StdDev |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\n|---------------- |---------:|---------:|---------:|-------:|-------:|------:|----------:|\n|   Serialization | 22.41 us | 0.616 us | 0.659 us | 1.5564 |      - |     - |   9.72 KB |\n| Deserialization | 40.50 us | 1.075 us | 1.150 us | 6.3477 | 0.6104 |     - |  39.06 KB |\n\nAfter:\n\n|          Method |     Mean |    Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\n|---------------- |---------:|---------:|---------:|-------:|------:|------:|----------:|\n|   Serialization | 23.25 us | 0.103 us | 0.091 us | 1.3733 |     - |     - |   8.58 KB |\n| Deserialization | 25.89 us | 0.583 us | 0.545 us | 0.9155 |     - |     - |   5.74 KB |", "committedDate": "2020-04-01T13:25:49Z", "type": "forcePushed"}, {"oid": "0ea73362630a4f4a242964a0cb723bc89e90c9ca", "url": "https://github.com/apache/tinkerpop/commit/0ea73362630a4f4a242964a0cb723bc89e90c9ca", "message": " TINKERPOP-2349 Migrate to System.Text.Json\n\nResults from a simple benchmark with BenchmarkDotNet showed that this\nimproves the performance of the deserialization roughly by a factor of\n2. The deserialization now also allocates far less memory, by a factor\nof ~7 which also results in less garbage collections.\nThe performance of the serialization however stayed basically the same.\nIt got even slightly slower by ~4% in this benchmark, but it also\nallocates a bit less memory (-12%). This seems acceptable in my opinion,\ngiven that it is only a very small increase, especially compared to the\ndifferences for the deserialization and because it allocates less\nmemory now.\n\nOutput from BenchmarkDotNet:\n\nBefore:\n\n|          Method |     Mean |    Error |   StdDev |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\n|---------------- |---------:|---------:|---------:|-------:|-------:|------:|----------:|\n|   Serialization | 22.41 us | 0.616 us | 0.659 us | 1.5564 |      - |     - |   9.72 KB |\n| Deserialization | 40.50 us | 1.075 us | 1.150 us | 6.3477 | 0.6104 |     - |  39.06 KB |\n\nAfter:\n\n|          Method |     Mean |    Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\n|---------------- |---------:|---------:|---------:|-------:|------:|------:|----------:|\n|   Serialization | 23.25 us | 0.103 us | 0.091 us | 1.3733 |     - |     - |   8.58 KB |\n| Deserialization | 25.89 us | 0.583 us | 0.545 us | 0.9155 |     - |     - |   5.74 KB |", "committedDate": "2020-04-08T15:14:05Z", "type": "commit"}, {"oid": "0ea73362630a4f4a242964a0cb723bc89e90c9ca", "url": "https://github.com/apache/tinkerpop/commit/0ea73362630a4f4a242964a0cb723bc89e90c9ca", "message": " TINKERPOP-2349 Migrate to System.Text.Json\n\nResults from a simple benchmark with BenchmarkDotNet showed that this\nimproves the performance of the deserialization roughly by a factor of\n2. The deserialization now also allocates far less memory, by a factor\nof ~7 which also results in less garbage collections.\nThe performance of the serialization however stayed basically the same.\nIt got even slightly slower by ~4% in this benchmark, but it also\nallocates a bit less memory (-12%). This seems acceptable in my opinion,\ngiven that it is only a very small increase, especially compared to the\ndifferences for the deserialization and because it allocates less\nmemory now.\n\nOutput from BenchmarkDotNet:\n\nBefore:\n\n|          Method |     Mean |    Error |   StdDev |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\n|---------------- |---------:|---------:|---------:|-------:|-------:|------:|----------:|\n|   Serialization | 22.41 us | 0.616 us | 0.659 us | 1.5564 |      - |     - |   9.72 KB |\n| Deserialization | 40.50 us | 1.075 us | 1.150 us | 6.3477 | 0.6104 |     - |  39.06 KB |\n\nAfter:\n\n|          Method |     Mean |    Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\n|---------------- |---------:|---------:|---------:|-------:|------:|------:|----------:|\n|   Serialization | 23.25 us | 0.103 us | 0.091 us | 1.3733 |     - |     - |   8.58 KB |\n| Deserialization | 25.89 us | 0.583 us | 0.545 us | 0.9155 |     - |     - |   5.74 KB |", "committedDate": "2020-04-08T15:14:05Z", "type": "forcePushed"}]}