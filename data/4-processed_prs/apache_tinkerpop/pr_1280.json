{"pr_number": 1280, "pr_title": "TINKERPOP-2360 gremlin-python: fix up serializer out of range of int", "pr_createdAt": "2020-04-20T03:47:33Z", "pr_url": "https://github.com/apache/tinkerpop/pull/1280", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyMTE0Mg==", "url": "https://github.com/apache/tinkerpop/pull/1280#discussion_r411321142", "bodyText": "Thus far we've forced python users to be explicit and think in java terms, thus:\ng.V().has('age', long(851401972585122)).count()\nbut I suppose it's better if this were just handled automatically as it might yield less confusion and be more pythonic.  The test you added here is fine but please add a test here:\nhttps://github.com/apache/tinkerpop/blob/3.3-dev/gremlin-python/src/main/jython/tests/structure/io/test_graphsonV2d0.py#L306\nand here:\nhttps://github.com/apache/tinkerpop/blob/3.3-dev/gremlin-python/src/main/jython/tests/structure/io/test_graphsonV3d0.py#L357\nto more directly test GraphSON. Please do not remove the existing tests that use the old long() syntax as I think it's still worth testing that since it's something we will continue to support.  Just add new assertions for your new logic. I guess it wouldn't hurt to add tests to cover both positive and negative values in your range.", "author": "spmallette", "createdAt": "2020-04-20T12:02:10Z", "path": "gremlin-python/src/main/jython/tests/driver/test_client.py", "diffHunk": "@@ -129,6 +129,17 @@ def test_multi_conn_pool(client):\n     assert len(result_set.all().result()) == 6\n \n \n+def test_client_bytecode_with_int(client):\n+    g = Graph().traversal()\n+    t = g.V().has('age', 851401972585122).count()", "originalCommit": "3a9dd4b097f70911120ee2ab3981e28b26110c46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyOTgwNw==", "url": "https://github.com/apache/tinkerpop/pull/1280#discussion_r411329807", "bodyText": "en, it's about serialization, I will move UT", "author": "heljoyLiu", "createdAt": "2020-04-20T12:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyMTE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc0NjE5Nw==", "url": "https://github.com/apache/tinkerpop/pull/1280#discussion_r415746197", "bodyText": "Could we please take this opportunity to improve our unit testing in general:\n\nAdd tests for the negative ranges in the int/long/bigint serializers.\nWe validate long(2) which is in the range of int and coerces to Int64 but could you please add a test for something like long(851401972585122) which is in the range of long to cover that case.", "author": "spmallette", "createdAt": "2020-04-27T11:51:19Z", "path": "gremlin-python/src/main/jython/tests/structure/io/test_graphsonV2d0.py", "diffHunk": "@@ -307,6 +307,7 @@ def test_numbers(self):\n         assert {\"@type\": \"gx:Byte\", \"@value\": 1} == json.loads(self.graphson_writer.writeObject(int.__new__(SingleByte, 1)))\n         assert {\"@type\": \"g:Int64\", \"@value\": 2} == json.loads(self.graphson_writer.writeObject(long(2)))\n         assert {\"@type\": \"g:Int32\", \"@value\": 1} == json.loads(self.graphson_writer.writeObject(1))\n+        assert {\"@type\": \"g:Int64\", \"@value\": 851401972585122} == json.loads(self.graphson_writer.writeObject(851401972585122))", "originalCommit": "1c08cce3b57888ebd2620de24175466f19498302", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7210d7a4b11b97a6b0051c117d9290c2143e53e6", "url": "https://github.com/apache/tinkerpop/commit/7210d7a4b11b97a6b0051c117d9290c2143e53e6", "message": "TINKERPOP-2360 gremlin-python: fix up serializer out of range of int", "committedDate": "2020-04-28T02:03:03Z", "type": "commit"}, {"oid": "7210d7a4b11b97a6b0051c117d9290c2143e53e6", "url": "https://github.com/apache/tinkerpop/commit/7210d7a4b11b97a6b0051c117d9290c2143e53e6", "message": "TINKERPOP-2360 gremlin-python: fix up serializer out of range of int", "committedDate": "2020-04-28T02:03:03Z", "type": "forcePushed"}]}