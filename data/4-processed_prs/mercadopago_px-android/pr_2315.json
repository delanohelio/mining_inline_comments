{"pr_number": 2315, "pr_title": "[feature][ci size] new payment congrats", "pr_createdAt": "2020-09-04T15:20:02Z", "pr_url": "https://github.com/mercadopago/px-android/pull/2315", "timeline": [{"oid": "66e4d7ff5c75bc848a5e5943792b24fe9391e8bd", "url": "https://github.com/mercadopago/px-android/commit/66e4d7ff5c75bc848a5e5943792b24fe9391e8bd", "message": "PaymentCongrats", "committedDate": "2020-08-24T12:56:59Z", "type": "commit"}, {"oid": "76cc491c5cdfd3dafc54ae8b1520a11965cffd5f", "url": "https://github.com/mercadopago/px-android/commit/76cc491c5cdfd3dafc54ae8b1520a11965cffd5f", "message": "Merge pull request #2298 from nmanuelidesML/feature/payment-congrats-rebase\n\nPaymentCongrats Rebase", "committedDate": "2020-08-24T14:42:17Z", "type": "commit"}, {"oid": "673ae164309e86c907f0c8afacdc3f7d08749f78", "url": "https://github.com/mercadopago/px-android/commit/673ae164309e86c907f0c8afacdc3f7d08749f78", "message": "fixing tracking", "committedDate": "2020-08-26T13:43:48Z", "type": "commit"}, {"oid": "2419433ece9e22b7e7c430549f2c2683877a4aea", "url": "https://github.com/mercadopago/px-android/commit/2419433ece9e22b7e7c430549f2c2683877a4aea", "message": "Merge pull request #2289 from nmanuelidesML/feature/fixing_tracking\n\nFixing tracking in new congrats", "committedDate": "2020-08-26T13:45:09Z", "type": "commit"}, {"oid": "117e6793661a0ea38847d399a4d949c168cd9c6c", "url": "https://github.com/mercadopago/px-android/commit/117e6793661a0ea38847d399a4d949c168cd9c6c", "message": "Fixing NPE on tracking data", "committedDate": "2020-08-26T16:42:26Z", "type": "commit"}, {"oid": "8cc888e519607a90970ed370cd00e6710d03cbc4", "url": "https://github.com/mercadopago/px-android/commit/8cc888e519607a90970ed370cd00e6710d03cbc4", "message": "Merge pull request #2301 from mmunozpatinomeli/feature/fixing_NPE_tracking\n\nFixing NPE on tracking data", "committedDate": "2020-08-26T17:10:04Z", "type": "commit"}, {"oid": "9f642cde226d7d08c3aca7e32c9f0a87c07dfc5a", "url": "https://github.com/mercadopago/px-android/commit/9f642cde226d7d08c3aca7e32c9f0a87c07dfc5a", "message": "Added autoReturn support", "committedDate": "2020-08-27T13:30:22Z", "type": "commit"}, {"oid": "8747afc7e1fd358668a1062906701a96157b942e", "url": "https://github.com/mercadopago/px-android/commit/8747afc7e1fd358668a1062906701a96157b942e", "message": "Merge pull request #2300 from mmunozpatinomeli/feauture/payment_congrats_back_url_support\n\n[PaymentCongrats] Added autoReturn support", "committedDate": "2020-08-27T14:16:26Z", "type": "commit"}, {"oid": "02a3adfde3eb1af2659e29945c241b645e7cfb60", "url": "https://github.com/mercadopago/px-android/commit/02a3adfde3eb1af2659e29945c241b645e7cfb60", "message": "Added custom sorting", "committedDate": "2020-08-27T19:02:34Z", "type": "commit"}, {"oid": "6a95bcfd645bb260eed08f1010d3c22346955a55", "url": "https://github.com/mercadopago/px-android/commit/6a95bcfd645bb260eed08f1010d3c22346955a55", "message": "Merge pull request #2305 from mmunozpatinomeli/feature/add_custon_sorting\n\n[PaymentCongrats] Adding custon sorting", "committedDate": "2020-08-27T19:33:10Z", "type": "commit"}, {"oid": "24468d06e2947f478382167ef54dbc6b06f8e81c", "url": "https://github.com/mercadopago/px-android/commit/24468d06e2947f478382167ef54dbc6b06f8e81c", "message": "adding sessionId, flow and flowExtrInfo to tracking", "committedDate": "2020-08-28T19:47:11Z", "type": "commit"}, {"oid": "c2a781f58796b3341d6b4283945493696db297f6", "url": "https://github.com/mercadopago/px-android/commit/c2a781f58796b3341d6b4283945493696db297f6", "message": "Merge pull request #2306 from nmanuelidesML/feature/adding_flow_detail\n\nSe agrega sessionId, flow y flowExtraInfo a los datos de trackeo", "committedDate": "2020-08-31T15:04:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0NzU1Ng==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483847556", "bodyText": "\ud83d\udc40", "author": "cgaggino", "createdAt": "2020-09-04T21:17:47Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultActivity.java", "diffHunk": "@@ -86,9 +67,10 @@ protected void onStop() {\n \n     @NonNull\n     private BusinessPaymentResultPresenter createPresenter() {\n-        final BusinessPaymentModel model = getIntent().getParcelableExtra(EXTRA_BUSINESS_PAYMENT_MODEL);\n-        return new BusinessPaymentResultPresenter(Session.getInstance().getConfigurationModule().getPaymentSettings(),\n-            model, BehaviourProvider.getFlowBehaviour(), isMP(this));\n+        final PaymentCongratsModel model = getIntent().getParcelableExtra(PAYMENT_CONGRATS);\n+         //TODO FIX PAYMENTSETTINGS PARAM\n+        return new BusinessPaymentResultPresenter(/*null,*/model,", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzNzQxNw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484437417", "bodyText": "jaaaa comentarios que se nos ha pasado borrar!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T13:38:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0NzU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3NTYwNg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r486575606", "bodyText": "Esto sigue ac\u00e1! \ud83d\udc40", "author": "guchito9", "createdAt": "2020-09-10T19:12:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0NzU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0OTQyNg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483849426", "bodyText": "Podemos llamar esto model? ya que no es un payment tecnicamente hablando", "author": "cgaggino", "createdAt": "2020-09-04T21:24:19Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.java", "diffHunk": "@@ -25,48 +25,44 @@\n     }\n \n     @Override\n-    public BusinessPaymentResultViewModel map(@NonNull final BusinessPaymentModel model) {\n-        final PaymentResultHeader.Model headerModel = getHeaderModel(model.getPayment());\n+    public BusinessPaymentResultViewModel map(@NonNull final PaymentCongratsModel model) {\n+        final PaymentResultHeader.Model headerModel = getHeaderModel(model);\n         final PaymentResultBody.Model bodyModel = getBodyModel(model);\n         return new BusinessPaymentResultViewModel(headerModel, bodyModel,\n-            model.getPayment().getPrimaryAction(), model.getPayment().getSecondaryAction(),\n-            RedirectHelper.INSTANCE.shouldAutoReturn(autoReturn, model.getPayment().getPaymentStatus()));\n+            model.getFooterMainAction(), model.getFooterSecondaryAction(),\n+            RedirectHelper.INSTANCE.shouldAutoReturn(autoReturn, model.getCongratsType().name));\n     }\n \n     @NonNull\n-    private PaymentResultBody.Model getBodyModel(@NonNull final BusinessPaymentModel model) {\n-        final BusinessPayment payment = model.getPayment();\n+    private PaymentResultBody.Model getBodyModel(@NonNull final PaymentCongratsModel model) {\n         final List<PaymentResultMethod.Model> methodModels = new ArrayList<>();\n-        if (payment.shouldShowPaymentMethod()) {\n-            for (final PaymentData paymentData : model.getPaymentResult().getPaymentDataList()) {\n-                methodModels.add(PaymentResultMethod.Model.with(paymentData, model.getCurrency(),\n-                    payment.getStatementDescription()));\n+        if (model.getShouldShowPaymentMethod()) {\n+            for (final PaymentInfo paymentInfo : model.getPaymentsInfo()) {\n+                methodModels.add(PaymentResultMethod.Model.with(paymentInfo,\n+                    model.getStatementDescription()));\n             }\n         }\n-\n-        final PaymentResultType type = PaymentResultType.from(payment.getDecorator());\n+        final PaymentCongratsModel.CongratsType type = model.getCongratsType();\n         return new PaymentResultBody.Model.Builder()\n             .setMethodModels(methodModels)\n-            .setCongratsViewModel(new CongratsResponseMapper(new BusinessPaymentResultTracker())\n-                .map(model.getCongratsResponse()))\n-            .setReceiptId((type == PaymentResultType.APPROVED && payment.shouldShowReceipt()) ? payment.getReceipt() : null)\n-            .setHelp(payment.getHelp())\n-            .setStatement(payment.getStatementDescription())\n-            .setTopFragment(payment.getTopFragment())\n-            .setBottomFragment(payment.getBottomFragment())\n-            .setImportantFragment(payment.getImportantFragment())\n+            .setCongratsViewModel(new PaymentCongratsResponseMapper(new BusinessPaymentResultTracker())\n+                .map(model.getPaymentCongratsResponse()))\n+            .setReceiptId((type == PaymentCongratsModel.CongratsType.APPROVED && model.getShouldShowReceipt()) ? String\n+                .valueOf(model.getPaymentId()) : null)\n+            .setHelp(model.getHelp())\n+            .setStatement(model.getStatementDescription())\n+            .setTopFragment(model.getTopFragment())\n+            .setBottomFragment(model.getBottomFragment())\n+            .setImportantFragment(model.getImportantFragment())\n             .build();\n     }\n \n     @NonNull\n-    private PaymentResultHeader.Model getHeaderModel(@NonNull final BusinessPayment payment) {\n+    private PaymentResultHeader.Model getHeaderModel(@NonNull final PaymentCongratsModel payment) {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0OTk0MA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483849940", "bodyText": "\ud83d\udc40", "author": "cgaggino", "createdAt": "2020-09-04T21:26:02Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -29,22 +27,23 @@\n import com.mercadopago.android.px.tracking.internal.events.ViewReceiptEvent;\n import com.mercadopago.android.px.tracking.internal.views.ResultViewTrack;\n import kotlin.Unit;\n+import org.jetbrains.annotations.NotNull;\n \n /* default */ class BusinessPaymentResultPresenter extends BasePresenter<BusinessPaymentResultContract.View>\n     implements ActionDispatcher, BusinessPaymentResultContract.Presenter, PaymentResultBody.Listener {\n \n-    @NonNull private final PaymentSettingRepository paymentSettings;\n-    private final BusinessPaymentModel model;\n+    private final PaymentCongratsModel model;\n+    //@NonNull private final PaymentSettingRepository paymentSettings;", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0MDI3Mw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484440273", "bodyText": "fixed!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T13:44:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg0OTk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDEwMQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483850101", "bodyText": "Esto deber\u00eda ser non null, no?", "author": "cgaggino", "createdAt": "2020-09-04T21:26:34Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -29,22 +27,23 @@\n import com.mercadopago.android.px.tracking.internal.events.ViewReceiptEvent;\n import com.mercadopago.android.px.tracking.internal.views.ResultViewTrack;\n import kotlin.Unit;\n+import org.jetbrains.annotations.NotNull;\n \n /* default */ class BusinessPaymentResultPresenter extends BasePresenter<BusinessPaymentResultContract.View>\n     implements ActionDispatcher, BusinessPaymentResultContract.Presenter, PaymentResultBody.Listener {\n \n-    @NonNull private final PaymentSettingRepository paymentSettings;\n-    private final BusinessPaymentModel model;\n+    private final PaymentCongratsModel model;", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0MDE1MQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484440151", "bodyText": "si, exacto!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T13:44:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDIyNg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483850226", "bodyText": "\ud83d\udc40", "author": "cgaggino", "createdAt": "2020-09-04T21:26:57Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -29,22 +27,23 @@\n import com.mercadopago.android.px.tracking.internal.events.ViewReceiptEvent;\n import com.mercadopago.android.px.tracking.internal.views.ResultViewTrack;\n import kotlin.Unit;\n+import org.jetbrains.annotations.NotNull;\n \n /* default */ class BusinessPaymentResultPresenter extends BasePresenter<BusinessPaymentResultContract.View>\n     implements ActionDispatcher, BusinessPaymentResultContract.Presenter, PaymentResultBody.Listener {\n \n-    @NonNull private final PaymentSettingRepository paymentSettings;\n-    private final BusinessPaymentModel model;\n+    private final PaymentCongratsModel model;\n+    //@NonNull private final PaymentSettingRepository paymentSettings;\n     private final ResultViewTrack viewTracker;\n     private final FlowBehaviour flowBehaviour;\n     @Nullable private CongratsAutoReturn.Timer autoReturnTimer;\n \n-    /* default */ BusinessPaymentResultPresenter(@NonNull final PaymentSettingRepository paymentSettings,\n-        @NonNull final BusinessPaymentModel model, @NonNull final FlowBehaviour flowBehaviour, final boolean isMP) {\n-        this.paymentSettings = paymentSettings;\n+    /* default */ BusinessPaymentResultPresenter(/*@NonNull final PaymentSettingRepository paymentSettings,*/", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0MDMxOA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484440318", "bodyText": "fixed!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T13:44:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDIyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDY0NA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483850644", "bodyText": "podemos hacer el getResult directamente en la llamada", "author": "cgaggino", "createdAt": "2020-09-04T21:28:27Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -56,7 +55,8 @@ public void attachView(final BusinessPaymentResultContract.View view) {\n     @Override\n     public void onFreshStart() {\n         viewTracker.track();\n-        flowBehaviour.trackConversion(new FlowBehaviourResultMapper().map(model.getPayment()));\n+        final FlowBehaviour.Result result = getResult();\n+        flowBehaviour.trackConversion(result);", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDcwNw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483850707", "bodyText": "idem", "author": "cgaggino", "createdAt": "2020-09-04T21:28:37Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -71,6 +71,26 @@ public void onStop() {\n         if (autoReturnTimer != null) {\n             autoReturnTimer.cancel();\n         }\n+        viewTracker.track();\n+        final FlowBehaviour.Result result = getResult();\n+        flowBehaviour.trackConversion(result);", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5MTcyNg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484491726", "bodyText": "fixed!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T15:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MDcwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MTEyOQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483851129", "bodyText": "podemos hacer otro mapper como lo era FlowBehaviourResultMapper", "author": "cgaggino", "createdAt": "2020-09-04T21:29:58Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -71,6 +71,26 @@ public void onStop() {\n         if (autoReturnTimer != null) {\n             autoReturnTimer.cancel();\n         }\n+        viewTracker.track();\n+        final FlowBehaviour.Result result = getResult();\n+        flowBehaviour.trackConversion(result);\n+    }\n+\n+    @NotNull\n+    private FlowBehaviour.Result getResult() {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5MTY2MA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484491660", "bodyText": "si! ah\u00ed ya agregu\u00e9 el mapper nuevo", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T15:24:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MTEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1MTYxMA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483851610", "bodyText": "pongamos los nombres de clases y variables consistentes, podemos cambiar a expenseSplit", "author": "cgaggino", "createdAt": "2020-09-04T21:31:35Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -160,9 +179,9 @@ public void onClickDiscountItem(final int index, @Nullable final String deepLink\n \n     @Override\n     public void onClickMoneySplit() {\n-        final CongratsResponse.MoneySplit moneySplit = model.getCongratsResponse().getMoneySplit();\n+        final PaymentCongratsResponse.ExpenseSplit moneySplit = model.getPaymentCongratsResponse().getExpenseSplit();", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NTE4NQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483855185", "bodyText": "Nosotros usamos como convenci\u00f3n que el mapper tiene el nombre del objeto al que mapea, es decir este se llamar\u00eda PaymentCongratsResponseMapper, lo ven muy complicado cambiarlos?", "author": "cgaggino", "createdAt": "2020-09-04T21:44:03Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/CongratsResponseMapper.java", "diffHunk": "@@ -1,314 +1,106 @@\n package com.mercadopago.android.px.internal.features.business_result;\n \n import androidx.annotation.NonNull;\n-import com.mercadolibre.android.mlbusinesscomponents.common.MLBusinessSingleItem;\n-import com.mercadolibre.android.mlbusinesscomponents.components.actioncard.MLBusinessActionCardViewData;\n-import com.mercadolibre.android.mlbusinesscomponents.components.common.downloadapp.MLBusinessDownloadAppData;\n-import com.mercadolibre.android.mlbusinesscomponents.components.common.downloadapp.MLBusinessDownloadAppView;\n-import com.mercadolibre.android.mlbusinesscomponents.components.crossselling.MLBusinessCrossSellingBoxData;\n-import com.mercadolibre.android.mlbusinesscomponents.components.discount.MLBusinessDiscountBoxData;\n-import com.mercadolibre.android.mlbusinesscomponents.components.discount.MLBusinessDiscountTracker;\n-import com.mercadolibre.android.mlbusinesscomponents.components.loyalty.MLBusinessLoyaltyRingData;\n-import com.mercadolibre.android.mlbusinesscomponents.components.touchpoint.domain.model.AdditionalEdgeInsets;\n-import com.mercadolibre.android.mlbusinesscomponents.components.touchpoint.domain.response.MLBusinessTouchpointResponse;\n-import com.mercadolibre.android.mlbusinesscomponents.components.touchpoint.tracking.MLBusinessTouchpointTracker;\n-import com.mercadopago.android.px.internal.util.JsonUtil;\n+import androidx.annotation.Nullable;\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse;\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsText;\n import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper;\n import com.mercadopago.android.px.model.internal.Action;\n import com.mercadopago.android.px.model.internal.CongratsResponse;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.LinkedList;\n+import java.util.ArrayList;\n import java.util.List;\n-import java.util.Map;\n-import javax.annotation.Nullable;\n \n-public class CongratsResponseMapper extends Mapper<CongratsResponse, CongratsViewModel> {\n-\n-    /* default */ final BusinessPaymentResultTracker discountTracker;\n-\n-    /**\n-     * Constructor\n-     *\n-     * @param discountTracker A {@link BusinessPaymentResultTracker}\n-     */\n-    public CongratsResponseMapper(final BusinessPaymentResultTracker discountTracker) {\n-        this.discountTracker = discountTracker;\n-    }\n+public class CongratsResponseMapper extends Mapper<CongratsResponse, PaymentCongratsResponse> {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NjEwNQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483856105", "bodyText": "el mapeo recuerden hacerlo en el viewmodel y que al fragment le llegue el modelo ya mapeado", "author": "cgaggino", "createdAt": "2020-09-04T21:47:20Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonFragment.kt", "diffHunk": "@@ -100,8 +101,7 @@ class PayButtonFragment : Fragment(), PayButton.View, SecurityValidationHandler\n             is UIResult.VisualProcessorResult -> PaymentProcessorActivity.start(this, REQ_CODE_PAYMENT_PROCESSOR)\n             is UIError.ConnectionError -> showSnackBar(stateUI.error)\n             is UIResult.PaymentResult -> PaymentResultActivity.start(this, REQ_CODE_CONGRATS, stateUI.model)\n-            is UIResult.BusinessPaymentResult ->\n-                BusinessPaymentResultActivity.start(this, REQ_CODE_CONGRATS, stateUI.model)\n+            is UIResult.BusinessPaymentResult -> PaymentCongrats.show(PaymentCongratsModelMapper().map(stateUI.model), activity, REQ_CODE_CONGRATS)", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3ODc2Mg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485178762", "bodyText": "perd\u00f3n, no termino de entender c\u00f3mo ser\u00eda, cu\u00e1l es el viewModel que me dec\u00eds?", "author": "mmunozpatinomeli", "createdAt": "2020-09-08T20:30:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NjEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4MjIxMw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485182213", "bodyText": "El PayButtonViewModel, que viene a ser el presenter de esta vista", "author": "guchito9", "createdAt": "2020-09-08T20:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NjEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYyNDIwMA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485624200", "bodyText": "guche, entiendo que era algo as\u00ed lo que dec\u00edas, as\u00ed qued\u00f3 ahora https://github.com/mercadopago/px-android/pull/2318/files#diff-29a5439ac7ecad72ccf2ba7ad6bc6014R235", "author": "mmunozpatinomeli", "createdAt": "2020-09-09T13:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NjEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NzYzNQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483857635", "bodyText": "el initialized = true ya no va mas, se puede borrar esta linea", "author": "cgaggino", "createdAt": "2020-09-04T21:49:57Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/di/Session.java", "diffHunk": "@@ -152,6 +153,15 @@ public void init(@NonNull final MercadoPagoCardStorage mercadoPagoCardStorage) {\n         initialized = true;\n     }\n \n+    public void init(@NonNull final PaymentCongratsModel paymentCongratsModel) {\n+        initialized = true;", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMzk1MQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484433951", "bodyText": "Si! ese cambio entra ahora en el rebase!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T13:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1NzYzNQ=="}], "type": "inlineReview"}, {"oid": "c2438301ad5368c6a581ce724e019cf414c05d1f", "url": "https://github.com/mercadopago/px-android/commit/c2438301ad5368c6a581ce724e019cf414c05d1f", "message": "Rebase and iconId added", "committedDate": "2020-09-04T21:50:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1ODI5MA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483858290", "bodyText": "esto deberia estar en la test app, no en el m\u00f3dulo de px-checkout", "author": "cgaggino", "createdAt": "2020-09-04T21:50:45Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/PaymentCongratsMock.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats;\n+\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PXPaymentCongratsTracking;\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel;\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse;\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentInfo;\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public final class PaymentCongratsMock {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMDM3MQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484500371", "bodyText": "la clase moverla por completo a la testApp ser\u00eda no?", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T15:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1ODI5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMTQ4Mw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484501483", "bodyText": "As\u00ed es", "author": "guchito9", "createdAt": "2020-09-07T15:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1ODI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1OTk3Mg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483859972", "bodyText": "ac\u00e1 podemos usar directamente el json util tambien, parcel.writeString(JsonUtil.toJson(flowExtraInfo))", "author": "cgaggino", "createdAt": "2020-09-04T21:54:38Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PXPaymentCongratsTracking.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import com.mercadopago.android.px.internal.extensions.readBigDecimal\n+import com.mercadopago.android.px.internal.extensions.writeBigDecimal\n+import com.mercadopago.android.px.internal.util.JsonUtil\n+import org.json.JSONObject\n+import java.math.BigDecimal\n+\n+data class PXPaymentCongratsTracking(\n+        val campaignId: String?,\n+        val currencyId: String?,\n+        val paymentStatusDetail: String?,\n+        val paymentId: Long?,\n+        val totalAmount: BigDecimal?,\n+        val flowExtraInfo: Map<String, Any>? = HashMap(),\n+        val flow: String?,\n+        val sessionId: String?\n+) : Parcelable {\n+\n+    constructor(parcel: Parcel) : this(\n+            parcel.readString(),\n+            parcel.readString(),\n+            parcel.readString(),\n+            parcel.readValue(Long::class.java.classLoader) as? Long,\n+            parcel.readBigDecimal(),\n+            JsonUtil.getMapFromJson(parcel.readString()),\n+            parcel.readString(),\n+            parcel.readString()\n+    )\n+\n+\n+    override fun writeToParcel(parcel: Parcel, flags: Int) {\n+        parcel.writeString(campaignId)\n+        parcel.writeString(currencyId)\n+        parcel.writeString(paymentStatusDetail)\n+        parcel.writeValue(paymentId)\n+        parcel.writeBigDecimal(totalAmount)\n+        val flowExtraInfoString: String? = JSONObject(flowExtraInfo).toString()\n+        parcel.writeString(flowExtraInfoString)", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2MzE1OA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483863158", "bodyText": "podemos usar directamente los de ResultViewTrack y hacerlos publicos", "author": "cgaggino", "createdAt": "2020-09-04T22:07:09Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentCongratsModel.java", "diffHunk": "@@ -0,0 +1,683 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import android.os.Bundle;\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import com.mercadopago.android.px.internal.util.TextUtil;\n+import com.mercadopago.android.px.model.ExitAction;\n+import com.mercadopago.android.px.model.ExternalFragment;\n+import com.mercadopago.android.px.model.PaymentData;\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class PaymentCongratsModel implements Parcelable {\n+    public static final Parcelable.Creator<PaymentCongratsModel> CREATOR =\n+        new Parcelable.Creator<PaymentCongratsModel>() {\n+            @Override\n+            public PaymentCongratsModel createFromParcel(final Parcel source) {\n+                return new PaymentCongratsModel(source);\n+            }\n+\n+            @Override\n+            public PaymentCongratsModel[] newArray(final int size) {\n+                return new PaymentCongratsModel[size];\n+            }\n+        };\n+\n+    public static final String SUCCESS = \"success\";\n+    public static final String PENDING = \"further_action_needed\";\n+    public static final String ERROR = \"error\";\n+    public static final String UNKNOWN = \"unknown\";", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2MzQ1NQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483863455", "bodyText": "este dato parece unicamente de tracking, les parece bien meterlo dentro de PXPaymentCongratsTracking ? para que no se confunda conque es el status posta del pago", "author": "cgaggino", "createdAt": "2020-09-04T22:08:22Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentCongratsModel.java", "diffHunk": "@@ -0,0 +1,683 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import android.os.Bundle;\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import com.mercadopago.android.px.internal.util.TextUtil;\n+import com.mercadopago.android.px.model.ExitAction;\n+import com.mercadopago.android.px.model.ExternalFragment;\n+import com.mercadopago.android.px.model.PaymentData;\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class PaymentCongratsModel implements Parcelable {\n+    public static final Parcelable.Creator<PaymentCongratsModel> CREATOR =\n+        new Parcelable.Creator<PaymentCongratsModel>() {\n+            @Override\n+            public PaymentCongratsModel createFromParcel(final Parcel source) {\n+                return new PaymentCongratsModel(source);\n+            }\n+\n+            @Override\n+            public PaymentCongratsModel[] newArray(final int size) {\n+                return new PaymentCongratsModel[size];\n+            }\n+        };\n+\n+    public static final String SUCCESS = \"success\";\n+    public static final String PENDING = \"further_action_needed\";\n+    public static final String ERROR = \"error\";\n+    public static final String UNKNOWN = \"unknown\";\n+\n+    //Basic data\n+    @NonNull private final CongratsType congratsType;\n+    @NonNull private final String title;\n+    @Nullable private final String subtitle;\n+    @NonNull private final String imageUrl;\n+    @Nullable private final String help;\n+    private final int iconId;\n+    @Nullable private final String statementDescription;\n+    private final boolean shouldShowPaymentMethod;\n+    @NonNull private final List<PaymentInfo> paymentsInfo;\n+\n+    //Receipt data\n+    private final boolean shouldShowReceipt;\n+\n+    // Exit Buttons\n+    @Nullable private final ExitAction footerMainAction;\n+    @Nullable private final ExitAction footerSecondaryAction;\n+    // custom views for integrators\n+    @Nullable private final ExternalFragment topFragment;\n+    @Nullable private final ExternalFragment bottomFragment;\n+    @Nullable private final ExternalFragment importantFragment;\n+    @Nullable private final PaymentCongratsResponse paymentCongratsResponse;\n+\n+    //Internal PX data\n+    @Nullable private final String autoReturn;\n+\n+    //Internal PX Tracking data\n+    @Nullable private final Long paymentId;\n+    @NonNull private final PXPaymentCongratsTracking pxPaymentCongratsTracking;\n+    @NonNull private final String paymentStatus;", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4MTUwNg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485181506", "bodyText": "Eso est\u00e1 as\u00ed ordenado porque fue la soluci\u00f3n que encontramos para el hecho de que algunos datos de trackeo nos lo tiene que pasar el integrador y otros s\u00f3lo est\u00e1n en el flujo de CHO de PX... dada esta situaci\u00f3n hicimos que el objeto PXPaymentCongratsTracking sea p\u00fablico, y en el mismo los integradores agregan los datos que necesitamos para trackear... los datos que est\u00e1n afuera del PXPaymentCongratsTracking son datos que se trackean para el CHO de PX (el flujo interno)... osea un integrador s\u00f3lo ver\u00eda el PXPaymentCongratsTracking, no los otros datos", "author": "mmunozpatinomeli", "createdAt": "2020-09-08T20:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2MzQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NDYwMw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483864603", "bodyText": "les parece poner getTrackingCongratsStatus o algo asi? que se entienda que lo que estamos sacando es ese dato, mappedResult puede confundir a primera lectura", "author": "cgaggino", "createdAt": "2020-09-04T22:13:03Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentCongratsModelMapper.java", "diffHunk": "@@ -0,0 +1,152 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import androidx.annotation.NonNull;\n+import com.mercadopago.android.px.internal.di.Session;\n+import com.mercadopago.android.px.internal.features.business_result.CongratsResponseMapper;\n+import com.mercadopago.android.px.internal.repository.PaymentSettingRepository;\n+import com.mercadopago.android.px.internal.util.CurrenciesUtil;\n+import com.mercadopago.android.px.internal.util.PaymentDataHelper;\n+import com.mercadopago.android.px.internal.viewmodel.BusinessPaymentModel;\n+import com.mercadopago.android.px.model.BusinessPayment;\n+import com.mercadopago.android.px.model.Currency;\n+import com.mercadopago.android.px.model.PaymentData;\n+import com.mercadopago.android.px.model.PaymentResult;\n+import java.math.BigDecimal;\n+\n+public class PaymentCongratsModelMapper {\n+\n+    /**\n+     * Takes a BusinessPaymentModel and outputs a PaymentCongratsModel\n+     *\n+     * @param businessPaymentModel the data to be converted\n+     * @return a paymentCongratsModel built from a businessPaymentModel\n+     */\n+    public PaymentCongratsModel map(final BusinessPaymentModel businessPaymentModel) {\n+\n+        final PaymentSettingRepository paymentSettings = Session.getInstance().getConfigurationModule().getPaymentSettings();\n+\n+        final PaymentCongratsResponse paymentCongratsResponse =\n+            new CongratsResponseMapper().map(businessPaymentModel.getCongratsResponse());\n+        final BusinessPayment businessPayment = businessPaymentModel.getPayment();\n+        final PXPaymentCongratsTracking tracking = new PXPaymentCongratsTracking(\n+            businessPaymentModel.getPaymentResult().getPaymentData().getCampaign() != null ? businessPaymentModel\n+                .getPaymentResult().getPaymentData().getCampaign().getId() : \"\",\n+            businessPaymentModel.getCurrency().getId(),\n+            businessPayment.getPaymentStatusDetail(),\n+            businessPaymentModel.getPaymentResult().getPaymentId(),\n+            Session.getInstance().getConfigurationModule().getPaymentSettings().getCheckoutPreference()\n+                .getTotalAmount(),\n+            Session.getInstance().getConfigurationModule().getTrackingRepository().getFlowDetail(),\n+            Session.getInstance().getConfigurationModule().getTrackingRepository().getFlowId(),\n+            Session.getInstance().getConfigurationModule().getTrackingRepository().getSessionId()\n+        );\n+        final PaymentCongratsModel.Builder builder = new PaymentCongratsModel.Builder()\n+            .withTracking(tracking)\n+            .withPaymentStatus(getMappedResult(businessPaymentModel.getPaymentResult()))\n+            .withDiscountCouponsAmount(\n+                PaymentDataHelper.getTotalDiscountAmount(businessPaymentModel.getPaymentResult().getPaymentDataList()))\n+            .withCongratsType(\n+                PaymentCongratsModel.CongratsType.fromName(businessPayment.getPaymentStatus()))\n+            .withCrossSelling(paymentCongratsResponse.getCrossSellings())\n+            .withHeader(businessPayment.getTitle(), businessPayment.getImageUrl())\n+            .withShouldShowPaymentMethod(businessPayment.shouldShowPaymentMethod())\n+            .withIconId(businessPayment.getIcon())\n+            .withPaymentData(businessPaymentModel.getPaymentResult().getPaymentData())\n+            .withIconId(businessPayment.getIcon())\n+            .withAutoReturn(paymentSettings.getCheckoutPreference().getAutoReturn())\n+            .withCustomSorting(businessPaymentModel.getCongratsResponse().hasCustomOrder());\n+\n+        if (!businessPaymentModel.getPaymentResult().getPaymentDataList().isEmpty()) {\n+            builder.withPaymentMethodInfo(\n+                getPaymentsInfo(businessPaymentModel.getPaymentResult().getPaymentDataList().get(0),\n+                    businessPaymentModel.getCurrency()));\n+        }\n+        if (businessPaymentModel.getPaymentResult().getPaymentDataList().size() > 1) {\n+            builder.withPaymentMethodInfo(\n+                getPaymentsInfo(businessPaymentModel.getPaymentResult().getPaymentDataList().get(1),\n+                    businessPaymentModel.getCurrency()));\n+        }\n+        if (businessPayment.getPrimaryAction() != null && businessPayment.getPrimaryAction().getName() != null) {\n+            builder.withFooterMainAction(businessPayment.getPrimaryAction().getName(),\n+                businessPayment.getPrimaryAction().getResCode());\n+        }\n+        if (businessPayment.getSecondaryAction() != null && businessPayment.getSecondaryAction().getName() != null) {\n+            builder.withFooterSecondaryAction(businessPayment.getSecondaryAction().getName(),\n+                businessPayment.getSecondaryAction().getResCode());\n+        }\n+        if (businessPayment.getHelp() != null) {\n+            builder.withHelp(businessPayment.getHelp());\n+        }\n+        if (paymentCongratsResponse.getDiscount() != null) {\n+            builder.withDiscounts(paymentCongratsResponse.getDiscount());\n+        }\n+        if (businessPayment.getBottomFragment() != null) {\n+            builder.withBottomFragment(businessPayment.getBottomFragment());\n+        }\n+        if (businessPayment.getTopFragment() != null) {\n+            builder.withTopFragment(businessPayment.getTopFragment());\n+        }\n+        if (businessPayment.getImportantFragment() != null) {\n+            builder.withImportantFragment(businessPayment.getImportantFragment());\n+        }\n+        if (paymentCongratsResponse.getExpenseSplit() != null) {\n+            builder.withExpenseSplit(paymentCongratsResponse.getExpenseSplit());\n+        }\n+        if (paymentCongratsResponse.getLoyalty() != null) {\n+            builder.withLoyalty(paymentCongratsResponse.getLoyalty());\n+        }\n+        if (businessPaymentModel.getPaymentResult().getPaymentId() != null) {\n+            builder.withReceipt(businessPaymentModel.getPaymentResult().getPaymentId(),\n+                businessPayment.shouldShowReceipt(),\n+                paymentCongratsResponse.getViewReceipt());\n+        }\n+        if (businessPayment.getStatementDescription() != null) {\n+            builder.withStatementDescription(businessPayment.getStatementDescription());\n+        }\n+        if (businessPayment.getSubtitle() != null) {\n+            builder.withSubtitle(businessPayment.getSubtitle());\n+        }\n+\n+        return builder.build();\n+    }\n+\n+    private PaymentInfo getPaymentsInfo(final PaymentData paymentData, final Currency currency) {\n+        final PaymentInfo.Builder paymentInfo = new PaymentInfo.Builder()\n+            .withPaymentMethodType(\n+                PaymentInfo.PaymentMethodType.fromName(paymentData.getPaymentMethod().getPaymentTypeId()))\n+            .withPaymentMethodId(paymentData.getPaymentMethod().getId())\n+            .withPaymentMethodName(paymentData.getPaymentMethod().getName())\n+            .withPaidAmount(getPrettyAmount(currency,\n+                PaymentDataHelper.getPrettyAmountToPay(paymentData)));\n+        if (paymentData.getToken() != null && paymentData.getToken().getLastFourDigits() != null) {\n+            paymentInfo.withLastFourDigits(paymentData.getToken().getLastFourDigits());\n+        }\n+        if (paymentData.getPayerCost() != null) {\n+            paymentInfo.withInstallmentsData(\n+                paymentData.getPayerCost().getInstallments(),\n+                getPrettyAmount(currency, paymentData.getPayerCost().getInstallmentAmount()),\n+                getPrettyAmount(currency, paymentData.getPayerCost().getTotalAmount()),\n+                paymentData.getPayerCost().getInstallmentRate());\n+        }\n+\n+        return paymentInfo.build();\n+    }\n+\n+    private String getPrettyAmount(@NonNull final Currency currency, @NonNull final BigDecimal amount) {\n+        return CurrenciesUtil.getLocalizedAmountWithoutZeroDecimals(currency, amount);\n+    }\n+\n+    private String getMappedResult(final PaymentResult paymentResult) {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU0ODYyOQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484548629", "bodyText": "getTrackingPaymentStatus? te parece? por lo que representa en si el estado del pago", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T19:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NDYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5NDI0OQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485094249", "bodyText": "Me parece", "author": "guchito9", "createdAt": "2020-09-08T17:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NDYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NDg1NQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483864855", "bodyText": "hagamos que extienda de mapper", "author": "cgaggino", "createdAt": "2020-09-04T22:14:20Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentCongratsModelMapper.java", "diffHunk": "@@ -0,0 +1,152 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import androidx.annotation.NonNull;\n+import com.mercadopago.android.px.internal.di.Session;\n+import com.mercadopago.android.px.internal.features.business_result.CongratsResponseMapper;\n+import com.mercadopago.android.px.internal.repository.PaymentSettingRepository;\n+import com.mercadopago.android.px.internal.util.CurrenciesUtil;\n+import com.mercadopago.android.px.internal.util.PaymentDataHelper;\n+import com.mercadopago.android.px.internal.viewmodel.BusinessPaymentModel;\n+import com.mercadopago.android.px.model.BusinessPayment;\n+import com.mercadopago.android.px.model.Currency;\n+import com.mercadopago.android.px.model.PaymentData;\n+import com.mercadopago.android.px.model.PaymentResult;\n+import java.math.BigDecimal;\n+\n+public class PaymentCongratsModelMapper {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NTcxMQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483865711", "bodyText": "Misma l\u00f3gica que el otro mapper, usar el nombre de la clase a la que estamos mappeando, solo para alinear convenciones", "author": "cgaggino", "createdAt": "2020-09-04T22:17:40Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentCongratsResponseMapper.java", "diffHunk": "@@ -0,0 +1,321 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.mercadolibre.android.mlbusinesscomponents.common.MLBusinessSingleItem;\n+import com.mercadolibre.android.mlbusinesscomponents.components.actioncard.MLBusinessActionCardViewData;\n+import com.mercadolibre.android.mlbusinesscomponents.components.common.downloadapp.MLBusinessDownloadAppData;\n+import com.mercadolibre.android.mlbusinesscomponents.components.common.downloadapp.MLBusinessDownloadAppView;\n+import com.mercadolibre.android.mlbusinesscomponents.components.crossselling.MLBusinessCrossSellingBoxData;\n+import com.mercadolibre.android.mlbusinesscomponents.components.discount.MLBusinessDiscountBoxData;\n+import com.mercadolibre.android.mlbusinesscomponents.components.discount.MLBusinessDiscountTracker;\n+import com.mercadolibre.android.mlbusinesscomponents.components.loyalty.MLBusinessLoyaltyRingData;\n+import com.mercadolibre.android.mlbusinesscomponents.components.touchpoint.domain.model.AdditionalEdgeInsets;\n+import com.mercadolibre.android.mlbusinesscomponents.components.touchpoint.domain.response.MLBusinessTouchpointResponse;\n+import com.mercadolibre.android.mlbusinesscomponents.components.touchpoint.tracking.MLBusinessTouchpointTracker;\n+import com.mercadopago.android.px.internal.features.business_result.BusinessPaymentResultTracker;\n+import com.mercadopago.android.px.internal.features.business_result.CongratsViewModel;\n+import com.mercadopago.android.px.internal.features.business_result.MLBusinessMapper;\n+import com.mercadopago.android.px.internal.features.business_result.PXDiscountBoxData;\n+import com.mercadopago.android.px.internal.util.JsonUtil;\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class PaymentCongratsResponseMapper extends Mapper<PaymentCongratsResponse, CongratsViewModel> {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NjUyNQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483866525", "bodyText": "yo har\u00eda final las clases que sepan que son finales, para evitar que algun tercero la extienda y tener problemas a la hora de modificarla, igual esta en un package \"internal\" pero por las dudas no viene mal", "author": "cgaggino", "createdAt": "2020-09-04T22:20:59Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentCongratsText.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+\n+public class PaymentCongratsText implements Parcelable {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2NzQ5Mw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483867493", "bodyText": "podria ser final", "author": "cgaggino", "createdAt": "2020-09-04T22:25:21Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_congrats/model/PaymentResultInfo.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.mercadopago.android.px.internal.features.payment_congrats.model;\n+\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+\n+public class PaymentResultInfo implements Parcelable{", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2OTQ0Mw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483869443", "bodyText": "esto queda raro porque basicamente podemos enviar una lista de string y que me diga si es split payment o no, se que la l\u00f3gica es bastante gen\u00e9rica pero les parece bien crear otro m\u00e9todo para seguir restringiendo el tipo de dato de la lista?", "author": "cgaggino", "createdAt": "2020-09-04T22:34:31Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/util/PaymentDataHelper.java", "diffHunk": "@@ -19,7 +20,7 @@ public static BigDecimal getPrettyAmountToPay(@NonNull final PaymentData payment\n         return paymentData.getRawAmount();\n     }\n \n-    public static boolean isSplitPayment(@NonNull final Collection<PaymentData> paymentDataList) {\n+    public static <T> boolean isSplitPayment(@NonNull final Collection<T> paymentDataList) {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU1NDYxNw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484554617", "bodyText": "mmm dec\u00eds de sobreescribir este m\u00e9todo, de modo que uno use paymentData y el otro paymentInfo?? opinas que vale la pena?", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T19:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2OTQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5NjQ2Ng==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485096466", "bodyText": "Yo creo que vale la pena, porque el punto que dice Cris es que, si bien ahora solo se chequea el size, queda raro que reciba una lista taaan gen\u00e9rica.\nSi al menos el generic estuviera acotado a algo como T extends PaymentData o algo as\u00ed estar\u00eda piola, pero taaaan gen\u00e9rico no queda bien.", "author": "guchito9", "createdAt": "2020-09-08T17:52:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2OTQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYyMjE5MQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r485622191", "bodyText": "Ah\u00ed ya lo arregl\u00e9... tuve que cambiar el nombre porque dado que es un m\u00e9todo static no puedo sobrescribirlo, entonces qued\u00f3 isSplitPalymentData y isSplitPaymentInfo", "author": "mmunozpatinomeli", "createdAt": "2020-09-09T13:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2OTQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MDY4NA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483870684", "bodyText": "esto no se usa, no?", "author": "cgaggino", "createdAt": "2020-09-04T22:40:47Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/view/PaymentResultAmount.java", "diffHunk": "@@ -7,16 +7,13 @@\n import android.util.AttributeSet;\n import com.google.android.flexbox.FlexboxLayout;\n import com.mercadopago.android.px.R;\n-import com.mercadopago.android.px.internal.util.CurrenciesUtil;\n import com.mercadopago.android.px.internal.util.ViewUtils;\n-import com.mercadopago.android.px.model.Currency;\n-import com.mercadopago.android.px.model.Discount;\n-import com.mercadopago.android.px.model.PayerCost;\n import java.math.BigDecimal;\n import java.util.Locale;\n \n public class PaymentResultAmount extends FlexboxLayout {\n \n+    public static final String NO_RATE = \"0\";", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2MTg3Mg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484561872", "bodyText": "No! ya lo borr\u00e9!", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T20:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MDY4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MjQyNQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483872425", "bodyText": "no me qued\u00f3 claro este cambio de condici\u00f3n", "author": "cgaggino", "createdAt": "2020-09-04T22:49:38Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/view/PaymentResultMethod.java", "diffHunk": "@@ -76,13 +77,14 @@ private String getDescription(@NonNull final Model model) {\n                 model.paymentMethodName,\n                 getResources().getString(R.string.px_ending_in),\n                 model.lastFourDigits);\n-        } else if(!PaymentTypes.isAccountMoney(model.paymentTypeId)){\n+        } else if (!PaymentTypes.isAccountMoney(model.paymentTypeId) || model.paymentMethodDescription == null ||\n+            model.paymentMethodDescription.getMessage() == null) {", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2MzAzMw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484563033", "bodyText": "esto surgi\u00f3 porque para el caso de AM directamente se usaba el description para mostrar \"Dinero disponible en MercadoPago\", y el integrador entonces para AM ten\u00eda que setear description, para los otros el name... Entonces para falicitar el uso para los integradores y al mismo tiempo no modificar los flujos actuales, si el description no tiene nada, usamos el name para mostrar \"Dinero disponible en MercadoPago\", en cambio, si el description tiene datos (lo que pasa en los flujos internos) usamos el description y no el name... nose si se entiende la idea", "author": "mmunozpatinomeli", "createdAt": "2020-09-07T20:41:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3MjQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3NDIxMA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r483874210", "bodyText": "ojo ac\u00e1 estamos usando el name que es en upper case, y actualmente creo que se est\u00e1 trackeando en lowercase, por si hay alguna query qeu no lo contemple...\nde todas formas creo que el enum no es necesario, se mappea de un string payment type id a un enum para despues terminar usando el name o el value que es el string del payment type id, que opinan que esto siga siendo un String y no un enum?", "author": "cgaggino", "createdAt": "2020-09-04T22:58:21Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/tracking/internal/model/ResultViewTrackModel.java", "diffHunk": "@@ -33,67 +31,108 @@\n     private final String campaignId;\n     private final String campaignsIds;\n     private final int discountsCount;\n-\n+    private final Map<String, Object> extraInfo = Collections.emptyMap();\n     private boolean hasBottomView;\n     private boolean hasTopView;\n     private boolean hasImportantView;\n     private boolean hasMoneySplitView;\n-    private final Map<String, Object> extraInfo = Collections.emptyMap();\n-\n-    private enum Style {\n-        GENERIC(\"generic\"),\n-        CUSTOM(\"custom\");\n-\n-        @NonNull public final String value;\n-\n-        Style(@NonNull final String value) {\n-            this.value = value;\n-        }\n-    }\n \n     public ResultViewTrackModel(@NonNull final PaymentModel paymentModel,\n         @NonNull final PaymentResultScreenConfiguration screenConfiguration,\n         @NonNull final CheckoutPreference checkoutPreference, @NonNull final String currencyId, final boolean isMP) {\n-        this(Style.GENERIC, paymentModel, checkoutPreference, currencyId);\n+        this(Style.GENERIC,\n+            paymentModel.getPaymentResult().getPaymentId(),\n+            paymentModel.getPaymentResult().getPaymentStatus(),\n+            paymentModel.getPaymentResult().getPaymentStatusDetail(),\n+            PaymentDataHelper.isSplitPayment(paymentModel.getPaymentResult().getPaymentDataList()),\n+            checkoutPreference.getTotalAmount(),\n+            PaymentDataHelper\n+                .getTotalDiscountAmount(paymentModel.getPaymentResult().getPaymentDataList()),\n+            paymentModel.getCongratsResponse().getScore() != null ? paymentModel.getCongratsResponse().getScore()\n+                .getProgress().getLevel() : null,\n+            paymentModel.getCongratsResponse().getDiscount() != null ? paymentModel.getCongratsResponse().getDiscount()\n+                .getItems().size() : 0,\n+            paymentModel.getCongratsResponse().getDiscount() != null ? TextUtil\n+                .join(new FromDiscountItemToItemId().map(paymentModel.getCongratsResponse().getDiscount().getItems()))\n+                : null,\n+            paymentModel.getPaymentResult().getPaymentData().getCampaign() != null ? paymentModel.getPaymentResult()\n+                .getPaymentData().getCampaign().getId() : null,\n+            paymentModel.getPaymentResult().getPaymentData().getPaymentMethod() != null ? paymentModel\n+                .getPaymentResult().getPaymentData().getPaymentMethod().getId() : null,\n+            paymentModel.getPaymentResult().getPaymentData().getPaymentMethod() != null ? paymentModel\n+                .getPaymentResult().getPaymentData().getPaymentMethod().getPaymentTypeId() : null,\n+            currencyId,\n+            paymentModel.getPaymentResult().getPaymentData());\n         hasBottomView = screenConfiguration.hasBottomFragment();\n         hasTopView = screenConfiguration.hasTopFragment();\n         hasImportantView = false;\n         hasMoneySplitView = isMP && paymentModel.getCongratsResponse().getMoneySplit() != null;\n     }\n \n-    public ResultViewTrackModel(@NonNull final BusinessPaymentModel paymentModel,\n-        @NonNull final CheckoutPreference checkoutPreference, @NonNull final String currencyId, final boolean isMP) {\n-        this(Style.CUSTOM, paymentModel, checkoutPreference, currencyId);\n-        hasBottomView = paymentModel.getPayment().hasBottomFragment();\n-        hasTopView = paymentModel.getPayment().hasTopFragment();\n-        hasMoneySplitView = isMP && paymentModel.getCongratsResponse().getMoneySplit() != null;\n+    public ResultViewTrackModel(@NonNull final PaymentCongratsModel paymentCongratsModel, final boolean isMP) {\n+        this(Style.CUSTOM,\n+            paymentCongratsModel.getPaymentId(),\n+            paymentCongratsModel.getCongratsType().name(),\n+            paymentCongratsModel.getPxPaymentCongratsTracking().getPaymentStatusDetail(),\n+            PaymentDataHelper.isSplitPayment(paymentCongratsModel.getPaymentsInfo()),\n+            paymentCongratsModel.getPxPaymentCongratsTracking().getTotalAmount(),\n+            paymentCongratsModel.getDiscountCouponsAmount(),\n+            paymentCongratsModel.getPaymentCongratsResponse().getLoyalty() != null ? paymentCongratsModel\n+                .getPaymentCongratsResponse().getLoyalty()\n+                .getProgress().getLevel() : null,\n+            paymentCongratsModel.getPaymentCongratsResponse().getDiscount() != null ? paymentCongratsModel\n+                .getPaymentCongratsResponse().getDiscount()\n+                .getItems().size() : 0,\n+            paymentCongratsModel.getPaymentCongratsResponse().getDiscount() != null ? TextUtil\n+                .join(new FromPaymentCongratsDiscountItemToItemId()\n+                    .map(paymentCongratsModel.getPaymentCongratsResponse().getDiscount().getItems())) : null,\n+            paymentCongratsModel.getPxPaymentCongratsTracking().getCampaignId(),\n+            paymentCongratsModel.getPaymentsInfo().get(0).paymentMethodId,\n+            paymentCongratsModel.getPaymentsInfo().get(0).paymentMethodType.name(),", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkwNTU3OQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r484905579", "bodyText": "Si actualmente se est\u00e1 trackeando en lowercase, ahora lo arreglo para que siga as\u00ed. Respecto a lo de sacar el enum, el origen del enum fue que como vimos que en el flujo de mapeo a los viewModel comparaba con ciertos valores, la idea era que integrador no pueda mandar un valor que no sepamos manejar para que no se rompa todo.", "author": "mmunozpatinomeli", "createdAt": "2020-09-08T13:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg3NDIxMA=="}], "type": "inlineReview"}, {"oid": "0f4cab1c6aa636300b293020668c61e6d34e80db", "url": "https://github.com/mercadopago/px-android/commit/0f4cab1c6aa636300b293020668c61e6d34e80db", "message": "Merge branch 'feature/new-payment-congrats' into feature/new_payment_congrats_rebase", "committedDate": "2020-09-07T12:48:29Z", "type": "commit"}, {"oid": "90f93310141afd0c6995a0765dde2e6c82f9cf8e", "url": "https://github.com/mercadopago/px-android/commit/90f93310141afd0c6995a0765dde2e6c82f9cf8e", "message": "fix session in rebase", "committedDate": "2020-09-07T13:09:08Z", "type": "commit"}, {"oid": "3a087291832ca8a248bf937658512cb3dadf8586", "url": "https://github.com/mercadopago/px-android/commit/3a087291832ca8a248bf937658512cb3dadf8586", "message": "Merge pull request #2316 from mmunozpatinomeli/feature/new_payment_congrats_rebase\n\nPaymentCongrats Rebase", "committedDate": "2020-09-07T13:39:22Z", "type": "commit"}, {"oid": "24975436fb21bf7b4235e62bfe0379f200b80156", "url": "https://github.com/mercadopago/px-android/commit/24975436fb21bf7b4235e62bfe0379f200b80156", "message": "first codereview fixes", "committedDate": "2020-09-09T14:27:32Z", "type": "commit"}, {"oid": "cdaaaf5c0e1a94874e78f8dfa5dea22847784031", "url": "https://github.com/mercadopago/px-android/commit/cdaaaf5c0e1a94874e78f8dfa5dea22847784031", "message": "Merge pull request #2318 from mmunozpatinomeli/feature/payment-congrats-fixes\n\n[PaymentCongrats] First codereview fixes", "committedDate": "2020-09-10T15:25:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3NjEzNw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r486576137", "bodyText": "Estoy pensando que directamente har\u00eda que reciba un PaymentCongratsModel este m\u00e9todo, y que el mapeo se haga en donde se llama, porque no tiene mucho sentido seguir recibiendo BusinessPaymentModel.", "author": "guchito9", "createdAt": "2020-09-10T19:13:11Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultActivity.java", "diffHunk": "@@ -33,33 +32,15 @@\n     implements BusinessPaymentResultContract.View {\n \n     private static final String TAG = BusinessPaymentResultActivity.class.getSimpleName();\n-    private static final String EXTRA_BUSINESS_PAYMENT_MODEL = \"extra_business_payment_model\";\n+    private static final String PAYMENT_CONGRATS = \"payment_congrats\";\n \n     public static void startWithForwardResult(@NonNull final Activity activity, @NonNull final BusinessPaymentModel model) {\n         final Intent intent = new Intent(activity, BusinessPaymentResultActivity.class);\n-        intent.putExtra(EXTRA_BUSINESS_PAYMENT_MODEL, model);\n+        intent.putExtra(PAYMENT_CONGRATS, new PaymentCongratsModelMapper().map(model));", "originalCommit": "c2a781f58796b3341d6b4283945493696db297f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4OTI3MA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r486589270", "bodyText": "La opci\u00f3n ser\u00eda modificar la l\u00ednea 297 del PaymentResultActivity para que en lugar de manda el BPM como viene, le haga un mapeo ah\u00ed mismo y as\u00ed llama al startWithForwardResult directo con un PCM, te parece bien as\u00ed?", "author": "mmunozpatinomeli", "createdAt": "2020-09-10T19:38:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3NjEzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU5Mzk0Mw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r486593943", "bodyText": "Mejor no, dej\u00e9moslo as\u00ed", "author": "guchito9", "createdAt": "2020-09-10T19:48:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3NjEzNw=="}], "type": "inlineReview"}, {"oid": "e454d62ed02da24a3839ad54456475f4c9574add", "url": "https://github.com/mercadopago/px-android/commit/e454d62ed02da24a3839ad54456475f4c9574add", "message": "Merge branch 'px/master' into feature/new-payment-congrats-conflicts-fix\n\n# Conflicts:\n#\tpx-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonViewModel.kt", "committedDate": "2020-09-10T20:11:07Z", "type": "commit"}, {"oid": "9f39092a157959126a4066c6a24c0f02226fabdf", "url": "https://github.com/mercadopago/px-android/commit/9f39092a157959126a4066c6a24c0f02226fabdf", "message": "Merge pull request #2323 from mmunozpatinomeli/feature/new-payment-congrats-conflicts-fix\n\n[PaymentCongrats] Fix Conflicts", "committedDate": "2020-09-10T20:23:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4MzA4NQ==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r487083085", "bodyText": "Ya siendo esto loadOrHide le mandar\u00eda INVISIBLE de una sin recibir un par\u00e1metro de afuera", "author": "guchito9", "createdAt": "2020-09-11T14:28:53Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/util/ViewUtils.java", "diffHunk": "@@ -103,6 +104,17 @@ public static boolean loadOrHide(final int visibility, @Nullable final Text text\n         }\n     }\n \n+    public static boolean loadOrHide(final int visibility, @Nullable final PaymentCongratsText text, @NonNull final MPTextView view) {\n+        if (text == null || TextUtil.isEmpty(text.getMessage())) {\n+            view.setVisibility(visibility);", "originalCommit": "9f39092a157959126a4066c6a24c0f02226fabdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4NTQ2MA==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r487085460", "bodyText": "si entiendo bien ser\u00eda quitar el param \"visibility\" del m\u00e9todo y directamente ponerle INVISIBLE no?? No ser\u00eda mejor GONE? por lo que busqu\u00e9 el INVISIBLE sigue ocupando espacio en la vista", "author": "mmunozpatinomeli", "createdAt": "2020-09-11T14:32:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4MzA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEwMDQ3Mg==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r487100472", "bodyText": "o directamente usar un loadOrGone para que se entienda mejor", "author": "mmunozpatinomeli", "createdAt": "2020-09-11T14:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4MzA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEwMjYwNw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r487102607", "bodyText": "Yo entend\u00ed que puntualmente necesitan que sea invisible y no gone", "author": "guchito9", "createdAt": "2020-09-11T14:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4MzA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExNDY4Nw==", "url": "https://github.com/mercadopago/px-android/pull/2315#discussion_r487114687", "bodyText": "me fij\u00e9 c\u00f3mo estaba originalmente la llamada desde el viewModel y estaba \"ViewUtils.loadOrHide(View.GONE, model.paymentMethodDescription, paymentMethodStatement);\" ajajajaj, lo voy a dejar como loadOrGone entonces", "author": "mmunozpatinomeli", "createdAt": "2020-09-11T15:16:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA4MzA4NQ=="}], "type": "inlineReview"}, {"oid": "7aef509c9aca4cdf3300626e7245c42b869ff82d", "url": "https://github.com/mercadopago/px-android/commit/7aef509c9aca4cdf3300626e7245c42b869ff82d", "message": "second codereview fixes", "committedDate": "2020-09-14T15:17:06Z", "type": "commit"}, {"oid": "378644040910bf969c744f1b3fa6d2d11076c3b1", "url": "https://github.com/mercadopago/px-android/commit/378644040910bf969c744f1b3fa6d2d11076c3b1", "message": "Merge pull request #2324 from mmunozpatinomeli/feature/new-payment-congrats-second-fixes\n\n[PaymentCongrats] Second codereview fixes", "committedDate": "2020-09-14T18:37:43Z", "type": "commit"}]}