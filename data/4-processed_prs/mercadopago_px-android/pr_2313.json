{"pr_number": 2313, "pr_title": "[Feature] payment logic", "pr_createdAt": "2020-09-03T20:58:40Z", "pr_url": "https://github.com/mercadopago/px-android/pull/2313", "timeline": [{"oid": "28c2e4fac90ed596193b7e1ad95a413b79641cb0", "url": "https://github.com/mercadopago/px-android/commit/28c2e4fac90ed596193b7e1ad95a413b79641cb0", "message": "init feature branch", "committedDate": "2020-08-23T14:58:20Z", "type": "commit"}, {"oid": "82cb7b8cd4fb64f9e42d40854d85f880956dbd74", "url": "https://github.com/mercadopago/px-android/commit/82cb7b8cd4fb64f9e42d40854d85f880956dbd74", "message": "security code fragment added", "committedDate": "2020-08-31T11:50:47Z", "type": "commit"}, {"oid": "769960d27b06ddae9581551b4e069398c5284144", "url": "https://github.com/mercadopago/px-android/commit/769960d27b06ddae9581551b4e069398c5284144", "message": "Merge branch 'master' of github.com:mercadopago/px-android into feature/new-cvv-screen", "committedDate": "2020-08-31T11:53:03Z", "type": "commit"}, {"oid": "be68dd58df70ccf5317ebf1bb4786fdf0b6b5d84", "url": "https://github.com/mercadopago/px-android/commit/be68dd58df70ccf5317ebf1bb4786fdf0b6b5d84", "message": "viewmodel created", "committedDate": "2020-09-01T14:41:35Z", "type": "commit"}, {"oid": "3c31e23d507d035c82f47793415037217608fc2e", "url": "https://github.com/mercadopago/px-android/commit/3c31e23d507d035c82f47793415037217608fc2e", "message": "paylogic added", "committedDate": "2020-09-02T14:01:59Z", "type": "commit"}, {"oid": "2007e41be0c724b30b7550dec14057d61fdecdfc", "url": "https://github.com/mercadopago/px-android/commit/2007e41be0c724b30b7550dec14057d61fdecdfc", "message": "paylogic with paymentrecovery", "committedDate": "2020-09-03T18:19:21Z", "type": "commit"}, {"oid": "471a31738d0a9703820dcc597593098865e62692", "url": "https://github.com/mercadopago/px-android/commit/471a31738d0a9703820dcc597593098865e62692", "message": "refactor ciew model factory", "committedDate": "2020-09-03T19:22:44Z", "type": "commit"}, {"oid": "5a848d10f0e21412eca04d4c0b10853577b844a1", "url": "https://github.com/mercadopago/px-android/commit/5a848d10f0e21412eca04d4c0b10853577b844a1", "message": "merge master", "committedDate": "2020-09-03T19:45:28Z", "type": "commit"}, {"oid": "f0736150868f79f236616c9470832693fe6adcf0", "url": "https://github.com/mercadopago/px-android/commit/f0736150868f79f236616c9470832693fe6adcf0", "message": "revert change", "committedDate": "2020-09-03T20:19:25Z", "type": "commit"}, {"oid": "686ebe01c123c898fa30c34f39fd22c77afb4ed5", "url": "https://github.com/mercadopago/px-android/commit/686ebe01c123c898fa30c34f39fd22c77afb4ed5", "message": "revert change in samples", "committedDate": "2020-09-03T20:22:04Z", "type": "commit"}, {"oid": "4c7fbb5ac3c2468e0cfc3c8c4fc6e26658e27dfe", "url": "https://github.com/mercadopago/px-android/commit/4c7fbb5ac3c2468e0cfc3c8c4fc6e26658e27dfe", "message": "refactor", "committedDate": "2020-09-03T20:57:11Z", "type": "commit"}, {"oid": "11ac243d0c1a1d5cff982a0e2c7ff4cc0a359709", "url": "https://github.com/mercadopago/px-android/commit/11ac243d0c1a1d5cff982a0e2c7ff4cc0a359709", "message": "review changes", "committedDate": "2020-09-03T21:51:29Z", "type": "commit"}, {"oid": "10dc1e18846efee072bcb12b79242503eb2342a1", "url": "https://github.com/mercadopago/px-android/commit/10dc1e18846efee072bcb12b79242503eb2342a1", "message": "add resource string", "committedDate": "2020-09-04T17:37:56Z", "type": "commit"}, {"oid": "7b22ca7591720cddcbf84ac98614fa3c1937bfa4", "url": "https://github.com/mercadopago/px-android/commit/7b22ca7591720cddcbf84ac98614fa3c1937bfa4", "message": "translation resource added", "committedDate": "2020-09-04T18:06:13Z", "type": "commit"}, {"oid": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "url": "https://github.com/mercadopago/px-android/commit/7c869ba4448f9fa02996a04359baa6ab6cde7922", "message": "test fixed", "committedDate": "2020-09-04T18:58:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MDE4MQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r484570181", "bodyText": "Qu\u00e9 es este espacio??", "author": "guchito9", "createdAt": "2020-09-07T21:28:59Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonFragment.kt", "diffHunk": "@@ -78,9 +75,9 @@ class PayButtonFragment : Fragment(), PayButton.View, SecurityValidationHandler\n             buttonTextLiveData.observe(viewLifecycleOwner,\n                 Observer { buttonConfig -> button.text = buttonConfig!!.getButtonText(this@PayButtonFragment.context!!) })\n             cvvRequiredLiveData.observe(viewLifecycleOwner,\n-                Observer { pair -> pair?.let { showSecurityCodeScreen(it.first, it.second) } })\n+                    Observer { pair -> pair?.let { showSecurityCodeScreen(newInstance(it.first, it.second)) } })", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4NTAwOA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485185008", "bodyText": "Listo", "author": "jorGonzalez291292", "createdAt": "2020-09-08T20:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MDE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MDQyNA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r484570424", "bodyText": "Saquemos el import est\u00e1tico porque necesito contexto (?)", "author": "guchito9", "createdAt": "2020-09-07T21:30:25Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonFragment.kt", "diffHunk": "@@ -78,9 +75,9 @@ class PayButtonFragment : Fragment(), PayButton.View, SecurityValidationHandler\n             buttonTextLiveData.observe(viewLifecycleOwner,\n                 Observer { buttonConfig -> button.text = buttonConfig!!.getButtonText(this@PayButtonFragment.context!!) })\n             cvvRequiredLiveData.observe(viewLifecycleOwner,\n-                Observer { pair -> pair?.let { showSecurityCodeScreen(it.first, it.second) } })\n+                    Observer { pair -> pair?.let { showSecurityCodeScreen(newInstance(it.first, it.second)) } })\n             recoverRequiredLiveData.observe(viewLifecycleOwner,\n-                Observer { recovery -> recovery?.let { showSecurityCodeForRecovery(it) } })\n+                Observer { pair -> pair?.let { showSecurityCodeScreen(newInstance(it.first, it.second)) } })", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4NTExNQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485185115", "bodyText": "Dale", "author": "jorGonzalez291292", "createdAt": "2020-09-08T20:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MDQyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNDQ3NA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485124474", "bodyText": "Yo esto lo har\u00eda en la integraci\u00f3n, es algo espec\u00edfico para la pantalla de cvv", "author": "guchito9", "createdAt": "2020-09-08T18:45:01Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonFragment.kt", "diffHunk": "@@ -186,6 +178,7 @@ class PayButtonFragment : Fragment(), PayButton.View, SecurityValidationHandler\n     }\n \n     private fun finishLoading(params: ExplodeDecorator) {\n+        ViewUtils.hideKeyboard(activity)", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4MjQxNg==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485182416", "bodyText": "De acuerdo", "author": "jorGonzalez291292", "createdAt": "2020-09-08T20:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNDQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNjM3MQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485136371", "bodyText": "Mandale as? para que sea safe", "author": "guchito9", "createdAt": "2020-09-08T19:06:55Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeFragment.kt", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import android.os.Bundle\n+import android.text.InputFilter\n+import android.text.InputFilter.LengthFilter\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import android.view.ViewGroup\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.Toolbar\n+import androidx.fragment.app.Fragment\n+import com.meli.android.carddrawer.model.CardDrawerView\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.core.BackHandler\n+import com.mercadopago.android.px.internal.di.viewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.pay_button.PayButtonFragment\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.util.nonNullObserve\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+\n+\n+internal class SecurityCodeFragment : Fragment(), PayButton.Handler, BackHandler {\n+\n+    private val securityCodeViewModel: SecurityCodeViewModel by viewModel()\n+\n+    private lateinit var cardDrawer: CardDrawerView\n+    private lateinit var cvvEditText: EditText\n+    private lateinit var cvvTitle: TextView\n+    private lateinit var cvvSubtitle: TextView\n+    private lateinit var payButtonFragment: PayButtonFragment\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+        savedInstanceState: Bundle?): View? {\n+        return inflater.inflate(R.layout.fragment_security_code, container, false)\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        (activity as AppCompatActivity?)?.apply {", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3ODg4Mw==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485178883", "bodyText": "dale", "author": "jorGonzalez291292", "createdAt": "2020-09-08T20:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNjM3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MTgyNw==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485151827", "bodyText": "Estos observe hay que llevarlos al onViewCreated porque ac\u00e1 est\u00e1s agregando observers consecutivos para cada resume de la pantalla", "author": "guchito9", "createdAt": "2020-09-08T19:37:17Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeFragment.kt", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import android.os.Bundle\n+import android.text.InputFilter\n+import android.text.InputFilter.LengthFilter\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import android.view.ViewGroup\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.Toolbar\n+import androidx.fragment.app.Fragment\n+import com.meli.android.carddrawer.model.CardDrawerView\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.core.BackHandler\n+import com.mercadopago.android.px.internal.di.viewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.pay_button.PayButtonFragment\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.util.nonNullObserve\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+\n+\n+internal class SecurityCodeFragment : Fragment(), PayButton.Handler, BackHandler {\n+\n+    private val securityCodeViewModel: SecurityCodeViewModel by viewModel()\n+\n+    private lateinit var cardDrawer: CardDrawerView\n+    private lateinit var cvvEditText: EditText\n+    private lateinit var cvvTitle: TextView\n+    private lateinit var cvvSubtitle: TextView\n+    private lateinit var payButtonFragment: PayButtonFragment\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+        savedInstanceState: Bundle?): View? {\n+        return inflater.inflate(R.layout.fragment_security_code, container, false)\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        (activity as AppCompatActivity?)?.apply {\n+            view.findViewById<Toolbar>(R.id.cvv_toolbar)?.also { toolbar ->\n+                setSupportActionBar(toolbar)\n+                supportActionBar?.apply {\n+                    setDisplayShowTitleEnabled(false)\n+                    setDisplayHomeAsUpEnabled(true)\n+                    setDisplayShowHomeEnabled(true)\n+                    setHomeButtonEnabled(true)\n+                    toolbar.setNavigationOnClickListener { onBackPressed() }\n+                }\n+            }\n+        }\n+\n+        cardDrawer = view.findViewById(R.id.card_drawer)\n+        cvvEditText = view.findViewById(R.id.cvv_edit_text)\n+        cvvTitle = view.findViewById(R.id.cvv_title)\n+        cvvSubtitle = view.findViewById(R.id.cvv_subtitle)\n+        ViewUtils.openKeyboard(cvvEditText)\n+\n+        arguments?.apply {\n+\n+            check(\n+                containsKey(PAYMENT_RECOVERY_EXTRA) || containsKey(PAYMENT_CONFIGURATION_EXTRA) && containsKey(REASON_EXTRA))\n+\n+            securityCodeViewModel.init(\n+                getParcelable(PAYMENT_CONFIGURATION_EXTRA)!!,\n+                getParcelable(PAYMENT_RECOVERY_EXTRA),\n+                getString(REASON_EXTRA)?.let { Reason.valueOf(it) })\n+\n+        } ?: error(\"\")\n+\n+        payButtonFragment = childFragmentManager.findFragmentById(R.id.pay_button) as PayButtonFragment\n+    }\n+\n+    override fun onResume() {\n+        super.onResume()\n+        with(securityCodeViewModel) {\n+            cvvCardUiLiveData.nonNullObserve(viewLifecycleOwner) {", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MjE4NA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485152184", "bodyText": "Por qu\u00e9 no solamente handlePrepayment(callback)?", "author": "guchito9", "createdAt": "2020-09-08T19:38:00Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeFragment.kt", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import android.os.Bundle\n+import android.text.InputFilter\n+import android.text.InputFilter.LengthFilter\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import android.view.ViewGroup\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.Toolbar\n+import androidx.fragment.app.Fragment\n+import com.meli.android.carddrawer.model.CardDrawerView\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.core.BackHandler\n+import com.mercadopago.android.px.internal.di.viewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.pay_button.PayButtonFragment\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.util.nonNullObserve\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+\n+\n+internal class SecurityCodeFragment : Fragment(), PayButton.Handler, BackHandler {\n+\n+    private val securityCodeViewModel: SecurityCodeViewModel by viewModel()\n+\n+    private lateinit var cardDrawer: CardDrawerView\n+    private lateinit var cvvEditText: EditText\n+    private lateinit var cvvTitle: TextView\n+    private lateinit var cvvSubtitle: TextView\n+    private lateinit var payButtonFragment: PayButtonFragment\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+        savedInstanceState: Bundle?): View? {\n+        return inflater.inflate(R.layout.fragment_security_code, container, false)\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        (activity as AppCompatActivity?)?.apply {\n+            view.findViewById<Toolbar>(R.id.cvv_toolbar)?.also { toolbar ->\n+                setSupportActionBar(toolbar)\n+                supportActionBar?.apply {\n+                    setDisplayShowTitleEnabled(false)\n+                    setDisplayHomeAsUpEnabled(true)\n+                    setDisplayShowHomeEnabled(true)\n+                    setHomeButtonEnabled(true)\n+                    toolbar.setNavigationOnClickListener { onBackPressed() }\n+                }\n+            }\n+        }\n+\n+        cardDrawer = view.findViewById(R.id.card_drawer)\n+        cvvEditText = view.findViewById(R.id.cvv_edit_text)\n+        cvvTitle = view.findViewById(R.id.cvv_title)\n+        cvvSubtitle = view.findViewById(R.id.cvv_subtitle)\n+        ViewUtils.openKeyboard(cvvEditText)\n+\n+        arguments?.apply {\n+\n+            check(\n+                containsKey(PAYMENT_RECOVERY_EXTRA) || containsKey(PAYMENT_CONFIGURATION_EXTRA) && containsKey(REASON_EXTRA))\n+\n+            securityCodeViewModel.init(\n+                getParcelable(PAYMENT_CONFIGURATION_EXTRA)!!,\n+                getParcelable(PAYMENT_RECOVERY_EXTRA),\n+                getString(REASON_EXTRA)?.let { Reason.valueOf(it) })\n+\n+        } ?: error(\"\")\n+\n+        payButtonFragment = childFragmentManager.findFragmentById(R.id.pay_button) as PayButtonFragment\n+    }\n+\n+    override fun onResume() {\n+        super.onResume()\n+        with(securityCodeViewModel) {\n+            cvvCardUiLiveData.nonNullObserve(viewLifecycleOwner) {\n+                with(cardDrawer) {\n+                    card.name = it.name\n+                    card.expiration = it.date\n+                    card.number = it.number\n+                    show(it)\n+                }\n+            }\n+\n+            virtualCardInfoLiveData.nonNullObserve(viewLifecycleOwner) {\n+                cardDrawer.visibility = GONE\n+                cvvTitle.text = it.title\n+                with(cvvSubtitle) {\n+                    text = it.message\n+                    visibility = VISIBLE\n+                }\n+            }\n+\n+            inputInfoLiveData.nonNullObserve(viewLifecycleOwner) {\n+                cvvEditText.filters = arrayOf<InputFilter>(LengthFilter(it))\n+            }\n+        }\n+    }\n+\n+    override fun prePayment(callback: PayButton.OnReadyForPaymentCallback) {\n+        securityCodeViewModel.handlePrePaymentFinished(callback)", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MjYxNA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485152614", "bodyText": "A estos, por convenci\u00f3n, les ponemos el extra adelante para que queden agrupados.\nSer\u00eda EXTRA_PAYMENT_CONFIGURATION y as\u00ed", "author": "guchito9", "createdAt": "2020-09-08T19:38:52Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeFragment.kt", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import android.os.Bundle\n+import android.text.InputFilter\n+import android.text.InputFilter.LengthFilter\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import android.view.ViewGroup\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.Toolbar\n+import androidx.fragment.app.Fragment\n+import com.meli.android.carddrawer.model.CardDrawerView\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.core.BackHandler\n+import com.mercadopago.android.px.internal.di.viewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.pay_button.PayButtonFragment\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.util.nonNullObserve\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+\n+\n+internal class SecurityCodeFragment : Fragment(), PayButton.Handler, BackHandler {\n+\n+    private val securityCodeViewModel: SecurityCodeViewModel by viewModel()\n+\n+    private lateinit var cardDrawer: CardDrawerView\n+    private lateinit var cvvEditText: EditText\n+    private lateinit var cvvTitle: TextView\n+    private lateinit var cvvSubtitle: TextView\n+    private lateinit var payButtonFragment: PayButtonFragment\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+        savedInstanceState: Bundle?): View? {\n+        return inflater.inflate(R.layout.fragment_security_code, container, false)\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        (activity as AppCompatActivity?)?.apply {\n+            view.findViewById<Toolbar>(R.id.cvv_toolbar)?.also { toolbar ->\n+                setSupportActionBar(toolbar)\n+                supportActionBar?.apply {\n+                    setDisplayShowTitleEnabled(false)\n+                    setDisplayHomeAsUpEnabled(true)\n+                    setDisplayShowHomeEnabled(true)\n+                    setHomeButtonEnabled(true)\n+                    toolbar.setNavigationOnClickListener { onBackPressed() }\n+                }\n+            }\n+        }\n+\n+        cardDrawer = view.findViewById(R.id.card_drawer)\n+        cvvEditText = view.findViewById(R.id.cvv_edit_text)\n+        cvvTitle = view.findViewById(R.id.cvv_title)\n+        cvvSubtitle = view.findViewById(R.id.cvv_subtitle)\n+        ViewUtils.openKeyboard(cvvEditText)\n+\n+        arguments?.apply {\n+\n+            check(\n+                containsKey(PAYMENT_RECOVERY_EXTRA) || containsKey(PAYMENT_CONFIGURATION_EXTRA) && containsKey(REASON_EXTRA))\n+\n+            securityCodeViewModel.init(\n+                getParcelable(PAYMENT_CONFIGURATION_EXTRA)!!,\n+                getParcelable(PAYMENT_RECOVERY_EXTRA),\n+                getString(REASON_EXTRA)?.let { Reason.valueOf(it) })\n+\n+        } ?: error(\"\")\n+\n+        payButtonFragment = childFragmentManager.findFragmentById(R.id.pay_button) as PayButtonFragment\n+    }\n+\n+    override fun onResume() {\n+        super.onResume()\n+        with(securityCodeViewModel) {\n+            cvvCardUiLiveData.nonNullObserve(viewLifecycleOwner) {\n+                with(cardDrawer) {\n+                    card.name = it.name\n+                    card.expiration = it.date\n+                    card.number = it.number\n+                    show(it)\n+                }\n+            }\n+\n+            virtualCardInfoLiveData.nonNullObserve(viewLifecycleOwner) {\n+                cardDrawer.visibility = GONE\n+                cvvTitle.text = it.title\n+                with(cvvSubtitle) {\n+                    text = it.message\n+                    visibility = VISIBLE\n+                }\n+            }\n+\n+            inputInfoLiveData.nonNullObserve(viewLifecycleOwner) {\n+                cvvEditText.filters = arrayOf<InputFilter>(LengthFilter(it))\n+            }\n+        }\n+    }\n+\n+    override fun prePayment(callback: PayButton.OnReadyForPaymentCallback) {\n+        securityCodeViewModel.handlePrePaymentFinished(callback)\n+    }\n+\n+    override fun enqueueOnExploding(callback: PayButton.OnEnqueueResolvedCallback) {\n+        securityCodeViewModel.enqueueOnExploding(cvvEditText.text.toString(), callback)\n+    }\n+\n+    companion object {\n+        const val TAG = \"security_code\"\n+        private const val PAYMENT_CONFIGURATION_EXTRA = \"payment_configuration\"", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4NDE4NQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485184185", "bodyText": "Cambiado", "author": "jorGonzalez291292", "createdAt": "2020-09-08T20:41:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MjYxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2MzU5Ng==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485163596", "bodyText": "Usate el KParcelable amigo", "author": "guchito9", "createdAt": "2020-09-08T20:00:01Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/model/PaymentRecovery.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.mercadopago.android.px.model\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import java.io.Serializable\n+\n+//TODO move to internal package.\n+class PaymentRecovery(private val statusDetail: String, val token: Token?, val card: Card?,", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE4MzQyOA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485183428", "bodyText": "Tenes raz\u00f3n", "author": "jorGonzalez291292", "createdAt": "2020-09-08T20:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2MzU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NDYwMA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485164600", "bodyText": "Por qu\u00e9 tuvimos que meter esto?", "author": "guchito9", "createdAt": "2020-09-08T20:01:55Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonViewModel.kt", "diffHunk": "@@ -158,13 +158,21 @@ internal class PayButtonViewModel(\n         stateUILiveData.addSource(paymentFinishedLiveData) { value -> stateUILiveData.value = value }\n \n         // Cvv required event\n-        val cvvRequiredLiveData: LiveData<Pair<Card, Reason>?> = transform(serviceLiveData.requireCvvLiveData) { it }\n-        this.cvvRequiredLiveData.addSource(cvvRequiredLiveData) { value -> this.cvvRequiredLiveData.value = value }\n+        val cvvRequiredLiveData: LiveData<Reason?> = transform(serviceLiveData.requireCvvLiveData) { it }\n+        this.cvvRequiredLiveData.addSource(cvvRequiredLiveData) { value ->\n+            this.cvvRequiredLiveData.value = Pair(paymentConfiguration!!, value!!)\n+            stateUILiveData.value = ButtonLoadingCanceled", "originalCommit": "7c869ba4448f9fa02996a04359baa6ab6cde7922", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU2MjAwMQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485562001", "bodyText": "Porque sino paybutton de onetap queda en un estado de \"explotando\" y al hacer back en el fragment de cvv ese estado no me permite volver para atr\u00e1s.\npayButtonFragment.isExploding() = true en handleBack() \nAntes no pasaba por que la vieja pantalla de cvv era un activity que manejaba solo el onBackPressed(). Con la vieja pantalla de cvv al volver, se hacia el cancelLoading()\nif (requestCode == REQ_CODE_SECURITY_CODE) {\n        cancelLoading()\n        if (resultCode == Activity.RESULT_OK) {\n            viewModel.startPayment()\n        }\n }", "author": "jorGonzalez291292", "createdAt": "2020-09-09T12:12:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NDYwMA=="}], "type": "inlineReview"}, {"oid": "de45027e4d12cbb74757866326df96bba146d07b", "url": "https://github.com/mercadopago/px-android/commit/de45027e4d12cbb74757866326df96bba146d07b", "message": "review changes", "committedDate": "2020-09-08T21:36:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NjEyNA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485666124", "bodyText": "Esto lanza un exception? podemos ponerle un error mas representativo, tipo falto tal key como argument del fragment o el fragment debe tener tales keys", "author": "cgaggino", "createdAt": "2020-09-09T14:40:14Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeFragment.kt", "diffHunk": "@@ -0,0 +1,147 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import android.os.Bundle\n+import android.text.InputFilter\n+import android.text.InputFilter.LengthFilter\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import android.view.ViewGroup\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.Toolbar\n+import androidx.fragment.app.Fragment\n+import com.meli.android.carddrawer.model.CardDrawerView\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.core.BackHandler\n+import com.mercadopago.android.px.internal.di.viewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.pay_button.PayButtonFragment\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.util.nonNullObserve\n+import com.mercadopago.android.px.internal.viewmodel.PaymentModel\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+\n+\n+internal class SecurityCodeFragment : Fragment(), PayButton.Handler, BackHandler {\n+\n+    private val securityCodeViewModel: SecurityCodeViewModel by viewModel()\n+\n+    private lateinit var cardDrawer: CardDrawerView\n+    private lateinit var cvvEditText: EditText\n+    private lateinit var cvvTitle: TextView\n+    private lateinit var cvvSubtitle: TextView\n+    private lateinit var payButtonFragment: PayButtonFragment\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+        savedInstanceState: Bundle?): View? {\n+        return inflater.inflate(R.layout.fragment_security_code, container, false)\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        (activity as? AppCompatActivity?)?.apply {\n+            view.findViewById<Toolbar>(R.id.cvv_toolbar)?.also { toolbar ->\n+                setSupportActionBar(toolbar)\n+                supportActionBar?.apply {\n+                    setDisplayShowTitleEnabled(false)\n+                    setDisplayHomeAsUpEnabled(true)\n+                    setDisplayShowHomeEnabled(true)\n+                    setHomeButtonEnabled(true)\n+                    toolbar.setNavigationOnClickListener { onBackPressed() }\n+                }\n+            }\n+        }\n+\n+        cardDrawer = view.findViewById(R.id.card_drawer)\n+        cvvEditText = view.findViewById(R.id.cvv_edit_text)\n+        cvvTitle = view.findViewById(R.id.cvv_title)\n+        cvvSubtitle = view.findViewById(R.id.cvv_subtitle)\n+        ViewUtils.openKeyboard(cvvEditText)\n+\n+        arguments?.apply {\n+\n+            check(\n+                containsKey(EXTRA_PAYMENT_RECOVERY) || containsKey(EXTRA_PAYMENT_CONFIGURATION) && containsKey(EXTRA_REASON))\n+\n+            securityCodeViewModel.init(\n+                getParcelable(EXTRA_PAYMENT_CONFIGURATION)!!,\n+                getParcelable(EXTRA_PAYMENT_RECOVERY),\n+                getString(EXTRA_REASON)?.let { Reason.valueOf(it) })\n+\n+        } ?: error(\"\")", "originalCommit": "de45027e4d12cbb74757866326df96bba146d07b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNzI4Mw==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485727283", "bodyText": "Si, si coincido, no lo v\u00ed necesario setearlo ahora.", "author": "jorGonzalez291292", "createdAt": "2020-09-09T16:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NjEyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MDcyOA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485680728", "bodyText": "por que se llama build view model si no buildea el view model?", "author": "cgaggino", "createdAt": "2020-09-09T14:58:28Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeFragment.kt", "diffHunk": "@@ -0,0 +1,147 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import android.os.Bundle\n+import android.text.InputFilter\n+import android.text.InputFilter.LengthFilter\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.View.GONE\n+import android.view.View.VISIBLE\n+import android.view.ViewGroup\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.Toolbar\n+import androidx.fragment.app.Fragment\n+import com.meli.android.carddrawer.model.CardDrawerView\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.core.BackHandler\n+import com.mercadopago.android.px.internal.di.viewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.pay_button.PayButtonFragment\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.util.nonNullObserve\n+import com.mercadopago.android.px.internal.viewmodel.PaymentModel\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+\n+\n+internal class SecurityCodeFragment : Fragment(), PayButton.Handler, BackHandler {\n+\n+    private val securityCodeViewModel: SecurityCodeViewModel by viewModel()\n+\n+    private lateinit var cardDrawer: CardDrawerView\n+    private lateinit var cvvEditText: EditText\n+    private lateinit var cvvTitle: TextView\n+    private lateinit var cvvSubtitle: TextView\n+    private lateinit var payButtonFragment: PayButtonFragment\n+\n+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+        savedInstanceState: Bundle?): View? {\n+        return inflater.inflate(R.layout.fragment_security_code, container, false)\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        (activity as? AppCompatActivity?)?.apply {\n+            view.findViewById<Toolbar>(R.id.cvv_toolbar)?.also { toolbar ->\n+                setSupportActionBar(toolbar)\n+                supportActionBar?.apply {\n+                    setDisplayShowTitleEnabled(false)\n+                    setDisplayHomeAsUpEnabled(true)\n+                    setDisplayShowHomeEnabled(true)\n+                    setHomeButtonEnabled(true)\n+                    toolbar.setNavigationOnClickListener { onBackPressed() }\n+                }\n+            }\n+        }\n+\n+        cardDrawer = view.findViewById(R.id.card_drawer)\n+        cvvEditText = view.findViewById(R.id.cvv_edit_text)\n+        cvvTitle = view.findViewById(R.id.cvv_title)\n+        cvvSubtitle = view.findViewById(R.id.cvv_subtitle)\n+        ViewUtils.openKeyboard(cvvEditText)\n+\n+        arguments?.apply {\n+\n+            check(\n+                containsKey(EXTRA_PAYMENT_RECOVERY) || containsKey(EXTRA_PAYMENT_CONFIGURATION) && containsKey(EXTRA_REASON))\n+\n+            securityCodeViewModel.init(\n+                getParcelable(EXTRA_PAYMENT_CONFIGURATION)!!,\n+                getParcelable(EXTRA_PAYMENT_RECOVERY),\n+                getString(EXTRA_REASON)?.let { Reason.valueOf(it) })\n+\n+        } ?: error(\"\")\n+\n+        payButtonFragment = childFragmentManager.findFragmentById(R.id.pay_button) as PayButtonFragment\n+        buildViewModel()\n+    }\n+\n+    private fun buildViewModel() {", "originalCommit": "de45027e4d12cbb74757866326df96bba146d07b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNjYzMQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485726631", "bodyText": "observeViewModel() te parece bien?", "author": "jorGonzalez291292", "createdAt": "2020-09-09T16:01:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MDcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MTMxMw==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485681313", "bodyText": "tenemos que dejar de hacer los livedata publicos y de exponerlos como mutables", "author": "cgaggino", "createdAt": "2020-09-09T14:59:13Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/SecurityCodeViewModel.kt", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import androidx.lifecycle.MutableLiveData\n+import com.mercadopago.android.px.addons.ESCManagerBehaviour\n+import com.mercadopago.android.px.internal.base.BaseViewModel\n+import com.mercadopago.android.px.internal.features.pay_button.PayButton\n+import com.mercadopago.android.px.internal.features.security_code.model.VirtualCardInfo\n+import com.mercadopago.android.px.internal.repository.CardTokenRepository\n+import com.mercadopago.android.px.internal.repository.InitRepository\n+import com.mercadopago.android.px.internal.repository.PaymentSettingRepository\n+import com.mercadopago.android.px.internal.repository.UserSelectionRepository\n+import com.mercadopago.android.px.internal.util.CVVRecoveryWrapper\n+import com.mercadopago.android.px.internal.util.TokenCreationWrapper\n+import com.mercadopago.android.px.internal.viewmodel.CardDrawerConfiguration\n+import com.mercadopago.android.px.model.Card\n+import com.mercadopago.android.px.model.CvvInfo\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+import kotlinx.coroutines.CoroutineScope\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.launch\n+import kotlinx.coroutines.withContext\n+\n+class SecurityCodeViewModel(\n+    private val cardTokenRepository: CardTokenRepository,\n+    private val escManagerBehaviour: ESCManagerBehaviour,\n+    private val paymentSettingRepository: PaymentSettingRepository,\n+    initRepository: InitRepository,\n+    userSelectionRepository: UserSelectionRepository,\n+    cardConfigurationMapper: CardConfigurationMapper,\n+    virtualCardInfoMapper: VirtualCardInfoMapper) : BaseViewModel() {\n+\n+    val cvvCardUiLiveData = MutableLiveData<CardDrawerConfiguration>()", "originalCommit": "de45027e4d12cbb74757866326df96bba146d07b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNjM0NA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485726344", "bodyText": "Cambiado", "author": "jorGonzalez291292", "createdAt": "2020-09-09T16:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MTMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NDg3Mg==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485684872", "bodyText": "no parece un overkill hacer un mapper para esta linea nada m\u00e1s?", "author": "cgaggino", "createdAt": "2020-09-09T15:03:55Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/CardConfigurationMapper.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import com.meli.android.carddrawer.model.CardUI\n+import com.mercadopago.android.px.internal.viewmodel.CardDrawerConfiguration\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import com.mercadopago.android.px.model.CardDisplayInfo\n+\n+class CardConfigurationMapper: Mapper<CardDisplayInfo, CardUI>() {\n+    override fun map(model: CardDisplayInfo) = model.run { CardDrawerConfiguration(model,  null) }", "originalCommit": "de45027e4d12cbb74757866326df96bba146d07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NTEzNw==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485685137", "bodyText": "idem al otro mapper", "author": "cgaggino", "createdAt": "2020-09-09T15:04:17Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/security_code/VirtualCardInfoMapper.kt", "diffHunk": "@@ -0,0 +1,9 @@\n+package com.mercadopago.android.px.internal.features.security_code\n+\n+import com.mercadopago.android.px.internal.features.security_code.model.VirtualCardInfo\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import com.mercadopago.android.px.model.CvvInfo\n+\n+class VirtualCardInfoMapper: Mapper<CvvInfo, VirtualCardInfo>() {\n+    override fun map(model: CvvInfo) = model.run { VirtualCardInfo(title, message) }", "originalCommit": "de45027e4d12cbb74757866326df96bba146d07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxODI5Mg==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485718292", "bodyText": "por que no se setea directamente en vez de hacer el get? tipo:\nval isTokenRecoverable = Payment.StatusDetail.isStatusDetailRecoverable(statusDetail)", "author": "cgaggino", "createdAt": "2020-09-09T15:49:50Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/model/PaymentRecovery.kt", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.mercadopago.android.px.model\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import com.mercadopago.android.px.internal.util.KParcelable\n+import com.mercadopago.android.px.internal.util.parcelableCreator\n+import java.io.Serializable\n+\n+//TODO move to internal package.\n+class PaymentRecovery(private val statusDetail: String, val token: Token?, val card: Card?,\n+                      val paymentMethod: PaymentMethod?) : Serializable, KParcelable {\n+\n+    @Deprecated(\"\")\n+    constructor(paymentStatusDetail: String) : this(paymentStatusDetail, null, null)\n+\n+    @Deprecated(\"\")\n+    constructor(statusDetail: String, token: Token) : this(statusDetail, token, null)\n+\n+    @Deprecated(\"\")\n+    constructor(statusDetail: String, token: Token?, card: Card?) : this(statusDetail, token, card, null)\n+\n+    val isTokenRecoverable: Boolean\n+        get() = Payment.StatusDetail.isStatusDetailRecoverable(statusDetail)", "originalCommit": "de45027e4d12cbb74757866326df96bba146d07b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNjA3Mg==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485726072", "bodyText": "Me lo transform\u00f3 as\u00ed kotlin jaja lo cambo!", "author": "jorGonzalez291292", "createdAt": "2020-09-09T16:00:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxODI5Mg=="}], "type": "inlineReview"}, {"oid": "0b6a3ed02e4f17dd508bb8ae3670c608e24575c8", "url": "https://github.com/mercadopago/px-android/commit/0b6a3ed02e4f17dd508bb8ae3670c608e24575c8", "message": "review changes", "committedDate": "2020-09-09T16:31:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyNzQyOA==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485827428", "bodyText": "deberia seguir siendo parte de la interfaz, habria que definir el field ac\u00e1", "author": "cgaggino", "createdAt": "2020-09-09T18:28:00Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/offline_methods/OfflineMethods.kt", "diffHunk": "@@ -21,7 +21,6 @@ internal interface OfflineMethods {\n         fun onMethodSelected(selectedItem: OfflineMethodItem)\n         fun onPrePayment(callback: PayButton.OnReadyForPaymentCallback)\n         fun onBack()\n-        fun getObservableDeepLink(): LiveData<Event<String>>", "originalCommit": "0b6a3ed02e4f17dd508bb8ae3670c608e24575c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNjY0OQ==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485836649", "bodyText": "Cambiado!", "author": "jorGonzalez291292", "createdAt": "2020-09-09T18:45:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyNzQyOA=="}], "type": "inlineReview"}, {"oid": "5a0770fa1e5c60de2dd94b9211d3499f6c2c34e7", "url": "https://github.com/mercadopago/px-android/commit/5a0770fa1e5c60de2dd94b9211d3499f6c2c34e7", "message": "review changes", "committedDate": "2020-09-09T18:44:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NDY3Mw==", "url": "https://github.com/mercadopago/px-android/pull/2313#discussion_r485844673", "bodyText": "No hab\u00edamos matado Event?", "author": "guchito9", "createdAt": "2020-09-09T19:00:16Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/offline_methods/OfflineMethods.kt", "diffHunk": "@@ -16,12 +17,12 @@ internal interface OfflineMethods {\n     }\n \n     interface ViewModel {\n+        val deepLinkLiveData: LiveData<Event<String>>", "originalCommit": "5a0770fa1e5c60de2dd94b9211d3499f6c2c34e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "37754437552198465b613366fa1f24b330b7ff62", "url": "https://github.com/mercadopago/px-android/commit/37754437552198465b613366fa1f24b330b7ff62", "message": "SingleLiveData created", "committedDate": "2020-09-09T20:25:30Z", "type": "commit"}, {"oid": "06bee422dd622403fd2d542f3ff878c7582202b4", "url": "https://github.com/mercadopago/px-android/commit/06bee422dd622403fd2d542f3ff878c7582202b4", "message": "MutableSingleLiveData created", "committedDate": "2020-09-09T20:26:17Z", "type": "commit"}, {"oid": "9f06dda5dad04d2bdc05ec27d3eb2d27324fc737", "url": "https://github.com/mercadopago/px-android/commit/9f06dda5dad04d2bdc05ec27d3eb2d27324fc737", "message": "add tab", "committedDate": "2020-09-09T20:28:29Z", "type": "commit"}]}