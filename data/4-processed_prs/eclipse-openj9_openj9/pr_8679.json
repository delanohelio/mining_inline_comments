{"pr_number": 8679, "pr_title": "Check if SCC is valid at startup", "pr_createdAt": "2020-02-27T22:57:32Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8679", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4Mjg1MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385482850", "bodyText": "Do we actually need a TR_J9SharedCacheVM frontend? As far as I can tell we only need the frontend to ask if it asynchronous compilation is disabled.", "author": "mpirvu", "createdAt": "2020-02-28T02:47:49Z", "path": "runtime/compiler/control/rossa.cpp", "diffHunk": "@@ -1868,13 +1868,24 @@ aboutToBootstrap(J9JavaVM * javaVM, J9JITConfig * jitConfig)\n #if defined(J9VM_OPT_SHARED_CLASSES)\n    if (isSharedAOT)\n       {\n-      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes */\n-      if (0) //!validateSharedClassAOTHeader(javaVM, curThread, compInfo))\n+      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes\n+       *\n+       * This check has to be done after latePostProcessJIT so that all the necessary JIT options\n+       * can be set\n+       */\n+      TR_J9SharedCacheVM *fe = (TR_J9SharedCacheVM *) TR_J9VMBase::get(jitConfig, curThread, TR_J9VMBase::AOT_VM);", "originalCommit": "b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc2NTA0MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385765041", "bodyText": "Probably not, I mean given that we're calling code to validate the AOT Header, the SCC must be enabled.", "author": "dsouzai", "createdAt": "2020-02-28T15:38:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4Mjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0NzQ4Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r387147486", "bodyText": "Addressed in 0233e1d", "author": "dsouzai", "createdAt": "2020-03-03T16:39:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4Mjg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385484231", "bodyText": "I wonder is there is any problem when there is no header, but the SCC has been created by another JVM, maybe because that JVM didn't have the time to generate any AOT compilations. Could IProfiler be present in such an SCC and therefore defeat the check here?", "author": "mpirvu", "createdAt": "2020-02-28T02:54:36Z", "path": "runtime/compiler/control/rossa.cpp", "diffHunk": "@@ -1868,13 +1868,24 @@ aboutToBootstrap(J9JavaVM * javaVM, J9JITConfig * jitConfig)\n #if defined(J9VM_OPT_SHARED_CLASSES)\n    if (isSharedAOT)\n       {\n-      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes */\n-      if (0) //!validateSharedClassAOTHeader(javaVM, curThread, compInfo))\n+      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes\n+       *\n+       * This check has to be done after latePostProcessJIT so that all the necessary JIT options\n+       * can be set\n+       */\n+      TR_J9SharedCacheVM *fe = (TR_J9SharedCacheVM *) TR_J9VMBase::get(jitConfig, curThread, TR_J9VMBase::AOT_VM);\n+      if (!compInfo->reloRuntime()->validateAOTHeader(fe, curThread))\n          {\n-         TR::Options::getAOTCmdLineOptions()->setOption(TR_NoLoadAOT);\n-         TR::Options::getAOTCmdLineOptions()->setOption(TR_NoStoreAOT);\n-         TR::Options::setSharedClassCache(false);\n-         TR_J9SharedCache::setSharedCacheDisabledReason(TR_J9SharedCache::AOT_DISABLED);\n+         /* This could be the first run, in which case validateAOTHeader might return false because", "originalCommit": "b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc2NDE3NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385764174", "bodyText": "Hm, that is definitely a possible scenario. Maybe I'd have to add code in the IProfiler to generate the header if it doesn't already exist in that case.", "author": "dsouzai", "createdAt": "2020-02-28T15:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc4Mjc2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385782766", "bodyText": "At the moment, we only ever persist the IProfiler data either in genIL (if we haven't delayed AOT loads) or when we do an AOT load (if we have delayed AOT loads).\nDo you think we should still have code to create a header in the IProfiler just in case?", "author": "dsouzai", "createdAt": "2020-02-28T16:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MzU5OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r386573598", "bodyText": "@mpirvu ^", "author": "dsouzai", "createdAt": "2020-03-02T18:36:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2Mzc0MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r386663740", "bodyText": "@dsouzai Yes, we still have a problem, because an AOT compilation starts, genIL() is performed and some IP data is stored in SCC, then, while the JIT compiler is in optimizer or codegen, the JVM enters the shutdown stage, the compilation is aborted and we don't reach the point where the header is written.\nI do not see a problem if delayed AOT load feature is in place though (we must have compiled and stored an AOT body in order to reach the point where IP data is stored).", "author": "mpirvu", "createdAt": "2020-03-02T21:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0NzU1Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r387147557", "bodyText": "Addressed in 0233e1d", "author": "dsouzai", "createdAt": "2020-03-03T16:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ=="}], "type": "inlineReview"}, {"oid": "e6d98543cd4958d72b4ca77d27117e58fd45e830", "url": "https://github.com/eclipse-openj9/openj9/commit/e6d98543cd4958d72b4ca77d27117e58fd45e830", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-03-03T16:36:46Z", "type": "forcePushed"}, {"oid": "241d21257ae800c571244e6737bf65b6de8fab7b", "url": "https://github.com/eclipse-openj9/openj9/commit/241d21257ae800c571244e6737bf65b6de8fab7b", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-03-03T16:38:39Z", "type": "forcePushed"}, {"oid": "9ce1ba640409ad4434bc52f23251eb941b7451db", "url": "https://github.com/eclipse-openj9/openj9/commit/9ce1ba640409ad4434bc52f23251eb941b7451db", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-03-04T15:16:34Z", "type": "forcePushed"}, {"oid": "fc821e43edd2ca39621c52fd232a07147b8a51ed", "url": "https://github.com/eclipse-openj9/openj9/commit/fc821e43edd2ca39621c52fd232a07147b8a51ed", "message": "Check if SCC is valid at startup\n\nCurrently the check to see if the SCC is valid is done at the first\ncompilation. This is done on the load run to see if it is ok to load a\nmethod that was stored to the SCC. However, other parts of the compiler,\nsuch as the IProfiler, don't use this check.\n\nThis commit checks the validity of the SCC at startup and updates the\nglobal flag that all parts of the compiler check. If a AOT header does\nnot exist at this point, a header will be created.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-03-04T21:20:45Z", "type": "commit"}, {"oid": "e928b741a1d16cf7637c142d0356092b7bd7b998", "url": "https://github.com/eclipse-openj9/openj9/commit/e928b741a1d16cf7637c142d0356092b7bd7b998", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-03-04T21:20:47Z", "type": "commit"}, {"oid": "e928b741a1d16cf7637c142d0356092b7bd7b998", "url": "https://github.com/eclipse-openj9/openj9/commit/e928b741a1d16cf7637c142d0356092b7bd7b998", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-03-04T21:20:47Z", "type": "forcePushed"}]}