{"pr_number": 11089, "pr_title": "Initialize variables so mergeStacks is easier to read", "pr_createdAt": "2020-11-03T15:02:31Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/11089", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516807592", "bodyText": "Actually, while we're here, let's remove the extra blank. Do it after testing passes and I'll merge.", "author": "gacholio", "createdAt": "2020-11-03T16:43:43Z", "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -867,16 +867,16 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \tUDATA maxIndex = J9_ARG_COUNT_FROM_ROM_METHOD(romMethod) + J9_TEMP_COUNT_FROM_ROM_METHOD(romMethod);\n \tU_32 *bytecodeMap = verifyData->bytecodeMap;\n \tUDATA i = 0;\n-\tUDATA stackIndex;\n+\tUDATA stackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n \tIDATA rewalk = FALSE;\n \tIDATA rc = BCV_SUCCESS;\n-\tUDATA *targetStackPtr, *targetStackTop, *sourceStackPtr, *sourceStackTop, *sourceStackTemps;\n+\tUDATA *targetStackPtr = NULL;\n+\tUDATA *targetStackTop = NULL;\n+\tUDATA *sourceStackPtr = NULL;\n+\tUDATA *sourceStackTop = NULL;\n+\tUDATA *sourceStackTemps = NULL;\n \tJ9BranchTargetStack *liveStack = (J9BranchTargetStack *) verifyData->liveStack;\n-\tJ9BranchTargetStack *targetStack;\n-\n-\n-\tstackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n-\ttargetStack = BCV_INDEX_STACK (stackIndex);\n+\tJ9BranchTargetStack *targetStack = BCV_INDEX_STACK (stackIndex);", "originalCommit": "03075be7f069951e0bf0edba0d604e15693d8767", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjQ5MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516862490", "bodyText": "which blank line do you want removed?  I only see one between the end of the variable declarations and the first tracepoint.", "author": "DanHeidinga", "createdAt": "2020-11-03T18:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MzMwNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516863306", "bodyText": "The one between the macro and the bracketted arg.", "author": "gacholio", "createdAt": "2020-11-03T18:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2NDc0NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516864745", "bodyText": "Click.  I read that as \"blank line\".  Fixed now", "author": "DanHeidinga", "createdAt": "2020-11-03T18:14:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516839480", "bodyText": "verifyData->verificationFlags & J9_VERIFY_OPTIMIZE is the kind of thing I've seen cause compilation problems in the past on P. If these types of expressions are modified to use J9_ARE_ALL_BITS_SET() or J9_ARE_ANY_BITS_SET() which create proper boolean expressions, it might help #11086\n@ChengJin01 fyi", "author": "pshipton", "createdAt": "2020-11-03T17:31:18Z", "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "originalCommit": "03075be7f069951e0bf0edba0d604e15693d8767", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0MjEwNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516842106", "bodyText": "The code has been there for quite a long while prior to OpenJ9. If there is any change involved, extensive tests must be carried out on all platforms to ensure there is no issue introduced if anything.", "author": "ChengJin01", "createdAt": "2020-11-03T17:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0NTM2OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516845368", "bodyText": "I can go either way on this one - it has nothing to do with what's being changed in this PR, but I don't believe it would introduce any errors, even on our more deficient compilers.", "author": "gacholio", "createdAt": "2020-11-03T17:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1MTUxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516851516", "bodyText": "I just double-checked J9_VERIFY_OPTIMIZE in the code involved. Given it is used by default, technically it should be fine if the code here is replaced with J9_ARE_ALL_BITS_SET() or J9_ARE_ANY_BITS_SET().", "author": "ChengJin01", "createdAt": "2020-11-03T17:51:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1ODk2OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516858968", "bodyText": "Note I'm not saying this particular check is causing #11086, it's just the first one like this I saw. If we were to make this type of change, all expressions similar to this one should be changed. i.e. a bit test that doesn't compare with anything.", "author": "pshipton", "createdAt": "2020-11-03T18:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MDAzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516860030", "bodyText": "I'm also not suggesting this PR needs to be updated, it was just a convenient place to point it out.", "author": "pshipton", "createdAt": "2020-11-03T18:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjE5MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516862190", "bodyText": "I find it hard to believe the implicit 0 check is causing any problem, ever, given that C code uses this extensively (including thousands of occurrences in our own code).", "author": "gacholio", "createdAt": "2020-11-03T18:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MzMxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516863313", "bodyText": "There's also some odd code pulling things into locals and then continuing to deref the original pointers.  I'd like to see it cleaned up as well but it's less mechanical.  Look at\n\tUDATA sourceItem = *sourceStackPtr;\n\tUDATA targetItem = *targetStackPtr;", "author": "DanHeidinga", "createdAt": "2020-11-03T18:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}], "type": "inlineReview"}, {"oid": "0146a241ee2bfba38fb6664009df275da6f63d9f", "url": "https://github.com/eclipse-openj9/openj9/commit/0146a241ee2bfba38fb6664009df275da6f63d9f", "message": "Initialize variables so mergeStacks is easier to read\n\nWhile reviewing #11086, I looked at mergeStacks (the\nsource of the compiler bug) and see that there are a\nlot of uninitialized variables.\n\nUpdated the code to initialize them and to move some\nof them to the smallest possible scope.\n\nSigned-off-by: Dan Heidinga <heidinga@redhat.com>", "committedDate": "2020-11-03T18:13:35Z", "type": "commit"}, {"oid": "0146a241ee2bfba38fb6664009df275da6f63d9f", "url": "https://github.com/eclipse-openj9/openj9/commit/0146a241ee2bfba38fb6664009df275da6f63d9f", "message": "Initialize variables so mergeStacks is easier to read\n\nWhile reviewing #11086, I looked at mergeStacks (the\nsource of the compiler bug) and see that there are a\nlot of uninitialized variables.\n\nUpdated the code to initialize them and to move some\nof them to the smallest possible scope.\n\nSigned-off-by: Dan Heidinga <heidinga@redhat.com>", "committedDate": "2020-11-03T18:13:35Z", "type": "forcePushed"}]}