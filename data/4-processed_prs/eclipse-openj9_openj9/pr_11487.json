{"pr_number": 11487, "pr_title": "Fix utf8 range check in SCC", "pr_createdAt": "2020-12-15T21:35:55Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/11487", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNzU5NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11487#discussion_r543727595", "bodyText": "Pls remove the redundant FALSE !=", "author": "pshipton", "createdAt": "2020-12-15T22:17:46Z", "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -541,7 +541,8 @@ ComparingCursor::isRangeValidForUTF8Ptr(J9UTF8 *utf8)\n \tU_8 *ptr = (U_8*)utf8;\n \n \tif (_checkRangeInSharedCache) {\n-\t\treturn FALSE != j9shr_Query_IsAddressInCache(_javaVM, utf8, J9UTF8_TOTAL_SIZE(utf8));\n+\t\treturn FALSE != (j9shr_Query_IsAddressInCache(_javaVM, utf8, sizeof(J9UTF8))", "originalCommit": "24b92304b4df80fd962aa555bf1ef1b8cb7a9437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTA4Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11487#discussion_r543729082", "bodyText": "and the redundant brackets.", "author": "pshipton", "createdAt": "2020-12-15T22:20:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNzU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDEzNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11487#discussion_r543730136", "bodyText": "Hmm, nm I guess this is needed to convert a C boolean into a C++ boolean.", "author": "pshipton", "createdAt": "2020-12-15T22:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNzU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzMzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11487#discussion_r543733330", "bodyText": "I think with the && we should be fine. Ill try it on windows to verify.", "author": "tajila", "createdAt": "2020-12-15T22:28:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNzU5NQ=="}], "type": "inlineReview"}, {"oid": "2338f617b6b0df3b959c45492e074e1e35aca69a", "url": "https://github.com/eclipse-openj9/openj9/commit/2338f617b6b0df3b959c45492e074e1e35aca69a", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-15T22:22:14Z", "type": "forcePushed"}, {"oid": "25c16f1f806be0e1ef293a9499ce1bd601301ea2", "url": "https://github.com/eclipse-openj9/openj9/commit/25c16f1f806be0e1ef293a9499ce1bd601301ea2", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-15T22:23:51Z", "type": "forcePushed"}, {"oid": "f7ad4b61bcf47873b0ebb3e951d1b0e7351cbeeb", "url": "https://github.com/eclipse-openj9/openj9/commit/f7ad4b61bcf47873b0ebb3e951d1b0e7351cbeeb", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-15T22:25:10Z", "type": "forcePushed"}, {"oid": "4b5b9f49e3f05c8eea312982701c546c9c265b3c", "url": "https://github.com/eclipse-openj9/openj9/commit/4b5b9f49e3f05c8eea312982701c546c9c265b3c", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-15T22:27:15Z", "type": "forcePushed"}, {"oid": "010ab85fbd32c263b0935fef6e6f011d495ea94a", "url": "https://github.com/eclipse-openj9/openj9/commit/010ab85fbd32c263b0935fef6e6f011d495ea94a", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-15T23:18:04Z", "type": "forcePushed"}, {"oid": "a5ca14fcd7a24f7da219eb31a487317a0718cead", "url": "https://github.com/eclipse-openj9/openj9/commit/a5ca14fcd7a24f7da219eb31a487317a0718cead", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-16T16:25:57Z", "type": "forcePushed"}, {"oid": "0d3d19ae2b642811f8db639845290aeabc4c8e57", "url": "https://github.com/eclipse-openj9/openj9/commit/0d3d19ae2b642811f8db639845290aeabc4c8e57", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-16T16:27:15Z", "type": "commit"}, {"oid": "0d3d19ae2b642811f8db639845290aeabc4c8e57", "url": "https://github.com/eclipse-openj9/openj9/commit/0d3d19ae2b642811f8db639845290aeabc4c8e57", "message": "Fix utf8 range check in SCC\n\nThe existing check dereferences the utf8 before ensuring that the header\nis in the SCC. This causes a segfault when the header is not in the SCC.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-12-16T16:27:15Z", "type": "forcePushed"}]}