{"pr_number": 10636, "pr_title": "Change default -Xthr:spin1 value for PPC64BE", "pr_createdAt": "2020-09-17T16:17:21Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10636", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1MjI5OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10636#discussion_r490452299", "bodyText": "the regression was reported on Linux BE only.  it had better applying this fix to Linux BE only.  something like:\nif LINUXPPC\nif  LITTLE_ENDIAN\n= 96;\nelse\n= 151;\nendif\nelsif AIXPPC\n= 96;\n....\nKeep in mind that AIX is not LITTLE_ENDIAN, such that the existing fix will apply to AIX too.", "author": "zl-wang", "createdAt": "2020-09-17T17:58:10Z", "path": "runtime/vm/vmthread.c", "diffHunk": "@@ -509,7 +509,9 @@ threadParseArguments(J9JavaVM *vm, char *optArg)\n \tvm->thrDeflationPolicy = J9VM_DEFLATION_POLICY_ASAP;\n \n \tif (cpus > 1) {\n-#if defined(AIXPPC) || defined(LINUXPPC)\n+#if (defined(AIXPPC) || defined(LINUXPPC)) && !defined(J9VM_ENV_LITTLE_ENDIAN)", "originalCommit": "08863beffa78e2e6b9c1c5759a1e2f0f645eff0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MDI4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10636#discussion_r490470285", "bodyText": "@zl-wang Do we need to account for the Java version as well? I believe the regression was specifically for IBM Java 8.", "author": "midronij", "createdAt": "2020-09-17T18:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1MjI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3NDE4Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10636#discussion_r490474187", "bodyText": "there is no Linux BE releases after java8", "author": "zl-wang", "createdAt": "2020-09-17T18:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1MjI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3NDg4OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10636#discussion_r490474889", "bodyText": "Only IBM builds plinux BE, there are no builds for Java 11+ created at OpenJ9 or Adopt. Also, if the cause was the OMR change and not the compiler change, then it follows the fix applies to all versions.", "author": "pshipton", "createdAt": "2020-09-17T18:38:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1MjI5OQ=="}], "type": "inlineReview"}, {"oid": "8f94dbb9be6f22e9ddfcbfef8e6cbf9dd2b3178d", "url": "https://github.com/eclipse-openj9/openj9/commit/8f94dbb9be6f22e9ddfcbfef8e6cbf9dd2b3178d", "message": "Change default -Xthr:spin1 value for PPC64BE\n\nCurrently the xlC compiler generates a bunch of extra nops in the\nspinOnFlatLock routine, throwing off the spinning timing and causing\na ~5% regression. This change modifies the default spin count to 151\nfor PPC64BE (previously 96 for all PPC machines), which restores the\nproper timing and fixes the regression.\n\nSigned-off-by: Jackie Midroni <jackie.midroni@mail.utoronto.ca>", "committedDate": "2020-09-17T18:02:13Z", "type": "commit"}, {"oid": "8f94dbb9be6f22e9ddfcbfef8e6cbf9dd2b3178d", "url": "https://github.com/eclipse-openj9/openj9/commit/8f94dbb9be6f22e9ddfcbfef8e6cbf9dd2b3178d", "message": "Change default -Xthr:spin1 value for PPC64BE\n\nCurrently the xlC compiler generates a bunch of extra nops in the\nspinOnFlatLock routine, throwing off the spinning timing and causing\na ~5% regression. This change modifies the default spin count to 151\nfor PPC64BE (previously 96 for all PPC machines), which restores the\nproper timing and fixes the regression.\n\nSigned-off-by: Jackie Midroni <jackie.midroni@mail.utoronto.ca>", "committedDate": "2020-09-17T18:02:13Z", "type": "forcePushed"}]}