{"pr_number": 11035, "pr_title": "JEP390 implementation", "pr_createdAt": "2020-10-28T19:43:10Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/11035", "timeline": [{"oid": "9a8d048b82e376aa619c6693ff383122336f5562", "url": "https://github.com/eclipse-openj9/openj9/commit/9a8d048b82e376aa619c6693ff383122336f5562", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:addValueBasedClassChecks=exception. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:addValueBasedClassChecks=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-28T19:48:06Z", "type": "forcePushed"}, {"oid": "26e696a6224e1eff156e561495bba638c47e592b", "url": "https://github.com/eclipse-openj9/openj9/commit/26e696a6224e1eff156e561495bba638c47e592b", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:addValueBasedClassChecks=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:addValueBasedClassChecks=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-28T19:58:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2NTg0MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514265840", "bodyText": "Are we matching the Hotspot option here?   It would be best if we can use the same option so users get a consistent experience.\nIf not, our -XX options start with capital letters (mostly).  Renaming to something like -XX:ValueBasedClassCheck=[exception|warn] would be clearer?\nOr handled with multiple options like:\n-XX[+-]EnableValueBasedClassChecks to enable the checks\n-XX:[+-]ThrowForValueBasedClassChecks to throw an exception\n-XX:[+-]WarnForValueBasedClassChecks to warn", "author": "DanHeidinga", "createdAt": "2020-10-29T13:40:38Z", "path": "runtime/oti/jvminit.h", "diffHunk": "@@ -391,6 +391,9 @@ enum INIT_STAGE {\n #define VMOPT_XXDISABLEVALHALLA \"-XX:-EnableValhalla\"\n #endif /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */\n \n+#define VMOPT_XXADDVALUEBASEDCLASSCHECKSEXCEPTION \"-XX:addValueBasedClassChecks=exception\"\n+#define VMOPT_XXADDVALUEBASEDCLASSCHECKSWARN \"-XX:addValueBasedClassChecks=warn\"", "originalCommit": "26e696a6224e1eff156e561495bba638c47e592b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0NDYzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514344630", "bodyText": "Are we matching the Hotspot option here? It would be best if we can use the same option so users get a consistent experience.\n\nI agree to use the same CML as RI. Seems that RI has not finished implementing this JEP yet. We can change this CML to match RI once we know what they use.", "author": "hangshao0", "createdAt": "2020-10-29T15:21:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2NTg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM3MzA4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514373085", "bodyText": "Updated the CML to -XX:ValueBasedClassCheck=[exception|warn]", "author": "hangshao0", "createdAt": "2020-10-29T15:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2NTg0MA=="}], "type": "inlineReview"}, {"oid": "31edcd3d86e9915c878174b30cff1e1794314a82", "url": "https://github.com/eclipse-openj9/openj9/commit/31edcd3d86e9915c878174b30cff1e1794314a82", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-29T15:55:43Z", "type": "forcePushed"}, {"oid": "5418baab5f05d628de054a776c0f87fe4d73dce4", "url": "https://github.com/eclipse-openj9/openj9/commit/5418baab5f05d628de054a776c0f87fe4d73dce4", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-29T16:04:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMjczNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514432737", "bodyText": "I would add a new macro\n#define J9_CLASS_DISALLOWS_LOCKING (J9ClassIsValueType | J9ClassIsValueBased)\n#define J9_DOES_CLASS_DISALLOW_LOCKING(clazz) J9_ARE_ALL_BITS_SET((clazz)->classFlags, J9_CLASS_DISALLOWS_LOCKING)", "author": "tajila", "createdAt": "2020-10-29T17:18:55Z", "path": "runtime/oti/j9.h", "diffHunk": "@@ -309,6 +309,7 @@ static const struct { \\\n \t((NULL != (interfaceClass)) && ((J9_ITABLE_INDEX_UNRESOLVED != ((methodIndexAndArgCount) & ~255))))\n \n /* Macros for ValueTypes */", "originalCommit": "5418baab5f05d628de054a776c0f87fe4d73dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ1Mjc1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514452752", "bodyText": "The JIT will be able to use the J9_CLASS_DISALLOWS_LOCKING mask instead of the existing isValueType check", "author": "tajila", "createdAt": "2020-10-29T17:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMjczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NTE2OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514545168", "bodyText": "Added new marcos, but naming them as J9_CLASS_DISALLOWS_LOCKING_FLAGS and J9_CLASS_ALLOW_LOCKING", "author": "hangshao0", "createdAt": "2020-10-29T20:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMjczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMzI2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514433267", "bodyText": "this should just be !J9_DOES_CLASS_DISALLOW_LOCKING(clazz) no need to add the exception code to the fast path as if this fails it will call the slow path", "author": "tajila", "createdAt": "2020-10-29T17:19:39Z", "path": "runtime/oti/ObjectMonitor.hpp", "diffHunk": "@@ -279,10 +280,22 @@ class VM_ObjectMonitor\n \t\tbool locked = false;\n \t\tif (LN_HAS_LOCKWORD(currentThread, object)\n #if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n-\t\t&& !J9_IS_J9CLASS_VALUETYPE(J9OBJECT_CLAZZ(currentThread, object))\n+\t\t&& !J9_IS_J9CLASS_VALUETYPE(J9OBJECT_CLAZZ(currentThread, object)", "originalCommit": "5418baab5f05d628de054a776c0f87fe4d73dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMzU2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514433567", "bodyText": "all the exception code can be put in the slow path", "author": "tajila", "createdAt": "2020-10-29T17:20:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMzI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NTMyNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514545325", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-10-29T20:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzMzI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzU3Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514443572", "bodyText": "you can keep the original macro guards, but instead of the VT check it can be a JDK16+ check.", "author": "tajila", "createdAt": "2020-10-29T17:35:09Z", "path": "runtime/codert_vm/cnathelp.cpp", "diffHunk": "@@ -1616,12 +1616,16 @@ slow_jitMonitorEnterImpl(J9VMThread *currentThread, bool forMethod)\n \t\t\t\tresolveFrame->specialFrameFlags = (resolveFrame->specialFrameFlags & ~J9_STACK_FLAGS_JIT_FRAME_SUB_TYPE_MASK) | J9_STACK_FLAGS_JIT_FAILED_METHOD_MONITOR_ENTER_RESOLVE;\n \t\t\t}\n \t\t}\n-#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "originalCommit": "5418baab5f05d628de054a776c0f87fe4d73dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3Njc1NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514476754", "bodyText": "If it is changed to a JDK16+ check, does it affect the current internal Valhalla builds that is JDK15 and lower ?", "author": "hangshao0", "createdAt": "2020-10-29T18:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ4MDA0MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514480041", "bodyText": "VT builds should be running on JDKnext. I believe that is currently JDK16 @JasonFengJ9 can you confirm", "author": "tajila", "createdAt": "2020-10-29T18:32:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ4Nzk0NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514487945", "bodyText": "@tajila that's correct, Pipeline_Build_Test_JDKnext_x86-64_linux_valhalla is built on OpenJDK head stream git@github.com:ibmruntimes/openj9-openjdk-jdk.git which is called JDKnext and currently is JDK16.", "author": "JasonFengJ9", "createdAt": "2020-10-29T18:46:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NDI5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514544292", "bodyText": "Changed to JAVA_SPEC_VERSION >= 16.", "author": "hangshao0", "createdAt": "2020-10-29T20:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDU3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514444570", "bodyText": "same here, if jdk16+", "author": "tajila", "createdAt": "2020-10-29T17:36:44Z", "path": "runtime/vm/BytecodeAction.hpp", "diffHunk": "@@ -54,9 +54,7 @@ typedef enum {\n \tRUN_METHOD_INTERPRETED,\n \tRUN_JNI_NATIVE,\n \tRUN_METHOD_COMPILED,\n-#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "originalCommit": "5418baab5f05d628de054a776c0f87fe4d73dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NDM1Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514544357", "bodyText": "Changed to JAVA_SPEC_VERSION >= 16.", "author": "hangshao0", "createdAt": "2020-10-29T20:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDc2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514444766", "bodyText": "here as well", "author": "tajila", "createdAt": "2020-10-29T17:37:02Z", "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -1557,13 +1557,10 @@ class INTERPRETER_CLASS\n \t\t\t\t\t} else {\n \t\t\t\t\t\t((UDATA*)(((J9SFStackFrame*)_sp) + 1))[-1] |= J9SF_A0_INVISIBLE_TAG;\n \t\t\t\t\t}\n-#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "originalCommit": "5418baab5f05d628de054a776c0f87fe4d73dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NTE1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514445159", "bodyText": "and other places in this file too. Essentially we want JDK15 and earlier to remain unaffected", "author": "tajila", "createdAt": "2020-10-29T17:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NDQzMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514544431", "bodyText": "Fixed", "author": "hangshao0", "createdAt": "2020-10-29T20:25:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NTY0OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514445648", "bodyText": "needs ifdef jdk16+", "author": "tajila", "createdAt": "2020-10-29T17:38:24Z", "path": "runtime/vm/ObjectMonitor.cpp", "diffHunk": "@@ -309,14 +309,26 @@ objectMonitorEnterNonBlocking(J9VMThread *currentThread, j9object_t object)\n {\n \tUDATA result = (UDATA)object;\n \tj9objectmonitor_t volatile *lwEA = VM_ObjectMonitor::inlineGetLockAddress(currentThread, object);\n+\tJ9Class * objClass = J9OBJECT_CLAZZ(currentThread, object);\n \n #if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n-\tJ9Class * objClass = J9OBJECT_CLAZZ(currentThread, object);\n \tif (J9_IS_J9CLASS_VALUETYPE(objClass)) {\n \t\tresult = J9_OBJECT_MONITOR_VALUE_TYPE_IMSE;\n \t\tgoto done;\n \t}\n #endif /* J9VM_OPT_VALHALLA_VALUE_TYPES */\t\n+\tif (J9_IS_J9CLASS_VALUEBASED(objClass)) {", "originalCommit": "5418baab5f05d628de054a776c0f87fe4d73dce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU0NDU2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r514544566", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-10-29T20:25:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NTY0OA=="}], "type": "inlineReview"}, {"oid": "9d011e5b0009030b43c847d407caf90d89af8abe", "url": "https://github.com/eclipse-openj9/openj9/commit/9d011e5b0009030b43c847d407caf90d89af8abe", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-29T19:20:26Z", "type": "forcePushed"}, {"oid": "16a24642df9e3a2e53219e1861747f4c4e1f62a1", "url": "https://github.com/eclipse-openj9/openj9/commit/16a24642df9e3a2e53219e1861747f4c4e1f62a1", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-29T19:25:45Z", "type": "forcePushed"}, {"oid": "583facbd6a9ffcde6935f44095903d67013da6ce", "url": "https://github.com/eclipse-openj9/openj9/commit/583facbd6a9ffcde6935f44095903d67013da6ce", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-10-29T19:54:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODk2NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r516708964", "bodyText": "this should be a JDK 16 check as well", "author": "tajila", "createdAt": "2020-11-03T14:31:28Z", "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2358,6 +2364,12 @@ IDATA VMInitStages(J9JavaVM *vm, IDATA stage, void* reserved) {\n \t\t\t\t\tvm->extendedRuntimeFlags2 |= J9_EXTENDED_RUNTIME2_ENABLE_VT_ARRAY_FLATTENING;\n \t\t\t\t}\n \t\t\t}\n+#else /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */", "originalCommit": "583facbd6a9ffcde6935f44095903d67013da6ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgxMjk3Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r516812977", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-11-03T16:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwOTMwMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r516709302", "bodyText": "you can define this in valuetypehelpers.cpp", "author": "tajila", "createdAt": "2020-11-03T14:31:56Z", "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -602,6 +602,12 @@ areValueTypesEnabled(J9JavaVM *vm)\n \treturn J9_ARE_ALL_BITS_SET(vm->extendedRuntimeFlags2, J9_EXTENDED_RUNTIME2_ENABLE_VALHALLA);\n }\n \n+BOOLEAN\n+areValueBasedMonitorChecksEnabled(J9JavaVM *vm)", "originalCommit": "583facbd6a9ffcde6935f44095903d67013da6ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgxMDkxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r516810913", "bodyText": "Moved to valuetypehelpers.cpp.", "author": "hangshao0", "createdAt": "2020-11-03T16:48:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwOTMwMg=="}], "type": "inlineReview"}, {"oid": "1bfbf423dab778d5940ffb93c163756dacd22a27", "url": "https://github.com/eclipse-openj9/openj9/commit/1bfbf423dab778d5940ffb93c163756dacd22a27", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-11-03T16:23:00Z", "type": "forcePushed"}, {"oid": "ac95aa0f2681a85cc74d2e547f04aeab63d61cf1", "url": "https://github.com/eclipse-openj9/openj9/commit/ac95aa0f2681a85cc74d2e547f04aeab63d61cf1", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-11-03T16:31:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkyOTc0NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r516929744", "bodyText": "nitpick \"allows\"", "author": "tajila", "createdAt": "2020-11-03T20:13:43Z", "path": "runtime/oti/j9.h", "diffHunk": "@@ -309,6 +309,9 @@ static const struct { \\\n \t((NULL != (interfaceClass)) && ((J9_ITABLE_INDEX_UNRESOLVED != ((methodIndexAndArgCount) & ~255))))\n \n /* Macros for ValueTypes */\n+#define J9_CLASS_DISALLOWS_LOCKING_FLAGS (J9ClassIsValueType | J9ClassIsValueBased)\n+#define J9_CLASS_ALLOW_LOCKING(clazz) J9_ARE_NO_BITS_SET((clazz)->classFlags, J9_CLASS_DISALLOWS_LOCKING_FLAGS)", "originalCommit": "ac95aa0f2681a85cc74d2e547f04aeab63d61cf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NDA2Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11035#discussion_r516974062", "bodyText": "Fixed.", "author": "hangshao0", "createdAt": "2020-11-03T21:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkyOTc0NA=="}], "type": "inlineReview"}, {"oid": "f76621e72fd4794f7d3017ac7107794041974e82", "url": "https://github.com/eclipse-openj9/openj9/commit/f76621e72fd4794f7d3017ac7107794041974e82", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-11-03T21:46:01Z", "type": "forcePushed"}, {"oid": "227754b1ea439b4e3d23cd7fcbcb94c0f8a1d952", "url": "https://github.com/eclipse-openj9/openj9/commit/227754b1ea439b4e3d23cd7fcbcb94c0f8a1d952", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-11-27T23:15:29Z", "type": "commit"}, {"oid": "227754b1ea439b4e3d23cd7fcbcb94c0f8a1d952", "url": "https://github.com/eclipse-openj9/openj9/commit/227754b1ea439b4e3d23cd7fcbcb94c0f8a1d952", "message": "JEP390 implementation\n\n1. Parse @ValueBased annotation and add flags for value based classes.\n2. Add CML -XX:ValueBasedClassCheck=warn. \nPrint out a warning message for monitorenter on a value based class.\n3. Add CML -XX:ValueBasedClassCheck=exception. Throw a\nVirtualMachineError for monitorenter on a value based class.\n4. Add VM helper areValueBasedMonitorChecksEnabled().\n\nissue #10620\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>", "committedDate": "2020-11-27T23:15:29Z", "type": "forcePushed"}]}