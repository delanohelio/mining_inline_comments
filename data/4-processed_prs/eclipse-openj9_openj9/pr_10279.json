{"pr_number": 10279, "pr_title": "Inclusive terms for infra scripts", "pr_createdAt": "2020-07-29T05:28:57Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10279", "timeline": [{"oid": "73ae579c0a4be31c1770afa490fa9fc167ebe819", "url": "https://github.com/eclipse-openj9/openj9/commit/73ae579c0a4be31c1770afa490fa9fc167ebe819", "message": "Replace blacklist with blocklist\n\n[skip ci]\nIssue #10071\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>", "committedDate": "2020-07-29T05:38:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxODM4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467918388", "bodyText": "Perhaps .copyright_ignore is a more consistent name (think .gitignore)?", "author": "keithc-ca", "createdAt": "2020-08-10T13:51:58Z", "path": ".copyright_allowlist", "diffHunk": "@@ -1,3 +1,3 @@\n //List of files that don't require copyrights\n //One file per line, and full paths must be used\n-.copyright_whitelist\n+.copyright_allowlist", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY1NzE4Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r468657183", "bodyText": "I couldn't find doc why we didn't call it .copyrightignore so I'm fine to change it to that.", "author": "AdamBrousseau", "createdAt": "2020-08-11T15:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxODM4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxOTQwMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467919402", "bodyText": "Elsewhere are references to 'the Jenkins Manager node': we should be consistent.", "author": "keithc-ca", "createdAt": "2020-08-10T13:53:32Z", "path": "buildenv/jenkins/ARTIFACTORY.md", "diffHunk": "@@ -21,7 +21,7 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n -->\n # About\n Artifactory is a binary repository manager.\n-Our server is being used to store the Jenkins artifacts between builds to save space on the Jenkins master. The artifacts will be kept for a period after the job in case someone needs to debug the build.\n+Our server is being used to store the Jenkins artifacts between builds to save space on the Jenkins manager. The artifacts will be kept for a period after the job in case someone needs to debug the build.", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxOTgwMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467919802", "bodyText": "I think it should be two words: 'allow list'.", "author": "keithc-ca", "createdAt": "2020-08-10T13:54:10Z", "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -29,7 +29,7 @@ class Buildspec {\n \n     /*\n      * Helper function to check if a variable is a map.\n-     * This is needed because .isMap() is not on the default jenkins whitelist\n+     * This is needed because .isMap() is not on the default jenkins allowlist", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMTQwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467921403", "bodyText": "#10071 anticipated using 'worker': why the departure from that plan?", "author": "keithc-ca", "createdAt": "2020-08-10T13:56:33Z", "path": "buildenv/jenkins/jobs/infrastructure/Cleanup-Nodes.groovy", "diffHunk": "@@ -89,7 +90,7 @@ properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKe\n  */\n \n jobs = [:]\n-offlineSlaves = [:]\n+offlineNodes = [:]", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU3NDgxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r558574813", "bodyText": "The Jenkins project uses node to refer to machines connected to Jenkins that do work. I think we should use node to be consistent with them.", "author": "AdamBrousseau", "createdAt": "2021-01-15T20:25:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMTQwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMjcyNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467922726", "bodyText": "Again, I think .copyright_ignore is a more consistent file name (notice the echo command).", "author": "keithc-ca", "createdAt": "2020-08-10T13:58:30Z", "path": "buildenv/jenkins/jobs/infrastructure/copyrightCheck.groovy", "diffHunk": "@@ -57,15 +57,15 @@ timeout(time: 6, unit: 'HOURS') {\n                     // Set a different Copyright regex depending on the Repo the PR is from\n                     REGEX = \"\\'Copyright \\\\(c\\\\) ([0-9]{4}), ${DATE_YEAR}\\'\"\n \n-                    WHITE_LIST = []\n-                    if (fileExists(\"${WORKSPACE}/.copyright_whitelist\")) {\n-                        WHITE_LIST = readFile '.copyright_whitelist'\n-                        WHITE_LIST = WHITE_LIST.tokenize(\"\\n\")\n+                    ALLOW_LIST = []\n+                    if (fileExists(\"${WORKSPACE}/.copyright_allowlist\")) {\n+                        ALLOW_LIST = readFile '.copyright_allowlist'\n+                        ALLOW_LIST = ALLOW_LIST.tokenize(\"\\n\")\n                     }\n \n                     FILES_LIST.each() {\n                         println \"Checking file: '${it}'\"\n-                        if (WHITE_LIST.contains(it)) {\n+                        if (ALLOW_LIST.contains(it)) {\n                             echo \"Ignoring file\"", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMzc2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467923769", "bodyText": "nit: It's not really 'syntax', but the function name is defined by that plugin.", "author": "keithc-ca", "createdAt": "2020-08-10T14:00:01Z", "path": "buildenv/jenkins/jobs/infrastructure/wrapper_template.groovy", "diffHunk": "@@ -116,7 +116,8 @@ pipelineJob(job_name) {\n             if (triggers.pull_request_builder) {\n                 githubPullRequest {\n                     admins(triggers.pull_request_builder.admin_list)\n-                    blackListCommitAuthor(triggers.pull_request_builder.blacklist)\n+                    // #10071 This is plugin syntax https://plugins.jenkins.io/ghprb/", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyNTEzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r467925130", "bodyText": "'block_list' would be more consistent relative to 'admin_list'.", "author": "keithc-ca", "createdAt": "2020-08-10T14:02:06Z", "path": "buildenv/jenkins/jobs/infrastructure/wrapper_variables.yml", "diffHunk": "@@ -135,7 +135,7 @@ PullRequest-OpenJ9:\n             trigger_phrase: .*\\bjenkins\\s+(compile|test)\\b.*\n             cron: \"H/5 * * * *\"\n             admin_list: \"OpenJ9\"\n-            blacklist: \"kenrai123\"\n+            blocklist: \"kenrai123\"", "originalCommit": "1dbfa4f6a2433ec1d8092811ccd568a20e81beb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a2de3e802e147a356970df929e1f86b35eb708b", "url": "https://github.com/eclipse-openj9/openj9/commit/2a2de3e802e147a356970df929e1f86b35eb708b", "message": "Replace terms in infrastructure script with more inclusive ones\n\nReplace slave with node in infra scripts\nReplace whitelist with allowlist in various infra scripts\nReplace blacklist with blocklist\nReplace Jenkins Master with Jenkins Manager\n\nIssue #10071\n[skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>", "committedDate": "2021-01-15T20:29:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU4NTkzNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r558585936", "bodyText": "I think the file should be named .copyrightignore (lower-case) for consistency with other 'ignore' files and it should continue to be self-referential (the line should say .copyrightignore).", "author": "keithc-ca", "createdAt": "2021-01-15T20:50:59Z", "path": ".copyrightIgnore", "diffHunk": "@@ -1,3 +1,3 @@\n //List of files that don't require copyrights\n //One file per line, and full paths must be used\n-.copyright_whitelist\n+.copyright_allowlist", "originalCommit": "2a2de3e802e147a356970df929e1f86b35eb708b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU4NjU3MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10279#discussion_r558586571", "bodyText": "I suggest this would be easier to follow if the variable were IGNORE_LIST to be consistent with the name of the file it is from (which should be .copyrightignore).", "author": "keithc-ca", "createdAt": "2021-01-15T20:52:26Z", "path": "buildenv/jenkins/jobs/infrastructure/copyrightCheck.groovy", "diffHunk": "@@ -57,15 +57,15 @@ timeout(time: 6, unit: 'HOURS') {\n                     // Set a different Copyright regex depending on the Repo the PR is from\n                     REGEX = \"\\'Copyright \\\\(c\\\\) ([0-9]{4}), ${DATE_YEAR}\\'\"\n \n-                    WHITE_LIST = []\n-                    if (fileExists(\"${WORKSPACE}/.copyright_whitelist\")) {\n-                        WHITE_LIST = readFile '.copyright_whitelist'\n-                        WHITE_LIST = WHITE_LIST.tokenize(\"\\n\")\n+                    ALLOW_LIST = []\n+                    if (fileExists(\"${WORKSPACE}/.copyrightIgnore\")) {\n+                        ALLOW_LIST = readFile '.copyrightIgnore'\n+                        ALLOW_LIST = ALLOW_LIST.tokenize(\"\\n\")", "originalCommit": "2a2de3e802e147a356970df929e1f86b35eb708b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fa09bbfce4348483bd25a7a1e15623d98da6aa74", "url": "https://github.com/eclipse-openj9/openj9/commit/fa09bbfce4348483bd25a7a1e15623d98da6aa74", "message": "Replace terms in infrastructure script with more inclusive ones\n\nReplace slave with node in infra scripts\nReplace whitelist with allowlist in various infra scripts\nReplace blacklist with blocklist\nReplace Jenkins Master with Jenkins Manager\n\nIssue #10071\n[skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>", "committedDate": "2021-01-15T20:58:34Z", "type": "forcePushed"}, {"oid": "2e5c84c6b0e1d4c93c1102315cdbc0e3ebbb9e82", "url": "https://github.com/eclipse-openj9/openj9/commit/2e5c84c6b0e1d4c93c1102315cdbc0e3ebbb9e82", "message": "Replace terms in infrastructure script with more inclusive ones\n\nReplace slave with node in infra scripts\nReplace whitelist with allowlist in various infra scripts\nReplace blacklist with blocklist\nReplace Jenkins Master with Jenkins Manager\n\nIssue #10071\n[skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>", "committedDate": "2021-01-16T19:38:35Z", "type": "commit"}, {"oid": "2e5c84c6b0e1d4c93c1102315cdbc0e3ebbb9e82", "url": "https://github.com/eclipse-openj9/openj9/commit/2e5c84c6b0e1d4c93c1102315cdbc0e3ebbb9e82", "message": "Replace terms in infrastructure script with more inclusive ones\n\nReplace slave with node in infra scripts\nReplace whitelist with allowlist in various infra scripts\nReplace blacklist with blocklist\nReplace Jenkins Master with Jenkins Manager\n\nIssue #10071\n[skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>", "committedDate": "2021-01-16T19:38:35Z", "type": "forcePushed"}]}