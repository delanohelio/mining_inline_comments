{"pr_number": 8985, "pr_title": "Fix javacore native mem info output", "pr_createdAt": "2020-03-26T03:55:36Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8985", "timeline": [{"oid": "4b7874c422b3acf3c855a16769545a25ef8b31a0", "url": "https://github.com/eclipse-openj9/openj9/commit/4b7874c422b3acf3c855a16769545a25ef8b31a0", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-03-26T04:25:48Z", "type": "forcePushed"}, {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "url": "https://github.com/eclipse-openj9/openj9/commit/8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-03-26T16:56:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMTY4Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398821683", "bodyText": "This would be safer written like this (so no one has to wonder whether _MaxCategoryBits can be zero):\nU_32 bitmask_size = ((writer->_MaxCategoryBits + 31) / 32) * sizeof(U_32);", "author": "keithc-ca", "createdAt": "2020-03-26T19:03:37Z", "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1587,8 +1606,9 @@ outerMemCategoryCallBack (U_32 categoryCode, const char * categoryName, UDATA li\n \t * for all children of this node.\n \t */\n \tmemset(&total, 0, sizeof(memcategory_total));\n-\ttotal.category_bitmask = (U_32*)alloca(writer->_TotalCategories * sizeof(U_32));\n-\tmemset(total.category_bitmask, 0, writer->_TotalCategories * sizeof(U_32));\n+\tU_32 bitmask_size = (((writer->_MaxCategoryBits - 1) / 32) + 1) * sizeof(U_32);", "originalCommit": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTY1Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398845657", "bodyText": "updated", "author": "pshipton", "createdAt": "2020-03-26T19:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMTY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMzg5MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398823891", "bodyText": "I suggest this this is easier to read if the comparison is reversed (same for languageMaxIndex below):\n    if (max_indexes->omrMaxIndex < omrCode) {\n        max_indexes->omrMaxIndex = omrCode;\n    }", "author": "keithc-ca", "createdAt": "2020-03-26T19:07:16Z", "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1498,7 +1505,19 @@ JavaCoreDumpWriter::writeMemorySection(void)\n static UDATA\n countMemoryCategoriesCallback (U_32 categoryCode, const char * categoryName, UDATA liveBytes, UDATA liveAllocations, BOOLEAN isRoot, U_32 parentCategoryCode, OMRMemCategoryWalkState * state)\n {\n-\t(*(I_32 *)state->userData1)++;\n+\t(*(U_32 *)state->userData1)++;\n+\t\n+\tmemcategory_max_indexes *max_indexes = (memcategory_max_indexes *)state->userData2;\n+\tif (categoryCode > OMRMEM_LANGUAGE_CATEGORY_LIMIT) {\n+\t\tU_32 omrCode = OMRMEM_OMR_CATEGORY_INDEX_FROM_CODE(categoryCode);\n+\t\tif (omrCode > max_indexes->omrMaxIndex) {\n+\t\t\tmax_indexes->omrMaxIndex = omrCode;", "originalCommit": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTcyOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398845729", "bodyText": "updated", "author": "pshipton", "createdAt": "2020-03-26T19:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMzg5MQ=="}], "type": "inlineReview"}, {"oid": "eed06c75a07126655cc76967b877b2c7af494db0", "url": "https://github.com/eclipse-openj9/openj9/commit/eed06c75a07126655cc76967b877b2c7af494db0", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-03-26T19:42:27Z", "type": "commit"}, {"oid": "eed06c75a07126655cc76967b877b2c7af494db0", "url": "https://github.com/eclipse-openj9/openj9/commit/eed06c75a07126655cc76967b877b2c7af494db0", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-03-26T19:42:27Z", "type": "forcePushed"}]}