{"pr_number": 10349, "pr_title": "Rework trampolines for POWER10", "pr_createdAt": "2020-08-06T18:04:35Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10349", "timeline": [{"oid": "638564e79287066f6942a1c883caa1d726ab4781", "url": "https://github.com/eclipse-openj9/openj9/commit/638564e79287066f6942a1c883caa1d726ab4781", "message": "Clean up some unused declarations in Trampoline.cpp\n\nCo-authored-by: Julian Wang <zlwang@ca.ibm.com>\nSigned-off-by: Ben Thomas <ben@benthomas.ca>", "committedDate": "2020-07-30T15:35:19Z", "type": "commit"}, {"oid": "756b5d2de054ad7bf1b608bcf4fe4de7addc59c9", "url": "https://github.com/eclipse-openj9/openj9/commit/756b5d2de054ad7bf1b608bcf4fe4de7addc59c9", "message": "Move CPU detection before code cache initialization\n\nWith the introduction of POWER10, how the code cache is set up will\ndepend on whether or not POWER10 support is enabled. However, code cache\ninitialization is currently being run prior to CPU detection. In order\nto make things work correctly, the correct CPU must be detected earlier\nin the bootstrap process.\n\nSigned-off-by: Ben Thomas <ben@benthomas.ca>", "committedDate": "2020-08-04T17:17:42Z", "type": "commit"}, {"oid": "3b66ee95c3f68a717b9d397aaabf116172fdd60b", "url": "https://github.com/eclipse-openj9/openj9/commit/3b66ee95c3f68a717b9d397aaabf116172fdd60b", "message": "Rework trampolines for POWER10\n\nSince POWER10 supports PC-relative addressing, it is no longer necessary\nto use the pTOC in trampolines. Instead, a PC-relative load can be used\nto materialize the address to jump to. This also eliminates the need for\ntemporary trampolines, since trampolines can be atomically patched\nin-place.\n\nThe trampoline size has also been set to be a fixed size of 32 bytes.\nThis is done since indirect branch target prediction works based off of\n32-byte blocks, meaning that multiple indirect branches in the same\n32-byte block will alias each other, causing unnecessary mispredictions.\n\nCo-authored-by: Julian Wang <zlwang@ca.ibm.com>\nSigned-off-by: Ben Thomas <ben@benthomas.ca>", "committedDate": "2020-08-05T15:17:07Z", "type": "commit"}, {"oid": "086094d58e3d63d2700a52f088a62139145c15d4", "url": "https://github.com/eclipse-openj9/openj9/commit/086094d58e3d63d2700a52f088a62139145c15d4", "message": "Disable initTOC call when disableTOC option is enabled\n\nPreviously, TR_PPCTableOfConstants::initTOC would be called even if the\ndisableTOC option was enabled, causing memory to be allocated for the\npTOC even if it was disabled. This call is now guarded by a check of\nthis option.\n\nCo-authored-by: Julian Wang <zlwang@ca.ibm.com>\nSigned-off-by: Ben Thomas <ben@benthomas.ca>", "committedDate": "2020-08-05T15:17:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467129835", "bodyText": "This comment is a bit puzzling. Do you mean one trampoline per 8KB of code?", "author": "gita-omr", "createdAt": "2020-08-07T16:01:03Z", "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "originalCommit": "086094d58e3d63d2700a52f088a62139145c15d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwMTc1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467201756", "bodyText": "no.  this is for temporary trampolines (as opposed to permanent trampolines). temporary trampoline is used for recompilation. at next GC point, temporary trampoline is collected and recycled, and the corresponding permanent trampoline is updated.", "author": "zl-wang", "createdAt": "2020-08-07T18:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNTcwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467215704", "bodyText": "But why does it say 2KB while the shift right in the next line was changed from 12 to 13?", "author": "gita-omr", "createdAt": "2020-08-07T18:57:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzMjY5NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467232695", "bodyText": "the original comment meant to say: on average, per compilation is 2KB. with 10% of them expected to be recompiled (and possibly multiple times), we are setting the number of temporary trampolines to be some multiple of ccSize/20KB. such that, the earlier version is ccSize/4KB (5 times recompilation).  This time around, the individual trampoline size is enlarged to 32byte (for better branch target prediction purpose). It is not affordable to have that many temporary trampolines.  5-time recompilation in a single GC period is too conservative and wasting temporary tramp[olines. As a result, we adjusted it down to 2.5 time recompilation ... so, ccSize/8KB.", "author": "zl-wang", "createdAt": "2020-08-07T19:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzNDM1MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467234351", "bodyText": "by the way, running out of temporary trampoline is not a bug ... it still can continue:  just leading to repeated codePatching requests during that GC interval.  less performing in that sense.", "author": "zl-wang", "createdAt": "2020-08-07T19:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzNTM2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467235369", "bodyText": "i believed that (ccSize/8KB) is still plenty for temp trampolines.", "author": "zl-wang", "createdAt": "2020-08-07T19:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1MjA3OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467152078", "bodyText": "Might be helpful to describe a new trampoline layout here.", "author": "gita-omr", "createdAt": "2020-08-07T16:44:02Z", "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -69,14 +71,54 @@ void ppcCreateHelperTrampolines(uint8_t *trampPtr, int32_t numHelpers)\n       buffer = bufferStart;\n \n #if defined(TR_TARGET_64BIT)\n-         // ld gr11, [grPTOC, 8*(cookie-1)]\n-         *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+      if (!TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n+         {\n+         if (!TR::Options::getCmdLineOptions()->getOption(TR_DisableTOC))\n+            {\n+            // ld gr11, [grPTOC, 8*(cookie-1)]\n+            *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         else\n+            {\n+            // only gr11 is available for helper dispatch\n+\n+            // lis gr11, upper 16-bits\n+            *(int32_t *)buffer = 0x3d600000 | ((helper>>48) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 16--31\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>32) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // rldicr gr11, gr11, 32, 31\n+            *(int32_t *)buffer = 0x796b07c6;\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 32-47\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>16) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // ori gr11, gr11, bits 48--63\n+            *(int32_t *)buffer = 0x616b0000 | (helper & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         }\n+      else\n+         {\n+         // pld gr11, [,16], 1 (PC-relative)", "originalCommit": "086094d58e3d63d2700a52f088a62139145c15d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk5ODY0Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467998642", "bodyText": "indeed, it is in each instruction comment.", "author": "zl-wang", "createdAt": "2020-08-10T15:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1MjA3OA=="}], "type": "inlineReview"}]}