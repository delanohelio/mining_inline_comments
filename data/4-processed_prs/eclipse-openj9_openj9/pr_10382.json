{"pr_number": 10382, "pr_title": "Add host class package to anon class name for 11+", "pr_createdAt": "2020-08-12T21:25:40Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10382", "timeline": [{"oid": "5c9efd601ee2c64f4b133a35e295d46d828b05d0", "url": "https://github.com/eclipse-openj9/openj9/commit/5c9efd601ee2c64f4b133a35e295d46d828b05d0", "message": "Add host class package to anon class name for 11+\n\nReflection fails for anonymous classes with a host class in a module which\nexports only certain packages, since in OpenJ9, the anonymous class name does\nnot include package info. In the reference implementation, anonymous classes\ndo have package info in their name, so this commit changes OpenJ9 behaviour to\nmatch that.\n\nSigned-off-by: Mike Zhang <mike.h.zhang@ibm.com>", "committedDate": "2020-08-12T21:28:22Z", "type": "forcePushed"}, {"oid": "2da45d62c6f0a42af83e51eec381b8d5dfbd3ea3", "url": "https://github.com/eclipse-openj9/openj9/commit/2da45d62c6f0a42af83e51eec381b8d5dfbd3ea3", "message": "Add host class package to anon class name for 11+\n\nReflection fails for anonymous classes with a host class in a module which\nexports only certain packages, since in OpenJ9, the anonymous class name does\nnot include package info. In the reference implementation, anonymous classes\ndo have package info in their name, so this commit changes OpenJ9 behaviour to\nmatch that.\n\nSigned-off-by: Mike Zhang <mike.h.zhang@ibm.com>", "committedDate": "2020-08-20T18:05:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NDA2Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10382#discussion_r477574063", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif ((J2SE_VERSION(vm) >= J2SE_V11) && J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n          \n          \n            \n            \t\t\tJ9ROMClass *hostROMClass = originalRAMClass->hostClass->romClass;\n          \n          \n            \n            \t\t\tloadData.hostPackageName = J9UTF8_DATA(J9ROMCLASS_CLASSNAME(hostROMClass));;\n          \n          \n            \n            \t\t\tloadData.hostPackageLength = packageNameLength(hostROMClass);\n          \n          \n            \n            \t\t} else {\n          \n          \n            \n            \t\t\tloadData.hostPackageName = NULL;\n          \n          \n            \n            \t\t\tloadData.hostPackageLength = 0;\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tloadData.hostPackageName = NULL;\n          \n          \n            \n            \t\tloadData.hostPackageLength = 0;\n          \n          \n            \n            \t\tif ((J2SE_VERSION(vm) >= J2SE_V11) && J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n          \n          \n            \n            \t\t\tJ9ROMClass *hostROMClass = originalRAMClass->hostClass->romClass;\n          \n          \n            \n            \t\t\tloadData.hostPackageName = J9UTF8_DATA(J9ROMCLASS_CLASSNAME(hostROMClass));;\n          \n          \n            \n            \t\t\tloadData.hostPackageLength = packageNameLength(hostROMClass);\n          \n          \n            \n            \t\t}", "author": "DanHeidinga", "createdAt": "2020-08-26T20:36:51Z", "path": "runtime/util/hshelp.c", "diffHunk": "@@ -3531,6 +3531,15 @@ reloadROMClasses(J9VMThread * currentThread, jint class_count, const jvmtiClassD\n \t\tloadData.protectionDomain = J9VMJAVALANGCLASS_PROTECTIONDOMAIN(currentThread, heapClass);\n \t\tloadData.options = options;\n \n+\t\tif ((J2SE_VERSION(vm) >= J2SE_V11) && J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\t\tJ9ROMClass *hostROMClass = originalRAMClass->hostClass->romClass;\n+\t\t\tloadData.hostPackageName = J9UTF8_DATA(J9ROMCLASS_CLASSNAME(hostROMClass));;\n+\t\t\tloadData.hostPackageLength = packageNameLength(hostROMClass);\n+\t\t} else {\n+\t\t\tloadData.hostPackageName = NULL;\n+\t\t\tloadData.hostPackageLength = 0;\n+\t\t}", "originalCommit": "2da45d62c6f0a42af83e51eec381b8d5dfbd3ea3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NDExOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10382#discussion_r477574118", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif (isAnonFlagSet && (J2SE_VERSION(vm) >= J2SE_V11)) {\n          \n          \n            \n            \t\tJ9ROMClass *hostROMClass = hostClass->romClass;\n          \n          \n            \n            \t\tloadData.hostPackageName = J9UTF8_DATA(J9ROMCLASS_CLASSNAME(hostROMClass));\n          \n          \n            \n            \t\tloadData.hostPackageLength = packageNameLength(hostROMClass);\n          \n          \n            \n            \t} else {\n          \n          \n            \n            \t\tloadData.hostPackageName = NULL;\n          \n          \n            \n            \t\tloadData.hostPackageLength = 0;\n          \n          \n            \n            \t}\n          \n          \n            \n            \tloadData.hostPackageName = NULL;\n          \n          \n            \n            \tloadData.hostPackageLength = 0;\n          \n          \n            \n            \tif (isAnonFlagSet && (J2SE_VERSION(vm) >= J2SE_V11)) {\n          \n          \n            \n            \t\tJ9ROMClass *hostROMClass = hostClass->romClass;\n          \n          \n            \n            \t\tloadData.hostPackageName = J9UTF8_DATA(J9ROMCLASS_CLASSNAME(hostROMClass));\n          \n          \n            \n            \t\tloadData.hostPackageLength = packageNameLength(hostROMClass);\n          \n          \n            \n            \t}", "author": "DanHeidinga", "createdAt": "2020-08-26T20:36:58Z", "path": "runtime/bcutil/defineclass.c", "diffHunk": "@@ -107,6 +107,15 @@ internalDefineClass(\n \tloadData.freeFunction = NULL;\n \tloadData.romClass = existingROMClass;\n \n+\tif (isAnonFlagSet && (J2SE_VERSION(vm) >= J2SE_V11)) {\n+\t\tJ9ROMClass *hostROMClass = hostClass->romClass;\n+\t\tloadData.hostPackageName = J9UTF8_DATA(J9ROMCLASS_CLASSNAME(hostROMClass));\n+\t\tloadData.hostPackageLength = packageNameLength(hostROMClass);\n+\t} else {\n+\t\tloadData.hostPackageName = NULL;\n+\t\tloadData.hostPackageLength = 0;\n+\t}\n+", "originalCommit": "2da45d62c6f0a42af83e51eec381b8d5dfbd3ea3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4MTE3NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10382#discussion_r477581175", "bodyText": "I see for hidden classes tests, package name is already there. So I think package name should only be added for classes defined by Unsafe.defineAnonymous().  Hidden class can be anonymous, so package name should be added for non-hidden anon classes, i.e. isClassAnon() && !isClassHidden. You can change handleAnonClassName() to take an addition parameter like bool isHidden, and check this parameter to decide whether to add package name.", "author": "hangshao0", "createdAt": "2020-08-26T20:50:28Z", "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -430,7 +440,7 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \n \tbool isLambda = false;\n \tif (context->isClassAnon() || context->isClassHidden()) {\n-\t\tBuildResult res = handleAnonClassName(classFileParser->getParsedClassFile(), &isLambda);\n+\t\tBuildResult res = handleAnonClassName(classFileParser->getParsedClassFile(), &isLambda, context->hostPackageName(), context->hostPackageLength());", "originalCommit": "2da45d62c6f0a42af83e51eec381b8d5dfbd3ea3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5MzY4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10382#discussion_r477593685", "bodyText": "Probably it is worth testing if openjdk adds packagename to hidden classes using your TestAnonName.class\nbyte[] bytes = Files.readAllBytes(Paths.get(\"TestAnonName.class\"));\nClass<?> hc = lookup().defineHiddenClass(bytes, false).lookupClass();\nSystem.out.println(hc.getName());", "author": "hangshao0", "createdAt": "2020-08-26T21:15:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4MTE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY2NTc5OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10382#discussion_r477665798", "bodyText": "Output of Hotspot JDK15 is:\nHidden class name: HiddenNamedClass/0x0000000800b8f440\n\nOutput with my change is the same. Hidden classes don't seem to come with a host class when being created, so it shouldn't need an extra variable.", "author": "mikezhang1234567890", "createdAt": "2020-08-26T23:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4MTE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5MTg5MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10382#discussion_r478491891", "bodyText": "OK. Thanks.", "author": "hangshao0", "createdAt": "2020-08-27T15:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4MTE3NQ=="}], "type": "inlineReview"}, {"oid": "3de508ae78bcd1050e4697c7c7587be77136383b", "url": "https://github.com/eclipse-openj9/openj9/commit/3de508ae78bcd1050e4697c7c7587be77136383b", "message": "Add host class package to anon class name for 11+\n\nReflection fails for anonymous classes with a host class in a module which\nexports only certain packages, since in OpenJ9, the anonymous class name does\nnot include package info. In the reference implementation, anonymous classes\ndo have package info in their name, so this commit changes OpenJ9 behaviour to\nmatch that.\n\nSigned-off-by: Mike Zhang <mike.h.zhang@ibm.com>", "committedDate": "2020-08-27T18:56:31Z", "type": "commit"}, {"oid": "3de508ae78bcd1050e4697c7c7587be77136383b", "url": "https://github.com/eclipse-openj9/openj9/commit/3de508ae78bcd1050e4697c7c7587be77136383b", "message": "Add host class package to anon class name for 11+\n\nReflection fails for anonymous classes with a host class in a module which\nexports only certain packages, since in OpenJ9, the anonymous class name does\nnot include package info. In the reference implementation, anonymous classes\ndo have package info in their name, so this commit changes OpenJ9 behaviour to\nmatch that.\n\nSigned-off-by: Mike Zhang <mike.h.zhang@ibm.com>", "committedDate": "2020-08-27T18:56:31Z", "type": "forcePushed"}]}