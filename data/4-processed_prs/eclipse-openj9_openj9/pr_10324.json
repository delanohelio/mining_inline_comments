{"pr_number": 10324, "pr_title": "Share the memory allocated by copyStringToUTF8WithMemAlloc", "pr_createdAt": "2020-08-04T15:58:59Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10324", "timeline": [{"oid": "3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "url": "https://github.com/eclipse-openj9/openj9/commit/3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "message": "Share the memory allocated by copyStringToUTF8WithMemAlloc\n\nThe intention is to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string between\nverifyQualifiedName and its caller.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-04T16:01:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NTU2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465165569", "bodyText": "This would read better as an assignment of the constant bit and an if to OR in the second bit.", "author": "gacholio", "createdAt": "2020-08-04T16:10:26Z", "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -95,14 +95,15 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n \t/* Allocate and initialize a UTF8 copy of the Unicode class-name */\n \tif (NULL != className) {\n \t\tj9object_t classNameObject = J9_JNI_UNWRAP_REFERENCE(className);\n-\t\tutf8Name = (U_8*)vmFuncs->copyStringToUTF8WithMemAlloc(currentThread, classNameObject, J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT, \"\", 0, utf8NameStackBuffer, J9VM_PACKAGE_NAME_BUFFER_LENGTH, &utf8Length);\n+\t\tUDATA stringFlags = (validateName ? J9_STR_NULL_TERMINATE_RESULT : (J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT));", "originalCommit": "3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5OTEwNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465199106", "bodyText": "Updated the code against the suggestion above.", "author": "ChengJin01", "createdAt": "2020-08-04T17:04:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NTU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Njc2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465166766", "bodyText": "Same comment as above - assignment and if.", "author": "gacholio", "createdAt": "2020-08-04T16:12:11Z", "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -307,11 +307,19 @@ internalFindClassString(J9VMThread* currentThread, j9object_t moduleName, j9obje\n \t\tchar localBuf[J9VM_PACKAGE_NAME_BUFFER_LENGTH];\n \t\tchar *utf8Name = NULL;\n \t\tUDATA utf8Length = 0;\n+\t\tUDATA stringFlags = ((CLASSNAME_INVALID != allowedBitsForClassName) ? J9_STR_NULL_TERMINATE_RESULT : (J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT));", "originalCommit": "3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5OTIwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465199207", "bodyText": "Updated the code against the suggestion above.", "author": "ChengJin01", "createdAt": "2020-08-04T17:04:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Njc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NzcxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465167713", "bodyText": "For consistency with the other code, please declare this as U_8 * and cast it on the assignment, rather than casting the uses.", "author": "gacholio", "createdAt": "2020-08-04T16:13:38Z", "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -307,11 +307,19 @@ internalFindClassString(J9VMThread* currentThread, j9object_t moduleName, j9obje\n \t\tchar localBuf[J9VM_PACKAGE_NAME_BUFFER_LENGTH];\n \t\tchar *utf8Name = NULL;", "originalCommit": "3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5OTk4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465199988", "bodyText": "Updated the code involved against the suggestion above.", "author": "ChengJin01", "createdAt": "2020-08-04T17:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NzcxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTY2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465169666", "bodyText": "This comment seems out of date - the bcv function has no interaction with this code.", "author": "gacholio", "createdAt": "2020-08-04T16:16:26Z", "path": "runtime/vm/stringhelpers.cpp", "diffHunk": "@@ -445,14 +434,10 @@ verifyQualifiedName(J9VMThread *vmThread, j9object_t string, UDATA allowedBitsFo\n \t}\n \n \t/* map the return code against the arity value from checkNameImpl (called by bcvCheckClassName):", "originalCommit": "3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMDEzMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465200132", "bodyText": "Removed the outdated comments.", "author": "ChengJin01", "createdAt": "2020-08-04T17:06:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MDExMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465170112", "bodyText": "Please don't include the constant values in the comments.", "author": "gacholio", "createdAt": "2020-08-04T16:17:10Z", "path": "runtime/vm/stringhelpers.cpp", "diffHunk": "@@ -445,14 +434,10 @@ verifyQualifiedName(J9VMThread *vmThread, j9object_t string, UDATA allowedBitsFo\n \t}\n \n \t/* map the return code against the arity value from checkNameImpl (called by bcvCheckClassName):\n-\t * 1) if arity = -1, then rc = CLASSNAME_INVALID(0)\n-\t * 2) if arity = 0,  then rc = CLASSNAME_VALID_NON_ARRARY(1)\n-\t * 3) if arity > 0,  then rc = CLASSNAME_VALID_ARRARY(2)\n+\t * 1) if arity = 0,  then rc = CLASSNAME_VALID_NON_ARRARY(1)", "originalCommit": "3b84ca8efdd45dd6795748fc3393ea69ff623d3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMDM5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10324#discussion_r465200392", "bodyText": "Remove these constant values and modified the comments.", "author": "ChengJin01", "createdAt": "2020-08-04T17:06:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3MDExMg=="}], "type": "inlineReview"}, {"oid": "f149fbc1673b0c61df67c0404d5e1c96a7654fbe", "url": "https://github.com/eclipse-openj9/openj9/commit/f149fbc1673b0c61df67c0404d5e1c96a7654fbe", "message": "Share the memory allocated by copyStringToUTF8WithMemAlloc\n\nThe intention is to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string between\nverifyQualifiedName and its caller.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-04T17:04:02Z", "type": "commit"}, {"oid": "f149fbc1673b0c61df67c0404d5e1c96a7654fbe", "url": "https://github.com/eclipse-openj9/openj9/commit/f149fbc1673b0c61df67c0404d5e1c96a7654fbe", "message": "Share the memory allocated by copyStringToUTF8WithMemAlloc\n\nThe intention is to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string between\nverifyQualifiedName and its caller.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-08-04T17:04:02Z", "type": "forcePushed"}]}