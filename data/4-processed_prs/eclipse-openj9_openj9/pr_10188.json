{"pr_number": 10188, "pr_title": "Move verifyQualifiedName to internalFindClassString", "pr_createdAt": "2020-07-17T03:40:53Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10188", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4NzI0Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457587242", "bodyText": "This needs documenting to show that it is a bitfield. To reinforce this, CLASSNAME_VALID should be the bit OR of the other two values, rather than being defined directly to 3.", "author": "gacholio", "createdAt": "2020-07-20T17:49:58Z", "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -44,6 +44,7 @@\n #define CLASSNAME_INVALID\t\t\t0\n #define CLASSNAME_VALID_NON_ARRARY\t1\n #define CLASSNAME_VALID_ARRARY\t\t2\n+#define CLASSNAME_VALID\t\t\t\t3", "originalCommit": "9cfc75b4c4d8d077921fd1c4290c635bcd58b94e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzUwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457627507", "bodyText": "Updated against the suggestion above.", "author": "ChengJin01", "createdAt": "2020-07-20T19:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4NzI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4ODA2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457588069", "bodyText": "The parameter name is confusing. Please rename it and change the documentation to indicate that it is the set of allowed bits.", "author": "gacholio", "createdAt": "2020-07-20T17:51:25Z", "path": "runtime/oti/vm_api.h", "diffHunk": "@@ -356,12 +356,13 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n  * @param className String object representing name of the class to load\n  * @param classLoader J9ClassLoader to use\n  * @param options load options such as J9_FINDCLASS_FLAG_EXISTING_ONLY\n+ * @param expectedReturnCode the expected return code to the caller", "originalCommit": "9cfc75b4c4d8d077921fd1c4290c635bcd58b94e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzg2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457627867", "bodyText": "Updated the documentation against the suggestion above.", "author": "ChengJin01", "createdAt": "2020-07-20T19:02:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4ODA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4ODIzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457588230", "bodyText": "Same as above.", "author": "gacholio", "createdAt": "2020-07-20T17:51:40Z", "path": "runtime/oti/vm_api.h", "diffHunk": "@@ -3115,10 +3116,11 @@ getStringUTF8Length(J9VMThread *vmThread,j9object_t string);\n *\n * @param[in] *vmThread current thread\n * @param[in] string the class name string\n+* @param[in] expectedReturnCode the expected return code to the caller", "originalCommit": "9cfc75b4c4d8d077921fd1c4290c635bcd58b94e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzkxNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457627914", "bodyText": "Updated the documentation against the suggestion above.", "author": "ChengJin01", "createdAt": "2020-07-20T19:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4ODIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4OTg2MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457589860", "bodyText": "Please either use a goto or nest the other code inside the if here to avoid multiple return.", "author": "gacholio", "createdAt": "2020-07-20T17:54:26Z", "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -301,6 +301,11 @@ internalFindClassString(J9VMThread* currentThread, j9object_t moduleName, j9obje\n \t\tUDATA utf8Length = 0;\n \t\tPORT_ACCESS_FROM_JAVAVM(vm);\n \n+\t\t/* Make sure the name is legal */\n+\t\tif (CLASSNAME_INVALID == verifyQualifiedName(currentThread, className, expectedReturnCode)) {\n+\t\t\treturn NULL;", "originalCommit": "9cfc75b4c4d8d077921fd1c4290c635bcd58b94e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyODI5Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457628297", "bodyText": "Nested the other code inside this if block as suggested above.", "author": "ChengJin01", "createdAt": "2020-07-20T19:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4OTg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5MDI5NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457590294", "bodyText": "Though it doesn't matter in practice, the parameters in the macro should really be reversed.", "author": "gacholio", "createdAt": "2020-07-20T17:55:09Z", "path": "runtime/vm/stringhelpers.cpp", "diffHunk": "@@ -450,11 +451,14 @@ verifyQualifiedName(J9VMThread *vmThread, j9object_t string)\n \t */\n \tif (arity < 0) {\n \t\treturn CLASSNAME_INVALID;\n-\t} else if (0 == arity) {\n-\t\treturn CLASSNAME_VALID_NON_ARRARY;\n-\t} else {\n-\t\treturn CLASSNAME_VALID_ARRARY;\n \t}\n+\n+\tresult = (0 == arity) ? CLASSNAME_VALID_NON_ARRARY : CLASSNAME_VALID_ARRARY;\n+\tif (J9_ARE_ANY_BITS_SET(expectedReturnCode, result)) {", "originalCommit": "9cfc75b4c4d8d077921fd1c4290c635bcd58b94e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyODc3Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457628776", "bodyText": "Agreed and fixed as suggested above.", "author": "ChengJin01", "createdAt": "2020-07-20T19:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5MDI5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5MTY4MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457591681", "bodyText": "This actually adds a call to verifyQualifiedName that wasn't there before. It likely doesn't matter, but could be fixed by adding CLASSNAME_INVALID as an input value to findClassString (i.e. check for this value in there and don't do the verification).", "author": "gacholio", "createdAt": "2020-07-20T17:57:36Z", "path": "runtime/j9vm/j7vmi.c", "diffHunk": "@@ -556,7 +556,8 @@ JVM_FindLoadedClass(JNIEnv* env, jobject classLoader, jobject className)\n \t\t\tNULL,\n \t\t\tJ9_JNI_UNWRAP_REFERENCE(className),\n \t\t\tvmClassLoader,\n-\t\t\tJ9_FINDCLASS_FLAG_EXISTING_ONLY);\n+\t\t\tJ9_FINDCLASS_FLAG_EXISTING_ONLY,\n+\t\t\tCLASSNAME_VALID);", "originalCommit": "9cfc75b4c4d8d077921fd1c4290c635bcd58b94e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTM4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457629388", "bodyText": "Agreed and passed CLASSNAME_INVALID over to findClassString in this case (the check there was updated to avoid verification for invalid bits)", "author": "ChengJin01", "createdAt": "2020-07-20T19:05:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5MTY4MQ=="}], "type": "inlineReview"}, {"oid": "67abcd8628dc564d2ee82cef018c9d892aecb8fc", "url": "https://github.com/eclipse-openj9/openj9/commit/67abcd8628dc564d2ee82cef018c9d892aecb8fc", "message": "Move verifyQualifiedName to internalFindClassString\n\nThe intention is to move verifyQualifiedName to internalFindClassString\nso as to call hashClassTableAtString before verifyQualifiedName\nto avoid verifying duplicate classes.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-20T19:00:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTYyOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457629629", "bodyText": "I believe this logic is wrong - should be (INVALID == bits) || (INVALID != functionCall)", "author": "gacholio", "createdAt": "2020-07-20T19:06:10Z", "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -301,26 +301,31 @@ internalFindClassString(J9VMThread* currentThread, j9object_t moduleName, j9obje\n \t\tUDATA utf8Length = 0;\n \t\tPORT_ACCESS_FROM_JAVAVM(vm);\n \n-\t\tif (NULL != moduleName) {\n-\t\t\tJ9Module module = {0};\n-\t\t\tJ9Module *modulePtr = &module;\n-\n-\t\t\tmodulePtr->moduleName = moduleName;\n-\t\t\tfindResult = hashTableFind(classLoader->moduleHashTable, &modulePtr);\n-\t\t\tif (NULL != findResult) {\n-\t\t\t\tj9module = *findResult;\n+\t\t/* Make sure the name is legal */\n+\t\tif ((CLASSNAME_INVALID != allowedBitsForClassName)", "originalCommit": "67abcd8628dc564d2ee82cef018c9d892aecb8fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMzk0Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457633946", "bodyText": "Fixed the logic error given INVALID == bits is accepted to avoid verification in JVM_FindLoadedClass", "author": "ChengJin01", "createdAt": "2020-07-20T19:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyOTYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMDE0MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457630141", "bodyText": "INVALID should be documented here, with its meaning.", "author": "gacholio", "createdAt": "2020-07-20T19:07:03Z", "path": "runtime/oti/vm_api.h", "diffHunk": "@@ -356,12 +356,14 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n  * @param className String object representing name of the class to load\n  * @param classLoader J9ClassLoader to use\n  * @param options load options such as J9_FINDCLASS_FLAG_EXISTING_ONLY\n+ * @param allowedBitsForClassName the allowed bits for a valid class name,\n+ *        including CLASSNAME_VALID_NON_ARRARY, CLASSNAME_VALID_ARRARY, or CLASSNAME_VALID.", "originalCommit": "67abcd8628dc564d2ee82cef018c9d892aecb8fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMzQ4NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457633485", "bodyText": "Yes and CLASSNAME_INVALID was added given CLASSNAME_INVALID can be passed to findClassString.", "author": "ChengJin01", "createdAt": "2020-07-20T19:13:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMDE0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMDQzNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457630436", "bodyText": "Please add a bit of doc here saying these are bit values.", "author": "gacholio", "createdAt": "2020-07-20T19:07:35Z", "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -42,8 +42,9 @@\n #define J9VM_ASYNC_MAX_HANDLERS 32\n \n #define CLASSNAME_INVALID\t\t\t0", "originalCommit": "67abcd8628dc564d2ee82cef018c9d892aecb8fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzNzI5OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457637299", "bodyText": "Add comments as suggested above.", "author": "ChengJin01", "createdAt": "2020-07-20T19:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMDQzNg=="}], "type": "inlineReview"}, {"oid": "35ee35bc55f638b7b7949e9454cbf8125948357d", "url": "https://github.com/eclipse-openj9/openj9/commit/35ee35bc55f638b7b7949e9454cbf8125948357d", "message": "Move verifyQualifiedName to internalFindClassString\n\nThe intention is to move verifyQualifiedName to internalFindClassString\nso as to call hashClassTableAtString before verifyQualifiedName\nto avoid verifying duplicate classes.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-20T19:12:12Z", "type": "forcePushed"}, {"oid": "307f81a096b34c96becc941dbaf5553dc5b37774", "url": "https://github.com/eclipse-openj9/openj9/commit/307f81a096b34c96becc941dbaf5553dc5b37774", "message": "Move verifyQualifiedName to internalFindClassString\n\nThe intention is to move verifyQualifiedName to internalFindClassString\nso as to call hashClassTableAtString before verifyQualifiedName\nto avoid verifying duplicate classes.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-20T19:19:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0NDU0OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457644548", "bodyText": "INVALID isn't actually valid here, as it's filtered out by findClassString.", "author": "gacholio", "createdAt": "2020-07-20T19:34:36Z", "path": "runtime/oti/vm_api.h", "diffHunk": "@@ -3115,10 +3117,13 @@ getStringUTF8Length(J9VMThread *vmThread,j9object_t string);\n *\n * @param[in] *vmThread current thread\n * @param[in] string the class name string\n+* @param[in] allowedBitsForClassName the allowed bits for a valid class name,\n+*            including CLASSNAME_INVALID, CLASSNAME_VALID_NON_ARRARY, CLASSNAME_VALID_ARRARY, or CLASSNAME_VALID.", "originalCommit": "307f81a096b34c96becc941dbaf5553dc5b37774", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0NTczMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10188#discussion_r457645733", "bodyText": "Removed CLASSNAME_INVALID.", "author": "ChengJin01", "createdAt": "2020-07-20T19:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0NDU0OA=="}], "type": "inlineReview"}, {"oid": "40f31533981345611fdff40bffd3b2f2c4471200", "url": "https://github.com/eclipse-openj9/openj9/commit/40f31533981345611fdff40bffd3b2f2c4471200", "message": "Move verifyQualifiedName to internalFindClassString\n\nThe intention is to move verifyQualifiedName to internalFindClassString\nso as to call hashClassTableAtString before verifyQualifiedName\nto avoid verifying duplicate classes.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-20T19:36:13Z", "type": "commit"}, {"oid": "40f31533981345611fdff40bffd3b2f2c4471200", "url": "https://github.com/eclipse-openj9/openj9/commit/40f31533981345611fdff40bffd3b2f2c4471200", "message": "Move verifyQualifiedName to internalFindClassString\n\nThe intention is to move verifyQualifiedName to internalFindClassString\nso as to call hashClassTableAtString before verifyQualifiedName\nto avoid verifying duplicate classes.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-20T19:36:13Z", "type": "forcePushed"}]}