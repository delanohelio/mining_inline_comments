{"pr_number": 9069, "pr_title": "AArch64: Implement TR_UnloadedClassPicSite::compensate", "pr_createdAt": "2020-04-01T15:18:18Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9069", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzA1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r401707056", "bodyText": "Should be 8 bytes rather than 4.", "author": "0xdaryl", "createdAt": "2020-04-01T15:31:34Z", "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "diffHunk": "@@ -716,6 +716,11 @@ void TR_UnloadedClassPicSite::compensate(TR_FrontEnd *, bool isSMP, void *)\n    value |= 0x03a00001;\n    *((uint32_t *)_picLocation) = value;\n    armCodeSync(_picLocation, 4);\n+#elif defined(TR_HOST_ARM64)\n+   // On aarch64, we use constant data snippet for class unloading pic site\n+   extern void arm64CodeSync(unsigned char *codeStart, unsigned int codeSize);\n+   *(int64_t *)_picLocation = -1;\n+   arm64CodeSync(_picLocation, 4);", "originalCommit": "c01dd4d906bcd6d8fe23a80a6e7d5642340a87c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAwNzE5Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r402007197", "bodyText": "Thanks. Updated the code.", "author": "Akira1Saitoh", "createdAt": "2020-04-02T01:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzA1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzY2NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r401707664", "bodyText": "Where does AArch64 do this in a constant data snippet?  I'm looking for the code and can't seem to find it.", "author": "0xdaryl", "createdAt": "2020-04-01T15:32:25Z", "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "diffHunk": "@@ -716,6 +716,11 @@ void TR_UnloadedClassPicSite::compensate(TR_FrontEnd *, bool isSMP, void *)\n    value |= 0x03a00001;\n    *((uint32_t *)_picLocation) = value;\n    armCodeSync(_picLocation, 4);\n+#elif defined(TR_HOST_ARM64)\n+   // On aarch64, we use constant data snippet for class unloading pic site", "originalCommit": "c01dd4d906bcd6d8fe23a80a6e7d5642340a87c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5MTQ2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r401991465", "bodyText": "AArch64 does this here.\nhttps://github.com/eclipse/omr/blob/55f3fb746ea8878d3323ffbfb798ea6155268d9a/compiler/aarch64/codegen/ConstantDataSnippet.cpp#L101-L109\nWe have not implemented aconstEvaluator to use ConstantDataSnippet for class unloading pic, though. Z does it like this:\nhttps://github.com/eclipse/omr/blob/55f3fb746ea8878d3323ffbfb798ea6155268d9a/compiler/z/codegen/OMRCodeGenerator.cpp#L4019-L4023", "author": "Akira1Saitoh", "createdAt": "2020-04-02T00:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzY2NA=="}], "type": "inlineReview"}, {"oid": "4454a119d4bf5a39e3fed9c5367859a3a37c2315", "url": "https://github.com/eclipse-openj9/openj9/commit/4454a119d4bf5a39e3fed9c5367859a3a37c2315", "message": "AArch64: Implement TR_UnloadedClassPicSite::compensate\n\nThis commit implements `TR_UnloadedClassPicSite::compensate` for aarch64.\n\nSigned-off-by: Akira Saitoh <saiaki@jp.ibm.com>", "committedDate": "2020-04-02T01:47:46Z", "type": "commit"}, {"oid": "4454a119d4bf5a39e3fed9c5367859a3a37c2315", "url": "https://github.com/eclipse-openj9/openj9/commit/4454a119d4bf5a39e3fed9c5367859a3a37c2315", "message": "AArch64: Implement TR_UnloadedClassPicSite::compensate\n\nThis commit implements `TR_UnloadedClassPicSite::compensate` for aarch64.\n\nSigned-off-by: Akira Saitoh <saiaki@jp.ibm.com>", "committedDate": "2020-04-02T01:47:46Z", "type": "forcePushed"}]}