{"pr_number": 8931, "pr_title": "Cleanup Known object table support in JITServer", "pr_createdAt": "2020-03-20T15:14:27Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8931", "timeline": [{"oid": "6cd059862e280214c2e575d7576cb56a6f20fad1", "url": "https://github.com/eclipse-openj9/openj9/commit/6cd059862e280214c2e575d7576cb56a6f20fad1", "message": "Cleanup Known object table support in JITServer\n\nReplace `getIndex()` and `getIndexAt()` with `getOrCreateIndex()`\nand `getOrCreateIndexAt()`. Add JITServer known object table information\ndump in `KnownObjectTable::dumpTo()` for the compilation logs.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-03-20T15:46:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwMTcwMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8931#discussion_r396601701", "bodyText": "Let's use a reference here.", "author": "mpirvu", "createdAt": "2020-03-23T16:52:20Z", "path": "runtime/compiler/env/J9KnownObjectTable.cpp", "diffHunk": "@@ -341,96 +435,176 @@ J9::KnownObjectTable::dumpObjectTo(TR::FILE *file, Index i, const char *fieldNam\n       }\n    }\n \n+\n+#if defined(J9VM_OPT_JITSERVER)\n void\n-J9::KnownObjectTable::dumpTo(TR::FILE *file, TR::Compilation *comp)\n+J9::KnownObjectTable::getKnownObjectTableDumpInfo(std::vector<TR_KnownObjectTableDumpInfo> &knotDumpInfoList)\n    {\n-#if defined(J9VM_OPT_JITSERVER)\n-   // JITServer KOT TODO\n-   if (self()->comp()->isOutOfProcessCompilation())\n-      return;\n-#endif /* defined(J9VM_OPT_JITSERVER) */\n+   TR_ASSERT_FATAL(!self()->comp()->isOutOfProcessCompilation(), \"getKnownObjectTableDumpInfo() can not be executed at the server.\");\n+\n    TR_J9VMBase *j9fe = (TR_J9VMBase*)self()->fe();\n    J9MemoryManagerFunctions * mmf = jitConfig->javaVM->memoryManagerFunctions;\n+   TR::KnownObjectTable::Index endIndex = self()->getEndIndex();\n    TR::VMAccessCriticalSection j9KnownObjectTableDumpToCriticalSection(j9fe,\n                                                                         TR::VMAccessCriticalSection::tryToAcquireVMAccess,\n-                                                                        comp);\n-\n+                                                                        self()->comp());\n    if (j9KnownObjectTableDumpToCriticalSection.hasVMAccess())\n       {\n-      trfprintf(file, \"<knownObjectTable size=\\\"%d\\\"> // \", self()->getEndIndex());\n+      uintptr_t *ref = NULL;\n+      int32_t   len = 0;\n+      char      *className = NULL;\n+      int32_t   hashCode = 0;\n+\n+      for (uint32_t i = 0; i < endIndex; i++)\n+         {\n+         if (self()->isNull(i))\n+            {\n+            knotDumpInfoList.push_back(make_tuple(TR_KnownObjectTableDumpInfoStruct(NULL, 0, 0), std::string(\"\")));\n+            }\n+         else\n+            {\n+            ref = self()->getPointerLocation(i);\n+            hashCode = mmf->j9gc_objaccess_getObjectHashCode(jitConfig->javaVM, (J9Object*)(*ref));\n+            className = j9fe->getClassNameChars(j9fe->getObjectClass(*ref), len);\n+\n+            knotDumpInfoList.push_back(make_tuple(TR_KnownObjectTableDumpInfoStruct(ref, *ref, hashCode), std::string(className, len)));\n+            }\n+         }\n+      }\n+   }\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+\n+void\n+J9::KnownObjectTable::dumpTo(TR::FILE *file, TR::Compilation *comp)\n+   {\n+   TR::KnownObjectTable::Index endIndex = self()->getEndIndex();\n+#if defined(J9VM_OPT_JITSERVER)\n+   if (comp->isOutOfProcessCompilation())\n+      {\n+      auto stream = TR::CompilationInfo::getStream();\n+      stream->write(JITServer::MessageType::KnownObjectTable_getKnownObjectTableDumpInfo, JITServer::Void());\n+\n+      auto recv = stream->read<std::vector<TR_KnownObjectTableDumpInfo>>();\n+      auto knotDumpInfoList = std::get<0>(recv);", "originalCommit": "6cd059862e280214c2e575d7576cb56a6f20fad1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwMjE3Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/8931#discussion_r396602176", "bodyText": "%d should be replaces with %u because `numOfEntries is unsigned.", "author": "mpirvu", "createdAt": "2020-03-23T16:52:57Z", "path": "runtime/compiler/env/J9KnownObjectTable.cpp", "diffHunk": "@@ -341,96 +435,176 @@ J9::KnownObjectTable::dumpObjectTo(TR::FILE *file, Index i, const char *fieldNam\n       }\n    }\n \n+\n+#if defined(J9VM_OPT_JITSERVER)\n void\n-J9::KnownObjectTable::dumpTo(TR::FILE *file, TR::Compilation *comp)\n+J9::KnownObjectTable::getKnownObjectTableDumpInfo(std::vector<TR_KnownObjectTableDumpInfo> &knotDumpInfoList)\n    {\n-#if defined(J9VM_OPT_JITSERVER)\n-   // JITServer KOT TODO\n-   if (self()->comp()->isOutOfProcessCompilation())\n-      return;\n-#endif /* defined(J9VM_OPT_JITSERVER) */\n+   TR_ASSERT_FATAL(!self()->comp()->isOutOfProcessCompilation(), \"getKnownObjectTableDumpInfo() can not be executed at the server.\");\n+\n    TR_J9VMBase *j9fe = (TR_J9VMBase*)self()->fe();\n    J9MemoryManagerFunctions * mmf = jitConfig->javaVM->memoryManagerFunctions;\n+   TR::KnownObjectTable::Index endIndex = self()->getEndIndex();\n    TR::VMAccessCriticalSection j9KnownObjectTableDumpToCriticalSection(j9fe,\n                                                                         TR::VMAccessCriticalSection::tryToAcquireVMAccess,\n-                                                                        comp);\n-\n+                                                                        self()->comp());\n    if (j9KnownObjectTableDumpToCriticalSection.hasVMAccess())\n       {\n-      trfprintf(file, \"<knownObjectTable size=\\\"%d\\\"> // \", self()->getEndIndex());\n+      uintptr_t *ref = NULL;\n+      int32_t   len = 0;\n+      char      *className = NULL;\n+      int32_t   hashCode = 0;\n+\n+      for (uint32_t i = 0; i < endIndex; i++)\n+         {\n+         if (self()->isNull(i))\n+            {\n+            knotDumpInfoList.push_back(make_tuple(TR_KnownObjectTableDumpInfoStruct(NULL, 0, 0), std::string(\"\")));\n+            }\n+         else\n+            {\n+            ref = self()->getPointerLocation(i);\n+            hashCode = mmf->j9gc_objaccess_getObjectHashCode(jitConfig->javaVM, (J9Object*)(*ref));\n+            className = j9fe->getClassNameChars(j9fe->getObjectClass(*ref), len);\n+\n+            knotDumpInfoList.push_back(make_tuple(TR_KnownObjectTableDumpInfoStruct(ref, *ref, hashCode), std::string(className, len)));\n+            }\n+         }\n+      }\n+   }\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+\n+void\n+J9::KnownObjectTable::dumpTo(TR::FILE *file, TR::Compilation *comp)\n+   {\n+   TR::KnownObjectTable::Index endIndex = self()->getEndIndex();\n+#if defined(J9VM_OPT_JITSERVER)\n+   if (comp->isOutOfProcessCompilation())\n+      {\n+      auto stream = TR::CompilationInfo::getStream();\n+      stream->write(JITServer::MessageType::KnownObjectTable_getKnownObjectTableDumpInfo, JITServer::Void());\n+\n+      auto recv = stream->read<std::vector<TR_KnownObjectTableDumpInfo>>();\n+      auto knotDumpInfoList = std::get<0>(recv);\n+\n+      uint32_t numOfEntries = knotDumpInfoList.size();\n+      TR_ASSERT_FATAL((numOfEntries == endIndex), \"The client table size %u is different from the server table size %u\", numOfEntries, endIndex);\n+\n+      trfprintf(file, \"<knownObjectTable size=\\\"%d\\\"> // \", numOfEntries);", "originalCommit": "6cd059862e280214c2e575d7576cb56a6f20fad1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5531aaecb426156e9e71e30ade669c374f5496af", "url": "https://github.com/eclipse-openj9/openj9/commit/5531aaecb426156e9e71e30ade669c374f5496af", "message": "Cleanup Known object table support in JITServer\n\nReplace `getIndex()` and `getIndexAt()` with `getOrCreateIndex()`\nand `getOrCreateIndexAt()`. Add JITServer known object table information\ndump in `KnownObjectTable::dumpTo()` for the compilation logs.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-03-23T17:19:01Z", "type": "forcePushed"}, {"oid": "d837fbbd6ca2c6b735f26956b980a6037cfe3b2a", "url": "https://github.com/eclipse-openj9/openj9/commit/d837fbbd6ca2c6b735f26956b980a6037cfe3b2a", "message": "Cleanup Known object table support in JITServer\n\nReplace `getIndex()` and `getIndexAt()` with `getOrCreateIndex()`\nand `getOrCreateIndexAt()`. Add JITServer known object table information\ndump in `KnownObjectTable::dumpTo()` for the compilation logs.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-03-23T17:33:44Z", "type": "commit"}, {"oid": "d837fbbd6ca2c6b735f26956b980a6037cfe3b2a", "url": "https://github.com/eclipse-openj9/openj9/commit/d837fbbd6ca2c6b735f26956b980a6037cfe3b2a", "message": "Cleanup Known object table support in JITServer\n\nReplace `getIndex()` and `getIndexAt()` with `getOrCreateIndex()`\nand `getOrCreateIndexAt()`. Add JITServer known object table information\ndump in `KnownObjectTable::dumpTo()` for the compilation logs.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-03-23T17:33:44Z", "type": "forcePushed"}]}