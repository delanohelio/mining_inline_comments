{"pr_number": 8744, "pr_title": "Support Jcmd dump with default settings", "pr_createdAt": "2020-03-04T14:35:40Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8744", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1NjUwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8744#discussion_r387756504", "bodyText": "Any reason the existing native can't be used here, it looks like it would work.", "author": "pshipton", "createdAt": "2020-03-04T15:49:43Z", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -271,14 +272,23 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\n-\t\t\t\tString request = dumpType + fileDirective + parts[1];\n-\t\t\t\ttry {\n-\t\t\t\t\tString actualDumpFile = triggerDumpsImpl(request, dumpType + \"DumpToFile\"); //$NON-NLS-1$\n-\t\t\t\t\tresult = DiagnosticProperties.makeStringResult(\"Dump written to \" + actualDumpFile); //$NON-NLS-1$\n-\t\t\t\t} catch (InvalidDumpOptionExceptionBase e) {\n-\t\t\t\t\tIPC.logMessage(\"doDump exception: \", e.getMessage()); //$NON-NLS-1$\n-\t\t\t\t\tDiagnosticProperties.makeExceptionProperties(e);\n+\t\t\t\tif (parts.length == 1) {\n+\t\t\t\t\t// there is no file path/name specified, use default settings like -Xdump\n+\t\t\t\t\tint rc = triggerDefaultDumpsImpl(dumpType);", "originalCommit": "d3e72e04a562fb62aacea62f1f7e5ff9eff5ed85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc4MjcxMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8744#discussion_r387782710", "bodyText": "The existing native openj9.internal.tools.attach.target.DiagnosticUtils.triggerDumpsImpl() is a wrapper of com.ibm.jvm.Dump.triggerDumpsImpl() which lives along with com.ibm.jvm.Dump.JavaDumpImpl(), com.ibm.jvm.Dump.SnapDumpImpl(), com.ibm.jvm.Dump.SystemDumpImpl(), and com.ibm.jvm.Dump.HeapDumpImpl(). Those Java/Snap/System/Heap specific dump native don't provide path/name, and they are in separated natives to avoid path/name parsing within native Dump.triggerDumpsImpl().\nSimilarly triggerDefaultDumpsImpl() doesn't invoke Dump.triggerDumpsImpl() directly either.", "author": "JasonFengJ9", "createdAt": "2020-03-04T16:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1NjUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxOTY1NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8744#discussion_r387819654", "bodyText": "I believe triggerDumpsImpl can be used. As long as \":file=\" + parts[1] isn't specified, it will use the default names. Please give this a try. Otherwise there are more changes required to triggerDefaultDumpsImpl which I'll call out in further review.", "author": "pshipton", "createdAt": "2020-03-04T17:28:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1NjUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4NjA1MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8744#discussion_r387886050", "bodyText": "Thanks, triggerDumpsImpl() did the trick when :file=name isn't supplied in the dump request string. Updated the PR, please have another look.\ncom.ibm.jvm.Dump.JavaDumpImpl(), com.ibm.jvm.Dump.SnapDumpImpl(), com.ibm.jvm.Dump.SystemDumpImpl(), and com.ibm.jvm.Dump.HeapDumpImpl() should be able to use Dump.triggerDumpsImpl() as well, but I am going to leave it to another PR.", "author": "JasonFengJ9", "createdAt": "2020-03-04T19:30:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1NjUwNA=="}], "type": "inlineReview"}, {"oid": "f3ed828742402ce843fcb1d71309fc6945b0c562", "url": "https://github.com/eclipse-openj9/openj9/commit/f3ed828742402ce843fcb1d71309fc6945b0c562", "message": "Support Jcmd dump with default settings\n\nDiagnosticUtils.triggerDumpsImpl() can generate dump files with default\nsettings when the dump request doesn't have `:file=name`, modified the\nrequest string according to the incoming arguments.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-04T19:23:43Z", "type": "forcePushed"}, {"oid": "8e823a319c2edcaa6abfc78f22c382aec9b8be71", "url": "https://github.com/eclipse-openj9/openj9/commit/8e823a319c2edcaa6abfc78f22c382aec9b8be71", "message": "Support Jcmd dump with default settings\n\nDiagnosticUtils.triggerDumpsImpl() can generate dump files with default\nsettings when the dump request doesn't have `:file=name`, modified the\nrequest string according to the incoming arguments;\nModified Jcmd help message;\nModified the test to adopt Jcmd without command argument;\nAdded a test for Jcmd with default settings;\nMinor refactoring.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-05T21:37:39Z", "type": "forcePushed"}, {"oid": "48dbf741ec547abff94dfd29c385702249a69790", "url": "https://github.com/eclipse-openj9/openj9/commit/48dbf741ec547abff94dfd29c385702249a69790", "message": "Support Jcmd dump with default settings\n\nDiagnosticUtils.triggerDumpsImpl() can generate dump files with default\nsettings when the dump request doesn't have `:file=name`, modified the\nrequest string according to the incoming arguments;\nModified Jcmd help message;\nModified the test to adopt Jcmd without command argument;\nAdded a test for Jcmd with default settings;\nMinor refactoring.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-06T03:36:26Z", "type": "commit"}, {"oid": "48dbf741ec547abff94dfd29c385702249a69790", "url": "https://github.com/eclipse-openj9/openj9/commit/48dbf741ec547abff94dfd29c385702249a69790", "message": "Support Jcmd dump with default settings\n\nDiagnosticUtils.triggerDumpsImpl() can generate dump files with default\nsettings when the dump request doesn't have `:file=name`, modified the\nrequest string according to the incoming arguments;\nModified Jcmd help message;\nModified the test to adopt Jcmd without command argument;\nAdded a test for Jcmd with default settings;\nMinor refactoring.\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-03-06T03:36:26Z", "type": "forcePushed"}]}