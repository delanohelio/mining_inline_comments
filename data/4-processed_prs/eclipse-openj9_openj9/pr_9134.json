{"pr_number": 9134, "pr_title": "Consolidate jitdump functionality into JitDump.cpp", "pr_createdAt": "2020-04-06T15:18:15Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9134", "timeline": [{"oid": "2f4b050068ea59eefcb6ea972633f6bfc5918b59", "url": "https://github.com/eclipse-openj9/openj9/commit/2f4b050068ea59eefcb6ea972633f6bfc5918b59", "message": "Consolidate jitdump functionality into JitDump.cpp\n\nAll functions related to jitdump generation are placed into JitDump.cpp\nand only the functions required external linkage are placed into the\ncorresponding header file. This is the first step towards refactoring\nand improving the jitdump functionality and documentation.\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>", "committedDate": "2020-04-06T15:16:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODQ3Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404368477", "bodyText": "The list of includes is huge. Do we actually need all these? Can the list be pruned?", "author": "mpirvu", "createdAt": "2020-04-06T20:29:48Z", "path": "runtime/compiler/control/JitDump.cpp", "diffHunk": "@@ -0,0 +1,737 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+#include <algorithm>\n+#include <limits.h>\n+#include <stdarg.h>\n+#include \"control/JitDump.hpp\"\n+\n+#include \"codegen/CodeGenerator.hpp\"", "originalCommit": "2f4b050068ea59eefcb6ea972633f6bfc5918b59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjI1Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404986257", "bodyText": "Fixed in af69312", "author": "fjeremic", "createdAt": "2020-04-07T17:28:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODkxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404368916", "bodyText": "This FIXME apparently has been solved, so let's eliminate the comment", "author": "mpirvu", "createdAt": "2020-04-06T20:30:35Z", "path": "runtime/compiler/control/JitDump.cpp", "diffHunk": "@@ -0,0 +1,737 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+#include <algorithm>\n+#include <limits.h>\n+#include <stdarg.h>\n+#include \"control/JitDump.hpp\"\n+\n+#include \"codegen/CodeGenerator.hpp\"\n+#include \"compile/CompilationTypes.hpp\"\n+#include \"compile/Method.hpp\"\n+#include \"compile/ResolvedMethod.hpp\"\n+#include \"control/OptimizationPlan.hpp\"\n+#include \"control/OptionsUtil.hpp\"\n+#include \"control/Recompilation.hpp\"\n+#include \"control/RecompilationInfo.hpp\"\n+#include \"control/CompilationController.hpp\"\n+#include \"env/ClassLoaderTable.hpp\"\n+#include \"env/CompilerEnv.hpp\"\n+#include \"env/IO.hpp\"\n+#include \"env/J2IThunk.hpp\"\n+#include \"env/PersistentCHTable.hpp\"\n+#include \"env/PersistentInfo.hpp\"\n+#include \"env/jittypes.h\"\n+#include \"env/ClassTableCriticalSection.hpp\"\n+#include \"env/VMAccessCriticalSection.hpp\"\n+#include \"env/VMJ9.h\"\n+#include \"il/DataTypes.hpp\"\n+#include \"ilgen/IlGeneratorMethodDetails_inlines.hpp\"\n+#include \"infra/Monitor.hpp\"\n+#include \"infra/MonitorTable.hpp\"\n+#include \"infra/CriticalSection.hpp\"\n+#include \"optimizer/DebuggingCounters.hpp\"\n+#include \"optimizer/JProfilingBlock.hpp\"\n+#include \"runtime/CodeCacheManager.hpp\"\n+#include \"runtime/HookHelpers.hpp\"\n+#include \"runtime/MethodMetaData.h\"\n+#include \"runtime/RelocationRuntime.hpp\"\n+#include \"runtime/asmprotos.h\"\n+#include \"runtime/codertinit.hpp\"\n+#include \"control/MethodToBeCompiled.hpp\"\n+#include \"control/CompilationRuntime.hpp\"\n+#include \"control/CompilationThread.hpp\"\n+#include \"env/VMJ9.h\"\n+#include \"env/j9method.h\"\n+#include \"env/ut_j9jit.h\"\n+#include \"ilgen/J9ByteCodeIlGenerator.hpp\"\n+#include \"ilgen/J9ByteCodeIterator.hpp\"\n+#include \"runtime/IProfiler.hpp\"\n+#include \"runtime/HWProfiler.hpp\"\n+#include \"env/SystemSegmentProvider.hpp\"\n+#if defined(J9VM_OPT_JITSERVER)\n+#include \"control/JITServerHelpers.hpp\"\n+#include \"runtime/JITServerIProfiler.hpp\"\n+#include \"runtime/JITServerStatisticsThread.hpp\"\n+#include \"runtime/Listener.hpp\"\n+#endif\n+\n+UDATA\n+blankDumpSignalHandler(struct J9PortLibrary *portLibrary, U_32 gpType, void *gpInfo, void *arg)\n+   {\n+   J9VMThread *vmThread = (J9VMThread *) arg;\n+   TR_VerboseLog::writeLineLocked(TR_Vlog_JITDUMP, \"vmThread=%p Recursive crash occurred. Aborting JIT dump.\", vmThread);\n+\n+   // Returning J9PORT_SIG_EXCEPTION_RETURN will make us come back to the same crashing instruction over and over\n+   //\n+   return J9PORT_SIG_EXCEPTION_RETURN; // FIXME: is this the right return type? - This appears to be the right return type", "originalCommit": "2f4b050068ea59eefcb6ea972633f6bfc5918b59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjMxNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404986317", "bodyText": "Fixed in af69312", "author": "fjeremic", "createdAt": "2020-04-07T17:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MTgwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404371803", "bodyText": "Let's clean the list of includes. We only need forward declarations for J9PortLibrary, J9VMThread and J9RASdumpContext", "author": "mpirvu", "createdAt": "2020-04-06T20:35:57Z", "path": "runtime/compiler/control/JitDump.hpp", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+#include \"bcnames.h\"", "originalCommit": "2f4b050068ea59eefcb6ea972633f6bfc5918b59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjYzNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404986635", "bodyText": "Fixed in af69312. We also require the includes for U_32, etc. Only two headers need to be included now and that is the minimal set.", "author": "fjeremic", "createdAt": "2020-04-07T17:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MTgwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3OTEwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404379103", "bodyText": "Previously, this was marked extern \"C\". Does it link now?", "author": "mpirvu", "createdAt": "2020-04-06T20:49:42Z", "path": "runtime/compiler/control/JitDump.hpp", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+#include \"bcnames.h\"\n+#include \"jithash.h\"\n+#include \"jitprotos.h\"\n+#include \"j9.h\"\n+#include \"j9cfg.h\"\n+#include \"j9modron.h\"\n+#include \"j9nonbuilder.h\"\n+#include \"j9consts.h\"\n+#include \"mmhook.h\"\n+#include \"mmomrhook.h\"\n+#include \"vmaccess.h\"\n+\n+UDATA\n+blankDumpSignalHandler(struct J9PortLibrary *portLibrary, U_32 gpType, void *gpInfo, void *arg);\n+\n+intptr_t", "originalCommit": "2f4b050068ea59eefcb6ea972633f6bfc5918b59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3NzIyMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404977223", "bodyText": "Yes it links now. See all passing tests. I removed the extern declaration because the functions are never invoked via name, but are instead invoked via function tables and thus we don't need to declare them with the extern \"C\" qualifier.", "author": "fjeremic", "createdAt": "2020-04-07T17:14:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3OTEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NjkwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9134#discussion_r404986903", "bodyText": "Actually I've reinstated the extern \"C\" qualifier. Fixed in af69312. See commit message for details.", "author": "fjeremic", "createdAt": "2020-04-07T17:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3OTEwMw=="}], "type": "inlineReview"}, {"oid": "af693129d3675d7b8816270e4df3612b111ddfbe", "url": "https://github.com/eclipse-openj9/openj9/commit/af693129d3675d7b8816270e4df3612b111ddfbe", "message": "Minimize includes in JitDump.cpp/hpp and reinstate extern \"C\"\n\nWe are reinstating the `extern \"C\"` qualifier here on the two functions\nwe expose because although not marking them as such still works it\ndepends on the include order, i.e. whether we include j9protos.h before\nwe declare the non-extern functions. This is fragile, so to avoid these\nlinker issues we reinstate the `extern \"C\"` qualifier here.\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>", "committedDate": "2020-04-07T17:28:08Z", "type": "commit"}]}