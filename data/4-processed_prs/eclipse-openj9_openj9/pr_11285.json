{"pr_number": 11285, "pr_title": "Remove invalid shrc asserts during shutdown", "pr_createdAt": "2020-11-26T16:53:14Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/11285", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1NzI2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11285#discussion_r531157265", "bodyText": "We may want to remove Trc_SHR_Assert_Equals(_headerProtectCntr, 1) 2 lines below as well.", "author": "hangshao0", "createdAt": "2020-11-26T17:17:07Z", "path": "runtime/shared_common/CompositeCache.cpp", "diffHunk": "@@ -3710,15 +3710,8 @@ SH_CompositeCacheImpl::runExitCode(J9VMThread *currentThread)\n \t * If not unprotected here, subsequent JVMs will not be able to write to readwrite area.\n \t */\n \tunprotectHeaderReadWriteArea(currentThread, true);\n-\tif (0 != (*_runtimeFlags & J9SHR_RUNTIMEFLAG_ENABLE_MPROTECT_ALL)) {\n-\t\t/* If mprotect=all is set, above call to unprotectHeaderReadWriteArea() will set _readWriteProtectCntr to 1. */\n-\t\tTrc_SHR_Assert_Equals(_readWriteProtectCntr, 1);\n-\t} else {\n-\t\tTrc_SHR_Assert_Equals(_readWriteProtectCntr, 0);\n-\t}\n #else\n \tunprotectHeaderReadWriteArea(currentThread, false);\n-\tTrc_SHR_Assert_Equals(_readWriteProtectCntr, 0);\n #endif\n \t/* If mprotect=all is not set, then final value of _headerProtectCntr should be same is its initial value (= 1).\n \t * If mprotect=all is set, then above call to unprotectHeaderReadWriteArea() will set it to 1.", "originalCommit": "8c06099a2c4f8b3d403bd7d8be52e4b8dbbaefbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MDE0Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/11285#discussion_r531160143", "bodyText": "Sure, updated.", "author": "pshipton", "createdAt": "2020-11-26T17:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1NzI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3MTg1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/11285#discussion_r531171852", "bodyText": "This one is protected by the readwrite lock, so I think the assert is valid, but it's not providing much value here.", "author": "pshipton", "createdAt": "2020-11-26T17:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1NzI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3MzIwOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/11285#discussion_r531173209", "bodyText": "Sorry, ignore that. The readwrite lock is only when mprotect=all", "author": "pshipton", "createdAt": "2020-11-26T17:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1NzI2NQ=="}], "type": "inlineReview"}, {"oid": "b811aadeed608ddc297b73c0e38170b8a5121632", "url": "https://github.com/eclipse-openj9/openj9/commit/b811aadeed608ddc297b73c0e38170b8a5121632", "message": "Remove invalid shrc asserts during shutdown\n\nThe asserts are accessing _readWriteProtectCntr without holding the\nappropriate mutex, the value can be modified by other threads. The value\nof _readWriteProtectCntr can be greater than zero (or 1 in the z/OS\ncase) if another thread has unprotected the read write area. Checking\nfor equality with a particular value is invalid.\n\nTesting shows _readWriteProtectCntr had a value of 1 before\n`unprotectHeaderReadWriteArea(currentThread, false)` was called, and\nreverts to zero after a delay.\n\nThe asserts occur during VM shutdown, which for the shared classes\ncomponent happens after the trace engine is shut down. The normal\nassertion behavior does not occur. If an assert fails the VM exits with\nreturn code 255 (-1) instead of zero.\n\nIssue https://github.com/eclipse/openj9/issues/6361\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-11-26T17:23:16Z", "type": "forcePushed"}, {"oid": "d9cd2c6261acaff8d300e711712b9183dcad8275", "url": "https://github.com/eclipse-openj9/openj9/commit/d9cd2c6261acaff8d300e711712b9183dcad8275", "message": "Remove invalid shrc asserts during shutdown\n\nThe asserts are accessing _readWriteProtectCntr or _headerProtectCntr\nwithout holding the appropriate mutex, the value can be modified by\nother threads. The value of these variables can be greater than zero (or\n1 in the z/OS case) if another thread has unprotected the read write\narea or header. Checking for equality with a particular value is\ninvalid.\n\nTesting shows _readWriteProtectCntr had a value of 1 before\n`unprotectHeaderReadWriteArea(currentThread, false)` was called, and\nreverts to zero after a delay.\n\nThe asserts occur during VM shutdown, which for the shared classes\ncomponent happens after the trace engine is shut down. The normal\nassertion behavior does not occur. If an assert fails the VM exits with\nreturn code 255 (-1) instead of zero.\n\nIssue https://github.com/eclipse/openj9/issues/6361\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-11-26T17:48:56Z", "type": "forcePushed"}, {"oid": "3f61c8c2ad5647430f8e453b76ea40225f84cd91", "url": "https://github.com/eclipse-openj9/openj9/commit/3f61c8c2ad5647430f8e453b76ea40225f84cd91", "message": "Remove invalid shrc asserts during shutdown\n\nThe asserts are accessing _readWriteProtectCntr without holding the\nappropriate mutex, the value can be modified by other threads. The value\ncan be greater than zero (or 1 in the z/OS case) if another thread has\nunprotected the read write area. Checking for equality with a particular\nvalue is invalid.\n\nRemoving the assert for _headerProtectCntr at the same time since it's\nnot providing much value.\n\nTesting shows _readWriteProtectCntr had a value of 1 before\n`unprotectHeaderReadWriteArea(currentThread, false)` was called, and\nreverts to zero after a delay.\n\nThe asserts occur during VM shutdown, which for the shared classes\ncomponent happens after the trace engine is shut down. The normal\nassertion behavior does not occur. If an assert fails the VM exits with\nreturn code 255 (-1) instead of zero.\n\nIssue https://github.com/eclipse/openj9/issues/6361\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-11-26T17:53:50Z", "type": "commit"}, {"oid": "3f61c8c2ad5647430f8e453b76ea40225f84cd91", "url": "https://github.com/eclipse-openj9/openj9/commit/3f61c8c2ad5647430f8e453b76ea40225f84cd91", "message": "Remove invalid shrc asserts during shutdown\n\nThe asserts are accessing _readWriteProtectCntr without holding the\nappropriate mutex, the value can be modified by other threads. The value\ncan be greater than zero (or 1 in the z/OS case) if another thread has\nunprotected the read write area. Checking for equality with a particular\nvalue is invalid.\n\nRemoving the assert for _headerProtectCntr at the same time since it's\nnot providing much value.\n\nTesting shows _readWriteProtectCntr had a value of 1 before\n`unprotectHeaderReadWriteArea(currentThread, false)` was called, and\nreverts to zero after a delay.\n\nThe asserts occur during VM shutdown, which for the shared classes\ncomponent happens after the trace engine is shut down. The normal\nassertion behavior does not occur. If an assert fails the VM exits with\nreturn code 255 (-1) instead of zero.\n\nIssue https://github.com/eclipse/openj9/issues/6361\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-11-26T17:53:50Z", "type": "forcePushed"}]}