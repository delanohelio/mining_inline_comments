{"pr_number": 9415, "pr_title": "Cache illegal final field modification at the server", "pr_createdAt": "2020-04-30T03:29:56Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9415", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MDU1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418060552", "bodyText": "This second line of comment can be removed.", "author": "mpirvu", "createdAt": "2020-04-30T14:39:05Z", "path": "runtime/compiler/control/HookedByTheJit.cpp", "diffHunk": "@@ -2484,20 +2484,25 @@ void jitIllegalFinalFieldModification(J9VMThread *currentThread, J9Class *fieldC\n    {\n    J9JITConfig * jitConfig = currentThread->javaVM->jitConfig;\n    TR::CompilationInfo * compInfo = TR::CompilationInfo::get(jitConfig);\n+   TR_J9VMBase * fe = TR_J9VMBase::get(jitConfig, currentThread);\n+\n+   // Set the bit so that VM doesn't report the modification next time\n+   fieldClass->classFlags |= J9ClassHasIllegalFinalFieldModifications;\n \n #if defined(J9VM_OPT_JITSERVER)\n    if (compInfo->getPersistentInfo()->getRemoteCompilationMode() == JITServer::SERVER)\n       {\n       // Don't execute this hook at the jitserver side\n       // This piece of code will be removed once all JIT hooks is disabled at the jitserver side", "originalCommit": "91c3579f653c1c8394b11805afb4aea6d4108605", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MjE2NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418062164", "bodyText": "Let's split this line because it's too long", "author": "mpirvu", "createdAt": "2020-04-30T14:41:16Z", "path": "runtime/compiler/control/JITClientCompilationThread.cpp", "diffHunk": "@@ -3138,6 +3138,9 @@ remoteCompile(\n    // Collect the list of unloaded classes\n    std::vector<TR_OpaqueClassBlock*> unloadedClasses(compInfo->getUnloadedClassesTempList()->begin(), compInfo->getUnloadedClassesTempList()->end());\n    compInfo->getUnloadedClassesTempList()->clear();\n+   std::vector<TR_OpaqueClassBlock*> illegalModificationList(compInfo->getIllegalFinalFieldModificationList()->begin(),\n+                                                                       compInfo->getIllegalFinalFieldModificationList()->end());", "originalCommit": "91c3579f653c1c8394b11805afb4aea6d4108605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEwMTYwOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418101608", "bodyText": "Not sure I'm following. It's already separated into two lines:\n   std::vector<TR_OpaqueClassBlock*> illegalModificationList(compInfo->getIllegalFinalFieldModificationList()->begin(),\n                                                             compInfo->getIllegalFinalFieldModificationList()->end());", "author": "a7ehuo", "createdAt": "2020-04-30T15:35:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MjE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2ODQ3OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418068478", "bodyText": "Changes from #9396 need to be incorporated. Please rebase.", "author": "mpirvu", "createdAt": "2020-04-30T14:49:31Z", "path": "runtime/compiler/env/CHTable.cpp", "diffHunk": "@@ -377,7 +377,7 @@ bool TR_CHTable::commit(TR::Compilation *comp)\n          {\n          if (TR::Options::isAnyVerboseOptionSet(TR_VerboseRuntimeAssumptions, TR_VerboseCompileEnd, TR_VerbosePerformance, TR_VerboseCompFailure))\n             {\n-            TR_VerboseLog::writeLineLocked(TR_Vlog_FAILURE, \"Failure while commiting static final field assumption for class %p for %s\", clazz, comp->signature());\n+            TR_VerboseLog::writeLineLocked(TR_Vlog_FAILURE, \"hasIllegalStaticFinalFieldModification: Failure while commiting static final field assumption for class %p for %s\", clazz, comp->signature());", "originalCommit": "91c3579f653c1c8394b11805afb4aea6d4108605", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3MDA3OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418070079", "bodyText": "This commented out code needs to be deleted.", "author": "mpirvu", "createdAt": "2020-04-30T14:51:48Z", "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -353,8 +353,25 @@ J9::ClassEnv::classHasIllegalStaticFinalFieldModification(TR_OpaqueClassBlock *\n #if defined(J9VM_OPT_JITSERVER)\n    if (auto stream = TR::CompilationInfo::getStream())\n       {\n+#if 0", "originalCommit": "91c3579f653c1c8394b11805afb4aea6d4108605", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3OTQzNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418079434", "bodyText": "I thought about it and we don't need to acquire the RWMutex for this operation.", "author": "mpirvu", "createdAt": "2020-04-30T15:04:32Z", "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -200,6 +200,39 @@ ClientSessionData::processUnloadedClasses(const std::vector<TR_OpaqueClassBlock*\n       writeReleaseClassUnloadRWMutex();\n    }\n \n+void\n+ClientSessionData::processIllegalFinalFieldModificationList(const std::vector<TR_OpaqueClassBlock*> &classes)\n+   {\n+   const size_t numOfClasses = classes.size();\n+\n+   if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n+      TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer,\n+         \"compThreadID=%d will process a list of %zu classes with illegal final field modification for clientUID %llu\",\n+            TR::compInfoPT->getCompThreadId(), numOfClasses, (unsigned long long)_clientUID);\n+\n+   if (numOfClasses > 0)\n+      writeAcquireClassUnloadRWMutex(); //TODO: use RAII style to avoid problems with exceptions", "originalCommit": "91c3579f653c1c8394b11805afb4aea6d4108605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEwNTk4NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418105984", "bodyText": "I'll remove them. I think it should be okay without taking the RWMutex.  Functional wise, it should work. If one thread reads the value without waiting for the write to complete and static field folding takes place, #9396 will abort the compilation properly at the client. This case might be rare so the performance might not be an issue.", "author": "a7ehuo", "createdAt": "2020-04-30T15:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3OTQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4MDM0Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9415#discussion_r418080342", "bodyText": "TR::compInfoPT->getCompThreadId() uses thread local storage which has overhead. Let's cache this and not call it repeatedly in the loop.", "author": "mpirvu", "createdAt": "2020-04-30T15:05:50Z", "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -200,6 +200,39 @@ ClientSessionData::processUnloadedClasses(const std::vector<TR_OpaqueClassBlock*\n       writeReleaseClassUnloadRWMutex();\n    }\n \n+void\n+ClientSessionData::processIllegalFinalFieldModificationList(const std::vector<TR_OpaqueClassBlock*> &classes)\n+   {\n+   const size_t numOfClasses = classes.size();\n+\n+   if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n+      TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer,\n+         \"compThreadID=%d will process a list of %zu classes with illegal final field modification for clientUID %llu\",\n+            TR::compInfoPT->getCompThreadId(), numOfClasses, (unsigned long long)_clientUID);\n+\n+   if (numOfClasses > 0)\n+      writeAcquireClassUnloadRWMutex(); //TODO: use RAII style to avoid problems with exceptions\n+\n+      {\n+      OMR::CriticalSection processClassesWithIllegalModification(getROMMapMonitor());\n+      for (auto clazz : classes)\n+         {\n+         auto it = _romClassMap.find((J9Class*)clazz);\n+         if (it != _romClassMap.end())\n+            {\n+            it->second._classFlags |= J9ClassHasIllegalFinalFieldModifications;\n+            if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n+               TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer,\n+                  \"compThreadID=%d found clazz %p in the cache and updated bit J9ClassHasIllegalFinalFieldModifications to 1\\n\",", "originalCommit": "91c3579f653c1c8394b11805afb4aea6d4108605", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09319e9b4f0de00ae72bd07dcfcebc7e2f7e0f45", "url": "https://github.com/eclipse-openj9/openj9/commit/09319e9b4f0de00ae72bd07dcfcebc7e2f7e0f45", "message": "Cache classes with illegal final field modification at the server\n\nSends a list of classes that have  J9ClassHasIllegalFinalFieldModifications\nbit set to the server in the compilation request. The class cache\nat the server is updated before the compilation. During the compilation,\nthe server only sends the message to query the value if the class is\nnot cached. If static field folding takes place in the\ncompilation at the server, the compilation is aborted at the client\nduring the CHTable commit (implemented in #9396)\nif J9ClassHasIllegalFinalFieldModifications is set at the client\nduring the remote compilation.\n\nImplements #9358\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-04-30T15:18:56Z", "type": "forcePushed"}, {"oid": "2026b170c9288ab1b9b7e0316701cf46a22fdf99", "url": "https://github.com/eclipse-openj9/openj9/commit/2026b170c9288ab1b9b7e0316701cf46a22fdf99", "message": "Cache classes with illegal final field modification at the server\n\nSends a list of classes that have  J9ClassHasIllegalFinalFieldModifications\nbit set to the server in the compilation request. The class cache\nat the server is updated before the compilation. During the compilation,\nthe server only sends the message to query the value if the class is\nnot cached. If static field folding takes place in the\ncompilation at the server, the compilation is aborted at the client\nduring the CHTable commit (implemented in #9396)\nif J9ClassHasIllegalFinalFieldModifications is set at the client\nduring the remote compilation.\n\nImplements #9358\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-04-30T15:48:37Z", "type": "forcePushed"}, {"oid": "26d606152c1b95a251c95f3089da1471c33f1417", "url": "https://github.com/eclipse-openj9/openj9/commit/26d606152c1b95a251c95f3089da1471c33f1417", "message": "Cache classes with illegal final field modification at the server\n\nSends a list of classes that have  J9ClassHasIllegalFinalFieldModifications\nbit set to the server in the compilation request. The class cache\nat the server is updated before the compilation. During the compilation,\nthe server only sends the message to query the value if the class is\nnot cached. If static field folding takes place in the\ncompilation at the server, the compilation is aborted at the client\nduring the CHTable commit (implemented in #9396)\nif J9ClassHasIllegalFinalFieldModifications is set at the client\nduring the remote compilation.\n\nImplements #9358\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-04-30T16:00:39Z", "type": "forcePushed"}, {"oid": "e14f4bf77c52e616f6aec843c625d24b4332fecb", "url": "https://github.com/eclipse-openj9/openj9/commit/e14f4bf77c52e616f6aec843c625d24b4332fecb", "message": "Cache illegal final field modification at the server\n\nSends a list of classes that have J9ClassHasIllegalFinalFieldModifications\nbit set to the server in the compilation request. The class cache\nat the server is updated before the compilation. During the compilation,\nthe server only sends the message to query the value if the class is\nnot cached. If static field folding takes place in the\ncompilation at the server, the compilation is aborted at the client\nduring the CHTable commit (implemented in #9396)\nif J9ClassHasIllegalFinalFieldModifications is set at the client\nduring the remote compilation.\n\nImplements #9358\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-04-30T17:19:43Z", "type": "commit"}, {"oid": "e14f4bf77c52e616f6aec843c625d24b4332fecb", "url": "https://github.com/eclipse-openj9/openj9/commit/e14f4bf77c52e616f6aec843c625d24b4332fecb", "message": "Cache illegal final field modification at the server\n\nSends a list of classes that have J9ClassHasIllegalFinalFieldModifications\nbit set to the server in the compilation request. The class cache\nat the server is updated before the compilation. During the compilation,\nthe server only sends the message to query the value if the class is\nnot cached. If static field folding takes place in the\ncompilation at the server, the compilation is aborted at the client\nduring the CHTable commit (implemented in #9396)\nif J9ClassHasIllegalFinalFieldModifications is set at the client\nduring the remote compilation.\n\nImplements #9358\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>", "committedDate": "2020-04-30T17:19:43Z", "type": "forcePushed"}]}