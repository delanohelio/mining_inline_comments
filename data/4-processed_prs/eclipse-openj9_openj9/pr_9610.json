{"pr_number": 9610, "pr_title": "Add support for -XX:[+|-]HandleSIGABRT", "pr_createdAt": "2020-05-19T13:02:18Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9610", "timeline": [{"oid": "56b035d768912acf0d23a02b5ab1f4e5b78d4743", "url": "https://github.com/eclipse-openj9/openj9/commit/56b035d768912acf0d23a02b5ab1f4e5b78d4743", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-19T13:18:02Z", "type": "forcePushed"}, {"oid": "b97cf3ea20080f29202bf4cf04a3e5d170aae96f", "url": "https://github.com/eclipse-openj9/openj9/commit/b97cf3ea20080f29202bf4cf04a3e5d170aae96f", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-19T13:22:29Z", "type": "forcePushed"}, {"oid": "c11842b5eeddc86e41a067ff3ef8cd654b848ac6", "url": "https://github.com/eclipse-openj9/openj9/commit/c11842b5eeddc86e41a067ff3ef8cd654b848ac6", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-21T02:18:27Z", "type": "forcePushed"}, {"oid": "c930966192da17c873d56e9099077406b9d0970b", "url": "https://github.com/eclipse-openj9/openj9/commit/c930966192da17c873d56e9099077406b9d0970b", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-21T02:19:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4ODEwNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r428888105", "bodyText": "Does the omr signal code need to be notified about this - ie by j9sig_set_options?", "author": "DanHeidinga", "createdAt": "2020-05-21T20:12:51Z", "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -6519,6 +6526,23 @@ setSignalOptions(J9JavaVM* vm)\n \t\t}\n \t}\n \n+\targIndex = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXNOHANDLESIGABRT, NULL);\n+\targIndex2 = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXHANDLESIGABRT, NULL);\n+\n+\tif (argIndex2 > argIndex) {\n+\t\t/* Enable the JVM abort handler since -XX:+HandleSIGABRT is seen last. */\n+\t\tif (OMR_ARE_ALL_BITS_SET(vm->sigFlags, J9_SIG_XRS_SYNC)) {\n+\t\t\t/* Throw error message if both -XX:+HandleSIGABRT and -Xrs/-Xrs:sync are supplied. */\n+\t\t\tj9nls_printf(portLibrary, J9NLS_ERROR, J9NLS_VM_INCOMPATIBLE_CMDLINE_OPTIONS_ERROR, VMOPT_XXHANDLESIGABRT, VMOPT_XRS);\n+\t\t\treturn -1;\n+\t\t}\n+\t} else if (argIndex > argIndex2) {\n+\t\t/* Disable the JVM abort handler since -XX:-HandleSIGABRT is seen last. */\n+\t\tvm->sigFlags |= J9_SIG_NO_SIG_ABRT;", "originalCommit": "c930966192da17c873d56e9099077406b9d0970b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1MDU2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r428950565", "bodyText": "No, the OMR signal code doesn't need to be notified. The VM handles SIGABRT from rasdump/dmpsup.c. The option is evaluated on the VM side (dmpsup.c) before any of the basic OMR signal functions are invoked. So, OMR doesn't need to be aware of this option.\nIn OMR, SIGABRT is categorized as an async signal. A Java user can potentially register a Java signal handler for SIGABRT: sun.misc.Signal.handle(...) -> JVM_RegisterSignal(...) -> omrsig_set_async_signal_handler(...).  We don't want to influence this code-path with the new option. This option only enables or disables the VM signal handler for SIGABRT, which is maintained in dmpsup.c.", "author": "babsingh", "createdAt": "2020-05-21T22:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4ODEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNjA3OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429026078", "bodyText": "Minor thing but can you fix the formatting of this comment?  The closing */ doesn't line up correctly (and didn't in the original code either)", "author": "DanHeidinga", "createdAt": "2020-05-22T03:36:59Z", "path": "runtime/rasdump/dmpsup.c", "diffHunk": "@@ -1095,14 +1095,12 @@ pushDumpFacade(J9JavaVM *vm)\n \t\t/* Install new facade */\n \t\tvm->j9rasDumpFunctions = (J9RASdumpFunctions *)queue;\n \n-\t\t/* Note that we need to do the same check in popDumpFacade()\n-\t\t *\n-\t\t * According to the port library SIGABRT (J9PORT_SIG_FLAG_SIGABRT) is an ASYNC signal, so you'd think we should be checking for J9PORT_SIG_OPTIONS_REDUCED_SIGNALS_ASYNCHRONOUS here.\n-\t\t *  However we want to disable the abortHandler when either of -Xrs / -Xrs:sync are present, so check for J9PORT_SIG_OPTIONS_REDUCED_SIGNALS_SYNCHRONOUS instead\n+\t\t/* Note that we need to do the same check in popDumpFacade().\n+\t\t * Do not install the abort handler if -Xrs, -Xrs:sync or -XX:-HandleSIGABRT are present.\n          */", "originalCommit": "c930966192da17c873d56e9099077406b9d0970b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNjE1OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429026158", "bodyText": "same nitpick here", "author": "DanHeidinga", "createdAt": "2020-05-22T03:37:22Z", "path": "runtime/rasdump/dmpsup.c", "diffHunk": "@@ -1121,12 +1119,10 @@ popDumpFacade(J9JavaVM *vm)\n \tif ( FIND_DUMP_QUEUE(vm, queue) )\n \t{\n \t\tPORT_ACCESS_FROM_JAVAVM(vm);\n-\t\t/* Note that we need to do the same check in pushDumpFacade()\n-\t\t *\n-\t\t * According to the port library SIGABRT (J9PORT_SIG_FLAG_SIGABRT) is an ASYNC signal, so you'd think we should be checking for J9PORT_SIG_OPTIONS_REDUCED_SIGNALS_ASYNCHRONOUS here.\n-\t\t *  However we want to disable the abortHandler when either of -Xrs / -Xrs:sync are present, so check for J9PORT_SIG_OPTIONS_REDUCED_SIGNALS_SYNCHRONOUS instead\n+\t\t/* Note that we need to do the same check in pushDumpFacade().\n+\t\t * Do not install the abort handler if -Xrs, -Xrs:sync or -XX:-HandleSIGABRT are present.\n          */", "originalCommit": "c930966192da17c873d56e9099077406b9d0970b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "url": "https://github.com/eclipse-openj9/openj9/commit/70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T08:17:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMTgxMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429231811", "bodyText": "we can just use <subset>9+</subset>", "author": "llxia", "createdAt": "2020-05-22T13:00:38Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/playlist.xml", "diffHunk": "@@ -0,0 +1,99 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>cmdLineTest_sigabrtHandlingTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \\\n+\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t-DRESJAR=$(CMDLINETESTER_RESJAR) \\\n+\t-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS)$(SQ) \\\n+\t-DJAVA_EXECUTABLE_DIR=$(Q)$(TEST_JDK_HOME)$(D)bin$(Q) \\\n+\t-DUTILS_DIR=$(Q)$(JVM_TEST_ROOT)$(D)functional$(D)cmdLineTests$(D)utils$(Q) \\\n+\t-DGLAUNCH=$(Q)$(JAVA_SHARED_LIBRARIES_DIR)$(D)glaunch$(Q) \\\n+\t-DJVMLIBPATH=$(Q)$(TEST_JDK_HOME)$(D)jre$(D)bin$(D)j9vm$(Q) \\\n+\t-DFIBTARGET=$(Q)VMBench$(D)FibBench$(Q) \\\n+\t-DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \\\n+\t-Xint -jar $(CMDLINETESTER_JAR) \\\n+\t-config  $(Q)$(TEST_RESROOT)$(D)sigabrtHandlingTest.xml$(Q) -verbose -explainExcludes -xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \\\n+\t${TEST_STATUS}\t</command>\n+\t\t<platformRequirements></platformRequirements>\n+\t\t<levels>\n+\t\t\t<level>sanity</level>\n+\t\t</levels>\n+\t\t<groups>\n+\t\t\t<group>functional</group>\n+\t\t</groups>\n+\t\t<types>\n+\t\t\t<type>native</type>\n+\t\t</types>\n+\t\t<subsets>\n+\t\t\t<subset>8</subset>\n+\t\t</subsets>\n+\t\t<impls>\n+\t\t\t<impl>openj9</impl>\n+\t\t\t<impl>ibm</impl>\n+\t\t</impls>\n+\t</test>\n+\t<test>\n+\t\t<testCaseName>cmdLineTest_sigabrtHandlingTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \\\n+\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t-DRESJAR=$(CMDLINETESTER_RESJAR) \\\n+\t-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS)$(SQ) \\\n+\t-DJAVA_EXECUTABLE_DIR=$(Q)$(TEST_JDK_HOME)$(D)bin$(Q) \\\n+\t-DUTILS_DIR=$(Q)$(JVM_TEST_ROOT)$(D)functional$(D)cmdLineTests$(D)utils$(Q) \\\n+\t-DGLAUNCH=$(Q)$(JAVA_SHARED_LIBRARIES_DIR)$(D)glaunch$(Q) \\\n+\t-DJVMLIBPATH=$(Q)$(TEST_JDK_HOME)$(D)bin$(D)j9vm$(Q) \\\n+\t-DFIBTARGET=$(Q)VMBench$(D)FibBench$(Q) \\\n+\t-DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \\\n+\t-Xint -jar $(CMDLINETESTER_JAR) \\\n+\t-config  $(Q)$(TEST_RESROOT)$(D)sigabrtHandlingTest.xml$(Q) -verbose -explainExcludes -xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \\\n+\t${TEST_STATUS}\t</command>\n+\t\t<platformRequirements></platformRequirements>\n+\t\t<levels>\n+\t\t\t<level>sanity</level>\n+\t\t</levels>\n+\t\t<groups>\n+\t\t\t<group>functional</group>\n+\t\t</groups>\n+\t\t<types>\n+\t\t\t<type>native</type>\n+\t\t</types>\n+\t\t<subsets>\n+\t\t\t<subset>9</subset>\n+\t\t\t<subset>11+</subset>", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NzUzOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429257538", "bodyText": "Thanks for calling this out.  Java 9 is dead.  There's no reason to reference anything other than 8, 11 or non-lts releases > 11.\nIf 9+ is fine, then please use 11+", "author": "DanHeidinga", "createdAt": "2020-05-22T13:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM5MzQ3Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429393473", "bodyText": "Removed: <subset>9</subset>", "author": "babsingh", "createdAt": "2020-05-22T18:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMTgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMjUzOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429232538", "bodyText": "The default is NoOptions. We can remove line 28-30. Same for the test below.", "author": "llxia", "createdAt": "2020-05-22T13:02:12Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/playlist.xml", "diffHunk": "@@ -0,0 +1,99 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>cmdLineTest_sigabrtHandlingTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM5MzU3Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429393572", "bodyText": "Removed lines 28-30", "author": "babsingh", "createdAt": "2020-05-22T18:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMjUzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNjI3Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429236272", "bodyText": "Do we need THREADED ?", "author": "llxia", "createdAt": "2020-05-22T13:10:20Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/sigabrtHandlingTest.xml", "diffHunk": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<!DOCTYPE suite SYSTEM \"cmdlinetester.dtd\">\n+\n+<suite id=\"SIGABRT Handling Tests\" timeout=\"2400\">\n+ <variable name=\"CP\" value=\"-cp $Q$$RESJAR$$Q$ VMBench.GPTests.GPTest\" />\n+ <variable name=\"THREADED\" value=\" \" />", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM5MzY1Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429393653", "bodyText": "Removed THREADED, not needed.", "author": "babsingh", "createdAt": "2020-05-22T18:24:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNjI3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNjQ1Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429236453", "bodyText": "Did JAVA_EXECUTABLE_DIR, UTILS_DIR, GLAUNCH, JVMLIBPATH, FIBTARGET and JVM_OPTIONS get used?", "author": "llxia", "createdAt": "2020-05-22T13:10:42Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/playlist.xml", "diffHunk": "@@ -0,0 +1,99 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>cmdLineTest_sigabrtHandlingTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \\\n+\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t-DRESJAR=$(CMDLINETESTER_RESJAR) \\\n+\t-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS)$(SQ) \\\n+\t-DJAVA_EXECUTABLE_DIR=$(Q)$(TEST_JDK_HOME)$(D)bin$(Q) \\", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3NTkzMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429375932", "bodyText": "Should they only be used in sigabrtHandlingTest.xml?\nCan I remove them if they are not seen in sigabrtHandlingTest.xml?", "author": "babsingh", "createdAt": "2020-05-22T17:42:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNjQ1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4NDQxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429384416", "bodyText": "yes, I think so", "author": "llxia", "createdAt": "2020-05-22T18:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNjQ1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM5NTIwOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429395209", "bodyText": "Removed all unused Java properties.", "author": "babsingh", "createdAt": "2020-05-22T18:28:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNjQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNzkyNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429237925", "bodyText": "This test is a java test to me. If so, we do not need to add native .  And we may also be able to remove ADD_JVM_LIB_DIR_TO_LIBPATH", "author": "llxia", "createdAt": "2020-05-22T13:13:39Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/playlist.xml", "diffHunk": "@@ -0,0 +1,99 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>cmdLineTest_sigabrtHandlingTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \\\n+\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t-DRESJAR=$(CMDLINETESTER_RESJAR) \\\n+\t-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS)$(SQ) \\\n+\t-DJAVA_EXECUTABLE_DIR=$(Q)$(TEST_JDK_HOME)$(D)bin$(Q) \\\n+\t-DUTILS_DIR=$(Q)$(JVM_TEST_ROOT)$(D)functional$(D)cmdLineTests$(D)utils$(Q) \\\n+\t-DGLAUNCH=$(Q)$(JAVA_SHARED_LIBRARIES_DIR)$(D)glaunch$(Q) \\\n+\t-DJVMLIBPATH=$(Q)$(TEST_JDK_HOME)$(D)jre$(D)bin$(D)j9vm$(Q) \\\n+\t-DFIBTARGET=$(Q)VMBench$(D)FibBench$(Q) \\\n+\t-DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \\\n+\t-Xint -jar $(CMDLINETESTER_JAR) \\\n+\t-config  $(Q)$(TEST_RESROOT)$(D)sigabrtHandlingTest.xml$(Q) -verbose -explainExcludes -xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \\\n+\t${TEST_STATUS}\t</command>\n+\t\t<platformRequirements></platformRequirements>\n+\t\t<levels>\n+\t\t\t<level>sanity</level>\n+\t\t</levels>\n+\t\t<groups>\n+\t\t\t<group>functional</group>\n+\t\t</groups>\n+\t\t<types>\n+\t\t\t<type>native</type>\n+\t\t</types>", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MzQ4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429373488", "bodyText": "I need to set env. var. NATIVE_TEST_LIBS before running this test locally. Is type native responsible for setting NATIVE_TEST_LIBS in the builds?", "author": "babsingh", "createdAt": "2020-05-22T17:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNzkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4NDYzNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429384637", "bodyText": "which native lib are you using?", "author": "llxia", "createdAt": "2020-05-22T18:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNzkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4ODUyMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429388521", "bodyText": "native lib: gptest, function: Java_VMBench_GPTests_GPTest_gpAbort\nI get the following error if I remove the native type or ADD_JVM_LIB_DIR_TO_LIBPATH:\n [ERR] Exception in thread \"main\" java.lang.UnsatisfiedLinkError: gptest (Not found in java.library.path)", "author": "babsingh", "createdAt": "2020-05-22T18:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzNzkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzODQ0OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429238448", "bodyText": "The project name should be sigabrtHandlingTest", "author": "llxia", "createdAt": "2020-05-22T13:14:42Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/build.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<project name=\"cmdLineTests\" default=\"build\" basedir=\".\">", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM5NTMwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429395303", "bodyText": "Fixed project name", "author": "babsingh", "createdAt": "2020-05-22T18:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzODQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzOTg1Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429239853", "bodyText": "Please fix the identification.", "author": "llxia", "createdAt": "2020-05-22T13:17:32Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/sigabrtHandlingTest.xml", "diffHunk": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<!DOCTYPE suite SYSTEM \"cmdlinetester.dtd\">\n+\n+<suite id=\"SIGABRT Handling Tests\" timeout=\"2400\">\n+ <variable name=\"CP\" value=\"-cp $Q$$RESJAR$$Q$ VMBench.GPTests.GPTest\" />\n+ <variable name=\"THREADED\" value=\" \" />\n+\n+ <test id=\"Default\">\n+  <command>$EXE$ $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Processing dump event \"abort\"</output>\n+  <output type=\"required\" regex=\"no\">Processed dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-XX:+HandleSIGABRT\">\n+  <command>$EXE$ -XX:+HandleSIGABRT $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Processing dump event \"abort\"</output>\n+  <output type=\"required\" regex=\"no\">Processed dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-XX:-HandleSIGABRT -XX:+HandleSIGABRT\">\n+  <command>$EXE$ -XX:-HandleSIGABRT -XX:+HandleSIGABRT $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Processing dump event \"abort\"</output>\n+  <output type=\"required\" regex=\"no\">Processed dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-XX:-HandleSIGABRT\">\n+  <command>$EXE$ -XX:-HandleSIGABRT $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Invoking abort!</output>\n+  <output type=\"failure\" regex=\"no\">Processing dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-XX:+HandleSIGABRT -XX:-HandleSIGABRT\">\n+  <command>$EXE$ -XX:+HandleSIGABRT -XX:-HandleSIGABRT $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Invoking abort!</output>\n+  <output type=\"failure\" regex=\"no\">Processing dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-XX:+HandleSIGABRT -Xrs\">\n+  <command>$EXE$ -XX:+HandleSIGABRT -Xrs $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">-XX:+HandleSIGABRT is not supported with -Xrs</output>\n+  <output type=\"failure\" regex=\"no\">Invoking abort!</output>\n+  <output type=\"failure\" regex=\"no\">Processing dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-XX:+HandleSIGABRT -Xrs:sync\">\n+  <command>$EXE$ -XX:+HandleSIGABRT -Xrs:sync $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">-XX:+HandleSIGABRT is not supported with -Xrs</output>\n+  <output type=\"failure\" regex=\"no\">Invoking abort!</output>\n+  <output type=\"failure\" regex=\"no\">Processing dump event \"abort\"</output>\n+ </test>\n+\n+ <test id=\"-Xrs\">\n+  <command>$EXE$ -Xrs $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Invoking abort!</output>\n+  <output type=\"failure\" regex=\"no\">Processing dump event \"abort\"</output>\n+ </test>\n+ \n+ <test id=\"-XX:-HandleSIGABRT -Xrs\">\n+  <command>$EXE$ -XX:-HandleSIGABRT -Xrs $CP$ $THREADED$ abort</command>\n+  <output type=\"success\" regex=\"no\">Invoking abort!</output>\n+  <output type=\"failure\" regex=\"no\">Processing dump event \"abort\"</output>\n+ </test>\n+ \n+  <test id=\"-XX:-HandleSIGABRT -Xrs:sync\">\n+  <command>$EXE$ -XX:-HandleSIGABRT -Xrs:sync $CP$ $THREADED$ abort</command>", "originalCommit": "70385b4c5c1d5c6ac2bbd9029799fbf849590b93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NDc0OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429254749", "bodyText": "indentation...", "author": "pshipton", "createdAt": "2020-05-22T13:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzOTg1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3MTA0MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429271040", "bodyText": "yep, I meant indentation. :)", "author": "llxia", "createdAt": "2020-05-22T14:12:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzOTg1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM5NTM3Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r429395373", "bodyText": "Fixed indentation", "author": "babsingh", "createdAt": "2020-05-22T18:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzOTg1Mw=="}], "type": "inlineReview"}, {"oid": "6951475e0c52d51f95fe732f6a28d54ecd822ab4", "url": "https://github.com/eclipse-openj9/openj9/commit/6951475e0c52d51f95fe732f6a28d54ecd822ab4", "message": "Add a tracepoint to output an error for incompatible cmdline options\n\nThe new tracepoint takes the two incompatible cmdline options as string\ninputs.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T18:19:09Z", "type": "commit"}, {"oid": "85a9e61f0fd4a9794435071bb2ca8654cedee322", "url": "https://github.com/eclipse-openj9/openj9/commit/85a9e61f0fd4a9794435071bb2ca8654cedee322", "message": "Add macros to support -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T18:19:09Z", "type": "commit"}, {"oid": "d84fd70cc6b7acc572e32f700913dfb3af24a1e1", "url": "https://github.com/eclipse-openj9/openj9/commit/d84fd70cc6b7acc572e32f700913dfb3af24a1e1", "message": "Parse the new cmdline option: -XX:[+|-]HandleSIGABRT\n\n1. default                               -> JVM abort handler enabled\n2. -XX:+HandleSIGABRT                    -> JVM abort handler enabled\n3. -XX:-HandleSIGABRT                    -> JVM abort handler disabled\n4. -XX:-HandleSIGABRT -XX:+HandleSIGABRT -> JVM abort handler enabled\n5. -XX:+HandleSIGABRT -XX:-HandleSIGABRT -> JVM abort handler disabled\n6. -XX:+HandleSIGABRT -Xrs               -> not allowed, error thrown\n7. ... -XX:+HandleSIGABRT -Xrs:sync      -> not allowed, error thrown\n8. ... -XX:-HandleSIGABRT -Xrs...        -> JVM abort handler disabled\n\nsetSignalOptions returns an error code if incompatible command line\noptions are specified.\n\ninitializeJavaVM terminates with JNI_ERR if setSignalOptions returns an\nerror code.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T18:19:09Z", "type": "commit"}, {"oid": "7a397797680ebc2a77da8367d54bc510da6b06e8", "url": "https://github.com/eclipse-openj9/openj9/commit/7a397797680ebc2a77da8367d54bc510da6b06e8", "message": "Install the JVM abort handler based on -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T18:19:09Z", "type": "commit"}, {"oid": "a08edc39e82fd11784f21326998d106c7094c982", "url": "https://github.com/eclipse-openj9/openj9/commit/a08edc39e82fd11784f21326998d106c7094c982", "message": "Changes requested in the test code review\n\nCreated for easier verification. Will squash before merge.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T18:53:09Z", "type": "forcePushed"}, {"oid": "90a8d60ab1e9f122754dadcfe24c581d51e4b600", "url": "https://github.com/eclipse-openj9/openj9/commit/90a8d60ab1e9f122754dadcfe24c581d51e4b600", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-22T18:58:47Z", "type": "forcePushed"}, {"oid": "e141ac96d63902570a64355e8cd9705643a10e63", "url": "https://github.com/eclipse-openj9/openj9/commit/e141ac96d63902570a64355e8cd9705643a10e63", "message": "Disable system core files for -XX:[+|-]HandleSIGABRT tests\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-26T22:08:02Z", "type": "forcePushed"}, {"oid": "83f77b4619a474a36fa5826ef3f824085e864965", "url": "https://github.com/eclipse-openj9/openj9/commit/83f77b4619a474a36fa5826ef3f824085e864965", "message": "Disable the system core files for the -XX:[+|-]HandleSIGABRT tests\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-26T22:09:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc4MDg5MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r430780890", "bodyText": "Can you add a comment to this to indicate why this has been added?", "author": "DanHeidinga", "createdAt": "2020-05-27T00:34:37Z", "path": "test/functional/cmdLineTests/sigabrtHandlingTest/sigabrtHandlingTest.xml", "diffHunk": "@@ -0,0 +1,92 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<!DOCTYPE suite SYSTEM \"cmdlinetester.dtd\">\n+\n+<suite id=\"SIGABRT Handling Tests\" timeout=\"2400\">\n+ <variable name=\"CP\" value=\"-cp $Q$$RESJAR$$Q$ VMBench.GPTests.GPTest\" />\n+ <variable name=\"DUMP\" value=\"-Xdump:system:none\" />", "originalCommit": "83f77b4619a474a36fa5826ef3f824085e864965", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MzE0Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9610#discussion_r431083143", "bodyText": "A comment has been added to indicate why the -Xdump option is added.", "author": "babsingh", "createdAt": "2020-05-27T12:36:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc4MDg5MA=="}], "type": "inlineReview"}, {"oid": "952ed017118596b06aaa9ec13d54587ce916962c", "url": "https://github.com/eclipse-openj9/openj9/commit/952ed017118596b06aaa9ec13d54587ce916962c", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-27T12:23:26Z", "type": "forcePushed"}, {"oid": "4c4a874dcf23307ce1dc0003e311bf955095ccda", "url": "https://github.com/eclipse-openj9/openj9/commit/4c4a874dcf23307ce1dc0003e311bf955095ccda", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-27T12:34:53Z", "type": "commit"}, {"oid": "4c4a874dcf23307ce1dc0003e311bf955095ccda", "url": "https://github.com/eclipse-openj9/openj9/commit/4c4a874dcf23307ce1dc0003e311bf955095ccda", "message": "Add tests for -XX:[+|-]HandleSIGABRT\n\n- Copied functional/cmdLineTests/gptest to create sigabrtHandlingTest\n- class GPTest updated to output \"Invoking abort!\"\n- sigabrtHandlingTest.xml contains testcases for -XX:[+|-]HandleSIGABRT\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-05-27T12:34:53Z", "type": "forcePushed"}]}