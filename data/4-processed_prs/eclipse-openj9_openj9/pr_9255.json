{"pr_number": 9255, "pr_title": "Set sampling interval to UDATA_MAX to inform GC sampling is not required", "pr_createdAt": "2020-04-15T22:05:40Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9255", "timeline": [{"oid": "21d3d29682d83f06d57bab5c1f338a5e12314109", "url": "https://github.com/eclipse-openj9/openj9/commit/21d3d29682d83f06d57bab5c1f338a5e12314109", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-15T22:08:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MzQ4Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409253487", "bodyText": "nitpick\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif(JVMTI_EVENT_SAMPLED_OBJECT_ALLOC == event_type) {\n          \n          \n            \n            \t\t\tif (JVMTI_EVENT_SAMPLED_OBJECT_ALLOC == event_type) {", "author": "DanHeidinga", "createdAt": "2020-04-16T03:05:33Z", "path": "runtime/jvmti/jvmtiEventManagement.c", "diffHunk": "@@ -173,6 +173,14 @@ jvmtiSetEventNotificationMode(jvmtiEnv* env,\n \t\t\t\t\tbreak;\n  \t\t\t}\n \t\t}\n+#if JAVA_SPEC_VERSION >= 11\n+\t\telse if (JVMTI_DISABLE == mode) {\n+\t\t\tif(JVMTI_EVENT_SAMPLED_OBJECT_ALLOC == event_type) {", "originalCommit": "21d3d29682d83f06d57bab5c1f338a5e12314109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5NzYzOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409497639", "bodyText": "fixed.", "author": "JasonFengJ9", "createdAt": "2020-04-16T11:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MzQ4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5NzgyOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409497828", "bodyText": "fixed.", "author": "JasonFengJ9", "createdAt": "2020-04-16T11:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1MzQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1ODI3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409258270", "bodyText": "There's a getCurrentThread jvmti helper method to handle unattached threads correctly.  It should probably be used here as well.", "author": "DanHeidinga", "createdAt": "2020-04-16T03:23:31Z", "path": "runtime/jvmti/jvmtiCapability.c", "diffHunk": "@@ -478,8 +478,10 @@ jvmtiRelinquishCapabilities(jvmtiEnv* env,\n \n #if JAVA_SPEC_VERSION >= 11\n \t\tif (capabilities_ptr->can_generate_sampled_object_alloc_events) {\n-\t\t\t/* The default sampling interval is not changed. */\n+\t\t\tJ9VMThread *currentThread = vm->internalVMFunctions->currentVMThread(vm);", "originalCommit": "21d3d29682d83f06d57bab5c1f338a5e12314109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5OTEyMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409499123", "bodyText": "Agreed, use the helper method getCurrentVMThread here instead.\nFor another usage of currentThread at jvmtiHelpers.c:disposeEnvironment() without a return error code, check if the currentThread is NULL directly, and skip the use of currentThread when it is unattached and has a NULL value.", "author": "JasonFengJ9", "createdAt": "2020-04-16T11:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1ODI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2MTAyNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409261025", "bodyText": "Do we need some way to push this out to all the threads? (ie: an async event?) Is this event per thread or global?", "author": "DanHeidinga", "createdAt": "2020-04-16T03:34:15Z", "path": "runtime/jvmti/jvmtiHelpers.c", "diffHunk": "@@ -174,13 +175,14 @@ disposeEnvironment(J9JVMTIEnv * j9env, UDATA freeData)\n #if JAVA_SPEC_VERSION >= 11\n \t\tif (j9env->capabilities.can_generate_sampled_object_alloc_events) {\n \t\t\tJ9JVMTI_DATA_FROM_VM(vm)->flags &= ~J9JVMTI_FLAG_SAMPLED_OBJECT_ALLOC_ENABLED;\n+\t\t\t/* Set sampling interval to UDATA_MAX to inform GC that sampling is not required */\n+\t\t\tvm->memoryManagerFunctions->j9gc_set_allocation_sampling_interval(currentThread, UDATA_MAX);", "originalCommit": "21d3d29682d83f06d57bab5c1f338a5e12314109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5OTc1OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409499758", "bodyText": "If I understand the question correctly, there is no need to do so for all threads.\nj9gc_set_allocation_sampling_interval(vmThread, samplingInterval) modifies MM_GCExtensions.oolObjectSamplingBytesGranularity\nhttps://github.com/eclipse/omr/blob/eb71465140b3b7fd74f8ad12a65da4d384aa945e/gc/base/GCExtensionsBase.hpp#L295\nwhich is a global setting for GC to determine if the newly added MM_GCExtensions. _traceAllocationBytes (https://github.com/eclipse/omr/pull/5071/files) has passed the samplingInterval and a sampling event should be fired.\ncan_generate_sampled_object_alloc_events is global, the sampled objects come from the allocations in different threads.\nEdit: Internally GC calculates _traceAllocationBytes per thread, compares with oolObjectSamplingBytesGranularity which is a global setting, and fire J9HOOK_MM_OBJECT_ALLOCATION_SAMPLING. Though GC does sampling and fire event per thread, application allocation sampling rate is going to match the samplingInterval specified statistically in the long run.", "author": "JasonFengJ9", "createdAt": "2020-04-16T12:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2MTAyNQ=="}], "type": "inlineReview"}, {"oid": "b5bc56d4c1ee750b75e1ca0a99b04f3a948a9748", "url": "https://github.com/eclipse-openj9/openj9/commit/b5bc56d4c1ee750b75e1ca0a99b04f3a948a9748", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-16T11:55:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409614679", "bodyText": "If the sampling interval is global, the GC call should be changed to take a VM, not a thread.", "author": "gacholio", "createdAt": "2020-04-16T14:45:00Z", "path": "runtime/jvmti/jvmtiCapability.c", "diffHunk": "@@ -478,8 +478,13 @@ jvmtiRelinquishCapabilities(jvmtiEnv* env,\n \n #if JAVA_SPEC_VERSION >= 11\n \t\tif (capabilities_ptr->can_generate_sampled_object_alloc_events) {\n-\t\t\t/* The default sampling interval is not changed. */\n+\t\t\tJ9VMThread *currentThread = NULL;\n \t\t\tjvmtiData->flags &= ~J9JVMTI_FLAG_SAMPLED_OBJECT_ALLOC_ENABLED;\n+\t\t\trc = getCurrentVMThread(vm, &currentThread);\n+\t\t\tif (JVMTI_ERROR_NONE == rc) {\n+\t\t\t\t/* Set sampling interval to UDATA_MAX to inform GC that sampling is not required */\n+\t\t\t\tvm->memoryManagerFunctions->j9gc_set_allocation_sampling_interval(currentThread, UDATA_MAX);", "originalCommit": "b5bc56d4c1ee750b75e1ca0a99b04f3a948a9748", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzMTQzOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409631439", "bodyText": "@dmitripivkine Any objection?", "author": "gacholio", "createdAt": "2020-04-16T15:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0MDQ2NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409740464", "bodyText": "Seems right for me. Is there any thread-specific usage of this API I missed?", "author": "dmitripivkine", "createdAt": "2020-04-16T17:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTMyMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409745323", "bodyText": "Is there any thread-specific usage of this API I missed?\n\nNo, the currentThread is used to retrieve J9JavaVM instead.", "author": "JasonFengJ9", "createdAt": "2020-04-16T17:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1Nzg1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409757856", "bodyText": "Seems right for me. Is there any thread-specific usage of this API I missed?\n\nwe need MM_EnvironmentBase to retrieve _objectAllocationInterface for disableCachedAllocations() in #9254", "author": "LinHu2016", "createdAt": "2020-04-16T18:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2NjE2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409766165", "bodyText": "we need MM_EnvironmentBase to retrieve _objectAllocationInterface for disableCachedAllocations() in #9254\n\nPost a question at https://github.com/eclipse/openj9/pull/9254/files#r409765714", "author": "JasonFengJ9", "createdAt": "2020-04-16T18:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc3MTY3NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409771674", "bodyText": "Maybe we can retrieve MM_EnvironmentBase via getCurrentVMThread(), or somewhere else", "author": "LinHu2016", "createdAt": "2020-04-16T18:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc3OTE3NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409779174", "bodyText": "There is not a question how to get thread info, if we really need it we can keep API as it stays now. However there is a question about correctness global vs per thread. Is it correct to set is as now for thread or we should manage to set this for ALL threads?", "author": "dmitripivkine", "createdAt": "2020-04-16T18:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4MzgzOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409783839", "bodyText": "My complaint here was all the work to retrieve the thread, only to have it used to fetch the VM.", "author": "gacholio", "createdAt": "2020-04-16T19:03:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NDQyMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409784421", "bodyText": "j9gc_set_allocation_sampling_interval() is intended to affect all threads. If #9254 can find a way for disableCachedAllocations() via J9JavaVM * instead of J9VMThread *, j9gc_set_allocation_sampling_interval() can be modified to take J9JavaVM * which gives clear indication that this API is for VM all threads.", "author": "JasonFengJ9", "createdAt": "2020-04-16T19:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4ODkyNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409788926", "bodyText": "I believe this is true. However current implementation in #9254 sets flag for one thread only. It does not look correct for me. We need to double check. And it confirms GAC position - it is useful to set correct scope", "author": "dmitripivkine", "createdAt": "2020-04-16T19:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5NTQ3Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409795472", "bodyText": "Okay, am going to change j9gc_set_allocation_sampling_interval() to take J9JavaVM *.\n@LinHu2016 please adjust your PR & personal build.", "author": "JasonFengJ9", "createdAt": "2020-04-16T19:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNzE1NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r409817155", "bodyText": "sure, I am going to handle whole threads for disableCacheAllocations and monitor extensions->disableInlineAllocationForSamplingBytesGranularity for initializing _cachedAllocationsEnabled for new created thread, I am going to leave j9gc_set_allocation_sampling_interval() no change until this PR is merged.", "author": "LinHu2016", "createdAt": "2020-04-16T20:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3OTMzNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410179335", "bodyText": "Updated the PR to accept J9JavaVM * in j9gc_set_allocation_sampling_interval(). Keep the NULL check for currentThread within disposeEnvironment(). deleteAgentBreakpoint(J9VMThread *, J9JVMTIEnv *, J9JVMTIAgentBreakpoint *) and its associates might not need J9VMThread *currentThread, but will leave that to another PR.\n@gacholio @DanHeidinga please review.", "author": "JasonFengJ9", "createdAt": "2020-04-17T12:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDY3OQ=="}], "type": "inlineReview"}, {"oid": "0446bd025ed97da972412f7bb390a2d6f7eba132", "url": "https://github.com/eclipse-openj9/openj9/commit/0446bd025ed97da972412f7bb390a2d6f7eba132", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\nAlso changed j9gc_set_allocation_sampling_interval(J9VMThread*, UDATA)\nto j9gc_set_allocation_sampling_interval(J9JavaVM*, UDATA).\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-16T19:29:04Z", "type": "forcePushed"}, {"oid": "47d5475f50a13c3eb994ec5056bdfd3bfedb3e1e", "url": "https://github.com/eclipse-openj9/openj9/commit/47d5475f50a13c3eb994ec5056bdfd3bfedb3e1e", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\nAlso changed j9gc_set_allocation_sampling_interval(J9VMThread*, UDATA)\nto j9gc_set_allocation_sampling_interval(J9JavaVM*, UDATA).\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-17T13:26:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNzAxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410237013", "bodyText": "Why is this necessary?", "author": "gacholio", "createdAt": "2020-04-17T13:52:23Z", "path": "runtime/jvmti/jvmtiHelpers.c", "diffHunk": "@@ -174,20 +174,25 @@ disposeEnvironment(J9JVMTIEnv * j9env, UDATA freeData)\n #if JAVA_SPEC_VERSION >= 11\n \t\tif (j9env->capabilities.can_generate_sampled_object_alloc_events) {\n \t\t\tJ9JVMTI_DATA_FROM_VM(vm)->flags &= ~J9JVMTI_FLAG_SAMPLED_OBJECT_ALLOC_ENABLED;\n+\t\t\t/* Set sampling interval to UDATA_MAX to inform GC that sampling is not required */\n+\t\t\tvm->memoryManagerFunctions->j9gc_set_allocation_sampling_interval(vm, UDATA_MAX);\n \t\t}\n #endif /* JAVA_SPEC_VERSION >= 11 */\n \n \t\t/* Remove all breakpoints */\n \n-\t\tif (j9env->breakpoints != NULL) {\n+\t\tif (NULL != j9env->breakpoints) {\n \t\t\tJ9VMThread * currentThread = vm->internalVMFunctions->currentVMThread(vm);\n-\t\t\tpool_state poolState;\n-\t\t\tJ9JVMTIAgentBreakpoint * agentBreakpoint = NULL;\n-\n-\t\t\tagentBreakpoint = pool_startDo(j9env->breakpoints, &poolState);\n-\t\t\twhile (agentBreakpoint != NULL) {\n-\t\t\t\tdeleteAgentBreakpoint(currentThread, j9env, agentBreakpoint);\n-\t\t\t\tagentBreakpoint = pool_nextDo(&poolState);\n+\t\t\t/* Ignore the case that currentThread is NULL, i.e., unattached thread */", "originalCommit": "47d5475f50a13c3eb994ec5056bdfd3bfedb3e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2MDgzNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410260837", "bodyText": "currentThread is from vm->internalVMFunctions->currentVMThread(vm) which might return NULL as per https://github.com/eclipse/openj9/blob/5800af9452097b029c1a38fbc5cbd20011060a8b/runtime/jvmti/jvmtiHelpers.c#L502-L510\nCurrent function disposeEnvironment() doesn't return an error code, hence just call deleteAgentBreakpoint(currentThread, j9env, agentBreakpoint) when the currentThread is notNULL, and ignore the NULL case.", "author": "JasonFengJ9", "createdAt": "2020-04-17T14:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNzAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3NjM0MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410276341", "bodyText": "Is this to fix something? I don't believe this situation could actually occur, so I'd rather see the crash than a silent no-op.", "author": "gacholio", "createdAt": "2020-04-17T14:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNzAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3OTI5Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410279297", "bodyText": "No, this change is completely from eyeballing the code. Will restore the code then.", "author": "JasonFengJ9", "createdAt": "2020-04-17T14:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzNzAxMw=="}], "type": "inlineReview"}, {"oid": "2277a0de2afb9b2655c1d3438afab92741f9e21e", "url": "https://github.com/eclipse-openj9/openj9/commit/2277a0de2afb9b2655c1d3438afab92741f9e21e", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\nAlso changed j9gc_set_allocation_sampling_interval(J9VMThread*, UDATA)\nto j9gc_set_allocation_sampling_interval(J9JavaVM*, UDATA).\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-17T15:02:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI4NTUyMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410285521", "bodyText": "VM is fetched twice here, in two different ways. Please use a local.", "author": "gacholio", "createdAt": "2020-04-17T15:07:24Z", "path": "runtime/jvmti/jvmtiMemory.c", "diffHunk": "@@ -87,19 +87,15 @@ jvmtiSetHeapSamplingInterval(jvmtiEnv *env,\n {\n \tjvmtiError rc = JVMTI_ERROR_NONE;\n \tJ9VMThread *currentThread = NULL;\n-\tJ9JavaVM *vm = JAVAVM_FROM_ENV(env);\n \t\n \tTrc_JVMTI_jvmtiSetHeapSamplingInterval_Entry(env, samplingInterval);\n \t\n \tENSURE_PHASE_ONLOAD_OR_LIVE(env);\n \tENSURE_CAPABILITY(env, can_generate_sampled_object_alloc_events);\n \tENSURE_NON_NEGATIVE(samplingInterval);\n \n-\trc = getCurrentVMThread(vm, &currentThread);\n-\tif ((JVMTI_ERROR_NONE == rc) && (NULL != currentThread)) {\n-\t\t/* No negative samplingInterval, and there is no data lost when jint is casted to UDATA. */\n-\t\tvm->memoryManagerFunctions->j9gc_set_allocation_sampling_interval(currentThread, samplingInterval);\n-\t}\n+\t/* No negative samplingInterval, and there is no data lost when jint is casted to UDATA. */\n+\tcurrentThread->javaVM->memoryManagerFunctions->j9gc_set_allocation_sampling_interval(((J9JVMTIEnv *)env)->vm, samplingInterval);", "originalCommit": "2277a0de2afb9b2655c1d3438afab92741f9e21e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI5NTc3Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9255#discussion_r410295776", "bodyText": "Fixed, please have another look.", "author": "JasonFengJ9", "createdAt": "2020-04-17T15:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI4NTUyMQ=="}], "type": "inlineReview"}, {"oid": "7f48b86cc3f9874a726a311a1b37027115f57763", "url": "https://github.com/eclipse-openj9/openj9/commit/7f48b86cc3f9874a726a311a1b37027115f57763", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\nAlso changed j9gc_set_allocation_sampling_interval(J9VMThread*, UDATA)\nto j9gc_set_allocation_sampling_interval(J9JavaVM*, UDATA).\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-17T15:23:01Z", "type": "commit"}, {"oid": "7f48b86cc3f9874a726a311a1b37027115f57763", "url": "https://github.com/eclipse-openj9/openj9/commit/7f48b86cc3f9874a726a311a1b37027115f57763", "message": "Set sampling interval to UDATA_MAX to inform GC sampling is not required\n\nGC need to be informed that the allocation sampling has been disabled,\nand turn off related GC settings;\nSet sampling interval to UDATA_MAX in three cases:\n1. can_generate_sampled_object_alloc_events capability is removed;\n2. JVMTI_EVENT_SAMPLED_OBJECT_ALLOC event is disabled;\n3. The JVMTI environment enabled JVMTI_EVENT_SAMPLED_OBJECT_ALLOC is\ndisposed.\nAlso changed j9gc_set_allocation_sampling_interval(J9VMThread*, UDATA)\nto j9gc_set_allocation_sampling_interval(J9JavaVM*, UDATA).\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>", "committedDate": "2020-04-17T15:23:01Z", "type": "forcePushed"}]}