{"pr_number": 10544, "pr_title": "Match RI naming scheme for hidden classes", "pr_createdAt": "2020-09-09T00:41:56Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10544", "timeline": [{"oid": "3f7860f1cb7066ac415cdeb7201e435964df9aa8", "url": "https://github.com/eclipse-openj9/openj9/commit/3f7860f1cb7066ac415cdeb7201e435964df9aa8", "message": "Match RI naming scheme for hidden classes\n\nPreviously it was, Hello$$Lambda$1/00000000F0378590. Now it is\nHello$$Lambda$1/0x00000000f0378590.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-09-09T12:46:59Z", "type": "forcePushed"}, {"oid": "36284933d6e53931e370ff6fb330a9a4086a3efd", "url": "https://github.com/eclipse-openj9/openj9/commit/36284933d6e53931e370ff6fb330a9a4086a3efd", "message": "Match RI naming scheme for hidden classes\n\nPreviously it was, Hello$$Lambda$1/00000000F0378590. Now it is\nHello$$Lambda$1/0x00000000f0378590.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-09-09T17:42:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTU4Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10544#discussion_r485809582", "bodyText": "Why are we checking for 2 more 0 ? Shouldn't we be checking for 0x ?", "author": "hangshao0", "createdAt": "2020-09-09T17:55:32Z", "path": "test/functional/cmdLineTests/shareClassTests/SCCMLTests/ShareClassesCMLTests-1.xml", "diffHunk": "@@ -1058,9 +1058,9 @@\n \t\n \t<test id=\"Test 57-a: Make sure that lambda classes work and get stored in the shared class cache\" timeout=\"600\" runPath=\".\">\n \t\t<command>$JAVA_EXE$ $currentMode$ -Xtrace:print={j9shr.2259} $CP_HANOI$ $PROGRAM_LAMBDA$ 0</command>\n-\t\t<output type=\"success\" caseSensitive=\"no\" regex=\"yes\" javaUtilPattern=\"yes\">j9shr[\\.]2259     > API j9shr_classStoreTransaction_createSharedClass : enter [\\(]classname=org/openj9/test/lambdatests/Test1..Lambda.([\\d]+)/(00000000|0000000000000000) </output>\n+\t\t<output type=\"success\" caseSensitive=\"no\" regex=\"yes\" javaUtilPattern=\"yes\">j9shr[\\.]2259     > API j9shr_classStoreTransaction_createSharedClass : enter [\\(]classname=org/openj9/test/lambdatests/Test1..Lambda.([\\d]+)/(0000000000|000000000000000000) </output>", "originalCommit": "36284933d6e53931e370ff6fb330a9a4086a3efd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMjc0OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10544#discussion_r485812749", "bodyText": "The 0x is only written after we have the romAddress, the tracepoint that this test relies on is called before then", "author": "tajila", "createdAt": "2020-09-09T18:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzA4NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10544#discussion_r485813084", "bodyText": "0x is written along with the romAddress", "author": "tajila", "createdAt": "2020-09-09T18:01:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxNDI1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10544#discussion_r485814252", "bodyText": "OK. Thanks.", "author": "hangshao0", "createdAt": "2020-09-09T18:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxNTAxNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10544#discussion_r485815017", "bodyText": "Probably better to make a comment in this file explaining why 2 more '0' are been checked.", "author": "hangshao0", "createdAt": "2020-09-09T18:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1ODM2Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10544#discussion_r485858363", "bodyText": "ill add a comment once the tests have passed", "author": "tajila", "createdAt": "2020-09-09T19:25:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgwOTU4Mg=="}], "type": "inlineReview"}, {"oid": "f7db7a2db59646560f6ab1c319e320c3c3840528", "url": "https://github.com/eclipse-openj9/openj9/commit/f7db7a2db59646560f6ab1c319e320c3c3840528", "message": "Match RI naming scheme for hidden classes\n\nPreviously it was, Hello$$Lambda$1/00000000F0378590. Now it is\nHello$$Lambda$1/0x00000000f0378590.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-09-10T02:39:28Z", "type": "commit"}, {"oid": "f7db7a2db59646560f6ab1c319e320c3c3840528", "url": "https://github.com/eclipse-openj9/openj9/commit/f7db7a2db59646560f6ab1c319e320c3c3840528", "message": "Match RI naming scheme for hidden classes\n\nPreviously it was, Hello$$Lambda$1/00000000F0378590. Now it is\nHello$$Lambda$1/0x00000000f0378590.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-09-10T02:39:28Z", "type": "forcePushed"}]}