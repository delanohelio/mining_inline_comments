{"pr_number": 10226, "pr_title": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon", "pr_createdAt": "2020-07-23T01:21:00Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10226", "timeline": [{"oid": "629cba27a2fa856f01cab9d9c8005f9af6a6d07e", "url": "https://github.com/eclipse-openj9/openj9/commit/629cba27a2fa856f01cab9d9c8005f9af6a6d07e", "message": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon\n\nThe intention is to move verifyQualifiedName to jvmDefineClassHelper &\ndefineClassCommon in order to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string later.\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-23T01:41:22Z", "type": "forcePushed"}, {"oid": "71ef0796f2b472f441b581d5283812cc0dea71b4", "url": "https://github.com/eclipse-openj9/openj9/commit/71ef0796f2b472f441b581d5283812cc0dea71b4", "message": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon\n\nThe intention is to move verifyQualifiedName to jvmDefineClassHelper &\ndefineClassCommon in order to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string later.[ci skip]\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-23T04:21:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUyODEyNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459528127", "bodyText": "For consistency, please remove the space after the * in options (here and in the function declaration).", "author": "gacholio", "createdAt": "2020-07-23T15:16:34Z", "path": "runtime/oti/jclprots.h", "diffHunk": "@@ -711,7 +711,7 @@ UDATA initializeRequiredClasses(J9VMThread *vmThread, char* libName);\n /* J9SourceJclDefineClass*/\n extern J9_CFUNC jclass \n defineClassCommon (JNIEnv *env, jobject classLoaderObject,\n-\tjstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain, UDATA options, J9Class *hostClass, J9ClassPatchMap *patchMap);\n+\tjstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain, UDATA * options, J9Class *hostClass, J9ClassPatchMap *patchMap, UDATA allowedBitsForClassName);", "originalCommit": "71ef0796f2b472f441b581d5283812cc0dea71b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1NTY4MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459555680", "bodyText": "Fixed as suggested above.", "author": "ChengJin01", "createdAt": "2020-07-23T15:55:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUyODEyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMDA3MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459530071", "bodyText": "Array classes are not created via defineClass, so the more restrictive input value should be used here.", "author": "gacholio", "createdAt": "2020-07-23T15:19:09Z", "path": "runtime/j9vm/j7vmi.c", "diffHunk": "@@ -2555,11 +2555,17 @@ jvmDefineClassHelper(JNIEnv *env, jobject classLoaderObject,\n \tvmFuncs->internalEnterVMFromJNI(currentThread);\n \n \tif (NULL != className) {\n-\t\tutf8Name = (U_8*)vmFuncs->copyStringToUTF8WithMemAlloc(currentThread, J9_JNI_UNWRAP_REFERENCE(className), J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT, \"\", 0, utf8NameStackBuffer, J9VM_PACKAGE_NAME_BUFFER_LENGTH, &utf8Length);\n+\t\tj9object_t classNameObject = J9_JNI_UNWRAP_REFERENCE(className);\n+\t\tutf8Name = (U_8*)vmFuncs->copyStringToUTF8WithMemAlloc(currentThread, classNameObject, J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT, \"\", 0, utf8NameStackBuffer, J9VM_PACKAGE_NAME_BUFFER_LENGTH, &utf8Length);\n \t\tif (NULL == utf8Name) {\n \t\t\tvmFuncs->setNativeOutOfMemoryError(currentThread, 0, 0);\n \t\t\tgoto done;\n \t\t}\n+\n+\t\tif (CLASSNAME_INVALID == vmFuncs->verifyQualifiedName(currentThread, classNameObject, CLASSNAME_VALID)) {", "originalCommit": "71ef0796f2b472f441b581d5283812cc0dea71b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1NjA3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459556070", "bodyText": "Replaced with CLASSNAME_VALID_NON_ARRARY in such case.", "author": "ChengJin01", "createdAt": "2020-07-23T15:56:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMDA3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMjM1MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459532351", "bodyText": "It doesn't look like the modified options value is used by any caller, so there's really no need to pass this by pointer. You are free to modify the options value directly.", "author": "gacholio", "createdAt": "2020-07-23T15:22:15Z", "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -29,7 +29,7 @@\n \n jclass \n defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n-\tjstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain, UDATA options, J9Class *hostClass, J9ClassPatchMap *patchMap)\n+\tjstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain, UDATA * options, J9Class *hostClass, J9ClassPatchMap *patchMap, UDATA allowedBitsForClassName)", "originalCommit": "71ef0796f2b472f441b581d5283812cc0dea71b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0MjQ1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459542452", "bodyText": "the options are checked by Java_java_lang_ClassLoader_defineClassImpl as follows:\nJava_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain)\n{\n....\n\tjclass result = defineClassCommon(env, receiver, className, classRep, offset, length, protectionDomain, &options, NULL, NULL, CLASSNAME_VALID);\n\n\tif (J9_ARE_ANY_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID) <-----------\n\t&& (NULL == result) && (NULL == currentThread->currentException)) {\n\t\t/*\n\t\t * Now that we know the class is not exempt, throw NoClassDefFoundError as we\n\t\t * would have liked to have done above before we called defineClassCommon().\n\t\t */\n\t\tvmFuncs->internalEnterVMFromJNI(currentThread);\n\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNOCLASSDEFFOUNDERROR, (UDATA *)*(j9object_t *)className);\n\t\tvmFuncs->internalExitVMToJNI(currentThread);\n\t}\n\nWe can't move the setup of exception into defineClassCommon as other callers won't set up the NoClassDefFoundError exception.", "author": "ChengJin01", "createdAt": "2020-07-23T15:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMjM1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0OTA2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459549065", "bodyText": "Sorry, missed that.", "author": "gacholio", "createdAt": "2020-07-23T15:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMjM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMzI4MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459533280", "bodyText": "Since defineClass never operates on arrays, you could pass BOOLEAN validateName instead of the allowed bits.", "author": "gacholio", "createdAt": "2020-07-23T15:23:34Z", "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -29,7 +29,7 @@\n \n jclass \n defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n-\tjstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain, UDATA options, J9Class *hostClass, J9ClassPatchMap *patchMap)\n+\tjstring className, jbyteArray classRep, jint offset, jint length, jobject protectionDomain, UDATA * options, J9Class *hostClass, J9ClassPatchMap *patchMap, UDATA allowedBitsForClassName)", "originalCommit": "71ef0796f2b472f441b581d5283812cc0dea71b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1NjU4Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459556587", "bodyText": "Updated with BOOLEAN validateName as suggested above.", "author": "ChengJin01", "createdAt": "2020-07-23T15:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzMzI4MA=="}], "type": "inlineReview"}, {"oid": "b0053fa50cf4928721cb633858d31ef17e7d3ff4", "url": "https://github.com/eclipse-openj9/openj9/commit/b0053fa50cf4928721cb633858d31ef17e7d3ff4", "message": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon\n\nThe intention is to move verifyQualifiedName to jvmDefineClassHelper &\ndefineClassCommon in order to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string later.[ci skip]\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-23T15:55:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MjQwNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459582405", "bodyText": "The passed in validateName should be the non-array constant.", "author": "gacholio", "createdAt": "2020-07-23T16:38:28Z", "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -102,12 +94,21 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n \n \t/* Allocate and initialize a UTF8 copy of the Unicode class-name */\n \tif (NULL != className) {\n-\t\tutf8Name = (U_8*)vmFuncs->copyStringToUTF8WithMemAlloc(currentThread, J9_JNI_UNWRAP_REFERENCE(className), J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT, \"\", 0, utf8NameStackBuffer, J9VM_PACKAGE_NAME_BUFFER_LENGTH, &utf8Length);\n+\t\tj9object_t classNameObject = J9_JNI_UNWRAP_REFERENCE(className);\n+\t\tutf8Name = (U_8*)vmFuncs->copyStringToUTF8WithMemAlloc(currentThread, classNameObject, J9_STR_NULL_TERMINATE_RESULT | J9_STR_XLAT, \"\", 0, utf8NameStackBuffer, J9VM_PACKAGE_NAME_BUFFER_LENGTH, &utf8Length);\n \n \t\tif (NULL == utf8Name) {\n \t\t\tvmFuncs->setNativeOutOfMemoryError(currentThread, 0, 0);\n \t\t\tgoto done;\n \t\t}\n+\n+\t\tif (validateName && (CLASSNAME_INVALID == vmFuncs->verifyQualifiedName(currentThread, classNameObject, validateName))) {", "originalCommit": "b0053fa50cf4928721cb633858d31ef17e7d3ff4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NTEzMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10226#discussion_r459585133", "bodyText": "Fixed.", "author": "ChengJin01", "createdAt": "2020-07-23T16:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MjQwNQ=="}], "type": "inlineReview"}, {"oid": "522c7f551ab5d28d0c7ce726026cba20e3549cc1", "url": "https://github.com/eclipse-openj9/openj9/commit/522c7f551ab5d28d0c7ce726026cba20e3549cc1", "message": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon\n\nThe intention is to move verifyQualifiedName to jvmDefineClassHelper &\ndefineClassCommon in order to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string later.[ci skip]\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-23T16:42:32Z", "type": "forcePushed"}, {"oid": "2fe5c0afb85c96c89f486bc0b3b642ce0014f003", "url": "https://github.com/eclipse-openj9/openj9/commit/2fe5c0afb85c96c89f486bc0b3b642ce0014f003", "message": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon\n\nThe intention is to move verifyQualifiedName to jvmDefineClassHelper &\ndefineClassCommon in order to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string later.[ci skip]\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-23T17:14:55Z", "type": "commit"}, {"oid": "2fe5c0afb85c96c89f486bc0b3b642ce0014f003", "url": "https://github.com/eclipse-openj9/openj9/commit/2fe5c0afb85c96c89f486bc0b3b642ce0014f003", "message": "Move verifyQualifiedName to jvmDefineClassHelper & defineClassCommon\n\nThe intention is to move verifyQualifiedName to jvmDefineClassHelper &\ndefineClassCommon in order to share the memory allocated by\ncopyStringToUTF8WithMemAlloc for the class name string later.[ci skip]\n\nSigned-off-by: Cheng Jin <jincheng@ca.ibm.com>", "committedDate": "2020-07-23T17:14:55Z", "type": "forcePushed"}]}