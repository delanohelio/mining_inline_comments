{"pr_number": 9671, "pr_title": "Enhanced the output with stats about JITClient specific Activity", "pr_createdAt": "2020-05-25T16:34:51Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9671", "timeline": [{"oid": "1911d251f2d50072a429b9fcb10c8a20369a3db9", "url": "https://github.com/eclipse-openj9/openj9/commit/1911d251f2d50072a429b9fcb10c8a20369a3db9", "message": "Enhanced the output with stats about JITClient specific Activity\n\nAdded how many compilations will be remote and how many messages of each specific type were sent\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-25T16:53:39Z", "type": "forcePushed"}, {"oid": "a13258b0c085ceba0a79feed23154463d513af8e", "url": "https://github.com/eclipse-openj9/openj9/commit/a13258b0c085ceba0a79feed23154463d513af8e", "message": "Enhanced the output with stats about JITClient specific Activity\n\nAdded how many compilations will be remote and how many messages of each specific type were sent\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-25T17:04:49Z", "type": "forcePushed"}, {"oid": "451c367ff041cf86b5d7b730206534fb1f9ce211", "url": "https://github.com/eclipse-openj9/openj9/commit/451c367ff041cf86b5d7b730206534fb1f9ce211", "message": "Enhanced the output with stats about JITClient specific Activity\n\nAdded how many compilations will be remote and how many messages of each specific type were sent\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-25T17:13:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjA1MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430032051", "bodyText": "Since this code is only used for JITServer we need to protect it with\n#if defined(J9VM_OPT_JITSERVER)\nSee other parts of the code for an example", "author": "mpirvu", "createdAt": "2020-05-25T17:49:01Z", "path": "runtime/compiler/control/CompilationRuntime.hpp", "diffHunk": "@@ -1142,6 +1142,7 @@ class CompilationInfo\n    uint64_t               _lastCompilationsShouldBeInterruptedTime; // RAS\n // statistics\n    int32_t                _statsOptLevels[numHotnessLevels]; // will be zeroed with memset\n+   int32_t                _statsRemoteOptLevels[numHotnessLevels];", "originalCommit": "451c367ff041cf86b5d7b730206534fb1f9ce211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzOTQwNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430539406", "bodyText": "Fields should start with underscores.\nHowever, in this case I don't think we need totalNumRemoteCompilations or totalMsgCount. They can be computed on demand", "author": "mpirvu", "createdAt": "2020-05-26T16:18:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjc3Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430032776", "bodyText": "This code prints the same message stats a few times (for each opt level). Here we want stats about the remote compilations, not about messages.", "author": "mpirvu", "createdAt": "2020-05-25T17:52:00Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            {\t\t \n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+            JITServerHelpers::printJITServerMsgStats(jitConfig);", "originalCommit": "451c367ff041cf86b5d7b730206534fb1f9ce211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzQ3OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430033479", "bodyText": "Also, please change JITServerHelpers::printJITServerMsgStats(); to display total number of messages and average number of messages per compilation.", "author": "mpirvu", "createdAt": "2020-05-25T17:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjc3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzIzMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430033232", "bodyText": "JITServer specific code needs to be protected by #ifdef J9VM_OPT_JITSERVER", "author": "mpirvu", "createdAt": "2020-05-25T17:53:41Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -10664,7 +10669,11 @@ void TR::CompilationInfoPerThreadBase::logCompilationSuccess(\n \n          TR_Hotness h = compiler->getMethodHotness();\n          if (h < numHotnessLevels)\n+            {\n             _compInfo._statsOptLevels[(int32_t)h]++;\n+            if(_methodBeingCompiled->isRemoteCompReq())\n+               _compInfo._statsRemoteOptLevels[(int32_t)h]++;", "originalCommit": "451c367ff041cf86b5d7b730206534fb1f9ce211", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0Mjk5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430542992", "bodyText": "This piece of functionality is already done in HookedByTheJIT.cpp JitShutdown():\n#if defined(J9VM_OPT_JITSERVER)\n   static char * isPrintJITServerMsgStats = feGetEnv(\"TR_PrintJITServerMsgStats\");\n   if (isPrintJITServerMsgStats && compInfo->getPersistentInfo()->getRemoteCompilationMode() == JITServer::CLIENT)\n      JITServerHelpers::printJITServerMsgStats(jitConfig);\n   static char * isPrintJITServerCHTableStats = feGetEnv(\"TR_PrintJITServerCHTableStats\");\n   if (isPrintJITServerCHTableStats)\n      JITServerHelpers::printJITServerCHTableStats(jitConfig, compInfo);\n#endif\n\nAll you need to do is modify JITServerHelpers::printJITServerMsgStats so that it prints the number of total and average messages. The average can be computed by dividing the number of total messages to the number of messages of type compilationCode (every time a remote compilation occurs, the server will send a compilationCode message back at the end of the compilation.", "author": "mpirvu", "createdAt": "2020-05-26T16:23:30Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,23 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            {\t\t \n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+            totalNumRemoteCompilations += _statsRemoteOptLevels[i];\n+            }\n+         }\n+#if defined(J9VM_OPT_JITSERVER)\n+      for (int i = 0; i < JITServer::MessageType_ARRAYSIZE; ++i)\n+         {\n+         if (JITServerHelpers::serverMsgTypeCount[i] > 0)\n+            {\n+            totalMsgCount += JITServerHelpers::serverMsgTypeCount[i];\n+            }\n+         }\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+      fprintf(stderr, \"Total Number of messages:%d\\tAverage number of messages per compilation: %f  \\n\", totalMsgCount, totalMsgCount/float(totalNumRemoteCompilations));", "originalCommit": "9a658c855836da694dff4f7c570cc6f325627c53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3d0a52d962a84af3397b3124f775217c9d2e41e3", "url": "https://github.com/eclipse-openj9/openj9/commit/3d0a52d962a84af3397b3124f775217c9d2e41e3", "message": "Addressed Marius Comments\n\nprinted the total messages and the average number of messages per compilation by divinding total number of messages by total number of compilations\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-26T19:59:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNTkzOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430715938", "bodyText": "We need a check that JITServerHelpers::serverMsgTypeCount[0] is not 0. Otherwise the JVM will crash when doing division by 0", "author": "mpirvu", "createdAt": "2020-05-26T21:23:28Z", "path": "runtime/compiler/control/JITServerHelpers.cpp", "diffHunk": "@@ -120,14 +120,20 @@ JITServerHelpers::insertIntoOOSequenceEntryList(ClientSessionData *clientData, T\n void\n JITServerHelpers::printJITServerMsgStats(J9JITConfig *jitConfig)\n    {\n+   int totalMsgCount = 0;\t   \n    PORT_ACCESS_FROM_JITCONFIG(jitConfig);\n    j9tty_printf(PORTLIB, \"JITServer Message Type Statistics:\\n\");\n    j9tty_printf(PORTLIB, \"Type# #called TypeName\\n\");\n    for (int i = 0; i < JITServer::MessageType_ARRAYSIZE; ++i)\n       {\n       if (JITServerHelpers::serverMsgTypeCount[i] > 0)\n+         {\n          j9tty_printf(PORTLIB, \"#%04d %7u %s\\n\", i, JITServerHelpers::serverMsgTypeCount[i], JITServer::messageNames[i]);\n+         totalMsgCount += JITServerHelpers::serverMsgTypeCount[i];\n+         }\n       }\n+   j9tty_printf(PORTLIB, \"Total number of messages:%d\\tAverage number of messages per compilation:%f\\n\", totalMsgCount, totalMsgCount/float(JITServerHelpers::serverMsgTypeCount[0]));", "originalCommit": "3d0a52d962a84af3397b3124f775217c9d2e41e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNzE3OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430717178", "bodyText": "This will not work on a build that does not have J9VM_OPT_JITSERVER defined because _statsRemoteOptLevels is going to be undefined.", "author": "mpirvu", "createdAt": "2020-05-26T21:26:10Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);", "originalCommit": "3d0a52d962a84af3397b3124f775217c9d2e41e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNzU5NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430717595", "bodyText": "You don't have to call JITServerHelpers::printJITServerMsgStats(jitConfig); because it's already called in jitShutdown where it prints stats about messages", "author": "mpirvu", "createdAt": "2020-05-26T21:27:09Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+         }\n+#if defined(J9VM_OPT_JITSERVER)\n+      JITServerHelpers::printJITServerMsgStats(jitConfig);\n+#endif /* defined(J9VM_OPT_JITSERVER) */", "originalCommit": "3d0a52d962a84af3397b3124f775217c9d2e41e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6553bcef3f1fc4394773ce8e0a5e784e181ff94e", "url": "https://github.com/eclipse-openj9/openj9/commit/6553bcef3f1fc4394773ce8e0a5e784e181ff94e", "message": "Addressed Marius Comments\n\nprinted the total messages and the average number of messages per compilation by divinding total number of messages by total number of compilations\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-27T02:39:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgyOTM5Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430829393", "bodyText": "Somehow I think it looks nicer if the remote value appears on the same line, so maybe:\n      for (int i = 0; i < (int)numHotnessLevels; i++)\n         {\n         if (_statsOptLevels[i] > 0)\n            {\n            fprintf(stderr, \"Level=%d\\tnumComp=%d\", i, _statsOptLevels[i]);\n#if defined(J9VM_OPT_JITSERVER)\n            if (_statsRemoteOptLevels[i] > 0)\n               fprintf(stderr, \"\\tnumRemoteComp=%d\", _statsRemoteOptLevels[i]);\n#endif /* defined(J9VM_OPT_JITSERVER) */\n            fprintf(stderr, \"\\n\");\n            }\n         }", "author": "mpirvu", "createdAt": "2020-05-27T02:54:35Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,15 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n             fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+#if defined(J9VM_OPT_JITSERVER)\n+         if (_statsRemoteOptLevels[i] > 0)\n+            fprintf(stderr, \"numRemoteComp=%d\\n\", _statsRemoteOptLevels[i]);\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+         }", "originalCommit": "6553bcef3f1fc4394773ce8e0a5e784e181ff94e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b3842e181e0d452d15ca10e357f0e6f9e805d43", "url": "https://github.com/eclipse-openj9/openj9/commit/5b3842e181e0d452d15ca10e357f0e6f9e805d43", "message": "Print stats about JITClient specific activity at JVM shutdown\n\nAdded how many compilations will be remote and how many messages were sent\nprinted the total number of messages and the average number of messages per compilation\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-27T03:21:27Z", "type": "forcePushed"}, {"oid": "6ecf9a6f8b56fe02dd151a62ffa00ad1ef34af04", "url": "https://github.com/eclipse-openj9/openj9/commit/6ecf9a6f8b56fe02dd151a62ffa00ad1ef34af04", "message": "Print stats about JITClient specific activity at JVM shutdown\n\nAdded how many compilations will be remote and how many messages were sent\nprinted the total number of messages and the average number of messages per compilation\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-27T03:32:05Z", "type": "commit"}, {"oid": "6ecf9a6f8b56fe02dd151a62ffa00ad1ef34af04", "url": "https://github.com/eclipse-openj9/openj9/commit/6ecf9a6f8b56fe02dd151a62ffa00ad1ef34af04", "message": "Print stats about JITClient specific activity at JVM shutdown\n\nAdded how many compilations will be remote and how many messages were sent\nprinted the total number of messages and the average number of messages per compilation\nissue: #9339\n\nSigned-off-by: Eman Elsabban <eman.elsaban1@gmail.com>", "committedDate": "2020-05-27T03:32:05Z", "type": "forcePushed"}]}