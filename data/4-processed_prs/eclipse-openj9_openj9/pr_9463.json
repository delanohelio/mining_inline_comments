{"pr_number": 9463, "pr_title": "Add decompilation test", "pr_createdAt": "2020-05-05T22:35:19Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9463", "timeline": [{"oid": "8b9428c567d3de137de136dd9afc0eaa3065ab0d", "url": "https://github.com/eclipse-openj9/openj9/commit/8b9428c567d3de137de136dd9afc0eaa3065ab0d", "message": "Add decompilation test\n\nAdd a test for decompiling at exception catch when crossing an inlined\nsynchronized method.\n\nTest both the success and failure (IllegalMonitorStateException) cases\nwhen exitting the monitor for the inlined method.\n\nFixes: #9427\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-05-06T15:12:45Z", "type": "forcePushed"}, {"oid": "fe30836db89a50865837e9ac1e043bd2bb9a9b63", "url": "https://github.com/eclipse-openj9/openj9/commit/fe30836db89a50865837e9ac1e043bd2bb9a9b63", "message": "Add decompilation test\n\nAdd a test for decompiling at exception catch when crossing an inlined\nsynchronized method.\n\nTest both the success and failure (IllegalMonitorStateException) cases\nwhen exitting the monitor for the inlined method.\n\nFixes: #9427\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-05-06T20:55:48Z", "type": "forcePushed"}, {"oid": "81d22a35fce735d49099eb66aa1ff8ca7d117bc4", "url": "https://github.com/eclipse-openj9/openj9/commit/81d22a35fce735d49099eb66aa1ff8ca7d117bc4", "message": "Add decompilation test\n\nAdd a test for decompiling at exception catch when crossing an inlined\nsynchronized method.\n\nTest both the success and failure (IllegalMonitorStateException) cases\nwhen exitting the monitor for the inlined method.\n\nFixes: #9427\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-05-11T19:35:11Z", "type": "commit"}, {"oid": "81d22a35fce735d49099eb66aa1ff8ca7d117bc4", "url": "https://github.com/eclipse-openj9/openj9/commit/81d22a35fce735d49099eb66aa1ff8ca7d117bc4", "message": "Add decompilation test\n\nAdd a test for decompiling at exception catch when crossing an inlined\nsynchronized method.\n\nTest both the success and failure (IllegalMonitorStateException) cases\nwhen exitting the monitor for the inlined method.\n\nFixes: #9427\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>", "committedDate": "2020-05-11T19:35:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE0MDgzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9463#discussion_r424140830", "bodyText": "@gacholio this is failing to compile on Windows.\nwarning C4700: uninitialized local variable 'err' used", "author": "pshipton", "createdAt": "2020-05-13T02:39:11Z", "path": "runtime/tests/jvmtitests/src/com/ibm/jvmti/tests/decompResolveFrame/decomp005.c", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+#include \"jvmti_test.h\"\n+#include <string.h>\n+\n+static agentEnv * env;\n+static int imse = 0;\n+ \n+static void JNICALL\n+cbSingleStep(jvmtiEnv *jvmti_env, JNIEnv* jni_env, jthread thread, jmethodID method, jlocation location)\n+{\n+\n+}\n+\n+\n+jint JNICALL\n+decomp005(agentEnv * _env, char * args)\n+{\n+\tJVMTI_ACCESS_FROM_AGENT(_env);\n+\tjvmtiError err;                \t\n+\tjvmtiEventCallbacks callbacks;\n+\tjvmtiCapabilities capabilities;                \n+\n+\tenv = _env;\n+\n+\tif (!ensureVersion(env, JVMTI_VERSION_1_1)) {\n+\t\treturn JNI_ERR;\n+\t}   \n+    \n+\tif (NULL != args) {\n+\t\tif (0 == strcasecmp(args, \"imse\")) {\n+\t\t\timse = 1;\n+\t\t} else {\n+\t\t\terror(env, err, \"Unknown option\");", "originalCommit": "81d22a35fce735d49099eb66aa1ff8ca7d117bc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNDk5MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9463#discussion_r424414991", "bodyText": "Created #9544 to address the compile issue", "author": "DanHeidinga", "createdAt": "2020-05-13T12:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE0MDgzMA=="}], "type": "inlineReview"}]}