{"pr_number": 9480, "pr_title": "Handle OSR from inlined synchronized method", "pr_createdAt": "2020-05-06T21:04:29Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9480", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2OTc2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9480#discussion_r422369767", "bodyText": "Some brackets would be good here (and perhaps essential - && and || likely have exactly the same precedence properties).\nAlso synthetic is misspelled.", "author": "gacholio", "createdAt": "2020-05-08T20:55:31Z", "path": "runtime/compiler/runtime/MetaData.cpp", "diffHunk": "@@ -158,6 +159,22 @@ createByteCodeInfoRange(\n    location += sizeof(int32_t);\n    }\n \n+/*\n+ * use special catch type value to indicate to the VM the handler is synthetic handler so that OSR can be handled correctly\n+ */\n+static uint32_t\n+useSpecialCatchTypeIfNecessary(TR_ExceptionTableEntry *e, bool fourByteOffsets, TR::Compilation *comp)\n+   {\n+   if (comp->getOption(TR_EnableOSR))\n+      {\n+      if (fourByteOffsets && e->_catchType == J9_CATCHTYPE_VALUE_FOR_THYNTHETIC_HANDLER_4BYTES ||", "originalCommit": "61ad9f3b03d53a9230044608b1800ce61b547b67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxOTk3NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9480#discussion_r423019975", "bodyText": "@cathyzhyi please address above and I'll restart the build.", "author": "andrewcraik", "createdAt": "2020-05-11T12:58:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2OTc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4ODI0OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9480#discussion_r423188249", "bodyText": "Thanks for the comments. changed as suggested.", "author": "cathyzhyi", "createdAt": "2020-05-11T17:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2OTc2Nw=="}], "type": "inlineReview"}, {"oid": "1c13323a5f3f210fb9fdab004347c57aec2e03a5", "url": "https://github.com/eclipse-openj9/openj9/commit/1c13323a5f3f210fb9fdab004347c57aec2e03a5", "message": "Handle OSR from inlined synchronized method\n\nWhen a synchronized method exits through unhandled exception, it's\nrequired by the specification to release the monitor before exits. The\nVM unwind logic will handle this for synchronized methods that are not\ninlined. For inlined ones, JIT inserts a synthetic handler to catch the\nexception and do monitorExit and then rethrow the exception.\n\nIn case of OSR, the VM needs to be aware of those synthetic handlers to\nresume execution correctly in the interpreter. Special catch type value\nin the exception table entry is used for this purpose. Also, a new\nhelper for throwing exceptions from synthetic handlers is added.\n\nThis is the JIT side of the change.\n\nsee issue #9267\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>", "committedDate": "2020-05-11T17:05:47Z", "type": "commit"}, {"oid": "1c13323a5f3f210fb9fdab004347c57aec2e03a5", "url": "https://github.com/eclipse-openj9/openj9/commit/1c13323a5f3f210fb9fdab004347c57aec2e03a5", "message": "Handle OSR from inlined synchronized method\n\nWhen a synchronized method exits through unhandled exception, it's\nrequired by the specification to release the monitor before exits. The\nVM unwind logic will handle this for synchronized methods that are not\ninlined. For inlined ones, JIT inserts a synthetic handler to catch the\nexception and do monitorExit and then rethrow the exception.\n\nIn case of OSR, the VM needs to be aware of those synthetic handlers to\nresume execution correctly in the interpreter. Special catch type value\nin the exception table entry is used for this purpose. Also, a new\nhelper for throwing exceptions from synthetic handlers is added.\n\nThis is the JIT side of the change.\n\nsee issue #9267\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>", "committedDate": "2020-05-11T17:05:47Z", "type": "forcePushed"}]}