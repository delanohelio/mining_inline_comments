{"pr_number": 9470, "pr_title": "Disable GCR for hot compilations", "pr_createdAt": "2020-05-06T14:51:16Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9470", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3ODQxNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9470#discussion_r421578414", "bodyText": "I'd like to see an issue reference backing this workaround which explains why it was put in place. Preferably in code, so for example:\n// Workaround for .... see #1234 for details.", "author": "fjeremic", "createdAt": "2020-05-07T15:06:33Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8332,9 +8332,10 @@ TR::CompilationInfoPerThreadBase::wrappedCompile(J9PortLibrary *portLib, void *\n                      options->setOption(TR_UseSymbolValidationManager, false);\n                   }\n \n-               // See if we need to inset GCR trees\n-               if (!details.supportsInvalidation())\n-                  {\n+               // See if we need to insert GCR trees\n+               if (!details.supportsInvalidation() ||\n+                   options->getOptLevel() >= hot) // Workaround for a bug with GCR inserted in hot bodies\n+                  {                               // Upgrades hot-->scorching should be done through sampling, not GCR", "originalCommit": "b5e7e7236f731ad9113ebc0fac0aa412432bf116", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY2NTE5NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9470#discussion_r421665194", "bodyText": "Updated the comment in the code and the commit message.", "author": "mpirvu", "createdAt": "2020-05-07T17:17:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3ODQxNA=="}], "type": "inlineReview"}, {"oid": "4191168ed3c91e63fe8bac32808d37347b0f4d89", "url": "https://github.com/eclipse-openj9/openj9/commit/4191168ed3c91e63fe8bac32808d37347b0f4d89", "message": "Disable GCR for hot compilations\n\nGCR (guarded counting recompilations is a mechanism that is supposed\nto upgrade cold or AOT compilations to warm opt level. In theory\nit should work with any opt level, but due to a bug it seems that\nGCR is incompatible with hot compilations (see #4548 for details).\nTo allow stress testing with hot compilations this commit disables\nGCR for hot compilations. This should have no bearing on behavior\nin production because the natural way of upgrading hot compilations\nto scorching is through sampling.\n\nFixes: #4445 #8064\n\nSigned-off-by: Marius Pirvu <mpirvu@ca.ibm.com>", "committedDate": "2020-05-07T17:14:30Z", "type": "commit"}, {"oid": "4191168ed3c91e63fe8bac32808d37347b0f4d89", "url": "https://github.com/eclipse-openj9/openj9/commit/4191168ed3c91e63fe8bac32808d37347b0f4d89", "message": "Disable GCR for hot compilations\n\nGCR (guarded counting recompilations is a mechanism that is supposed\nto upgrade cold or AOT compilations to warm opt level. In theory\nit should work with any opt level, but due to a bug it seems that\nGCR is incompatible with hot compilations (see #4548 for details).\nTo allow stress testing with hot compilations this commit disables\nGCR for hot compilations. This should have no bearing on behavior\nin production because the natural way of upgrading hot compilations\nto scorching is through sampling.\n\nFixes: #4445 #8064\n\nSigned-off-by: Marius Pirvu <mpirvu@ca.ibm.com>", "committedDate": "2020-05-07T17:14:30Z", "type": "forcePushed"}]}