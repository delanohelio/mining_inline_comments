{"pr_number": 10386, "pr_title": "Create Flag `-XX:[+|-]AlwaysPreTouch`", "pr_createdAt": "2020-08-13T16:24:22Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10386", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NjQwOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10386#discussion_r470156409", "bodyText": "actually, we want to match similar (if not identical) option from OpenJDK:  -XX:+AlwaysPreTouch\nparsing of such (-XX:+/- style) a GC option is in gcParseXXArguments() in mmparse.cpp", "author": "amicic", "createdAt": "2020-08-13T18:20:23Z", "path": "runtime/gc_modron_startup/mmparseXXgc.cpp", "diffHunk": "@@ -1316,6 +1316,10 @@ gcParseXXgcArguments(J9JavaVM *vm, char *optArg)\n \t\t\t}\n \t\t\tcontinue;\n \t\t}\n+\t\tif (try_scan(&scan_start, \"pretouchHeapOnExpand\")) {", "originalCommit": "e50b03f172c2625eb1af4ffe8b82d10d06a762ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4Mzc5Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10386#discussion_r470183796", "bodyText": "Should I rename \"pretouchHeapOnExpand\" to \"AlwaysPreTouch\"  (only on parsing side since Omr side is merged) ? Or just follow the  (-XX:+/- style) should be fine. I recall there was a discussion on if we use the name \"AlwaysPreTouch\" we should provide feature match to \"AlwaysPreTouch\".", "author": "gza060625", "createdAt": "2020-08-13T19:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5ODAyNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10386#discussion_r470198024", "bodyText": "Internal C flag is ok to stay pretouchHeapOnExpand. Just need to make the command line option change.\nWe should probably document it and specifically state that we touch only heap memory (and not Meta structures). It's not clear to me if OpenJDK does more than just heap or not.\nNot sure what you mean by 'provide feature match'.", "author": "amicic", "createdAt": "2020-08-13T19:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NjQwOQ=="}], "type": "inlineReview"}, {"oid": "838cf1c309e3520d247e712c5769ef4729473a7c", "url": "https://github.com/eclipse-openj9/openj9/commit/838cf1c309e3520d247e712c5769ef4729473a7c", "message": "Create Flag -XXgc:pretouchHeapOnExpand\n\nCommits memory during initial heap inflation or heap expansion by writing 0s.\n\nDefault: Turned Off\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>", "committedDate": "2020-08-13T19:55:16Z", "type": "commit"}, {"oid": "838cf1c309e3520d247e712c5769ef4729473a7c", "url": "https://github.com/eclipse-openj9/openj9/commit/838cf1c309e3520d247e712c5769ef4729473a7c", "message": "Create Flag -XXgc:pretouchHeapOnExpand\n\nCommits memory during initial heap inflation or heap expansion by writing 0s.\n\nDefault: Turned Off\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>", "committedDate": "2020-08-13T19:55:16Z", "type": "forcePushed"}]}