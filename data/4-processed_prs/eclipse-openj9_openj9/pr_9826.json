{"pr_number": 9826, "pr_title": "Store OMRProcessorDesc in AOT Header", "pr_createdAt": "2020-06-08T19:23:21Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9826", "timeline": [{"oid": "df1b0c70de99aa074ea8366e26a336ec53888783", "url": "https://github.com/eclipse-openj9/openj9/commit/df1b0c70de99aa074ea8366e26a336ec53888783", "message": "Switch from TR_Processor to OMRProcessorArchitecture in AOT Header\n\nOMRProcessorArchitecture is the new processor types to use across\nall platforms. It is an enum type defined in the OMR port library.\nTR_Processor will be removed once all migrations to new cpu api's\nare done. AOT Header is currently storing TR_Processor and we are\ngoing to switch to OMRProcessorArchitecture.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-08T20:09:54Z", "type": "forcePushed"}, {"oid": "3cd88d92ce2ff55d4286357241377d24147327e5", "url": "https://github.com/eclipse-openj9/openj9/commit/3cd88d92ce2ff55d4286357241377d24147327e5", "message": "Switch from TR_Processor to OMRProcessorArchitecture in AOT Header\n\nOMRProcessorArchitecture is the new processor types to use across\nall platforms. It is an enum type defined in the OMR port library.\nTR_Processor will be removed once all migrations to new cpu api's\nare done. AOT Header is currently storing TR_Processor and we are\ngoing to switch to OMRProcessorArchitecture.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-08T20:13:35Z", "type": "forcePushed"}, {"oid": "faf36c2a7ae3a17bbc152bfd8c62a94253e4127c", "url": "https://github.com/eclipse-openj9/openj9/commit/faf36c2a7ae3a17bbc152bfd8c62a94253e4127c", "message": "Switch from TR_Processor to OMRProcessorArchitecture in AOT Header\n\nOMRProcessorArchitecture is the new processor types to use across\nall platforms. It is an enum type defined in the OMR port library.\nTR_Processor will be removed once all migrations to new cpu api's\nare done. AOT Header is currently storing TR_Processor and we are\ngoing to switch to OMRProcessorArchitecture.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-08T20:26:03Z", "type": "forcePushed"}, {"oid": "9bcacde7c87fc10a906bb5105d1f994c33316816", "url": "https://github.com/eclipse-openj9/openj9/commit/9bcacde7c87fc10a906bb5105d1f994c33316816", "message": "Switch from TR_Processor to OMRProcessorArchitecture in AOT Header\n\nOMRProcessorArchitecture is the new processor types to use across\nall platforms. It is an enum type defined in the OMR port library.\nTR_Processor will be removed once all migrations to new cpu api's\nare done. AOT Header is currently storing TR_Processor and we are\ngoing to switch to OMRProcessorArchitecture.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-08T21:38:13Z", "type": "forcePushed"}, {"oid": "373026e195834c7242c48dd046c506c3ceea7d7d", "url": "https://github.com/eclipse-openj9/openj9/commit/373026e195834c7242c48dd046c506c3ceea7d7d", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-08T21:42:33Z", "type": "forcePushed"}, {"oid": "a74352cd2602de09fe30a9744966a53d60d602c4", "url": "https://github.com/eclipse-openj9/openj9/commit/a74352cd2602de09fe30a9744966a53d60d602c4", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-08T22:08:20Z", "type": "forcePushed"}, {"oid": "a507c530cc5269af45bd84c34a8e503adbc4df8e", "url": "https://github.com/eclipse-openj9/openj9/commit/a507c530cc5269af45bd84c34a8e503adbc4df8e", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-09T15:31:43Z", "type": "forcePushed"}, {"oid": "3fca77adc65fa2f45bf006e81244df1570dbbb27", "url": "https://github.com/eclipse-openj9/openj9/commit/3fca77adc65fa2f45bf006e81244df1570dbbb27", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-09T15:36:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NDIxMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r437794210", "bodyText": "This static means initialization happens only once. Is this going to have problems for JITServer (ARM is not supported yet, but maybe in the future)", "author": "mpirvu", "createdAt": "2020-06-10T00:26:59Z", "path": "runtime/compiler/aarch64/env/J9CPU.cpp", "diffHunk": "@@ -23,25 +23,32 @@\n #include \"env/CompilerEnv.hpp\"\n #include \"env/CPU.hpp\"\n \n-namespace J9\n-{\n-\n-namespace ARM64\n-{\n-\n-TR_ProcessorFeatureFlags\n-CPU::getProcessorFeatureFlags()\n+bool\n+J9::ARM64::CPU::isCompatible(const OMRProcessorDesc& processorDescription)\n    {\n-   TR_ProcessorFeatureFlags processorFeatureFlags = { {0} };\n-   return processorFeatureFlags;\n+   return self()->getProcessorDescription().processor == processorDescription.processor;\n    }\n \n-bool\n-CPU::isCompatible(TR_Processor processorSignature, TR_ProcessorFeatureFlags processorFeatureFlags)\n+OMRProcessorDesc\n+J9::ARM64::CPU::getProcessorDescription()\n    {\n-   return self()->id() == processorSignature;\n+   static bool initialized = false;\n+   if (!initialized)", "originalCommit": "3fca77adc65fa2f45bf006e81244df1570dbbb27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyNTY2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r438225665", "bodyText": "For ARM, we still need to add the processor detection logic to the omr port library in order for it for work like the rest (X, P, Z). Eventually that will be done but it may take a while and I don't want that work to block this item. That's why I introduced this wrapper function to map the old TR_Processor + TR_ProcessorFeatureFlags type to the new OMRProcessorDesc type.\nIn short, this code is temporary and probably will not be here by the time we support JITServer on ARM.", "author": "harryyu1994", "createdAt": "2020-06-10T15:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NDIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyNjg1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r438226859", "bodyText": "For more information on the ARM port library work: eclipse/omr#5262. It still has issues and currently I don't have an arm machine to debug them. Also that item is low priority compared to the other ones.", "author": "harryyu1994", "createdAt": "2020-06-10T15:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NDIxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA0Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r437796047", "bodyText": "Can you please put a comment for this piece of code? It's not clear to me the intent of the code.\nIt creates a new TR::CPU based on TR::Compiler->target.cpu which I thought it was a singleton.", "author": "mpirvu", "createdAt": "2020-06-10T00:34:24Z", "path": "runtime/compiler/compile/J9Compilation.cpp", "diffHunk": "@@ -183,6 +183,11 @@ J9::Compilation::Compilation(int32_t id,\n #endif /* defined(J9VM_OPT_JITSERVER) */\n    _osrProhibitedOverRangeOfTrees(false)\n    {\n+   #if defined(J9VM_OPT_JITSERVER)\n+      if (self()->getPersistentInfo()->getRemoteCompilationMode() == JITServer::SERVER)\n+         _target.cpu = TR::CPU(TR::Compiler->target.cpu.getProcessorDescription());", "originalCommit": "3fca77adc65fa2f45bf006e81244df1570dbbb27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNjQ1MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r438236450", "bodyText": "It is a singleton, but we added a remote call to getProcessorDescription() so it works for JITServer.\nOMRProcessorDesc\nJ9::X86::CPU::getProcessorDescription()\n   {\n#if defined(J9VM_OPT_JITSERVER)\n   if (auto stream = TR::CompilationInfo::getStream())\n      {\n      auto *vmInfo = TR::compInfoPT->getClientData()->getOrCacheVMInfo(stream);\n      return vmInfo->_processorDescription;\n      }\n#endif /* defined(J9VM_OPT_JITSERVER) */\n   return _processorDescription;\n   }\nI wouldn't say this is the final form yet. This is a way to make it work but do look kind of ugly at the moment. I think eventually the entire _target might be replaced for each compilation. I'll need more thoughts on this.", "author": "harryyu1994", "createdAt": "2020-06-10T16:00:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3MTE2MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r438371160", "bodyText": "I've put some comments to explain the code.\nI think it's okay to have this in for now.\nSome of the logics for switching processors will be dealt with in the portable AOT item we have here(#9731) So these two lines of code are just temporary.", "author": "harryyu1994", "createdAt": "2020-06-10T19:52:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgwODM2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r437808369", "bodyText": "Do we have JITServer implementations on P and Z as well?", "author": "mpirvu", "createdAt": "2020-06-10T01:23:47Z", "path": "runtime/compiler/x/env/J9CPU.cpp", "diffHunk": "@@ -36,105 +36,98 @@\n // Without this definition, we get an undefined symbol of JITConfig::instance() at runtime\n TR::JitConfig * TR::JitConfig::instance() { return NULL; }\n \n-namespace J9\n-{\n-\n-namespace X86\n-{\n-\n TR_X86CPUIDBuffer *\n-CPU::queryX86TargetCPUID()\n+J9::X86::CPU::queryX86TargetCPUID()\n    {\n    static TR_X86CPUIDBuffer buf = { {'U','n','k','n','o','w','n','B','r','a','n','d'} };\n    jitGetCPUID(&buf);\n    return &buf;\n    }\n \n const char *\n-CPU::getProcessorVendorId()\n+J9::X86::CPU::getProcessorVendorId()\n    {\n    return self()->getX86ProcessorVendorId();\n    }\n \n uint32_t\n-CPU::getProcessorSignature()\n+J9::X86::CPU::getProcessorSignature()\n    {\n    return self()->getX86ProcessorSignature();\n    }\n \n bool\n-CPU::hasPopulationCountInstruction()\n+J9::X86::CPU::hasPopulationCountInstruction()\n    {\n    if ((self()->getX86ProcessorFeatureFlags2() & TR_POPCNT) != 0x00000000)\n       return true;\n    else\n       return false;\n    }\n \n-TR_ProcessorFeatureFlags\n-CPU::getProcessorFeatureFlags()\n+bool\n+J9::X86::CPU::isCompatible(const OMRProcessorDesc& processorDescription)\n    {\n-#if defined(J9VM_OPT_JITSERVER)\n-   if (auto stream = TR::CompilationInfo::getStream())\n+   for (int i = 0; i < OMRPORT_SYSINFO_FEATURES_SIZE; i++)\n       {\n-      auto *vmInfo = TR::compInfoPT->getClientData()->getOrCacheVMInfo(stream);\n-      return vmInfo->_processorFeatureFlags;\n+      // Check to see if the current processor contains all the features that code cache's processor has\n+      if ((processorDescription.features[i] & self()->getProcessorDescription().features[i]) != processorDescription.features[i])\n+         return false;\n       }\n-#endif /* defined(J9VM_OPT_JITSERVER) */\n-   TR_ProcessorFeatureFlags processorFeatureFlags = { {self()->getX86ProcessorFeatureFlags(), self()->getX86ProcessorFeatureFlags2(), self()->getX86ProcessorFeatureFlags8()} };\n-   return processorFeatureFlags;\n+   return true;\n    }\n \n-bool\n-CPU::isCompatible(TR_Processor processorSignature, TR_ProcessorFeatureFlags processorFeatureFlags)\n+OMRProcessorDesc\n+J9::X86::CPU::getProcessorDescription()\n    {\n-   for (int i = 0; i < PROCESSOR_FEATURES_SIZE; i++)\n+#if defined(J9VM_OPT_JITSERVER)\n+   if (auto stream = TR::CompilationInfo::getStream())", "originalCommit": "3fca77adc65fa2f45bf006e81244df1570dbbb27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIyODAyMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9826#discussion_r438228023", "bodyText": "Good point, will add it for P and Z.", "author": "harryyu1994", "createdAt": "2020-06-10T15:48:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgwODM2OQ=="}], "type": "inlineReview"}, {"oid": "2c6127634a1a22f124665541bbb3a5ee86c9c809", "url": "https://github.com/eclipse-openj9/openj9/commit/2c6127634a1a22f124665541bbb3a5ee86c9c809", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-10T19:29:42Z", "type": "forcePushed"}, {"oid": "a72cd651fb9a04c71720be6726b957735d6dd3b1", "url": "https://github.com/eclipse-openj9/openj9/commit/a72cd651fb9a04c71720be6726b957735d6dd3b1", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-10T19:41:14Z", "type": "forcePushed"}, {"oid": "900a08af45660469d31559863da8de42443f4a29", "url": "https://github.com/eclipse-openj9/openj9/commit/900a08af45660469d31559863da8de42443f4a29", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-10T21:39:14Z", "type": "commit"}, {"oid": "900a08af45660469d31559863da8de42443f4a29", "url": "https://github.com/eclipse-openj9/openj9/commit/900a08af45660469d31559863da8de42443f4a29", "message": "Store OMRProcessorDesc in AOT Header\n\nPreviously we have TR_Processor and TR_ProcessorFeatureFlags in\nAOT header. We will no longer be using TR_Processor and\nTR_ProcessorFeatureFlags soon.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-06-10T21:39:14Z", "type": "forcePushed"}]}