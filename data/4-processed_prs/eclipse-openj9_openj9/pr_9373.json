{"pr_number": 9373, "pr_title": "Remove discontiguous arraylet NULL pointers", "pr_createdAt": "2020-04-27T16:20:05Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9373", "timeline": [{"oid": "e3029be14ee2766ce0948b3f3df9f8c247453dc9", "url": "https://github.com/eclipse-openj9/openj9/commit/e3029be14ee2766ce0948b3f3df9f8c247453dc9", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-04-27T16:23:31Z", "type": "forcePushed"}, {"oid": "ee8012e36ef1e43a3a618a566f96215ca7e524d9", "url": "https://github.com/eclipse-openj9/openj9/commit/ee8012e36ef1e43a3a618a566f96215ca7e524d9", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-05-05T17:54:58Z", "type": "forcePushed"}, {"oid": "ec6aa199639b82ae37ae678190afe87c5143973f", "url": "https://github.com/eclipse-openj9/openj9/commit/ec6aa199639b82ae37ae678190afe87c5143973f", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-05-06T23:23:26Z", "type": "forcePushed"}, {"oid": "604f28c17fb90153daddf241c6a19001824e0d15", "url": "https://github.com/eclipse-openj9/openj9/commit/604f28c17fb90153daddf241c6a19001824e0d15", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-05-15T22:14:46Z", "type": "forcePushed"}, {"oid": "d30f15694d6c117eaa9562beeeb245ca8efca105", "url": "https://github.com/eclipse-openj9/openj9/commit/d30f15694d6c117eaa9562beeeb245ca8efca105", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-06-08T14:59:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyMzk1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r439123956", "bodyText": "There is no adjustment any more. This line and comment above should go away. The formal parameter should be renamed unadjustedDataSizeInBytes->dataSizeInBytes .", "author": "amicic", "createdAt": "2020-06-11T23:26:47Z", "path": "runtime/gc_glue_java/ArrayletObjectModelBase.hpp", "diffHunk": "@@ -252,7 +252,7 @@ class GC_ArrayletObjectModelBase\n \t\t\t * of the after-last element without crashing. Handle the case of UDATA_MAX specially, since we use that\n \t\t\t * for any object whose size overflows the address space.\n \t\t\t */\n-\t\t\tUDATA dataSizeInBytes = (UDATA_MAX == unadjustedDataSizeInBytes) ? UDATA_MAX : (unadjustedDataSizeInBytes + 1);\n+\t\t\tUDATA dataSizeInBytes = (UDATA_MAX == unadjustedDataSizeInBytes) ? UDATA_MAX : unadjustedDataSizeInBytes;", "originalCommit": "d30f15694d6c117eaa9562beeeb245ca8efca105", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEyNDE2Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r439124162", "bodyText": "_numberOfArraylets is unsigned, so this becomes redundant.", "author": "amicic", "createdAt": "2020-06-11T23:27:35Z", "path": "runtime/gc_base/IndexableObjectAllocationModel.cpp", "diffHunk": "@@ -72,10 +72,10 @@ MM_IndexableObjectAllocationModel::initializeAllocateDescription(MM_EnvironmentB\n \t\tbreak;\n \n \tcase GC_ArrayletObjectModel::Discontiguous:\n-\t\tAssert_MM_true(0 < _numberOfArraylets);\n+\t\tAssert_MM_true(0 <= _numberOfArraylets);", "originalCommit": "d30f15694d6c117eaa9562beeeb245ca8efca105", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzNjE2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r439136165", "bodyText": "I believe this was the only user of AssertNotEmptyArrayletLeaves(), so that it can be removed.", "author": "amicic", "createdAt": "2020-06-12T00:09:08Z", "path": "runtime/gc_glue_java/ArrayletObjectModel.hpp", "diffHunk": "@@ -52,17 +52,9 @@ class GC_ArrayletObjectModel : public GC_ArrayletObjectModelBase\n */\n private:\n \tvoid AssertBadElementSize();\n+\tvoid AssertArrayletIsDiscontiguous(J9IndexableObject *objPtr);\n #if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n \tvoid AssertNotEmptyArrayletLeaves(UDATA sizeInElements, UDATA arrayletLeafCount);\n-\tMMINLINE bool\n-\tisOneArrayletLeafWithNULL(J9IndexableObject *spine, UDATA arrayletLeafCount, UDATA sizeInElements)\n-\t{\n-\t\tUDATA arrayletLeafSize = _omrVM->_arrayletLeafSize;\n-\t\tUDATA dataSize = getDataSizeInBytes(spine);\n-\t\tAssertNotEmptyArrayletLeaves(sizeInElements, arrayletLeafCount);", "originalCommit": "d30f15694d6c117eaa9562beeeb245ca8efca105", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzODA4MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r439138081", "bodyText": "I'm on a fence, if we really need this assert. @dmitripivkine, opinion?\nBesides, for Metronome that does not move object, even stronger assert (without +objectAlignment) should hold, right?\nAnd finally, you have a clone of this in another file - no way to reuse?", "author": "amicic", "createdAt": "2020-06-12T00:12:31Z", "path": "runtime/gc_base/IndexableObjectAllocationModel.cpp", "diffHunk": "@@ -258,22 +259,23 @@ MM_IndexableObjectAllocationModel::layoutDiscontiguousArraylet(MM_EnvironmentBas\n \tif (NULL != spine) {\n \t\tswitch (_layout) {\n \t\tcase GC_ArrayletObjectModel::Discontiguous:\n-\t\t\t/* if last arraylet leaf is empty (contains 0 bytes) arrayoid pointer is set to NULL */\n-\t\t\tif (arrayoidIndex == (_numberOfArraylets - 1)) {\n-\t\t\t\tAssert_MM_true(0 == (_dataSize % arrayletLeafSize));\n-\t\t\t\tGC_SlotObject slotObject(env->getOmrVM(), GC_SlotObject::addToSlotAddress(arrayoidPtr, arrayoidIndex, compressed));\n-\t\t\t\tslotObject.writeReferenceToSlot(NULL);\n-\t\t\t} else {\n-\t\t\t\tAssert_MM_true(0 != (_dataSize % arrayletLeafSize));\n-\t\t\t\tAssert_MM_true(arrayoidIndex == _numberOfArraylets);\n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\t\t\tif (!indexableObjectModel->isDoubleMappingEnabled())\n+#endif /* J9VM_GC_ENABLE_DOUBLE_MAP */\n+\t\t\t{\n+\t\t\t\tUDATA remainderBytes = _dataSize % arrayletLeafSize;\n+\t\t\t\tif (0 != remainderBytes) {\n+\t\t\t\t\tAssert_MM_true((indexableObjectModel->getSpineSize(spine) + remainderBytes + env->getObjectAlignmentInBytes()) > arrayletLeafSize);\n+\t\t\t\t}", "originalCommit": "d30f15694d6c117eaa9562beeeb245ca8efca105", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE0MjA5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r439142092", "bodyText": "Yes you're right. I'll reuse the one from ArrayletObjectModel.cpp. And yes, now that\ndiscontiguous arraylets can have sizes that are not just modulo of arrayletLeafSize, I wasn't sure myself if we should have this Assert or not.", "author": "bragaigor", "createdAt": "2020-06-12T00:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzODA4MQ=="}], "type": "inlineReview"}, {"oid": "b3243abc05ec63411dc2560903d76127f03aaa65", "url": "https://github.com/eclipse-openj9/openj9/commit/b3243abc05ec63411dc2560903d76127f03aaa65", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-06-12T00:28:40Z", "type": "forcePushed"}, {"oid": "d73b62e245373f9f7b7c99009b4cd458c1261998", "url": "https://github.com/eclipse-openj9/openj9/commit/d73b62e245373f9f7b7c99009b4cd458c1261998", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-06-12T00:46:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTMwMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r439165300", "bodyText": "Perhaps you should drag in these few lines inside the assert helper. They exist at both sites where the helper is invoked.", "author": "amicic", "createdAt": "2020-06-12T01:52:01Z", "path": "runtime/gc_base/IndexableObjectAllocationModel.cpp", "diffHunk": "@@ -258,22 +258,20 @@ MM_IndexableObjectAllocationModel::layoutDiscontiguousArraylet(MM_EnvironmentBas\n \tif (NULL != spine) {\n \t\tswitch (_layout) {\n \t\tcase GC_ArrayletObjectModel::Discontiguous:\n-\t\t\t/* if last arraylet leaf is empty (contains 0 bytes) arrayoid pointer is set to NULL */\n-\t\t\tif (arrayoidIndex == (_numberOfArraylets - 1)) {\n-\t\t\t\tAssert_MM_true(0 == (_dataSize % arrayletLeafSize));\n-\t\t\t\tGC_SlotObject slotObject(env->getOmrVM(), GC_SlotObject::addToSlotAddress(arrayoidPtr, arrayoidIndex, compressed));\n-\t\t\t\tslotObject.writeReferenceToSlot(NULL);\n-\t\t\t} else {\n-\t\t\t\tAssert_MM_true(0 != (_dataSize % arrayletLeafSize));\n-\t\t\t\tAssert_MM_true(arrayoidIndex == _numberOfArraylets);\n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\t\t\tif (!indexableObjectModel->isDoubleMappingEnabled())\n+#endif /* J9VM_GC_ENABLE_DOUBLE_MAP */", "originalCommit": "d73b62e245373f9f7b7c99009b4cd458c1261998", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "40da754e3a29cceef3b9c113be060af7b426333c", "url": "https://github.com/eclipse-openj9/openj9/commit/40da754e3a29cceef3b9c113be060af7b426333c", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-06-12T02:04:40Z", "type": "commit"}, {"oid": "40da754e3a29cceef3b9c113be060af7b426333c", "url": "https://github.com/eclipse-openj9/openj9/commit/40da754e3a29cceef3b9c113be060af7b426333c", "message": "Remove discontiguous arraylet NULL pointers\n\nCurrently every discontiguous arraylet contains an extra\narrayoid that points to NULL, which is not required\nanymore; therefore, every arraylet from now on will\ncontain the exact number of arrayoids/leaves it consumes\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>", "committedDate": "2020-06-12T02:04:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwNzcwMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r440207700", "bodyText": "Would you please add comment here to explain that with exception of Double Mapping request the only case when layout Discontiguous can be selected is Arraylet Hybrid representation does not fit a region? It would improve readability. My original confusion when I read this first time was \"Discontiguous\" in function name refer to Discontiguous Layout of Arraylet, not Discontiguous Array representation.", "author": "dmitripivkine", "createdAt": "2020-06-15T14:15:53Z", "path": "runtime/gc_glue_java/ArrayletObjectModel.cpp", "diffHunk": "@@ -43,13 +43,21 @@ GC_ArrayletObjectModel::AssertBadElementSize()\n \tAssert_MM_unreachable();\n }\n \n-#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n void\n-GC_ArrayletObjectModel::AssertNotEmptyArrayletLeaves(UDATA sizeInElements, UDATA arrayletLeafCount)\n+GC_ArrayletObjectModel::AssertArrayletIsDiscontiguous(J9IndexableObject *objPtr)\n {\n-\tAssert_MM_true((0 == sizeInElements) || (arrayletLeafCount > 0));\n-}\n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\tif (!isDoubleMappingEnabled())\n #endif /* J9VM_GC_ENABLE_DOUBLE_MAP */\n+\t{\n+\t\tMM_GCExtensionsBase* extensions = MM_GCExtensionsBase::getExtensions(_omrVM);\n+\t\tUDATA arrayletLeafSize = _omrVM->_arrayletLeafSize;\n+\t\tUDATA remainderBytes = getDataSizeInBytes(objPtr) % arrayletLeafSize;\n+\t\tif (0 != remainderBytes) {\n+\t\t\tAssert_MM_true((getSpineSize(objPtr) + remainderBytes + extensions->getObjectAlignmentInBytes()) > arrayletLeafSize);", "originalCommit": "40da754e3a29cceef3b9c113be060af7b426333c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4MTY0MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r441081640", "bodyText": "I believe change can be merge without this suggested comment. We can add it later if necessary", "author": "dmitripivkine", "createdAt": "2020-06-16T19:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwNzcwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4MzA0NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9373#discussion_r441083045", "bodyText": "Sorry, I completely missed this comment. Let me know if you want the comment in this PR and I can insert it.", "author": "bragaigor", "createdAt": "2020-06-16T19:12:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwNzcwMA=="}], "type": "inlineReview"}]}