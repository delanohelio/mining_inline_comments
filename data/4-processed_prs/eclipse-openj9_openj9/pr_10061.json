{"pr_number": 10061, "pr_title": "Add native stubs for vector API support", "pr_createdAt": "2020-06-30T19:48:06Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10061", "timeline": [{"oid": "a58e49e2b34214426ea7bc62dcf110ccff595f31", "url": "https://github.com/eclipse-openj9/openj9/commit/a58e49e2b34214426ea7bc62dcf110ccff595f31", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-09-17T21:36:22Z", "type": "forcePushed"}, {"oid": "001f78b8746dec66bf6b563e6e5f48d482523799", "url": "https://github.com/eclipse-openj9/openj9/commit/001f78b8746dec66bf6b563e6e5f48d482523799", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-09-17T21:50:41Z", "type": "forcePushed"}, {"oid": "58af7d3b922f9025dd39357473e85ea3e0242bec", "url": "https://github.com/eclipse-openj9/openj9/commit/58af7d3b922f9025dd39357473e85ea3e0242bec", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-11-26T20:42:44Z", "type": "forcePushed"}, {"oid": "11adc28b2fa7abd153ec6d92dfecd2b8edb19ba9", "url": "https://github.com/eclipse-openj9/openj9/commit/11adc28b2fa7abd153ec6d92dfecd2b8edb19ba9", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-11-26T20:46:04Z", "type": "forcePushed"}, {"oid": "1536f340d30edeac2c603d2366ccc964ce65563b", "url": "https://github.com/eclipse-openj9/openj9/commit/1536f340d30edeac2c603d2366ccc964ce65563b", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-11-26T20:48:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMDUyMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10061#discussion_r531230521", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 1998, 2020 IBM Corp. and others\n          \n          \n            \n             * Copyright (c) 2020, 2020 IBM Corp. and others", "author": "DanHeidinga", "createdAt": "2020-11-26T21:34:54Z", "path": "runtime/jcl/common/vectornatives.cpp", "diffHunk": "@@ -0,0 +1,73 @@\n+/*******************************************************************************\n+ * Copyright (c) 1998, 2020 IBM Corp. and others", "originalCommit": "1536f340d30edeac2c603d2366ccc964ce65563b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTA4NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10061#discussion_r531231084", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tJ9Class *elementType = J9VMJAVALANGCLASS_VMREF(currentThread, classObj);\n          \n          \n            \n            \t\tJ9Class *elementType = J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, classObj);", "author": "DanHeidinga", "createdAt": "2020-11-26T21:37:16Z", "path": "runtime/jcl/common/vectornatives.cpp", "diffHunk": "@@ -0,0 +1,73 @@\n+/*******************************************************************************\n+ * Copyright (c) 1998, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+#include \"j9.h\"\n+#include \"jclprots.h\"\n+#include \"j9protos.h\"\n+\n+/* TODO this will be replaced by a call that can determine\n+ * the correct size on each platform\n+ */\n+#define MAX_VECTOR_REGISTER_SIZE 128\n+\n+extern \"C\" {\n+\n+jint JNICALL\n+Java_jdk_internal_vm_vector_VectorSupport_registerNatives(JNIEnv *env, jclass clazz)\n+{\n+\treturn 0;\n+}\n+\n+jint JNICALL\n+Java_jdk_internal_vm_vector_VectorSupport_getMaxLaneCount(JNIEnv *env, jclass clazz, jclass elementType)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *) env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tjint laneCount = 0;\n+\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tj9object_t classObj = J9_JNI_UNWRAP_REFERENCE(elementType);\n+\tif (NULL == classObj) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t} else {\n+\t\tJ9Class *elementType = J9VMJAVALANGCLASS_VMREF(currentThread, classObj);", "originalCommit": "1536f340d30edeac2c603d2366ccc964ce65563b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTI2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10061#discussion_r531231266", "bodyText": "Should char be supported here?", "author": "DanHeidinga", "createdAt": "2020-11-26T21:38:15Z", "path": "runtime/jcl/common/vectornatives.cpp", "diffHunk": "@@ -0,0 +1,73 @@\n+/*******************************************************************************\n+ * Copyright (c) 1998, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+#include \"j9.h\"\n+#include \"jclprots.h\"\n+#include \"j9protos.h\"\n+\n+/* TODO this will be replaced by a call that can determine\n+ * the correct size on each platform\n+ */\n+#define MAX_VECTOR_REGISTER_SIZE 128\n+\n+extern \"C\" {\n+\n+jint JNICALL\n+Java_jdk_internal_vm_vector_VectorSupport_registerNatives(JNIEnv *env, jclass clazz)\n+{\n+\treturn 0;\n+}\n+\n+jint JNICALL\n+Java_jdk_internal_vm_vector_VectorSupport_getMaxLaneCount(JNIEnv *env, jclass clazz, jclass elementType)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *) env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tjint laneCount = 0;\n+\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tj9object_t classObj = J9_JNI_UNWRAP_REFERENCE(elementType);\n+\tif (NULL == classObj) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t} else {\n+\t\tJ9Class *elementType = J9VMJAVALANGCLASS_VMREF(currentThread, classObj);\n+\n+\t\tif (elementType == vm->byteReflectClass) {", "originalCommit": "1536f340d30edeac2c603d2366ccc964ce65563b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMzAwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10061#discussion_r531233007", "bodyText": "char is not one of the supported types", "author": "tajila", "createdAt": "2020-11-26T21:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTI2Ng=="}], "type": "inlineReview"}, {"oid": "be3357a70aa2b60fabd6482bb2185b5838dce838", "url": "https://github.com/eclipse-openj9/openj9/commit/be3357a70aa2b60fabd6482bb2185b5838dce838", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-11-26T21:45:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM2MDcyNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10061#discussion_r531360724", "bodyText": "Actually, this might need to be only included on jdk16+.  Maybe use similar code to the jdk9+ example below in the file:\n# We'd like to use GREATER_EQUAL here (and below), but that operator requires\n# cmake version 3.7 or better; the minimum version we require is 3.4.\t# cmake version 3.7 or better; the minimum version we require is 3.4.\nif(NOT JAVA_SPEC_VERSION LESS 16)\n\t# sources for Java 16+\n\ttarget_sources(jclse\n\t\tPRIVATE\n\t\t\t${CMAKE_CURRENT_SOURCE_DIR}/common/java_lang_invoke_VarHandle.c\n\t\t\t${CMAKE_CURRENT_SOURCE_DIR}/common/java_lang_StackWalker.cpp\n\t)\nendif()\n\n@dnakamura do you have a better suggestion for how to handle a jdk16+ only source file?", "author": "DanHeidinga", "createdAt": "2020-11-27T03:08:20Z", "path": "runtime/jcl/CMakeLists.txt", "diffHunk": "@@ -157,6 +157,7 @@ target_sources(jclse\n \t\t${CMAKE_CURRENT_SOURCE_DIR}/common/system.c\n \t\t${CMAKE_CURRENT_SOURCE_DIR}/common/thread.cpp\n \t\t${CMAKE_CURRENT_SOURCE_DIR}/common/unsafe_mem.c\n+\t\t${CMAKE_CURRENT_SOURCE_DIR}/common/vectornatives.cpp", "originalCommit": "be3357a70aa2b60fabd6482bb2185b5838dce838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY5NTY4Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10061#discussion_r531695686", "bodyText": "no, that would be the way to do it.", "author": "dnakamura", "createdAt": "2020-11-27T16:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM2MDcyNA=="}], "type": "inlineReview"}, {"oid": "cc17240db5f376d9a435ffa058f98ba9c690caf7", "url": "https://github.com/eclipse-openj9/openj9/commit/cc17240db5f376d9a435ffa058f98ba9c690caf7", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-11-27T16:10:09Z", "type": "commit"}, {"oid": "cc17240db5f376d9a435ffa058f98ba9c690caf7", "url": "https://github.com/eclipse-openj9/openj9/commit/cc17240db5f376d9a435ffa058f98ba9c690caf7", "message": "Add native stubs for vector API support\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>", "committedDate": "2020-11-27T16:10:09Z", "type": "forcePushed"}]}