{"pr_number": 10681, "pr_title": "Fix compilation failures for building JDK ON Z", "pr_createdAt": "2020-09-23T20:09:08Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10681", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NjE5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r493876192", "bodyText": "this will break windows, if a variable is not defined at the beginning of a scope. Don't worry about having multiple #if defined(..) blocks. Just define the variable at the start of the scope.", "author": "tajila", "createdAt": "2020-09-23T20:30:24Z", "path": "runtime/jcl/common/unsafe_mem.c", "diffHunk": "@@ -146,6 +145,7 @@ unsafeFreeMemory(J9VMThread* vmThread, void* oldAddress)\n \t\tJ9_LINKED_LIST_REMOVE(vmThread->javaVM->unsafeMemoryListHead, memBlock);\n \t\tomrthread_monitor_exit(mutex);\n #if defined(J9VM_OPT_SNAPSHOTS)\n+\t\tJ9JavaVM *vm = vmThread->javaVM;", "originalCommit": "74d9e544302db2e57a039f6bc3250808729d938a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwOTgxMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r494009810", "bodyText": "Fixed in https://github.com/eclipse/openj9/compare/74d9e544302db2e57a039f6bc3250808729d938a..a001f260c87796da222a7d5f0aa36ca27e7d5b69", "author": "r30shah", "createdAt": "2020-09-24T02:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NjE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NjI5NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r493876295", "bodyText": "same here", "author": "tajila", "createdAt": "2020-09-23T20:30:34Z", "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -7002,14 +7002,14 @@ freeClassNativeMemory(J9HookInterface** hook, UDATA eventNum, void* eventData, v\n {\n \tJ9VMClassUnloadEvent * data = eventData;\n \tJ9Class * clazz = data->clazz;\n-\tJ9JavaVM *vm = data->currentThread->javaVM;\n \tPORT_ACCESS_FROM_VMC(data->currentThread);\n \n \t/* Free the ID table for this class, but do not free any of the IDs.  They will be freed by killing their\n \t\tpools when the class loader is unloaded.\n \t*/\n \n #if defined(J9VM_OPT_SNAPSHOTS)\n+\tJ9JavaVM *vm = data->currentThread->javaVM;", "originalCommit": "74d9e544302db2e57a039f6bc3250808729d938a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwOTgzMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r494009831", "bodyText": "Fixed in https://github.com/eclipse/openj9/compare/74d9e544302db2e57a039f6bc3250808729d938a..a001f260c87796da222a7d5f0aa36ca27e7d5b69", "author": "r30shah", "createdAt": "2020-09-24T02:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NjI5NQ=="}], "type": "inlineReview"}, {"oid": "a001f260c87796da222a7d5f0aa36ca27e7d5b69", "url": "https://github.com/eclipse-openj9/openj9/commit/a001f260c87796da222a7d5f0aa36ca27e7d5b69", "message": "Fix compilation failures for building JDK ON Z\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-09-24T02:58:45Z", "type": "commit"}, {"oid": "a001f260c87796da222a7d5f0aa36ca27e7d5b69", "url": "https://github.com/eclipse-openj9/openj9/commit/a001f260c87796da222a7d5f0aa36ca27e7d5b69", "message": "Fix compilation failures for building JDK ON Z\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-09-24T02:58:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MzYyMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r494473620", "bodyText": "@0xdaryl @fjeremic The rest of this PR looks fine to me but I don't have the background to tell if this is correct.  Can you of you +1 this?", "author": "DanHeidinga", "createdAt": "2020-09-24T17:01:19Z", "path": "runtime/compiler/z/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -2184,7 +2184,7 @@ J9::Z::TreeEvaluator::asynccheckEvaluator(TR::Node * node, TR::CodeGenerator * c\n          }\n       if (value >= MIN_IMMEDIATE_VAL && value <= MAX_IMMEDIATE_VAL)\n          {\n-         TR::MemoryReference * tempMR = generateS390MemoryReference(firstChild, cg);\n+         TR::MemoryReference * tempMR = TR::MemoryReference::create(cg, firstChild);", "originalCommit": "a001f260c87796da222a7d5f0aa36ca27e7d5b69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3OTQ3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r494479470", "bodyText": "For the background, we got rid of calls to generateS390MemoryReference(TR::Node *, TR::CodeGenerator*) and replaced them with API TR::MemoryReference::create , not sure when and how this got escaped, may be because we do not have those changes in master branch of OpenJ9.", "author": "r30shah", "createdAt": "2020-09-24T17:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MzYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5MTUwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10681#discussion_r494691503", "bodyText": "This looks to be fine for the snapshot branch, but that API needs to find its way into the master branch still.", "author": "0xdaryl", "createdAt": "2020-09-25T01:07:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MzYyMA=="}], "type": "inlineReview"}]}