{"pr_number": 9993, "pr_title": "Enable portable AOT on x86", "pr_createdAt": "2020-06-23T22:08:11Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9993", "timeline": [{"oid": "7499cdd152eb02fa39cb1393882a0d1b8b440f92", "url": "https://github.com/eclipse-openj9/openj9/commit/7499cdd152eb02fa39cb1393882a0d1b8b440f92", "message": "change to portable shared cache", "committedDate": "2020-07-15T17:06:09Z", "type": "forcePushed"}, {"oid": "b002af2116515ffddea247b3376795c48ba33d3d", "url": "https://github.com/eclipse-openj9/openj9/commit/b002af2116515ffddea247b3376795c48ba33d3d", "message": "change to portable shared cache", "committedDate": "2020-07-16T15:45:53Z", "type": "forcePushed"}, {"oid": "d84df1af9a7f3c18c3e65a59c9b7150cd616c429", "url": "https://github.com/eclipse-openj9/openj9/commit/d84df1af9a7f3c18c3e65a59c9b7150cd616c429", "message": "change to portable shared cache", "committedDate": "2020-07-16T16:09:05Z", "type": "forcePushed"}, {"oid": "436bc4abd7b861b614197b2d13e993b6968a9976", "url": "https://github.com/eclipse-openj9/openj9/commit/436bc4abd7b861b614197b2d13e993b6968a9976", "message": "change to portable shared cache", "committedDate": "2020-07-16T18:57:16Z", "type": "forcePushed"}, {"oid": "73cc9b5d1c0d2d4f9a07dfcf6efef78417968316", "url": "https://github.com/eclipse-openj9/openj9/commit/73cc9b5d1c0d2d4f9a07dfcf6efef78417968316", "message": "fix", "committedDate": "2020-07-16T19:54:17Z", "type": "forcePushed"}, {"oid": "c98103a3636171a8b79c8d2373daa958494b7b00", "url": "https://github.com/eclipse-openj9/openj9/commit/c98103a3636171a8b79c8d2373daa958494b7b00", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC can be displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-18T02:35:11Z", "type": "forcePushed"}, {"oid": "9d3e037ee575562f607c649f3b3410f3366c012f", "url": "https://github.com/eclipse-openj9/openj9/commit/9d3e037ee575562f607c649f3b3410f3366c012f", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC can be displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-18T02:41:28Z", "type": "forcePushed"}, {"oid": "dda8822fe54371b63eeb359d86fe5d183c2eae7a", "url": "https://github.com/eclipse-openj9/openj9/commit/dda8822fe54371b63eeb359d86fe5d183c2eae7a", "message": "Reformat the processor feature string\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-20T20:05:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4OTU2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458389565", "bodyText": "I guess line 5194 to line 5198 can all be moved into printAOTHeader().", "author": "hangshao0", "createdAt": "2020-07-21T21:09:58Z", "path": "runtime/shared_common/CacheMap.cpp", "diffHunk": "@@ -5191,6 +5191,14 @@ SH_CacheMap::printCacheStatsTopLayerStatsHelper(J9VMThread* currentThread, UDATA\n \t\tCACHEMAP_PRINT1(J9NLS_DO_NOT_PRINT_MESSAGE_TAG, J9NLS_SHRC_CM_PRINTSTATS_FEATURE, \"default\");\n \t}\n \n+\tj9tty_printf(_portlib, \"\\t\");\n+\tJ9SharedDataDescriptor firstDescriptor;\n+\tfirstDescriptor.address = NULL;\n+\tfindSharedData(currentThread, \"J9AOTHeader\", sizeof(\"J9AOTHeader\") - 1, J9SHR_DATA_TYPE_AOTHEADER, FALSE, &firstDescriptor, NULL);\n+\tchar buff[500];", "originalCommit": "dda8822fe54371b63eeb359d86fe5d183c2eae7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMTE5Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458421196", "bodyText": "I tried to do findSharedData() in printAOTHeader() before,  get firstDescriptor.address == NULL. I'm not sure why, maybe it's because sharedClassConfig->findSharedData hasn't been initialized at this point?\n   currentThread->javaVM->sharedClassConfig->findSharedData(currentThread, \"J9AOTHeader\", sizeof(\"J9AOTHeader\") - 1, J9SHR_DATA_TYPE_AOTHEADER, FALSE, &firstDescriptor, NULL);\n   if (!firstDescriptor.address)\n      {\n      strncat(buff, \"null\", buffSize);\n      return;\n      }", "author": "harryyu1994", "createdAt": "2020-07-21T22:18:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4OTU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NjA3NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458866074", "bodyText": "OK, I see. It is because of this check: https://github.com/eclipse/openj9/blob/master/runtime/shared_common/shrinit.cpp#L1860. Then I am fine with putting all the new code here inside if (NULL != currentThread->javaVM->jitConfig) {}", "author": "hangshao0", "createdAt": "2020-07-22T15:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4OTU2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5MDI0NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458390244", "bodyText": "You may want to do a null check on currentThread->javaVM->jitConfig first.", "author": "hangshao0", "createdAt": "2020-07-21T21:11:18Z", "path": "runtime/shared_common/CacheMap.cpp", "diffHunk": "@@ -5191,6 +5191,14 @@ SH_CacheMap::printCacheStatsTopLayerStatsHelper(J9VMThread* currentThread, UDATA\n \t\tCACHEMAP_PRINT1(J9NLS_DO_NOT_PRINT_MESSAGE_TAG, J9NLS_SHRC_CM_PRINTSTATS_FEATURE, \"default\");\n \t}\n \n+\tj9tty_printf(_portlib, \"\\t\");\n+\tJ9SharedDataDescriptor firstDescriptor;\n+\tfirstDescriptor.address = NULL;\n+\tfindSharedData(currentThread, \"J9AOTHeader\", sizeof(\"J9AOTHeader\") - 1, J9SHR_DATA_TYPE_AOTHEADER, FALSE, &firstDescriptor, NULL);\n+\tchar buff[500];\n+\tcurrentThread->javaVM->jitConfig->printAOTHeader(firstDescriptor.address, buff, 500);", "originalCommit": "dda8822fe54371b63eeb359d86fe5d183c2eae7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5MzIzNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458393235", "bodyText": "Is the JIT code that checks sharedCachePortable inside #if defined(J9X86) ? If not, you may want to put these 2 FIND_AND_CONSUME_ARG calls inside #if defined(J9X86)", "author": "hangshao0", "createdAt": "2020-07-21T21:17:11Z", "path": "runtime/shared/shrclssup.c", "diffHunk": "@@ -141,6 +141,23 @@ IDATA J9VMDllMain(J9JavaVM* vm, IDATA stage, void* reserved)\n \t\t\t\t\truntimeFlags |= J9SHR_RUNTIMEFLAG_DISABLE_BCI;\n \t\t\t\t}\n \n+\t\t\t\t/* Check for -XX:+PortableSharedCache and -XX:-PortableSharedCache; whichever comes later wins.\n+\t\t\t\t * These options should be checked before parseArgs() to allow -Xshareclasses:portable to override this option.\n+\t\t\t\t * \n+\t\t\t\t * Note: Please also change the function checkArgsConsumed() in runtime/vm/jvminit.c when adding new options,\n+\t\t\t\t * in order to quietly consume the options if it is used without -Xshareclasses\n+\t\t\t\t */\n+\t\t\t\targIndex1 = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXPORTABLESHAREDCACHE, NULL);\n+\t\t\t\targIndex2 = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXNOPORTABLESHAREDCACHE, NULL);", "originalCommit": "dda8822fe54371b63eeb359d86fe5d183c2eae7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMDg2Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460320862", "bodyText": "@hangshao0 Actually I just found out (local testing) that J9X86 is not defined here. Is there another MACRO we can use?", "author": "harryyu1994", "createdAt": "2020-07-24T22:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5MzIzNQ=="}], "type": "inlineReview"}, {"oid": "ee215ef29e30316f7c5b95cc2d8ff819d3d4cf81", "url": "https://github.com/eclipse-openj9/openj9/commit/ee215ef29e30316f7c5b95cc2d8ff819d3d4cf81", "message": "Reformat the processor feature string\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-21T21:51:17Z", "type": "forcePushed"}, {"oid": "3a112d3b7e5f56c58532e5f1861c4ab4043db851", "url": "https://github.com/eclipse-openj9/openj9/commit/3a112d3b7e5f56c58532e5f1861c4ab4043db851", "message": "Reformat the processor feature string\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-21T21:54:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NzU3MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458867571", "bodyText": "Please add /* defined(J9X86) */ after endif.", "author": "hangshao0", "createdAt": "2020-07-22T15:11:41Z", "path": "runtime/shared/shrclssup.c", "diffHunk": "@@ -141,6 +141,25 @@ IDATA J9VMDllMain(J9JavaVM* vm, IDATA stage, void* reserved)\n \t\t\t\t\truntimeFlags |= J9SHR_RUNTIMEFLAG_DISABLE_BCI;\n \t\t\t\t}\n \n+#if defined(J9X86)\n+\t\t\t\t/* Check for -XX:+PortableSharedCache and -XX:-PortableSharedCache; whichever comes later wins.\n+\t\t\t\t * These options should be checked before parseArgs() to allow -Xshareclasses:portable to override this option.\n+\t\t\t\t * \n+\t\t\t\t * Note: Please also change the function checkArgsConsumed() in runtime/vm/jvminit.c when adding new options,\n+\t\t\t\t * in order to quietly consume the options if it is used without -Xshareclasses\n+\t\t\t\t */\n+\t\t\t\targIndex1 = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXPORTABLESHAREDCACHE, NULL);\n+\t\t\t\targIndex2 = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXNOPORTABLESHAREDCACHE, NULL);\n+\t\t\t\tif (argIndex2 > argIndex1) {\n+\t\t\t\t\tvm->sharedCacheAPI->sharedCachePortable = FALSE;\n+\t\t\t\t} else if (argIndex1 > argIndex2) {\n+\t\t\t\t\tvm->sharedCacheAPI->sharedCachePortable = TRUE;\n+\t\t\t\t} else {\n+\t\t\t\t\tOMRPORT_ACCESS_FROM_J9PORT(vm->portLibrary);\n+\t\t\t\t\tvm->sharedCacheAPI->sharedCachePortable = omrsysinfo_is_running_in_container();\n+\t\t\t\t}\n+#endif", "originalCommit": "3a112d3b7e5f56c58532e5f1861c4ab4043db851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2OTI1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r458869256", "bodyText": "I see there are only blank line and copy right date change for this file. Please remove this file from this PR.", "author": "hangshao0", "createdAt": "2020-07-22T15:13:58Z", "path": "runtime/shared_common/ByteDataManagerImpl.cpp", "diffHunk": "@@ -354,7 +354,6 @@ SH_ByteDataManagerImpl::find(J9VMThread* currentThread, const char* key, UDATA k\n \t}\t\n \n \tTrc_SHR_BDMI_find_Exit(currentThread, resultCntr);\n-\t\t", "originalCommit": "3a112d3b7e5f56c58532e5f1861c4ab4043db851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2217a6411b91c67f31c0c75f4cc48d2d982d8f61", "url": "https://github.com/eclipse-openj9/openj9/commit/2217a6411b91c67f31c0c75f4cc48d2d982d8f61", "message": "Reformat the processor feature string\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-22T16:48:02Z", "type": "forcePushed"}, {"oid": "875f6abf47455dcb67ea778177bfd28ccdb154e2", "url": "https://github.com/eclipse-openj9/openj9/commit/875f6abf47455dcb67ea778177bfd28ccdb154e2", "message": "Reformat the processor feature string\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-22T16:53:09Z", "type": "forcePushed"}, {"oid": "b08d632bf8c7ac3e240ad7ddfbddc666b4d16786", "url": "https://github.com/eclipse-openj9/openj9/commit/b08d632bf8c7ac3e240ad7ddfbddc666b4d16786", "message": "Reformat the processor feature string\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-22T16:54:27Z", "type": "forcePushed"}, {"oid": "538c5cd76f3e98d787d44cc95477f038ed284b1f", "url": "https://github.com/eclipse-openj9/openj9/commit/538c5cd76f3e98d787d44cc95477f038ed284b1f", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC can be displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-22T18:15:47Z", "type": "forcePushed"}, {"oid": "469ab7c1e89ebdd9dba49cb0e4db7e1824e1215c", "url": "https://github.com/eclipse-openj9/openj9/commit/469ab7c1e89ebdd9dba49cb0e4db7e1824e1215c", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC can be displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-22T18:17:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NTQyOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459655429", "bodyText": "Is this going to work on platforms other than X86?", "author": "pshipton", "createdAt": "2020-07-23T18:45:09Z", "path": "runtime/shared_common/CacheMap.cpp", "diffHunk": "@@ -5191,6 +5191,16 @@ SH_CacheMap::printCacheStatsTopLayerStatsHelper(J9VMThread* currentThread, UDATA\n \t\tCACHEMAP_PRINT1(J9NLS_DO_NOT_PRINT_MESSAGE_TAG, J9NLS_SHRC_CM_PRINTSTATS_FEATURE, \"default\");\n \t}\n \n+\tif (currentThread->javaVM->jitConfig) {\n+\t\tj9tty_printf(_portlib, \"\\t\");\n+\t\tJ9SharedDataDescriptor firstDescriptor;\n+\t\tfirstDescriptor.address = NULL;\n+\t\tfindSharedData(currentThread, \"J9AOTHeader\", sizeof(\"J9AOTHeader\") - 1, J9SHR_DATA_TYPE_AOTHEADER, FALSE, &firstDescriptor, NULL);\n+\t\tchar processorFeatures[500];\n+\t\tcurrentThread->javaVM->jitConfig->printAOTHeader(firstDescriptor.address, processorFeatures, 500);\n+\t\tCACHEMAP_PRINT1(J9NLS_DO_NOT_PRINT_MESSAGE_TAG, J9NLS_SHRC_CM_PRINTSTATS_PROCESSOR_FEATURES, processorFeatures);", "originalCommit": "469ab7c1e89ebdd9dba49cb0e4db7e1824e1215c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1ODMwMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459658300", "bodyText": "not yet on other platforms, I will guard these with J9X86 for now.", "author": "harryyu1994", "createdAt": "2020-07-23T18:50:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NTQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMTMwOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460321308", "bodyText": "@pshipton my defined(J9X86) attempt was unsuccessful, it didn't look like it was set on x86 for some reason (at least not in this file). Is there another MARCO I can use?", "author": "harryyu1994", "createdAt": "2020-07-24T22:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NTQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwMTU1OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460401558", "bodyText": "J9VM_ARCH_X86 should work.", "author": "pshipton", "createdAt": "2020-07-25T12:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NTQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwMTg0OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460401849", "bodyText": "J9X86 seems specific to Linux", "author": "pshipton", "createdAt": "2020-07-25T12:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NTQyOQ=="}], "type": "inlineReview"}, {"oid": "e3837db8895449801aa87fee1bde5cbb9d7ae36f", "url": "https://github.com/eclipse-openj9/openj9/commit/e3837db8895449801aa87fee1bde5cbb9d7ae36f", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC can be displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-23T19:02:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY4OTg1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459689859", "bodyText": "nitpick, keep this next to PORT_ACCESS_FROM_PORT", "author": "dsouzai", "createdAt": "2020-07-23T19:51:05Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,44 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, size_t buffSize)\n+   {\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", buffSize);\n+      return;\n+      }\n+\n+   PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n+   TR_AOTHeader * hdrInCache = (TR_AOTHeader *)aotHeaderAddress;\n+\n+   OMRProcessorDesc processorDescription = hdrInCache->processorDescription;\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);", "originalCommit": "e3837db8895449801aa87fee1bde5cbb9d7ae36f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NjE1NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459696155", "bodyText": "I think you should keep track of the return value of strncat so that you don't overrun buff.", "author": "dsouzai", "createdAt": "2020-07-23T20:03:13Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,44 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, size_t buffSize)\n+   {\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", buffSize);\n+      return;\n+      }\n+\n+   PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n+   TR_AOTHeader * hdrInCache = (TR_AOTHeader *)aotHeaderAddress;\n+\n+   OMRProcessorDesc processorDescription = hdrInCache->processorDescription;\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   int length = 0;\n+   for (size_t i = 0; i < OMRPORT_SYSINFO_FEATURES_SIZE; i++)\n+      {\n+      for (int j = 0; j < 32; j++) \n+         {\n+         if (processorDescription.features[i] & (1<<j))\n+            {\n+            if (length >= 20)\n+               {\n+               strncat(buff, \"\\n\\t                                       \", buffSize);", "originalCommit": "e3837db8895449801aa87fee1bde5cbb9d7ae36f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5ODg1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459698859", "bodyText": "Would also be better to use the size of the source string, rather than buffSize which is the size of the dest.", "author": "dsouzai", "createdAt": "2020-07-23T20:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NjE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwODgwOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459708808", "bodyText": "I intended to use the third parameter to prevent overflow but I didn't do it right\nShould be something like this:\nThe third parameter gives you the maximum number of chars allowed to be written to buff.\nstrncat(buff, \"string\", BUFF_SIZE - strlen(buff) - 1);\nI don't think the return value of strncat help here.", "author": "harryyu1994", "createdAt": "2020-07-23T20:28:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NjE1NQ=="}], "type": "inlineReview"}, {"oid": "e0f4010bb1ade7aae6bdfaabd7bdbe3f8624cff2", "url": "https://github.com/eclipse-openj9/openj9/commit/e0f4010bb1ade7aae6bdfaabd7bdbe3f8624cff2", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC is displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-23T20:36:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTg2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459715867", "bodyText": "Should be BUFF_SIZE", "author": "dsouzai", "createdAt": "2020-07-23T20:41:42Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,44 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, const size_t BUFF_SIZE)\n+   {\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", buffSize);", "originalCommit": "e0f4010bb1ade7aae6bdfaabd7bdbe3f8624cff2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMDAxMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459720013", "bodyText": "You should memset buff to 0 before entering the outermost for loop. Otherwise, depending on the stack, the first time you call strlen(buff) you might not get 0.", "author": "dsouzai", "createdAt": "2020-07-23T20:50:09Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,44 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, const size_t BUFF_SIZE)\n+   {\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", buffSize);\n+      return;\n+      }\n+\n+   PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   TR_AOTHeader * hdrInCache = (TR_AOTHeader *)aotHeaderAddress;\n+   OMRProcessorDesc processorDescription = hdrInCache->processorDescription;\n+\n+   int rowLength = 0;\n+   for (size_t i = 0; i < OMRPORT_SYSINFO_FEATURES_SIZE; i++)\n+      {\n+      for (int j = 0; j < 32; j++) \n+         {\n+         if (processorDescription.features[i] & (1<<j))\n+            {\n+            if (rowLength >= 20)\n+               {\n+               strncat(buff, \"\\n\\t                                       \", BUFF_SIZE - strlen(buff) - 1);", "originalCommit": "e0f4010bb1ade7aae6bdfaabd7bdbe3f8624cff2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "60fb5a31926f81d591d6a5bc861db91f40205e4c", "url": "https://github.com/eclipse-openj9/openj9/commit/60fb5a31926f81d591d6a5bc861db91f40205e4c", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC is displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-23T21:22:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwNzcyNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459907724", "bodyText": "Is it possible to add some comments with the intent of this code?", "author": "mpirvu", "createdAt": "2020-07-24T08:03:38Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,45 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, const size_t BUFF_SIZE)\n+   {\n+   memset(buff, 0, BUFF_SIZE*sizeof(char));\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", BUFF_SIZE - strlen(buff) - 1);", "originalCommit": "60fb5a31926f81d591d6a5bc861db91f40205e4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwOTIyOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459909229", "bodyText": "Is it possible do change the first parameter to TR_AOTHeader *aotHeaderAddress to avoid this cast. You would need to predeclare struct TR_AOTHeader in the file where printAOTHeader is used.", "author": "mpirvu", "createdAt": "2020-07-24T08:07:04Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,45 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, const size_t BUFF_SIZE)\n+   {\n+   memset(buff, 0, BUFF_SIZE*sizeof(char));\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", BUFF_SIZE - strlen(buff) - 1);\n+      return;\n+      }\n+\n+   PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   TR_AOTHeader * hdrInCache = (TR_AOTHeader *)aotHeaderAddress;", "originalCommit": "60fb5a31926f81d591d6a5bc861db91f40205e4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5MzE3MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460093171", "bodyText": "Might not be possible since printAOTHeader is called from the VM.", "author": "dsouzai", "createdAt": "2020-07-24T14:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwOTIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyMTUxNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460221517", "bodyText": "I think it's possible, with forward declaration. Not sure that's cleaner than this though", "author": "harryyu1994", "createdAt": "2020-07-24T18:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwOTIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDc1NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460224755", "bodyText": "change added here: ddd80a3", "author": "harryyu1994", "createdAt": "2020-07-24T18:38:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwOTIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyMTU0MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459921540", "bodyText": "What is the point of adding these long lines full of blanks?", "author": "mpirvu", "createdAt": "2020-07-24T08:33:29Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,45 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, const size_t BUFF_SIZE)\n+   {\n+   memset(buff, 0, BUFF_SIZE*sizeof(char));\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", BUFF_SIZE - strlen(buff) - 1);\n+      return;\n+      }\n+\n+   PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   TR_AOTHeader * hdrInCache = (TR_AOTHeader *)aotHeaderAddress;\n+   OMRProcessorDesc processorDescription = hdrInCache->processorDescription;\n+\n+   int rowLength = 0;\n+   for (size_t i = 0; i < OMRPORT_SYSINFO_FEATURES_SIZE; i++)\n+      {\n+      for (int j = 0; j < 32; j++) \n+         {\n+         if (processorDescription.features[i] & (1<<j))\n+            {\n+            if (rowLength >= 20)\n+               {\n+               strncat(buff, \"\\n\\t                                       \", BUFF_SIZE - strlen(buff) - 1);", "originalCommit": "60fb5a31926f81d591d6a5bc861db91f40205e4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5MzQwNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460093407", "bodyText": "I believe for formatting (eg #9993 (comment))", "author": "dsouzai", "createdAt": "2020-07-24T14:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyMTU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjk5MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r459926991", "bodyText": "Can we use something symbolic for this 32 value? sizeof(*processorDescription.features)", "author": "mpirvu", "createdAt": "2020-07-24T08:45:43Z", "path": "runtime/compiler/runtime/RelocationRuntime.cpp", "diffHunk": "@@ -1404,3 +1404,45 @@ TR_JITServerRelocationRuntime::copyDataToCodeCache(const void *startAddress, siz\n    return coldCodeStart;\n    }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+void\n+printAOTHeader(const void* aotHeaderAddress, char * buff, const size_t BUFF_SIZE)\n+   {\n+   memset(buff, 0, BUFF_SIZE*sizeof(char));\n+   if (!aotHeaderAddress)\n+      {\n+      strncat(buff, \"null\", BUFF_SIZE - strlen(buff) - 1);\n+      return;\n+      }\n+\n+   PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   TR_AOTHeader * hdrInCache = (TR_AOTHeader *)aotHeaderAddress;\n+   OMRProcessorDesc processorDescription = hdrInCache->processorDescription;\n+\n+   int rowLength = 0;\n+   for (size_t i = 0; i < OMRPORT_SYSINFO_FEATURES_SIZE; i++)\n+      {\n+      for (int j = 0; j < 32; j++) ", "originalCommit": "60fb5a31926f81d591d6a5bc861db91f40205e4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNjYxMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r460226612", "bodyText": "added CHAR_BIT*size(processorDescription.features[i])", "author": "harryyu1994", "createdAt": "2020-07-24T18:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyNjk5MQ=="}], "type": "inlineReview"}, {"oid": "d576ed5fbd637019aeb8a9ed694e98c4987f86d6", "url": "https://github.com/eclipse-openj9/openj9/commit/d576ed5fbd637019aeb8a9ed694e98c4987f86d6", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC is displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-24T18:29:08Z", "type": "forcePushed"}, {"oid": "9ac9311a610dd68215c661f987788bc5311fbccc", "url": "https://github.com/eclipse-openj9/openj9/commit/9ac9311a610dd68215c661f987788bc5311fbccc", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T20:12:20Z", "type": "forcePushed"}, {"oid": "81ca8653f323f3bfce3d3ea7faa5bdb0d0ad8c79", "url": "https://github.com/eclipse-openj9/openj9/commit/81ca8653f323f3bfce3d3ea7faa5bdb0d0ad8c79", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T20:27:17Z", "type": "forcePushed"}, {"oid": "e58a0804ea35201d63638369335190835465f683", "url": "https://github.com/eclipse-openj9/openj9/commit/e58a0804ea35201d63638369335190835465f683", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T20:36:20Z", "type": "forcePushed"}, {"oid": "44424a10023a056657f6c417a76afcdbbd75f6c6", "url": "https://github.com/eclipse-openj9/openj9/commit/44424a10023a056657f6c417a76afcdbbd75f6c6", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T21:15:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461181075", "bodyText": "@pshipton Hi Peter, I have a question about tracepoints. When I tried ./java -Xtrace:print=j9jit.88 -XX:+PortableSharedCache -XX:-PortableSharedCache -version\nthe message doesn't get printed. Is there anything missing in my change?\n(I grepped for Trc_JIT_portableSharedCache_enabled_or_disabled to find the tracepoint number after I compiled the code. And it appears to be 88)\nI tried the same with ./java -Xtrace:print=j9jit.0 which corresponds to Trc_JIT_VMInitStages_Event1(curThread); and it's working fine.", "author": "harryyu1994", "createdAt": "2020-07-27T21:28:57Z", "path": "runtime/compiler/control/rossa.cpp", "diffHunk": "@@ -1971,6 +1974,10 @@ aboutToBootstrap(J9JavaVM * javaVM, J9JITConfig * jitConfig)\n       hwProfiler->turnBufferProcessingOffTemporarily();\n       }\n \n+   printf (\"portable shared cache called\\n\");\n+   Trc_JIT_portableSharedCache_enabled_or_disabled(curThread, javaVM->sharedCacheAPI->sharedCachePortable);", "originalCommit": "44424a10023a056657f6c417a76afcdbbd75f6c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4NjU4MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461186580", "bodyText": "Oh i might know what's going on:\nI probably need to put it after UT_MODULE_LOADED(J9_UTINTERFACE_FROM_VM(javaVM));", "author": "harryyu1994", "createdAt": "2020-07-27T21:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4Nzc3NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461187774", "bodyText": "I don't see anything obviously wrong. Is the tracepoint in the lib/J9TraceFormat.dat file?", "author": "pshipton", "createdAt": "2020-07-27T21:43:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4OTIwNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461189205", "bodyText": "I assume Trc_JIT_VMInitStages_Event1 gets printed before \"portable shared cache called\"?", "author": "pshipton", "createdAt": "2020-07-27T21:46:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MDQ3MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461190470", "bodyText": "I think you're looking at my modified version. I previously had Trc_JIT_portableSharedCache_enabled_or_disabled just above UT_MODULE_LOADED(J9_UTINTERFACE_FROM_VM(javaVM));. I just moved it down to below Trc_JIT_VMInitStages_Event1. Maybe this time it will work.", "author": "harryyu1994", "createdAt": "2020-07-27T21:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MDUzNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461190537", "bodyText": "Ah, I see. I think the tracepoint is too early, put it after the call to UT_MODULE_LOADED().", "author": "pshipton", "createdAt": "2020-07-27T21:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTc3Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461191772", "bodyText": "Note UT_MODULE_LOADED() registers the jit with the tracepoint engine.", "author": "pshipton", "createdAt": "2020-07-27T21:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4MTA3NQ=="}], "type": "inlineReview"}, {"oid": "42365b5f285be3a84bd50162dfefd5e031d1f4cf", "url": "https://github.com/eclipse-openj9/openj9/commit/42365b5f285be3a84bd50162dfefd5e031d1f4cf", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T21:42:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMTc2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461201767", "bodyText": "test this with make _cmdLineTest_J9test_extended", "author": "harryyu1994", "createdAt": "2020-07-27T22:16:09Z", "path": "test/functional/cmdLineTests/cmdLineTest_J9tests/j9tests.xml", "diffHunk": "@@ -91,5 +91,17 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n         <output type=\"failure\" caseSensitive=\"yes\" regex=\"no\">dump written to</output>\n         <output type=\"success\" caseSensitive=\"yes\" regex=\"no\">VM is shutting down. Reason: java/lang/OutOfMemoryError</output>\n     </test>\n+\n+    <!-- -XX:+PortableSharedCache -XX:-PortableSharedCache -->", "originalCommit": "42365b5f285be3a84bd50162dfefd5e031d1f4cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwMjQxMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461202412", "bodyText": "test this with make _testSCCMLTests1_openj9", "author": "harryyu1994", "createdAt": "2020-07-27T22:17:52Z", "path": "test/functional/cmdLineTests/shareClassTests/SCCMLTests/ShareClassesCMLTests-1.xml", "diffHunk": "@@ -1406,6 +1406,12 @@\n \t\t<output type=\"failure\" caseSensitive=\"yes\" regex=\"no\">Processing dump event</output>\n \t</test>\n \n+\t<test id=\"Test 66: Processor Features PrintStats Test : Ensure -Xshareclasses:printStats cache contains processor feature info\" timeout=\"600\" runPath=\".\">", "originalCommit": "065e4526a1d18ccf165c57e2ca3ed3122fc87226", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c3894487e65e70fc0be2e00ce2b095685d141dad", "url": "https://github.com/eclipse-openj9/openj9/commit/c3894487e65e70fc0be2e00ce2b095685d141dad", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:24:27Z", "type": "forcePushed"}, {"oid": "a100800d32e99591c8483207c28f37bae3f0d364", "url": "https://github.com/eclipse-openj9/openj9/commit/a100800d32e99591c8483207c28f37bae3f0d364", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:25:50Z", "type": "forcePushed"}, {"oid": "b3b05d1fa4ce947b3846bb2a2077addca234c96b", "url": "https://github.com/eclipse-openj9/openj9/commit/b3b05d1fa4ce947b3846bb2a2077addca234c96b", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:33:04Z", "type": "forcePushed"}, {"oid": "4321cf3b59b8039b37753a91358e550b0709f715", "url": "https://github.com/eclipse-openj9/openj9/commit/4321cf3b59b8039b37753a91358e550b0709f715", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:35:17Z", "type": "forcePushed"}, {"oid": "e953982941bf97a3feb07cb6385b796fc40ac3e7", "url": "https://github.com/eclipse-openj9/openj9/commit/e953982941bf97a3feb07cb6385b796fc40ac3e7", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:37:40Z", "type": "forcePushed"}, {"oid": "85c3637fae17f6b99b9be1ef53618955ac428b93", "url": "https://github.com/eclipse-openj9/openj9/commit/85c3637fae17f6b99b9be1ef53618955ac428b93", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:41:05Z", "type": "forcePushed"}, {"oid": "143e0f796b5383d05d241af48a9cdfef044aa861", "url": "https://github.com/eclipse-openj9/openj9/commit/143e0f796b5383d05d241af48a9cdfef044aa861", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-27T22:48:43Z", "type": "forcePushed"}, {"oid": "dbe1904b147b6feceda6d8d5436b673b158b5cfe", "url": "https://github.com/eclipse-openj9/openj9/commit/dbe1904b147b6feceda6d8d5436b673b158b5cfe", "message": "stuff", "committedDate": "2020-07-28T15:47:32Z", "type": "forcePushed"}, {"oid": "ce7b0139921d822a46fe8c1b844c82ef30504f00", "url": "https://github.com/eclipse-openj9/openj9/commit/ce7b0139921d822a46fe8c1b844c82ef30504f00", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T15:49:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5OTY5MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461699691", "bodyText": "These tests are only going to work on x86 platforms, they need to be restricted to these platforms. There is a way to do this, look for an example in the ShareClassesCMLTests-*.xml files", "author": "pshipton", "createdAt": "2020-07-28T16:07:16Z", "path": "test/functional/cmdLineTests/shareClassTests/SCCMLTests/ShareClassesCMLTests-1.xml", "diffHunk": "@@ -1406,6 +1406,12 @@\n \t\t<output type=\"failure\" caseSensitive=\"yes\" regex=\"no\">Processing dump event</output>\n \t</test>\n \n+\t<test id=\"Test 66: Processor Features PrintStats Test : Ensure -Xshareclasses:printStats cache contains processor feature info\" timeout=\"600\" runPath=\".\">\n+\t\t<command>$JAVA_EXE$ $currentMode$,printStats -version</command>\n+\t\t<output type=\"failure\" caseSensitive=\"yes\" regex=\"yes\" javaUtilPattern=\"yes\" showMatch=\"yes\">Processor Features[\\s]*= null</output>\n+\t\t<output type=\"success\" caseSensitive=\"yes\" regex=\"yes\" javaUtilPattern=\"yes\" showMatch=\"yes\">Processor Features[\\s]*= .*</output>", "originalCommit": "ce7b0139921d822a46fe8c1b844c82ef30504f00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4MDEzMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461880131", "bodyText": "@pshipton Ready for review.", "author": "harryyu1994", "createdAt": "2020-07-28T21:07:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5OTY5MQ=="}], "type": "inlineReview"}, {"oid": "d5d5391c6b27e4768f94a524fea826e292650b5d", "url": "https://github.com/eclipse-openj9/openj9/commit/d5d5391c6b27e4768f94a524fea826e292650b5d", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T16:58:58Z", "type": "forcePushed"}, {"oid": "926124170cffdbd3200414e6ac743b63214bb77b", "url": "https://github.com/eclipse-openj9/openj9/commit/926124170cffdbd3200414e6ac743b63214bb77b", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T17:05:02Z", "type": "forcePushed"}, {"oid": "035366c23710bd55a5440fa5f762a5754dad3275", "url": "https://github.com/eclipse-openj9/openj9/commit/035366c23710bd55a5440fa5f762a5754dad3275", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T17:19:52Z", "type": "forcePushed"}, {"oid": "48667ff3b05fd8f6d588ac6bd313c9c904c4ac30", "url": "https://github.com/eclipse-openj9/openj9/commit/48667ff3b05fd8f6d588ac6bd313c9c904c4ac30", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T17:47:21Z", "type": "forcePushed"}, {"oid": "5c3888e79ab75bd696239d8b0f52ab651f2cae03", "url": "https://github.com/eclipse-openj9/openj9/commit/5c3888e79ab75bd696239d8b0f52ab651f2cae03", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T17:54:49Z", "type": "forcePushed"}, {"oid": "abedabe94c57de11eeec99cf8a3739b2254739a6", "url": "https://github.com/eclipse-openj9/openj9/commit/abedabe94c57de11eeec99cf8a3739b2254739a6", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T18:04:57Z", "type": "forcePushed"}, {"oid": "ed33b2d4c3f622d05ac88d33c92367d966c3b2f2", "url": "https://github.com/eclipse-openj9/openj9/commit/ed33b2d4c3f622d05ac88d33c92367d966c3b2f2", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T18:27:41Z", "type": "forcePushed"}, {"oid": "ccdb359365fc37f910a013ed61a24a9abeb67f3d", "url": "https://github.com/eclipse-openj9/openj9/commit/ccdb359365fc37f910a013ed61a24a9abeb67f3d", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T18:34:57Z", "type": "forcePushed"}, {"oid": "ba429eed3d46ef40ddccae120a31d65ca6c97ecf", "url": "https://github.com/eclipse-openj9/openj9/commit/ba429eed3d46ef40ddccae120a31d65ca6c97ecf", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T19:52:53Z", "type": "forcePushed"}, {"oid": "d97d5c7d5631923bf81a443112d734c856b1d5bf", "url": "https://github.com/eclipse-openj9/openj9/commit/d97d5c7d5631923bf81a443112d734c856b1d5bf", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T20:00:32Z", "type": "forcePushed"}, {"oid": "b868473f52edf40ff1e8c8ee0a26bf993a7dbfd8", "url": "https://github.com/eclipse-openj9/openj9/commit/b868473f52edf40ff1e8c8ee0a26bf993a7dbfd8", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T20:07:56Z", "type": "forcePushed"}, {"oid": "bb27d6787ae916bf1bc7961ec2a1c69dad951533", "url": "https://github.com/eclipse-openj9/openj9/commit/bb27d6787ae916bf1bc7961ec2a1c69dad951533", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T20:17:40Z", "type": "forcePushed"}, {"oid": "44a73a0fd72700cd37584c5734ff5085959264c6", "url": "https://github.com/eclipse-openj9/openj9/commit/44a73a0fd72700cd37584c5734ff5085959264c6", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T20:30:58Z", "type": "forcePushed"}, {"oid": "1ddfbbce3d26ba21e0eed99a6ceea09f0eac6642", "url": "https://github.com/eclipse-openj9/openj9/commit/1ddfbbce3d26ba21e0eed99a6ceea09f0eac6642", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T20:36:25Z", "type": "forcePushed"}, {"oid": "92a410cdee94b65fb8937cd00af11326e5cca244", "url": "https://github.com/eclipse-openj9/openj9/commit/92a410cdee94b65fb8937cd00af11326e5cca244", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T20:56:04Z", "type": "forcePushed"}, {"oid": "74439ddf5aec6db2c154be5e1c70ff1019108b64", "url": "https://github.com/eclipse-openj9/openj9/commit/74439ddf5aec6db2c154be5e1c70ff1019108b64", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-28T21:05:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5NzEzMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461897130", "bodyText": "Pls add a newline at the end of the last line.", "author": "pshipton", "createdAt": "2020-07-28T21:41:39Z", "path": "test/functional/cmdLineTests/cmdLineTest_J9tests/j9tests.xml", "diffHunk": "@@ -91,5 +91,18 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n         <output type=\"failure\" caseSensitive=\"yes\" regex=\"no\">dump written to</output>\n         <output type=\"success\" caseSensitive=\"yes\" regex=\"no\">VM is shutting down. Reason: java/lang/OutOfMemoryError</output>\n     </test>\n-</suite>\n \n+    <!-- -XX:+PortableSharedCache -XX:-PortableSharedCache -->\n+    <test id=\"Verify -XX:+PortableSharedCache -XX:-PortableSharedCache behaves as expected with the portable shared cache feature disabled\">\n+        <command>$EXE$ -Xshareclasses -Xtrace:print=j9jit.88 -XX:+PortableSharedCache -XX:-PortableSharedCache -version</command>\n+        <output type=\"success\" caseSensitive=\"yes\" regex=\"no\">PortableSharedCache is 0</output>\n+        <output type=\"failure\" caseSensitive=\"yes\" regex=\"no\">PortableSharedCache is 1</output>\n+    </test>\n+\n+    <!-- -XX:+PortableSharedCache -XX:-PortableSharedCache -->\n+    <test id=\"Verify -XX:-PortableSharedCache -XX:+PortableSharedCache behaves as expected with the portable shared cache feature enabled\">\n+        <command>$EXE$ -Xshareclasses -Xtrace:print=j9jit.88 -XX:-PortableSharedCache -XX:+PortableSharedCache -version</command>\n+        <output type=\"success\" caseSensitive=\"yes\" regex=\"no\">PortableSharedCache is 1</output>\n+        <output type=\"failure\" caseSensitive=\"yes\" regex=\"no\">PortableSharedCache is 0</output>\n+    </test>\n+</suite>", "originalCommit": "74439ddf5aec6db2c154be5e1c70ff1019108b64", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5NzI3OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9993#discussion_r461897279", "bodyText": "Pls add a newline at the end of the last line.", "author": "pshipton", "createdAt": "2020-07-28T21:41:49Z", "path": "test/functional/cmdLineTests/cmdLineTest_J9tests/j9tests_exclude.xml", "diffHunk": "@@ -68,4 +68,7 @@\n <include id=\"-Xaggressive\" platform=\"linux.*\" shouldFix=\"false\"><reason>Only available on Linux platforms</reason></include>\n <include id=\"defaultBehaviourOfCFS\" platform=\"linux.*\" shouldFix=\"false\"><reason>Only available on Linux platforms</reason></include>\n \n+<include id=\"Verify -XX:+PortableSharedCache -XX:-PortableSharedCache behaves as expected with the portable shared cache feature disabled\" platform=\".*x86.*\" shouldFix=\"false\"><reason>Only available on x86 platforms</reason></include>\n+<include id=\"Verify -XX:-PortableSharedCache -XX:+PortableSharedCache behaves as expected with the portable shared cache feature enabled\" platform=\".*x86.*\" shouldFix=\"false\"><reason>Only available on x86 platforms</reason></include>\n+\n </suite>", "originalCommit": "74439ddf5aec6db2c154be5e1c70ff1019108b64", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a053c7c1a034f13adc70c3cc545ddba947fe530c", "url": "https://github.com/eclipse-openj9/openj9/commit/a053c7c1a034f13adc70c3cc545ddba947fe530c", "message": "container", "committedDate": "2020-07-29T01:13:17Z", "type": "forcePushed"}, {"oid": "6518e8a686c2829d63df6c49857ae7c1434407f6", "url": "https://github.com/eclipse-openj9/openj9/commit/6518e8a686c2829d63df6c49857ae7c1434407f6", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T01:29:50Z", "type": "forcePushed"}, {"oid": "9b4d8ca5e4d9e153f907df3387b43ca86e938f22", "url": "https://github.com/eclipse-openj9/openj9/commit/9b4d8ca5e4d9e153f907df3387b43ca86e938f22", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T01:31:38Z", "type": "forcePushed"}, {"oid": "daf6be84b718a8bc4d7bbecc54b82f727f73123a", "url": "https://github.com/eclipse-openj9/openj9/commit/daf6be84b718a8bc4d7bbecc54b82f727f73123a", "message": "Add test for -XX:[+|-]PortableSharedCache\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T02:07:18Z", "type": "forcePushed"}, {"oid": "c2371b065f8bf3b2ca46d8de376a0e500f1b2ba5", "url": "https://github.com/eclipse-openj9/openj9/commit/c2371b065f8bf3b2ca46d8de376a0e500f1b2ba5", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T02:58:59Z", "type": "forcePushed"}, {"oid": "16f87fb76fcd8746588e367f164db9a252d99cb8", "url": "https://github.com/eclipse-openj9/openj9/commit/16f87fb76fcd8746588e367f164db9a252d99cb8", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T03:09:51Z", "type": "forcePushed"}, {"oid": "b151cb396a2d3601846f80b561110480a3fee847", "url": "https://github.com/eclipse-openj9/openj9/commit/b151cb396a2d3601846f80b561110480a3fee847", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T06:29:46Z", "type": "forcePushed"}, {"oid": "a0decb8abbc8b0aeb87b4bc6118d359495f5093b", "url": "https://github.com/eclipse-openj9/openj9/commit/a0decb8abbc8b0aeb87b4bc6118d359495f5093b", "message": "Add test for processor features in -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T06:39:26Z", "type": "forcePushed"}, {"oid": "2645a3f44ea3f8a0c1775c8843658650b2af247e", "url": "https://github.com/eclipse-openj9/openj9/commit/2645a3f44ea3f8a0c1775c8843658650b2af247e", "message": "Enable portable AOT on x86\n\n- Added \"-XX:+PortableSharedCache\" and \"-XX:-PortableSharedCache\"\n- Added container detection. By default we enable portableAOT in containers.\n- \"-XX:-PortableSharedCache\" will disable portableAOT in containers as well.\n- The set of cpu features employed by the SCC is displayed with \"-Xshareclasses:printStats\"\n\nIssue: #7966\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T18:56:39Z", "type": "commit"}, {"oid": "fcf86103e19810ca00b78673e14718629d3fde73", "url": "https://github.com/eclipse-openj9/openj9/commit/fcf86103e19810ca00b78673e14718629d3fde73", "message": "Add test for -XX:[+|-]PortableSharedCache and -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T18:57:23Z", "type": "commit"}, {"oid": "fcf86103e19810ca00b78673e14718629d3fde73", "url": "https://github.com/eclipse-openj9/openj9/commit/fcf86103e19810ca00b78673e14718629d3fde73", "message": "Add test for -XX:[+|-]PortableSharedCache and -Xshareclasses:printStats\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>", "committedDate": "2020-07-29T18:57:23Z", "type": "forcePushed"}]}