{"pr_number": 8626, "pr_title": "Win32 Compile Fix (TGC Parallel)", "pr_createdAt": "2020-02-20T21:26:53Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8626", "timeline": [{"oid": "4eb5d29902043a48244323c333e064c26eeb01ca", "url": "https://github.com/eclipse-openj9/openj9/commit/4eb5d29902043a48244323c333e064c26eeb01ca", "message": "Windows Compile Fix (TGC Parallel)\n\nFix for compile error on Windows IA32:\n```\nTgcParallel.cpp(308) : error C2220: warning treated as error - no\n'object' file generated\nTgcParallel.cpp(308) : warning C4244: '+=' : conversion from 'uint64_t'\nto 'uintptr_t', possible loss of data\ngmake[3]: *** [TgcParallel.obj] Error 2\n```\n\n- Cast `historyRecord->updates` to `(uintptr_t)`\n\nSigned-off-by: Salman Rana <salman.rana@ibm.com>", "committedDate": "2020-02-20T21:25:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDkwMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8626#discussion_r382284902", "bodyText": "Why the mix of different size types (uintptr_t and uint64_t)? Why not just uint64_t throughout?", "author": "keithc-ca", "createdAt": "2020-02-20T22:07:09Z", "path": "runtime/gc_trace/TgcParallel.cpp", "diffHunk": "@@ -305,7 +305,7 @@ tgcHookLocalGcEnd(J9HookInterface** hook, uintptr_t eventNum, void* eventData, v\n \tuint64_t prevReadObjectBarrierUpdate = 0;\n #endif /* OMR_GC_CONCURRENT_SCAVENGER */\n \twhile (historyRecord < endRecord) {\n-\t\ttotalRecordUpdates += historyRecord->updates;\n+\t\ttotalRecordUpdates += (uintptr_t) historyRecord->updates;", "originalCommit": "4eb5d29902043a48244323c333e064c26eeb01ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4ODQ1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8626#discussion_r382288459", "bodyText": "These counts should all be uintptr_t. They'll need to be all aligned to to use the same type, see eclipse/omr#4825 (comment).\nRequires changes on the OMR side, will need to get PR in before making the counts consistent", "author": "RSalman", "createdAt": "2020-02-20T22:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDkwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5MDk3OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8626#discussion_r382290979", "bodyText": "If everything should be uintptr_t why is uint64_t used in this function (e.g. totalRecordUpdates)?", "author": "keithc-ca", "createdAt": "2020-02-20T22:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDkwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwMTQ2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8626#discussion_r382301469", "bodyText": "There's 3 different variables here:\n\nuint64_t historyRecord->updates\nuintptr_t extensions->scavengerStats._copyScanUpdates\nuintptr_t totalRecordUpdates\n\nThere's no way to get around casting without any changes to OMR side. If we forgo casting\nhistoryRecord->updates here to uintptr_t, we'd have to change totalRecordUpdates to uint64_t to match historyRecord->updates.... however then we'd need to cast extensions->scavengerStats._copyScanUpdates  to uint64_t a few lines down when we subtract totalRecordUpdates and extensions->scavengerStats._copyScanUpdates:\nhttps://github.com/eclipse/openj9/blob/8782135e7f969dacae908af4c7c0d68511a94174/runtime/gc_trace/TgcParallel.cpp#L340", "author": "RSalman", "createdAt": "2020-02-20T22:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDkwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxMDQwNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8626#discussion_r382310405", "bodyText": "I hope we get this sorted out soon; casts are just a way to hide real problems.", "author": "keithc-ca", "createdAt": "2020-02-20T23:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDkwMg=="}], "type": "inlineReview"}]}