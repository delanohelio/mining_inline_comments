{"pr_number": 8617, "pr_title": "CPU cache line size for Linux aarch64", "pr_createdAt": "2020-02-20T05:52:17Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8617", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNzYxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r381927616", "bodyText": "Is this meant to apply to all LINUXes or just to linux on aarch64?  Other architectures look up the _DCACHE data in other ways", "author": "DanHeidinga", "createdAt": "2020-02-20T10:58:31Z", "path": "runtime/port/unix/j9sysinfo.c", "diffHunk": "@@ -1668,6 +1668,17 @@ j9sysinfo_get_cache_info(struct J9PortLibrary *portLibrary, const J9CacheInfoQue\n \t\t\tomrcpu_get_cache_line_size(&result);\n #endif\n \t\t}\n+#elif defined(LINUX) && defined(_SC_LEVEL1_DCACHE_LINESIZE)", "originalCommit": "cdb8f937a8f37b78e4f869ae1def70ee29ab327f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NDQwMw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r381984403", "bodyText": "I wrote it for aarch64 Linux, but I thought other architectures, such as RISC-V, could use the same code for the line size of L1 data cache.\nI was not sure if sysconf(_SC_LEVEL1_DCACHE_LINESIZE) was available or not in other UNIXes, and I used defined(LINUX).", "author": "knn-k", "createdAt": "2020-02-20T13:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNzYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3OTQzNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r391679436", "bodyText": "This needs to be limited to the aarch64 platform or the value will be calculated twice on linux platforms - once in the code above and then again here.", "author": "DanHeidinga", "createdAt": "2020-03-12T14:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNzYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r381929352", "bodyText": "Can you implementation used on x86 be extended to aarch64 (assuming that's the problem you're trying to solve)?\nIt currently looks up the DCACHE info here and caches it in a port global:\nhttps://github.com/eclipse/openj9/blob/cdb8f937a8f37b78e4f869ae1def70ee29ab327f/runtime/port/unix/j9sysinfo.c#L1335-L1340\nIn fact, there's already a mostly common place to look this data up:\nhttps://github.com/eclipse/openj9/blob/cdb8f937a8f37b78e4f869ae1def70ee29ab327f/runtime/port/unix/j9sysinfo.c#L1645-L1649", "author": "DanHeidinga", "createdAt": "2020-02-20T11:01:46Z", "path": "runtime/port/unix/j9sysinfo.c", "diffHunk": "@@ -1668,6 +1668,17 @@ j9sysinfo_get_cache_info(struct J9PortLibrary *portLibrary, const J9CacheInfoQue\n \t\t\tomrcpu_get_cache_line_size(&result);\n #endif\n \t\t}\n+#elif defined(LINUX) && defined(_SC_LEVEL1_DCACHE_LINESIZE)\n+\tif (query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE\n+\t    && query->cacheType == J9PORT_CACHEINFO_DCACHE\n+\t    && query->level == 1) {", "originalCommit": "cdb8f937a8f37b78e4f869ae1def70ee29ab327f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NTIyOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r381985228", "bodyText": "I tried sysconf(_SC_LEVEL1_DCACHE_LINESIZE) on x86_64 and aarch64, and both seemed to work as exptected.", "author": "knn-k", "createdAt": "2020-02-20T13:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM1NDIyNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r382354227", "bodyText": "I guess I misunderstood your comment last night.\nThe implementation for x86 reads /sys/devices/system/cpu/cpu%d/cache/.\nhttps://github.com/eclipse/openj9/blob/42ed0b81d8489695c2512c58aebdfad413481059/runtime/port/unix/j9sysinfo.c#L1305\nOn the other hand, the cache directory is unavailable on Ubuntu 18.04 for aarch64 as shown below, and I cannot simply use the x86 implementation:\n$ ls -l /sys/devices/system/cpu/cpu0/\ntotal 0\n-rw-r--r-- 1 root root 4096 Feb 21 01:20 cpu_capacity\nlrwxrwxrwx 1 root root    0 Mar 27  2019 cpufreq -> ../cpufreq/policy0\n-r-------- 1 root root 4096 Feb 21 01:20 crash_notes\n-r-------- 1 root root 4096 Feb 21 01:20 crash_notes_size\ndrwxr-xr-x 2 root root    0 Feb 21 01:20 hotplug\nlrwxrwxrwx 1 root root    0 Feb 21 01:20 of_node -> ../../../../firmware/devicetree/base/cpus/cpu@0\n-rw-r--r-- 1 root root 4096 Mar 27  2019 online\ndrwxr-xr-x 2 root root    0 Feb 21 01:20 power\ndrwxr-xr-x 3 root root    0 Feb 21 01:20 regs\nlrwxrwxrwx 1 root root    0 Jan  1  1970 subsystem -> ../../../../bus/cpu\ndrwxr-xr-x 2 root root    0 Mar 27  2019 topology\n-rw-r--r-- 1 root root 4096 Jan  1  1970 uevent\n\nIt seems the L1 data cache line size is the only information the VM wants from j9sysinfo_get_cache_info(), and sysconf(_SC_LEVEL1_DCACHE_LINESIZE) should be a most simple and portable way to get the information for that purpose.", "author": "knn-k", "createdAt": "2020-02-21T01:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI4MTEyNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r386281127", "bodyText": "#8711 stops pltest to call j9sysinfo_test_get_levels_and_types() on aarch64.", "author": "knn-k", "createdAt": "2020-03-02T09:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0NzM5OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r386747399", "bodyText": "@DanHeidinga What do you want me to do with this?  Should I limit my change to aarch64 only?", "author": "knn-k", "createdAt": "2020-03-03T01:17:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2MTA3NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r391361074", "bodyText": "@DanHeidinga It is more than a week since I posted the comment above.  What should I do with this PR?", "author": "knn-k", "createdAt": "2020-03-12T01:46:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MjI5Mg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r391682292", "bodyText": "Sorry @knn-k, just getting back to this after finishing the JDK14 reviews.\nFor this PR, please limit this to the aarch64 platform.  As a follow on task, it might be worth looking at modifying the x86 implementation to use sysconf for the dcache as well but I don't want to hold up the arm work for that.", "author": "DanHeidinga", "createdAt": "2020-03-12T15:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyOTM1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MDU0OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r391680548", "bodyText": "This should write to a different local and only modify result on success as that will remove the need for the other else block.  Note, result is initialized to J9PORT_ERROR_SYSINFO_NOT_SUPPORTED at the start of the function", "author": "DanHeidinga", "createdAt": "2020-03-12T14:58:46Z", "path": "runtime/port/unix/j9sysinfo.c", "diffHunk": "@@ -1668,6 +1668,17 @@ j9sysinfo_get_cache_info(struct J9PortLibrary *portLibrary, const J9CacheInfoQue\n \t\t\tomrcpu_get_cache_line_size(&result);\n #endif\n \t\t}\n+#elif defined(LINUX) && defined(_SC_LEVEL1_DCACHE_LINESIZE)\n+\tif (query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE\n+\t    && query->cacheType == J9PORT_CACHEINFO_DCACHE\n+\t    && query->level == 1) {\n+\t\tresult = (int32_t)sysconf(_SC_LEVEL1_DCACHE_LINESIZE);", "originalCommit": "cdb8f937a8f37b78e4f869ae1def70ee29ab327f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzODU5NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r392038595", "bodyText": "I changed the #elif condition to defined(LINUX) && defined(J9AARCH64), and rewrote the code as suggested above.", "author": "knn-k", "createdAt": "2020-03-13T05:38:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MDU0OA=="}], "type": "inlineReview"}, {"oid": "3ef6f0109b65a4772983e6d6e827eb9db7c71b85", "url": "https://github.com/eclipse-openj9/openj9/commit/3ef6f0109b65a4772983e6d6e827eb9db7c71b85", "message": "CPU cache line size for Linux AArch64\n\nThis commit adds code to j9sysinfo_get_cache_info() so that Linux\nAArch64 systems can answer the L1 data cache line size.\n\nThe information is used by protectedInitializeJavaVM() in\nruntime/vm/jvminit.c.\n\nSigned-off-by: KONNO Kazuhiro <konno@jp.ibm.com>", "committedDate": "2020-03-13T05:33:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxNzEzMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r392217131", "bodyText": "Formatting nitpick - in vm code we tend to bracket conditionals so no one has to try to figure out order of operations in their heads.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif (query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE\n          \n          \n            \n            \t    && query->cacheType == J9PORT_CACHEINFO_DCACHE\n          \n          \n            \n            \t    && query->level == 1) {\n          \n          \n            \n            \tif ((query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE)\n          \n          \n            \n            \t&& (query->cacheType == J9PORT_CACHEINFO_DCACHE)\n          \n          \n            \n            \t&& (query->level == 1)\n          \n          \n            \n            \t) {", "author": "DanHeidinga", "createdAt": "2020-03-13T13:11:00Z", "path": "runtime/port/unix/j9sysinfo.c", "diffHunk": "@@ -1668,6 +1668,16 @@ j9sysinfo_get_cache_info(struct J9PortLibrary *portLibrary, const J9CacheInfoQue\n \t\t\tomrcpu_get_cache_line_size(&result);\n #endif\n \t\t}\n+#elif defined(LINUX) && defined(J9AARCH64)\n+\tif (query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE\n+\t    && query->cacheType == J9PORT_CACHEINFO_DCACHE\n+\t    && query->level == 1) {", "originalCommit": "3ef6f0109b65a4772983e6d6e827eb9db7c71b85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyNjE1Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r392226156", "bodyText": "Updated the code as suggested.", "author": "knn-k", "createdAt": "2020-03-13T13:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIxNzEzMQ=="}], "type": "inlineReview"}, {"oid": "a637d46787a17a47b2425f2609cb8a77573d6050", "url": "https://github.com/eclipse-openj9/openj9/commit/a637d46787a17a47b2425f2609cb8a77573d6050", "message": "CPU cache line size for Linux AArch64\n\nThis commit adds code to j9sysinfo_get_cache_info() so that Linux\nAArch64 systems can answer the L1 data cache line size.\n\nThe information is used by protectedInitializeJavaVM() in\nruntime/vm/jvminit.c.\n\nSigned-off-by: KONNO Kazuhiro <konno@jp.ibm.com>", "committedDate": "2020-03-13T13:22:36Z", "type": "commit"}, {"oid": "a637d46787a17a47b2425f2609cb8a77573d6050", "url": "https://github.com/eclipse-openj9/openj9/commit/a637d46787a17a47b2425f2609cb8a77573d6050", "message": "CPU cache line size for Linux AArch64\n\nThis commit adds code to j9sysinfo_get_cache_info() so that Linux\nAArch64 systems can answer the L1 data cache line size.\n\nThe information is used by protectedInitializeJavaVM() in\nruntime/vm/jvminit.c.\n\nSigned-off-by: KONNO Kazuhiro <konno@jp.ibm.com>", "committedDate": "2020-03-13T13:22:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyODg0Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r392228847", "bodyText": "Sorry, this is using spaces to indent the subsequent lines.  The VM uses tabs and puts the ) { on a new line.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif ((query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE)\n          \n          \n            \n            \t    && (query->cacheType == J9PORT_CACHEINFO_DCACHE)\n          \n          \n            \n            \t    && (query->level == 1)) {\n          \n          \n            \n            \tif ((query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE)\n          \n          \n            \n            \t&& (query->cacheType == J9PORT_CACHEINFO_DCACHE)\n          \n          \n            \n            \t&& (query->level == 1)\n          \n          \n            \n            \t) {", "author": "DanHeidinga", "createdAt": "2020-03-13T13:32:31Z", "path": "runtime/port/unix/j9sysinfo.c", "diffHunk": "@@ -1668,6 +1668,16 @@ j9sysinfo_get_cache_info(struct J9PortLibrary *portLibrary, const J9CacheInfoQue\n \t\t\tomrcpu_get_cache_line_size(&result);\n #endif\n \t\t}\n+#elif defined(LINUX) && defined(J9AARCH64)\n+\tif ((query->cmd == J9PORT_CACHEINFO_QUERY_LINESIZE)\n+\t    && (query->cacheType == J9PORT_CACHEINFO_DCACHE)\n+\t    && (query->level == 1)) {", "originalCommit": "a637d46787a17a47b2425f2609cb8a77573d6050", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzMTMzOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8617#discussion_r392231339", "bodyText": "Applied the change via the \"Commit suggestion\" button.", "author": "knn-k", "createdAt": "2020-03-13T13:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyODg0Nw=="}], "type": "inlineReview"}, {"oid": "078394b778c0ce2a022bc596b74523a49a20c183", "url": "https://github.com/eclipse-openj9/openj9/commit/078394b778c0ce2a022bc596b74523a49a20c183", "message": "Update runtime/port/unix/j9sysinfo.c\n\nCo-Authored-By: Dan Heidinga <daniel_heidinga@ca.ibm.com>", "committedDate": "2020-03-13T13:34:48Z", "type": "commit"}]}