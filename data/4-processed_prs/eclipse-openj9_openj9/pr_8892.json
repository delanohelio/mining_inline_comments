{"pr_number": 8892, "pr_title": "Fix definingClass for StaticFieldVarHandle", "pr_createdAt": "2020-03-17T19:14:10Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/8892", "timeline": [{"oid": "ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "url": "https://github.com/eclipse-openj9/openj9/commit/ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "message": "Fix definingClass for StaticFieldVarHandle\n\nFor a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\n \nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\n\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-17T19:15:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r394574509", "bodyText": "It shouldn't be possible to get here with isStatic true and definingClass == null.  It would be better to assert that then let a partially initialized VH escape", "author": "DanHeidinga", "createdAt": "2020-03-18T19:00:44Z", "path": "runtime/jcl/common/java_lang_invoke_VarHandle.c", "diffHunk": "@@ -111,7 +112,11 @@ Java_java_lang_invoke_FieldVarHandle_lookupField(JNIEnv *env, jobject handle, jc\n \t\tgoto _cleanup;\n \t}\n \n-\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, J9_JNI_UNWRAP_REFERENCE(handle), ((J9ROMFieldShape*) romField)->modifiers);\n+\tvarHandle = J9_JNI_UNWRAP_REFERENCE(handle);\n+\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, varHandle, ((J9ROMFieldShape *)romField)->modifiers);\n+\tif (isStatic && (NULL != definingClass)) {", "originalCommit": "ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NDU1Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r394584553", "bodyText": "StaticFieldVarHandle and InstanceFieldVarHandle extend FieldVarHandle. For InstanceFieldVarHandle, isStatic will be false. definingClass should be the lookupClass (== instance class) in case of  InstanceFieldVarHandle. We already set definingClass to lookupClass in FieldVarHandle's constructor. For StaticFieldVarHandle, definingClassshould be updated to the owner of the static field.\nWe can add an assert for definingClass since I expect it to be always non-null.\nIn FieldVarHandle's constructor, we set definingClass to j9LookupClass. A more efficient check would be:\nif (isStatic && (j9LookupClass != definingClass)) {\n    Assert_JCL_notNull(definingClass);\n    ...\n\nI also plan to add a new test case to address the reported failure.", "author": "babsingh", "createdAt": "2020-03-18T19:20:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5MjgwMA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r394592800", "bodyText": "I was thinking:\nif (isStatic) {\n Assert_JCL_notNull(definingClass);\n}\n\nWhy add the other check?", "author": "DanHeidinga", "createdAt": "2020-03-18T19:35:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMDM4OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r394600389", "bodyText": "Why add the other check?\n\nBecause we already set FieldVarHandle.definingClass to lookupClass in FieldVarHandle's constructor before invoking the native FieldVarHandle_lookupField method. We can avoid setting definingClass the same value twice.\nhttps://github.com/eclipse/openj9/blob/6a8a0aef2e12405cc08654f15c62952d7c5f4fc6/jcl/src/java.base/share/classes/java/lang/invoke/FieldVarHandle.java#L53-L60", "author": "babsingh", "createdAt": "2020-03-18T19:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwOTIxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r394609216", "bodyText": "I hadn't realized we're hammering a final field in the native that had already been set.  I really don't like doing that.\nWe should probably remove the final modifier in this case.", "author": "DanHeidinga", "createdAt": "2020-03-18T20:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEwMjUzNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r395102534", "bodyText": "In the latest changes, definingClass is only updated once in the native method. Can we keep the final keyword?", "author": "babsingh", "createdAt": "2020-03-19T15:13:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExMTk3MQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r395111971", "bodyText": "Even though, it is initialized once in native code. Compiler expects it to be initialized in Java code. So, the final keyword would need to be removed.", "author": "babsingh", "createdAt": "2020-03-19T15:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ=="}], "type": "inlineReview"}, {"oid": "02929db3e6cd6c194a5def1cdc10991a275e669d", "url": "https://github.com/eclipse-openj9/openj9/commit/02929db3e6cd6c194a5def1cdc10991a275e669d", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-19T05:41:56Z", "type": "forcePushed"}, {"oid": "d1e24404af49fa1dce88a1cb06eaac0e12c44053", "url": "https://github.com/eclipse-openj9/openj9/commit/d1e24404af49fa1dce88a1cb06eaac0e12c44053", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-19T15:06:31Z", "type": "forcePushed"}, {"oid": "b1ec71852a71cb2a378db1df7e50474fc63a8040", "url": "https://github.com/eclipse-openj9/openj9/commit/b1ec71852a71cb2a378db1df7e50474fc63a8040", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-19T15:44:07Z", "type": "forcePushed"}, {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b", "url": "https://github.com/eclipse-openj9/openj9/commit/0b0246bc529600fbd3d3e768aa1de66568d3356b", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-19T17:05:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3MTI3Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397171276", "bodyText": "Comments shouldn't be about the past - \"no longer satisfies\" - but explaining why is great!\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/* definingClass cannot be a final field since it no longer satisfies the conditions of\n          \n          \n            \n            \t * the final keyword. It is modified twice, once in Java code and once in native code.\n          \n          \n            \n            \t */\n          \n          \n            \n            \t/* definingClass cannot be a final field since it is modified twice, once in \n          \n          \n            \n            \t * Java code and once in native code.\n          \n          \n            \n            \t */", "author": "DanHeidinga", "createdAt": "2020-03-24T13:56:39Z", "path": "jcl/src/java.base/share/classes/java/lang/invoke/FieldVarHandle.java", "diffHunk": "@@ -35,9 +35,13 @@\n \n abstract class FieldVarHandle extends VarHandle {\n \tfinal long vmslot;\n-\tfinal Class<?> definingClass;\n \tfinal String fieldName;\n \n+\t/* definingClass cannot be a final field since it no longer satisfies the conditions of\n+\t * the final keyword. It is modified twice, once in Java code and once in native code.\n+\t */", "originalCommit": "0b0246bc529600fbd3d3e768aa1de66568d3356b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3Mzg1OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397173858", "bodyText": "I would prefer this code unconditionally set the field for static handles.  This makes the code clearer and is safe for the future if the field is no longer set in java\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif (isStatic && (j9LookupClass != definingClass)) {\n          \n          \n            \n            \tif (isStatic) {", "author": "DanHeidinga", "createdAt": "2020-03-24T14:00:18Z", "path": "runtime/jcl/common/java_lang_invoke_VarHandle.c", "diffHunk": "@@ -111,7 +112,18 @@ Java_java_lang_invoke_FieldVarHandle_lookupField(JNIEnv *env, jobject handle, jc\n \t\tgoto _cleanup;\n \t}\n \n-\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, J9_JNI_UNWRAP_REFERENCE(handle), ((J9ROMFieldShape*) romField)->modifiers);\n+\tvarHandle = J9_JNI_UNWRAP_REFERENCE(handle);\n+\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, varHandle, ((J9ROMFieldShape *)romField)->modifiers);\n+\n+\t/* StaticFieldVarHandle and InstanceFieldVarHandle extend FieldVarHandle. For StaticFieldVarHandle, isStatic\n+\t * is true, and the definingClass field is set to the owner of the static field. For InstanceFieldVarHandle,\n+\t * isStatic is false, and the definingClass field is set to the lookupClass, which is also the instance class,\n+\t * in FieldVarHandle's constructor.\n+\t */\n+\tif (isStatic && (j9LookupClass != definingClass)) {", "originalCommit": "0b0246bc529600fbd3d3e768aa1de66568d3356b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE4MTc4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397181788", "bodyText": "Can this be broken into a series of tests?  It will be easier to focus debugging efforts in the future if we can clearly see which operation failed.", "author": "DanHeidinga", "createdAt": "2020-03-24T14:11:10Z", "path": "test/functional/Java9andUp/src/org/openj9/test/varhandle/StaticFieldVarHandleTests.java", "diffHunk": "@@ -2484,4 +2491,226 @@ public void testCommonCallSite() {\n \tprivate long commonVarHandleCallSite(VarHandle vh, long value) {\n \t\treturn (long)vh.get();\n \t}\n+\t\n+\t/**\n+\t * Perform all the operations available on a StaticFieldVarHandle referencing a {@link String} field of a\n+\t * parent class via the child class.\n+\t */\n+\t@Test\n+\tpublic void testReferenceInParentFromChild() {", "originalCommit": "0b0246bc529600fbd3d3e768aa1de66568d3356b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQzMTcyNQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397431725", "bodyText": "Divided into a series of tests.", "author": "babsingh", "createdAt": "2020-03-24T20:13:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE4MTc4OA=="}], "type": "inlineReview"}, {"oid": "513bd048f83533c7d9fc31345aec5b06d2fcf01e", "url": "https://github.com/eclipse-openj9/openj9/commit/513bd048f83533c7d9fc31345aec5b06d2fcf01e", "message": "Fix definingClass for StaticFieldVarHandle\n\nFor a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\n \nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\n\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-24T19:39:39Z", "type": "commit"}, {"oid": "cad273fac01fb2bc09150c5432edb7b98d150137", "url": "https://github.com/eclipse-openj9/openj9/commit/cad273fac01fb2bc09150c5432edb7b98d150137", "message": "Add a new test case in StaticFieldVarHandleTests\n\nThe new test case verifies if StaticFieldVarHandle functions correctly\nwhile accessing a static field of a parent class via a child class. It\nonly covers the reference value type. Existing test cases ensure that\nStaticFieldVarHandle will behave correctly for other value types in a\nsimilar scenario if the new test case for the reference value type\nsucceeds.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-24T19:39:39Z", "type": "commit"}, {"oid": "f577b925ca315ce3739a7ed507c1f7879a666afc", "url": "https://github.com/eclipse-openj9/openj9/commit/f577b925ca315ce3739a7ed507c1f7879a666afc", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-24T19:39:39Z", "type": "commit"}, {"oid": "f577b925ca315ce3739a7ed507c1f7879a666afc", "url": "https://github.com/eclipse-openj9/openj9/commit/f577b925ca315ce3739a7ed507c1f7879a666afc", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>", "committedDate": "2020-03-24T19:39:39Z", "type": "forcePushed"}]}