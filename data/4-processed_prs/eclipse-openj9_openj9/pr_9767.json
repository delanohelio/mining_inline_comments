{"pr_number": 9767, "pr_title": "Sampling allocation bytes precisely - step1", "pr_createdAt": "2020-06-02T14:07:23Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9767", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxMzUzNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9767#discussion_r433913534", "bodyText": "let's use passive (or past tense): Allocated or Used", "author": "amicic", "createdAt": "2020-06-02T14:18:34Z", "path": "runtime/gc_glue_java/EnvironmentDelegate.hpp", "diffHunk": "@@ -178,6 +178,28 @@ class MM_EnvironmentDelegate\n \t * @return TRUE if inline TLH allocates currently enabled for this thread; FALSE otherwise\n \t */\n \tbool isInlineTLHAllocateEnabled();\n+\n+\t/**\n+\t * Set TLH Sampling Top by hiding the real heap top address from\n+\t * JIT/Interpreter in realHeapTop and setting HeapTop = (HeapAlloc + size) if size < (HeapTop - HeapAlloc)\n+\t * so out of line allocate would happen at TLH Sampling Top.\n+\t * If size >= (HeapTop - HeapAlloc) resetTLHSamplingTop()\n+\t *\n+\t * @param size the number of bytes to next sampling point\n+\t */\n+\tvoid setTLHSamplingTop(uintptr_t size) {}\n+\n+\t/**\n+\t * Restore heapTop from realHeapTop if realHeapTop != NULL\n+\t */\n+\tvoid resetTLHSamplingTop() {}\n+\n+\t/**\n+\t * Retrieve allocation size inside TLH Cache.\n+\t * @return (heapAlloc - heapBase)\n+\t */\n+\tuintptr_t getAllocSizeInsideTLH() { return 0; }", "originalCommit": "c9f37288465939ddea72d09e68b63cf9ecf31680", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "248ee902c0b90da573df6bff9e1c6a3a5332d21b", "url": "https://github.com/eclipse-openj9/openj9/commit/248ee902c0b90da573df6bff9e1c6a3a5332d21b", "message": "Sampling allocation bytes precisely without compromising the\nperformance-step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>", "committedDate": "2020-06-02T15:01:36Z", "type": "forcePushed"}, {"oid": "7a930ae200c144b206fbf18e7b6c388b13231950", "url": "https://github.com/eclipse-openj9/openj9/commit/7a930ae200c144b206fbf18e7b6c388b13231950", "message": "Sampling allocation bytes precisely - step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>", "committedDate": "2020-06-02T17:30:26Z", "type": "commit"}, {"oid": "7a930ae200c144b206fbf18e7b6c388b13231950", "url": "https://github.com/eclipse-openj9/openj9/commit/7a930ae200c144b206fbf18e7b6c388b13231950", "message": "Sampling allocation bytes precisely - step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>", "committedDate": "2020-06-02T17:30:26Z", "type": "forcePushed"}]}