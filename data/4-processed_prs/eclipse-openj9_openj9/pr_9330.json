{"pr_number": 9330, "pr_title": "String table read barrier", "pr_createdAt": "2020-04-22T23:26:51Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9330", "timeline": [{"oid": "1bbb3dd1514b2cd67e190a1e15d086e9647eb239", "url": "https://github.com/eclipse-openj9/openj9/commit/1bbb3dd1514b2cd67e190a1e15d086e9647eb239", "message": "String table read barrier\n\nReplacing Collector (Scavenge) specific code in a middle of StringTable\ncode, with more generic barrier API.\n\nBesides, the original code was not fully correct, since it was using\nForwardedHeader variant that is used for Partial GC in Balanced, that\nis not aware of:\n1) self forwarded pointer.\n2) large object parallel copy protocol\n\nAll other code is just renaming various ReadBarrier APIs, giving them\nmore generic name that serves the same purpose for any kind of Weak\n(Clearable) Root: just updates the slot in case object is already\nforwarded, but does trigger a copy (keep it alive), even if in Evacuate\nspace.\n\nThis code has several more suspicious spots needing further scrutiny:\n1) referring directly to Metronome and\n2) reading object slots directly without using Read Barrier API\n(currently, probably benign because those are pre=tenured objects not\nsubject to movement, but obviously not future-proof),\nbut the change does the bare minimum to fix a known problem.\n\nSigned-off-by: Aleksandar Micic <amicic@ca.ibm.com>", "committedDate": "2020-04-22T23:24:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUyMzA2OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9330#discussion_r413523068", "bodyText": "I'm slightly concerned about the performance implications of this change as this will now call thru:\n MM_ReadBarrierVerifier::preWeakRootSlotRead(J9VMThread *vmThread, j9object_t *srcAddress)\n {\n \tAssert_MM_true(vmThread->javaVM->internalVMFunctions->currentVMThread(vmThread->javaVM) == vmThread);\nand that assert isn't free.\nWhat performance testing do you plan to do for this?", "author": "DanHeidinga", "createdAt": "2020-04-23T05:38:40Z", "path": "runtime/gc_base/StringTable.cpp", "diffHunk": "@@ -224,16 +224,7 @@ stringComparatorFn(struct J9AVLTree *tree, struct J9AVLTreeNode *leftNode, struc\n \tstu8Ptr = *((UDATA*) (leftNode+1)); \n \n \t/* Get at the String information  */\n-\tright_s = *(j9object_t *)(rightNode+1);\n-\n-\tif (!isMetronome) {\n-\t\t/* Check if string was copy-forwarded.  Only do this on non-metronome since metronome re-uses the FORWARDED bit */\n-\t\tMM_ScavengerForwardedHeader forwardedHeader(right_s, extensions);\n-\t\tJ9Object* forwardedPtr = forwardedHeader.getForwardedObject();\n-\t\tif (NULL != forwardedPtr) {\n-\t\t\tright_s = forwardedPtr;\n-\t\t}\n-\t}\n+\tright_s = J9WEAKROOT_OBJECT_LOAD_VM(javaVM, (j9object_t *)(rightNode+1));", "originalCommit": "1bbb3dd1514b2cd67e190a1e15d086e9647eb239", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwNTYxNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/9330#discussion_r413805616", "bodyText": "That is a Verifier path that can be optionally enabled to find any possible anomalies with Read Barrier invocations.\nThe real path for Gencon/Optthruput/Optavgpause is\nMM_StandardAccessBarrier::preWeakRootSlotRead(J9JavaVM *vm, j9object_t *srcAddress)\nwhich is free of that assert.\nEven then, there will be a few more steps (extra 'ifs', method indirections, one being virtual dispatch), before we hit the real code (the check if object is forwarded). But that's a similar overhead we pay for many other reads/stores (for example Monitor Table), for sake of clean/correct code.\nJust in case it's not clear, only two sites in String Table code what is really affected. All other sites are just API renaming.\nBalanced and Metronome for this specific API rely on base MM_ObjectAccessBarrier (which does nothing).", "author": "amicic", "createdAt": "2020-04-23T13:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUyMzA2OA=="}], "type": "inlineReview"}]}