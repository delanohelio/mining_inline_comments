{"pr_number": 9282, "pr_title": "AArch64: Align 64-bit data in call snippets", "pr_createdAt": "2020-04-19T22:53:38Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9282", "timeline": [{"oid": "93df4623e551c63c5aee0fa331b84c016e5f1b3e", "url": "https://github.com/eclipse-openj9/openj9/commit/93df4623e551c63c5aee0fa331b84c016e5f1b3e", "message": "AArch64: Align 64-bit data in call snippets\n\nThis commit adds adjustments for addresses of virtual unresolved call\nsnippets and interface call snippets so that the 64-bit data in\nsnippets are naturally aligned.\n\nSigned-off-by: KONNO Kazuhiro <konno@jp.ibm.com>", "committedDate": "2020-04-20T23:39:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MTc0Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/9282#discussion_r412471746", "bodyText": "If your concern is about the size of intptr_t data, why not just use sizeof(intptr_t) here instead of the call to sizeofReferenceAddress() ?", "author": "0xdaryl", "createdAt": "2020-04-21T20:33:16Z", "path": "runtime/compiler/aarch64/codegen/CallSnippet.cpp", "diffHunk": "@@ -410,11 +410,18 @@ uint8_t *TR::ARM64VirtualUnresolvedSnippet::emitSnippetBody()\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(comp->fe());\n    void *thunk = fej9->getJ2IThunk(callNode->getSymbolReference()->getSymbol()->castToMethodSymbol()->getMethod(), comp);\n \n+   // for alignment of intptr_t data\n+   if (((uint64_t)cursor % TR::Compiler->om.sizeofReferenceAddress()) == 0)", "originalCommit": "93df4623e551c63c5aee0fa331b84c016e5f1b3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU3MzcyNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9282#discussion_r412573727", "bodyText": "I agree it can be simply sizeof(intptr_t).\nsizeofReferenceAddress() came from the power version.", "author": "knn-k", "createdAt": "2020-04-22T00:03:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MTc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MjkxMQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9282#discussion_r412472911", "bodyText": "Since this code is here to align the data after the call instruction, perhaps adding an assert that sizeof(int32_t) == ARM64_INSTRUCTION_LENGTH is warranted just to make it clear of the assumption you're making.", "author": "0xdaryl", "createdAt": "2020-04-21T20:35:13Z", "path": "runtime/compiler/aarch64/codegen/CallSnippet.cpp", "diffHunk": "@@ -410,11 +410,18 @@ uint8_t *TR::ARM64VirtualUnresolvedSnippet::emitSnippetBody()\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(comp->fe());\n    void *thunk = fej9->getJ2IThunk(callNode->getSymbolReference()->getSymbol()->castToMethodSymbol()->getMethod(), comp);\n \n+   // for alignment of intptr_t data\n+   if (((uint64_t)cursor % TR::Compiler->om.sizeofReferenceAddress()) == 0)\n+      {", "originalCommit": "93df4623e551c63c5aee0fa331b84c016e5f1b3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU3NDI5NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9282#discussion_r412574295", "bodyText": "I added TR_ASSERT() after cursor += ARM64_INSTRUCTION_LENGTH; in both ARM64VirtualUnresolvedSnippet and ARM64InterfaceCallSnippet.", "author": "knn-k", "createdAt": "2020-04-22T00:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MjkxMQ=="}], "type": "inlineReview"}, {"oid": "5a5dccd0b7f92710b0d27284dce5ede60fec92c1", "url": "https://github.com/eclipse-openj9/openj9/commit/5a5dccd0b7f92710b0d27284dce5ede60fec92c1", "message": "AArch64: Align 64-bit data in call snippets\n\nThis commit adds adjustments for addresses of virtual unresolved call\nsnippets and interface call snippets so that the 64-bit data in\nsnippets are naturally aligned.\n\nSigned-off-by: KONNO Kazuhiro <konno@jp.ibm.com>", "committedDate": "2020-04-21T23:55:36Z", "type": "commit"}, {"oid": "5a5dccd0b7f92710b0d27284dce5ede60fec92c1", "url": "https://github.com/eclipse-openj9/openj9/commit/5a5dccd0b7f92710b0d27284dce5ede60fec92c1", "message": "AArch64: Align 64-bit data in call snippets\n\nThis commit adds adjustments for addresses of virtual unresolved call\nsnippets and interface call snippets so that the 64-bit data in\nsnippets are naturally aligned.\n\nSigned-off-by: KONNO Kazuhiro <konno@jp.ibm.com>", "committedDate": "2020-04-21T23:55:36Z", "type": "forcePushed"}]}