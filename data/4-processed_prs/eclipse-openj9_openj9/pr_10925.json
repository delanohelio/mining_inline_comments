{"pr_number": 10925, "pr_title": "Fixes and changes to resolution sequence for unresolved field and virtual calls on Z", "pr_createdAt": "2020-10-19T17:32:51Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10925", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzI5Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507983293", "bodyText": "This looks like two lines in one. Can we break them apart?", "author": "fjeremic", "createdAt": "2020-10-19T18:44:44Z", "path": "runtime/compiler/z/codegen/J9UnresolvedDataReadOnlySnippet.cpp", "diffHunk": "@@ -105,8 +105,9 @@ J9::Z::UnresolvedDataReadOnlySnippet::emitSnippetBody()\n \n    // Relative address to the start of the mainline resolution\n    intptr_t startResolutionSeqLabelAddr = reinterpret_cast<intptr_t>(startResolveSequenceLabel->getCodeLocation());\n-   TR_ASSERT_FATAL(cg()->canUseRelativeLongInstructions(startResolutionSeqLabelAddr), \"startResolveSequenceLabel [%p] is outside relative immediate range\", startResolutionSeqLabelAddr);*reinterpret_cast<int32_t*>(cursor) = static_cast<int32_t>(startOfResolutionSeqLabelAddr - (intptr_t)helperCallRA);\n+   TR_ASSERT_FATAL(cg()->canUseRelativeLongInstructions(startResolutionSeqLabelAddr), \"startResolveSequenceLabel [%p] is outside relative immediate range\", startResolutionSeqLabelAddr);*reinterpret_cast<int32_t*>(cursor) = static_cast<int32_t>(startResolutionSeqLabelAddr - (intptr_t)helperCallRA);", "originalCommit": "13a51f6bc611de8e95dcc43b18239f056fdbc616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NzcyNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507987727", "bodyText": "My apologies,  fixed in https://github.com/eclipse/openj9/compare/13a51f6bc611de8e95dcc43b18239f056fdbc616..e90116d7332681724cdd8aa492ff4522dadd0d6a", "author": "r30shah", "createdAt": "2020-10-19T18:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzI5Mw=="}], "type": "inlineReview"}, {"oid": "4c7d856b40056b61d11c59838d21d44dad6005d2", "url": "https://github.com/eclipse-openj9/openj9/commit/4c7d856b40056b61d11c59838d21d44dad6005d2", "message": "Fix compilation errors in UnresolvedData\n\nWhile fixing gc map issue in the Unresolved Data snippet resolution\ncode, a compilation failure was introduced. This commit fixes that.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-10-19T18:50:35Z", "type": "commit"}, {"oid": "e90116d7332681724cdd8aa492ff4522dadd0d6a", "url": "https://github.com/eclipse-openj9/openj9/commit/e90116d7332681724cdd8aa492ff4522dadd0d6a", "message": "Use CCData to allocate Unresolved MetaData on Z\n\nFor the unresolved data resolution sequence, use OMR::CCData to allocate\nthe metadata for Snapshot mode.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-10-19T18:50:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjEzNg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507986136", "bodyText": "You have to check the result of put() for failure, not get().", "author": "ymanton", "createdAt": "2020-10-19T18:49:31Z", "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,8 +397,11 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index);\n+      \n+      CCUnresolvedData* ccUnresolvedDataAddress = codeCacheData->get<CCUnresolvedData>(index);", "originalCommit": "13a51f6bc611de8e95dcc43b18239f056fdbc616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5NDM2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507994365", "bodyText": "Checking result of put in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "author": "r30shah", "createdAt": "2020-10-19T19:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjEzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjY0OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507986648", "bodyText": "Likewise here.", "author": "ymanton", "createdAt": "2020-10-19T18:50:25Z", "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,7 +1583,11 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index);\n+   \n+   ccResolveVirtualData *ccResolveVirtualDataAddress = codeCacheData->get<ccResolveVirtualData>(index);", "originalCommit": "13a51f6bc611de8e95dcc43b18239f056fdbc616", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5NDM0Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507994343", "bodyText": "Checking result of put in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "author": "r30shah", "createdAt": "2020-10-19T19:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjY0OA=="}], "type": "inlineReview"}, {"oid": "69c427858ff45f769e7f9831d4e4777159a0a758", "url": "https://github.com/eclipse-openj9/openj9/commit/69c427858ff45f769e7f9831d4e4777159a0a758", "message": "Use CCData to allocate Unresolved MetaData on Z\n\nFor the unresolved data resolution sequence, use OMR::CCData to allocate\nthe metadata for Snapshot mode.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-10-19T18:58:09Z", "type": "forcePushed"}, {"oid": "5d6e74fa87fdeafa1d06eccd29451578d147ee60", "url": "https://github.com/eclipse-openj9/openj9/commit/5d6e74fa87fdeafa1d06eccd29451578d147ee60", "message": "Use CCData to allocate a resolveVirtualData on Z\n\nFor the SnapShot mode, use OMR::CCData to allocate the meta data for\nresolution of virtual calls.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-10-19T19:01:16Z", "type": "commit"}, {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec", "url": "https://github.com/eclipse-openj9/openj9/commit/e6572d23ab0cf110a98cc239bea656e8aa8729ec", "message": "Use CCData to allocate Unresolved MetaData on Z\n\nFor the unresolved data resolution sequence, use OMR::CCData to allocate\nthe metadata for Snapshot mode.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>\nHH", "committedDate": "2020-10-19T19:01:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2ODg1OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512168859", "bodyText": "New typo: uVdnresolved", "author": "ymanton", "createdAt": "2020-10-26T18:10:27Z", "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,14 +397,15 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n-\n-      if (ccUnresolvedDataAddress == NULL)\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      if (!(codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index)))\n          {\n-         comp->failCompilation<TR::CompilationException>(\"Could not allocate unresolved data metadata\");\n+         comp->failCompilation<TR::CompilationException>(\"Could not allocate uVdnresolved data metadata\");", "originalCommit": "e6572d23ab0cf110a98cc239bea656e8aa8729ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3OTkyOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512179928", "bodyText": "fixed in https://github.com/eclipse/openj9/compare/e6572d23ab0cf110a98cc239bea656e8aa8729ec..6d1fee3c7c3d3066a711500dc5c93851f9df074c", "author": "r30shah", "createdAt": "2020-10-26T18:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2ODg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2OTM3OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512169379", "bodyText": "Existing typo: resovle", "author": "ymanton", "createdAt": "2020-10-26T18:11:23Z", "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,12 +1583,14 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n-\n-   if (!ccResolveVirtualDataAddress)\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   if (!(codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index)))\n       {\n       comp()->failCompilation<TR::CompilationException>(\"Could not allocate resovle virtual dispatch metadata\");", "originalCommit": "e6572d23ab0cf110a98cc239bea656e8aa8729ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MDMwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512180304", "bodyText": "Fixed in https://github.com/eclipse/openj9/compare/e6572d23ab0cf110a98cc239bea656e8aa8729ec..6d1fee3c7c3d3066a711500dc5c93851f9df074c", "author": "r30shah", "createdAt": "2020-10-26T18:29:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2OTM3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDM2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512170365", "bodyText": "Rather than hardcoding 8 here would alignof(CCUnresolvedData) be better?", "author": "ymanton", "createdAt": "2020-10-26T18:13:08Z", "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,14 +397,15 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n-\n-      if (ccUnresolvedDataAddress == NULL)\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      if (!(codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index)))", "originalCommit": "e6572d23ab0cf110a98cc239bea656e8aa8729ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MDk2Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512180967", "bodyText": "Changed the alignment to alignof(CCUnresolvedData) in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "author": "r30shah", "createdAt": "2020-10-26T18:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDU2OQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512170569", "bodyText": "Likewise here, alignof(CCUnresolvedData) rather than 8?", "author": "ymanton", "createdAt": "2020-10-26T18:13:30Z", "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,12 +1583,14 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n-\n-   if (!ccResolveVirtualDataAddress)\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   if (!(codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index)))", "originalCommit": "e6572d23ab0cf110a98cc239bea656e8aa8729ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MTI5MA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512181290", "bodyText": "Fixed in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "author": "r30shah", "createdAt": "2020-10-26T18:31:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDU2OQ=="}], "type": "inlineReview"}, {"oid": "6d1fee3c7c3d3066a711500dc5c93851f9df074c", "url": "https://github.com/eclipse-openj9/openj9/commit/6d1fee3c7c3d3066a711500dc5c93851f9df074c", "message": "Use CCData to allocate Unresolved MetaData on Z\n\nFor the unresolved data resolution sequence, use OMR::CCData to allocate\nthe metadata for Snapshot mode.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-10-26T18:27:42Z", "type": "commit"}, {"oid": "6d1fee3c7c3d3066a711500dc5c93851f9df074c", "url": "https://github.com/eclipse-openj9/openj9/commit/6d1fee3c7c3d3066a711500dc5c93851f9df074c", "message": "Use CCData to allocate Unresolved MetaData on Z\n\nFor the unresolved data resolution sequence, use OMR::CCData to allocate\nthe metadata for Snapshot mode.\n\nSigned-off-by: Rahil Shah <rahil@ca.ibm.com>", "committedDate": "2020-10-26T18:27:42Z", "type": "forcePushed"}]}