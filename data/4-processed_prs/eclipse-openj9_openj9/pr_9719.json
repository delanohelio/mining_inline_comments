{"pr_number": 9719, "pr_title": "Fix crash printing to verbose log", "pr_createdAt": "2020-05-27T21:13:55Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/9719", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjM0Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/9719#discussion_r431492343", "bodyText": "If I understand the scenario correctly, these flags will never be seen in the metadata for a \"live\" compiled method. They serve only as a temporary hint passed to addFreeBlock to not print some problematic field. The only downside I see is occupying some bits in the metaData->flags.  If it's not too much hassle, maybe a we should add another parameter to addFreeBlock", "author": "mpirvu", "createdAt": "2020-05-27T23:07:39Z", "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -10371,6 +10371,11 @@ TR::CompilationInfo::compilationEnd(J9VMThread * vmThread, TR::IlGeneratorMethod\n                   J9JITDataCacheHeader *exceptionTableCacheEntry = (J9JITDataCacheHeader *)((U_8 *)cacheEntry + aotMethodHeaderEntry->offsetToExceptionTable);\n                   J9JITExceptionTable *metaData = (J9JITExceptionTable *) (exceptionTableCacheEntry + 1);\n \n+                  if (!canRelocateMethod)", "originalCommit": "aa554528c3630ebc74ce4ec55abd49b48839414c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1OTEwOA==", "url": "https://github.com/eclipse-openj9/openj9/pull/9719#discussion_r431559108", "bodyText": "Yeah I'll take a look to do that.", "author": "dsouzai", "createdAt": "2020-05-28T03:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjM0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0NTc2NQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/9719#discussion_r431945765", "bodyText": "Adding a parameter is a bit cumbersome actually, because while J9::CodeCacheManager::addFreeBlock is only an OpenJ9 API, J9::CodeCache::addFreeBlock is an extensible API (ie there is a counterpart for this API in OMR), which means I'd have to also open an OMR PR.\nPerhaps what's better is that I just add a single flag, namely JIT_METADATA_IS_UNINITIALIZED, and set that where we first allocate it, and reset it when we properly initialize the metadata. It'll only be for AOT compilations, because technically we do store an uninitialized metadata into the SCC, so I think it's not a bad bit to have.", "author": "dsouzai", "createdAt": "2020-05-28T15:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjM0Mw=="}], "type": "inlineReview"}, {"oid": "ff0fbb35c5153e1c4be0e6acb4b1556ebc518fad", "url": "https://github.com/eclipse-openj9/openj9/commit/ff0fbb35c5153e1c4be0e6acb4b1556ebc518fad", "message": "Don't reset flags field again\n\nWhen the J9JITExceptionTable is allocated, both\nTR_J9ResolvedMethod::allocateException and\nTR_ResolvedRelocatableJ9Method::allocateException memset the allocated\nmemory to 0. Therefore, there is no need to reset the flags to 0 again.\nAdditionally, this prevents any flags from being set in the method that\nallocates the J9JITExceptionTable.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-05-28T19:51:13Z", "type": "commit"}, {"oid": "e98814bfa3332eba3c2202e3d96dcc5b730d7260", "url": "https://github.com/eclipse-openj9/openj9/commit/e98814bfa3332eba3c2202e3d96dcc5b730d7260", "message": "Don't free twice\n\nIf there is a failure while relocating a method, if the\n_relocationStatus field in TR_RelocationRuntime is set to\nRelocationFailure, during the cleanup addFreeBlock is called. However,\nif the compiled copy of the exception table was used (which can happen\nif disableDelayRelocationForAOTCompilations is specified on the\n-Xjit/-Xaot option), addFreeBlock will also be called in\nCompilationThread.cpp.\n\nWhile currently there might be some implicit coupling that prevents the\ndouble free from happening, this is a bug that's just waiting to show up\nin the future.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-05-28T19:53:19Z", "type": "commit"}, {"oid": "5dbbc67cd7f18827c5e724183daf3e86530d21d9", "url": "https://github.com/eclipse-openj9/openj9/commit/5dbbc67cd7f18827c5e724183daf3e86530d21d9", "message": "Fix crash printing to verbose log\n\nAfter an AOT Compilation, the compiler either delays the relocation of\nthe body, or the relocation can fail. When this occurs, the\nJ9JITExceptionTable that was allocated has to freed. As part of this\nfreeing process, information is printed out to the verbose log if the\ncode cache verbose options are set. Part of the information that is\nprinted out is the name of the method. This information is retrieved\nfrom the J9JITExceptionTable. However, this information can be NULL\nbecause it gets populated when the table is relocated.\n\nThis commit adds a NULL check, as well as some sanity checks to ensure\nthat those fields are only NULL in the expected scenarios.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-05-28T19:57:49Z", "type": "commit"}, {"oid": "5dbbc67cd7f18827c5e724183daf3e86530d21d9", "url": "https://github.com/eclipse-openj9/openj9/commit/5dbbc67cd7f18827c5e724183daf3e86530d21d9", "message": "Fix crash printing to verbose log\n\nAfter an AOT Compilation, the compiler either delays the relocation of\nthe body, or the relocation can fail. When this occurs, the\nJ9JITExceptionTable that was allocated has to freed. As part of this\nfreeing process, information is printed out to the verbose log if the\ncode cache verbose options are set. Part of the information that is\nprinted out is the name of the method. This information is retrieved\nfrom the J9JITExceptionTable. However, this information can be NULL\nbecause it gets populated when the table is relocated.\n\nThis commit adds a NULL check, as well as some sanity checks to ensure\nthat those fields are only NULL in the expected scenarios.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>", "committedDate": "2020-05-28T19:57:49Z", "type": "forcePushed"}]}