{"pr_number": 3665, "pr_title": "Convert download code to kotlin", "pr_createdAt": "2020-04-16T21:57:08Z", "pr_url": "https://github.com/commons-app/apps-android-commons/pull/3665", "timeline": [{"oid": "1b08389a7705b7372e367fa17c3c346bf6ce5103", "url": "https://github.com/commons-app/apps-android-commons/commit/1b08389a7705b7372e367fa17c3c346bf6ce5103", "message": "Convert download code to kotlin", "committedDate": "2020-04-16T21:56:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2MzcwNw==", "url": "https://github.com/commons-app/apps-android-commons/pull/3665#discussion_r410063707", "bodyText": "We can use kotlin string interpolation here", "author": "macgills", "createdAt": "2020-04-17T08:13:20Z", "path": "app/src/main/java/fr/free/nrw/commons/utils/DownloadUtils.kt", "diffHunk": "@@ -0,0 +1,65 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.Manifest.permission\n+import android.app.Activity\n+import android.app.DownloadManager\n+import android.content.Context\n+import android.net.Uri\n+import android.os.Environment\n+import android.widget.Toast\n+import fr.free.nrw.commons.Media\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DownloadUtils {\n+    /**\n+     * Start the media file downloading to the local SD card/storage. The file can then be opened in\n+     * Gallery or other apps.\n+     *\n+     * @param m Media file to download\n+     */\n+    @JvmStatic\n+    fun downloadMedia(activity: Activity?, m: Media) {\n+        val imageUrl = m.getImageUrl()\n+        var fileName = m.getFilename()\n+        if (imageUrl == null || fileName == null || activity == null\n+        ) {\n+            Timber.d(\n+                \"Skipping download media as either imageUrl %s or filename %s activity is null\",", "originalCommit": "1b08389a7705b7372e367fa17c3c346bf6ce5103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2NDAzMw==", "url": "https://github.com/commons-app/apps-android-commons/pull/3665#discussion_r410064033", "bodyText": ".substringAfter will express this a bit nicer", "author": "macgills", "createdAt": "2020-04-17T08:14:00Z", "path": "app/src/main/java/fr/free/nrw/commons/utils/DownloadUtils.kt", "diffHunk": "@@ -0,0 +1,65 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.Manifest.permission\n+import android.app.Activity\n+import android.app.DownloadManager\n+import android.content.Context\n+import android.net.Uri\n+import android.os.Environment\n+import android.widget.Toast\n+import fr.free.nrw.commons.Media\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DownloadUtils {\n+    /**\n+     * Start the media file downloading to the local SD card/storage. The file can then be opened in\n+     * Gallery or other apps.\n+     *\n+     * @param m Media file to download\n+     */\n+    @JvmStatic\n+    fun downloadMedia(activity: Activity?, m: Media) {\n+        val imageUrl = m.getImageUrl()\n+        var fileName = m.getFilename()\n+        if (imageUrl == null || fileName == null || activity == null\n+        ) {\n+            Timber.d(\n+                \"Skipping download media as either imageUrl %s or filename %s activity is null\",\n+                imageUrl, fileName\n+            )\n+            return\n+        }\n+        // Strip 'File:' from beginning of filename, we really shouldn't store it\n+        fileName = fileName.replaceFirst(\"^File:\".toRegex(), \"\")", "originalCommit": "1b08389a7705b7372e367fa17c3c346bf6ce5103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2NDM3NQ==", "url": "https://github.com/commons-app/apps-android-commons/pull/3665#discussion_r410064375", "bodyText": "we can use .apply to make building this Request look nicer", "author": "macgills", "createdAt": "2020-04-17T08:14:40Z", "path": "app/src/main/java/fr/free/nrw/commons/utils/DownloadUtils.kt", "diffHunk": "@@ -0,0 +1,65 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.Manifest.permission\n+import android.app.Activity\n+import android.app.DownloadManager\n+import android.content.Context\n+import android.net.Uri\n+import android.os.Environment\n+import android.widget.Toast\n+import fr.free.nrw.commons.Media\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DownloadUtils {\n+    /**\n+     * Start the media file downloading to the local SD card/storage. The file can then be opened in\n+     * Gallery or other apps.\n+     *\n+     * @param m Media file to download\n+     */\n+    @JvmStatic\n+    fun downloadMedia(activity: Activity?, m: Media) {\n+        val imageUrl = m.getImageUrl()\n+        var fileName = m.getFilename()\n+        if (imageUrl == null || fileName == null || activity == null\n+        ) {\n+            Timber.d(\n+                \"Skipping download media as either imageUrl %s or filename %s activity is null\",\n+                imageUrl, fileName\n+            )\n+            return\n+        }\n+        // Strip 'File:' from beginning of filename, we really shouldn't store it\n+        fileName = fileName.replaceFirst(\"^File:\".toRegex(), \"\")\n+        val imageUri = Uri.parse(imageUrl)\n+        val req = DownloadManager.Request(imageUri)", "originalCommit": "1b08389a7705b7372e367fa17c3c346bf6ce5103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2NDkzNg==", "url": "https://github.com/commons-app/apps-android-commons/pull/3665#discussion_r410064936", "bodyText": "shouldn't the IDE be suggesting using propertyAccess syntax?", "author": "macgills", "createdAt": "2020-04-17T08:15:44Z", "path": "app/src/main/java/fr/free/nrw/commons/utils/DownloadUtils.kt", "diffHunk": "@@ -0,0 +1,65 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.Manifest.permission\n+import android.app.Activity\n+import android.app.DownloadManager\n+import android.content.Context\n+import android.net.Uri\n+import android.os.Environment\n+import android.widget.Toast\n+import fr.free.nrw.commons.Media\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DownloadUtils {\n+    /**\n+     * Start the media file downloading to the local SD card/storage. The file can then be opened in\n+     * Gallery or other apps.\n+     *\n+     * @param m Media file to download\n+     */\n+    @JvmStatic\n+    fun downloadMedia(activity: Activity?, m: Media) {\n+        val imageUrl = m.getImageUrl()", "originalCommit": "1b08389a7705b7372e367fa17c3c346bf6ce5103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2NTEyMg==", "url": "https://github.com/commons-app/apps-android-commons/pull/3665#discussion_r410065122", "bodyText": "weird place for a parentheses", "author": "macgills", "createdAt": "2020-04-17T08:16:06Z", "path": "app/src/main/java/fr/free/nrw/commons/utils/DownloadUtils.kt", "diffHunk": "@@ -0,0 +1,65 @@\n+package fr.free.nrw.commons.utils\n+\n+import android.Manifest.permission\n+import android.app.Activity\n+import android.app.DownloadManager\n+import android.content.Context\n+import android.net.Uri\n+import android.os.Environment\n+import android.widget.Toast\n+import fr.free.nrw.commons.Media\n+import fr.free.nrw.commons.R\n+import timber.log.Timber\n+\n+object DownloadUtils {\n+    /**\n+     * Start the media file downloading to the local SD card/storage. The file can then be opened in\n+     * Gallery or other apps.\n+     *\n+     * @param m Media file to download\n+     */\n+    @JvmStatic\n+    fun downloadMedia(activity: Activity?, m: Media) {\n+        val imageUrl = m.getImageUrl()\n+        var fileName = m.getFilename()\n+        if (imageUrl == null || fileName == null || activity == null\n+        ) {", "originalCommit": "1b08389a7705b7372e367fa17c3c346bf6ce5103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}