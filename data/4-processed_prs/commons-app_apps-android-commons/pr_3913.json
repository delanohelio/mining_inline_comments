{"pr_number": 3913, "pr_title": "Bugfix/categories search", "pr_createdAt": "2020-08-29T12:56:01Z", "pr_url": "https://github.com/commons-app/apps-android-commons/pull/3913", "timeline": [{"oid": "8f0ec524894f74fc058a86176f6e8a48bf778db1", "url": "https://github.com/commons-app/apps-android-commons/commit/8f0ec524894f74fc058a86176f6e8a48bf778db1", "message": "Fixes #3734\n* Donot ignore case while searching categories", "committedDate": "2020-07-07T17:23:03Z", "type": "commit"}, {"oid": "0a807c58dea979e7b459515159e189911ee63660", "url": "https://github.com/commons-app/apps-android-commons/commit/0a807c58dea979e7b459515159e189911ee63660", "message": "Fixed test-cases to ensure search terms are passed as it is to the CategoryClient", "committedDate": "2020-08-30T07:51:08Z", "type": "commit"}, {"oid": "2c8e0268aa740464a0267111c94c8950d3be28c5", "url": "https://github.com/commons-app/apps-android-commons/commit/2c8e0268aa740464a0267111c94c8950d3be28c5", "message": "Used a First_Char_Caps title list term just to ensure test case tests as intended", "committedDate": "2020-08-30T07:53:11Z", "type": "commit"}, {"oid": "10a0436c3c4e940737a3584d0c04ee69ae093e5c", "url": "https://github.com/commons-app/apps-android-commons/commit/10a0436c3c4e940737a3584d0c04ee69ae093e5c", "message": "Fixed searchAll with empty term test case", "committedDate": "2020-08-30T08:04:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc3ODIwNQ==", "url": "https://github.com/commons-app/apps-android-commons/pull/3913#discussion_r479778205", "bodyText": "Given the fact that the first title character is case insensitive in MediaWiki [ref], I don't think this test would help us catch bugs that we want it to catch. A safe case would be to have a set of test cases with search queries like:\n\nTEST\ntest\nTest Category", "author": "sivaraam", "createdAt": "2020-08-30T14:40:42Z", "path": "app/src/test/kotlin/fr/free/nrw/commons/category/CategoriesModelTest.kt", "diffHunk": "@@ -27,26 +30,39 @@ class CategoriesModelTest {\n         MockitoAnnotations.initMocks(this)\n     }\n \n-    // Test Case for verifying that Categories search (MW api calls) are case-insensitive\n+    // Test Case for verifying that Categories search (MW api calls)\n     @Test\n     fun searchAllFoundCaseTest() {\n         val categoriesModel = CategoriesModel(categoryClient, mock(), mock())\n \n         val expectedList = listOf(\"Test\")\n-        whenever(categoryClient.searchCategoriesForPrefix(\"tes\", 25))\n+        whenever(\n+            categoryClient.searchCategoriesForPrefix(\n+                ArgumentMatchers.anyString(),\n+                ArgumentMatchers.anyInt(),\n+                ArgumentMatchers.anyInt()\n+            )\n+        )\n             .thenReturn(Single.just(expectedList))\n \n         // Checking if both return \"Test\"\n         val expectedItems = expectedList.map { CategoryItem(it, false) }\n-        categoriesModel.searchAll(\"tes\", emptyList(), emptyList())\n+        var categoryTerm = \"Test\"", "originalCommit": "0a807c58dea979e7b459515159e189911ee63660", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc3OTY1NA==", "url": "https://github.com/commons-app/apps-android-commons/pull/3913#discussion_r479779654", "bodyText": "The aim was to achieve the test coverage of the functions which modify the search term toLowerCase(), to make sure that the terms are passed as it is, which the modified test cases do handle and that's why I used \"Test\" with a capital 'T' to verify that if you see the next line verifies that the categoryClient's corresponding function is called with the exact search term as passed to the function. I don't think we need to add all combinations of such cases since the test case already handles that. You can verify it by modifying the corresponding method in the CategoryModel. You will see that the test case would fail for that", "author": "ashishkumar468", "createdAt": "2020-08-30T14:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc3ODIwNQ=="}], "type": "inlineReview"}]}