{"pr_number": 2929, "pr_title": "[scala] Add support for CPD-ON and CPD-OFF special comments", "pr_createdAt": "2020-11-16T17:53:46Z", "pr_url": "https://github.com/pmd/pmd/pull/2929", "timeline": [{"oid": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "url": "https://github.com/pmd/pmd/commit/cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "message": "[scala] adding support for CPD-ON and CPD-OFF special comments", "committedDate": "2020-11-16T12:08:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5MDk2MQ==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524490961", "bodyText": "It's the getBeginLine implementation that should add +1, same for the other methods", "author": "oowekyala", "createdAt": "2020-11-16T18:40:40Z", "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -72,19 +75,21 @@ public void tokenize(SourceCode sourceCode, Tokens tokenEntries) throws IOExcept\n         // tokenize with a filter\n         try {\n             scala.meta.tokens.Tokens tokens = tokenizer.tokenize();\n-            ScalaTokenFilter filter = new ScalaTokenFilter(tokens.iterator());\n \n-            Token token;\n+            // use extensions to the standard PMD TokenManager and Filter\n+            ScalaTokenManager scalaTokenManager = new ScalaTokenManager(tokens.iterator());\n+            ScalaTokenFilter filter = new ScalaTokenFilter(scalaTokenManager);\n+\n+            GenericToken token;\n             while ((token = filter.getNextToken()) != null) {\n-                if (StringUtils.isEmpty(token.text())) {\n+                if (StringUtils.isEmpty(token.getImage())) {\n                     continue;\n                 }\n-                Position pos = token.pos();\n-                TokenEntry cpdToken = new TokenEntry(token.text(),\n+                TokenEntry cpdToken = new TokenEntry(token.getImage(),\n                                                      filename,\n-                                                     pos.startLine() + 1,\n-                                                     pos.startColumn() + 1,\n-                                                     pos.endColumn() + 1);\n+                                                     token.getBeginLine() + 1,", "originalCommit": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0Mzk4Mw==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524543983", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return token != null && (token.text().startsWith(\"//\") || token.text().startsWith(\"/*\"));\n          \n          \n            \n                        return token instanceof Token.Comment;", "author": "oowekyala", "createdAt": "2020-11-16T20:13:36Z", "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -137,5 +155,27 @@ private boolean skipToken(Token token) {\n             }\n             return skip;\n         }\n+\n+        private boolean isComment(Token token) {\n+            return token != null && (token.text().startsWith(\"//\") || token.text().startsWith(\"/*\"));", "originalCommit": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEwMTMyNw==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r526101327", "bodyText": "Done", "author": "andyrobinson", "createdAt": "2020-11-18T13:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0Mzk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NzQ3MQ==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524547471", "bodyText": "Shouldn't CPD-OFF tokens be filtered out too? In other languages I think that's how it works", "author": "oowekyala", "createdAt": "2020-11-16T20:19:58Z", "path": "pmd-scala-modules/pmd-scala-common/src/test/resources/net/sourceforge/pmd/lang/scala/cpd/testdata/special_comments.txt", "diffHunk": "@@ -0,0 +1,52 @@\n+    [Image] or [Truncated image[            Bcol      Ecol\n+L1\n+    [// Testing CPD suppression]            1         27\n+L3\n+    [// Irrelevant comment]                 1         22\n+L4\n+    [// CPD-OFF]                            1         11", "originalCommit": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEwMTYzNQ==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r526101635", "bodyText": "Comments are now skipped and no longer tokenised", "author": "andyrobinson", "createdAt": "2020-11-18T13:50:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NzQ3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjk1Mw==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524552953", "bodyText": "Please either implement this or throw NotImplementedException (from lang3) or UnsupportedOperationException", "author": "oowekyala", "createdAt": "2020-11-16T20:29:52Z", "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenAdapter.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * BSD-style license; for more info see http://pmd.sourceforge.net/license.html\n+ */\n+\n+package net.sourceforge.pmd.cpd;\n+\n+import net.sourceforge.pmd.lang.ast.GenericToken;\n+\n+import scala.meta.tokens.Token;\n+\n+/**\n+ * Adapts the scala.meta.tokens.Token so that it can be used with the generic BaseTokenFilter\n+ */\n+public class ScalaTokenAdapter implements GenericToken {\n+\n+    private Token token;\n+    private GenericToken previousComment;\n+\n+    ScalaTokenAdapter(Token token, GenericToken comment) {\n+        this.token = token;\n+        this.previousComment = comment;\n+    }\n+\n+    @Override\n+    public GenericToken getNext() {\n+        // not required\n+        return null;", "originalCommit": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU2MDMwNQ==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524560305", "bodyText": "Would also be nice to add a toString to this class (any autogenerated one will do)", "author": "oowekyala", "createdAt": "2020-11-16T20:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEwMTgwOQ==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r526101809", "bodyText": "now throws", "author": "andyrobinson", "createdAt": "2020-11-18T13:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1OTczNw==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r524559737", "bodyText": "If the token is a comment it should actually not be returned, to implement this interface correctly. This is why your CPD-OFF comments are not filtered out (arguably all comments should actually be filtered out).", "author": "oowekyala", "createdAt": "2020-11-16T20:42:40Z", "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -125,7 +137,13 @@ Token getNextToken() {\n                 token = tokenIter.next();\n             } while (token != null && skipToken(token) && tokenIter.hasNext());\n \n-            return token;\n+            result = new ScalaTokenAdapter(token, previousComment);\n+\n+            if (isComment(token)) {\n+                previousComment = result;\n+            }\n+\n+            return result;", "originalCommit": "cb5ce5d9d1ef29ab9ea2e8f8091f1cc4c82d620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEwMjA2NA==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r526102064", "bodyText": "rewritten to skip comments", "author": "andyrobinson", "createdAt": "2020-11-18T13:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1OTczNw=="}], "type": "inlineReview"}, {"oid": "035ec0a5370f409c34d305c6b86f86f16e9823a0", "url": "https://github.com/pmd/pmd/commit/035ec0a5370f409c34d305c6b86f86f16e9823a0", "message": "[scala] fixing support for CPD-ON and CPD-OFF special comments\n- minor fix ups as per PR comments\n- comments are skipped and no longer tokenised", "committedDate": "2020-11-18T13:49:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NTU1NQ==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r528555555", "bodyText": "I think, this class can be static", "author": "adangel", "createdAt": "2020-11-23T09:10:47Z", "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -103,29 +108,39 @@ public void tokenize(SourceCode sourceCode, Tokens tokenEntries) throws IOExcept\n     }\n \n     /**\n-     * Token Filter skips un-helpful tokens to only register important tokens\n+     * Implementation of the generic Token Manager, also skips un-helpful tokens and comments to only register important tokens\n      * and patterns.\n+     *\n+     * Keeps track of comments, for special comment processing\n      */\n-    private static class ScalaTokenFilter {\n+    private class ScalaTokenManager implements TokenManager {", "originalCommit": "035ec0a5370f409c34d305c6b86f86f16e9823a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1NjkwMw==", "url": "https://github.com/pmd/pmd/pull/2929#discussion_r528556903", "bodyText": "can be static as well", "author": "adangel", "createdAt": "2020-11-23T09:13:15Z", "path": "pmd-scala-modules/pmd-scala-common/src/main/java/net/sourceforge/pmd/cpd/ScalaTokenizer.java", "diffHunk": "@@ -137,5 +152,27 @@ private boolean skipToken(Token token) {\n             }\n             return skip;\n         }\n+\n+        private boolean isComment(Token token) {\n+            return token instanceof Token.Comment;\n+        }\n+\n+        @Override\n+        public void setFileName(String fileName) {\n+            throw new UnsupportedOperationException(\"setFileName deprecated\");\n+        }\n+    }\n+\n+    private class ScalaTokenFilter extends BaseTokenFilter<ScalaTokenAdapter> {", "originalCommit": "035ec0a5370f409c34d305c6b86f86f16e9823a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}