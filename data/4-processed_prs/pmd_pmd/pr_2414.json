{"pr_number": 2414, "pr_title": "[core] Fix HTMLRenderer not using linkPrefix/linePrefix", "pr_createdAt": "2020-04-11T18:15:46Z", "pr_url": "https://github.com/pmd/pmd/pull/2414", "timeline": [{"oid": "44e43d618639065a7a71337b6205c1a6db723e86", "url": "https://github.com/pmd/pmd/commit/44e43d618639065a7a71337b6205c1a6db723e86", "message": "[core] Fix HTMLRenderer not using linkPrefix/linePrefix\n\n* add new option \"htmlExtension\", so that the mechanism can\nbe used with github as well\n* render links for suppressed violations and errors\n\nFixes #2412", "committedDate": "2020-04-11T18:15:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc3MTkxNw==", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r409771917", "bodyText": "that was the bug", "author": "adangel", "createdAt": "2020-04-16T18:42:06Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "diffHunk": "@@ -78,6 +89,10 @@ public void renderBody(Writer writer, Report report) throws IOException {\n \n     @Override\n     public void start() throws IOException {\n+        linkPrefix = getProperty(LINK_PREFIX);", "originalCommit": "44e43d618639065a7a71337b6205c1a6db723e86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9115d79a00c6fd31160d36261c92b45414b7a1a3", "url": "https://github.com/pmd/pmd/commit/9115d79a00c6fd31160d36261c92b45414b7a1a3", "message": "Merge branch 'master' into issue-2412", "committedDate": "2020-04-20T08:10:47Z", "type": "commit"}, {"oid": "1572602de9b690da60fd2848ca194d98d0595b86", "url": "https://github.com/pmd/pmd/commit/1572602de9b690da60fd2848ca194d98d0595b86", "message": "Clarify doc", "committedDate": "2020-04-20T08:26:11Z", "type": "commit"}, {"oid": "c7fce361a5182f94cdf2586a992e9a4f384e00ed", "url": "https://github.com/pmd/pmd/commit/c7fce361a5182f94cdf2586a992e9a4f384e00ed", "message": "Test when linePrefix is not set", "committedDate": "2020-04-20T08:30:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NDU2MQ==", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r411194561", "bodyText": "The control flow confused me so I added another test. What happens when the link prefix is set but not the line prefix? Currently the link is rendered, but there's nothing behind the #. I think this might be useful behavior (no line prefix != empty line prefix), let me know if this is expected and I'll merge the PR", "author": "oowekyala", "createdAt": "2020-04-20T08:34:08Z", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "diffHunk": "@@ -134,6 +148,20 @@ private void glomRuleViolations(Writer writer, Iterator<RuleViolation> violation\n         }\n     }\n \n+    private String renderFileName(String filename, int beginLine) {\n+        return maybeWrap(StringEscapeUtils.escapeHtml4(determineFileName(filename)),\n+                linePrefix == null || beginLine < 0 ? \"\" : linePrefix + beginLine);", "originalCommit": "44e43d618639065a7a71337b6205c1a6db723e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNTU2Ng==", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r413615566", "bodyText": "I think we should preserve whatever current behavior it is (not sure, what exactly is correct/expected). But \"no line prefix!=empty line prefix\" sounds reasonable.\nThe use cases are:\n\nnoLinePrefix - then, as it is implemented like now, we don't output the line number in the link\nLinePrefix is an empty string - then we should output \"#4711\". Some systems might use directly the linenumbers as target\nLinePrefix is any non-empty string - like github uses \"L\". Then we should output \"#L4711\".\n\nI'll double check, that we have a test case for the empty lineprefix and merge afterwards.", "author": "adangel", "createdAt": "2020-04-23T08:25:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NDU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzczNTk2Mw==", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r413735963", "bodyText": "SGTM. Side note: this will make it so, that the property wil need to be changed to Optional<String> on 7.0 because the new property framework explicitly forbids null property values. So Optional.empty() would mean \"no line prefix\" instead of null", "author": "oowekyala", "createdAt": "2020-04-23T11:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NDU2MQ=="}], "type": "inlineReview"}]}