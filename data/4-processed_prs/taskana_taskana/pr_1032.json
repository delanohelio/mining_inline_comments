{"pr_number": 1032, "pr_title": "revert of tempdir to fix build on windows machines", "pr_createdAt": "2020-04-27T10:43:39Z", "pr_url": "https://github.com/Taskana/taskana/pull/1032", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczMTA2MA==", "url": "https://github.com/Taskana/taskana/pull/1032#discussion_r415731060", "bodyText": "please remove this", "author": "gitgoodjhe", "createdAt": "2020-04-27T11:26:03Z", "path": "lib/taskana-core/src/test/java/acceptance/config/TaskanaConfigAccTest.java", "diffHunk": "@@ -105,23 +111,32 @@ void testWithCategoriesAndClassificationFilled() throws IOException {\n \n   private String createNewConfigFile(\n       String filename, boolean addingTypes, boolean addingClassification) throws IOException {\n-    Path file = Files.createFile(tempDir.resolve(filename));\n-    List<String> lines =\n-        Stream.of(\n-                \"taskana.roles.Admin =Holger|Stefan\",\n-                \"taskana.roles.businessadmin  = ebe  | konstantin \",\n-                \"taskana.roles.user = nobody\")\n-            .collect(Collectors.toList());\n-    if (addingTypes) {\n-      lines.add(\"taskana.classification.types= TASK , document\");\n+    String userHomeDirectroy = System.getProperty(\"user.home\");\n+    String propertiesFileName = userHomeDirectroy + filename;\n+    File f = new File(propertiesFileName);\n+    if (!f.exists()) {\n+      try (PrintWriter writer = new PrintWriter(propertiesFileName, \"UTF-8\")) {\n+        writer.println(\"taskana.roles.Admin =Holger|Stefan\");\n+        writer.println(\"taskana.roles.businessadmin  = ebe  | konstantin \");\n+        writer.println(\"taskana.roles.user = nobody\");\n+        if (addingTypes) {\n+          writer.println(\"taskana.classification.types= TASK , document\");\n+        }\n+        if (addingClassification) {\n+          writer.println(\n+              \"taskana.classification.categories.task= EXTERNAL, manual, autoMAtic, Process\");\n+          writer.println(\"taskana.classification.categories.document= EXTERNAL\");\n+        }\n+      }\n     }\n-    if (addingClassification) {\n-      lines.add(\"taskana.classification.categories.task= EXTERNAL, manual, autoMAtic, Process\");\n-      lines.add(\"taskana.classification.categories.document= EXTERNAL\");\n-    }\n-\n-    Files.write(file, lines, StandardCharsets.UTF_8);\n+    return propertiesFileName;\n+  }\n \n-    return file.toString();\n+  private void deleteFile(String propertiesFileName) {\n+    System.out.println(\"about to delete \" + propertiesFileName);", "originalCommit": "707d4881d57abf94be0a861482ac139a610db44f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczMTE5NQ==", "url": "https://github.com/Taskana/taskana/pull/1032#discussion_r415731195", "bodyText": "Please remove this", "author": "gitgoodjhe", "createdAt": "2020-04-27T11:26:15Z", "path": "lib/taskana-core/src/test/java/acceptance/config/TaskanaRoleConfigAccTest.java", "diffHunk": "@@ -55,66 +50,86 @@ void testStandardConfig() {\n \n   @Test\n   void testOtherConfigFileSameDelimiter() throws IOException {\n-    String propertiesFileName = createNewConfigFileWithSameDelimiter(\"dummyTestConfig.properties\");\n-    getConfiguration().initTaskanaProperties(propertiesFileName, \"|\");\n+    String propertiesFileName = createNewConfigFileWithSameDelimiter(\"/dummyTestConfig.properties\");\n+    try {\n+      getConfiguration().initTaskanaProperties(propertiesFileName, \"|\");\n \n-    Set<TaskanaRole> rolesConfigured = getConfiguration().getRoleMap().keySet();\n-    assertThat(rolesConfigured).containsOnly(TaskanaRole.values());\n+      Set<TaskanaRole> rolesConfigured = getConfiguration().getRoleMap().keySet();\n+      assertThat(rolesConfigured).containsOnly(TaskanaRole.values());\n \n-    Set<String> users = getConfiguration().getRoleMap().get(TaskanaRole.USER);\n-    assertThat(users).containsOnly(\"nobody\");\n+      Set<String> users = getConfiguration().getRoleMap().get(TaskanaRole.USER);\n+      assertThat(users).containsOnly(\"nobody\");\n \n-    Set<String> admins = getConfiguration().getRoleMap().get(TaskanaRole.ADMIN);\n-    assertThat(admins).containsOnly(\"holger\", \"stefan\");\n+      Set<String> admins = getConfiguration().getRoleMap().get(TaskanaRole.ADMIN);\n+      assertThat(admins).containsOnly(\"holger\", \"stefan\");\n \n-    Set<String> businessAdmins = getConfiguration().getRoleMap().get(TaskanaRole.BUSINESS_ADMIN);\n-    assertThat(businessAdmins).containsOnly(\"ebe\", \"konstantin\");\n+      Set<String> businessAdmins = getConfiguration().getRoleMap().get(TaskanaRole.BUSINESS_ADMIN);\n+      assertThat(businessAdmins).containsOnly(\"ebe\", \"konstantin\");\n+    } finally {\n+      deleteFile(propertiesFileName);\n+    }\n   }\n \n   @Test\n   void testOtherConfigFileDifferentDelimiter() throws IOException {\n     String delimiter = \";\";\n     String propertiesFileName =\n-        createNewConfigFileWithDifferentDelimiter(\"dummyTestConfig.properties\", delimiter);\n-    getConfiguration().initTaskanaProperties(propertiesFileName, delimiter);\n+        createNewConfigFileWithDifferentDelimiter(\"/dummyTestConfig.properties\", delimiter);\n+    try {\n+      getConfiguration().initTaskanaProperties(propertiesFileName, delimiter);\n \n-    Set<TaskanaRole> rolesConfigured = getConfiguration().getRoleMap().keySet();\n-    assertThat(rolesConfigured).containsOnly(TaskanaRole.values());\n+      Set<TaskanaRole> rolesConfigured = getConfiguration().getRoleMap().keySet();\n+      assertThat(rolesConfigured).containsOnly(TaskanaRole.values());\n \n-    Set<String> users = getConfiguration().getRoleMap().get(TaskanaRole.USER);\n-    assertThat(users).isEmpty();\n+      Set<String> users = getConfiguration().getRoleMap().get(TaskanaRole.USER);\n+      assertThat(users).isEmpty();\n \n-    Set<String> admins = getConfiguration().getRoleMap().get(TaskanaRole.ADMIN);\n-    assertThat(admins).containsOnly(\"holger\", \"name=stefan,organisation=novatec\");\n+      Set<String> admins = getConfiguration().getRoleMap().get(TaskanaRole.ADMIN);\n+      assertThat(admins).containsOnly(\"holger\", \"name=stefan,organisation=novatec\");\n \n-    Set<String> businessAdmins = getConfiguration().getRoleMap().get(TaskanaRole.BUSINESS_ADMIN);\n-    assertThat(businessAdmins).containsOnly(\"name=ebe, ou = bpm\", \"konstantin\");\n+      Set<String> businessAdmins = getConfiguration().getRoleMap().get(TaskanaRole.BUSINESS_ADMIN);\n+      assertThat(businessAdmins).containsOnly(\"name=ebe, ou = bpm\", \"konstantin\");\n+    } finally {\n+      deleteFile(propertiesFileName);\n+    }\n   }\n \n   private String createNewConfigFileWithDifferentDelimiter(String filename, String delimiter)\n       throws IOException {\n-    Path file = Files.createFile(tempDir.resolve(filename));\n-    List<String> lines =\n-        Arrays.asList(\n-            \"taskana.roles.Admin =hOlGeR \" + delimiter + \"name=Stefan,Organisation=novatec\",\n-            \"  taskana.roles.businessadmin  = name=ebe, ou = bpm \" + delimiter + \" konstantin \",\n-            \" taskana.roles.user = \");\n-\n-    Files.write(file, lines, StandardCharsets.UTF_8);\n+    String userHomeDirectroy = System.getProperty(\"user.home\");\n+    String propertiesFileName = userHomeDirectroy + filename;\n+    File f = new File(propertiesFileName);\n+    if (!f.exists()) {\n+      try (PrintWriter writer = new PrintWriter(propertiesFileName, \"UTF-8\")) {\n+        writer.println(\n+            \"taskana.roles.Admin =hOlGeR \" + delimiter + \"name=Stefan,Organisation=novatec\");\n+        writer.println(\n+            \"  taskana.roles.businessadmin  = name=ebe, ou = bpm \" + delimiter + \" konstantin \");\n+        writer.println(\" taskana.roles.user = \");\n+      }\n+    }\n+    return propertiesFileName;\n+  }\n \n-    return file.toString();\n+  private void deleteFile(String propertiesFileName) {\n+    System.out.println(\"about to delete \" + propertiesFileName);", "originalCommit": "707d4881d57abf94be0a861482ac139a610db44f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aa710354c33a372af8396b02c3dcd3959b5c01ff", "url": "https://github.com/Taskana/taskana/commit/aa710354c33a372af8396b02c3dcd3959b5c01ff", "message": "revert of tempdir to fix build on windows machines", "committedDate": "2020-04-27T12:01:00Z", "type": "commit"}]}