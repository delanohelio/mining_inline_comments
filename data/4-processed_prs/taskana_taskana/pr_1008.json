{"pr_number": 1008, "pr_title": "TSK-1179", "pr_createdAt": "2020-04-06T13:06:56Z", "pr_url": "https://github.com/Taskana/taskana/pull/1008", "timeline": [{"oid": "a030aab611261d967cc120e0029354a4d61bd94b", "url": "https://github.com/Taskana/taskana/commit/a030aab611261d967cc120e0029354a4d61bd94b", "message": "TSK-1179", "committedDate": "2020-04-06T13:02:35Z", "type": "commit"}, {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "url": "https://github.com/Taskana/taskana/commit/f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "message": "fixed DB2 ordering issues in QueryTaskWithAttachmentAccTest", "committedDate": "2020-04-09T09:38:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzY3MQ==", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406143671", "bodyText": "Why are you sorting the list?", "author": "mustaphazorgati", "createdAt": "2020-04-09T11:39:04Z", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -73,17 +75,23 @@ void testIfNewTaskHasEmptyAttachmentList() {\n       userName = \"user_1_1\",\n       groupNames = {\"group_1\"})\n   @Test\n-  void testIfAttachmentSummariesAreCorrectUsingTaskQueryAndGetTaskById()\n+  void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTaskById()\n       throws TaskNotFoundException, NotAuthorizedException {\n     TaskService taskService = taskanaEngine.getTaskService();\n     // find Task with ID TKI:00...00\n     List<TaskSummary> tasks =\n         taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000000\").list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))", "originalCommit": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0Mzc5OQ==", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406143799", "bodyText": "why are you sorting the list?", "author": "mustaphazorgati", "createdAt": "2020-04-09T11:39:17Z", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -73,17 +75,23 @@ void testIfNewTaskHasEmptyAttachmentList() {\n       userName = \"user_1_1\",\n       groupNames = {\"group_1\"})\n   @Test\n-  void testIfAttachmentSummariesAreCorrectUsingTaskQueryAndGetTaskById()\n+  void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTaskById()\n       throws TaskNotFoundException, NotAuthorizedException {\n     TaskService taskService = taskanaEngine.getTaskService();\n     // find Task with ID TKI:00...00\n     List<TaskSummary> tasks =\n         taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000000\").list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))\n+            .collect(Collectors.toList());\n \n     Task originalTask = taskService.getTask(\"TKI:000000000000000000000000000000000000\");\n-    List<Attachment> originalAttachments = originalTask.getAttachments();\n+    List<Attachment> originalAttachments =\n+        originalTask.getAttachments().stream()\n+            .sorted(Comparator.comparing(Attachment::getId))", "originalCommit": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDM0MQ==", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406144341", "bodyText": "again, why sorting?", "author": "mustaphazorgati", "createdAt": "2020-04-09T11:40:32Z", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -132,10 +140,16 @@ void testIfAttachmentSummariesAreCorrect()\n             .customAttributeIn(\"1\", \"custom1\")\n             .list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))", "originalCommit": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDQxNQ==", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406144415", "bodyText": "why sorting?", "author": "mustaphazorgati", "createdAt": "2020-04-09T11:40:44Z", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -132,10 +140,16 @@ void testIfAttachmentSummariesAreCorrect()\n             .customAttributeIn(\"1\", \"custom1\")\n             .list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))\n+            .collect(Collectors.toList());\n \n     Task originalTask = taskService.getTask(\"TKI:000000000000000000000000000000000000\");\n-    List<Attachment> originalAttachments = originalTask.getAttachments();\n+    List<Attachment> originalAttachments =\n+        originalTask.getAttachments().stream()\n+            .sorted(Comparator.comparing(Attachment::getId))", "originalCommit": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}