{"pr_number": 843, "pr_title": "TSK-998: Fix simple linting errors", "pr_createdAt": "2020-01-14T12:00:38Z", "pr_url": "https://github.com/Taskana/taskana/pull/843", "timeline": [{"oid": "97ca5415a2a42a47f33ae9d36460aaeed060131c", "url": "https://github.com/Taskana/taskana/commit/97ca5415a2a42a47f33ae9d36460aaeed060131c", "message": "TSK-998: Simple linting changes", "committedDate": "2020-01-14T11:56:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMDEyMg==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366400122", "bodyText": "haha destruct operator for arrays ... very tricky thing for non js devs ;)", "author": "benjamineckstein", "createdAt": "2020-01-14T15:22:11Z", "path": "web/src/app/administration/classification/details/classification-details.component.ts", "diffHunk": "@@ -128,7 +126,7 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n         // TSK-891 fix: The property is already set and is crucial value\n         // Wrapped with an if to set a default if not already set.\n         if (!this.classification.category) {\n-          this.classification.category = categories[0];\n+          [this.classification.category] = categories;", "originalCommit": "97ca5415a2a42a47f33ae9d36460aaeed060131c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyMDcyMA==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366420720", "bodyText": "Yes, it is - i googled twice! ;)", "author": "BVier", "createdAt": "2020-01-14T15:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMDEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMTA1NA==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366401054", "bodyText": "return true is missing? not  needed?", "author": "benjamineckstein", "createdAt": "2020-01-14T15:23:43Z", "path": "web/src/app/administration/classification/details/classification-details.component.ts", "diffHunk": "@@ -224,18 +222,17 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n   }\n \n   private async selectClassification(id: string) {\n-    if (this.classificationIsAlreadySelected()) {\n-      return true;\n+    if (!this.classificationIsAlreadySelected()) {\n+      this.requestInProgress = true;\n+      const classification = await this.classificationsService.getClassification(id);\n+      this.fillClassificationInformation(classification);\n+      this.classificationsService.selectClassification(classification);\n+      this.requestInProgress = false;", "originalCommit": "97ca5415a2a42a47f33ae9d36460aaeed060131c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNTk1Ng==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366425956", "bodyText": "No, because the return value is never catched.", "author": "BVier", "createdAt": "2020-01-14T16:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMTA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMTQ1OQ==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366401459", "bodyText": "returns true & false now. intended?", "author": "benjamineckstein", "createdAt": "2020-01-14T15:24:25Z", "path": "web/src/app/administration/classification/details/classification-details.component.ts", "diffHunk": "@@ -224,18 +222,17 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n   }\n \n   private async selectClassification(id: string) {\n-    if (this.classificationIsAlreadySelected()) {\n-      return true;\n+    if (!this.classificationIsAlreadySelected()) {\n+      this.requestInProgress = true;\n+      const classification = await this.classificationsService.getClassification(id);\n+      this.fillClassificationInformation(classification);\n+      this.classificationsService.selectClassification(classification);\n+      this.requestInProgress = false;\n     }\n-    this.requestInProgress = true;\n-    const classification = await this.classificationsService.getClassification(id);\n-    this.fillClassificationInformation(classification);\n-    this.classificationsService.selectClassification(classification);\n-    this.requestInProgress = false;\n   }\n \n   private classificationIsAlreadySelected(): boolean {\n-    if (this.action === ACTION.CREATE && this.classification) { return true; }\n+    return this.action === ACTION.CREATE && !!this.classification;", "originalCommit": "97ca5415a2a42a47f33ae9d36460aaeed060131c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyMjI3Nw==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366422277", "bodyText": "It's definitely intended because a function should always return a value fro the same type - in this case boolean.", "author": "BVier", "createdAt": "2020-01-14T15:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMTQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMzYwMA==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366403600", "bodyText": "if case not needed??", "author": "benjamineckstein", "createdAt": "2020-01-14T15:28:08Z", "path": "web/src/app/history/task-query/task-query.component.ts", "diffHunk": "@@ -184,13 +183,8 @@ export class TaskQueryComponent implements OnInit {\n       false\n     ).subscribe(taskQueryResource => {\n       this.requestInProgressService.setRequestInProgress(false);\n-      if (!taskQueryResource.taskHistoryEvents) {", "originalCommit": "97ca5415a2a42a47f33ae9d36460aaeed060131c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNDM3MA==", "url": "https://github.com/Taskana/taskana/pull/843#discussion_r366424370", "bodyText": "I inserted the if case by inserting ' = taskQueryResource.taskHistoryEvents ? ...'\nSo we get the same behavior in two lines and without an empty return statement", "author": "BVier", "createdAt": "2020-01-14T16:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwMzYwMA=="}], "type": "inlineReview"}]}