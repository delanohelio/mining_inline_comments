{"pr_number": 213, "pr_title": "KOGITO-1121 - Create advanced example for kogito + serverless workflo\u2026", "pr_createdAt": "2020-04-11T16:04:01Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/213", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUwMTg4NQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407501885", "bodyText": "Same thing here regarding the jar final name", "author": "ricardozanini", "createdAt": "2020-04-13T14:19:22Z", "path": "serverless-workflow-service-calls-quarkus/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Kogito Serverless Workflow - Country Info Services Example\n+\n+## Description\n+\n+This example showcases the use of [Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec) \n+markup to create country information\n+classification workflow. It also showcases how easy it is to create a simple AngularJS app/page \n+which you can use to start workflow instances and show the country information classified by the example\n+workflow.\n+\n+The serverless workflow used in this example expects a name of a country. It then uses an Operation state\n+to execute a function service that retrieves country information given the country name from https://restcountries.eu.\n+It then goes through a Switch state which looks at the provided country population size. The switch state is\n+very simple with just two conditions, namely if population size is less than 20000000 it classifies it as \"Small/Large\",\n+and if greater than 20000000 it classifies it as \"Large\". The workflow send the information to a classification\n+service to store the data before it finishes execution.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/serverless-workflow-service-calls-quarkus-{version}-runner.jar    ", "originalCommit": "87fcf6980d7e912eaaf3ac2a04b8b6a1c37037a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3NTE3MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407575170", "bodyText": "fixed. Thanks!", "author": "tsurdilo", "createdAt": "2020-04-13T16:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUwMTg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODQwMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407878400", "bodyText": "Here we need really just the 'compile', please change so that all examples are in sync.", "author": "jstastny-cz", "createdAt": "2020-04-14T05:37:38Z", "path": "serverless-workflow-service-calls-quarkus/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Kogito Serverless Workflow - Country Info Services Example\n+\n+## Description\n+\n+This example showcases the use of [Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec) \n+markup to create country information\n+classification workflow. It also showcases how easy it is to create a simple AngularJS app/page \n+which you can use to start workflow instances and show the country information classified by the example\n+workflow.\n+\n+The serverless workflow used in this example expects a name of a country. It then uses an Operation state\n+to execute a function service that retrieves country information given the country name from https://restcountries.eu.\n+It then goes through a Switch state which looks at the provided country population size. The switch state is\n+very simple with just two conditions, namely if population size is less than 20000000 it classifies it as \"Small/Large\",\n+and if greater than 20000000 it classifies it as \"Large\". The workflow send the information to a classification\n+service to store the data before it finishes execution.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    ", "originalCommit": "94d6859b1ff59a6492c9f5c30704658d6320adb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MDg3NA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408090874", "bodyText": "fixed thanks.", "author": "tsurdilo", "createdAt": "2020-04-14T12:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODQ2OA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407878468", "bodyText": "Compile -> Package", "author": "jstastny-cz", "createdAt": "2020-04-14T05:37:51Z", "path": "serverless-workflow-service-calls-quarkus/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Kogito Serverless Workflow - Country Info Services Example\n+\n+## Description\n+\n+This example showcases the use of [Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec) \n+markup to create country information\n+classification workflow. It also showcases how easy it is to create a simple AngularJS app/page \n+which you can use to start workflow instances and show the country information classified by the example\n+workflow.\n+\n+The serverless workflow used in this example expects a name of a country. It then uses an Operation state\n+to execute a function service that retrieves country information given the country name from https://restcountries.eu.\n+It then goes through a Switch state which looks at the provided country population size. The switch state is\n+very simple with just two conditions, namely if population size is less than 20000000 it classifies it as \"Small/Large\",\n+and if greater than 20000000 it classifies it as \"Large\". The workflow send the information to a classification\n+service to store the data before it finishes execution.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode", "originalCommit": "94d6859b1ff59a6492c9f5c30704658d6320adb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MDk0Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408090943", "bodyText": "fixed - thanks!", "author": "tsurdilo", "createdAt": "2020-04-14T12:19:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODQ2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODUzMQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407878531", "bodyText": "Compile -> Package", "author": "jstastny-cz", "createdAt": "2020-04-14T05:38:03Z", "path": "serverless-workflow-service-calls-quarkus/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Kogito Serverless Workflow - Country Info Services Example\n+\n+## Description\n+\n+This example showcases the use of [Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec) \n+markup to create country information\n+classification workflow. It also showcases how easy it is to create a simple AngularJS app/page \n+which you can use to start workflow instances and show the country information classified by the example\n+workflow.\n+\n+The serverless workflow used in this example expects a name of a country. It then uses an Operation state\n+to execute a function service that retrieves country information given the country name from https://restcountries.eu.\n+It then goes through a Switch state which looks at the provided country population size. The switch state is\n+very simple with just two conditions, namely if population size is less than 20000000 it classifies it as \"Small/Large\",\n+and if greater than 20000000 it classifies it as \"Large\". The workflow send the information to a classification\n+service to store the data before it finishes execution.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/serverless-workflow-service-calls-quarkus-runner.jar    \n+```\n+\n+or on windows\n+\n+```text\n+mvn clean package\n+java -jar target\\serverless-workflow-service-calls-quarkus-runner.jar\n+```\n+\n+### Compile and Run using Local Native Image", "originalCommit": "94d6859b1ff59a6492c9f5c30704658d6320adb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MTAxNQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408091015", "bodyText": "fixed - thanks!", "author": "tsurdilo", "createdAt": "2020-04-14T12:19:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4MjYzMw==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407882633", "bodyText": "currently there are not native integration tests for quarkus, either add those or we can remove the failsafe configuration (as long as there are not any we'd like to exclude then)", "author": "jstastny-cz", "createdAt": "2020-04-14T05:51:18Z", "path": "serverless-workflow-service-calls-quarkus/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>serverless-workflow-service-calls-quarkus</artifactId>\n+\n+  <name>Kogito Examples :: Serverless Workflow Service Calls :: Quarkus</name>\n+  <description>Kogito Serverless Workflow Example - Quarkus</description>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jsonb</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jsonp</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-rest-client</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.jayway.jsonpath</groupId>\n+      <artifactId>json-path</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <finalName>${project.artifactId}</finalName>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+      </plugin>\n+      <plugin>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-maven-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>build</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <profiles>\n+    <profile>\n+      <id>native</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-maven-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <goals>\n+                  <goal>native-image</goal>\n+                </goals>\n+                <configuration>\n+                  <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+          <plugin>\n+            <artifactId>maven-failsafe-plugin</artifactId>", "originalCommit": "94d6859b1ff59a6492c9f5c30704658d6320adb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4ODgxNQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408088815", "bodyText": "This is present in almost all examples. Should we not create a Jira to remove it from all examples not just 1?", "author": "tsurdilo", "createdAt": "2020-04-14T12:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4MjYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MzU1MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408653550", "bodyText": "Ah, alright. It's not harmful to keep, just not used.", "author": "jstastny-cz", "createdAt": "2020-04-15T08:00:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4MjYzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NDI2Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407884263", "bodyText": "I think we should move the tests to integration-test phase, they rely on an external service.", "author": "jstastny-cz", "createdAt": "2020-04-14T05:56:51Z", "path": "serverless-workflow-service-calls-quarkus/src/test/java/org/kogito/serverless/examples/CountriesResourceTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.kogito.serverless.examples;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+import javax.inject.Inject;\n+\n+\n+@QuarkusTest\n+public class CountriesResourceTest {", "originalCommit": "94d6859b1ff59a6492c9f5c30704658d6320adb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MDE0Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408090147", "bodyText": "this service is present during any of the test phases so not sure i'd agree. Same is done in other examples as well, for example: https://github.com/kiegroup/kogito-examples/tree/stable/kogito-service-rest-call-quarkus/src/test/java/org/acme/travels\nso if we do this lets do it across the board imo?", "author": "tsurdilo", "createdAt": "2020-04-14T12:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NDI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NTU3Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408655573", "bodyText": "See your example:\n@Disabled(\"depends on https://petstore.swagger.io existing users\")\n\nthat's exactly the reason, such external dependency might break the build (especially troubling in CI). Solution would be just to rename the test class file Test-> IT .... failsafe configuration is in place.", "author": "jstastny-cz", "createdAt": "2020-04-15T08:04:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NDI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NDQ4Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r407884483", "bodyText": "I think we should move the tests to integration-test phase, they rely on an external service.", "author": "jstastny-cz", "createdAt": "2020-04-14T05:57:29Z", "path": "serverless-workflow-service-calls-quarkus/src/test/java/org/kogito/serverless/examples/CountryServiceWorkflowTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package org.kogito.serverless.examples;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessInstance;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@QuarkusTest\n+public class CountryServiceWorkflowTest {", "originalCommit": "94d6859b1ff59a6492c9f5c30704658d6320adb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MDMzMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408090330", "bodyText": "same reply as above. let's fix this across all examples if needed ( but don't think its really needed )", "author": "tsurdilo", "createdAt": "2020-04-14T12:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NDQ4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NTc2MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/213#discussion_r408655760", "bodyText": "Same reply as above ;-)", "author": "jstastny-cz", "createdAt": "2020-04-15T08:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4NDQ4Mw=="}], "type": "inlineReview"}, {"oid": "2e28dfe4a3db21336f3768a6c4bef2862b0390fa", "url": "https://github.com/kiegroup/kogito-examples/commit/2e28dfe4a3db21336f3768a6c4bef2862b0390fa", "message": "KOGITO-1121 - Create advanced example for kogito + serverless workflow - quarkus", "committedDate": "2020-04-16T13:57:00Z", "type": "commit"}, {"oid": "c14c89e0bad2ce3b64a87b3ecc1e5d28b7de4c3f", "url": "https://github.com/kiegroup/kogito-examples/commit/c14c89e0bad2ce3b64a87b3ecc1e5d28b7de4c3f", "message": "Fixing pom finalVersion", "committedDate": "2020-04-16T13:57:00Z", "type": "commit"}, {"oid": "cfedf333cceab326736f8ab0c241531eb1751578", "url": "https://github.com/kiegroup/kogito-examples/commit/cfedf333cceab326736f8ab0c241531eb1751578", "message": "updates to readme", "committedDate": "2020-04-16T13:57:00Z", "type": "commit"}, {"oid": "e77505cb0ab617162d930ea564605a58508ab6c0", "url": "https://github.com/kiegroup/kogito-examples/commit/e77505cb0ab617162d930ea564605a58508ab6c0", "message": "changing tests to integration phase", "committedDate": "2020-04-16T13:57:00Z", "type": "commit"}, {"oid": "e77505cb0ab617162d930ea564605a58508ab6c0", "url": "https://github.com/kiegroup/kogito-examples/commit/e77505cb0ab617162d930ea564605a58508ab6c0", "message": "changing tests to integration phase", "committedDate": "2020-04-16T13:57:00Z", "type": "forcePushed"}]}