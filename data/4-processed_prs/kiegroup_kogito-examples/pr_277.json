{"pr_number": 277, "pr_title": "KOGITO-2158: Review and fix kogito examples using persistence profile", "pr_createdAt": "2020-06-16T11:41:58Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/277", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NjQ5MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440786490", "bodyText": "I created this abstraction because if the PR is approved, I'm planning to follow the same approach for Kafka. So, Kafka would reuse the same mechanism to enable/disable the container.", "author": "Sgitario", "createdAt": "2020-06-16T11:43:03Z", "path": "common-example-utils/src/main/java/org/kie/kogito/testcontainers/ConditionalGenericContainer.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers;\n+\n+import java.util.Optional;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Container to be run if and only if it was enabled.\n+ */\n+public abstract class ConditionalGenericContainer<SELF extends GenericContainer<SELF>> extends GenericContainer<SELF> {", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NzQwMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440787400", "bodyText": "Integration tests should use failsafe plugin instead of surefire (which should be used for unit tests only). However, I didn't want to do any unrelated changes as part of this PR.", "author": "Sgitario", "createdAt": "2020-06-16T11:45:01Z", "path": "onboarding-example/onboarding-quarkus/pom.xml", "diffHunk": "@@ -125,6 +130,20 @@\n           <version>${project.version}</version>\n         </dependency>\n       </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-surefire-plugin</artifactId>\n+            <configuration>\n+              <systemPropertyVariables>\n+                <tests.category>persistence</tests.category>\n+                <container.image.infinispan>${container.image.infinispan}</container.image.infinispan>\n+              </systemPropertyVariables>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NTU3OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441245579", "bodyText": "@jstastny-cz should this be a follow-up PR or you happy to be fixed in here.\neither way is fine for me.", "author": "cristianonicolai", "createdAt": "2020-06-17T02:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMTM4MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441321380", "bodyText": "I don't mind either. I'd just create Jira for this and wrap this up quickly. @Sgitario do you have one? If not, please create and link the issue in this comment thread for future reference.", "author": "jstastny-cz", "createdAt": "2020-06-17T06:57:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NzQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5NTY4MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441395680", "bodyText": "Raised https://issues.redhat.com/browse/KOGITO-2467", "author": "Sgitario", "createdAt": "2020-06-17T09:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NzQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4ODA0Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440788047", "bodyText": "I changed the sasl-mechanism to \"PLAIN\" as some tests were failing using DIGEST (a missing property probably). I guess using \"PLAIN\" should be fine.", "author": "Sgitario", "createdAt": "2020-06-16T11:46:20Z", "path": "process-infinispan-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -15,46 +15,32 @@\n  */\n package org.acme.deals;\n \n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n import java.util.Map;\n \n-import io.restassured.RestAssured;\n-import io.restassured.http.ContentType;\n-import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.kie.kogito.persistence.InfinispanContainer;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.web.server.LocalServerPort;\n-import org.testcontainers.containers.FixedHostPortGenericContainer;\n import org.testcontainers.containers.GenericContainer;\n-import org.testcontainers.containers.wait.strategy.Wait;\n import org.testcontainers.junit.jupiter.Container;\n import org.testcontainers.junit.jupiter.Testcontainers;\n \n-import static io.restassured.RestAssured.given;\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.CoreMatchers.notNullValue;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n \n @Testcontainers\n-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, properties = {\n-        \"infinispan.remote.use-auth=true\",\n-        \"infinispan.remote.auth-username=admin\",\n-        \"infinispan.remote.auth-password=admin\",\n-        \"infinispan.remote.sasl-mechanism=DIGEST-MD5\"", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4ODQzNw==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440788437", "bodyText": "I set the SASL mechanism to \"PLAIN\" and added the \"AUTH-REALM\" to \"default\" as some tests did need it to work.", "author": "Sgitario", "createdAt": "2020-06-16T11:47:12Z", "path": "common-example-utils/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Common Utils For Kogito Examples\n+\n+## Infinispan Test Containers Support\n+\n+Add the common utils dependency in the _pom.xml_ file:\n+\n+```xml\n+<dependency>\n+  <groupId>org.kie.kogito</groupId>\n+  <artifactId>common-example-utils</artifactId>\n+  <scope>test</scope>\n+</dependency>\n+```\n+\n+### Usage in a Quarkus test:\n+\n+Example:\n+\n+```java\n+@QuarkusTest\n+@QuarkusTestResource(InfinispanQuarkusResource.class)\n+public class MyTest {\n+   // ...\n+}\n+```\n+\n+And add the Infinispan properties in the _application.properties_:\n+\n+```\n+#Infinispan\n+quarkus.infinispan-client.server-list=localhost:11222\n+quarkus.infinispan-client.use-auth=true\n+quarkus.infinispan-client.auth-username=admin\n+quarkus.infinispan-client.auth-password=admin\n+```\n+\n+In case we want to run the container only if some requirements are met, we need to use it this way:\n+\n+```java\n+@QuarkusTestResource(value = InfinispanQuarkusResource.class, initArgs = {@ResourceArg(name = \"enableIfTestCategoryIs\", value = \"persistence\")})\n+```\n+\n+### Usage in Spring Boot test:\n+\n+\n+```java\n+@Testcontainers\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n+public class MyTest {\n+    @Container\n+    public static GenericContainer<?> INFINISPAN = new InfinispanContainer();\n+    \n+    // ...\n+}\n+```\n+\n+And add the Infinispan properties in the _application.properties_:\n+\n+```\n+# Infinispan\n+infinispan.remote.server-list=localhost:11222\n+infinispan.remote.sasl-mechanism=PLAIN\n+infinispan.remote.auth-server-name=infinispan\n+infinispan.remote.use-auth=true\n+infinispan.remote.auth-realm=default\n+infinispan.remote.auth-username=admin\n+infinispan.remote.auth-password=admin", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4OTg3Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440789876", "bodyText": "I see that this is using TABs, that's why this format issue. Should I reformat the whole file? (I will result in much more changes...)", "author": "Sgitario", "createdAt": "2020-06-16T11:50:00Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/PersonsRestTest.java", "diffHunk": "@@ -32,22 +32,30 @@\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.kie.kogito.Model;\n import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.persistence.InfinispanContainer;\n import org.kie.kogito.process.Process;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.web.server.LocalServerPort;\n import org.springframework.test.annotation.DirtiesContext;\n import org.springframework.test.annotation.DirtiesContext.ClassMode;\n import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n \n import io.restassured.RestAssured;\n import io.restassured.http.ContentType;\n \n+@Testcontainers\n @SuppressWarnings(\"rawtypes\")\n @ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n @DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n public class PersonsRestTest {\n \t\n+    @Container\n+    public static GenericContainer<?> INFINISPAN = new InfinispanContainer().enableIfTestCategoryIs(\"persistence\");\n+", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4OTk1Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r440789952", "bodyText": "I see that this is using TABs, that's why this format issue. Should I reformat the whole file? (I will result in much more changes...)", "author": "Sgitario", "createdAt": "2020-06-16T11:50:09Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -42,12 +43,19 @@\n import org.springframework.test.annotation.DirtiesContext;\n import org.springframework.test.annotation.DirtiesContext.ClassMode;\n import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n \n+@Testcontainers\n @ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n @DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n public class OrdersProcessTest {\n \n+    @Container\n+    public static GenericContainer<?> INFINISPAN = new InfinispanContainer().enableIfTestCategoryIs(\"persistence\");\n+", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NjEyMg==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441246122", "bodyText": "fine as is, probably is best to do a new PR with just the reformat after merging this.", "author": "cristianonicolai", "createdAt": "2020-06-17T02:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4OTk1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NDgxMQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441244811", "bodyText": "please move dependencyManagement to before dependencies for better readbility", "author": "cristianonicolai", "createdAt": "2020-06-17T02:27:45Z", "path": "common-example-utils/pom.xml", "diffHunk": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>common-example-utils</artifactId>\n+\n+  <name>Kogito Examples :: Common Utilities</name>\n+  <description>Common Utilities for Examples</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>compile</scope>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+  </dependencies>\n+  \n+  <dependencyManagement>", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMjk5MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441302991", "bodyText": "done", "author": "Sgitario", "createdAt": "2020-06-17T06:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NDgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NjkyOA==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441246928", "bodyText": "perhaps we should be more clear that this is for test only? Perhaps name it examples-test-common ?", "author": "cristianonicolai", "createdAt": "2020-06-17T02:36:09Z", "path": "common-example-utils/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Common Utils For Kogito Examples\n+\n+## Infinispan Test Containers Support\n+\n+Add the common utils dependency in the _pom.xml_ file:\n+\n+```xml\n+<dependency>\n+  <groupId>org.kie.kogito</groupId>\n+  <artifactId>common-example-utils</artifactId>", "originalCommit": "9b38f2802888984b4571f392081e05dd53348664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMzg4Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/277#discussion_r441303883", "bodyText": "Renamed to \"examples-test-utils\"", "author": "Sgitario", "createdAt": "2020-06-17T06:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NjkyOA=="}], "type": "inlineReview"}, {"oid": "ad75e278c470d2eec08eaa7d8cb13e5a54169faa", "url": "https://github.com/kiegroup/kogito-examples/commit/ad75e278c470d2eec08eaa7d8cb13e5a54169faa", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T06:19:42Z", "type": "forcePushed"}, {"oid": "85dcc49e2e95ae4efd03f3a41f20c8505106a422", "url": "https://github.com/kiegroup/kogito-examples/commit/85dcc49e2e95ae4efd03f3a41f20c8505106a422", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T06:20:14Z", "type": "forcePushed"}, {"oid": "004a1602b4afe31df03fdbef582679098fb9e9b1", "url": "https://github.com/kiegroup/kogito-examples/commit/004a1602b4afe31df03fdbef582679098fb9e9b1", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T07:09:55Z", "type": "forcePushed"}, {"oid": "eb879d091d7826b5420e100e7ce0459e5859eb8d", "url": "https://github.com/kiegroup/kogito-examples/commit/eb879d091d7826b5420e100e7ce0459e5859eb8d", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T09:01:10Z", "type": "commit"}, {"oid": "eb879d091d7826b5420e100e7ce0459e5859eb8d", "url": "https://github.com/kiegroup/kogito-examples/commit/eb879d091d7826b5420e100e7ce0459e5859eb8d", "message": "KOGITO-2158: Review and fix kogito examples using persistence profile", "committedDate": "2020-06-17T09:01:10Z", "type": "forcePushed"}]}