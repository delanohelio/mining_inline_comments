{"pr_number": 199, "pr_title": "[master][KOGITO-1770] Renaming leftovers on README", "pr_createdAt": "2020-04-08T20:39:57Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/199", "timeline": [{"oid": "86b3f231fb8222fc1939d3a036c4f175e2a2bce2", "url": "https://github.com/kiegroup/kogito-examples/commit/86b3f231fb8222fc1939d3a036c4f175e2a2bce2", "message": "[KOGITO-1770] Renaming leftovers on README\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-04-09T15:53:40Z", "type": "forcePushed"}, {"oid": "aa46cb2b4670128ff13cbf7ebadc795f769e1d7b", "url": "https://github.com/kiegroup/kogito-examples/commit/aa46cb2b4670128ff13cbf7ebadc795f769e1d7b", "message": "[KOGITO-1770] Renaming leftovers on README\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-04-13T13:53:47Z", "type": "commit"}, {"oid": "aa46cb2b4670128ff13cbf7ebadc795f769e1d7b", "url": "https://github.com/kiegroup/kogito-examples/commit/aa46cb2b4670128ff13cbf7ebadc795f769e1d7b", "message": "[KOGITO-1770] Renaming leftovers on README\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>", "committedDate": "2020-04-13T13:53:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODYyNQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/199#discussion_r408318625", "bodyText": "SpringBoot here too", "author": "jstastny-cz", "createdAt": "2020-04-14T17:41:17Z", "path": "README.md", "diffHunk": "@@ -18,82 +18,82 @@ Everyone is encouraged to contribute to these examples by\n * using it on conferences and workshops\n \n \n-## Kogito hello world with scripts\n+## Process hello world with scripts\n \n shows most basic use of processes to build up a hello world example\n \n-* [on Quarkus](kogito-scripts-quarkus)\n-* [on SpringBoot](kogito-scripts-springboot)\n+* [on Quarkus](process-scripts-quarkus)\n+* [on Spring Boot](process-scripts-springboot)\n \n \n-## Kogito with business rules\n+## Process with business rules\n \n shows integration between processes and rules.\n \n-* [on Quarkus](kogito-business-rules-quarkus)\n-* [on SpringBoot](kogito-business-rules-springboot)\n+* [on Quarkus](process-business-rules-quarkus)\n+* [on Spring Boot](process-business-rules-springboot)\n \n \n-## Kogito with Kafka\n+## Process with Kafka\n \n shows how message start and end events can be easily used to integrate with Apache Kafka to consume where\n message name is the Kafka topic and the payload is mapped to process variable. Uses custom types\n that are serialized into JSON.\n \n-* [on Quarkus](kogito-kafka-quickstart-quarkus)\n-* [on SpringBoot](kogito-kafka-quickstart-springboot)\n+* [on Quarkus](process-kafka-quickstart-quarkus)\n+* [on Spring Boot](process-kafka-quickstart-springboot)\n \n-## Kogito with Infinispan persistence\n+## Process with Infinispan persistence\n \n shows long running processes with Infinispan persistence so the state of process instances can\n be preserved across service restarts.\n \n-* [on Quarkus](kogito-infinispan-persistence-quarkus)\n-* [on SpringBoot](kogito-infinispan-persistence-springboot)\n+* [on Quarkus](process-infinispan-persistence-quarkus)\n+* [on Spring Boot](process-infinispan-persistence-springboot)\n \n-## Kogito with service invocation\n+## Process with service invocation\n \n shows how easy it is to use local services to be invoked from within process. Allows easy and readable\n service invocation use cases to be covered.\n \n-* [on Quarkus](kogito-service-calls-quarkus)\n-* [on SpringBoot](kogito-service-calls-springboot)\n+* [on Quarkus](process-service-calls-quarkus)\n+* [on Spring Boot](process-service-calls-springboot)\n \n-## Kogito with REST call\n+## Process with REST call\n \n shows REST service invocation and parsing data back to an object instance used as process variable.\n \n-* [on Quarkus](kogito-service-rest-call-quarkus)\n-* [on SpringBoot](kogito-service-rest-call-springboot)\n+* [on Quarkus](process-service-rest-call-quarkus)\n+* [on Spring Boot](process-service-rest-call-springboot)\n \n-## Kogito with user tasks\n+## Process with user tasks\n \n shows user task interactions with four eye principle applied\n \n-* [on Quarkus](kogito-usertasks-quarkus)\n-* [on SpringBoot](kogito-usertasks-springboot)\n+* [on Quarkus](process-usertasks-quarkus)\n+* [on Spring Boot](process-usertasks-springboot)\n \n-## Kogito with user tasks based on custom life cycle\n+## Process with user tasks based on custom life cycle\n \n shows user task interactions with four eye principle applied that supports custom life cycle that allows to\n add additional phases to user tasks to indicate other states.\n \n-* [on Quarkus](kogito-usertasks-custom-lifecycle-quarkus)\n-* [on SpringBoot](kogito-usertasks-custom-lifecycle-springboot)\n+* [on Quarkus](process-usertasks-custom-lifecycle-quarkus)\n+* [on Spring Boot](process-usertasks-custom-lifecycle-springboot)\n \n-## Kogito with user tasks with security on REST api\n+## Process with user tasks with security on REST api\n \n shows user task interactions with four eye principle applied with security restrictions on REST api.\n \n-* [on Quarkus](kogito-usertasks-with-security-quarkus)\n-* [on SpringBoot](kogito-usertasks-with-security-springboot)\n+* [on Quarkus](process-usertasks-with-security-quarkus)\n+* [on SpringBoot](process-usertasks-with-security-springboot)", "originalCommit": "aa46cb2b4670128ff13cbf7ebadc795f769e1d7b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODgwOA==", "url": "https://github.com/kiegroup/kogito-examples/pull/199#discussion_r408318808", "bodyText": "SpringBoot here still", "author": "jstastny-cz", "createdAt": "2020-04-14T17:41:33Z", "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -9,7 +9,7 @@\n   <groupId>org.kie.kogito.examples</groupId>\n   <artifactId>process-springboot-example</artifactId>\n \n-  <name>Kogito Example :: Kogito and SpringBoot</name>\n+  <name>Kogito Example :: Process and SpringBoot</name>", "originalCommit": "aa46cb2b4670128ff13cbf7ebadc795f769e1d7b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8d169e47b19f476e5a74dd98e76b81b901a79151", "url": "https://github.com/kiegroup/kogito-examples/commit/8d169e47b19f476e5a74dd98e76b81b901a79151", "message": "fixing spring boot naming", "committedDate": "2020-04-14T18:27:58Z", "type": "commit"}, {"oid": "d09c3b4fc21069c0ad8e01e8d02b832c29c907ce", "url": "https://github.com/kiegroup/kogito-examples/commit/d09c3b4fc21069c0ad8e01e8d02b832c29c907ce", "message": "fixing readme springboot", "committedDate": "2020-04-14T18:29:18Z", "type": "commit"}]}