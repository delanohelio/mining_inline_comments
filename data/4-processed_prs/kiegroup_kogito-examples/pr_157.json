{"pr_number": 157, "pr_title": "Quarkus version of the spring-boot flight example.", "pr_createdAt": "2020-03-20T19:38:14Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/157", "timeline": [{"oid": "20ecf9a0d67e5619d7a587e2617d169ba617c2f9", "url": "https://github.com/kiegroup/kogito-examples/commit/20ecf9a0d67e5619d7a587e2617d169ba617c2f9", "message": "Begin work on the Quarkus version of the spring-boot flight example.", "committedDate": "2020-03-20T19:34:34Z", "type": "commit"}, {"oid": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "url": "https://github.com/kiegroup/kogito-examples/commit/7e822cc882407ff1ec3869ae6fc22ff30358c352", "message": "Fix CSS styling by including version in path.", "committedDate": "2020-03-20T19:41:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MTc5Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395971797", "bodyText": "Let's remove these 4 lines.", "author": "ge0ffrey", "createdAt": "2020-03-21T07:54:35Z", "path": "jbpm-optaplanner-quarkus-example/.gitignore", "diffHunk": "@@ -0,0 +1,32 @@\n+bin/\n+/target\n+/local\n+\n+# Eclipse, Netbeans and IntelliJ files\n+/.*\n+!.gitignore\n+/nbproject\n+/*.ipr\n+/*.iws\n+/*.iml\n+\n+# Repository wide ignore mac DS_Store files\n+.DS_Store\n+\n+# Original jbpm ignores\n+*~\n+\n+# Test info\n+/settings*.xml\n+/lib-jdbc/\n+*.db\n+*.tlog\n+\n+# modules that don't exist in this branch\n+/jbpm-human-task-war/\n+/jbpm-bam/\n+/jbpm-gwt/", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MTgwNA==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395971804", "bodyText": "Let's remove these 3 lines", "author": "ge0ffrey", "createdAt": "2020-03-21T07:54:45Z", "path": "jbpm-optaplanner-quarkus-example/.gitignore", "diffHunk": "@@ -0,0 +1,32 @@\n+bin/\n+/target\n+/local\n+\n+# Eclipse, Netbeans and IntelliJ files\n+/.*\n+!.gitignore\n+/nbproject\n+/*.ipr\n+/*.iws\n+/*.iml\n+\n+# Repository wide ignore mac DS_Store files\n+.DS_Store\n+\n+# Original jbpm ignores\n+*~\n+\n+# Test info\n+/settings*.xml\n+/lib-jdbc/\n+*.db\n+*.tlog\n+\n+# modules that don't exist in this branch\n+/jbpm-human-task-war/\n+/jbpm-bam/\n+/jbpm-gwt/\n+\n+# files used for external db testing\n+jdbc_driver.jar\n+db-settings.xml", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MTgwOQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395971809", "bodyText": "Let's remove these 5 lines", "author": "ge0ffrey", "createdAt": "2020-03-21T07:54:56Z", "path": "jbpm-optaplanner-quarkus-example/.gitignore", "diffHunk": "@@ -0,0 +1,32 @@\n+bin/\n+/target\n+/local\n+\n+# Eclipse, Netbeans and IntelliJ files\n+/.*\n+!.gitignore\n+/nbproject\n+/*.ipr\n+/*.iws\n+/*.iml\n+\n+# Repository wide ignore mac DS_Store files\n+.DS_Store\n+\n+# Original jbpm ignores\n+*~\n+\n+# Test info\n+/settings*.xml\n+/lib-jdbc/\n+*.db\n+*.tlog", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjE3Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972172", "bodyText": "Actually, non of the other examples in this repo have a .gitignore file, let's remove this file entirely.\nThere are basically 2 ways to deal with .gitignore:\nA) a single root .gitignore file that says to exclude all \"target\" and \".idea\" directories, in any subdirectory.\nB) a .gitingore file per module tot exclude \"/target\" in this directory only.\nPro/con: B) is more work, but A) is more error prone (think java package org.foo.target.goal)\nThis repository is employing tactic A), so this PR should adhere to that and not have a .gitignore file here.", "author": "ge0ffrey", "createdAt": "2020-03-21T08:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MTgwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjIwNQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972205", "bodyText": "do a \"find in directory\" for \"spring\" :)", "author": "ge0ffrey", "createdAt": "2020-03-21T08:01:38Z", "path": "jbpm-optaplanner-quarkus-example/README.md", "diffHunk": "@@ -0,0 +1,341 @@\n+# jBPM + OptaPlanner + SpringBoot example", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjI1OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972259", "bodyText": "Does the quarkus version support swagger too?\n\"You can take a look at ...\" -> \"Take a look at ...\"", "author": "ge0ffrey", "createdAt": "2020-03-21T08:02:37Z", "path": "jbpm-optaplanner-quarkus-example/README.md", "diffHunk": "@@ -0,0 +1,341 @@\n+# jBPM + OptaPlanner + SpringBoot example\n+\n+## Description\n+\n+A simple process service for an airline scheduling flights and optimizing seat\n+assignments using OptaPlanner.\n+\n+It uses an event-based subprocess to simulate\n+passengers buying tickets, who the airline security officer must approve via\n+a user task before the passenger is allowed to get a ticket.\n+\n+The main process waits for a user task to be completed to finalize the passenger list.\n+It then invokes a custom Java service `FlightSeatingSolveService.assignSeats`\n+to optimize the flight's seats following the rules in `FlightSeatingConstraintProvider`\n+using OptaPlanner's, followed by a user task to finalize seat assignments.\n+\n+Based on these two processes (defined using BPMN 2.0 format), the custom data object\n+and custom Java service, a new service is generated that exposes REST operations to\n+create new flights (following the steps as defined in the main and sub-process)\n+and add passengers to flights.\n+\n+A UI is included in this example, which can be accessed on `localhost:8080`\n+when the application is running.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+\n+You will need:\n+  - Java 1.8.0+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.5.4+ installed\n+\n+## Installing and Running\n+\n+```\n+mvn clean package spring-boot:run    \n+```\n+\n+## Swagger documentation\n+\n+You can take a look at the [swagger definition](http://localhost:8080/swagger.json) - automatically generated and included in this service - to determine all available operations exposed by this service.  For easy readability you can visualize the swagger definition file using a swagger UI like for example available [here](https://editor.swagger.io). In addition, various clients to interact with this service can be easily generated using this swagger definition.", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2MDIyNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396560226", "bodyText": "jbpm-quarkus-example/README.md  also mentions Swagger, but doesn't have Swagger in the pom.xml (nor anything swagger related in resources)", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T15:56:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjI1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NzExOQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r412977119", "bodyText": "you have to add the OpenAPI Quarkus extension. You can also set it to always enabled (otherwise it's only available in devmode)", "author": "evacchi", "createdAt": "2020-04-22T13:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjM4Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972383", "bodyText": "This dependency is wierd.\nIn a quarkus world, depending on the quakus extensions alone should be enough. Can we remove this dependency?", "author": "ge0ffrey", "createdAt": "2020-03-21T08:05:08Z", "path": "jbpm-optaplanner-quarkus-example/pom.xml", "diffHunk": "@@ -0,0 +1,236 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>jbpm-optaplanner-quarkus-example</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n+  <description>Flight assignment process and optimization</description>\n+\n+  <properties>\n+    <version.org.optaplanner>7.33.0.Final</version.org.optaplanner>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>javax</groupId>\n+        <artifactId>javaee-api</artifactId>\n+        <version>8.0</version>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzNTcwNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396435706", "bodyText": "Just tested, we can; unrelated, IDE cannot find Optaplanner, talks about missing dependency version for the OptaPlanner extensions; it compiles and runs fine though.", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T13:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjM4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjU2MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972561", "bodyText": "The optaplanner-quickstart for quarkus doesn't have this dependency, because we couldn't get that to work.\n\nDo a diff between this pom and the optaplanner-quickstart pom to verify there is nothing in here that you don't need\nIf you can get the locator to work, such as the js file urls don't have a version number, that would be great (out of scope for this PR to get it merged asap I would argue) and then we'd like to consider that for the optaplanner-quickstart example too :) I do suspect that's just a missing feature of quarkus...", "author": "ge0ffrey", "createdAt": "2020-03-21T08:07:49Z", "path": "jbpm-optaplanner-quarkus-example/pom.xml", "diffHunk": "@@ -0,0 +1,236 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>jbpm-optaplanner-quarkus-example</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n+  <description>Flight assignment process and optimization</description>\n+\n+  <properties>\n+    <version.org.optaplanner>7.33.0.Final</version.org.optaplanner>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>javax</groupId>\n+        <artifactId>javaee-api</artifactId>\n+        <version>8.0</version>\n+        <scope>provided</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.optaplanner</groupId>\n+        <artifactId>optaplanner-bom</artifactId>\n+        <version>${version.org.optaplanner}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>webjars-locator</artifactId>\n+        <version>0.37</version>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1MjYxMQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396652611", "bodyText": "I doubt we can get the locator to work due to how webjars work in Quarkus. Quarkus put webjars in target/lib and reference them in the META-INF/MANIFEST.MF's Class-Path.\nMeanwhile, Spring Boot put the webjars directly in BOOT-INF/lib/.\nFrom what I see in Spring, Spring doesn't actually use the webjar-locator, but rather use its existance as a trigger to server versionless resources instead of versioned resources via https://github.com/spring-projects/spring-boot/blob/7f509bf84e9b51416ce65a777a3b5b2521921a6f/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java#L299-L317", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T18:06:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1ODg0Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396658847", "bodyText": "(the condition: https://github.com/spring-projects/spring-boot/blob/aef92b9295f62d008faa9ab79905a474bf3496f3/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/OnEnabledResourceChainCondition.java)\nand the customizer:\nhttps://github.com/spring-projects/spring-boot/blob/7f509bf84e9b51416ce65a777a3b5b2521921a6f/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java#L519-L557", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T18:16:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4ODMwOQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396688309", "bodyText": "My guess is we can either add a new quarkus extension for this or add the functionality to the resteasy extension.", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T19:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDQ4Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r398530486", "bodyText": "Great work on building that new quarkus extension. This PR can't wait for the quarkus 1.4 release (which hopefully has the webjar extension), so +1 to workaround it for now. Do create a jira to remove that workaround in this example once quarkus 1.4 is released.", "author": "ge0ffrey", "createdAt": "2020-03-26T12:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjU2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjYzNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972636", "bodyText": "Move this quarkus-optaplanner-jackson directly under the optaplanner one, it's easier to read. (Code is read 10 times more than it is written, so readability matters).", "author": "ge0ffrey", "createdAt": "2020-03-21T08:09:03Z", "path": "jbpm-optaplanner-quarkus-example/pom.xml", "diffHunk": "@@ -0,0 +1,236 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>jbpm-optaplanner-quarkus-example</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n+  <description>Flight assignment process and optimization</description>\n+\n+  <properties>\n+    <version.org.optaplanner>7.33.0.Final</version.org.optaplanner>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>javax</groupId>\n+        <artifactId>javaee-api</artifactId>\n+        <version>8.0</version>\n+        <scope>provided</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.optaplanner</groupId>\n+        <artifactId>optaplanner-bom</artifactId>\n+        <version>${version.org.optaplanner}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>webjars-locator</artifactId>\n+        <version>0.37</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>bootstrap</artifactId>\n+        <version>4.3.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery</artifactId>\n+        <version>3.4.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>font-awesome</artifactId>\n+        <version>5.11.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>momentjs</artifactId>\n+        <version>2.24.0</version>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jackson</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner-jackson</artifactId>\n+    </dependency>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2NjI1NQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396566255", "bodyText": "Previous reasoning was to have all jackson modules grouped together (there are three: quarkus-jackson, resteasy-jackson, and optaplanner-jackson); moved it under optaplanner.", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T16:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjYzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjY0NA==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972644", "bodyText": "Can we remove this one?", "author": "ge0ffrey", "createdAt": "2020-03-21T08:09:14Z", "path": "jbpm-optaplanner-quarkus-example/pom.xml", "diffHunk": "@@ -0,0 +1,236 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>jbpm-optaplanner-quarkus-example</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n+  <description>Flight assignment process and optimization</description>\n+\n+  <properties>\n+    <version.org.optaplanner>7.33.0.Final</version.org.optaplanner>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>javax</groupId>\n+        <artifactId>javaee-api</artifactId>\n+        <version>8.0</version>\n+        <scope>provided</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.optaplanner</groupId>\n+        <artifactId>optaplanner-bom</artifactId>\n+        <version>${version.org.optaplanner}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>webjars-locator</artifactId>\n+        <version>0.37</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>bootstrap</artifactId>\n+        <version>4.3.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery</artifactId>\n+        <version>3.4.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>font-awesome</artifactId>\n+        <version>5.11.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>momentjs</artifactId>\n+        <version>2.24.0</version>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jackson</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>javax</groupId>\n+      <artifactId>javaee-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjczMw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972733", "bodyText": "Not needed, remove these 4 lines.\nBtw: any comment here, please also check the springboot example for that and if it applies there too (and it's not exceptionally different like the webjar locator which is supported there) then adjust it there too please. So if this commented out code is there, remove it please there too.", "author": "ge0ffrey", "createdAt": "2020-03-21T08:10:54Z", "path": "jbpm-optaplanner-quarkus-example/pom.xml", "diffHunk": "@@ -0,0 +1,236 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>jbpm-optaplanner-quarkus-example</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n+  <description>Flight assignment process and optimization</description>\n+\n+  <properties>\n+    <version.org.optaplanner>7.33.0.Final</version.org.optaplanner>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>javax</groupId>\n+        <artifactId>javaee-api</artifactId>\n+        <version>8.0</version>\n+        <scope>provided</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.optaplanner</groupId>\n+        <artifactId>optaplanner-bom</artifactId>\n+        <version>${version.org.optaplanner}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>webjars-locator</artifactId>\n+        <version>0.37</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>bootstrap</artifactId>\n+        <version>4.3.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery</artifactId>\n+        <version>3.4.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>font-awesome</artifactId>\n+        <version>5.11.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>momentjs</artifactId>\n+        <version>2.24.0</version>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jackson</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>javax</groupId>\n+      <artifactId>javaee-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <!-- Testing -->\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <!-- JavaScript libraries for frontend -->\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>webjars-locator</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>bootstrap</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>font-awesome</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>momentjs</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-maven-plugin</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>build</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      <!-- <plugin>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-maven-plugin</artifactId>\n+        <extensions>true</extensions>\n+      </plugin> -->", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2NjgxOA==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396566818", "bodyText": "Not there; this code is needed for spring boot, but not for Quarkus.", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T16:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MjczMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjc1MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972750", "bodyText": "Does this work with Quarkus? :)", "author": "ge0ffrey", "createdAt": "2020-03-21T08:11:21Z", "path": "jbpm-optaplanner-quarkus-example/pom.xml", "diffHunk": "@@ -0,0 +1,236 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>jbpm-optaplanner-quarkus-example</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n+  <description>Flight assignment process and optimization</description>\n+\n+  <properties>\n+    <version.org.optaplanner>7.33.0.Final</version.org.optaplanner>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>javax</groupId>\n+        <artifactId>javaee-api</artifactId>\n+        <version>8.0</version>\n+        <scope>provided</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.optaplanner</groupId>\n+        <artifactId>optaplanner-bom</artifactId>\n+        <version>${version.org.optaplanner}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>webjars-locator</artifactId>\n+        <version>0.37</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>bootstrap</artifactId>\n+        <version>4.3.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery</artifactId>\n+        <version>3.4.1</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>font-awesome</artifactId>\n+        <version>5.11.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>momentjs</artifactId>\n+        <version>2.24.0</version>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jackson</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner-jackson</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>javax</groupId>\n+      <artifactId>javaee-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <!-- Testing -->\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <!-- JavaScript libraries for frontend -->\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>webjars-locator</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>bootstrap</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>font-awesome</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>momentjs</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-maven-plugin</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>build</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      <!-- <plugin>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-maven-plugin</artifactId>\n+        <extensions>true</extensions>\n+      </plugin> -->\n+      <plugin>\n+        <groupId>io.openapitools.swagger</groupId>\n+        <artifactId>swagger-maven-plugin</artifactId>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzOTc3NA==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396439774", "bodyText": "Nope, got a JSON with only title and version after changing the location. Removing.", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T13:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjc1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjg2NQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972865", "bodyText": "Are business intelligent equals/hashCode methods needed for the quarkus and spring boot example to work?\nLess is more: if it works without these methods on the domain objects, please remove them, otherwise users think they are crucial.", "author": "ge0ffrey", "createdAt": "2020-03-21T08:13:17Z", "path": "jbpm-optaplanner-quarkus-example/src/main/java/org/kie/kogito/examples/domain/Seat.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.kie.kogito.examples.domain;\n+\n+import java.util.Objects;\n+\n+import org.optaplanner.core.api.domain.lookup.PlanningId;\n+\n+public class Seat {\n+\n+    @PlanningId\n+    private final String name;\n+    private final int row;\n+    private final int column;\n+    private final SeatType seatType;\n+    private final boolean emergencyExitRow;\n+\n+    public Seat(int row, int column, SeatType seatType, boolean emergencyExitRow) {\n+        this.row = row;\n+        this.column = column;\n+        // ASCII has a nice property: The English Alphabet are placed in consecutive\n+        // ASCII codes. So 'B' is immediately after 'A', 'C' is immediately after 'B',\n+        // etc. So 'A' + n = nth letter of the alphabet.\n+        // Name is row number (starting at 1) + column letter (starting at 'A').  \n+        this.name = (row + 1) + Character.toString((char) ('A' + column));\n+        this.seatType = seatType;\n+        this.emergencyExitRow = emergencyExitRow;\n+    }\n+\n+    // ************************************************************************\n+    // Getters and setters\n+    // ************************************************************************\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getRow() {\n+        return row;\n+    }\n+\n+    public int getColumn() {\n+        return column;\n+    }\n+\n+    public SeatType getSeatType() {\n+        return seatType;\n+    }\n+\n+    public boolean isEmergencyExitRow() {\n+        return emergencyExitRow;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (o instanceof Seat) {\n+            Seat other = (Seat) o;\n+            // Name is computed based on row and column and thus does not need to be checked.\n+            // (seatType is based on column and emergencyExitRow is based on row, but not guaranteed\n+            // by API (we need to know row and column length to calculate this here))\n+            return this.row == other.row &&\n+                    this.column == other.column &&\n+                    this.seatType.equals(other.getSeatType()) &&\n+                    this.emergencyExitRow == other.emergencyExitRow;\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        // Name is computed based on row and column and thus does not need to be included in the hash.\n+        return Objects.hash(row, column, seatType, emergencyExitRow);\n+    }", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0NTMzOA==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396445338", "bodyText": "Not needed; @triceo advocated for it since Seat is immutable. Curious, how does OptaPlanner handles equals but not is (that is, x.equals(y) but not x == y)? If I pin a passenger to a Seat that is not a Seat on the Flight, but rather a Seat equal to a Seat on the Flight, will there be no adverse side effects (the Seat won't be in a Problem Fact Collection)?", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T13:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0Njc3MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r396446771", "bodyText": "(If it handled well,\n            String[] seatLoc = passenger.getSeat().split(\";\");\n            int row = Integer.parseInt(seatLoc[0]);\n            int col = Integer.parseInt(seatLoc[1]);\n            seat = flight.getSeatList().stream().filter(s -> s.getRow() == row && s.getColumn() == col).findAny().get();\n\ncan be removed and we can just access the Seat directly from the DTO.", "author": "Christopher-Chianelli", "createdAt": "2020-03-23T13:24:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyODkzNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r398528936", "bodyText": "OptaPlanner expects that given the following input:\n- Rooms [A, B]\n- Lessons [ {Math, room: A}, {French, room: A}]\n\nthat all those A instances are the same instance. (That's btw that in JPA the rooms and lessons need to be fetched in the same transaction).\nThen, the output of OptaPlanner also respects this philosophy. Basically, a solution will never have 2 room A instances. Or two seat instances. (Even if planning cloning happens that still holds true) So default Object.hashCode/equals() suffices. Less code is better than more code.", "author": "ge0ffrey", "createdAt": "2020-03-26T12:21:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjg2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3Mjk0MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395972941", "bodyText": "Oh yes, I need to prioritize PLANNER-1868 so there's no need to do \"new Thread\". Let's merge this as is and feel free to remind me about 1868 if I haven't fixed that next week.", "author": "ge0ffrey", "createdAt": "2020-03-21T08:15:03Z", "path": "jbpm-optaplanner-quarkus-example/src/main/java/org/kie/kogito/examples/service/FlightSeatingSolveService.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.kie.kogito.examples.service;\n+\n+import java.util.concurrent.ExecutionException;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Qualifier;\n+\n+import org.kie.kogito.examples.domain.Flight;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.impl.Sig;\n+import org.optaplanner.core.api.solver.SolverJob;\n+import org.optaplanner.core.api.solver.SolverManager;\n+\n+@ApplicationScoped\n+public class FlightSeatingSolveService {\n+\n+    @Inject\n+    SolverManager<Flight, String> solverManager;\n+\n+    @Inject\n+    @Named(\"flights\")\n+    Process<?> process;\n+\n+    public void assignSeats(String id, Flight problem) {\n+        SolverJob<Flight, String> solverJob = solverManager.solveAndListen(id, (problemId) -> problem, (bestSolution) -> {\n+            process.instances().findById(id).ifPresent(pi -> {\n+                pi.send(Sig.of(\"newSolution\", bestSolution));\n+            });\n+        });\n+\n+        // TODO: Workaround for https://issues.redhat.com/browse/PLANNER-1868\n+        // Wait for solving to finish in new thread (so we don't block the return)\n+        new Thread(() -> {\n+            try {\n+                Flight finalBestSolution = solverJob.getFinalBestSolution();\n+                process.instances().findById(id).ifPresent(pi -> {\n+                    pi.send(Sig.of(\"solvingTerminated\", finalBestSolution));\n+                });\n+            } catch (InterruptedException | ExecutionException e) {\n+                e.printStackTrace();\n+            }\n+        }).start();", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MzAyNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395973026", "bodyText": "we might want to do this in \"milis\" or maybe not. Something to discuss, please bring this subject up in our next sync-up so I can explain the \"milis\" approach and we can determine if it's needed here.", "author": "ge0ffrey", "createdAt": "2020-03-21T08:16:48Z", "path": "jbpm-optaplanner-quarkus-example/src/main/java/org/kie/kogito/examples/solver/FlightSeatingConstraintProvider.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.kie.kogito.examples.solver;\n+\n+import org.kie.kogito.examples.domain.FlightInfo;\n+import org.kie.kogito.examples.domain.Passenger;\n+import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n+import org.optaplanner.core.api.score.stream.Constraint;\n+import org.optaplanner.core.api.score.stream.ConstraintCollectors;\n+import org.optaplanner.core.api.score.stream.ConstraintFactory;\n+import org.optaplanner.core.api.score.stream.ConstraintProvider;\n+\n+import static org.optaplanner.core.api.score.stream.Joiners.equal;\n+\n+import java.awt.geom.Point2D;\n+\n+public class FlightSeatingConstraintProvider implements ConstraintProvider {\n+\n+    @Override\n+    public Constraint[] defineConstraints(ConstraintFactory factory) {\n+        return new Constraint[]{\n+                seatConflict(factory),\n+                emergencyExitRow(factory),\n+                seatTypePreference(factory),\n+                planeBalance(factory)\n+        };\n+    }\n+\n+    private Constraint seatConflict(ConstraintFactory factory) {\n+        return factory\n+                .fromUniquePair(Passenger.class, equal(Passenger::getSeat))\n+                .penalize(\"Seat conflict\", HardSoftScore.ONE_HARD);\n+    }\n+\n+    private Constraint emergencyExitRow(ConstraintFactory factory) {\n+        return factory\n+                .from(Passenger.class)\n+                .filter(passenger -> passenger.getSeat().isEmergencyExitRow()\n+                        && !passenger.isEmergencyExitRowCapable())\n+                .penalize(\"Emergency exit row has incapable passenger\", HardSoftScore.ONE_HARD);\n+    }\n+\n+    private Constraint seatTypePreference(ConstraintFactory factory) {\n+        return factory\n+                .from(Passenger.class)\n+                .filter(passenger -> passenger.getSeat().getSeatType().violatesPreference(\n+                        passenger.getSeatTypePreference()))\n+                .penalize(\"Seat type preference\", HardSoftScore.ONE_SOFT);\n+    }\n+\n+    private Constraint planeBalance(ConstraintFactory factory) {\n+        return factory.from(Passenger.class).groupBy(ConstraintCollectors.sum(p -> p.getSeat().getColumn()))\n+                .join(factory.from(Passenger.class).groupBy(ConstraintCollectors.sum(p -> p.getSeat().getRow())))\n+                .join(factory.from(Passenger.class).groupBy(ConstraintCollectors.count()))\n+                .join(FlightInfo.class)\n+                .penalize(\"Plane Balance\", HardSoftScore.ONE_SOFT, (totalX, totalY, passengerCount, flightInfo) -> {\n+                    double localTotalX = totalX - passengerCount * ((flightInfo.getSeatColumnSize() / 2.0) - 0.5);\n+                    double localTotalY = totalY - passengerCount * ((flightInfo.getSeatRowSize() / 2.0) - 0.5);\n+                    double averageX = localTotalX / passengerCount;\n+                    double averageY = localTotalY / passengerCount;\n+                    return (int) Math.round(Point2D.distance(0, 0, averageX, averageY) * passengerCount * 100);", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MzA0Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395973043", "bodyText": "ctrl-shift-f is your friend :)", "author": "ge0ffrey", "createdAt": "2020-03-21T08:17:19Z", "path": "jbpm-optaplanner-quarkus-example/src/main/resources/META-INF/resources/index.html", "diffHunk": "@@ -0,0 +1,171 @@\n+<html lang=\"en\">\n+<head>\n+    <meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\">\n+    <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n+    <title>OptaPlanner Spring Boot example</title>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3MzE0Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r395973147", "bodyText": "Quarkus First :) Please move this line one line up.", "author": "ge0ffrey", "createdAt": "2020-03-21T08:18:45Z", "path": "pom.xml", "diffHunk": "@@ -129,6 +129,7 @@\n     <module>jbpm-quarkus-example</module>\n     <module>jbpm-springboot-example</module>\n     <module>jbpm-optaplanner-springboot-example</module>\n+    <module>jbpm-optaplanner-quarkus-example</module>", "originalCommit": "7e822cc882407ff1ec3869ae6fc22ff30358c352", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7a92e71eaca8df60b771df22a9b1ee24d76312b1", "url": "https://github.com/kiegroup/kogito-examples/commit/7a92e71eaca8df60b771df22a9b1ee24d76312b1", "message": "Remove .gitignore, remove unrequired dependencies, remove Spring Boot references", "committedDate": "2020-03-23T16:00:10Z", "type": "commit"}, {"oid": "76c1d0a32520c365c2035fbe9cf3a06db6728478", "url": "https://github.com/kiegroup/kogito-examples/commit/76c1d0a32520c365c2035fbe9cf3a06db6728478", "message": "Remove --allow-incomplete-classpath flag since the missing method\nwas backported to Drools.", "committedDate": "2020-03-24T14:53:18Z", "type": "commit"}, {"oid": "223c8d849e44db6e1df2aaf7ad3785ec0f493b37", "url": "https://github.com/kiegroup/kogito-examples/commit/223c8d849e44db6e1df2aaf7ad3785ec0f493b37", "message": "Merge branch 'master' into quarkus-flight-example", "committedDate": "2020-04-09T18:12:41Z", "type": "commit"}, {"oid": "8ce77b40cb1692c5f7fab93483ddc0e919cfefce", "url": "https://github.com/kiegroup/kogito-examples/commit/8ce77b40cb1692c5f7fab93483ddc0e919cfefce", "message": "Merge branch 'master' into quarkus-flight-example", "committedDate": "2020-04-15T17:26:18Z", "type": "commit"}, {"oid": "fa4648155e8c9c660ab91caf59772d9b645ecd4e", "url": "https://github.com/kiegroup/kogito-examples/commit/fa4648155e8c9c660ab91caf59772d9b645ecd4e", "message": "Add tests for both JVM and native mode for process-optaplanner-quarkus.", "committedDate": "2020-04-16T21:25:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MTQ5OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r412971499", "bodyText": "align prerequisites to the rest of the repo (java 11, maven 3.6.x)", "author": "evacchi", "createdAt": "2020-04-22T13:15:11Z", "path": "process-optaplanner-quarkus/README.md", "diffHunk": "@@ -0,0 +1,358 @@\n+# jBPM + OptaPlanner + Quarkus example\n+\n+## Description\n+\n+A simple process service for an airline scheduling flights and optimizing seat\n+assignments using OptaPlanner.\n+\n+It uses an event-based subprocess to simulate\n+passengers buying tickets, who the airline security officer must approve via\n+a user task before the passenger is allowed to get a ticket.\n+\n+The main process waits for a user task to be completed to finalize the passenger list.\n+It then invokes a custom Java service `FlightSeatingSolveService.assignSeats`\n+to optimize the flight's seats following the rules in `FlightSeatingConstraintProvider`\n+using OptaPlanner's, followed by a user task to finalize seat assignments.\n+\n+Based on these two processes (defined using BPMN 2.0 format), the custom data object\n+and custom Java service, a new service is generated that exposes REST operations to\n+create new flights (following the steps as defined in the main and sub-process)\n+and add passengers to flights.\n+\n+A UI is included in this example, which can be accessed on `localhost:8080`\n+when the application is running.\n+\n+## Installing and Running\n+\n+### Prerequisites", "originalCommit": "fa4648155e8c9c660ab91caf59772d9b645ecd4e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c8333c26608513eda1e6bef1c8fd6412b4501d77", "url": "https://github.com/kiegroup/kogito-examples/commit/c8333c26608513eda1e6bef1c8fd6412b4501d77", "message": "Merge branch 'master' into quarkus-flight-example", "committedDate": "2020-04-23T18:26:46Z", "type": "commit"}, {"oid": "afeb8f6f1ee1c2c42954cca34b771286efb2bca1", "url": "https://github.com/kiegroup/kogito-examples/commit/afeb8f6f1ee1c2c42954cca34b771286efb2bca1", "message": "Align Java and Maven version in README, generate swagger definition.", "committedDate": "2020-04-23T18:39:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA2MTI1Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r414061253", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # jBPM + OptaPlanner + Quarkus example\n          \n          \n            \n            # Process + OptaPlanner + Quarkus example", "author": "ricardozanini", "createdAt": "2020-04-23T19:22:00Z", "path": "process-optaplanner-quarkus/README.md", "diffHunk": "@@ -0,0 +1,364 @@\n+# jBPM + OptaPlanner + Quarkus example", "originalCommit": "afeb8f6f1ee1c2c42954cca34b771286efb2bca1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA2MTg1Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/157#discussion_r414061857", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>\n          \n          \n            \n              <name>Kogito Example :: Process, OptaPlanner and Quarkus</name>\n          \n      \n    \n    \n  \n\nPlease also look up after this word in the README and any docs in this example.", "author": "ricardozanini", "createdAt": "2020-04-23T19:23:00Z", "path": "process-optaplanner-quarkus/pom.xml", "diffHunk": "@@ -0,0 +1,196 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>process-optaplanner-quarkus</artifactId>\n+\n+  <name>Kogito Example :: jBPM, OptaPlanner and Quarkus</name>", "originalCommit": "afeb8f6f1ee1c2c42954cca34b771286efb2bca1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "755edb6935dcd042bab676d86202313ea76f3cfc", "url": "https://github.com/kiegroup/kogito-examples/commit/755edb6935dcd042bab676d86202313ea76f3cfc", "message": "Change jBPM to Process in pom.xml and README\n\nCo-Authored-By: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>", "committedDate": "2020-04-23T19:48:52Z", "type": "commit"}, {"oid": "e2b4792eb5ca24172c601c5627a0d54ca23446f3", "url": "https://github.com/kiegroup/kogito-examples/commit/e2b4792eb5ca24172c601c5627a0d54ca23446f3", "message": "Add an Operator Deployement file for process-optaplanner-quarkus", "committedDate": "2020-04-23T19:55:25Z", "type": "commit"}]}