{"pr_number": 435, "pr_title": "KOGITO-3716 Allow automatic close of staging repo", "pr_createdAt": "2020-11-05T07:34:03Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/435", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg1ODQ5Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r517858497", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    def options = [\"-s ${env.GLOBAL_MAVEN_SETTINGS}\", '-fae']\n          \n          \n            \n                    if(params.MAVEN_DEPENDENCIES_REPOSITORY){\n          \n          \n            \n                        options += ['-Denforcer.skip']\n          \n          \n            \n                    }\n          \n          \n            \n                    maven.runMaven(mvnCmd, skipTests, options)\n          \n          \n            \n                    def opts = [\"-s ${env.GLOBAL_MAVEN_SETTINGS}\", '-fae']\n          \n          \n            \n                    if(params.MAVEN_DEPENDENCIES_REPOSITORY){\n          \n          \n            \n                        opts += ['-Denforcer.skip']\n          \n          \n            \n                    }\n          \n          \n            \n                    maven.runMaven(mvnCmd, skipTests, opts)", "author": "radtriste", "createdAt": "2020-11-05T08:09:39Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -306,6 +347,10 @@ void runMaven(String command, String directory, boolean skipTests = false, List\n         mvnCmd += \" ${extraArgs}\"\n     }\n     dir(directory) {\n-        maven.runMaven(mvnCmd, skipTests, ['-fae'])\n+        def options = [\"-s ${env.GLOBAL_MAVEN_SETTINGS}\", '-fae']\n+        if(params.MAVEN_DEPENDENCIES_REPOSITORY){\n+            options += ['-Denforcer.skip']\n+        }\n+        maven.runMaven(mvnCmd, skipTests, options)", "originalCommit": "3a16b3689212d2397d9d03be7e9d67c0970b8ec4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NjczMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r517886730", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"", "author": "radtriste", "createdAt": "2020-11-05T08:56:32Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -292,9 +307,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \"--projects ${parentProjectName ?: directory}\"", "originalCommit": "188d3ef1811820c401e624ef8771c73a6156b242", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMDc3Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r517900776", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \" --projects ${parentProjectName ?: directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "author": "radtriste", "createdAt": "2020-11-05T09:18:45Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -292,9 +307,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects ${parentProjectName ?: directory}\"", "originalCommit": "c9d5fddec14cc9f1d3301a63ae0e6f82e4a5c8a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyMDQ2OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r517920469", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    cmd += \"--projects ${directory}\"\n          \n          \n            \n                    cmd += \" --projects :${parentProjectName ?: directory}\"", "author": "radtriste", "createdAt": "2020-11-05T09:49:41Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -292,9 +307,35 @@ void mavenCleanInstall(String directory, boolean skipTests = false, List profile\n     runMaven('clean install', directory, skipTests, profiles, extraArgs)\n }\n \n-void mavenDeploy(String directory) {\n-    extraArgs = params.MAVEN_DEPLOY_REPOSITORY != '' ? \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\" : ''\n-    runMaven('clean deploy', directory, true, [], extraArgs)\n+void mavenDeploy(String directory, String parentProjectName='') {\n+    if(!isRelease() || params.MAVEN_DEPLOY_REPOSITORY){\n+        extraArgs = ''\n+        if (params.MAVEN_DEPLOY_REPOSITORY){\n+            extraArgs += \"-DaltDeploymentRepository=runtimes-artifacts::default::${params.MAVEN_DEPLOY_REPOSITORY} -Denforcer.skip=true\"\n+        }\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+    } else {\n+        // First deploy locally\n+        extraArgs = \"-DaltDeploymentRepository=local::default::file://${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        runMaven('clean deploy', directory, true, [], extraArgs)\n+\n+        // Deploy to staging repository and close\n+        cmd = 'org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:deploy-staged-repository -DkeepStagingRepositoryOnCloseRuleFailure=true -DstagingProgressTimeoutMinutes=10'\n+        cmd += \" --projects :${parentProjectName ?: directory}\"\n+        cmd += \" -DnexusUrl=${env.NEXUS_RELEASE_URL}\"\n+        cmd += \" -DserverId=${env.NEXUS_RELEASE_REPOSITORY_ID}\" \n+        cmd += \" -DrepositoryDirectory=${env.MAVEN_DEPLOY_LOCAL_DIR}/${directory}\"\n+        cmd += \" -DstagingProfileId=${env.NEXUS_STAGING_REPOSITORY_ID}\" \n+        cmd += \" -DstagingDescription=\\\"Kogito Runtimes ${getProjectVersion()}\\\"\"\n+        echo \"Run maven cmd $cmd\"\n+        runMaven(cmd, directory)\n+\n+        // Promote to build profile\n+        cmd = \"org.sonatype.plugins:nexus-staging-maven-plugin:1.6.5:promote -DbuildPromotionProfileId=${env.NEXUS_BUILD_PROMOTION_PROFILE_ID}\"\n+        cmd += \"--projects ${directory}\"", "originalCommit": "23966a7655c7988e754dfd67882a1b7f008ab868", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2OTU2Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r517969566", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            sh \"echo '\\n-Denforcer.skip' | tee -a optaplanner/.mvn/maven.config\"\n          \n          \n            \n                                            sh \"echo '\\n-Denforcer.skip' | tee -a .mvn/maven.config\"", "author": "radtriste", "createdAt": "2020-11-05T11:08:35Z", "path": "Jenkinsfile.deploy", "diffHunk": "@@ -88,16 +102,17 @@ pipeline {\n             steps {\n                 script {\n                     dir('kogito-examples') {\n-                        configFileProvider([configFile(fileId: maven.getSubmarineSettingsXmlId(), targetLocation: 'maven-settings.xml', variable: 'MAVEN_SETTINGS_FILE')]){\n+                        configFileProvider([configFile(fileId: env.MAVEN_SETTINGS_CONFIG_FILE_ID, targetLocation: 'maven-settings.xml', variable: 'MAVEN_SETTINGS_FILE')]){\n                             // expose the temp file via a global environment variable for other stages\n                             env.GLOBAL_MAVEN_SETTINGS = \"${MAVEN_SETTINGS_FILE}\"\n                             sh \"echo '\\n-B -s ${MAVEN_SETTINGS_FILE}' | tee -a .mvn/maven.config\"\n-                            if(params.MAVEN_DEPENDENCIES_REPOSITORY != ''){\n-                                sh \"echo '\\n-Denforcer.skip=true' | tee -a .mvn/maven.config\"\n-                                sh \"sed -i 's|<repositories>|<repositories><repository><id>staging</id><name>Staging Repository</name><url>${params.MAVEN_DEPENDENCIES_REPOSITORY}</url><layout>default</layout><snapshots><enabled>true</enabled></snapshots><releases><enabled>true</enabled></releases></repository>|g' ${MAVEN_SETTINGS_FILE}\"\n-                                sh \"sed -i 's|<pluginRepositories>|<pluginRepositories><pluginRepository><id>staging</id><name>Staging Repository</name><url>${params.MAVEN_DEPENDENCIES_REPOSITORY}</url><layout>default</layout><snapshots><enabled>true</enabled></snapshots><releases><enabled>true</enabled></releases></pluginRepository>|g' ${MAVEN_SETTINGS_FILE}\"\n-                                // Done to allow Maven to download release artificats from MAVEN_DEPENDENCIES_REPOSITORY\n-                                sh \"sed -i 's|external:\\\\*|external:*,!staging|g' ${MAVEN_SETTINGS_FILE}\"\n+                            if(params.MAVEN_DEPENDENCIES_REPOSITORY){\n+                                depsRepositoryContent = \"<id>deps-repo</id><name>Dependencies Repository</name><url>${params.MAVEN_DEPENDENCIES_REPOSITORY}</url><layout>default</layout><snapshots><enabled>true</enabled></snapshots><releases><enabled>true</enabled></releases>\"\n+                                sh \"echo '\\n-Denforcer.skip' | tee -a optaplanner/.mvn/maven.config\"", "originalCommit": "516dfb37f3ab717c58ecfa26d2e9128f66fdced5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f75c5c319f2c2a0c854a801da22bd78ef2824580", "url": "https://github.com/kiegroup/kogito-examples/commit/f75c5c319f2c2a0c854a801da22bd78ef2824580", "message": "use shared libs for Maven", "committedDate": "2020-11-24T14:33:42Z", "type": "forcePushed"}, {"oid": "b360d930045c20e7f45a0a210ef1e0a34b757e04", "url": "https://github.com/kiegroup/kogito-examples/commit/b360d930045c20e7f45a0a210ef1e0a34b757e04", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-11-26T14:08:08Z", "type": "forcePushed"}, {"oid": "daf0f439f7ed6e0ef948de0ffe993695df405f34", "url": "https://github.com/kiegroup/kogito-examples/commit/daf0f439f7ed6e0ef948de0ffe993695df405f34", "message": "update", "committedDate": "2020-11-30T11:12:12Z", "type": "forcePushed"}, {"oid": "96c925954bf0fed8da02ec5fd8b4b4421a4e1f7c", "url": "https://github.com/kiegroup/kogito-examples/commit/96c925954bf0fed8da02ec5fd8b4b4421a4e1f7c", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T08:41:28Z", "type": "forcePushed"}, {"oid": "e557404e1b3068b075273b22eab428ed2872d573", "url": "https://github.com/kiegroup/kogito-examples/commit/e557404e1b3068b075273b22eab428ed2872d573", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T08:43:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MDU0Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r534060546", "bodyText": "Here we use getMavenConfig() while in kogito-runtimes we create a defaultMavenCmd. Would be nice to keep consistency across the pipelines.\nBtw, I prefer this approach over the defaultMavenCmd: the getMavenConfig() always returns a new instance. Thus, there is no risk of accidentally changing the defaultMavenCmd due to forgetting to call clone().", "author": "rsynek", "createdAt": "2020-12-02T10:31:23Z", "path": "Jenkinsfile.promote", "diffHunk": "@@ -104,17 +107,17 @@ pipeline {\n                 script {\n                     dir('kogito-examples-bot') {\n                         prepareForPR('kogito-examples')\n-                        setupMavenConfig()\n-                        maven.mvnVersionsSet(getSnapshotVersion(), true)\n-                        updateOptaPlannerVersion(util.getNextVersion(getOptaPlannerVersion(), 'micro'))\n+\n+                        maven.mvnVersionsSet(getMavenConfig(), getSnapshotVersion(), true)", "originalCommit": "e557404e1b3068b075273b22eab428ed2872d573", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MjU0OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/435#discussion_r534062549", "bodyText": "Until now, promote has the getMavenConfig and deploy use the default[...] var.\nCould be changed indeed to getMavenConfig. will do that.", "author": "radtriste", "createdAt": "2020-12-02T10:34:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MDU0Ng=="}], "type": "inlineReview"}, {"oid": "5643ba1dff46ffa0dd5eda14295f2676671e1067", "url": "https://github.com/kiegroup/kogito-examples/commit/5643ba1dff46ffa0dd5eda14295f2676671e1067", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T16:01:00Z", "type": "commit"}, {"oid": "5643ba1dff46ffa0dd5eda14295f2676671e1067", "url": "https://github.com/kiegroup/kogito-examples/commit/5643ba1dff46ffa0dd5eda14295f2676671e1067", "message": "KOGITO-3716 Allow automatic close of staging repo", "committedDate": "2020-12-02T16:01:00Z", "type": "forcePushed"}, {"oid": "2104a3419f71a970b76c3266d4c06144b7570c82", "url": "https://github.com/kiegroup/kogito-examples/commit/2104a3419f71a970b76c3266d4c06144b7570c82", "message": "removed jenkins tests", "committedDate": "2020-12-03T10:50:06Z", "type": "commit"}]}