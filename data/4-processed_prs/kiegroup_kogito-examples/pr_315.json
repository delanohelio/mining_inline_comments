{"pr_number": 315, "pr_title": "KOGITO-2952 Tracing addon example", "pr_createdAt": "2020-08-04T14:03:03Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/315", "timeline": [{"oid": "ef72690f3c09cc1854f18ca8b21c1e75f627006e", "url": "https://github.com/kiegroup/kogito-examples/commit/ef72690f3c09cc1854f18ca8b21c1e75f627006e", "message": "fix readme, optimize import and code, fix licence", "committedDate": "2020-06-25T12:21:58Z", "type": "commit"}, {"oid": "73dd6de9d97211071c32a9c4918428dbe25917a1", "url": "https://github.com/kiegroup/kogito-examples/commit/73dd6de9d97211071c32a9c4918428dbe25917a1", "message": "fix licence headers", "committedDate": "2020-06-25T12:25:08Z", "type": "commit"}, {"oid": "fd4ab7e23d4fed8c1db75360de71338a60d95a77", "url": "https://github.com/kiegroup/kogito-examples/commit/fd4ab7e23d4fed8c1db75360de71338a60d95a77", "message": "Update MyInterceptor.java", "committedDate": "2020-06-25T14:09:03Z", "type": "commit"}, {"oid": "846f4dfd515ab7531a81c04292cdb6df7f36e5d0", "url": "https://github.com/kiegroup/kogito-examples/commit/846f4dfd515ab7531a81c04292cdb6df7f36e5d0", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-06-26T12:18:50Z", "type": "commit"}, {"oid": "cc4237de86b2a0e15b9bd19930965b596d6406c8", "url": "https://github.com/kiegroup/kogito-examples/commit/cc4237de86b2a0e15b9bd19930965b596d6406c8", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-06-29T08:02:27Z", "type": "commit"}, {"oid": "b0bcf8a8d1a785c5e820c69bbfb19d8ea77710c2", "url": "https://github.com/kiegroup/kogito-examples/commit/b0bcf8a8d1a785c5e820c69bbfb19d8ea77710c2", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-06-30T08:57:02Z", "type": "commit"}, {"oid": "a1e82adf0959eec41fcf667d8d689b27edc667a6", "url": "https://github.com/kiegroup/kogito-examples/commit/a1e82adf0959eec41fcf667d8d689b27edc667a6", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-07-13T08:32:54Z", "type": "commit"}, {"oid": "4a19d0c4fcf43b001cd4dabf4c26473e868d3104", "url": "https://github.com/kiegroup/kogito-examples/commit/4a19d0c4fcf43b001cd4dabf4c26473e868d3104", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-07-21T14:46:58Z", "type": "commit"}, {"oid": "fd2e77344871770387eb39d371580d18ce27aac5", "url": "https://github.com/kiegroup/kogito-examples/commit/fd2e77344871770387eb39d371580d18ce27aac5", "message": "add tracing example", "committedDate": "2020-08-04T13:54:39Z", "type": "commit"}, {"oid": "7b24d63d1a3d2201a5790d7b751dff1a207fbfac", "url": "https://github.com/kiegroup/kogito-examples/commit/7b24d63d1a3d2201a5790d7b751dff1a207fbfac", "message": "update README", "committedDate": "2020-08-04T13:59:17Z", "type": "commit"}, {"oid": "fe9924c6b983c0df29e601f35311b3c2d6e7ddd8", "url": "https://github.com/kiegroup/kogito-examples/commit/fe9924c6b983c0df29e601f35311b3c2d6e7ddd8", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-2952-tracing-example", "committedDate": "2020-08-04T14:57:01Z", "type": "commit"}, {"oid": "9a6eb06b75dfa834f6e20c32fc8b6736a805b3c4", "url": "https://github.com/kiegroup/kogito-examples/commit/9a6eb06b75dfa834f6e20c32fc8b6736a805b3c4", "message": "rebase", "committedDate": "2020-08-04T14:57:30Z", "type": "commit"}, {"oid": "e062728800143aa4df93164e65578570c996b102", "url": "https://github.com/kiegroup/kogito-examples/commit/e062728800143aa4df93164e65578570c996b102", "message": "remove json files", "committedDate": "2020-08-04T14:59:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MzU4MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465543580", "bodyText": "I think you might want to add a few lines to show how to start the trusty/tracing service", "author": "evacchi", "createdAt": "2020-08-05T07:57:33Z", "path": "dmn-tracing-quarkus/README.md", "diffHunk": "@@ -0,0 +1,128 @@\n+# DMN Tracing Quarkus example\n+\n+## Description\n+\n+A simple DMN service to evaluate a loan approval and generate tracing events that might be consumed by the Trusty service.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+\n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need:\n+  - [GraalVM 19.3.1](https://github.com/oracle/graal/releases/tag/vm-19.3.1) installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```\n+mvn clean compile quarkus:dev\n+```\n+\n+### Package and Run in JVM mode\n+\n+```\n+mvn clean package\n+java -jar target/dmn-tracing-quarkus-runner.jar\n+```\n+\n+or on Windows\n+\n+```\n+mvn clean package\n+java -jar target\\dmn-tracing-quarkus-runner.jar\n+```\n+\n+### Package and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```\n+mvn clean package -Pnative\n+```\n+\n+To run the generated native executable, generated in `target/`, execute\n+\n+```\n+./target/dmn-quarkus-example-runner\n+```\n+\n+Note: This does not yet work on Windows, GraalVM and Quarkus should be rolling out support for Windows soon.\n+\n+## OpenAPI (Swagger) documentation\n+[Specification at swagger.io](https://swagger.io/docs/specification/about/)\n+\n+You can take a look at the [OpenAPI definition](http://localhost:8080/openapi?format=json) - automatically generated and included in this service - to determine all available operations exposed by this service. For easy readability you can visualize the OpenAPI definition file using a UI tool like for example available [Swagger UI](https://editor.swagger.io).\n+\n+In addition, various clients to interact with this service can be easily generated using this OpenAPI definition.\n+\n+When running in either Quarkus Development or Native mode, we also leverage the [Quarkus OpenAPI extension](https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development) that exposes [Swagger UI](http://localhost:8080/swagger-ui/) that you can use to look at available REST endpoints and send test requests.\n+\n+## Example Usage\n+\n+Once the service is up and running, you can use the following example to interact with the service.", "originalCommit": "e062728800143aa4df93164e65578570c996b102", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5NTkxMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465695910", "bodyText": "Unfortunately we are not ready yet to integrate the two components, since the feature is still under strong development. Just to give you the idea: in this very moment the trusty service has a wrong channel name (kogito-tracing), while the runtime has kogito-tracing-decision. I spotted this few days ago and I've included the fix in this PR kiegroup/kogito-apps#339 .\nThe messaging part is under strong development here kiegroup/kogito-apps#345 and here kiegroup/kogito-runtimes#651 -> if I include an example here, it is going to be broken very often in these weeks.\nFor such reasons, if you agree, I would do that as soon as we are somehow in a more stable situation in the next weeks. wdyt @evacchi ?", "author": "r00ta", "createdAt": "2020-08-05T12:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MzU4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxODU3OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465718579", "bodyText": "I've created this so to keep track https://issues.redhat.com/browse/KOGITO-2962", "author": "r00ta", "createdAt": "2020-08-05T13:16:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MzU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0ODE1MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465548150", "bodyText": "minor nitpick if you want to investigate. You may be able to inject here a smallrye reactive channel which I believe is what users should/would write", "author": "evacchi", "createdAt": "2020-08-05T08:05:39Z", "path": "dmn-tracing-quarkus/src/test/java/org/kie/dmn/kogito/quarkus/tracing/LoanEligibilityTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.dmn.kogito.quarkus.tracing;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.kafka.KafkaClient;\n+import org.kie.kogito.testcontainers.quarkus.KafkaQuarkusTestResource;\n+import org.kie.kogito.tracing.decision.event.trace.TraceEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaQuarkusTestResource.class)\n+public class LoanEligibilityTest {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(LoanEligibilityTest.class);\n+\n+    public static final String TOPIC_CONSUMER = \"kogito-tracing-decision\";\n+\n+    @Inject\n+    private ObjectMapper objectMapper;\n+\n+    public KafkaClient kafkaClient;\n+\n+    @ConfigProperty(name = KafkaQuarkusTestResource.KOGITO_KAFKA_PROPERTY)\n+    private String kafkaBootstrapServers;\n+\n+    @Test\n+    public void testEvaluateTrafficViolation() throws InterruptedException {", "originalCommit": "e062728800143aa4df93164e65578570c996b102", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYwNTkxMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465605910", "bodyText": "Hi @evacchi , what do you mean? Not sure I get the point :D Not sure how do I test that an event is properly consumed if I inject here the channel", "author": "r00ta", "createdAt": "2020-08-05T09:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0ODE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzA4Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465793082", "bodyText": "Please change to KogitoBuild KogitoRuntime instead, see: #310", "author": "ricardozanini", "createdAt": "2020-08-05T15:01:52Z", "path": "dmn-tracing-quarkus/operator/dmn-quarkus-example.yaml", "diffHunk": "@@ -0,0 +1,16 @@\n+apiVersion: app.kiegroup.org/v1alpha1\n+kind: KogitoApp", "originalCommit": "e062728800143aa4df93164e65578570c996b102", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4Mzc4NQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465983785", "bodyText": "Thanks!", "author": "r00ta", "createdAt": "2020-08-05T20:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzA4Mg=="}], "type": "inlineReview"}, {"oid": "0976b44d068ec25cc341077c09eab09f293f630e", "url": "https://github.com/kiegroup/kogito-examples/commit/0976b44d068ec25cc341077c09eab09f293f630e", "message": "Update dmn-quarkus-example.yaml", "committedDate": "2020-08-05T20:26:22Z", "type": "commit"}, {"oid": "e062e63472a739dc7539e084612b4cbc0712eb93", "url": "https://github.com/kiegroup/kogito-examples/commit/e062e63472a739dc7539e084612b4cbc0712eb93", "message": "add trusty integration example", "committedDate": "2020-08-06T20:46:18Z", "type": "commit"}]}