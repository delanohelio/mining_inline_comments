{"pr_number": 5094, "pr_title": "[python] Cleanup ThreadPool with atexit rather than __del__", "pr_createdAt": "2020-01-23T14:56:50Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5094", "timeline": [{"oid": "72baae9af43b3c37688767a79bd802932f9a6182", "url": "https://github.com/OpenAPITools/openapi-generator/commit/72baae9af43b3c37688767a79bd802932f9a6182", "message": "Update petstore examples", "committedDate": "2020-01-23T18:14:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzk0MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370303941", "bodyText": "after the pool is closed and joined we should unregister the atexit -  https://docs.python.org/3/library/atexit.html#atexit.unregister; this is so that we don't keep the client instance in memory until the application dies", "author": "gaborbernat", "createdAt": "2020-01-23T19:12:58Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -75,7 +76,13 @@ class ApiClient(object):\n         self.user_agent = '{{#httpUserAgent}}{{{.}}}{{/httpUserAgent}}{{^httpUserAgent}}OpenAPI-Generator/{{{packageVersion}}}/python{{/httpUserAgent}}'\n         self.client_side_validation = configuration.client_side_validation\n \n-    def __del__(self):\n+    def __enter__(self):\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        self.close()\n+\n+    def close(self):\n         if self._pool:\n             self._pool.close()\n             self._pool.join()", "originalCommit": "5ec0714980e87e8deec7c062239eb9b5d08e06da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNzcyNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370307727", "bodyText": "\ud83d\udc4d Makes sense", "author": "fabianvf", "createdAt": "2020-01-23T19:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzk0MQ=="}], "type": "inlineReview"}, {"oid": "e185e3dd3f0114f69e6ede2d8ca671c2ac853bee", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e185e3dd3f0114f69e6ede2d8ca671c2ac853bee", "message": "Test to ensure threadpool is cleaned up", "committedDate": "2020-01-23T19:20:02Z", "type": "forcePushed"}, {"oid": "32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "message": "Test to ensure threadpool is cleaned up", "committedDate": "2020-01-23T19:52:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyMzQxMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370323411", "bodyText": "it looks like atexit.unregister doesn't exist in Python 2, so I added this guard", "author": "fabianvf", "createdAt": "2020-01-23T19:54:27Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -75,18 +76,27 @@ class ApiClient(object):\n         self.user_agent = '{{#httpUserAgent}}{{{.}}}{{/httpUserAgent}}{{^httpUserAgent}}OpenAPI-Generator/{{{packageVersion}}}/python{{/httpUserAgent}}'\n         self.client_side_validation = configuration.client_side_validation\n \n-    def __del__(self):\n+    def __enter__(self):\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        self.close()\n+\n+    def close(self):\n         if self._pool:\n             self._pool.close()\n             self._pool.join()\n             self._pool = None\n+            if hasattr(atexit, 'unregister'):", "originalCommit": "32fb9fbf7c4be74c1b68f67aeee32ee6fc95062d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b6140f378c6c88333d66098a345e088957ed7a30", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b6140f378c6c88333d66098a345e088957ed7a30", "message": "[python] Cleanup ThreadPool with atexit rather than __del__\n\nThis removes the `__del__` function from the generated Python client,\nand replaces it with a `cleanup` function. When a ThreadPool is created,\nthe cleanup function is registered with the `atexit` module.\n\nThis fixes #5093, where the API client could hang indefinitely at\ngarbage collection.", "committedDate": "2020-01-23T20:36:18Z", "type": "commit"}, {"oid": "a2e3676e90dadbef86c811d2640b0461e05f93f4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a2e3676e90dadbef86c811d2640b0461e05f93f4", "message": "Update petstore examples", "committedDate": "2020-01-23T20:36:18Z", "type": "commit"}, {"oid": "6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "message": "Test to ensure threadpool is cleaned up", "committedDate": "2020-01-23T20:36:18Z", "type": "commit"}, {"oid": "6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6880e3f5e5eb1eb33eda3fa8397002bb5a15f08a", "message": "Test to ensure threadpool is cleaned up", "committedDate": "2020-01-23T20:36:18Z", "type": "forcePushed"}, {"oid": "d8c5c5555ff2c996a3d0c385e0f0bb3347f19b3d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d8c5c5555ff2c996a3d0c385e0f0bb3347f19b3d", "message": "Docs now encourage using the context manager", "committedDate": "2020-01-23T22:15:51Z", "type": "commit"}, {"oid": "70f802176b7d6ef136e94b2b3bde74c4995b8454", "url": "https://github.com/OpenAPITools/openapi-generator/commit/70f802176b7d6ef136e94b2b3bde74c4995b8454", "message": "Regenerate docs", "committedDate": "2020-01-23T22:18:35Z", "type": "commit"}, {"oid": "1d179e03b3009c76e5977668cdaa53adff6ef979", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1d179e03b3009c76e5977668cdaa53adff6ef979", "message": "Update samples", "committedDate": "2020-01-24T19:54:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzc4Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370857787", "bodyText": "Can you add a line above {{#hasAuthMethods}} instantiating configuration?", "author": "spacether", "createdAt": "2020-01-24T21:49:33Z", "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -8,22 +8,26 @@ from pprint import pprint\n {{#hasAuthMethods}}", "originalCommit": "1d179e03b3009c76e5977668cdaa53adff6ef979", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1ODAwOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r372658008", "bodyText": "I believe configuration is instantiated in the {{> python_doc_auth_partial}} snippet", "author": "fabianvf", "createdAt": "2020-01-29T22:08:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1OTA4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370859082", "bodyText": "Can you add a line above {{#hasAuthMethods}} instantiating configuration?", "author": "spacether", "createdAt": "2020-01-24T21:53:15Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "diffHunk": "@@ -7,51 +7,55 @@ from pprint import pprint\n {{#hasAuthMethods}}", "originalCommit": "1d179e03b3009c76e5977668cdaa53adff6ef979", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDk3Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370860977", "bodyText": "Aren't these blocks {{#hasAuthMethods}}/{{^hasAuthMethods}} identical except for setting\nconfiguration.host?\nPlease move the identical block contents  underneath the {{/hasAuthMethods}} on line 25", "author": "spacether", "createdAt": "2020-01-24T21:58:25Z", "path": "modules/openapi-generator/src/main/resources/python/api_doc_example.mustache", "diffHunk": "@@ -8,22 +8,26 @@ from pprint import pprint\n {{#hasAuthMethods}}\n # Defining host is optional and default to {{{basePath}}}\n configuration.host = \"{{{basePath}}}\"\n-# Create an instance of the API class\n-api_instance = {{{packageName}}}.{{{classname}}}({{{packageName}}}.ApiClient(configuration))\n-{{#allParams}}{{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}\n-{{/allParams}}\n+# Enter a context with an instance of the API client", "originalCommit": "1d179e03b3009c76e5977668cdaa53adff6ef979", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTM3Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370861373", "bodyText": "Do we need to instantiate configuration here?", "author": "spacether", "createdAt": "2020-01-24T21:59:37Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/README_common.mustache", "diffHunk": "@@ -7,18 +7,20 @@ from pprint import pprint\n {{> python_doc_auth_partial}}\n # Defining host is optional and default to {{{basePath}}}", "originalCommit": "1d179e03b3009c76e5977668cdaa53adff6ef979", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY1NzIxNg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r372657216", "bodyText": "I believe configuration is instantiated in the  {{> python_doc_auth_partial}} snippet", "author": "fabianvf", "createdAt": "2020-01-29T22:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY3NDIzOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r372674238", "bodyText": "actually it looks like that snippet doesn't even exit in the experimental directory...", "author": "fabianvf", "createdAt": "2020-01-29T22:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTgxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5094#discussion_r370861810", "bodyText": "Aren't these blocks {{#hasAuthMethods}}/{{^hasAuthMethods}} identical except for setting\nconfiguration.host?\nPlease move the identical block contents  underneath the {{/hasAuthMethods}} on line 20", "author": "spacether", "createdAt": "2020-01-24T22:00:57Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_doc_example.mustache", "diffHunk": "@@ -7,51 +7,55 @@ from pprint import pprint\n {{#hasAuthMethods}}\n # Defining host is optional and default to {{{basePath}}}\n configuration.host = \"{{{basePath}}}\"\n-# Create an instance of the API class\n-api_instance = {{{packageName}}}.{{{classname}}}({{{packageName}}}.ApiClient(configuration))\n+# Enter a context with an instance of the API client\n+with {{{packageName}}}.ApiClient(configuration) as api_client:\n+    # Create an instance of the API class\n+    api_instance = {{{packageName}}}.{{{classname}}}(api_client)", "originalCommit": "1d179e03b3009c76e5977668cdaa53adff6ef979", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}