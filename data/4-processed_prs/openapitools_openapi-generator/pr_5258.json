{"pr_number": 5258, "pr_title": "[kotlin]Fix ktor doesn't generate nullable types", "pr_createdAt": "2020-02-10T11:44:47Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5258", "timeline": [{"oid": "3fe1e821f4d84826e80188484f56911bec294e83", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3fe1e821f4d84826e80188484f56911bec294e83", "message": "If not required, need `? = null`", "committedDate": "2020-02-10T05:04:03Z", "type": "commit"}, {"oid": "6ba0d310ab6de9a8d4d981ddfc6f9438b99b0212", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6ba0d310ab6de9a8d4d981ddfc6f9438b99b0212", "message": "run  ./bin/kotlin-server-petstore.sh", "committedDate": "2020-02-10T11:19:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MzY2MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5258#discussion_r381293661", "bodyText": "Maybe we should also check for {{#isNullable}}?{{/isNullable}}. What do you think?", "author": "4brunu", "createdAt": "2020-02-19T13:38:22Z", "path": "modules/openapi-generator/src/main/resources/kotlin-server/libraries/ktor/Paths.kt.mustache", "diffHunk": "@@ -18,7 +18,7 @@ object Paths {\n      {{#allParams}}* @param {{paramName}} {{description}} {{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}\n      {{/allParams}}*/\n     @KtorExperimentalLocationsAPI\n-    @Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{#hasMore}}, {{/hasMore}}{{/allParams}})\n+    @Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{^required}}? = null{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}})", "originalCommit": "6ba0d310ab6de9a8d4d981ddfc6f9438b99b0212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzkxOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5258#discussion_r381987918", "bodyText": "Thank you for reviewing!!\nHow is this? ->\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{^required}}? = null{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}})\n          \n          \n            \n                @Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{#isNullable}}?{{/isNullable}}{{^isNullable}}{{^required}}? = null{{/required}}{{/isNullable}}{{#hasMore}}, {{/hasMore}}{{/allParams}})\n          \n      \n    \n    \n  \n\nI couldn't test because I don't know how to send null in query parameters.", "author": "yutaka0m", "createdAt": "2020-02-20T13:10:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MzY2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNDkwOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5258#discussion_r382004908", "bodyText": "What about something like this?\n@Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{^required}}? = null{{/required}}{{#required}}{{#isNullable}}?{{/isNullable}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}})\nI'm not 100% sure of which one is the right solution, so I would like if someone could take a look at this.", "author": "4brunu", "createdAt": "2020-02-20T13:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MzY2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA0NjY1MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5258#discussion_r383046651", "bodyText": "I think required would have to append ? if it's nullable, but this would change assignment in the method body not just in the parameter list. Also, rather than assigning null I think we'd want to honor defaults. For example, i: Int? = 1 would be a valid argument.", "author": "jimschubert", "createdAt": "2020-02-23T22:51:30Z", "path": "modules/openapi-generator/src/main/resources/kotlin-server/libraries/ktor/Paths.kt.mustache", "diffHunk": "@@ -18,7 +18,7 @@ object Paths {\n      {{#allParams}}* @param {{paramName}} {{description}} {{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}\n      {{/allParams}}*/\n     @KtorExperimentalLocationsAPI\n-    @Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{#hasMore}}, {{/hasMore}}{{/allParams}})\n+    @Location(\"{{path}}\") class {{operationId}}({{#allParams}}val {{paramName}}: {{{dataType}}}{{^required}}? = null{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}})", "originalCommit": "6ba0d310ab6de9a8d4d981ddfc6f9438b99b0212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1NTAwMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5258#discussion_r383155003", "bodyText": "I think this is a bit dangerous, because is a valid value that can be used without the user noticing.", "author": "4brunu", "createdAt": "2020-02-24T09:31:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA0NjY1MQ=="}], "type": "inlineReview"}, {"oid": "6d96fbcfaad049ef0c40f58a96a26d4be9922efd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6d96fbcfaad049ef0c40f58a96a26d4be9922efd", "message": "Added `?` when value is `required` and `isNullable`", "committedDate": "2020-02-24T22:44:36Z", "type": "commit"}, {"oid": "897a61ab54f6f1249a9ae15cb9dce77b9c02040a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/897a61ab54f6f1249a9ae15cb9dce77b9c02040a", "message": "Rerun ./bin/kotlin-server-petstore.sh. But No differences", "committedDate": "2020-02-24T22:52:45Z", "type": "commit"}]}