{"pr_number": 6060, "pr_title": "Remove deprecations 5.0", "pr_createdAt": "2020-04-27T01:59:01Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6060", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MjMwNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r416292305", "bodyText": "Don't know what this suppress does, but hope it's for good reasons.", "author": "ybelenko", "createdAt": "2020-04-28T03:05:40Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/MysqlSchemaCodegen.java", "diffHunk": "@@ -29,10 +29,10 @@\n \n import static org.openapitools.codegen.utils.StringUtils.underscore;\n \n+@SuppressWarnings(\"unchecked\")", "originalCommit": "60291043b3f16bfc3ab1ba8f757a401ec2e98b51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NjM5NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r417996395", "bodyText": "In Java, generic types are \"erased\" at runtime, so if you cast like a Map<String, Object> to Map<String, CodegenModel>, some IDEs like IntelliJ will warn that the cast is unchecked. You should also see these warnings at compilation time.  You'll see these unchecked suppressions throughout our code because much of our ADT is Object typed and we extract into the concrete types. It's safe throughout because we manage the types privately, although it could fail if someone were to set a different type in an overridden method (but that would break everything anyway).\nI'm hoping to improve our ADT and template binding models for 5.0 to be typed better.", "author": "jimschubert", "createdAt": "2020-04-30T13:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MjMwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MzcyNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r416293725", "bodyText": "CODEGEN_VENDOR_EXTENSION_KEY vs VENDOR_EXTENSION_MYSQL_SCHEMA?\nWhat difference does it make? \ud83d\ude04\nForget it, already done.", "author": "ybelenko", "createdAt": "2020-04-28T03:10:04Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/MysqlSchemaCodegen.java", "diffHunk": "@@ -271,12 +271,11 @@ public void processOpts() {\n                 modelDescription = (modelDescription == null || modelDescription.isEmpty()) ? commentExtra : modelDescription + \". \" + commentExtra;\n             }\n \n-            if (modelVendorExtensions.containsKey(CODEGEN_VENDOR_EXTENSION_KEY)) {\n+            if (modelVendorExtensions.containsKey(VENDOR_EXTENSION_MYSQL_SCHEMA)) {", "originalCommit": "60291043b3f16bfc3ab1ba8f757a401ec2e98b51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4MTUxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r421881512", "bodyText": "As a static field, this property has to make sense to consumers not only within this project but for those extending the artifact.\nMysqlSchemaCodegen.CODEGEN_VENDOR_EXTENSION_KEY doesn't explain what this key is. Although it's technically accurate, you're able to have any number of vendor extensions. The new name removes the redundant CODEGEN_ prefix and changes KEY which provides no details about the public field to MYSQL_SCHEMA which represents what the vendor extension is (x-mysql-schema).", "author": "jimschubert", "createdAt": "2020-05-08T01:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MzcyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5NTc4Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r416295787", "bodyText": "Didn't know that Java scalars shouldn't start with capital. Maybe you need to describe it somewhere in contributor guide. When created my first PR I used AbstractPhpCodegen as reference and it filled up with String declarations. Or maybe we need some Java linter to avoid this style changes in future.", "author": "ybelenko", "createdAt": "2020-04-28T03:16:26Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/MysqlSchemaCodegen.java", "diffHunk": "@@ -335,15 +334,15 @@ public void processIntegerTypeProperty(CodegenModel model, CodegenProperty prope\n         String description = property.getDescription();\n         String minimum = property.getMinimum();\n         String maximum = property.getMaximum();\n-        Boolean exclusiveMinimum = property.getExclusiveMinimum();\n-        Boolean exclusiveMaximum = property.getIExclusiveMaximum();\n+        boolean exclusiveMinimum = property.getExclusiveMinimum();", "originalCommit": "60291043b3f16bfc3ab1ba8f757a401ec2e98b51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4OTc5OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r417989799", "bodyText": "This is called boxing in Java. It'll be caught by Sonar, we just have low stats on Sonar at the moment and don't make it known that we track there.\nIn the past couple of months, we've also introduced some quality checks in build which would warn on boxing. I think reviewers just need to be diligent on quality review.\nThat's not to say this is wrong. A Boolean in Java is an object that wraps a primitive boolean. Its usually frowned upon in performance critical paths, while in others it makes the most sense because of the true/false/null triple states.  It should flag as a warning in most IDEs for a line like this one as unnecessary boxing, because the method you're calling returns boolean and there's no possibility of that third null state which would represent \"unset\".", "author": "jimschubert", "createdAt": "2020-04-30T12:58:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5NTc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5ODQyMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r416298422", "bodyText": "I used long declaration for readability, but it's ok. Don't like shortcuts in conditions because it's hard to read long if statements like if (!isPropValid() && !countErrors() && !$someVar){}.", "author": "ybelenko", "createdAt": "2020-04-28T03:24:54Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/MysqlSchemaCodegen.java", "diffHunk": "@@ -464,8 +461,8 @@ public void processDecimalTypeProperty(CodegenModel model, CodegenProperty prope\n         } else {\n             Float min = (minimum != null) ? Float.valueOf(minimum) : null;\n             Float max = (maximum != null) ? Float.valueOf(maximum) : null;\n-            if (exclusiveMinimum == true && min != null) min += 1;\n-            if (exclusiveMaximum == true && max != null) max -= 1;\n+            if (exclusiveMinimum && min != null) min += 1;", "originalCommit": "60291043b3f16bfc3ab1ba8f757a401ec2e98b51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5ODg0Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r416298843", "bodyText": "Same done for readability here, but it's ok.", "author": "ybelenko", "createdAt": "2020-04-28T03:26:03Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/MysqlSchemaCodegen.java", "diffHunk": "@@ -1139,7 +1131,7 @@ public String escapeUnsafeCharacters(String input) {\n      */\n     public void setDefaultDatabaseName(String databaseName) {\n         String escapedName = toDatabaseName(databaseName);\n-        if (escapedName.equals(databaseName) == false) {\n+        if (!escapedName.equals(databaseName)) {", "originalCommit": "60291043b3f16bfc3ab1ba8f757a401ec2e98b51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMDQ1NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6060#discussion_r418220454", "bodyText": "This needs to be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    op.vendorExtensions.put(\"x-has-path-params\", !op.pathParams.isEmpty());\n          \n          \n            \n                    op.vendorExtensions.put(\"x-has-path-params\", hasPathParams);\n          \n      \n    \n    \n  \n\nBefore we were adding hasPathParams twice, once with !op.pathParams.isEmpty(), and then again with hasPathParams. This was probably caused by a mistaken merge.\nThis is causing the difference in samples", "author": "richardwhiuk", "createdAt": "2020-04-30T18:53:13Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -734,28 +731,20 @@ public CodegenOperation fromOperation(String path, String httpMethod, Operation\n         }\n \n         String underscoredOperationId = underscore(op.operationId);\n-        op.vendorExtensions.put(\"operation_id\", underscoredOperationId); // TODO: 5.0 Remove\n         op.vendorExtensions.put(\"x-operation-id\", underscoredOperationId);\n-        op.vendorExtensions.put(\"uppercase_operation_id\", underscoredOperationId.toUpperCase(Locale.ROOT)); // TODO: 5.0 Remove\n         op.vendorExtensions.put(\"x-uppercase-operation-id\", underscoredOperationId.toUpperCase(Locale.ROOT));\n         String vendorExtensionPath = op.path.replace(\"{\", \":\").replace(\"}\", \"\");\n-        op.vendorExtensions.put(\"path\", vendorExtensionPath);  // TODO: 5.0 Remove\n         op.vendorExtensions.put(\"x-path\",vendorExtensionPath);\n-        op.vendorExtensions.put(\"PATH_ID\", pathId); // TODO: 5.0 Remove\n         op.vendorExtensions.put(\"x-path-id\", pathId);\n-        op.vendorExtensions.put(\"hasPathParams\", !op.pathParams.isEmpty()); // TODO: 5.0 Remove\n         op.vendorExtensions.put(\"x-has-path-params\", !op.pathParams.isEmpty());", "originalCommit": "60291043b3f16bfc3ab1ba8f757a401ec2e98b51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ab87d5373283651b3916da6ea2be2fa65c1ff57", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3ab87d5373283651b3916da6ea2be2fa65c1ff57", "message": "Fix -D conversion to additional-properties, missed in bat files", "committedDate": "2020-05-10T19:15:13Z", "type": "forcePushed"}, {"oid": "0f5fd3aac7a7db83dc1a60447ba4ae192f37742e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0f5fd3aac7a7db83dc1a60447ba4ae192f37742e", "message": "[breaking] Enforce vendor extension naming convention", "committedDate": "2020-05-15T01:01:26Z", "type": "commit"}, {"oid": "5e4286885b63066ff43ed712102af4444ae9de47", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5e4286885b63066ff43ed712102af4444ae9de47", "message": "[breaking] Rename system properties to global properties", "committedDate": "2020-05-15T01:01:37Z", "type": "commit"}, {"oid": "b4572c4bbfa977bdcfae7c85df86058a83810664", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b4572c4bbfa977bdcfae7c85df86058a83810664", "message": "[docs] Update site with global properties list and usage explanation", "committedDate": "2020-05-15T01:01:38Z", "type": "commit"}, {"oid": "dc7eef786c68533892b9558b4ef6d65e03c1bafc", "url": "https://github.com/OpenAPITools/openapi-generator/commit/dc7eef786c68533892b9558b4ef6d65e03c1bafc", "message": "Use proper vendor extension casing in all templates", "committedDate": "2020-05-15T01:01:39Z", "type": "commit"}, {"oid": "4408b951b46ef9a37e7591a0851c173349bc1bee", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4408b951b46ef9a37e7591a0851c173349bc1bee", "message": "Set remaining vendor extensions to convention of lower kebab-cased with x- prefix", "committedDate": "2020-05-15T01:01:40Z", "type": "commit"}, {"oid": "00861fb5ba2ddd383f2421c4f020ec446702ac48", "url": "https://github.com/OpenAPITools/openapi-generator/commit/00861fb5ba2ddd383f2421c4f020ec446702ac48", "message": "[samples] Regenerate", "committedDate": "2020-05-15T01:01:41Z", "type": "commit"}, {"oid": "5ff6f5221cec1945d72bd43a16596b6d0d614d45", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5ff6f5221cec1945d72bd43a16596b6d0d614d45", "message": "Update modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java\r\n\r\nBefore we were adding hasPathParams twice, once with !op.pathParams.isEmpty(), and then again with hasPathParams. This was probably caused by a mistaken merge.\r\n\r\nThis is causing the difference in samples\n\nCo-authored-by: Richard Whitehouse <richard.whitehouse@metaswitch.com>", "committedDate": "2020-05-15T01:01:41Z", "type": "commit"}, {"oid": "110d3318c594ecba74c7c882484dfa4b89e893b3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/110d3318c594ecba74c7c882484dfa4b89e893b3", "message": "[Samples] Regenerated!", "committedDate": "2020-05-15T01:01:42Z", "type": "commit"}, {"oid": "51a47cc0a6705eba6713ec15ab9304119002237e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/51a47cc0a6705eba6713ec15ab9304119002237e", "message": "Fix -D conversion to additional-properties, missed in bat files", "committedDate": "2020-05-15T01:01:43Z", "type": "commit"}, {"oid": "c59d5ac59629bb8ccfd1d1e7a188c5c258c287c9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c59d5ac59629bb8ccfd1d1e7a188c5c258c287c9", "message": "JERSEY2 option changed", "committedDate": "2020-05-15T02:03:25Z", "type": "commit"}, {"oid": "c59d5ac59629bb8ccfd1d1e7a188c5c258c287c9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c59d5ac59629bb8ccfd1d1e7a188c5c258c287c9", "message": "JERSEY2 option changed", "committedDate": "2020-05-15T02:03:25Z", "type": "forcePushed"}, {"oid": "18ce686036e47215d7625e204f001cb3408947b7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/18ce686036e47215d7625e204f001cb3408947b7", "message": "Merge branch 'master' into remove-deprecations-5.0\n\n* master: (71 commits)\n  [PS] check if JSON properties is defined (#6419)\n  Add C++ UE4  client generator (#6399)\n  Add a link to the article in dev.to (#6421)\n  typescript-axios anytype is not defined (#6335)\n  [Java][jersey2] Make (de)serialization work for oneOf models, add convenience and comparison methods (#6323)\n  Migrate OCaml petstore to use OAS v3 spec (#6348)\n  [Python-experimental] Fix type error if oneof/anyof child schema is null type (#6387)\n  [Python-server] Fix blueplanet 'file not found' error  (#6411)\n  [nodejs] Fix deprecation notice when running sample nodejs script (#6412)\n  [java-jersey2] Conditionally include http signature mustache template (#6413)\n  [bug] Fix path provider bug on CI (#6409)\n  decomission nodejs server generator (#6406)\n  [Java] Generate valid code if no Authentication implementations present (#5788)\n  update java jersey2 samples\n  [Java] Fix mustache tag in pom template for HTTP signature (#6404)\n  [Python-experimental] Rename from_server variable to json_variable_naming (#6390)\n  Add a link to medium blog post (#6403)\n  Clean up debug in test (#6398)\n  readding bin/swift5-petstore-readonlyProperties.json\n  remove ./bin/swift5-petstore-readonlyProperties.json\n  ...", "committedDate": "2020-05-25T13:36:35Z", "type": "commit"}, {"oid": "746d14583618f204857aa92fa1e7fbde21899194", "url": "https://github.com/OpenAPITools/openapi-generator/commit/746d14583618f204857aa92fa1e7fbde21899194", "message": "[samples] Regenerate", "committedDate": "2020-05-25T14:09:50Z", "type": "commit"}, {"oid": "4bb103b98c909c351fb5bde2289860bdbc6115a6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4bb103b98c909c351fb5bde2289860bdbc6115a6", "message": "[scala][finch] Fix remaining vendor extensions format to conventino", "committedDate": "2020-05-25T22:05:16Z", "type": "commit"}, {"oid": "f9117819fa6d8087266160f30162c7409aae0daf", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f9117819fa6d8087266160f30162c7409aae0daf", "message": "Merge branch 'master' into remove-deprecations-5.0\n\n* master:\n  [kotlin][client] add support for coroutines with OkHttp (#6362)\n  update package-json.lock (#6430)\n  fix hardcoded match type (#6431)\n  java jersey2 enhance anyOf (#6420)\n  [Java][jersey2] minor improvement to jersey2 tests (#6418)\n  ps minor style change (#6424)\n  [JS] mark ES5 as deprecated (#6408)\n  [ci] Execute maven and verify with no-snapshot-updates (#6415)\n  add new file in ts axios samples\n  Migrate all scala generators to use OAS3 (#6407)\n  migrate ruby samples to oas3 (#6414)", "committedDate": "2020-05-27T01:35:25Z", "type": "commit"}, {"oid": "918ff2dd87bdbd0e1ac15d0ddf74e4e8e10e6c36", "url": "https://github.com/OpenAPITools/openapi-generator/commit/918ff2dd87bdbd0e1ac15d0ddf74e4e8e10e6c36", "message": "[scala] The -D option was replaced with --global-property", "committedDate": "2020-05-27T01:40:07Z", "type": "commit"}, {"oid": "afa2c42963991af069f18360f89ed72df85af7c6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/afa2c42963991af069f18360f89ed72df85af7c6", "message": "[samples] Regenerate", "committedDate": "2020-05-27T01:50:25Z", "type": "commit"}, {"oid": "54826e265f19b715668db85bd9aacd849df4d257", "url": "https://github.com/OpenAPITools/openapi-generator/commit/54826e265f19b715668db85bd9aacd849df4d257", "message": "Merge branch 'master' into remove-deprecations-5.0\n\n* master: (36 commits)\n  Improve handling spaces in example command (#6482)\n  fix maven plugin snapshot version\n  comment out erlang server test (#6499)\n  Migrate Perl samples to use OAS v3 spec (#6490)\n  [core] Refactor templating management (#6357)\n  migrate apex samples to use oas3 spec (#6488)\n  add new file in php-symfony sample\n  [PS] Refactor the http signing auth with ecdsa support (#6397)\n  [Rust Server] Hyper 0.13 + Async/Await support (#6244)\n  [Rust] set supportAsync to true as the default (#6480)\n  [php-symfony] Set required PHP version ^7.1.3 (#6181)\n  update doc\n  [csharp] Rename netstandard to netstandard1.3 (#6460)\n  feat: support deprecated parameters for typescript-axios generator (#6475)\n  [REQ][typescript-axios] useSingleRequestParameter should mark parameter optional if all properties are optional (#6477)\n  better struct alias in rust (#6470)\n  Migrate Go server samples to OAS 3 only (#6471)\n  [Rust][reqwest] add async support (#6464)\n  [codegen][python-experimental] Composed schema with additionalProperties  (#6290)\n  [Java] Decommission Retrofit 1.x support (#6447)\n  ...", "committedDate": "2020-05-30T19:33:31Z", "type": "commit"}, {"oid": "db5ec21913a9cea1e8ba3da04e6f492d1beea348", "url": "https://github.com/OpenAPITools/openapi-generator/commit/db5ec21913a9cea1e8ba3da04e6f492d1beea348", "message": "Fix -DskipFormModel usage which has been moved to --global-property skipFormModel=true", "committedDate": "2020-05-30T19:49:21Z", "type": "commit"}, {"oid": "d961b12aa605314a52c268fd0cf9612fe33ff9e9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d961b12aa605314a52c268fd0cf9612fe33ff9e9", "message": "[samples] Regenerate", "committedDate": "2020-05-30T20:33:33Z", "type": "commit"}]}