{"pr_number": 7580, "pr_title": "[typescript-axios]: Only call `JSON.stringify` on JSON request bodies", "pr_createdAt": "2020-10-02T16:29:44Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/7580", "timeline": [{"oid": "982f0e97978bfea88176c8ba6c4ff125c69b8b06", "url": "https://github.com/OpenAPITools/openapi-generator/commit/982f0e97978bfea88176c8ba6c4ff125c69b8b06", "message": "[typescript-axios]: Only serialize JSON request bodies", "committedDate": "2020-10-02T16:19:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNzIxMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7580#discussion_r498927211", "bodyText": "These should match those at https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java#L6606-L6607", "author": "therockstorm", "createdAt": "2020-10-02T16:32:21Z", "path": "modules/openapi-generator/src/main/resources/typescript-axios/baseApi.mustache", "diffHunk": "@@ -20,6 +20,18 @@ export const COLLECTION_FORMATS = {\n     pipes: \"|\",\n };\n \n+/**\n+ *\n+ * @export\n+ */\n+export const JSON_MIME_PATTERN = new RegExp('application\\\\/json(;.*)?', 'i');\n+\n+/**\n+ *\n+ * @export\n+ */\n+export const JSON_VENDOR_MIME_PATTERN = new RegExp('application\\\\/vnd.(.*)+json(;.*)?', 'i');", "originalCommit": "982f0e97978bfea88176c8ba6c4ff125c69b8b06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwNTA5Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7580#discussion_r500305097", "bodyText": "maybe we could create a small function that does the check, similar to\n\n  \n    \n      openapi-generator/modules/openapi-generator/src/main/resources/typescript-angular/configuration.mustache\n    \n    \n        Lines 135 to 148\n      in\n      9236d56\n    \n    \n    \n    \n\n        \n          \n               /** \n        \n\n        \n          \n                * Check if the given MIME is a JSON MIME. \n        \n\n        \n          \n                * JSON MIME examples: \n        \n\n        \n          \n                *   application/json \n        \n\n        \n          \n                *   application/json; charset=UTF8 \n        \n\n        \n          \n                *   APPLICATION/JSON \n        \n\n        \n          \n                *   application/vnd.company+json \n        \n\n        \n          \n                * @param mime - MIME (Multipurpose Internet Mail Extensions) \n        \n\n        \n          \n                * @return True if the given MIME is JSON, false otherwise. \n        \n\n        \n          \n                */ \n        \n\n        \n          \n               public isJsonMime(mime: string): boolean { \n        \n\n        \n          \n                   const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i'); \n        \n\n        \n          \n                   return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json'); \n        \n\n        \n          \n               }", "author": "macjohnny", "createdAt": "2020-10-06T13:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNzIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzMzU3Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7580#discussion_r498933576", "bodyText": "This could be a breaking change if people were relying on this JSON.stringify with either an empty or non-JSON Content-Type. However, I didn't want to just add an exclusion for application/octet-stream since others (e.g., image/jpeg, etc.) wouldn't want JSON.stringify called either.", "author": "therockstorm", "createdAt": "2020-10-02T16:45:11Z", "path": "modules/openapi-generator/src/main/resources/typescript-axios/apiInner.mustache", "diffHunk": "@@ -203,7 +203,8 @@ export const {{classname}}AxiosParamCreator = function (configuration?: Configur\n             localVarRequestOptions.data = localVarFormParams{{#vendorExtensions}}{{^multipartFormData}}.toString(){{/multipartFormData}}{{/vendorExtensions}};\n     {{/hasFormParams}}\n     {{#bodyParam}}\n-            const needsSerialization = (typeof {{paramName}} !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n+            const contentType = localVarRequestOptions.headers['Content-Type'];\n+            const needsSerialization = (typeof {{paramName}} !== \"string\") && (contentType.match(JSON_MIME_PATTERN) || contentType.match(JSON_VENDOR_MIME_PATTERN));", "originalCommit": "982f0e97978bfea88176c8ba6c4ff125c69b8b06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6e80e8a4a2f904e6baf4d16f08229c3441e09198", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6e80e8a4a2f904e6baf4d16f08229c3441e09198", "message": "Remove Regex and instead add a method in Configuration class", "committedDate": "2020-10-07T15:22:11Z", "type": "commit"}, {"oid": "7b99be43c0cd55d119f34fb873d1399b6ce5c2b9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7b99be43c0cd55d119f34fb873d1399b6ce5c2b9", "message": "Update samples", "committedDate": "2020-10-07T15:33:48Z", "type": "commit"}]}