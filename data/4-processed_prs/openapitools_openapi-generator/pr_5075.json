{"pr_number": 5075, "pr_title": "[go-experimental] Fix multiple go compilation errors and enable go integration test", "pr_createdAt": "2020-01-22T02:28:10Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5075", "timeline": [{"oid": "685a7af7b235b0d9cb14a70b6cfa6179eb966299", "url": "https://github.com/OpenAPITools/openapi-generator/commit/685a7af7b235b0d9cb14a70b6cfa6179eb966299", "message": "fix go compilation error for properties of type map and array", "committedDate": "2020-01-22T02:27:04Z", "type": "commit"}, {"oid": "31527ca170ec9e043a489d0686a426619430c764", "url": "https://github.com/OpenAPITools/openapi-generator/commit/31527ca170ec9e043a489d0686a426619430c764", "message": "fix go compilation error for properties of type date and datetime", "committedDate": "2020-01-22T02:47:08Z", "type": "commit"}, {"oid": "937093700346aab03326d0d3d16f916423616472", "url": "https://github.com/OpenAPITools/openapi-generator/commit/937093700346aab03326d0d3d16f916423616472", "message": "add missing shell script to bin/utils/ensure-up-to-date", "committedDate": "2020-01-22T04:50:26Z", "type": "commit"}, {"oid": "d665d7c17b2ca2464f87418e2d555f73dfabc231", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d665d7c17b2ca2464f87418e2d555f73dfabc231", "message": "add missing shell script to bin/utils/ensure-up-to-date", "committedDate": "2020-01-22T05:18:12Z", "type": "commit"}, {"oid": "48526daabe4badbe823a61e4b419dda3919ea93c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/48526daabe4badbe823a61e4b419dda3919ea93c", "message": "add missing shell script to bin/utils/ensure-up-to-date", "committedDate": "2020-01-22T05:20:10Z", "type": "commit"}, {"oid": "262dc8afc88d714cd732b65d24cdc0e5c171c09b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/262dc8afc88d714cd732b65d24cdc0e5c171c09b", "message": "fix issue with 'date' type", "committedDate": "2020-01-22T06:20:31Z", "type": "commit"}, {"oid": "a3bb335c60353a3694991a88afca91938018257f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a3bb335c60353a3694991a88afca91938018257f", "message": "fix time import problem", "committedDate": "2020-01-22T06:32:43Z", "type": "commit"}, {"oid": "735f84c19b9e38d1cc68a943194e602b64e96f9e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/735f84c19b9e38d1cc68a943194e602b64e96f9e", "message": "Add missing pom.xml files for golang", "committedDate": "2020-01-22T06:41:06Z", "type": "commit"}, {"oid": "53226d321626a9d45c65f2d13f2a057894fa1576", "url": "https://github.com/OpenAPITools/openapi-generator/commit/53226d321626a9d45c65f2d13f2a057894fa1576", "message": "Add missing unit test files for golang", "committedDate": "2020-01-22T07:48:22Z", "type": "commit"}, {"oid": "be0b85c2abfcfd43428c16340d0f88cccb5a786e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/be0b85c2abfcfd43428c16340d0f88cccb5a786e", "message": "Add missing unit test files for golang. Must use class name prefix for enums", "committedDate": "2020-01-22T15:02:38Z", "type": "commit"}, {"oid": "295bbb71845721039aac5db20b26d952bfb58c7f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/295bbb71845721039aac5db20b26d952bfb58c7f", "message": "Fix unit tests for go-experimental in OAS3", "committedDate": "2020-01-22T15:29:48Z", "type": "commit"}, {"oid": "e2cf635460db566d0148ef0d444e583e81bd6eca", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e2cf635460db566d0148ef0d444e583e81bd6eca", "message": "Fix unit tests for go-experimental in OAS3", "committedDate": "2020-01-22T15:38:06Z", "type": "commit"}, {"oid": "1769234b2e15060f2083d2a5beb57aee92c11bf2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1769234b2e15060f2083d2a5beb57aee92c11bf2", "message": "Add code comments in codegen", "committedDate": "2020-01-22T16:59:49Z", "type": "commit"}, {"oid": "1ed28d8be6cf474c72c1c54649283f8954c2df53", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1ed28d8be6cf474c72c1c54649283f8954c2df53", "message": "Fix compilation errors of generated go code", "committedDate": "2020-01-22T17:17:25Z", "type": "commit"}, {"oid": "705a8c3c624de46dccc266529db504d5841d8200", "url": "https://github.com/OpenAPITools/openapi-generator/commit/705a8c3c624de46dccc266529db504d5841d8200", "message": "Fix compilation errors of generated go code", "committedDate": "2020-01-22T17:17:49Z", "type": "commit"}, {"oid": "f115d8c1b104c5ee8ee272a8bb6bc3256108eb82", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f115d8c1b104c5ee8ee272a8bb6bc3256108eb82", "message": "remove antihax from go-experimental, it is no longer used", "committedDate": "2020-01-22T17:42:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5MjIzNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r369392234", "bodyText": "How about using NullableTime for the OAS \"time\" type instead of plain \"string\" type? At least specifically for go-experimental, because this would be a breaking change for \"go\". Golang has the time.Time.Truncate() function, which could help to perform arithmetic with dates.", "author": "sebastien-rosset", "createdAt": "2020-01-22T06:44:34Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientExperimentalCodegen.java", "diffHunk": "@@ -83,16 +82,23 @@ public void processOpts() {\n                 }\n \n                 for (CodegenProperty param : model.vars) {\n-                    if (!param.isNullable) {\n+                    if (!param.isNullable || param.isMapContainer || param.isListContainer) {\n                         continue;\n                     }\n-\n-                    param.dataType = \"Nullable\" + Character.toUpperCase(param.dataType.charAt(0))\n+                    if (param.isDateTime) {", "originalCommit": "735f84c19b9e38d1cc68a943194e602b64e96f9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5MjUwNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r369392507", "bodyText": "It's not very clear where in the pom.xml these two lines should be added.\nShould we add a \"go-experimental\" profile in the top-level pom.xml? Similar to https://github.com/OpenAPITools/openapi-generator/blob/master/pom.xml#L911?\nIt would be good to add XML comments to explain the purpose of the profiles in the top-level pom.xml file. Specifically, there are 4 profiles that use a different JDK. Why? I'd like to add an XML comment to explain. Is it done because some samples require a specific version of the JDK? Or because someone wanted to make sure the sample can compile against multiple JDK versions? Or because whoever added the sample found a spot where to add the sample, without thinking about which JDK is needed?\n\n\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/pom.xml#L1031\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/pom.xml#L1086\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/pom.xml#L1178\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/pom.xml#L1240", "author": "sebastien-rosset", "createdAt": "2020-01-22T06:45:46Z", "path": "pom.xml", "diffHunk": "@@ -1097,6 +1097,8 @@\n                 <!-- test non-java projects -->\n                 <module>samples/client/petstore/go</module>\n                 <module>samples/client/petstore/go-experimental</module>\n+                <module>samples/openapi3/client/petstore/go-experimental</module>", "originalCommit": "735f84c19b9e38d1cc68a943194e602b64e96f9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4MzQ5Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370183492", "bodyText": "Is it done because some samples require a specific version of the JDK?\n\nYes", "author": "wing328", "createdAt": "2020-01-23T15:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5MjUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r369649703", "bodyText": "Why not invoke the following code in go-experimental processOpts() instead of modifying the dataType here? What is the reason for changing the type in postProcessModels()?\ntypeMapping.put(\"DateTime\", \"NullableTime\");", "author": "sebastien-rosset", "createdAt": "2020-01-22T16:02:27Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientExperimentalCodegen.java", "diffHunk": "@@ -83,16 +82,23 @@ public void processOpts() {\n                 }\n \n                 for (CodegenProperty param : model.vars) {\n-                    if (!param.isNullable) {\n+                    if (!param.isNullable || param.isMapContainer || param.isListContainer) {\n                         continue;\n                     }\n-\n-                    param.dataType = \"Nullable\" + Character.toUpperCase(param.dataType.charAt(0))\n+                    if (param.isDateTime) {\n+                        param.dataType = \"NullableTime\";", "originalCommit": "e2cf635460db566d0148ef0d444e583e81bd6eca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NDEyNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370184124", "bodyText": "Agreed with using typeMapping to directly map the type instead of using the code above.", "author": "wing328", "createdAt": "2020-01-23T15:24:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIwNTUwNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370205507", "bodyText": "So interestingly, adding typeMapping.put(\"DateTime\", \"NullableTime\") does not produce the same output for the samples. I wonder if that was done on purpose. When the dataType is set in postProcessModels(), it does not have the same effect as when typeMapping is invoked in processOpts(). Is that done on purpose?", "author": "sebastien-rosset", "createdAt": "2020-01-23T15:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIwNzczMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370207733", "bodyText": "We only want to represent the DateTime object as NullableTime if it's marked as nullable in the spec. I don't think we should use it in all cases.", "author": "bkabrda", "createdAt": "2020-01-23T16:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIwODE2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370208160", "bodyText": "For example, at https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/go-experimental/api.mustache#L26\ntype api{{operationId}}Request struct {\n\tctx _context.Context\n\tapiService *{{classname}}Service{{#allParams}}\n\t{{paramName}} {{^isPathParam}}*{{/isPathParam}}{{{dataType}}}{{/allParams}}\n}\n\nWith \"typeMapping\", this will produce  NullableTime.\nWith the dataType changed in processOpts(), this will produce *time.Time.\nI propose that we merge this PR as is, and then work on enhancing/fixing the typeMapping in a separate PR.", "author": "sebastien-rosset", "createdAt": "2020-01-23T16:03:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxMTAwMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370211003", "bodyText": "Yeah, I agree this PR is ok as-is, let's keep more changes for followup PRs.", "author": "bkabrda", "createdAt": "2020-01-23T16:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxMTkyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370211923", "bodyText": "We only want to represent the DateTime object as NullableTime if it's marked as nullable in the spec. I don't think we should use it in all cases.\n\nThanks for the explanation. I have added code comments to explain.", "author": "sebastien-rosset", "createdAt": "2020-01-23T16:10:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxMjMzMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370212330", "bodyText": "Yeah, I agree this PR is ok as-is, let's keep more changes for followup PRs.\n\nThanks. Can you approve the PR then? Approving in the text does not help much. BTW, for some reason I am unable to add you as a reviewer.", "author": "sebastien-rosset", "createdAt": "2020-01-23T16:10:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxOTc4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370219782", "bodyText": "Approved. Sorry, I keep forgetting doing the official review.", "author": "bkabrda", "createdAt": "2020-01-23T16:23:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTcwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDM0OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r369650349", "bodyText": "I've added error checking, but it does not seem a good idea to depend on the Python module.", "author": "sebastien-rosset", "createdAt": "2020-01-22T16:03:28Z", "path": "samples/client/petstore/go-experimental/pet_api_test.go", "diffHunk": "@@ -139,7 +139,10 @@ func TestFindPetsByStatus(t *testing.T) {\n }\n \n func TestUploadFile(t *testing.T) {\n-\tfile, _ := os.Open(\"../python/testfiles/foo.png\")\n+\tfile, err1 := os.Open(\"../python/testfiles/foo.png\")\n+\tif err1 != nil {", "originalCommit": "e2cf635460db566d0148ef0d444e583e81bd6eca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NDczMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370184732", "bodyText": "Yup, better to copy the file (png) to the root directory of the go experimental petstore client.", "author": "wing328", "createdAt": "2020-01-23T15:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDM0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4OTYwOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370189609", "bodyText": "done.", "author": "sebastien-rosset", "createdAt": "2020-01-23T15:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDM0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDgzNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r369650835", "bodyText": "Should I copy all of the existing unit test files from samples/client/petstore/go-experimental?", "author": "sebastien-rosset", "createdAt": "2020-01-22T16:04:15Z", "path": "samples/openapi3/client/petstore/go-experimental/auth_test.go", "diffHunk": "@@ -0,0 +1,259 @@\n+package main", "originalCommit": "e2cf635460db566d0148ef0d444e583e81bd6eca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NDMxOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370184318", "bodyText": "Yes please", "author": "wing328", "createdAt": "2020-01-23T15:25:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5NzY3OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5075#discussion_r370197679", "bodyText": "done, running the unit tests to verify.", "author": "sebastien-rosset", "createdAt": "2020-01-23T15:46:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDgzNQ=="}], "type": "inlineReview"}, {"oid": "220e0cfd7b212b8738792a45403ce3d60565062d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/220e0cfd7b212b8738792a45403ce3d60565062d", "message": "Merge remote-tracking branch 'origin' into go-syntax-error", "committedDate": "2020-01-23T15:28:42Z", "type": "commit"}, {"oid": "2ac6769367d39cf8674ee81f0cd6655d8cdb1c42", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2ac6769367d39cf8674ee81f0cd6655d8cdb1c42", "message": "copy python testfile for ut purpose", "committedDate": "2020-01-23T15:33:20Z", "type": "commit"}, {"oid": "d2e34eef862d8124f47654ad0745692d594e41b4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d2e34eef862d8124f47654ad0745692d594e41b4", "message": "add error checkout in unit tests", "committedDate": "2020-01-23T15:35:46Z", "type": "commit"}, {"oid": "0049c793b8c2346ab256192f19475501f6fbeba7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0049c793b8c2346ab256192f19475501f6fbeba7", "message": "add unit tests", "committedDate": "2020-01-23T15:45:30Z", "type": "commit"}, {"oid": "60e67092498dd9e3dbcd931fa4838614d66e2f35", "url": "https://github.com/OpenAPITools/openapi-generator/commit/60e67092498dd9e3dbcd931fa4838614d66e2f35", "message": "add code comments", "committedDate": "2020-01-23T16:09:16Z", "type": "commit"}, {"oid": "4cd66c2defc17a1991dbde7ec4f2e084f252c8e6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4cd66c2defc17a1991dbde7ec4f2e084f252c8e6", "message": "move test foo.png file to correct location", "committedDate": "2020-01-23T16:48:36Z", "type": "commit"}, {"oid": "1f0676c1b3d4f64a9d3b2637aa597cc40b6f2b6f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1f0676c1b3d4f64a9d3b2637aa597cc40b6f2b6f", "message": "run samples scripts", "committedDate": "2020-01-23T17:42:28Z", "type": "commit"}, {"oid": "ef25e5568a125964921f9b8209b809d6e0190620", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef25e5568a125964921f9b8209b809d6e0190620", "message": "run samples scripts", "committedDate": "2020-01-23T20:27:14Z", "type": "commit"}]}