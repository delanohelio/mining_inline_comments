{"pr_number": 5315, "pr_title": "[python] add method to set/get default configuration", "pr_createdAt": "2020-02-14T00:17:11Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5315", "timeline": [{"oid": "e4c6e2ba90c9d367df8ff210613ccdadaeda9c73", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e4c6e2ba90c9d367df8ff210613ccdadaeda9c73", "message": "[python] add method to set/get default configuration", "committedDate": "2020-02-14T23:31:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r379705215", "bodyText": "Why copy it vs just returning the instance?\nThe CI tests are failing when trying to deepcopy the logger.", "author": "spacether", "createdAt": "2020-02-15T01:09:18Z", "path": "samples/openapi3/client/petstore/python/petstore_api/configuration.py", "diffHunk": "@@ -169,6 +172,31 @@ def __init__(self, host=\"http://petstore.swagger.io:80/v2\",\n         # Disable client side validation\n         self.client_side_validation = True\n \n+    @classmethod\n+    def set_default(cls, default):\n+        \"\"\"Set default instance of configuration.\n+\n+        It stores default configuration, which can be\n+        returned by get_instance method.\n+\n+        :param default: object of Configuration\n+        \"\"\"\n+        cls._default = copy.copy(default)\n+\n+    @classmethod\n+    def get_instance(cls):\n+        \"\"\"Return new instance of configuration.\n+\n+        This method returns newly created, based on default constructor,\n+        object of Configuration class or returns a copy of default\n+        configuration passed by the set_default method.\n+\n+        :return: The configuration object.\n+        \"\"\"\n+        if cls._default is not None:\n+            return copy.copy(cls._default)", "originalCommit": "e4c6e2ba90c9d367df8ff210613ccdadaeda9c73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MDQ4Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r379850487", "bodyText": "How about returning a new Configuration instance which uses the same instantiation inputs as the default instance?", "author": "spacether", "createdAt": "2020-02-15T19:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MDgzNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r379850837", "bodyText": "Yes, deepcopy doesn't work. Here as in the previous implementation a copy of default configuration is returned.\nThe CI tests failed because a remote endpoint returned 404 error on add_pet method. I don't know why, I'll try to run it again.", "author": "tomplus", "createdAt": "2020-02-15T19:25:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg2NTQxOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r379865419", "bodyText": "Tests passed. I guess the original intention was to return a copy which looks like a new object but with different default values. Maybe I should name the method new_instance instead of get_instance to make it more understandable... ?", "author": "tomplus", "createdAt": "2020-02-16T00:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg1OTg3Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382859873", "bodyText": "I changed method name to new_instance().", "author": "tomplus", "createdAt": "2020-02-22T00:02:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2Mjc5OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382862798", "bodyText": "new_instance is good.\nHow do you feel about get_default_copy as a name?", "author": "spacether", "createdAt": "2020-02-22T00:18:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0OTM0MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382949341", "bodyText": "Updated, both versions look good to me.", "author": "tomplus", "createdAt": "2020-02-22T23:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwNTIxNQ=="}], "type": "inlineReview"}, {"oid": "70a585471e4d5f12233d68afc5b00b0be62376b9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/70a585471e4d5f12233d68afc5b00b0be62376b9", "message": "[python] add method to set/get default configuration", "committedDate": "2020-02-16T00:00:12Z", "type": "commit"}, {"oid": "70a585471e4d5f12233d68afc5b00b0be62376b9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/70a585471e4d5f12233d68afc5b00b0be62376b9", "message": "[python] add method to set/get default configuration", "committedDate": "2020-02-16T00:00:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg2NTQ5Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r379865493", "bodyText": "Can you also add a test that verifies that the\ncontents of the api_key and api_key_prefix dicts are the same but that their ids are different?\nOr will they be the same because of the shallow copy?", "author": "spacether", "createdAt": "2020-02-16T00:25:21Z", "path": "samples/client/petstore/python/tests/test_configuration.py", "diffHunk": "@@ -22,14 +22,25 @@ def setUp(self):\n         pass\n \n     def tearDown(self):\n-        pass\n+        # reset Configuration\n+        petstore_api.Configuration.set_default(None)\n \n     def testConfiguration(self):\n         # check that different instances use different dictionaries\n         c1 = petstore_api.Configuration()\n         c2 = petstore_api.Configuration()\n-        assert id(c1.api_key) != id(c2.api_key)\n-        assert id(c1.api_key_prefix) != id(c2.api_key_prefix)\n+        self.assertNotEqual(id(c1.api_key), id(c2.api_key))\n+        self.assertNotEqual(id(c1.api_key_prefix), id(c2.api_key_prefix))\n+\n+    def testDefaultConfiguration(self):\n+\n+        # prepare default configuration\n+        c1 = petstore_api.Configuration(host=\"example.com\")\n+        petstore_api.Configuration.set_default(c1)\n+\n+        # get default configuration\n+        c2 = petstore_api.Configuration.get_instance()\n+        self.assertEqual(c2.host, \"example.com\")", "originalCommit": "70a585471e4d5f12233d68afc5b00b0be62376b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg1OTU4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382859582", "bodyText": "I wasn't aware that api_key are dict, thanks.", "author": "tomplus", "createdAt": "2020-02-22T00:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg2NTQ5Mw=="}], "type": "inlineReview"}, {"oid": "2a4c72628af6e3ebb9bcbb88d49e485fea0326dd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2a4c72628af6e3ebb9bcbb88d49e485fea0326dd", "message": "[python] change method name and fix handling api_key", "committedDate": "2020-02-21T23:59:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2NDg3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382864878", "bodyText": "How about changing this to:\n__deepcopy__(self, memodict={})\nThat way you control how everything can be copied. For the logger only you can then make a new logger with the same properties as the old one. All other properties can be deep copied. You can use dir(self) or self.__dict__ to iterate over all of self's properties.\nIf you do it this way, then in new_instance you can return copy.deepcopy(cls._default)", "author": "spacether", "createdAt": "2020-02-22T00:30:09Z", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -241,6 +244,40 @@ class Configuration(object):\n         # Disable client side validation\n         self.client_side_validation = True\n \n+    @classmethod\n+    def copy(cls, source):", "originalCommit": "2a4c72628af6e3ebb9bcbb88d49e485fea0326dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0OTM4NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382949384", "bodyText": "Yeah, I'd totally forgotten about this possibility. Thanks.", "author": "tomplus", "createdAt": "2020-02-22T23:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2NDg3OA=="}], "type": "inlineReview"}, {"oid": "be04fb9a0fd1d1f5bb61ebf9272fb2cb6f0162e9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/be04fb9a0fd1d1f5bb61ebf9272fb2cb6f0162e9", "message": "python: using modified deepcopy to set/get default configuration", "committedDate": "2020-02-22T23:20:42Z", "type": "commit"}, {"oid": "f99b59a16d90004e13315a9429aae8964a0d8d6b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f99b59a16d90004e13315a9429aae8964a0d8d6b", "message": "python: update samples", "committedDate": "2020-02-23T09:29:38Z", "type": "commit"}, {"oid": "f6bd708964bb243e3e9a9df87f70be96ebd75a34", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f6bd708964bb243e3e9a9df87f70be96ebd75a34", "message": "python: update samples", "committedDate": "2020-02-23T18:40:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1MDQxOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382950419", "bodyText": "How about returning None if the default copy is not present?\nThen we can do truthy/none checks with the result.\nThis lets our users see and handle the case when a default is unset.\nOr if we want to always return an instance how about naming it\ndefault_copy_or_new_instance?", "author": "spacether", "createdAt": "2020-02-22T23:46:28Z", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -241,6 +244,45 @@ class Configuration(object):\n         # Disable client side validation\n         self.client_side_validation = True\n \n+    def __deepcopy__(self, memo):\n+        cls = self.__class__\n+        result = cls.__new__(cls)\n+        memo[id(self)] = result\n+        for k, v in self.__dict__.items():\n+            if k not in ('logger', 'logger_file_handler'):\n+                setattr(result, k, copy.deepcopy(v, memo))\n+        # shallow copy of loggers\n+        result.logger = copy.copy(self.logger)\n+        # use setters to configure loggers\n+        result.logger_file = self.logger_file\n+        result.debug = self.debug\n+        return result\n+\n+    @classmethod\n+    def set_default(cls, default):\n+        \"\"\"Set default instance of configuration.\n+\n+        It stores default configuration, which can be\n+        returned by get_default_copy method.\n+\n+        :param default: object of Configuration\n+        \"\"\"\n+        cls._default = copy.deepcopy(default)\n+\n+    @classmethod\n+    def get_default_copy(cls):\n+        \"\"\"Return new instance of configuration.\n+\n+        This method returns newly created, based on default constructor,\n+        object of Configuration class or returns a copy of default\n+        configuration passed by the set_default method.\n+\n+        :return: The configuration object.\n+        \"\"\"\n+        if cls._default is not None:\n+            return copy.deepcopy(cls._default)\n+        return Configuration()", "originalCommit": "be04fb9a0fd1d1f5bb61ebf9272fb2cb6f0162e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzMDk1OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r383030959", "bodyText": "I think get_default_copy is good enough for this usage.", "author": "tomplus", "createdAt": "2020-02-23T19:21:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1MDQxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1MDUzOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5315#discussion_r382950539", "bodyText": "How about?\ndefault_copy = Configuration.get_default_copy()\nconfiguration = Configuration() if default_copy is None else default_copy", "author": "spacether", "createdAt": "2020-02-22T23:49:15Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -63,7 +63,7 @@ class ApiClient(object):\n     def __init__(self, configuration=None, header_name=None, header_value=None,\n                  cookie=None, pool_threads=1):\n         if configuration is None:\n-            configuration = Configuration()\n+            configuration = Configuration.get_default_copy()", "originalCommit": "be04fb9a0fd1d1f5bb61ebf9272fb2cb6f0162e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}