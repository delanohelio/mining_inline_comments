{"pr_number": 6027, "pr_title": "Typescript refactor fixes", "pr_createdAt": "2020-04-23T13:45:02Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6027", "timeline": [{"oid": "f0635ccef62280178d9785317908d7fe5d164316", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f0635ccef62280178d9785317908d7fe5d164316", "message": "Fix typo in doc comment", "committedDate": "2020-05-05T11:06:54Z", "type": "forcePushed"}, {"oid": "20259fa2dd640c0166a6517902d4617879bd4437", "url": "https://github.com/OpenAPITools/openapi-generator/commit/20259fa2dd640c0166a6517902d4617879bd4437", "message": "Fix typo in doc comment", "committedDate": "2020-05-05T15:56:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjg1MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r421802850", "bodyText": "Does this change anything except inverting the condition and adding continue?", "author": "TiFu", "createdAt": "2020-05-07T21:23:26Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -783,40 +783,40 @@ private void generateSupportingFiles(List<File> files, Map<String, Object> bundl\n                     continue;\n                 }\n \n-                if (ignoreProcessor.allowsFile(new File(outputFilename))) {\n-                    // support.templateFile is the unmodified/original supporting file name (e.g. build.sh.mustache)\n-                    // templatingEngine.templateExists dispatches resolution to this, performing template-engine specific inspect of support file extensions.\n-                    if (templatingEngine.templateExists(this, support.templateFile)) {\n-                        String templateContent = templatingEngine.compileTemplate(this, bundle, support.templateFile);\n-                        writeToFile(outputFilename, templateContent);\n-                        File written = new File(outputFilename);\n-                        files.add(written);\n-                        if (config.isEnablePostProcessFile()) {\n-                            config.postProcessFile(written, \"supporting-mustache\");\n-                        }\n-                    } else {\n-                        InputStream in = null;\n-\n-                        try {\n-                            in = new FileInputStream(templateFile);\n-                        } catch (Exception e) {\n-                            // continue\n-                        }\n-                        if (in == null) {\n-                            in = this.getClass().getClassLoader().getResourceAsStream(getCPResourcePath(templateFile));\n-                        }\n-                        File outputFile = writeInputStreamToFile(outputFilename, in, templateFile);\n-                        files.add(outputFile);\n-                        if (config.isEnablePostProcessFile() && !dryRun) {\n-                            config.postProcessFile(outputFile, \"supporting-common\");\n-                        }\n-                    }\n-\n-                } else {\n+                if (!ignoreProcessor.allowsFile(new File(outputFilename))) {\n                     if (dryRun) {\n                         dryRunStatusMap.put(outputFilename, new DryRunStatus(java.nio.file.Paths.get(outputFilename), DryRunStatus.State.Ignored));\n                     }\n                     LOGGER.info(\"Skipped generation of {} due to rule in .openapi-generator-ignore\", outputFilename);\n+                    continue;", "originalCommit": "20259fa2dd640c0166a6517902d4617879bd4437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MTk5Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r422491992", "bodyText": "No, as noted in the commit message this only improves the code style to make it easier to understand.", "author": "bodograumann", "createdAt": "2020-05-09T12:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzg5NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r421807895", "bodyText": "Would it make sense to define a type for this? type Body = string | FormData | undefined or something similar?", "author": "TiFu", "createdAt": "2020-05-07T21:33:56Z", "path": "modules/openapi-generator/src/main/resources/typescript/http/http.mustache", "diffHunk": "@@ -112,7 +112,7 @@ export class RequestContext {\n     \treturn this.headers;\n     }\n     \n-    public getBody(): string | FormData { \n+    public getBody(): string | FormData | undefined{", "originalCommit": "20259fa2dd640c0166a6517902d4617879bd4437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MjMwMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r422492301", "bodyText": "I'll have to think about that ;-)", "author": "bodograumann", "createdAt": "2020-05-09T12:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2MTIyMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r424361221", "bodyText": "I have added a type RequestBody. setBody can also be used with it, so setting the body to undefined removes it.", "author": "bodograumann", "createdAt": "2020-05-13T11:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzg5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxMDk3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r421810978", "bodyText": "Should generators/jquery.mustache also be removed?", "author": "TiFu", "createdAt": "2020-05-07T21:40:57Z", "path": "modules/openapi-generator/src/main/resources/typescript/generators/fetch-api.mustache", "diffHunk": "@@ -1,7 +0,0 @@\n-export * from './http/http';", "originalCommit": "20259fa2dd640c0166a6517902d4617879bd4437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5MjI0Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r422492246", "bodyText": "Ah yes definitely, guess that got lost during rebasing.", "author": "bodograumann", "createdAt": "2020-05-09T12:51:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxMDk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2MDc2Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6027#discussion_r424360763", "bodyText": "Ok, removed it now.", "author": "bodograumann", "createdAt": "2020-05-13T11:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxMDk3OA=="}], "type": "inlineReview"}, {"oid": "4df77dc827de378f3fb6ebe4df696e1454a4c508", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4df77dc827de378f3fb6ebe4df696e1454a4c508", "message": "Introduce RequestBody type and remove method check", "committedDate": "2020-05-13T11:21:10Z", "type": "forcePushed"}, {"oid": "55f5986ab7e4810e858f0580d34e41a642c236f3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/55f5986ab7e4810e858f0580d34e41a642c236f3", "message": "Clean: Remove redundant cliOption definition", "committedDate": "2020-05-17T15:34:21Z", "type": "commit"}, {"oid": "6ccd1cb8e1e87b506c852d8b56c4f1044de12767", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6ccd1cb8e1e87b506c852d8b56c4f1044de12767", "message": "Remove redundant directory structure in templates\n\nIf we need to have different index.ts files for the different\nframeworks, we can mostly do that in the one mustache file. In the cases\nwhere that is not possible, we can still add a new override file later.", "committedDate": "2020-05-17T15:34:22Z", "type": "commit"}, {"oid": "3a4bc35346620ffded1d55bf9d412459d887a5f6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3a4bc35346620ffded1d55bf9d412459d887a5f6", "message": "Use File.separator consistently", "committedDate": "2020-05-17T15:34:23Z", "type": "commit"}, {"oid": "7e766000fd526ce906c3afa0911517733d74e5fb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7e766000fd526ce906c3afa0911517733d74e5fb", "message": "Only export selected api type", "committedDate": "2020-05-17T15:34:23Z", "type": "commit"}, {"oid": "90573a5fa05b932b1f31c500f4f5c3950c0153bb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/90573a5fa05b932b1f31c500f4f5c3950c0153bb", "message": "Simplify promise polyfill import\n\nThe behaviour should be the same, according to the es6-promise docs.\nPreviously tsc would report the error:\n> error TS2307: Cannot find module 'es6-promise'.", "committedDate": "2020-05-17T15:34:24Z", "type": "commit"}, {"oid": "51ea0e841d65f8df66bf45b5f9d7ccc2f4033c7d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/51ea0e841d65f8df66bf45b5f9d7ccc2f4033c7d", "message": "Import HttpFile in all models", "committedDate": "2020-05-17T15:34:24Z", "type": "commit"}, {"oid": "90f2fbbe9b5e680f93bd299f9283d5a4c7e41f6f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/90f2fbbe9b5e680f93bd299f9283d5a4c7e41f6f", "message": "Export server configurations", "committedDate": "2020-05-17T15:34:25Z", "type": "commit"}, {"oid": "41f5b717110088bd538067e37f0fb891f2cf0e47", "url": "https://github.com/OpenAPITools/openapi-generator/commit/41f5b717110088bd538067e37f0fb891f2cf0e47", "message": "Use undefined as default body value\n\nThe empty string is not interpreted as \"no body\" by the browser fetch\napi and thus leads to an exception during get requests", "committedDate": "2020-05-17T15:34:25Z", "type": "commit"}, {"oid": "28b47ca1c24b9284277ded2bfaa719d149d4cd58", "url": "https://github.com/OpenAPITools/openapi-generator/commit/28b47ca1c24b9284277ded2bfaa719d149d4cd58", "message": "Improve codestyle: prefer guards to nesting", "committedDate": "2020-05-17T15:34:26Z", "type": "commit"}, {"oid": "0610d7a66dc60da0a80249fe288bd6b8545ef362", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0610d7a66dc60da0a80249fe288bd6b8545ef362", "message": "Remove verbose debug output\n\nThis should not be commited, because every developer has very different\nrequirements what debug information he needs to see.", "committedDate": "2020-05-17T15:34:26Z", "type": "commit"}, {"oid": "cda977ab4f44ccdfd441f8b9e36a6eb3d7310679", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cda977ab4f44ccdfd441f8b9e36a6eb3d7310679", "message": "Fix: Use cleaned model names for imports", "committedDate": "2020-05-17T15:34:27Z", "type": "commit"}, {"oid": "4b5d89ea4cd35d4ae1f6d9a66807f4f0e3c68978", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4b5d89ea4cd35d4ae1f6d9a66807f4f0e3c68978", "message": "Fix: do not call toString on undefined", "committedDate": "2020-05-17T15:34:28Z", "type": "commit"}, {"oid": "772390e2b6a88586a23cb580719f70470824699b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/772390e2b6a88586a23cb580719f70470824699b", "message": "Fix typo in doc comment", "committedDate": "2020-05-17T15:34:28Z", "type": "commit"}, {"oid": "cb57789d4da85fb868aae115e4bf77dfab87a9c5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cb57789d4da85fb868aae115e4bf77dfab87a9c5", "message": "Introduce RequestBody type and remove method check", "committedDate": "2020-05-17T15:34:29Z", "type": "commit"}, {"oid": "cb57789d4da85fb868aae115e4bf77dfab87a9c5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cb57789d4da85fb868aae115e4bf77dfab87a9c5", "message": "Introduce RequestBody type and remove method check", "committedDate": "2020-05-17T15:34:29Z", "type": "forcePushed"}]}