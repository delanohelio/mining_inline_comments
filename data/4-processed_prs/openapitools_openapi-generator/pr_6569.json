{"pr_number": 6569, "pr_title": "[python-client] Enable per-request auth settings", "pr_createdAt": "2020-06-05T18:06:47Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6569", "timeline": [{"oid": "f0229a67fd8d662728d8ccdee749f89d895bf12f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f0229a67fd8d662728d8ccdee749f89d895bf12f", "message": "Enable per-request access token in Python client.", "committedDate": "2020-06-05T21:18:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMjU2NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6569#discussion_r438232564", "bodyText": "When request_auth is passed in, this will loop through n times where n is the number of keys in auth_settings and:\n\nupdate auth for the same request_auth\nif request_auth is is in query, it will append n instances of the same auth info into the query, which is not what we desire\n\nNote: endpoints can have multiple auth settings set at one time.\nWhat should your solution do in that case?\nHow about instead requiring that the request_auth that you are passing in looks like:\nConfiguration.auth_settings()\nthat way we can call it like:\nauth_setting = request_auth.get(auth) or self.configuration.auth_settings().get(auth)\n\nAnd request_auth would look like:\n{\n    'http_basic_test':\n            'in': 'header',\n            'key': 'Authorization',\n            'value': 'Prefix ANOTHER_TOKEN'\n        }\n}\n\nOr if you want to keep the shape of request_auth as-is, how about changing the line 653 for loop to only run once when request_auth is passed in, and to only use request_auth?", "author": "spacether", "createdAt": "2020-06-10T15:55:21Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -550,18 +559,21 @@ class ApiClient(object):\n         else:\n             return content_types[0]\n \n-    def update_params_for_auth(self, headers, querys, auth_settings):\n+    def update_params_for_auth(self, headers, querys, auth_settings,\n+                               request_auth=None):\n         \"\"\"Updates header and query params based on authentication setting.\n \n         :param headers: Header parameters dict to be updated.\n         :param querys: Query parameters tuple list to be updated.\n         :param auth_settings: Authentication setting identifiers list.\n+        :param request_auth: if set, the provided settings will\n+                             override the token in the configuration.\n         \"\"\"\n         if not auth_settings:\n             return\n \n         for auth in auth_settings:\n-            auth_setting = self.configuration.auth_settings().get(auth)\n+            auth_setting = request_auth or self.configuration.auth_settings().get(auth)", "originalCommit": "8c1c200a604be39a0fb671eefdc634ff01d92fa7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0OTAwMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6569#discussion_r438249000", "bodyText": "Augh, good catch. I will clean this up. I think the latter was my intent since passing in the configuration shape requires the caller to know the name of the securityScheme defined in the spec, which feels a bit redundant. Let me see what removing the loop looks like.", "author": "warrengray", "createdAt": "2020-06-10T16:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMjU2NA=="}], "type": "inlineReview"}, {"oid": "4a4b7dd60f358c9fa87c51a25a866a4dfaf7e41e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4a4b7dd60f358c9fa87c51a25a866a4dfaf7e41e", "message": "Update api_client.mustache so that request_auth overrides all other auth settings when specified.", "committedDate": "2020-06-10T17:10:29Z", "type": "forcePushed"}, {"oid": "17fda855dc80c1c548339b1396e06b3c9627a856", "url": "https://github.com/OpenAPITools/openapi-generator/commit/17fda855dc80c1c548339b1396e06b3c9627a856", "message": "Enable per-request access token in Python client.", "committedDate": "2020-06-10T18:47:05Z", "type": "commit"}, {"oid": "a5cef78474ef7fa67eaccdf05c4fad8263e91787", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a5cef78474ef7fa67eaccdf05c4fad8263e91787", "message": "Add missing regenerated sample files.", "committedDate": "2020-06-10T18:47:06Z", "type": "commit"}, {"oid": "7332bd69b5fe9cece524301c866231085e0f15f2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7332bd69b5fe9cece524301c866231085e0f15f2", "message": "Rework to the more general case of overriding the auth settings for a request.", "committedDate": "2020-06-10T18:47:07Z", "type": "commit"}, {"oid": "0b520693a05bc9cba3a7c1803d3674253a22c231", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0b520693a05bc9cba3a7c1803d3674253a22c231", "message": "Add unit tests.", "committedDate": "2020-06-10T18:47:08Z", "type": "commit"}, {"oid": "a8a76720cbeec1301d2344df88beb0ec652e96e8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a8a76720cbeec1301d2344df88beb0ec652e96e8", "message": "Update api_client.mustache so that request_auth overrides all other auth settings when specified.", "committedDate": "2020-06-10T18:47:09Z", "type": "commit"}, {"oid": "a8a76720cbeec1301d2344df88beb0ec652e96e8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a8a76720cbeec1301d2344df88beb0ec652e96e8", "message": "Update api_client.mustache so that request_auth overrides all other auth settings when specified.", "committedDate": "2020-06-10T18:47:09Z", "type": "forcePushed"}]}