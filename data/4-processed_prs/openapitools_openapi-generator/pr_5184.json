{"pr_number": 5184, "pr_title": "[codegen] Add code comments and improve \"first content\" warning", "pr_createdAt": "2020-02-01T02:26:10Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5184", "timeline": [{"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "message": "Add code comments and improve warning", "committedDate": "2020-02-01T02:24:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjA5NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752094", "bodyText": "This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.\nAs a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.", "author": "sebastien-rosset", "createdAt": "2020-02-01T02:37:24Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYwMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752600", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n          \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\", entry.getKey());\n          \n      \n    \n    \n  \n\nUsing String.format syntax means the string isn't formatted with entry.getKey() if the log level is above warn.", "author": "jimschubert", "createdAt": "2020-02-01T02:47:14Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752612", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            entry.getKey() + \"')\");\n          \n      \n    \n    \n  \n\nWrapped line isn't need if prev suggestion is accepted.", "author": "jimschubert", "createdAt": "2020-02-01T02:47:29Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzE2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753160", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MediaType mediaType = content.values().iterator().next();\n          \n          \n            \n                    MediaType mediaType = entry.getValue();\n          \n      \n    \n    \n  \n\nNo need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)", "author": "jimschubert", "createdAt": "2020-02-01T02:57:43Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzIxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753210", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return entry.getValue().getSchema();\n          \n          \n            \n                    return mediaType.getSchema();", "author": "jimschubert", "createdAt": "2020-02-01T02:58:37Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");\n         }\n-        MediaType mediaType = content.values().iterator().next();\n-        return mediaType.getSchema();\n+        return entry.getValue().getSchema();", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "message": "add code comments", "committedDate": "2020-02-01T03:02:06Z", "type": "commit"}, {"oid": "062caf9d1fcd11b28c73325559ff2e3623496592", "url": "https://github.com/OpenAPITools/openapi-generator/commit/062caf9d1fcd11b28c73325559ff2e3623496592", "message": "remove line which is no longer needed", "committedDate": "2020-02-01T03:24:03Z", "type": "commit"}]}