{"pr_number": 5106, "pr_title": "[scala] fix akka-scala-client template compilation warnings", "pr_createdAt": "2020-01-25T09:09:02Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5106", "timeline": [{"oid": "6bfd5b2910788d6f1d40f25a41cc2ef7cf0ff623", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6bfd5b2910788d6f1d40f25a41cc2ef7cf0ff623", "message": "fix akka-scala-client template compilation warnings\n\nadd COOKIE location authorization key\nregenerate template", "committedDate": "2020-01-29T14:51:17Z", "type": "commit"}, {"oid": "6bfd5b2910788d6f1d40f25a41cc2ef7cf0ff623", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6bfd5b2910788d6f1d40f25a41cc2ef7cf0ff623", "message": "fix akka-scala-client template compilation warnings\n\nadd COOKIE location authorization key\nregenerate template", "committedDate": "2020-01-29T14:51:17Z", "type": "forcePushed"}, {"oid": "dbaeeba82cb2adaee02350499fa385e2b95402d4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/dbaeeba82cb2adaee02350499fa385e2b95402d4", "message": "fix scala akka-http client model imports", "committedDate": "2020-01-29T15:26:30Z", "type": "commit"}, {"oid": "7a4d9811191cfd5f7ff3703e1b5f208df853c867", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7a4d9811191cfd5f7ff3703e1b5f208df853c867", "message": "fix #4004 custom package name in reference.conf", "committedDate": "2020-01-29T16:18:11Z", "type": "commit"}, {"oid": "ef3ac57fb4ad1b70e4d4b6679e93c3a377fe2b40", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef3ac57fb4ad1b70e4d4b6679e93c3a377fe2b40", "message": "fix scaka-akka codegen test", "committedDate": "2020-01-31T15:51:43Z", "type": "commit"}, {"oid": "ef3ac57fb4ad1b70e4d4b6679e93c3a377fe2b40", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef3ac57fb4ad1b70e4d4b6679e93c3a377fe2b40", "message": "fix scaka-akka codegen test", "committedDate": "2020-01-31T15:51:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcwNTczNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r374705734", "bodyText": "@chameleon82 are these a must? In other words, would the change still work without documenting the HTTP 200 response in the spec?\nWe prefer not to update petstore.yaml to keep it as original as possible.", "author": "wing328", "createdAt": "2020-02-04T14:35:27Z", "path": "modules/openapi-generator/src/test/resources/3_0/petstore.yaml", "diffHunk": "@@ -41,6 +50,15 @@ paths:\n       description: ''\n       operationId: updatePet\n       responses:\n+        '200':\n+          description: successful operation\n+          content:\n+            application/xml:\n+              schema:\n+                $ref: '#/components/schemas/Pet'\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/Pet'", "originalCommit": "ef3ac57fb4ad1b70e4d4b6679e93c3a377fe2b40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA0MDYyOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r375040629", "bodyText": "@wing328 Thanks for calling this out. When you say original, what are we keeping it original compared to? This spec isn't the \"official\" petstore.yaml spec from OpenAPI Specification 3.0 examples.\nI'd have some concerns about not including these changes. It would mean that the PUT and POST methods are only documented to ever return a client error. From https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#responsesObject:\n\nA container for the expected responses of an operation. The container maps a HTTP response code to the expected response.\nThe documentation is not necessarily expected to cover all possible HTTP response codes because they may not be known in advance. However, documentation is expected to cover a successful operation response and any known errors.\nThe default MAY be used as a default response object for all HTTP codes that are not covered individually by the specification.\nThe Responses Object MUST contain at least one response code, and it SHOULD be the response for a successful operation call.\n\nAlthough the line \"documentation is expected to cover a successful operation response\" doesn't use the specification terminology MUST, MAY or SHOULD, I think our test yaml breaking 'expectations' could be confusing especially since there is no 'default' response documented.", "author": "jimschubert", "createdAt": "2020-02-05T03:17:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcwNTczNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTczNjE3Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r375736176", "bodyText": "@wing328 @jimschubert I've checked than one https://petstore3.swagger.io/api/v3/openapi.yaml which currently has those specified, openApi specs also have specified successful response here https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore.yaml and here https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore-expanded.yaml\nHowever https://petstore.swagger.io/v2/swagger.yaml has not specified even default one.\nSeems that case must be clear in OpenApi Specification.\nI suppose SHOULD for successful operation means that client has another way to check result. For example, by calling GET /pet/123 after calling POST /pet {id = 123, ... }\nFor the current case i have added this to validate successful scenarios in the unit tests", "author": "chameleon82", "createdAt": "2020-02-06T09:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcwNTczNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwNzI2Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r375807262", "bodyText": "You're right that's probably why they've used SHOULD. However, the common way to do that without a returned body is to use links in the header of a successful response. I think your changes to include 2xx type responses makes sense. If we don't include positive responses for these endpoints, I think we should remove the endpoints entirely, because no realistic API returns only client errors for a path.\n@wing328 are you cool with keeping these changes? We should probably also review all our go-to specs and make sure they represent real-world designs.", "author": "jimschubert", "createdAt": "2020-02-06T12:31:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcwNTczNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzNDA0OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r375834048", "bodyText": "Totally agreed with reviewing the spec to ensure it's correct. Let's go with this PR for the time being.", "author": "wing328", "createdAt": "2020-02-06T13:32:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcwNTczNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODY0MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r375038641", "bodyText": "This will be a potential breaking change unless this is added to the constructor:\nimportMapping.put(\"UUID\", \"java.util.UUID\");", "author": "jimschubert", "createdAt": "2020-02-05T03:06:38Z", "path": "modules/openapi-generator/src/main/resources/scala-akka-client/model.mustache", "diffHunk": "@@ -1,9 +1,10 @@\n {{>licenseInfo}}\n package {{package}}\n \n+{{#imports}}\n+import {{import}}\n+{{/imports}}\n import {{mainPackage}}.core.ApiModel\n-import org.joda.time.DateTime\n-import java.util.UUID", "originalCommit": "ef3ac57fb4ad1b70e4d4b6679e93c3a377fe2b40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc0MDg4MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5106#discussion_r375740880", "bodyText": "it is already there in ScalaAkkaClientCodegen extends AbstractScalaCodegen extends DefaultCodegen base class.\nI will add unit test to check there is no breaking changes for the further versions", "author": "chameleon82", "createdAt": "2020-02-06T10:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODY0MQ=="}], "type": "inlineReview"}]}