{"pr_number": 6760, "pr_title": "[PHP] Better handling of invalid data (array)", "pr_createdAt": "2020-06-24T00:58:09Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6760", "timeline": [{"oid": "40a00520aecce4636ac1526bf3af35337d8d087f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/40a00520aecce4636ac1526bf3af35337d8d087f", "message": "Update ObjectSerializer.mustache\n\nIf the $data is a wrongly formatted Json or if data is not an array, php gives error:\r\n\r\nInvalid argument supplied for foreach() at line 257 (Now line is 262)", "committedDate": "2020-06-24T00:49:44Z", "type": "commit"}, {"oid": "ede2150903f9aacaf8b6a1391492e8e7179fb163", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ede2150903f9aacaf8b6a1391492e8e7179fb163", "message": "update samples", "committedDate": "2020-07-02T07:51:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3MjY0MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6760#discussion_r449772641", "bodyText": "I guess that it won't work in 99% cases because json_decode without second argument $assoc = true returns StdClass which isn't array. And my brief test confirms that:\n$data = '{\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5}';\n$data = is_string($data) ? json_decode($data) : $data;\n\nif (!is_array($data)) {\n    throw new \\InvalidArgumentException(\"Invalid array '$class'\");\n}\n// throws exception because StdClass isn't array", "author": "ybelenko", "createdAt": "2020-07-04T13:19:34Z", "path": "samples/client/petstore/php/OpenAPIClient-php/lib/ObjectSerializer.php", "diffHunk": "@@ -262,6 +262,11 @@ public static function deserialize($data, $class, $httpHeaders = null)\n             return null;\n         } elseif (strcasecmp(substr($class, -2), '[]') === 0) {\n             $data = is_string($data) ? json_decode($data) : $data;\n+            \n+            if (!is_array($data)) {", "originalCommit": "ede2150903f9aacaf8b6a1391492e8e7179fb163", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3NzUyMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6760#discussion_r449777520", "bodyText": "Hi,\nYou are right about the fact that json_decode would return a StdClass in that scenario. Since this code is only executed when you have declared your model as an array using \"[]\", if such case would happen, it would be ok to send an InvalidArgumentException in my opinion. Since you have declared your model as an array and the result is an object, it's just normal to receive an InvalidArgumentException... From my understanding, there is no such things as an associative array in JSON, it's just an object. So someone declaring the value as an array with \"[]\" and use an object object should receive this error ?\nPerhaps I'm missing something in the evaluation.", "author": "Herrick19", "createdAt": "2020-07-04T14:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3MjY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2NDQ5Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6760#discussion_r449864493", "bodyText": "Oh, now I see. Data should look like [\"foo\", \"bar\", \"hello world\"] for StringModel[] class definition to pass this part of code without exception.", "author": "ybelenko", "createdAt": "2020-07-05T11:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3MjY0MQ=="}], "type": "inlineReview"}]}