{"pr_number": 5423, "pr_title": "Add pythonSrcRoot option to python servers (aiohttp/flask/blueplanet) to support src/ layout projects [and reenable/fix all python server tests]", "pr_createdAt": "2020-02-25T00:01:02Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5423", "timeline": [{"oid": "4a5566b6e4250701ad3c7b4b75640e342a982578", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4a5566b6e4250701ad3c7b4b75640e342a982578", "message": "Add src/ layout option to python servers (aiohttp/flask)\n\nThis allows the generated code to sit under src/ instead of a module in\nthe root dir. This is opt-in, as the option defaults to false (the\nexisting behavior).", "committedDate": "2020-02-25T04:03:31Z", "type": "forcePushed"}, {"oid": "cc9424702d35e5b13942826afb4e77a7ccb20bed", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cc9424702d35e5b13942826afb4e77a7ccb20bed", "message": "Add src/ layout option to python servers (aiohttp/flask)\n\nThis allows the generated code to sit under src/ instead of a module in\nthe root dir. This is opt-in, as the option defaults to false (the\nexisting behavior).", "committedDate": "2020-02-25T04:08:53Z", "type": "forcePushed"}, {"oid": "4ecb0854f3788783d8ddba45f0370fd69800dfb5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4ecb0854f3788783d8ddba45f0370fd69800dfb5", "message": "Add src/ layout option to python servers (aiohttp/flask)\n\nThis allows the generated code to sit under src/ instead of a module in\nthe root dir. This is opt-in, as the option defaults to false (the\nexisting behavior).", "committedDate": "2020-02-25T04:14:50Z", "type": "forcePushed"}, {"oid": "15360ac0ad3778de25f728dde3b6ce232aa68a01", "url": "https://github.com/OpenAPITools/openapi-generator/commit/15360ac0ad3778de25f728dde3b6ce232aa68a01", "message": "update python-server docs", "committedDate": "2020-03-06T06:34:38Z", "type": "forcePushed"}, {"oid": "47056805d2023fa929831593f1b630b2278a93a1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/47056805d2023fa929831593f1b630b2278a93a1", "message": "python server: build sample srclayout project", "committedDate": "2020-03-07T04:14:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389228009", "bodyText": "@cognifloyd would there ever be a use case where we would want to name the folder something other than src?\nIf so why don't we make this parameter more general like sourceFolderName type string.\nWhat do you think?", "author": "spacether", "createdAt": "2020-03-07T04:46:13Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -165,6 +167,8 @@ public PythonAbstractConnexionServerCodegen(String templateDirectory, boolean fi\n                 defaultValue(\"8080\"));\n         cliOptions.add(CliOption.newBoolean(USE_NOSE, \"use the nose test framework\").\n                 defaultValue(Boolean.FALSE.toString()));\n+        cliOptions.add(CliOption.newBoolean(SRC_LAYOUT, \"put python module under src/\").", "originalCommit": "47056805d2023fa929831593f1b630b2278a93a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMzQ2Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389233467", "bodyText": "src/ is pretty standard, but I suppose I have seen projects that do lib/ as well.\nSo, an empty string (or maybe a .) means no subdir and a string == a subdir? hmm.", "author": "cognifloyd", "createdAt": "2020-03-07T06:43:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzNDEyMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389234120", "bodyText": "hmm. Here's someone that puts his source in a python dir. So, there may be use cases where that would be helpful. Like in multi-language projects or where you include client and server libs in the same repo.\nSo, the name srcLayout only makes sense as a boolean. What would an option be for selecting an alternate directory for the python source files? pythonSrcRoot?\u00a0srcLayoutDir? or would you do two vars, one for the dir to use and a boolean to enable it?", "author": "cognifloyd", "createdAt": "2020-03-07T06:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MTM4Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389391386", "bodyText": "How about the string pythonSrcRoot? And make it an empty value by default.", "author": "spacether", "createdAt": "2020-03-08T17:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4Njk3Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r390186973", "bodyText": "done", "author": "cognifloyd", "createdAt": "2020-03-10T09:30:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389228405", "bodyText": "Why not edit outputFolder up above before this is run?\nThen we don't need to put these if blocks in twice and can keep this code as-is.\nUp in processOpts:\n        if (this.srcLayout) {\n            outputFolder += \"src\" + File.separator + \"src\";\n        }", "author": "spacether", "createdAt": "2020-03-07T04:54:54Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -304,7 +315,20 @@ public String escapeReservedWord(String name) {\n      */\n     @Override\n     public String apiFileFolder() {\n-        return outputFolder + File.separator + apiPackage().replace('.', File.separatorChar);\n+        String pkgPath = apiPackage().replace('.', File.separatorChar);\n+        if (this.srcLayout) {\n+            pkgPath = \"src\" + File.separator + pkgPath;\n+        }", "originalCommit": "47056805d2023fa929831593f1b630b2278a93a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMzU1MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389233550", "bodyText": "Because there are still supporting files (like Readme, .gitignore, etc) that still need to be in the root dir. So we need to selectively move only the source files under the src/ dir.", "author": "cognifloyd", "createdAt": "2020-03-07T06:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MTUyMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389391520", "bodyText": "Ah, in that case why not use your new variable\npythonSrcRoot? Then it is only defined once and it will include the file separator when you pass in the value \"src/\"", "author": "spacether", "createdAt": "2020-03-08T17:57:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NjgzNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r390186837", "bodyText": "done", "author": "cognifloyd", "createdAt": "2020-03-10T09:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODU1OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389228558", "bodyText": "Did you test this with useNose=True also?\nYou might need to hard code in a path for nosetests now that the code is deeper.", "author": "spacether", "createdAt": "2020-03-07T04:58:16Z", "path": "modules/openapi-generator/src/main/resources/python-flask/tox.mustache", "diffHunk": "@@ -6,4 +6,4 @@ deps=-r{toxinidir}/requirements.txt\n      -r{toxinidir}/test-requirements.txt\n \n commands=\n-   {{^useNose}}pytest --cov={{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}\n\\ No newline at end of file\n+   {{^useNose}}pytest --cov={{#srcLayout}}src/{{/srcLayout}}{{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}", "originalCommit": "47056805d2023fa929831593f1b630b2278a93a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMzc2NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389233764", "bodyText": "hmm. I don't know nose.\nBut from a quick google, it looks like it will use lib and src directories by default.", "author": "cognifloyd", "createdAt": "2020-03-07T06:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE5NTU5Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r390195592", "bodyText": "If you can point me to an option for nosetests to set the python sources root, I'm happy to add that.\nFrom what I can tell, you have to add it inside the test code: https://stackoverflow.com/a/30501263\nBut there isn't any test code to work with. It looks like all of the tests are written with pytest in mind (from my limited understanding of nose).\nThe things that take useNose into account are tox.mustache and test-requirements.mustache. It looks like the flask template for travis expects to run tests with nosetests without regards to useNose.\nDe-tangling the nose stuff would probably be good for a separate PR (by someone who actually uses / understands nose).", "author": "cognifloyd", "createdAt": "2020-03-10T09:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODU1OA=="}], "type": "inlineReview"}, {"oid": "96c8704deda74ba7227343651c4efd71b3b26ea8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/96c8704deda74ba7227343651c4efd71b3b26ea8", "message": "python server: build sample srclayout project", "committedDate": "2020-03-10T09:26:39Z", "type": "forcePushed"}, {"oid": "2a924ba174996d0e29b17d1adff2a905b7b08634", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2a924ba174996d0e29b17d1adff2a905b7b08634", "message": "python server: build sample srclayout project", "committedDate": "2020-03-10T09:28:04Z", "type": "forcePushed"}, {"oid": "76d54f7f400a6a2f0338df5aa345e7c765f79179", "url": "https://github.com/OpenAPITools/openapi-generator/commit/76d54f7f400a6a2f0338df5aa345e7c765f79179", "message": "python server: Add pythonSrcRoot option\n\nThis will allow the python project to be in a subdirectory (as specified\nin pythonSrcRoot). That could mean following the src layout with sources\nunder src/ or lib/. Multi-language projects might use a sub directory\nlike python/, or whatever makes sense for the project.\n\nBy default, the pythonSrcRoot is \"\", meaning the existing behavior is\nthe default.", "committedDate": "2020-04-03T22:56:05Z", "type": "commit"}, {"oid": "fd751e9efd4413fc50d5233b1504ba71f3158a43", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fd751e9efd4413fc50d5233b1504ba71f3158a43", "message": "python server: update template files to support pythonSrcRoot", "committedDate": "2020-04-03T22:56:20Z", "type": "commit"}, {"oid": "7df485f284f1e6623c0f47c1e34f9fe3512b8bb3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7df485f284f1e6623c0f47c1e34f9fe3512b8bb3", "message": "python server: update docs to add pythonSrcRoot option", "committedDate": "2020-04-03T22:56:23Z", "type": "commit"}, {"oid": "9e7a2a32cce3fa69510a0b6722d00614998f2c33", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9e7a2a32cce3fa69510a0b6722d00614998f2c33", "message": "python server: add pythonSrcRoot sample script", "committedDate": "2020-04-03T22:56:26Z", "type": "commit"}, {"oid": "a440404e1629a066e6c6872c3c325666381a85fb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a440404e1629a066e6c6872c3c325666381a85fb", "message": "python server: build sample srclayout project", "committedDate": "2020-04-03T22:56:27Z", "type": "commit"}, {"oid": "0bbd2b7c085d33a5b7fa8d621cac074400db5a69", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0bbd2b7c085d33a5b7fa8d621cac074400db5a69", "message": "[Python] copy test files preserving history", "committedDate": "2020-04-03T23:26:32Z", "type": "commit"}, {"oid": "23a64a7baa745ccafb0a1b3ae901852c05868c03", "url": "https://github.com/OpenAPITools/openapi-generator/commit/23a64a7baa745ccafb0a1b3ae901852c05868c03", "message": "[Python] Make a conflict to preserve file copy history", "committedDate": "2020-04-03T23:40:21Z", "type": "commit"}, {"oid": "0e32620247b76e364c56bcdc12afdf5381107b21", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0e32620247b76e364c56bcdc12afdf5381107b21", "message": "Merge branch to finish copying python test files", "committedDate": "2020-04-03T23:46:57Z", "type": "commit"}, {"oid": "a649ac450efc728a9d5c78af384e084db6a1c031", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a649ac450efc728a9d5c78af384e084db6a1c031", "message": "[Python] customize pom.xml for src layout tests", "committedDate": "2020-04-03T23:49:34Z", "type": "commit"}, {"oid": "ef999c283c19fb192a01a98c6a16222329a848cd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef999c283c19fb192a01a98c6a16222329a848cd", "message": "[Python] add python-aiohttp-srclayout tests", "committedDate": "2020-04-04T00:01:25Z", "type": "commit"}, {"oid": "b03adefccfcfe39db754528ad2316dcefdff62da", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b03adefccfcfe39db754528ad2316dcefdff62da", "message": "[Python] Fix server tests by updating requirements\n\nReverts the PR that disabled python2 server tests:\nhttps://github.com/OpenAPITools/openapi-generator/pull/4949\n\nReverts commits that disabled python3 server tests:\n9adfedbfbb45c7059e64b3d9a285710bded4fb62\n17ee990baaa80585242c7a07d64e2be4888fcfd0\n\nIssue about the python 3 tests:\nhttps://github.com/OpenAPITools/openapi-generator/issues/5235\n\nI couldn't find an issue about the python2 tests being disabled.\nI'm guessing build errors like the following were the trigger:\nhttps://travis-ci.org/github/OpenAPITools/openapi-generator/builds/634238181\n\nLet's see what breaks!", "committedDate": "2020-04-04T01:08:04Z", "type": "commit"}, {"oid": "a37f27ff32e01c5d587229c5ed15bb3d4c114f42", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a37f27ff32e01c5d587229c5ed15bb3d4c114f42", "message": "hack to only run tests on travis for now", "committedDate": "2020-04-04T01:48:53Z", "type": "forcePushed"}, {"oid": "c46e5ab8e1ea2d1e58b1f1eca8ac11104fe228b9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c46e5ab8e1ea2d1e58b1f1eca8ac11104fe228b9", "message": "rebuild python servers", "committedDate": "2020-04-04T02:05:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyMTYyMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r403421620", "bodyText": "How about the simpler\n# connexion requires werkzeug but connexion < 2.4.0 does not install werkzeug\n# we must peg werkzeug versions below to fix connexion\n# https://github.com/zalando/connexion/pull/1044\nwerkzeug == 0.16.1; python_version==\"3.4\"\nwerkzeug == 0.16.1; python_version==\"3.5\"\n\nNote: for python versions ==2.7 and >= 3.6 we should not need to install werkzeug\nbecause per zalando/connexion@7111bc9\nthis is fixed in connexion 2.4.0, and 2.6.0 which we are installing for those versions of python", "author": "spacether", "createdAt": "2020-04-04T04:07:53Z", "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "diffHunk": "@@ -1,7 +1,15 @@\n connexion >= 2.6.0; python_version>=\"3.6\"\n+# connexion 2.6 dropped support for python < 3.6\n connexion >= 2.3.0; python_version==\"3.5\"\n connexion >= 2.3.0; python_version==\"3.4\"\n+{{#supportPython2}}\n connexion == 2.4.0; python_version<=\"2.7\"\n+{{/supportPython2}}\n+# werkzeug is a dep of connexion. They need to record their dep.", "originalCommit": "b03adefccfcfe39db754528ad2316dcefdff62da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzMjQ4MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r403432480", "bodyText": "I applied your suggestion, plus I simplifeid it further using the or syntax from PEP 496: https://www.python.org/dev/peps/pep-0496/#examples", "author": "cognifloyd", "createdAt": "2020-04-04T06:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyMTYyMA=="}], "type": "inlineReview"}, {"oid": "458de3f923987c4fdf28af6b04fc07188e8a6075", "url": "https://github.com/OpenAPITools/openapi-generator/commit/458de3f923987c4fdf28af6b04fc07188e8a6075", "message": "[Python] Copy setup.py to python-aiohttp", "committedDate": "2020-04-04T06:04:29Z", "type": "commit"}, {"oid": "c76879714208f0762af1384f1c113270a848e92b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c76879714208f0762af1384f1c113270a848e92b", "message": "[Python] Save history while copying setup.py to python-aiohttp", "committedDate": "2020-04-04T06:04:59Z", "type": "commit"}, {"oid": "422022a7dd92c5a071dba9edf57b550e2b228533", "url": "https://github.com/OpenAPITools/openapi-generator/commit/422022a7dd92c5a071dba9edf57b550e2b228533", "message": "[Python] Merge copied setup.py", "committedDate": "2020-04-04T06:06:23Z", "type": "commit"}, {"oid": "b791fff77eb0e688170b611cc23af08677e7de77", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b791fff77eb0e688170b611cc23af08677e7de77", "message": "[Python] Add aiohttp server setup.py", "committedDate": "2020-04-04T06:07:56Z", "type": "commit"}, {"oid": "8a63a5cf2a6a7d022385bc60072340af4dfaafaf", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8a63a5cf2a6a7d022385bc60072340af4dfaafaf", "message": "[Python] Fix python server tests with src layout", "committedDate": "2020-04-04T06:07:57Z", "type": "commit"}, {"oid": "03988270cc9e0879757da97f66a184c825efed76", "url": "https://github.com/OpenAPITools/openapi-generator/commit/03988270cc9e0879757da97f66a184c825efed76", "message": "[Python] bump Flask-Testing version", "committedDate": "2020-04-04T06:07:57Z", "type": "commit"}, {"oid": "886490209b314e8ddd48fc618acbbcec3f916558", "url": "https://github.com/OpenAPITools/openapi-generator/commit/886490209b314e8ddd48fc618acbbcec3f916558", "message": "[Python] rebuild python server samples", "committedDate": "2020-04-04T06:08:30Z", "type": "forcePushed"}, {"oid": "8dbc5f6b342f6d4e1c3ab5545473a21d2a25d734", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8dbc5f6b342f6d4e1c3ab5545473a21d2a25d734", "message": "[Python] Pin pyyaml for py2.7 flask server", "committedDate": "2020-04-04T07:24:32Z", "type": "commit"}, {"oid": "ef445968526d73f72038a62e66848947e7842c5b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef445968526d73f72038a62e66848947e7842c5b", "message": "[Python] simplify flask server requirements", "committedDate": "2020-04-04T07:27:11Z", "type": "commit"}, {"oid": "743a618e81c7a39a43e3225f0ac16277d0ca7c9e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/743a618e81c7a39a43e3225f0ac16277d0ca7c9e", "message": "consolidate server tests", "committedDate": "2020-04-04T07:27:50Z", "type": "commit"}, {"oid": "2f5148bc753a0e2bcee14d29715185cee0351fc4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2f5148bc753a0e2bcee14d29715185cee0351fc4", "message": "[Python] rebuild python server samples", "committedDate": "2020-04-04T07:27:51Z", "type": "commit"}, {"oid": "2f5148bc753a0e2bcee14d29715185cee0351fc4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2f5148bc753a0e2bcee14d29715185cee0351fc4", "message": "[Python] rebuild python server samples", "committedDate": "2020-04-04T07:27:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5OTQyNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r404499424", "bodyText": "This generator states that is supports  python 3.5 but this version of connexion does not work in python 3.5\nCan you add the connexion support for python >= 3.5 here?", "author": "spacether", "createdAt": "2020-04-07T02:26:34Z", "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "diffHunk": "@@ -1,3 +1,3 @@\n-connexion[aiohttp,swagger-ui] == 2.0.2\n-swagger-ui-bundle == 0.0.2\n-aiohttp_jinja2 == 1.1.0\n+connexion[aiohttp,swagger-ui] == 2.6.0", "originalCommit": "2f5148bc753a0e2bcee14d29715185cee0351fc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMDYxMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405000611", "bodyText": "So connexion only limits installation versions by supported versions of python in connexion >=2.5.1 and >=3.6.0\nper zalando/connexion@f31ac61\nSo your update will still break in python 3.5 because it will install connexion 2.5.0 which does not support python 3.5\nPlease use the following pinning?\n\nconnexion <= 2.3.0; python_version==\"3.5\" for python 3.5\nwerkzeug == 0.16.1; python_version==\"3.5\" per your other work\nconnexion >= 2.6.0; python_version>=\"3.6\" to cover higher versions of python", "author": "spacether", "createdAt": "2020-04-07T17:51:26Z", "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "diffHunk": "@@ -1,3 +1,4 @@\n-connexion[aiohttp,swagger-ui] == 2.6.0\n+# 2.3 is the last version that supports python 3.5\n+connexion[aiohttp,swagger-ui] >= 2.3.0", "originalCommit": "073f55f0dac93b3b80dc6ae77da5b7014b3d2c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1Nzg1Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405057856", "bodyText": "Thank you for fixing this", "author": "spacether", "createdAt": "2020-04-07T19:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMDYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNjcyMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405006722", "bodyText": "Please change this to <= 2.3.0 I realize that I pinned this incorrectly when I updated it.\nThe releases here: https://github.com/zalando/connexion/releases\nShow that 2.3.0 is the last version that supports python 3.4 and 3.5", "author": "spacether", "createdAt": "2020-04-07T18:00:59Z", "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "diffHunk": "@@ -1,10 +1,20 @@\n connexion >= 2.6.0; python_version>=\"3.6\"\n-connexion >= 2.3.0; python_version==\"3.5\"\n-connexion >= 2.3.0; python_version==\"3.4\"\n+# connexion 2.6 dropped support for python < 3.6\n+connexion >= 2.3.0; python_version==\"3.5\" or python_version==\"3.4\"", "originalCommit": "073f55f0dac93b3b80dc6ae77da5b7014b3d2c09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1Nzc2Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405057767", "bodyText": "Thank you for fixing this", "author": "spacether", "createdAt": "2020-04-07T19:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNjcyMg=="}], "type": "inlineReview"}, {"oid": "85665f1f07d89cb868a2372946d4387ee50c7538", "url": "https://github.com/OpenAPITools/openapi-generator/commit/85665f1f07d89cb868a2372946d4387ee50c7538", "message": "[Python] Fix python server requirements for older pythons\n\nDocumented minimum python version for our aiohttp server is 3.5.\nDocumented minimum python version for our flask server is 3.4.\nConnexion 2.3 is the last version to support python 3.4 and 3.5, so fix\nthe version pinning to correctly select <=2.3 for these EOL python\nversions. Newer pythons should get the latest if possible as there many\nrelevant bug fixes.\n\nWerkzeug also needs to be pinned for these old versions in the aiohttp\nserver just like for the flask server.\n\n3.4 and 3.5 are EOL. We really should increase the minimum supported\nversion, but that is for another PR to do.", "committedDate": "2020-04-07T18:11:45Z", "type": "commit"}, {"oid": "85665f1f07d89cb868a2372946d4387ee50c7538", "url": "https://github.com/OpenAPITools/openapi-generator/commit/85665f1f07d89cb868a2372946d4387ee50c7538", "message": "[Python] Fix python server requirements for older pythons\n\nDocumented minimum python version for our aiohttp server is 3.5.\nDocumented minimum python version for our flask server is 3.4.\nConnexion 2.3 is the last version to support python 3.4 and 3.5, so fix\nthe version pinning to correctly select <=2.3 for these EOL python\nversions. Newer pythons should get the latest if possible as there many\nrelevant bug fixes.\n\nWerkzeug also needs to be pinned for these old versions in the aiohttp\nserver just like for the flask server.\n\n3.4 and 3.5 are EOL. We really should increase the minimum supported\nversion, but that is for another PR to do.", "committedDate": "2020-04-07T18:11:45Z", "type": "forcePushed"}]}