{"pr_number": 4998, "pr_title": "[java] Support templated servers", "pr_createdAt": "2020-01-14T17:07:29Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/4998", "timeline": [{"oid": "f1ddc182687ad5ae02a4d45ef3b61c01c6cf730e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f1ddc182687ad5ae02a4d45ef3b61c01c6cf730e", "message": "initial", "committedDate": "2020-01-15T14:47:18Z", "type": "forcePushed"}, {"oid": "594f055ff9191dbb375f846d341218c1b96b66a7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/594f055ff9191dbb375f846d341218c1b96b66a7", "message": "[java] Support templated servers", "committedDate": "2020-01-15T16:18:42Z", "type": "commit"}, {"oid": "594f055ff9191dbb375f846d341218c1b96b66a7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/594f055ff9191dbb375f846d341218c1b96b66a7", "message": "[java] Support templated servers", "committedDate": "2020-01-15T16:18:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3MzE4Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r366973187", "bodyText": "We should probably check that serverIndex is within the length of servers, as it's a user-set value and can be wrong.", "author": "bkabrda", "createdAt": "2020-01-15T16:24:12Z", "path": "modules/openapi-generator/src/main/resources/Java/ApiClient.mustache", "diffHunk": "@@ -626,8 +684,15 @@ public class ApiClient {\n    * @return The full URL\n    */\n   private String buildUrl(String path, List<Pair> queryParams, List<Pair> collectionQueryParams) {\n+    String baseURL;\n+    if (serverIndex != null) {\n+      baseURL = servers[serverIndex].URL(serverVariables);", "originalCommit": "f1ddc182687ad5ae02a4d45ef3b61c01c6cf730e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwMjc2Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r367002767", "bodyText": "It will raise anyway.", "author": "jirikuncar", "createdAt": "2020-01-15T17:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3MzE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxOTg2OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r367219869", "bodyText": "I agreed with @bkabrda to have a better error/exception message similar to what we've done in other generators, e.g. Python\n        except IndexError:\n            raise ValueError(\n                \"Invalid index {0} when selecting the host settings. \"\n                \"Must be less than {1}\".format(index, len(servers)))\n\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/samples/client/petstore/python/petstore_api/configuration.py#L316", "author": "wing328", "createdAt": "2020-01-16T03:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3MzE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM1NzY2Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r367357666", "bodyText": "@wing328 I have added the range check.", "author": "jirikuncar", "createdAt": "2020-01-16T11:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3MzE4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4MDMzMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r366980332", "bodyText": "Maybe we could preserve backwards compatibility here by also keeping the method with its original signature, which would call this new method while passing operation=null?", "author": "bkabrda", "createdAt": "2020-01-15T16:36:30Z", "path": "modules/openapi-generator/src/main/resources/Java/libraries/jersey2/ApiClient.mustache", "diffHunk": "@@ -684,12 +785,24 @@ public class ApiClient {\n    * @return The response body in type of string\n    * @throws ApiException API exception\n    */\n-  public <T> ApiResponse<T> invokeAPI(String path, String method, List<Pair> queryParams, Object body, Map<String, String> headerParams, Map<String, String> cookieParams, Map<String, Object> formParams, String accept, String contentType, String[] authNames, GenericType<T> returnType) throws ApiException {\n+  public <T> ApiResponse<T> invokeAPI(String operation, String path, String method, List<Pair> queryParams, Object body, Map<String, String> headerParams, Map<String, String> cookieParams, Map<String, Object> formParams, String accept, String contentType, String[] authNames, GenericType<T> returnType) throws ApiException {", "originalCommit": "594f055ff9191dbb375f846d341218c1b96b66a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwMzE0Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r367003142", "bodyText": "I am adding:\ndiff --git a/modules/openapi-generator/src/main/resources/Java/libraries/jersey2/ApiClient.mustache b/modules/openapi-generator/src/main/resources/Java/libraries/jersey2/ApiClient.mustache\nindex ee4d7a6d10..bef8929e66 100644\n--- a/modules/openapi-generator/src/main/resources/Java/libraries/jersey2/ApiClient.mustache\n+++ b/modules/openapi-generator/src/main/resources/Java/libraries/jersey2/ApiClient.mustache\n@@ -906,6 +906,14 @@ public class ApiClient {\n     }\n   }\n \n+  /**\n+   * @deprecated Add qualified name of the operation as a first parameter.\n+   */\n+  @Deprecated\n+  public <T> ApiResponse<T> invokeAPI(String path, String method, List<Pair> queryParams, Object body, Map<String, String> headerParams, Map<String, String> cookieParams, Map<String, Object> formParams, String accept, String contentType, String[] authNames, GenericType<T> returnType) throws ApiException {\n+    return invokeAPI(null, path, method, queryParams, body, headerParams, cookieParams, formParams, accept, contentType, authNames, returnType);\n+  }\n+\n   /**\n    * Build the Client used to make HTTP requests.\n    * @param debugging Debug setting", "author": "jirikuncar", "createdAt": "2020-01-15T17:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4MDMzMg=="}], "type": "inlineReview"}, {"oid": "807ece0fa5d7293639bc62d8d698c8a4ff00ae22", "url": "https://github.com/OpenAPITools/openapi-generator/commit/807ece0fa5d7293639bc62d8d698c8a4ff00ae22", "message": "Deprecate old signature of invokeAPI method", "committedDate": "2020-01-15T17:17:40Z", "type": "commit"}, {"oid": "6577bde7638a546f7badc1cf88938a9633fa2e1a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6577bde7638a546f7badc1cf88938a9633fa2e1a", "message": "Regenerated", "committedDate": "2020-01-15T17:20:29Z", "type": "commit"}, {"oid": "5b93d63ac9b0bc3e5336669a1c49621de601f375", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5b93d63ac9b0bc3e5336669a1c49621de601f375", "message": "throw ArrayIndexOutOfBoundsException", "committedDate": "2020-01-16T10:40:54Z", "type": "commit"}, {"oid": "07965b9b78505b663bff0b4fb33baea3639778ab", "url": "https://github.com/OpenAPITools/openapi-generator/commit/07965b9b78505b663bff0b4fb33baea3639778ab", "message": "Regenerated", "committedDate": "2020-01-16T10:56:56Z", "type": "commit"}, {"oid": "09b84f51db5d85d72f001ad713c02cc9d8cdf46f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/09b84f51db5d85d72f001ad713c02cc9d8cdf46f", "message": "Merge branch 'master' into java-client-endpoint-servers", "committedDate": "2020-01-21T16:06:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcxMzU2NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r377713564", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.datadog.api.v1.client.ServerVariable;\n          \n          \n            \n            import {{invokerPackage}}.ServerVariable;", "author": "jirikuncar", "createdAt": "2020-02-11T15:36:48Z", "path": "modules/openapi-generator/src/main/resources/Java/ServerConfiguration.mustache", "diffHunk": "@@ -0,0 +1,60 @@\n+package {{invokerPackage}};\n+\n+import java.util.Map;\n+\n+import com.datadog.api.v1.client.ServerVariable;", "originalCommit": "09b84f51db5d85d72f001ad713c02cc9d8cdf46f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "edca168d19e1cbca10593e42e21354d1b0521e6c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/edca168d19e1cbca10593e42e21354d1b0521e6c", "message": "Update modules/openapi-generator/src/main/resources/Java/ServerConfiguration.mustache", "committedDate": "2020-02-11T15:48:13Z", "type": "commit"}, {"oid": "d98c7ddfef44a28f5967649173383e810123ccca", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d98c7ddfef44a28f5967649173383e810123ccca", "message": "Regenerated", "committedDate": "2020-02-11T15:51:42Z", "type": "commit"}, {"oid": "d98c7ddfef44a28f5967649173383e810123ccca", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d98c7ddfef44a28f5967649173383e810123ccca", "message": "Regenerated", "committedDate": "2020-02-11T15:51:42Z", "type": "forcePushed"}, {"oid": "fe93888056dee60cdbe465e607c1453ab75f561b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fe93888056dee60cdbe465e607c1453ab75f561b", "message": "Merge remote-tracking branch 'upstream/master' into java-client-endpoint-servers", "committedDate": "2020-02-12T09:16:00Z", "type": "commit"}, {"oid": "b0b1cfec3fc448a6f67744c208f18879d10ba5d8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b0b1cfec3fc448a6f67744c208f18879d10ba5d8", "message": "Fix imports and typo in index name", "committedDate": "2020-02-12T09:21:44Z", "type": "commit"}, {"oid": "e299f8da88b080b98788260d6b4cf08a1fa2cebb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e299f8da88b080b98788260d6b4cf08a1fa2cebb", "message": "Fix javadoc", "committedDate": "2020-02-12T09:56:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxNDQzMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4998#discussion_r379914430", "bodyText": "Notice here to consumers that if new server variable functionality causes issue, one may call setServerIndex(null) to revert to previous behavior. Current default behavior with the server index 0 behaves in the same way as before, but moves the URL configuration to the servers array.", "author": "jimschubert", "createdAt": "2020-02-16T16:12:30Z", "path": "modules/openapi-generator/src/main/resources/Java/libraries/jersey2/ApiClient.mustache", "diffHunk": "@@ -684,12 +783,36 @@ public class ApiClient {\n    * @return The response body in type of string\n    * @throws ApiException API exception\n    */\n-  public <T> ApiResponse<T> invokeAPI(String path, String method, List<Pair> queryParams, Object body, Map<String, String> headerParams, Map<String, String> cookieParams, Map<String, Object> formParams, String accept, String contentType, String[] authNames, GenericType<T> returnType) throws ApiException {\n+  public <T> ApiResponse<T> invokeAPI(String operation, String path, String method, List<Pair> queryParams, Object body, Map<String, String> headerParams, Map<String, String> cookieParams, Map<String, Object> formParams, String accept, String contentType, String[] authNames, GenericType<T> returnType) throws ApiException {\n     updateParamsForAuth(authNames, queryParams, headerParams, cookieParams);\n \n-    // Not using `.target(this.basePath).path(path)` below,\n+    // Not using `.target(targetURL).path(path)` below,\n     // to support (constant) query string in `path`, e.g. \"/posts?draft=1\"\n-    WebTarget target = httpClient.target(this.basePath + path);\n+    String targetURL;\n+    if (serverIndex != null) {", "originalCommit": "e299f8da88b080b98788260d6b4cf08a1fa2cebb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63a26c8d547f095864093785190f32c0bf84b022", "url": "https://github.com/OpenAPITools/openapi-generator/commit/63a26c8d547f095864093785190f32c0bf84b022", "message": "[java] Regenerate samples", "committedDate": "2020-02-16T16:16:47Z", "type": "commit"}]}