{"pr_number": 6335, "pr_title": "typescript-axios anytype is not defined", "pr_createdAt": "2020-05-16T21:48:40Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6335", "timeline": [{"oid": "f998e610d94047f317a6d7a14ec1457d44109fd4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f998e610d94047f317a6d7a14ec1457d44109fd4", "message": "Include map for `AnyType` in `typescript`", "committedDate": "2020-05-16T21:27:45Z", "type": "commit"}, {"oid": "1e313c7320115603871caa08fa7eec8175d6e160", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1e313c7320115603871caa08fa7eec8175d6e160", "message": "Exclude `any` from the list of types extracted from `anyOf`, `allOf`, `oneOf`\n\nExclude if there are other meaningful types", "committedDate": "2020-05-16T21:30:01Z", "type": "commit"}, {"oid": "aaae08158178443e97af9926fd7b19f4b6c2f004", "url": "https://github.com/OpenAPITools/openapi-generator/commit/aaae08158178443e97af9926fd7b19f4b6c2f004", "message": "Include new scripts and `yaml` to test the new case", "committedDate": "2020-05-16T21:37:24Z", "type": "commit"}, {"oid": "1694b9e44546b492340fa1c38564e191c62c5514", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1694b9e44546b492340fa1c38564e191c62c5514", "message": "Execute the new sample for `typescript-axios`", "committedDate": "2020-05-16T21:37:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NTUzMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r426195530", "bodyText": "nit: it might be simpler to add .filter() call to the stream instead of post-processing the resulting list.\nEDIT: Aha, I was wrong here. Apparently, if we're about to return a single any type, it's ok - we only want to remove any when it's used in conjuction with some other type (in allOf/oneOf)", "author": "amakhrov", "createdAt": "2020-05-16T22:08:54Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -845,6 +845,11 @@ public String toAllOfName(List<String> names, ComposedSchema composedSchema) {\n             }\n             return schemaType;\n         }).distinct().collect(Collectors.toList());\n-        return String.join(\" & \", types);\n+\n+        if (types.size() > 1 && types.contains(\"any\")) {", "originalCommit": "1694b9e44546b492340fa1c38564e191c62c5514", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a24bf826396f084230ff8eafe26b38139d12a300", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a24bf826396f084230ff8eafe26b38139d12a300", "message": "Filter out only `AnyType` instead of all `any` types", "committedDate": "2020-05-17T11:08:31Z", "type": "commit"}, {"oid": "53f099f45247c2d9fc130bb08a81dc0f465346a5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/53f099f45247c2d9fc130bb08a81dc0f465346a5", "message": "Renamed and modified samples\n\n- Included more examples using `oneOf, `allOf`, `anyOf`\n- Includede examples when types that are translated to `any` are involved (`file`)", "committedDate": "2020-05-17T11:09:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMjA2Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r427102062", "bodyText": "where is this interface used?", "author": "macjohnny", "createdAt": "2020-05-19T07:56:41Z", "path": "samples/client/petstore/typescript-axios/builds/composed-schemas/api.ts", "diffHunk": "@@ -0,0 +1,420 @@\n+// tslint:disable\n+/**\n+ * Example\n+ * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n+ *\n+ * The version of the OpenAPI document: 1.0.0\n+ * \n+ *\n+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n+ * https://openapi-generator.tech\n+ * Do not edit the class manually.\n+ */\n+\n+\n+import * as globalImportUrl from 'url';\n+import { Configuration } from './configuration';\n+import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n+// Some imports not used depending on template conditions\n+// @ts-ignore\n+import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n+\n+/**\n+ * \n+ * @export\n+ * @interface Cat\n+ */\n+export interface Cat {\n+    /**\n+     * \n+     * @type {boolean}\n+     * @memberof Cat\n+     */\n+    hunts?: boolean;\n+    /**\n+     * \n+     * @type {number}\n+     * @memberof Cat\n+     */\n+    age?: number;\n+}\n+/**\n+ * \n+ * @export\n+ * @interface CatAllOf\n+ */\n+export interface CatAllOf {", "originalCommit": "53f099f45247c2d9fc130bb08a81dc0f465346a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MjkyNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r427392925", "bodyText": "I think it's not used anywhere,\nI've also noticed that, but testing without the changes in this branch generates the same unused interfaces - so I think it's another bug unrelated to this branch", "author": "codeserk", "createdAt": "2020-05-19T15:26:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMjA2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMTkwMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r427521903", "bodyText": "It's probably a manifestation of this old bug: #5171", "author": "amakhrov", "createdAt": "2020-05-19T18:44:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMjA2Mg=="}], "type": "inlineReview"}]}