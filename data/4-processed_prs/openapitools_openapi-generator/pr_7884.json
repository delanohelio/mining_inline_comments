{"pr_number": 7884, "pr_title": "[csharp-netcore]Fixed the null serialization issue for dotnet47", "pr_createdAt": "2020-11-05T05:16:03Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/7884", "timeline": [{"oid": "01ca8d384859287ca4142f9e474590f0c65b6adf", "url": "https://github.com/OpenAPITools/openapi-generator/commit/01ca8d384859287ca4142f9e474590f0c65b6adf", "message": "Fixed the null serialization issue for dotnet47", "committedDate": "2020-11-05T05:14:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgxNzA2Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7884#discussion_r517817062", "bodyText": "@Ghufz thanks for the PR. Can we make it conform to C# code style? e.g\nif (reader.TokenType != JsonToken.Null)\n{\n    return {{classname}}.FromJson(JObject.Load(reader).ToString(Formatting.None));\n}\nreturn null;", "author": "wing328", "createdAt": "2020-11-05T06:25:47Z", "path": "modules/openapi-generator/src/main/resources/csharp-netcore/modelAnyOf.mustache", "diffHunk": "@@ -208,7 +208,10 @@\n         /// <returns>The object converted from the JSON string</returns>\n         public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n         {\n-            return {{classname}}.FromJson(JObject.Load(reader).ToString(Formatting.None));\n+            if(reader.TokenType != JsonToken.Null){", "originalCommit": "01ca8d384859287ca4142f9e474590f0c65b6adf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzOTg0NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7884#discussion_r517839844", "bodyText": "done", "author": "Ghufz", "createdAt": "2020-11-05T07:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgxNzA2Mg=="}], "type": "inlineReview"}, {"oid": "de65d92a2e7e2c7068b07afec9be7e16c8cd19df", "url": "https://github.com/OpenAPITools/openapi-generator/commit/de65d92a2e7e2c7068b07afec9be7e16c8cd19df", "message": "c# codeing style", "committedDate": "2020-11-05T07:24:11Z", "type": "commit"}, {"oid": "289fdfb920868013bf3942b22a9458430ca5d9a5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/289fdfb920868013bf3942b22a9458430ca5d9a5", "message": "Updated the sample for csharp netcore", "committedDate": "2020-11-05T07:27:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NjQzNg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7884#discussion_r518496436", "bodyText": "Typo: retrun => return", "author": "wing328", "createdAt": "2020-11-06T03:01:28Z", "path": "modules/openapi-generator/src/main/resources/csharp-netcore/modelAnyOf.mustache", "diffHunk": "@@ -208,7 +208,11 @@\n         /// <returns>The object converted from the JSON string</returns>\n         public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n         {\n-            return {{classname}}.FromJson(JObject.Load(reader).ToString(Formatting.None));\n+            if(reader.TokenType != JsonToken.Null)\n+            {\n+                return {{classname}}.FromJson(JObject.Load(reader).ToString(Formatting.None));\n+            }\n+            retrun null;", "originalCommit": "289fdfb920868013bf3942b22a9458430ca5d9a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44de0162f8d8093fbb27cee2287c8ababac98b82", "url": "https://github.com/OpenAPITools/openapi-generator/commit/44de0162f8d8093fbb27cee2287c8ababac98b82", "message": "corrected the typos", "committedDate": "2020-11-06T04:43:03Z", "type": "commit"}]}