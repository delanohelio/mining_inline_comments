{"pr_number": 4992, "pr_title": "[Python] Add python experimental openapiv3 sample and fix PEP8 formatting issues", "pr_createdAt": "2020-01-13T21:30:14Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/4992", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3ODc2OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r366078769", "bodyText": "Can you change this to PythonExperimentalOAS3PetstoreTests?", "author": "spacether", "createdAt": "2020-01-13T23:13:09Z", "path": "samples/openapi3/client/petstore/python-experimental/pom.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<project>\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>org.openapitools</groupId>\n+    <artifactId>PythonOAS3PetstoreTests</artifactId>", "originalCommit": "6c6b564d96e46790e17c3e97aa6cd80498c0a8f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3ODkyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r366078923", "bodyText": "Can you change this to Python-Experimental OpenAPI3 Petstore Client", "author": "spacether", "createdAt": "2020-01-13T23:13:38Z", "path": "samples/openapi3/client/petstore/python-experimental/pom.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<project>\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>org.openapitools</groupId>\n+    <artifactId>PythonOAS3PetstoreTests</artifactId>\n+    <packaging>pom</packaging>\n+    <version>1.0-SNAPSHOT</version>\n+    <name>Python OpenAPI3 Petstore Client</name>", "originalCommit": "6c6b564d96e46790e17c3e97aa6cd80498c0a8f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMzIyMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367013222", "bodyText": "In our templates I want us to limit the use of # noqa: E501 as much as we can.\nHow about using a line continuation like:\n\"try:\\n    from \" + modelPackage() + \" import \"+ moduleName+ \"\\nexcept ImportError:\\n    \"+moduleName+\" = sys.modules[\\n        '\"+modelPackage() + \".\"+ moduleName+\"']\"", "author": "spacether", "createdAt": "2020-01-15T17:39:08Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "diffHunk": "@@ -277,7 +277,7 @@ private String robustImport(String name) {\n         // name looks like cat.Cat\n         String moduleName = name.split(\"\\\\.\")[0];\n         // https://exceptionshub.com/circular-or-cyclic-imports-in-python.html\n-        String modelImport = \"try:\\n    from \" + modelPackage() + \" import \"+ moduleName+ \"\\nexcept ImportError:\\n    \"+moduleName+\" = sys.modules['\"+modelPackage() + \".\"+ moduleName+\"']\";\n+        String modelImport = \"try:\\n    from \" + modelPackage() + \" import \"+ moduleName+ \"\\nexcept ImportError:\\n    \"+moduleName+\" = sys.modules['\"+modelPackage() + \".\"+ moduleName+\"']  # noqa: E501\";", "originalCommit": "b17c8270430705b9686fed5f384a0881eb9cc541", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzODE1NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367038155", "bodyText": "doing...", "author": "sebastien-rosset", "createdAt": "2020-01-15T18:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMzIyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMzk4OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367013988", "bodyText": "Can we spread this assignment over a newline and eliminate the # noqa: E501?", "author": "spacether", "createdAt": "2020-01-15T17:40:53Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "diffHunk": "@@ -108,7 +108,7 @@ class {{classname}}(object):\n             )\n             kwargs['_host_index'] = kwargs.get('_host_index', 0)\n {{#requiredParams}}\n-            kwargs['{{paramName}}'] = {{paramName}}\n+            kwargs['{{paramName}}'] = {{paramName}}   # noqa: E501", "originalCommit": "b17c8270430705b9686fed5f384a0881eb9cc541", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAyNDQ4Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367024483", "bodyText": "ok... That's what I did initially, but then I noticed developers seem to be using # noqa: E501", "author": "sebastien-rosset", "createdAt": "2020-01-15T18:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMzk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzMTIxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367031212", "bodyText": "Yup, I made that call in the past also when I wasn't as focused on the style guide. Recently and going forward if we can pass flake8 checks then we should. If adding the newline still throws E501 line too long, then let's keep it.", "author": "spacether", "createdAt": "2020-01-15T18:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMzk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzODU0Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367038542", "bodyText": "making change.", "author": "sebastien-rosset", "createdAt": "2020-01-15T18:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMzk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxNDA0Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367014042", "bodyText": "Can we spread this assignment over a newline and eliminate the # noqa: E501?", "author": "spacether", "createdAt": "2020-01-15T17:41:00Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "diffHunk": "@@ -216,7 +216,7 @@ class {{classname}}(object):\n                 },\n                 'openapi_types': {\n {{#allParams}}\n-                    '{{paramName}}': ({{{dataType}}},),\n+                    '{{paramName}}': ({{{dataType}}},),   # noqa: E501", "originalCommit": "b17c8270430705b9686fed5f384a0881eb9cc541", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAyNDM2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367024360", "bodyText": "ok... That's what I did initially, but then I noticed developers seem to be using # noqa: E501", "author": "sebastien-rosset", "createdAt": "2020-01-15T18:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxNDA0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzOTEyMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367039121", "bodyText": "making change. BTW, in the future it may not be very obvious why the line is split in two lines.", "author": "sebastien-rosset", "createdAt": "2020-01-15T18:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxNDA0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzOTk0MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367039940", "bodyText": "True, though if they change it they will get the sad E501 errors.\nThank you for your understanding.", "author": "spacether", "createdAt": "2020-01-15T18:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxNDA0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4ODY2NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367088664", "bodyText": "Can you regenerate the samples?\nThis file was generate using an outdated version of the template.", "author": "spacether", "createdAt": "2020-01-15T20:23:34Z", "path": "samples/client/petstore/python-experimental/petstore_api/api/another_fake_api.py", "diffHunk": "@@ -102,7 +102,7 @@ def __call_123_test_special_tags(self, body, **kwargs):  # noqa: E501\n                 '_check_return_type', True\n             )\n             kwargs['_host_index'] = kwargs.get('_host_index', 0)\n-            kwargs['body'] = body\n+            kwargs['body'] = body   # noqa: E501", "originalCommit": "5e473a4f18b856d34c3768cfa992b29c58f7925f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5OTcxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4992#discussion_r367099710", "bodyText": "done.", "author": "sebastien-rosset", "createdAt": "2020-01-15T20:49:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4ODY2NA=="}], "type": "inlineReview"}, {"oid": "b381972b9a319d432b22db0dbd4bde54f1b3c609", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b381972b9a319d432b22db0dbd4bde54f1b3c609", "message": "Add python-experimental-openapiv3-sample\n\nAdd python-experimental-openapiv3-sample\n\nAdd missing files for the Python samples\n\nAdd python-experimental-petstore.bat for openapi v3\n\nAdd python-experimental samples openapi v3\n\nAdd python-experimental samples openapi v3\n\nAdd python-experimental samples openapi v3. Address review comments\n\nadd missing files for test purpose\n\nfix python formatting issues\n\nfix python formatting issues\n\nfix python formatting issues\n\nFix unit tests\n\nfix python formatting issues\n\nfix python formatting issues\n\nfix python formatting issues\n\nfix 'line too long' pep8 error\n\naddress PR comments for pep8 'line too long' problem\n\nregenerate samples\n\nexecute samples scripts\n\ndummy commit to retrigger circleci\n\nRevert dummy commit, it didn't help.", "committedDate": "2020-01-17T00:50:33Z", "type": "commit"}, {"oid": "b381972b9a319d432b22db0dbd4bde54f1b3c609", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b381972b9a319d432b22db0dbd4bde54f1b3c609", "message": "Add python-experimental-openapiv3-sample\n\nAdd python-experimental-openapiv3-sample\n\nAdd missing files for the Python samples\n\nAdd python-experimental-petstore.bat for openapi v3\n\nAdd python-experimental samples openapi v3\n\nAdd python-experimental samples openapi v3\n\nAdd python-experimental samples openapi v3. Address review comments\n\nadd missing files for test purpose\n\nfix python formatting issues\n\nfix python formatting issues\n\nfix python formatting issues\n\nFix unit tests\n\nfix python formatting issues\n\nfix python formatting issues\n\nfix python formatting issues\n\nfix 'line too long' pep8 error\n\naddress PR comments for pep8 'line too long' problem\n\nregenerate samples\n\nexecute samples scripts\n\ndummy commit to retrigger circleci\n\nRevert dummy commit, it didn't help.", "committedDate": "2020-01-17T00:50:33Z", "type": "forcePushed"}, {"oid": "46e7dbce2edf2b8a7dbf1b29b1d927015cc7e431", "url": "https://github.com/OpenAPITools/openapi-generator/commit/46e7dbce2edf2b8a7dbf1b29b1d927015cc7e431", "message": "Merge remote-tracking branch 'origin' into python-experimental-openapiv3-sample", "committedDate": "2020-01-17T16:34:19Z", "type": "commit"}, {"oid": "85a24ed14a6379c74c70f9ddeccb538184dd158e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/85a24ed14a6379c74c70f9ddeccb538184dd158e", "message": "Merge remote-tracking branch 'origin' into python-experimental-openapiv3-sample", "committedDate": "2020-01-19T03:40:34Z", "type": "commit"}, {"oid": "cb905c43dfd3b1d961ba2db2f6deb4088cc6cc5f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cb905c43dfd3b1d961ba2db2f6deb4088cc6cc5f", "message": "Merge remote-tracking branch 'origin' into python-experimental-openapiv3-sample", "committedDate": "2020-01-19T15:51:07Z", "type": "commit"}]}