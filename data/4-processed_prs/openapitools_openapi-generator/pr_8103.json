{"pr_number": 8103, "pr_title": "[Go] Fix for 'Invalid code for files array in multipart/form-data request'\u2026", "pr_createdAt": "2020-12-05T10:51:08Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/8103", "timeline": [{"oid": "033b06d6378ee0aff91015f43d1dccca8b97e30b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/033b06d6378ee0aff91015f43d1dccca8b97e30b", "message": "Fix for 'Invalid code for files array in multipart/form-data request' (OpenAPITools#8093)", "committedDate": "2020-12-05T10:12:01Z", "type": "commit"}, {"oid": "de9d4b7c1dad536e23610f5ac64a1136d5f6e5a2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/de9d4b7c1dad536e23610f5ac64a1136d5f6e5a2", "message": "Executed ensure-up-to-date", "committedDate": "2020-12-05T12:56:04Z", "type": "commit"}, {"oid": "de9d4b7c1dad536e23610f5ac64a1136d5f6e5a2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/de9d4b7c1dad536e23610f5ac64a1136d5f6e5a2", "message": "Executed ensure-up-to-date", "committedDate": "2020-12-05T12:56:04Z", "type": "forcePushed"}, {"oid": "2bb417ce40c9ef44e924f934accf041f5acc72f5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2bb417ce40c9ef44e924f934accf041f5acc72f5", "message": "Replaced spaces with tabs.", "committedDate": "2020-12-07T13:02:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk1NzkxMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8103#discussion_r561957913", "bodyText": "multipart is not defined as an import here. We should add \"mime/multipart\" in the import list", "author": "ys", "createdAt": "2021-01-21T15:12:11Z", "path": "modules/openapi-generator/src/main/resources/go-server/routers.mustache", "diffHunk": "@@ -66,28 +66,61 @@ func EncodeJSONResponse(i interface{}, status *int, w http.ResponseWriter) error\n \n // ReadFormFileToTempFile reads file data from a request form and writes it to a temporary file\n func ReadFormFileToTempFile(r *http.Request, key string) (*os.File, error) {\n-\tr.ParseForm()\n-\tformFile, _, err := r.FormFile(key)\n+\t_, fileHeader, err := r.FormFile(key)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\tdefer formFile.Close()\n-\tfile, err := ioutil.TempFile(\"tmp\", key)\n+\treturn readFileHeaderToTempFile(fileHeader)\n+}\n+\n+// ReadFormFilesToTempFiles reads files array data from a request form and writes it to a temporary files\n+func ReadFormFilesToTempFiles(r *http.Request, key string) ([]*os.File, error) {\n+\tif err := r.ParseMultipartForm(32 << 20); err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tfiles := make([]*os.File, 0, len(r.MultipartForm.File[key]))\n+\n+\tfor _, fileHeader := range r.MultipartForm.File[key] {\n+\t\tfile, err := readFileHeaderToTempFile(fileHeader)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\n+\t\tfiles = append(files, file)\n+\t}\n+\n+\treturn files, nil\n+}\n+\n+// readFileHeaderToTempFile reads multipart.FileHeader and writes it to a temporary file\n+func readFileHeaderToTempFile(fileHeader *multipart.FileHeader) (*os.File, error) {", "originalCommit": "2bb417ce40c9ef44e924f934accf041f5acc72f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}