{"pr_number": 5380, "pr_title": "[go][java] Document new parameterized server support", "pr_createdAt": "2020-02-20T02:57:13Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5380", "timeline": [{"oid": "83eeeea6cf16f09aa580ad3b22d5425761bc3f8d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/83eeeea6cf16f09aa580ad3b22d5425761bc3f8d", "message": "[go][java] Document new parameterized server support", "committedDate": "2020-02-20T02:52:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r381910454", "bodyText": "AFAICS this was only implemented for Jersey2 client in #4998 - can we mark this feature as included based on the API library used when generating?", "author": "bkabrda", "createdAt": "2020-02-20T10:25:54Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -108,6 +109,7 @@ public JavaClientCodegen() {\n \n         featureSet = getFeatureSet().modify()\n                 .includeDocumentationFeatures(DocumentationFeature.Readme)\n+                .includeGlobalFeatures(GlobalFeature.ParameterizedServer)", "originalCommit": "83eeeea6cf16f09aa580ad3b22d5425761bc3f8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MDAwMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r381970003", "bodyText": "Great call out. I added this here because the ServerConfiguration and ServerVariable types were added to all java generators. I wonder if that was intentional and those files should only be added if Jersey is selected.\nI can add this to the libraries option. We're currently not outputting library specific feature matrix.", "author": "jimschubert", "createdAt": "2020-02-20T12:31:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4MDcwOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r381980708", "bodyText": "IIUC it would be better to only add these files when jersey2 is used, CC @jirikuncar who authored the PR to confirm.", "author": "bkabrda", "createdAt": "2020-02-20T12:55:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTY5NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382059694", "bodyText": "Yes, the parameterised server per endpoint support is only in jersey2.", "author": "jirikuncar", "createdAt": "2020-02-20T15:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM2Mjg3MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382362871", "bodyText": "Hm. I'm glad this happened because it made me realize that I screwed up the location of the featureSet property. I'd designed it to be a property on GeneratorMetadata alongside getLibraryFeatures, but for some reason I made the property on GeneratorMetadata and DefaultCodegen.\nI'll leave this option where it is now on this PR, add a TODO and move the supportingFiles additions to only occur when jersey is selected\u2026\u00a0then I'll open another PR to move featureSets to generatorMetadata and include the library-specific option in that PR.", "author": "jimschubert", "createdAt": "2020-02-21T02:12:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4ODQ4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382488482", "bodyText": "There is a support for global server URL generation in all Java clients, that can be used instead of basePath. Additionally Jersey2 has support for server URL configuration per endpoint.", "author": "jirikuncar", "createdAt": "2020-02-21T09:49:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4OTkzNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382489937", "bodyText": "I was not clear. There are actually 2 features to track:\n\nSupport for global server configuration with templated values (all Java)\nSupport for server configuration per endpoint (only jersey2, go-experimental)", "author": "jirikuncar", "createdAt": "2020-02-21T09:52:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMjEyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382912123", "bodyText": "So, we probably need a GlobalFeature.ParameterizedServerPerOperation?", "author": "jimschubert", "createdAt": "2020-02-22T13:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMjMwNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382912304", "bodyText": "I created #5402 to track adding another feature for per-operation server variables.", "author": "jimschubert", "createdAt": "2020-02-22T13:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxMDQ1NA=="}], "type": "inlineReview"}, {"oid": "89af9cf0048b9c1ae3e4789c86bae78d4cab71b7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/89af9cf0048b9c1ae3e4789c86bae78d4cab71b7", "message": "[java] Move parameterized server support to jersey2", "committedDate": "2020-02-21T03:17:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4ODU3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382488578", "bodyText": "this should stay here", "author": "jirikuncar", "createdAt": "2020-02-21T09:49:20Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -288,8 +291,7 @@ public void processOpts() {\n         writeOptional(outputFolder, new SupportingFile(\"manifest.mustache\", projectFolder, \"AndroidManifest.xml\"));\n         supportingFiles.add(new SupportingFile(\"travis.mustache\", \"\", \".travis.yml\"));\n         supportingFiles.add(new SupportingFile(\"ApiClient.mustache\", invokerFolder, \"ApiClient.java\"));\n-        supportingFiles.add(new SupportingFile(\"ServerConfiguration.mustache\", invokerFolder, \"ServerConfiguration.java\"));", "originalCommit": "89af9cf0048b9c1ae3e4789c86bae78d4cab71b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4ODkzNg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382488936", "bodyText": "see https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/Java/ApiClient.mustache#L68-L94 and https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/Java/ApiClient.mustache#L684-L695", "author": "jirikuncar", "createdAt": "2020-02-21T09:50:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4ODU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxNTc5Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382615797", "bodyText": "I see. I could have sworn it was for all clients when I reviewed your other PR and didn't see how it was jersey2-only. I regenerated samples against this commit and pushed to check compilation, but I'll make this change and push over that.", "author": "jimschubert", "createdAt": "2020-02-21T14:38:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4ODU3OA=="}], "type": "inlineReview"}, {"oid": "bf123230a8988c82ac6f4e0fb8c0ad68d908748f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/bf123230a8988c82ac6f4e0fb8c0ad68d908748f", "message": "[java] Regenerate samples", "committedDate": "2020-02-21T14:32:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0MDY0NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382640644", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        supportingFiles.add(new SupportingFile(\"ServerConfiguration.mustache\", invokerFolder, \"ServerConfiguration.java\"));", "author": "jirikuncar", "createdAt": "2020-02-21T15:22:49Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -364,6 +366,10 @@ public void processOpts() {\n         } else if (JERSEY2.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"JSON.mustache\", invokerFolder, \"JSON.java\"));\n             supportingFiles.add(new SupportingFile(\"ApiResponse.mustache\", invokerFolder, \"ApiResponse.java\"));\n+\n+            supportingFiles.add(new SupportingFile(\"ServerConfiguration.mustache\", invokerFolder, \"ServerConfiguration.java\"));", "originalCommit": "bf123230a8988c82ac6f4e0fb8c0ad68d908748f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0MDcwOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382640709", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        supportingFiles.add(new SupportingFile(\"ServerVariable.mustache\", invokerFolder, \"ServerVariable.java\"));", "author": "jirikuncar", "createdAt": "2020-02-21T15:22:56Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -364,6 +366,10 @@ public void processOpts() {\n         } else if (JERSEY2.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"JSON.mustache\", invokerFolder, \"JSON.java\"));\n             supportingFiles.add(new SupportingFile(\"ApiResponse.mustache\", invokerFolder, \"ApiResponse.java\"));\n+\n+            supportingFiles.add(new SupportingFile(\"ServerConfiguration.mustache\", invokerFolder, \"ServerConfiguration.java\"));\n+            supportingFiles.add(new SupportingFile(\"ServerVariable.mustache\", invokerFolder, \"ServerVariable.java\"));", "originalCommit": "bf123230a8988c82ac6f4e0fb8c0ad68d908748f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0MDc1NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382640754", "bodyText": "Suggested change", "author": "jirikuncar", "createdAt": "2020-02-21T15:23:01Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -364,6 +366,10 @@ public void processOpts() {\n         } else if (JERSEY2.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"JSON.mustache\", invokerFolder, \"JSON.java\"));\n             supportingFiles.add(new SupportingFile(\"ApiResponse.mustache\", invokerFolder, \"ApiResponse.java\"));\n+\n+            supportingFiles.add(new SupportingFile(\"ServerConfiguration.mustache\", invokerFolder, \"ServerConfiguration.java\"));\n+            supportingFiles.add(new SupportingFile(\"ServerVariable.mustache\", invokerFolder, \"ServerVariable.java\"));\n+", "originalCommit": "bf123230a8988c82ac6f4e0fb8c0ad68d908748f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0MDgxOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5380#discussion_r382640818", "bodyText": "Suggested change", "author": "jirikuncar", "createdAt": "2020-02-21T15:23:06Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -364,6 +366,10 @@ public void processOpts() {\n         } else if (JERSEY2.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"JSON.mustache\", invokerFolder, \"JSON.java\"));\n             supportingFiles.add(new SupportingFile(\"ApiResponse.mustache\", invokerFolder, \"ApiResponse.java\"));\n+", "originalCommit": "bf123230a8988c82ac6f4e0fb8c0ad68d908748f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b45e4953e558e8bb2c23e0ac0e0c4007ee2d6d4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b45e4953e558e8bb2c23e0ac0e0c4007ee2d6d4", "message": "[java] Include \"global\" server configuration for all java clients", "committedDate": "2020-02-22T13:12:43Z", "type": "commit"}, {"oid": "1b45e4953e558e8bb2c23e0ac0e0c4007ee2d6d4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b45e4953e558e8bb2c23e0ac0e0c4007ee2d6d4", "message": "[java] Include \"global\" server configuration for all java clients", "committedDate": "2020-02-22T13:12:43Z", "type": "forcePushed"}, {"oid": "a6f98bca806c96cb1186c09869b4ed85eb111b7a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a6f98bca806c96cb1186c09869b4ed85eb111b7a", "message": "[java] Add back ServerVariable for java clients", "committedDate": "2020-02-22T19:27:43Z", "type": "commit"}]}