{"pr_number": 6451, "pr_title": "[Python][Client] Fix delimiter collision issue #5981", "pr_createdAt": "2020-05-27T09:38:43Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6451", "timeline": [{"oid": "3fa218f9883fb003b879df58417ce6a9c6a77dc6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3fa218f9883fb003b879df58417ce6a9c6a77dc6", "message": "[python][client] Fix delimiter collision (#5981)", "committedDate": "2020-05-27T09:13:08Z", "type": "commit"}, {"oid": "4ccd3fcefb6be0fed0c0f22814b54dadcf59baf9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4ccd3fcefb6be0fed0c0f22814b54dadcf59baf9", "message": "[python][client] Fix delimiter collision (#5981) update samples", "committedDate": "2020-05-27T09:27:10Z", "type": "commit"}, {"oid": "c3dbb421e5a61077447f9d5e622a2cff4503838e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c3dbb421e5a61077447f9d5e622a2cff4503838e", "message": "[python][client] Fix delimiter collision (#5981) update samples", "committedDate": "2020-05-27T09:28:21Z", "type": "commit"}, {"oid": "0acd69a424f433067e7dc573339895159f7afad4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0acd69a424f433067e7dc573339895159f7afad4", "message": "[python][client] Fix convert to enum var name (#5981)", "committedDate": "2020-05-28T07:24:45Z", "type": "commit"}, {"oid": "8e87228b0b6defacb0c9fb782f98674927d875cb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8e87228b0b6defacb0c9fb782f98674927d875cb", "message": "[python][client] Fix convert to enum var name (#5981) update samples", "committedDate": "2020-05-28T07:25:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg0Njg5OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6451#discussion_r431846899", "bodyText": "FYI. Looks like these changes are not indented properly (2-space vs 4-space). I can fix it later after merging this PR.", "author": "wing328", "createdAt": "2020-05-28T13:46:27Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "diffHunk": "@@ -902,43 +907,45 @@ public void setParameterExampleValue(CodegenParameter p) {\n             type = p.dataType;\n         }\n \n-        if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n+        if (type != null) {\n+          if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = p.paramName + \"_example\";\n+              example = p.paramName + \"_example\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"Integer\".equals(type) || \"int\".equals(type)) {\n+          } else if (\"Integer\".equals(type) || \"int\".equals(type)) {\n             if (example == null) {\n-                example = \"56\";\n+              example = \"56\";\n             }\n-        } else if (\"Float\".equalsIgnoreCase(type) || \"Double\".equalsIgnoreCase(type)) {\n+          } else if (\"Float\".equalsIgnoreCase(type) || \"Double\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"3.4\";\n+              example = \"3.4\";\n             }\n-        } else if (\"BOOLEAN\".equalsIgnoreCase(type) || \"bool\".equalsIgnoreCase(type)) {\n+          } else if (\"BOOLEAN\".equalsIgnoreCase(type) || \"bool\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"True\";\n+              example = \"True\";\n             }\n-        } else if (\"file\".equalsIgnoreCase(type)) {\n+          } else if (\"file\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"/path/to/file\";\n+              example = \"/path/to/file\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"Date\".equalsIgnoreCase(type)) {\n+          } else if (\"Date\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"2013-10-20\";\n+              example = \"2013-10-20\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"DateTime\".equalsIgnoreCase(type)) {\n+          } else if (\"DateTime\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"2013-10-20T19:20:30+01:00\";\n+              example = \"2013-10-20T19:20:30+01:00\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (!languageSpecificPrimitives.contains(type)) {\n+          } else if (!languageSpecificPrimitives.contains(type)) {\n             // type is a model class, e.g. User\n             example = this.packageName + \".\" + type + \"()\";\n-        } else {\n+          } else {\n             LOGGER.warn(\"Type \" + type + \" not handled properly in setParameterExampleValue\");\n+          }", "originalCommit": "8e87228b0b6defacb0c9fb782f98674927d875cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MDIzOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6451#discussion_r431860239", "bodyText": "Noted. Thank you!", "author": "fullcircle23", "createdAt": "2020-05-28T14:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg0Njg5OQ=="}], "type": "inlineReview"}]}