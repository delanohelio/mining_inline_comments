{"pr_number": 5810, "pr_title": "[Python-experimental] Fix TypeError: unhashable type: 'list'", "pr_createdAt": "2020-04-02T23:40:14Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5810", "timeline": [{"oid": "13a915d8f0300ac9c0c52e7bef627625fbb33bff", "url": "https://github.com/OpenAPITools/openapi-generator/commit/13a915d8f0300ac9c0c52e7bef627625fbb33bff", "message": "handle scenario when value is a list, fix TypeError: unhashable type: 'list'", "committedDate": "2020-04-02T23:38:22Z", "type": "commit"}, {"oid": "645162c289c5d4655c198e2dc2e63c5f11f4de2a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/645162c289c5d4655c198e2dc2e63c5f11f4de2a", "message": "Add __hash__ function", "committedDate": "2020-04-03T04:29:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMDIyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5810#discussion_r406830223", "bodyText": "How about using our hash method in out __eq__ method?", "author": "spacether", "createdAt": "2020-04-10T16:17:58Z", "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/model_utils.py", "diffHunk": "@@ -204,6 +208,10 @@ def to_str(self):\n         \"\"\"Returns the string representation of the model\"\"\"\n         return pprint.pformat(self.to_dict())\n \n+    def __hash__(self):\n+        \"\"\"Returns the hash value of this object.\"\"\"\n+        return hash(frozenset(self._data_store.items()))\n+\n     def __eq__(self, other):\n         \"\"\"Returns true if both objects are equal\"\"\"\n         if not isinstance(other, self.__class__):", "originalCommit": "645162c289c5d4655c198e2dc2e63c5f11f4de2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MTEyOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5810#discussion_r406841128", "bodyText": "How about using our hash method in out __eq__ method?\n\nWhat are you trying to achieve by doing this? hash can have collisions, so it cannot be used as is, we must do an actual equality comparison.", "author": "sebastien-rosset", "createdAt": "2020-04-10T16:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMDIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1ODIwMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5810#discussion_r406858202", "bodyText": "My intent was to make our definition consistent with what I was reading in python docs about implementing __hash__ and __eq__. If we have a collision chance, I agree that keeping this as-is is better.", "author": "spacether", "createdAt": "2020-04-10T17:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMDIyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMzQxMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5810#discussion_r406833411", "bodyText": "Can you change this to hash(frozenset(self._data_store.items())) so it is the same as the one in modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/methods_todict_tostr_eq_shared.mustache ? That will reduce the chance of hash collisions when we have different ModelSimple, ModelNormal, and ModelComposed instances in a set.", "author": "spacether", "createdAt": "2020-04-10T16:25:28Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/methods_tostr_eq_simple.mustache", "diffHunk": "@@ -2,6 +2,10 @@\n         \"\"\"Returns the string representation of the model\"\"\"\n         return str(self.value)\n \n+    def __hash__(self):\n+        \"\"\"Returns the hash value of this object.\"\"\"\n+        return hash(self._data_store['value'])", "originalCommit": "645162c289c5d4655c198e2dc2e63c5f11f4de2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyNjUyMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5810#discussion_r408526521", "bodyText": "Based on the discussion, I think I can mark this resolved.", "author": "sebastien-rosset", "createdAt": "2020-04-15T01:22:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMzQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzNzQyNg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5810#discussion_r408537426", "bodyText": "Yup, and no need for this method anymore", "author": "spacether", "createdAt": "2020-04-15T02:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzMzQxMQ=="}], "type": "inlineReview"}, {"oid": "de4432412a8be75d3fe205d2c5280f06acc3fe01", "url": "https://github.com/OpenAPITools/openapi-generator/commit/de4432412a8be75d3fe205d2c5280f06acc3fe01", "message": "use list instead of set", "committedDate": "2020-04-15T00:51:55Z", "type": "commit"}, {"oid": "5d7bc499efd4e43be6ee02dab6aab5e8c700622e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5d7bc499efd4e43be6ee02dab6aab5e8c700622e", "message": "use list instead of set", "committedDate": "2020-04-15T00:59:09Z", "type": "commit"}, {"oid": "bad077997f95f4feb8587d9f442dab25bfffe458", "url": "https://github.com/OpenAPITools/openapi-generator/commit/bad077997f95f4feb8587d9f442dab25bfffe458", "message": "use list instead of set", "committedDate": "2020-04-15T01:01:38Z", "type": "commit"}, {"oid": "1f670047e26bbd136d9be0604f3274aa95bb1492", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1f670047e26bbd136d9be0604f3274aa95bb1492", "message": "use list instead of set", "committedDate": "2020-04-15T01:02:03Z", "type": "commit"}, {"oid": "a0d53a416d38d9f57485cb7f093fa8f91a35eca7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a0d53a416d38d9f57485cb7f093fa8f91a35eca7", "message": "use list instead of set", "committedDate": "2020-04-15T01:02:58Z", "type": "commit"}, {"oid": "9f4d9741f895d5f6a888f3446a2c3a9a9d91dcf1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9f4d9741f895d5f6a888f3446a2c3a9a9d91dcf1", "message": "use list instead of set", "committedDate": "2020-04-15T01:13:52Z", "type": "commit"}]}