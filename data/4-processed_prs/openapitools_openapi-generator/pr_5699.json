{"pr_number": 5699, "pr_title": "Tests  for models for C-libcurl generator", "pr_createdAt": "2020-03-24T20:15:01Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5699", "timeline": [{"oid": "5e9959529c8034912439611e1a3f4b73bf61cb41", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5e9959529c8034912439611e1a3f4b73bf61cb41", "message": "First try to generate unit tests for the models of the C-libcurl client. Models into models are not supported yet.", "committedDate": "2020-03-24T03:26:35Z", "type": "commit"}, {"oid": "91a883d1efaffa19379a0c74a03dc2648f6ddf90", "url": "https://github.com/OpenAPITools/openapi-generator/commit/91a883d1efaffa19379a0c74a03dc2648f6ddf90", "message": "Added unit tests for the modules of the C-libcurl client to the git repository.", "committedDate": "2020-03-24T04:10:34Z", "type": "commit"}, {"oid": "74bbfe53c37257356f2605eb79eb190ce83cb4f9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/74bbfe53c37257356f2605eb79eb190ce83cb4f9", "message": "Support for objects having other objects as properties, for the C-libcurl client generator", "committedDate": "2020-03-24T19:49:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTI0Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5699#discussion_r398305247", "bodyText": "What about putting the comments in the same line as the example value (e.g. 56, // id (primitive)) ?", "author": "wing328", "createdAt": "2020-03-26T04:01:48Z", "path": "samples/client/petstore/c/unit-test/test_category.c", "diffHunk": "@@ -0,0 +1,68 @@\n+#ifndef category_TEST\n+#define category_TEST\n+\n+// the following is to include only the main from the first c file\n+#ifndef TEST_MAIN\n+#define TEST_MAIN\n+#define category_MAIN\n+#endif // TEST_MAIN\n+\n+#include <stdlib.h>\n+#include <string.h>\n+#include <stdio.h>\n+#include <stdbool.h>\n+#include \"../external/cJSON.h\"\n+\n+\n+\n+#include \"../model/category.h\"\n+category_t* instantiate_category(int include_optional);\n+\n+\n+\n+category_t* instantiate_category(int include_optional) {\n+  category_t* category = NULL;\n+if (include_optional) {\n+  category = category_create(\n+56\n+//primitive\n+, // id", "originalCommit": "74bbfe53c37257356f2605eb79eb190ce83cb4f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxMjc3MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5699#discussion_r398412771", "bodyText": "This is the plan. I created the PR to receive comments while I developed the approach further.", "author": "michelealbano", "createdAt": "2020-03-26T09:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczNjM1NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5699#discussion_r399736355", "bodyText": "\ud83d\udc4c", "author": "wing328", "createdAt": "2020-03-29T02:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTI0Nw=="}], "type": "inlineReview"}, {"oid": "bcdeb4b0ce2fbde02636032ff45ae05b02390ff8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/bcdeb4b0ce2fbde02636032ff45ae05b02390ff8", "message": "Proper formatting of generated code", "committedDate": "2020-03-30T02:10:18Z", "type": "commit"}]}