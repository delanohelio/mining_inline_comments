{"pr_number": 5925, "pr_title": "feat(r): retry configuration for status codes", "pr_createdAt": "2020-04-14T06:31:06Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5925", "timeline": [{"oid": "cf085966566141f2fd7556b401e5e828637f47a8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cf085966566141f2fd7556b401e5e828637f47a8", "message": "feat(r): retry configuration for status codes", "committedDate": "2020-04-14T06:29:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1NjMyNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r412356327", "bodyText": "The line indention doesn't look right to me. It seems to be using a mix of tabs and spaces", "author": "wing328", "createdAt": "2020-04-21T17:36:41Z", "path": "samples/client/petstore/R/R/api_client.R", "diffHunk": "@@ -87,8 +93,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){\n+          if(statusCode %in% self$retryStatusCodes){\n+            Sys.sleep((2 ^ i) + stats::runif(n = 1, min = 0, max = 1))\n+            resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+            statusCode <- httr::status_code(resp)\n+          }\n+          else{\n+            break;\n+          }\n+        }\t  \n+\t  }", "originalCommit": "cf085966566141f2fd7556b401e5e828637f47a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0Mzc2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r412443760", "bodyText": "better have else in the previous line with }", "author": "wing328", "createdAt": "2020-04-21T19:47:18Z", "path": "samples/client/petstore/R/R/api_client.R", "diffHunk": "@@ -87,8 +93,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){\n+          if(statusCode %in% self$retryStatusCodes){\n+            Sys.sleep((2 ^ i) + stats::runif(n = 1, min = 0, max = 1))\n+            resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+            statusCode <- httr::status_code(resp)\n+          }\n+          else{", "originalCommit": "cf085966566141f2fd7556b401e5e828637f47a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1OTM4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r413159389", "bodyText": "Typo error: maxRetryAttempts", "author": "saigiridhar21", "createdAt": "2020-04-22T17:05:30Z", "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "diffHunk": "@@ -24,6 +24,8 @@\n #' @field apiKeys\n #' @field accessToken\n #' @field timeout Default timeout in seconds\n+#' @field retryStatusCodes vector of status codes to retry\n+#' @field maxRetryAttemps maximum number of retries for the status codes", "originalCommit": "cf085966566141f2fd7556b401e5e828637f47a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2MDA3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r413160078", "bodyText": "Very minor: Please fix the indentation.", "author": "saigiridhar21", "createdAt": "2020-04-22T17:06:26Z", "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "diffHunk": "@@ -83,8 +89,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){", "originalCommit": "cf085966566141f2fd7556b401e5e828637f47a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "086c1409632898d737fd6b725a80b54566ce2b3b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/086c1409632898d737fd6b725a80b54566ce2b3b", "message": "fix(r) : fixing review comments", "committedDate": "2020-04-23T02:03:55Z", "type": "commit"}]}