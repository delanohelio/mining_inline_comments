{"pr_number": 6970, "pr_title": "Fixes #6969: typescript-inversify client compile error, type casting \u2026", "pr_createdAt": "2020-07-17T15:11:10Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6970", "timeline": [{"oid": "3d5a1eb9b20c173efdaf2158d0ad306dc7ae9eb4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3d5a1eb9b20c173efdaf2158d0ad306dc7ae9eb4", "message": "Fixes #6969: typescript-inversify client compile error, type casting warning and apostrophes", "committedDate": "2020-07-17T15:07:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyMzQ3NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6970#discussion_r458623474", "bodyText": "what is the original type of {{paramName}}? can it be casted to Date without issues?", "author": "macjohnny", "createdAt": "2020-07-22T08:26:54Z", "path": "modules/openapi-generator/src/main/resources/typescript-inversify/api.service.mustache", "diffHunk": "@@ -73,21 +73,21 @@ export class {{classname}} {\n         if ({{paramName}}) {\n         {{#isCollectionFormatMulti}}\n             {{paramName}}.forEach((element) => {\n-                queryParameters.push(\"{{paramName}}=\"+encodeURIComponent(String({{paramName}})));\n+                queryParameters.push('{{paramName}}='+encodeURIComponent(String({{paramName}})));\n             })\n         {{/isCollectionFormatMulti}}\n         {{^isCollectionFormatMulti}}\n-            queryParameters.push(\"{{paramName}}=\"+encodeURIComponent({{paramName}}.join(COLLECTION_FORMATS['{{collectionFormat}}'])));\n+            queryParameters.push('{{paramName}}='+encodeURIComponent({{paramName}}.join(COLLECTION_FORMATS['{{collectionFormat}}'])));\n         {{/isCollectionFormatMulti}}\n         }\n         {{/isListContainer}}\n         {{^isListContainer}}\n         if ({{paramName}} !== undefined) {\n         {{#isDateTime}}\n-           queryParameters.push(\"{{paramName}}=\"+encodeURIComponent(<any>{{paramName}}.toISOString()));\n+           queryParameters.push('{{paramName}}='+encodeURIComponent(({{paramName}} as Date).toISOString()));", "originalCommit": "3d5a1eb9b20c173efdaf2158d0ad306dc7ae9eb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2NTM2OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6970#discussion_r458665368", "bodyText": "The type of paramName normally implements Date interface so this change should be correctly.", "author": "gualtierim", "createdAt": "2020-07-22T09:36:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyMzQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2ODcxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6970#discussion_r458768710", "bodyText": "I think the general type for format: date-time in the typescript generators is string, see #5314", "author": "macjohnny", "createdAt": "2020-07-22T12:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyMzQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2MzA5Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6970#discussion_r458863097", "bodyText": "@macjohnny\n\nI think the general type for format: date-time in the typescript generators is string, see #5314\n\nI'm pretty sure that is Date interface here, because I'm using it this generator.", "author": "michalzubkowicz", "createdAt": "2020-07-22T15:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyMzQ3NA=="}], "type": "inlineReview"}, {"oid": "3750941ad34940d6c9d2245e69f16ee7bc0a19b6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3750941ad34940d6c9d2245e69f16ee7bc0a19b6", "message": "Merge branch 'master' of https://github.com/OpenAPITools/openapi-generator", "committedDate": "2020-07-22T09:40:15Z", "type": "commit"}]}