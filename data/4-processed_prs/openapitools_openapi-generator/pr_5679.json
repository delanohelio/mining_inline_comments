{"pr_number": 5679, "pr_title": "[Python] Fix Python UTF-8 Encoding Issue", "pr_createdAt": "2020-03-23T15:26:04Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5679", "timeline": [{"oid": "cdf8445b517263de31b3922e51d88d1008da9177", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf8445b517263de31b3922e51d88d1008da9177", "message": "Try decoding but don't bail on error", "committedDate": "2020-02-27T19:50:04Z", "type": "commit"}, {"oid": "c2c474e627a1805db3affe697e2cb230507e0556", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c2c474e627a1805db3affe697e2cb230507e0556", "message": "Switch binary and ByteArray to bytes", "committedDate": "2020-03-23T15:05:29Z", "type": "commit"}, {"oid": "9aec53826216e6d9117c50fe19a131a6fe501d91", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9aec53826216e6d9117c50fe19a131a6fe501d91", "message": "Read content type and parse appropriately", "committedDate": "2020-03-23T15:05:49Z", "type": "commit"}, {"oid": "67889ceb60bdd384aee60bd0b3aaa41e303a288e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/67889ceb60bdd384aee60bd0b3aaa41e303a288e", "message": "Remove response parsing", "committedDate": "2020-03-23T15:07:06Z", "type": "commit"}, {"oid": "298cecc65f39e9d8a37865f9e2637e8c7ad9d783", "url": "https://github.com/OpenAPITools/openapi-generator/commit/298cecc65f39e9d8a37865f9e2637e8c7ad9d783", "message": "Remove response parsing and just return the data", "committedDate": "2020-03-23T15:07:20Z", "type": "commit"}, {"oid": "6bff340ab279df59e8b8d1b9d3e92783783d8f8a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6bff340ab279df59e8b8d1b9d3e92783783d8f8a", "message": "Update petshop examples w/ new generator code", "committedDate": "2020-03-23T15:22:51Z", "type": "commit"}, {"oid": "6df4a186ad0df83328f68877c635f1f62c2f6b91", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6df4a186ad0df83328f68877c635f1f62c2f6b91", "message": "Fix copy/paste error with naming", "committedDate": "2020-03-23T15:45:41Z", "type": "commit"}, {"oid": "a6e9a8bacdec3817e38e1dfac7dd8a442e95a42e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a6e9a8bacdec3817e38e1dfac7dd8a442e95a42e", "message": "Update petstore examples", "committedDate": "2020-03-23T15:46:12Z", "type": "commit"}, {"oid": "0e834693e3c6735c96b5a1c8903b7131f0ee07bc", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0e834693e3c6735c96b5a1c8903b7131f0ee07bc", "message": "Move response decoding to inside _preload_content block", "committedDate": "2020-03-23T20:20:39Z", "type": "commit"}, {"oid": "8633cbd605dc1e6652b81d28753f52f8bd4194fd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8633cbd605dc1e6652b81d28753f52f8bd4194fd", "message": "Update the clients again", "committedDate": "2020-03-23T20:23:11Z", "type": "commit"}, {"oid": "3729d1298bc101c033bd0af429fa8c5b2e724431", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3729d1298bc101c033bd0af429fa8c5b2e724431", "message": "Use a raw string for the regex pattern", "committedDate": "2020-03-23T20:44:12Z", "type": "commit"}, {"oid": "4e3e0f3d7409a95b8bf1948a4e848e5336437b49", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4e3e0f3d7409a95b8bf1948a4e848e5336437b49", "message": "Regenerate petstore clients", "committedDate": "2020-03-23T20:44:26Z", "type": "commit"}, {"oid": "d9c9062ea74c9b3cac5aa32a7434e2e95b85a4d2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d9c9062ea74c9b3cac5aa32a7434e2e95b85a4d2", "message": "Add bytes to python primitives as it's supported in 2.7 and 3", "committedDate": "2020-03-24T14:05:20Z", "type": "commit"}, {"oid": "ce76a4878acba90664f7227d5604c2733402ee28", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ce76a4878acba90664f7227d5604c2733402ee28", "message": "Add bytes to the exports from model_utils", "committedDate": "2020-03-24T14:06:22Z", "type": "commit"}, {"oid": "97586ffdf61ba8217f4113b0c9799176b6061fc7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/97586ffdf61ba8217f4113b0c9799176b6061fc7", "message": "Import bytes from model_utils", "committedDate": "2020-03-24T14:08:56Z", "type": "commit"}, {"oid": "02f7504ca2d2a544dd3e2ca2c616918fd172e1ec", "url": "https://github.com/OpenAPITools/openapi-generator/commit/02f7504ca2d2a544dd3e2ca2c616918fd172e1ec", "message": "Add conditional typing for regex pattern to match variable type", "committedDate": "2020-03-24T14:09:25Z", "type": "commit"}, {"oid": "ef36e6ea05d45444bca9ef354c6366a74c88b802", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ef36e6ea05d45444bca9ef354c6366a74c88b802", "message": "Regenerate petstore clients", "committedDate": "2020-03-24T14:09:58Z", "type": "commit"}, {"oid": "a2aa58525f10d6b84b5b2d1088afcf7b3e83aff9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a2aa58525f10d6b84b5b2d1088afcf7b3e83aff9", "message": "Use read() instead of text() for asyncio", "committedDate": "2020-03-24T15:44:54Z", "type": "commit"}, {"oid": "21652a83788ee447cc833a1e14ebc933fb1448aa", "url": "https://github.com/OpenAPITools/openapi-generator/commit/21652a83788ee447cc833a1e14ebc933fb1448aa", "message": "Regenerate petstore clients", "committedDate": "2020-03-24T15:45:06Z", "type": "commit"}, {"oid": "494358e1bfb9d20cd781a60d8d114226f1c5c2fe", "url": "https://github.com/OpenAPITools/openapi-generator/commit/494358e1bfb9d20cd781a60d8d114226f1c5c2fe", "message": "Remove unused six import", "committedDate": "2020-03-24T16:07:53Z", "type": "commit"}, {"oid": "786df18a495dd8a42cd9973bc8cf1036267c29af", "url": "https://github.com/OpenAPITools/openapi-generator/commit/786df18a495dd8a42cd9973bc8cf1036267c29af", "message": "Regenerate petstore clients", "committedDate": "2020-03-24T16:08:12Z", "type": "commit"}, {"oid": "dfb9bd73eefed7079d2c50daf2655e648cdc1d9e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/dfb9bd73eefed7079d2c50daf2655e648cdc1d9e", "message": "Add newline to kick Circle to re-run", "committedDate": "2020-03-24T18:43:21Z", "type": "commit"}, {"oid": "0d06ace514087a12d8afada4fbdb8e781f062eb8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0d06ace514087a12d8afada4fbdb8e781f062eb8", "message": "Merge branch 'master' of github.com:OpenAPITools/openapi-generator", "committedDate": "2020-03-24T19:28:12Z", "type": "commit"}, {"oid": "53e4c648e3c1b828fb4abc0d068f3139485ac684", "url": "https://github.com/OpenAPITools/openapi-generator/commit/53e4c648e3c1b828fb4abc0d068f3139485ac684", "message": "Remove whitespace from tox.ini", "committedDate": "2020-03-25T02:51:16Z", "type": "commit"}, {"oid": "577091e0a9a716e265e53280d588d1ececb322fe", "url": "https://github.com/OpenAPITools/openapi-generator/commit/577091e0a9a716e265e53280d588d1ececb322fe", "message": "Update more examples after ensure_updated", "committedDate": "2020-03-25T02:59:48Z", "type": "commit"}, {"oid": "7c4699651bbb487806321b685ed73eb18da24005", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7c4699651bbb487806321b685ed73eb18da24005", "message": "Merge branch 'master' of github.com:OpenAPITools/openapi-generator", "committedDate": "2020-03-25T14:03:21Z", "type": "commit"}, {"oid": "ac55616696e410c9d29cf0e1aa648ad15f23d0d8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ac55616696e410c9d29cf0e1aa648ad15f23d0d8", "message": "Add sample updates that didn't run with the --batch flag", "committedDate": "2020-03-25T14:13:35Z", "type": "commit"}, {"oid": "f8a7a55d9c28035473e2e2ce6ca8607326ade76e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f8a7a55d9c28035473e2e2ce6ca8607326ade76e", "message": "Remove extra bracket in regex to remove warning", "committedDate": "2020-03-25T15:02:47Z", "type": "commit"}, {"oid": "90f5bb06f1e76df35bafbe85d03eefa1080a3b8e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/90f5bb06f1e76df35bafbe85d03eefa1080a3b8e", "message": "Merge branch 'master' of github.com:OpenAPITools/openapi-generator", "committedDate": "2020-03-25T15:03:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzMDY0Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r397930642", "bodyText": "Why is this None? Can we add a byte example here?", "author": "spacether", "createdAt": "2020-03-25T15:09:26Z", "path": "samples/client/petstore/python-asyncio/docs/FakeApi.md", "diffHunk": "@@ -490,7 +490,7 @@ with petstore_api.ApiClient(configuration) as api_client:\n     number = 3.4 # float | None\n double = 3.4 # float | None\n pattern_without_delimiter = 'pattern_without_delimiter_example' # str | None\n-byte = 'byte_example' # str | None\n+byte = None # bytes | None", "originalCommit": "90f5bb06f1e76df35bafbe85d03eefa1080a3b8e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0cdcc3767f9f2c0cf652ca046d5721719626f19b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0cdcc3767f9f2c0cf652ca046d5721719626f19b", "message": "Stop printing debug messages", "committedDate": "2020-03-25T15:54:45Z", "type": "commit"}, {"oid": "6b49340b9484e60eae203c98351bb63e4734bf08", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6b49340b9484e60eae203c98351bb63e4734bf08", "message": "Add bytes examples to python doc generators", "committedDate": "2020-03-25T15:55:11Z", "type": "commit"}, {"oid": "9b1a46237e16941a11856d7c988a18a4c78a1b3c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9b1a46237e16941a11856d7c988a18a4c78a1b3c", "message": "Update generated FakeApi docs", "committedDate": "2020-03-25T15:55:51Z", "type": "commit"}, {"oid": "3615765392ab6c38b08aca9b7dc76c5b653199a8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3615765392ab6c38b08aca9b7dc76c5b653199a8", "message": "Regenerate api_client.py", "committedDate": "2020-03-25T15:56:06Z", "type": "commit"}, {"oid": "9f146ffda772b75ccdc5155c5eaa73acc5f35941", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9f146ffda772b75ccdc5155c5eaa73acc5f35941", "message": "Remove print statements from generated clients", "committedDate": "2020-03-25T16:19:01Z", "type": "commit"}, {"oid": "94182ec1c0f1f87c7197a8fe78a6310393f8e660", "url": "https://github.com/OpenAPITools/openapi-generator/commit/94182ec1c0f1f87c7197a8fe78a6310393f8e660", "message": "Update bytes example in FakeApi.md. Again. I swear.", "committedDate": "2020-03-25T16:37:23Z", "type": "commit"}, {"oid": "0969835ae47d9ce9ca0f421bd75c93da77287acb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0969835ae47d9ce9ca0f421bd75c93da77287acb", "message": "Add yet another seemingly missing doc update", "committedDate": "2020-03-25T18:58:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2MTcxOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r398861719", "bodyText": "So we used to have e.body decoded here.\nYour change as-is is breaking for the python generator because you are changing the type of e.body.\nSorry, I know that in the related issue I suggested putting it in the api client but I didn't know that it wouldbe a breaking change.\nCan you move you decoding code into rest.mustache to make this a non-breaking change?", "author": "spacether", "createdAt": "2020-03-26T20:12:57Z", "path": "samples/client/petstore/python-experimental/tests/test_api_exception.py", "diffHunk": "@@ -50,7 +51,8 @@ def test_404_error(self):\n         except ApiException as e:\n             self.assertEqual(e.status, 404)\n             self.assertEqual(e.reason, \"Not Found\")\n-            self.checkRegex(e.body, \"Pet not found\")\n+            body = e.body.decode('utf-8') if six.PY3 else e.body\n+            self.checkRegex(body, \"Pet not found\")", "originalCommit": "0969835ae47d9ce9ca0f421bd75c93da77287acb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MzU2Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r398873566", "bodyText": "@spacether I actually tried to put the decoding in rest.py but there's no access to response_type there (which is what is used to determine if something should be decoded or not). Would adding response_type as a parameter to call_api be preferable to this method (I'm assuming both are breaking changes so I'm not sure which is the better spot)?", "author": "CrshOverride", "createdAt": "2020-03-26T20:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2MTcxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkwNDkwNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r398904905", "bodyText": "Hmmm, what if we captured the raised exception in api_client:\n\ndecoded the exception body\nre-raised the exception?\n\nThen we have a non-breaking change.\nBeetlejuice beetlejuice beetle- @jimschubert @wing328 do you have feelings about\nchanging the interface here vs capturing, fixing and re-raising the exception with the decoded body?\nI prefer my proposed non-breaking change  vs a breaking interface change.\nThe breaking change is cleaner but it would delay this PR from landing until we have one with breaking changes in it.", "author": "spacether", "createdAt": "2020-03-26T21:30:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2MTcxOQ=="}], "type": "inlineReview"}, {"oid": "f1de9f1fa39a950f4f41c31d1844b40242204751", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f1de9f1fa39a950f4f41c31d1844b40242204751", "message": "Catch the error, decode the body, and re-throw", "committedDate": "2020-04-17T17:09:38Z", "type": "commit"}, {"oid": "0b2da129902e0909c30cd9478707ad5abf6b4cb0", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0b2da129902e0909c30cd9478707ad5abf6b4cb0", "message": "Remove the updates now that the change is non-breaking", "committedDate": "2020-04-17T17:10:14Z", "type": "commit"}, {"oid": "661a6213b673476b59bdd6c7924e92389efb137a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/661a6213b673476b59bdd6c7924e92389efb137a", "message": "Regenerate client", "committedDate": "2020-04-17T17:10:44Z", "type": "commit"}, {"oid": "703e0ce4074ce110d597cc222d6ed588a0e8fcf1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/703e0ce4074ce110d597cc222d6ed588a0e8fcf1", "message": "Add bytes deserialization test", "committedDate": "2020-04-17T18:58:40Z", "type": "commit"}, {"oid": "85820b01e4d70bde589e78321564c1bcde80f022", "url": "https://github.com/OpenAPITools/openapi-generator/commit/85820b01e4d70bde589e78321564c1bcde80f022", "message": "Update exception parsing", "committedDate": "2020-04-17T19:48:14Z", "type": "commit"}, {"oid": "250d36ef50f0e4dddff19db4ed90f4a2d166f8cd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/250d36ef50f0e4dddff19db4ed90f4a2d166f8cd", "message": "Add exception parsing for python-experimental", "committedDate": "2020-04-17T19:48:30Z", "type": "commit"}, {"oid": "31455afd1202574a5e8a839eb0b160cf59e71f2b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/31455afd1202574a5e8a839eb0b160cf59e71f2b", "message": "Regenerate client with minor changes", "committedDate": "2020-04-17T19:50:12Z", "type": "commit"}, {"oid": "d6a7f39bb57723aaa75af876fabbf5fcdee18443", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d6a7f39bb57723aaa75af876fabbf5fcdee18443", "message": "Revert test changes", "committedDate": "2020-04-17T20:13:35Z", "type": "commit"}, {"oid": "141a9a31946919da9e1560be5b305baed36055db", "url": "https://github.com/OpenAPITools/openapi-generator/commit/141a9a31946919da9e1560be5b305baed36055db", "message": "Merge branch 'master' of github.com:OpenAPITools/openapi-generator", "committedDate": "2020-04-20T02:20:11Z", "type": "commit"}, {"oid": "654f1cd47847ce57c8749ed7586de061962c643f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/654f1cd47847ce57c8749ed7586de061962c643f", "message": "Regenerate model_utils.py", "committedDate": "2020-04-20T14:18:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1MTk5OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411551999", "bodyText": "Can you rename this deserialize_binary_to_str ?\nThe current name implies that we expect to receive binary data and process it as binary in downstream consumers.", "author": "spacether", "createdAt": "2020-04-20T17:17:20Z", "path": "samples/client/petstore/python-experimental/tests/test_deserialization.py", "diffHunk": "@@ -377,6 +380,36 @@ def get_header(name, default=None):\n         finally:\n             os.unlink(file_path)\n \n+    def test_deserialize_binary(self):", "originalCommit": "654f1cd47847ce57c8749ed7586de061962c643f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2MDQ3OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411560479", "bodyText": "Can you add a separate test where we keep the response data in bytes?\nI'm not sure if we should return an open file object if bytes are received. We chose to store them in a file object before because a file was sent. How about keeping non-file bytes in a value of type bytes?\nIf I were receiving bytes as a user I would not expect them to be stored in a file object.", "author": "spacether", "createdAt": "2020-04-20T17:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1MTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3MjgwNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411572805", "bodyText": "How do we know that sending bytes will work?", "author": "spacether", "createdAt": "2020-04-20T17:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1MTk5OQ=="}], "type": "inlineReview"}, {"oid": "ce0fb7ca9ec331162774de509d98f1a5b2ba0fe6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ce0fb7ca9ec331162774de509d98f1a5b2ba0fe6", "message": "Update confusing test name", "committedDate": "2020-04-20T17:26:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5NjIxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411596212", "bodyText": "No longer needed because we are only concerned with bytes in the python layer when grabbing the raw response?\nThis comment also applies to lines lines 138, 139, 905-909 and to modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java", "author": "spacether", "createdAt": "2020-04-20T18:26:21Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "diffHunk": "@@ -119,6 +119,7 @@ public PythonClientCodegen() {\n         languageSpecificPrimitives.add(\"object\");\n         // TODO file and binary is mapped as `file`\n         languageSpecificPrimitives.add(\"file\");\n+        languageSpecificPrimitives.add(\"bytes\");", "originalCommit": "ce0fb7ca9ec331162774de509d98f1a5b2ba0fe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2MDI4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411660289", "bodyText": "Adding the type here without handling it in python-experimental means that we will have a new unhandled type.\nCan you defer this to the next PR?\nTypes are actively checked in python-experimental and I want to keep that type checking functionality. Adding bytes this way would break python-experimental type checking I think.", "author": "spacether", "createdAt": "2020-04-20T20:12:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5NjIxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5OTQ2NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411599465", "bodyText": "Should we do this for non-file-type only now?", "author": "spacether", "createdAt": "2020-04-20T18:31:36Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -186,22 +186,36 @@ class ApiClient(object):\n             # use server/host defined in path or operation instead\n             url = _host + resource_path\n \n-        # perform request and return response\n-        response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n-            method, url, query_params=query_params, headers=header_params,\n-            post_params=post_params, body=body,\n-            _preload_content=_preload_content,\n-            _request_timeout=_request_timeout)\n-\n-        self.last_response = response_data\n-\n-        return_data = response_data\n-        if _preload_content:\n-            # deserialize response data\n-            if response_type:\n-                return_data = self.deserialize(response_data, response_type)\n-            else:\n-                return_data = None\n+        try:\n+            # perform request and return response\n+            response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n+                method, url, query_params=query_params, headers=header_params,\n+                post_params=post_params, body=body,\n+                _preload_content=_preload_content,\n+                _request_timeout=_request_timeout)\n+\n+            content_type = response_data.getheader('content-type')\n+\n+            self.last_response = response_data\n+\n+            return_data = response_data\n+            if _preload_content:\n+                if six.PY3:\n+                    if response_type not in [\"file\", \"bytes\"]:", "originalCommit": "ce0fb7ca9ec331162774de509d98f1a5b2ba0fe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNzc4OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411607788", "bodyText": "@spacether If possible, I'd like to leave the groundwork for the next PR if at all possible (if it's not hurting anything).", "author": "CrshOverride", "createdAt": "2020-04-20T18:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5OTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxMzgyMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411613821", "bodyText": "As long as we remove the bytes addition from the python generator in the java files then I am fine with keeping this as-is. That would make it so we would never see this \"bytes\" type until your later PR.", "author": "spacether", "createdAt": "2020-04-20T18:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5OTQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxNjQ3Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411616476", "bodyText": "Style nit (not necessary to change):\nif six.PY3:\n  e.body = e.body.decode('utf-8')\n\nFor the else case we don't need to reassign the value of e.body", "author": "spacether", "createdAt": "2020-04-20T18:58:41Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_client.mustache", "diffHunk": "@@ -176,26 +176,30 @@ class ApiClient(object):\n             # use server/host defined in path or operation instead\n             url = _host + resource_path\n \n-        # perform request and return response\n-        response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n-            method, url, query_params=query_params, headers=header_params,\n-            post_params=post_params, body=body,\n-            _preload_content=_preload_content,\n-            _request_timeout=_request_timeout)\n-\n-        self.last_response = response_data\n-\n-        return_data = response_data\n-        if _preload_content:\n-            # deserialize response data\n-            if response_type:\n-                return_data = self.deserialize(\n-                    response_data,\n-                    response_type,\n-                    _check_type\n-                )\n-            else:\n-                return_data = None\n+        try:\n+            # perform request and return response\n+            response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n+                method, url, query_params=query_params, headers=header_params,\n+                post_params=post_params, body=body,\n+                _preload_content=_preload_content,\n+                _request_timeout=_request_timeout)\n+\n+            self.last_response = response_data\n+\n+            return_data = response_data\n+            if _preload_content:\n+                # deserialize response data\n+                if response_type:\n+                    return_data = self.deserialize(\n+                        response_data,\n+                        response_type,\n+                        _check_type\n+                    )\n+                else:\n+                    return_data = None\n+        except ApiException as e:\n+            e.body = e.body.decode('utf-8') if six.PY3 else e.body", "originalCommit": "ce0fb7ca9ec331162774de509d98f1a5b2ba0fe6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2f9e8f52b415e8e97106436754ac82f50cc9c934", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2f9e8f52b415e8e97106436754ac82f50cc9c934", "message": "Remove bytes from mapping and examples", "committedDate": "2020-04-20T19:29:47Z", "type": "commit"}, {"oid": "5fe30959809aa44386f1e7fcc9872c4068607881", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5fe30959809aa44386f1e7fcc9872c4068607881", "message": "Merge branch 'master' of github.com:CrshOverride/openapi-generator", "committedDate": "2020-04-20T19:46:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2MDYyNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411660624", "bodyText": "Can we add these back in?", "author": "spacether", "createdAt": "2020-04-20T20:13:16Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "diffHunk": "@@ -134,10 +135,6 @@ public PythonClientCodegen() {\n         typeMapping.put(\"DateTime\", \"datetime\");\n         typeMapping.put(\"object\", \"object\");\n         typeMapping.put(\"file\", \"file\");\n-        // TODO binary should be mapped to byte array\n-        // mapped to String as a workaround\n-        typeMapping.put(\"binary\", \"str\");\n-        typeMapping.put(\"ByteArray\", \"str\");", "originalCommit": "5fe30959809aa44386f1e7fcc9872c4068607881", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "590986b519df8b34e6ee1623c29e7bdb1f44ee14", "url": "https://github.com/OpenAPITools/openapi-generator/commit/590986b519df8b34e6ee1623c29e7bdb1f44ee14", "message": "Add back in the old binary/ByteArray to str mapping", "committedDate": "2020-04-20T20:27:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY5NzkxNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411697915", "bodyText": "Do we need to handle the _preload_content==False case with something like this?\nif not _preload_content:\n  return response_data\n# dedented remaining code without the if _preload_content condition\n...\nif response_type:\n  return self.deserialize(response_data, response_type)\nreturn None", "author": "spacether", "createdAt": "2020-04-20T21:16:36Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -186,22 +186,36 @@ class ApiClient(object):\n             # use server/host defined in path or operation instead\n             url = _host + resource_path\n \n-        # perform request and return response\n-        response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n-            method, url, query_params=query_params, headers=header_params,\n-            post_params=post_params, body=body,\n-            _preload_content=_preload_content,\n-            _request_timeout=_request_timeout)\n-\n-        self.last_response = response_data\n-\n-        return_data = response_data\n-        if _preload_content:\n-            # deserialize response data\n-            if response_type:\n-                return_data = self.deserialize(response_data, response_type)\n-            else:\n-                return_data = None\n+        try:\n+            # perform request and return response\n+            response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n+                method, url, query_params=query_params, headers=header_params,\n+                post_params=post_params, body=body,\n+                _preload_content=_preload_content,\n+                _request_timeout=_request_timeout)\n+\n+            content_type = response_data.getheader('content-type')\n+\n+            self.last_response = response_data\n+\n+            return_data = response_data", "originalCommit": "590986b519df8b34e6ee1623c29e7bdb1f44ee14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f260bacdd773669b4193abf998833ae283448bc3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f260bacdd773669b4193abf998833ae283448bc3", "message": "Update docs and api_client template", "committedDate": "2020-04-21T01:08:13Z", "type": "commit"}, {"oid": "a7ade74af6e18b1387dd2ed2d6ec1c9eaba1c2e6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a7ade74af6e18b1387dd2ed2d6ec1c9eaba1c2e6", "message": "Add experimental api_client changes", "committedDate": "2020-04-21T01:14:00Z", "type": "commit"}, {"oid": "e9edfdf7424b2da2836dfc253df67bc98a3468f0", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e9edfdf7424b2da2836dfc253df67bc98a3468f0", "message": "Regenerate samples again", "committedDate": "2020-04-21T01:18:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwNzM1Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411807357", "bodyText": "Can you remove this and the bytes definition on line 37?", "author": "spacether", "createdAt": "2020-04-21T01:43:51Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -25,6 +25,7 @@ if six.PY3:\n     # these are needed for when other modules import str and int from here\n     str = str\n     int = int\n+    bytes = bytes", "originalCommit": "e9edfdf7424b2da2836dfc253df67bc98a3468f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwODg3Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411808877", "bodyText": "@spacether I originall put it there for consistency with the rest of the definitions (str and int). What's the reasoning not to also include bytes (and wouldn't not including here break imports in other locations)?", "author": "CrshOverride", "createdAt": "2020-04-21T01:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwNzM1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg0NTY2Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r411845662", "bodyText": "We aren't using this bytes definition yet though, right?", "author": "spacether", "createdAt": "2020-04-21T03:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgwNzM1Nw=="}], "type": "inlineReview"}, {"oid": "14b2612562f2dc5b5722f383a40bfe125df053b5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/14b2612562f2dc5b5722f383a40bfe125df053b5", "message": "Add Tornado handling to early return", "committedDate": "2020-04-21T03:21:11Z", "type": "commit"}, {"oid": "127dfef8e940c4e6ec584fd2059675198b3b9279", "url": "https://github.com/OpenAPITools/openapi-generator/commit/127dfef8e940c4e6ec584fd2059675198b3b9279", "message": "Try fixing Tornado python returns", "committedDate": "2020-04-21T04:00:55Z", "type": "commit"}, {"oid": "60f9fc94e78c840292d69618b4358c2325494141", "url": "https://github.com/OpenAPITools/openapi-generator/commit/60f9fc94e78c840292d69618b4358c2325494141", "message": "More documentation changes", "committedDate": "2020-04-21T14:02:08Z", "type": "commit"}, {"oid": "663d947a1092cabc2feb7a28755436f9db1551f3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/663d947a1092cabc2feb7a28755436f9db1551f3", "message": "Re-generate the client code", "committedDate": "2020-04-21T14:06:56Z", "type": "commit"}, {"oid": "9af7a7bb15569b489113f80717d2b044f63fad17", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9af7a7bb15569b489113f80717d2b044f63fad17", "message": "Remove bytes from test_format_test", "committedDate": "2020-04-21T14:45:24Z", "type": "commit"}, {"oid": "2d2a57165e8b8484d0c38263d73d5aa2051e37e1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2d2a57165e8b8484d0c38263d73d5aa2051e37e1", "message": "Remove more leftover bytes usages", "committedDate": "2020-04-21T15:20:39Z", "type": "commit"}, {"oid": "927f87dfd4b28d0ad8816463bcd8ae3a56781f1d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/927f87dfd4b28d0ad8816463bcd8ae3a56781f1d", "message": "Switch bytes validation back to string", "committedDate": "2020-04-21T18:45:43Z", "type": "commit"}, {"oid": "f65c8c5dfb38a47e108cd03b1c3a4d56732da35b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f65c8c5dfb38a47e108cd03b1c3a4d56732da35b", "message": "Merge branch 'master' of github.com:CrshOverride/openapi-generator", "committedDate": "2020-04-21T18:45:46Z", "type": "commit"}, {"oid": "206fe3c4cb8ecadd4ecf7597bd74162348c5d83d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/206fe3c4cb8ecadd4ecf7597bd74162348c5d83d", "message": "Fix format_test template and regenerate", "committedDate": "2020-04-21T22:58:12Z", "type": "commit"}, {"oid": "e55c9fac8dc32976e33a520cdd25a0a232aa0d2d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e55c9fac8dc32976e33a520cdd25a0a232aa0d2d", "message": "Merge branch 'master' of github.com:CrshOverride/openapi-generator", "committedDate": "2020-04-21T23:03:21Z", "type": "commit"}, {"oid": "9c8750f4a57d568ed341f44abb007bbffbbc6d1e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9c8750f4a57d568ed341f44abb007bbffbbc6d1e", "message": "Remove unused bytes var", "committedDate": "2020-04-21T23:22:27Z", "type": "commit"}, {"oid": "e0d058e81b59203879d452f341164f81f18db957", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e0d058e81b59203879d452f341164f81f18db957", "message": "Remove bytes import from models and regenerate", "committedDate": "2020-04-22T01:26:17Z", "type": "commit"}, {"oid": "4d02d8843e74ea77d3ef3571d57de5e7eedadfd1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4d02d8843e74ea77d3ef3571d57de5e7eedadfd1", "message": "Remove bytes import from test_deserialization", "committedDate": "2020-04-22T01:51:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNjYwMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r412716600", "bodyText": "The current variable name makes it sound like it should contain a binary value when it contains a string value.\nHow about changing the variable name binary to response or result or deserialized?", "author": "spacether", "createdAt": "2020-04-22T06:51:56Z", "path": "samples/client/petstore/python-experimental/tests/test_deserialization.py", "diffHunk": "@@ -377,6 +377,36 @@ def get_header(name, default=None):\n         finally:\n             os.unlink(file_path)\n \n+    def test_deserialize_binary_to_str(self):\n+        \"\"\"Ensures that bytes deserialization works\"\"\"\n+        response_types_mixed = (str,)\n+\n+        # sample from http://www.jtricks.com/download-text\n+        HTTPResponse = namedtuple(\n+            'urllib3_response_HTTPResponse',\n+            ['status', 'reason', 'data', 'getheaders', 'getheader']\n+        )\n+        headers = {}\n+        def get_headers():\n+            return headers\n+        def get_header(name, default=None):\n+            return headers.get(name, default)\n+        data = \"str\"\n+\n+        http_response = HTTPResponse(\n+            status=200,\n+            reason='OK',\n+            data=json.dumps(data).encode(\"utf-8\") if six.PY3 else json.dumps(data),\n+            getheaders=get_headers,\n+            getheader=get_header\n+        )\n+\n+        mock_response = RESTResponse(http_response)\n+\n+        binary = self.deserialize(mock_response, response_types_mixed, True)", "originalCommit": "4d02d8843e74ea77d3ef3571d57de5e7eedadfd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxODM3Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r412718377", "bodyText": "Is this working?\nI am not seeing any samples have binary regex patterns.", "author": "spacether", "createdAt": "2020-04-22T06:55:12Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/classvars.mustache", "diffHunk": "@@ -53,8 +53,20 @@\n {{/minimum}}\n {{#pattern}}\n             'regex': {\n+            {{#isBinary}}\n                 'pattern': r'{{{vendorExtensions.x-regex}}}',  # noqa: E501{{#vendorExtensions.x-modifiers}}\n                 {{#-first}}'flags': (re.{{.}}{{/-first}}{{^-first}}          re.{{.}}{{/-first}}{{^-last}} | {{/-last}}{{#-last}}){{/-last}}{{/vendorExtensions.x-modifiers}}\n+            {{/isBinary}}\n+            {{^isBinary}}\n+                {{#isByteArray}}\n+                'pattern': r'{{{vendorExtensions.x-regex}}}',  # noqa: E501{{#vendorExtensions.x-modifiers}}\n+                {{#-first}}'flags': (re.{{.}}{{/-first}}{{^-first}}          re.{{.}}{{/-first}}{{^-last}} | {{/-last}}{{#-last}}){{/-last}}{{/vendorExtensions.x-modifiers}}\n+                {{/isByteArray}}\n+                {{^isByteArray}}\n+                'pattern': r'{{{vendorExtensions.x-regex}}}',  # noqa: E501{{#vendorExtensions.x-modifiers}}\n+                {{#-first}}'flags': (re.{{.}}{{/-first}}{{^-first}}          re.{{.}}{{/-first}}{{^-last}} | {{/-last}}{{#-last}}){{/-last}}{{/vendorExtensions.x-modifiers}}\n+                {{/isByteArray}}\n+            {{/isBinary}}", "originalCommit": "4d02d8843e74ea77d3ef3571d57de5e7eedadfd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI3NzMwOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r413277308", "bodyText": "@spacether Without any of the other bytes stuff, this isn't actually needed anymore. It's another thing kept for the sake of the next PR (so the logic/need isn't forgotten).", "author": "CrshOverride", "createdAt": "2020-04-22T19:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxODM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxMDg2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r413310860", "bodyText": "When add in unused code like this, I worry that we will forget to include tests or samples that demonstrate them working. We say we will do it in the future but we may forget about it, or never get to it.\n\nIf you keep it here can you add a spec example which creates binary regex patterns in the python-experimental sample?\nOtherwise please remove this from this PR and include it in your next PR which can include tests or samples which use it", "author": "spacether", "createdAt": "2020-04-22T20:35:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxODM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5Nzc1Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r413297753", "bodyText": "Can you combine these two if statements?\nWe don't need two levels of indentation here.\nYou can just use:\nif six.PY3 and response_type not in {\"file\", \"bytes\"}:\nNote: I also switched to set definition with {} for quicker lookups.", "author": "spacether", "createdAt": "2020-04-22T20:15:54Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -186,22 +186,44 @@ class ApiClient(object):\n             # use server/host defined in path or operation instead\n             url = _host + resource_path\n \n-        # perform request and return response\n-        response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n-            method, url, query_params=query_params, headers=header_params,\n-            post_params=post_params, body=body,\n-            _preload_content=_preload_content,\n-            _request_timeout=_request_timeout)\n-\n-        self.last_response = response_data\n+        try:\n+            # perform request and return response\n+            response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n+                method, url, query_params=query_params, headers=header_params,\n+                post_params=post_params, body=body,\n+                _preload_content=_preload_content,\n+                _request_timeout=_request_timeout)\n+\n+            content_type = response_data.getheader('content-type')\n+\n+            self.last_response = response_data\n+\n+            return_data = response_data\n+\n+            if not _preload_content:\n+                {{^tornado}}\n+                return return_data\n+                {{/tornado}}\n+                {{#tornado}}\n+                raise tornado.gen.Return(return_data)\n+                {{/tornado}}\n+\n+            if six.PY3:\n+                if response_type not in [\"file\", \"bytes\"]:", "originalCommit": "4d02d8843e74ea77d3ef3571d57de5e7eedadfd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "91573d6a7e8dc03b4ce0b3739272b4f1f07296e9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/91573d6a7e8dc03b4ce0b3739272b4f1f07296e9", "message": "Reduce nested ifs", "committedDate": "2020-04-23T03:02:49Z", "type": "commit"}, {"oid": "b9834fc56167079c8174a79a72dc7696950905b7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b9834fc56167079c8174a79a72dc7696950905b7", "message": "Remove byte logic for now", "committedDate": "2020-04-23T03:03:02Z", "type": "commit"}, {"oid": "d67fe9f1c757da54104b4cb3f92696cbdc5fda22", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d67fe9f1c757da54104b4cb3f92696cbdc5fda22", "message": "Regenerate client after latest changes", "committedDate": "2020-04-23T14:08:03Z", "type": "commit"}, {"oid": "c84d1652416f1c29660333fe9a23153687713796", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c84d1652416f1c29660333fe9a23153687713796", "message": "Remove another bytes usage", "committedDate": "2020-04-23T16:19:27Z", "type": "commit"}, {"oid": "aa44de5d477d0b1ccdf37f41090c755fccfb430c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/aa44de5d477d0b1ccdf37f41090c755fccfb430c", "message": "Regenerate after removing dangling byte string usage", "committedDate": "2020-04-23T16:28:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2NzgyMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r413967821", "bodyText": "Is this exception only raised by the self.request call?\nIf so can we move this up to be right after that call?\nThat way all of the other code can be moved out of this try block because it doesn't need to be inside it.", "author": "spacether", "createdAt": "2020-04-23T17:01:17Z", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -186,22 +186,43 @@ class ApiClient(object):\n             # use server/host defined in path or operation instead\n             url = _host + resource_path\n \n-        # perform request and return response\n-        response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n-            method, url, query_params=query_params, headers=header_params,\n-            post_params=post_params, body=body,\n-            _preload_content=_preload_content,\n-            _request_timeout=_request_timeout)\n-\n-        self.last_response = response_data\n+        try:\n+            # perform request and return response\n+            response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n+                method, url, query_params=query_params, headers=header_params,\n+                post_params=post_params, body=body,\n+                _preload_content=_preload_content,\n+                _request_timeout=_request_timeout)\n+\n+            content_type = response_data.getheader('content-type')\n+\n+            self.last_response = response_data\n+\n+            return_data = response_data\n+\n+            if not _preload_content:\n+                {{^tornado}}\n+                return return_data\n+                {{/tornado}}\n+                {{#tornado}}\n+                raise tornado.gen.Return(return_data)\n+                {{/tornado}}\n+\n+            if six.PY3 and response_type not in [\"file\", \"bytes\"]:\n+                match = None\n+                if content_type is not None:\n+                    match = re.search(r\"charset=([a-zA-Z\\-\\d]+)[\\s\\;]?\", content_type)\n+                encoding = match.group(1) if match else \"utf-8\"\n+                response_data.data = response_data.data.decode(encoding)\n \n-        return_data = response_data\n-        if _preload_content:\n             # deserialize response data\n             if response_type:\n                 return_data = self.deserialize(response_data, response_type)\n             else:\n                 return_data = None\n+        except ApiException as e:\n+            e.body = e.body.decode('utf-8') if six.PY3 else e.body\n+            raise e", "originalCommit": "aa44de5d477d0b1ccdf37f41090c755fccfb430c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4MjExOA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r413982118", "bodyText": "Why is the binary assignment gone?", "author": "spacether", "createdAt": "2020-04-23T17:21:48Z", "path": "samples/client/petstore/python/test/test_format_test.py", "diffHunk": "@@ -36,19 +36,18 @@ def make_instance(self, include_optional):\n         # model = petstore_api.models.format_test.FormatTest()  # noqa: E501\n         if include_optional :\n             return FormatTest(\n-                integer = 1E+1, \n-                int32 = 2E+1, \n-                int64 = 56, \n-                number = 32.1, \n-                float = 54.3, \n-                double = 67.8, \n-                string = 'a', \n-                byte = 'YQ==', \n-                binary = bytes(b'blah'), ", "originalCommit": "aa44de5d477d0b1ccdf37f41090c755fccfb430c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA2ODA4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r414068082", "bodyText": "If we're removing returning binary, it shouldn't still be there should it?", "author": "CrshOverride", "createdAt": "2020-04-23T19:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4MjExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NTE1NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r414295154", "bodyText": "Let's still keep the field, but just give it a string value.\nPer here\nthe bytes variable exists in the model and accepts a string value.\nWhen you do your next PR we will see the type there change to byes, and we can update the sample value for this parameter here.", "author": "spacether", "createdAt": "2020-04-24T05:04:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4MjExOA=="}], "type": "inlineReview"}, {"oid": "5e8e54c47c50cdb51398fc8f38a05074f680e0f4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5e8e54c47c50cdb51398fc8f38a05074f680e0f4", "message": "Reduce the scope of the try/catch in api_client", "committedDate": "2020-04-23T20:21:04Z", "type": "commit"}, {"oid": "41756018c12f7aa3ef3d6ea6d8325fd1d7f8dd48", "url": "https://github.com/OpenAPITools/openapi-generator/commit/41756018c12f7aa3ef3d6ea6d8325fd1d7f8dd48", "message": "Regenerate after try/catch cleanup", "committedDate": "2020-04-24T01:43:19Z", "type": "commit"}, {"oid": "01aed8977c4ac65e1d2a2c2520ae7d52794b5269", "url": "https://github.com/OpenAPITools/openapi-generator/commit/01aed8977c4ac65e1d2a2c2520ae7d52794b5269", "message": "Swap catch for except", "committedDate": "2020-04-24T02:16:32Z", "type": "commit"}, {"oid": "6a7616769352f777c24ca8edf7adafb1102676a5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6a7616769352f777c24ca8edf7adafb1102676a5", "message": "Regenerate Python client after api_client change", "committedDate": "2020-04-24T02:33:35Z", "type": "commit"}, {"oid": "8673b87f6eec2ed6745aad02910e862e4c835cda", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8673b87f6eec2ed6745aad02910e862e4c835cda", "message": "Fix lint error on the generated api_client", "committedDate": "2020-04-24T03:30:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5MjQ4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5679#discussion_r414292489", "bodyText": "It looks like we need the decoding here also for python-experimental for non-file types.\nWhat do you think?", "author": "spacether", "createdAt": "2020-04-24T04:56:29Z", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api_client.mustache", "diffHunk": "@@ -176,26 +176,39 @@ class ApiClient(object):\n             # use server/host defined in path or operation instead\n             url = _host + resource_path\n \n-        # perform request and return response\n-        response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n-            method, url, query_params=query_params, headers=header_params,\n-            post_params=post_params, body=body,\n-            _preload_content=_preload_content,\n-            _request_timeout=_request_timeout)\n+        try:\n+            # perform request and return response\n+            response_data = {{#asyncio}}await {{/asyncio}}{{#tornado}}yield {{/tornado}}self.request(\n+                method, url, query_params=query_params, headers=header_params,\n+                post_params=post_params, body=body,\n+                _preload_content=_preload_content,\n+                _request_timeout=_request_timeout)\n+        except ApiException as e:\n+            e.body = e.body.decode('utf-8') if six.PY3 else e.body\n+            raise e\n \n         self.last_response = response_data\n \n         return_data = response_data\n-        if _preload_content:\n-            # deserialize response data\n-            if response_type:\n-                return_data = self.deserialize(\n-                    response_data,\n-                    response_type,\n-                    _check_type\n-                )\n-            else:\n-                return_data = None\n+\n+        if not _preload_content:\n+            {{^tornado}}\n+            return (return_data)\n+            {{/tornado}}\n+            {{#tornado}}\n+            raise tornado.gen.Return(return_data)\n+            {{/tornado}}\n+            return return_data", "originalCommit": "8673b87f6eec2ed6745aad02910e862e4c835cda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "23ab4e1cfefbf3dba55978bd1244351099fc60b7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/23ab4e1cfefbf3dba55978bd1244351099fc60b7", "message": "Add binary format test back in w/ string", "committedDate": "2020-04-24T14:27:01Z", "type": "commit"}, {"oid": "1de177c20ed1bc6d92c1d99ccfdef4ffda23e504", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1de177c20ed1bc6d92c1d99ccfdef4ffda23e504", "message": "Add decoding to python-experimental and regenerate", "committedDate": "2020-04-24T14:42:48Z", "type": "commit"}, {"oid": "f806ca86bf4b0c64d0c8baf84359858d2ceae49f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f806ca86bf4b0c64d0c8baf84359858d2ceae49f", "message": "Import re into python-experimental api_client", "committedDate": "2020-04-24T16:09:24Z", "type": "commit"}, {"oid": "373782fd25ce5050421846d7ff2be0e5ee27575a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/373782fd25ce5050421846d7ff2be0e5ee27575a", "message": "Ensure file upload json response is utf-8 encoded bytes", "committedDate": "2020-04-24T17:11:29Z", "type": "commit"}]}