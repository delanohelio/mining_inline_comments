{"pr_number": 5088, "pr_title": "[C++] [Qt5] Add request compression and handling identity", "pr_createdAt": "2020-01-23T10:40:04Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5088", "timeline": [{"oid": "0572eddf25637f87dac7de8953a3ecbc189fae21", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0572eddf25637f87dac7de8953a3ecbc189fae21", "message": "Add request and response compression and handling identity", "committedDate": "2020-01-23T10:36:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2MDY3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5088#discussion_r370060678", "bodyText": "This whole block could be simplified I think (or did I miss something?)\n(omitted brackets for shorter code, but I'm fine with them staying)\nif(!isFormData && (input->var_layout != MULTIPART) && isRequestCompressionEnabled)\n   request_content.append(compress(input->request_body, 7, {{prefix}}CompressionType::Gzip));\nelse\n   request_content.append(input->request_body);", "author": "muttleyxd", "createdAt": "2020-01-23T11:16:50Z", "path": "modules/openapi-generator/src/main/resources/cpp-qt5-client/HttpRequest.cpp.mustache", "diffHunk": "@@ -285,7 +289,15 @@ void {{prefix}}HttpRequestWorker::execute({{prefix}}HttpRequestInput *input) {\n     if (input->request_body.size() > 0) {\n         qDebug() << \"got a request body\";\n         request_content.clear();\n-        request_content.append(input->request_body);\n+        if(!isFormData && (input->var_layout != MULTIPART)){", "originalCommit": "0572eddf25637f87dac7de8953a3ecbc189fae21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2MjIyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5088#discussion_r370062223", "bodyText": "Are these called 'windows bit' or 'window bit'?", "author": "muttleyxd", "createdAt": "2020-01-23T11:20:48Z", "path": "modules/openapi-generator/src/main/resources/cpp-qt5-client/HttpRequest.cpp.mustache", "diffHunk": "@@ -427,8 +444,65 @@ QByteArray {{prefix}}HttpRequestWorker::decompress(const QByteArray& data){\n             sts = true;\n         } while (strm.avail_out == 0);\n         inflateEnd(&strm);\n-    } while(false);{{/contentCompression}}\n-    return sts ? result : QByteArray();\n+    } while(false);\n+    return sts ? result : QByteArray();{{/contentCompression}}{{^contentCompression}}\n+    Q_UNUSED(data);\n+    return QByteArray();{{/contentCompression}}\n+}\n+\n+QByteArray {{prefix}}HttpRequestWorker::compress(const QByteArray& input, int level, {{prefix}}CompressionType compressType) {\n+    {{#contentCompression}}QByteArray output;\n+    static const int GZIP_WINDOWS_BIT = 15+16;", "originalCommit": "0572eddf25637f87dac7de8953a3ecbc189fae21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE1NTU4Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5088#discussion_r370155586", "bodyText": "It is window bit", "author": "etherealjoy", "createdAt": "2020-01-23T14:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2MjIyMw=="}], "type": "inlineReview"}, {"oid": "0d8ad952e9273b9212faebcb70ad5f36f0d8733a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0d8ad952e9273b9212faebcb70ad5f36f0d8733a", "message": "Minor updates for identity and if conditions", "committedDate": "2020-01-23T15:17:26Z", "type": "commit"}]}