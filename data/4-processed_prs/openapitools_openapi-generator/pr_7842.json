{"pr_number": 7842, "pr_title": "[Ruby][faraday] fix download_file", "pr_createdAt": "2020-10-30T12:40:09Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/7842", "timeline": [{"oid": "f1df6acdee67eff72833e7cbacab5b624b0092e7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f1df6acdee67eff72833e7cbacab5b624b0092e7", "message": "Fix download_file", "committedDate": "2020-10-30T12:36:14Z", "type": "commit"}, {"oid": "d5c7e150323a68aee8e7cd72c8f5ccb9a20d8ed4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d5c7e150323a68aee8e7cd72c8f5ccb9a20d8ed4", "message": "Generate samples with f1df6acdee6", "committedDate": "2020-10-30T12:38:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDc3OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7842#discussion_r515070779", "bodyText": "Does not process this block.", "author": "tsuwatch", "createdAt": "2020-10-30T12:43:48Z", "path": "modules/openapi-generator/src/main/resources/ruby-client/api_client_faraday_partial.mustache", "diffHunk": "@@ -128,40 +128,11 @@\n       data\n     end\n \n-    # Save response body into a file in (the defined) temporary folder, using the filename\n-    # from the \"Content-Disposition\" header if provided, otherwise a random filename.\n-    # The response body is written to the file in chunks in order to handle files which\n-    # size is larger than maximum Ruby String or even larger than the maximum memory a Ruby\n-    # process can use.\n-    #\n-    # @see Configuration#temp_folder_path\n     def download_file(request)\n-      tempfile = nil\n-      encoding = nil\n-      request.headers do |response|", "originalCommit": "d5c7e150323a68aee8e7cd72c8f5ccb9a20d8ed4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDg3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7842#discussion_r515070878", "bodyText": "@tsuwatch thanks for the PR. Would it be possible to keep the filename from the response headers if available?", "author": "wing328", "createdAt": "2020-10-30T12:44:00Z", "path": "modules/openapi-generator/src/main/resources/ruby-client/api_client_faraday_partial.mustache", "diffHunk": "@@ -128,40 +128,11 @@\n       data\n     end\n \n-    # Save response body into a file in (the defined) temporary folder, using the filename\n-    # from the \"Content-Disposition\" header if provided, otherwise a random filename.\n-    # The response body is written to the file in chunks in order to handle files which\n-    # size is larger than maximum Ruby String or even larger than the maximum memory a Ruby\n-    # process can use.\n-    #\n-    # @see Configuration#temp_folder_path\n     def download_file(request)\n-      tempfile = nil\n-      encoding = nil\n-      request.headers do |response|\n-        content_disposition = response.headers['Content-Disposition']\n-        if content_disposition && content_disposition =~ /filename=/i\n-          filename = content_disposition[/filename=['\"]?([^'\"\\s]+)['\"]?/, 1]", "originalCommit": "d5c7e150323a68aee8e7cd72c8f5ccb9a20d8ed4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3OTIzNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7842#discussion_r515079237", "bodyText": "did it.\n3e3ea88", "author": "tsuwatch", "createdAt": "2020-10-30T13:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MDg3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MTMwOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7842#discussion_r515071309", "bodyText": "@stream is array", "author": "tsuwatch", "createdAt": "2020-10-30T12:44:53Z", "path": "samples/client/petstore/ruby-faraday/lib/petstore/api_client.rb", "diffHunk": "@@ -232,7 +203,8 @@ def deserialize(response, return_type)\n       # handle file downloading - return the File instance processed in request callbacks\n       # note that response body is empty when the file is written in chunks in request on_body callback\n       if return_type == 'File'\n-        @tempfile.write(@stream)\n+        @tempfile = Tempfile.open('download-', @config.temp_folder_path, encoding: body.encoding)\n+        @tempfile.write(@stream.join.force_encoding(body.encoding))", "originalCommit": "d5c7e150323a68aee8e7cd72c8f5ccb9a20d8ed4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MTQ2NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7842#discussion_r515071465", "bodyText": "Need to force_encoding", "author": "tsuwatch", "createdAt": "2020-10-30T12:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MTMwOQ=="}], "type": "inlineReview"}, {"oid": "3e3ea88b0dec7763c861e9623f88a9d1fa9034c8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3e3ea88b0dec7763c861e9623f88a9d1fa9034c8", "message": "fixup! Fix download_file", "committedDate": "2020-10-30T12:47:58Z", "type": "commit"}, {"oid": "1b4c9df567c71bda7fb8f5359533166a5ccc9e68", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b4c9df567c71bda7fb8f5359533166a5ccc9e68", "message": "Generate samples with 3e3ea88b0dec7763c8", "committedDate": "2020-10-30T12:57:55Z", "type": "commit"}]}