{"pr_number": 6469, "pr_title": "[feature][python] Support aliasing of API keys", "pr_createdAt": "2020-05-28T13:02:45Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6469", "timeline": [{"oid": "2b80b8a7834bc98b857085775a3d485c9867fd3a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2b80b8a7834bc98b857085775a3d485c9867fd3a", "message": "[python] Support aliasing of API keys", "committedDate": "2020-05-28T12:57:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxNDQ4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r432814489", "bodyText": "Why aren't we using {{keyParamName}} if there is no vendor extension set?", "author": "spacether", "createdAt": "2020-05-30T06:04:48Z", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -466,7 +466,7 @@ conf = {{{packageName}}}.Configuration(\n             auth['{{name}}'] = {\n                 'type': 'api_key',\n                 'in': {{#isKeyInCookie}}'cookie'{{/isKeyInCookie}}{{#isKeyInHeader}}'header'{{/isKeyInHeader}}{{#isKeyInQuery}}'query'{{/isKeyInQuery}},\n-                'key': '{{keyParamName}}',\n+                'key': '{{#vendorExtensions.x-auth-id-alias}}{{.}}{{/vendorExtensions.x-auth-id-alias}}{{^vendorExtensions.x-auth-id-alias}}{{name}}{{/vendorExtensions.x-auth-id-alias}}',", "originalCommit": "2b80b8a7834bc98b857085775a3d485c9867fd3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxNzc2MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r433417761", "bodyText": "using keyParamName is wrong since there can be a collision when using API key in header and query argument under same name: curl -H 'my-key: header-key' https://example.com/endpoint vs. curl https://example.com/endpoint?my-key=query-key\n\n#4940 (comment)", "author": "jirikuncar", "createdAt": "2020-06-01T18:40:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxNDQ4OQ=="}], "type": "inlineReview"}, {"oid": "1b4250c57576c1a127d37fff8748dbe7aef67c79", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b4250c57576c1a127d37fff8748dbe7aef67c79", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-02T09:38:48Z", "type": "commit"}, {"oid": "93a722300f91bdc36a1675d5528f7e545341388b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/93a722300f91bdc36a1675d5528f7e545341388b", "message": "Support for aliasing and prefix", "committedDate": "2020-06-02T11:24:36Z", "type": "commit"}, {"oid": "7ae3dc6afb2091463fde7ca67f4009024c063ce4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7ae3dc6afb2091463fde7ca67f4009024c063ce4", "message": "Make more realistic usage", "committedDate": "2020-06-02T11:28:07Z", "type": "commit"}, {"oid": "5b8f65f1ca54ef9bc343c586fcfc6485bf368c63", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5b8f65f1ca54ef9bc343c586fcfc6485bf368c63", "message": "Regenerate", "committedDate": "2020-06-02T13:38:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NjAwMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434276002", "bodyText": "Is this missing a -?", "author": "spacether", "createdAt": "2020-06-03T02:37:24Z", "path": "modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml", "diffHunk": "@@ -572,6 +572,9 @@ paths:\n       summary: To test \"client\" model\n       description: To test \"client\" model\n       operationId: testClientModel\n+      security:\n+        - api_key_query: []\n+          api_key: []", "originalCommit": "5b8f65f1ca54ef9bc343c586fcfc6485bf368c63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0ODA4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434448082", "bodyText": "No, I'm checking usage of Multiple API Keys.", "author": "jirikuncar", "createdAt": "2020-06-03T09:52:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3NjAwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3OTQzMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434279432", "bodyText": "How about changing alias to identifier_alias to help convey that this is related to the identifier?\n\n\nCan you add this new parameter to the docstring of this function?\n\n\nFor the key assignment how about something which is a little easier to understand, like this snippet?\n\n\nkey = self.api_key.get(identifier)\nif key is None and identifier_alias is not None:\n  key = self.api_key.get(identifier_alias)", "author": "spacether", "createdAt": "2020-06-03T02:52:03Z", "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/configuration.py", "diffHunk": "@@ -396,15 +396,15 @@ def logger_format(self, value):\n         self.__logger_format = value\n         self.logger_formatter = logging.Formatter(self.__logger_format)\n \n-    def get_api_key_with_prefix(self, identifier):\n+    def get_api_key_with_prefix(self, identifier, alias=None):", "originalCommit": "5b8f65f1ca54ef9bc343c586fcfc6485bf368c63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ0ODU1OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434448559", "bodyText": "I would really love to remove this internal function from public API.", "author": "jirikuncar", "createdAt": "2020-06-03T09:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3OTQzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MDA2NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434450065", "bodyText": "I will add the docstring, but identifier_alias seems unnecessary too long.", "author": "jirikuncar", "createdAt": "2020-06-03T09:56:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI3OTQzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4MDQyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434280423", "bodyText": "Thank you for adding this example, I understand how this will be used now", "author": "spacether", "createdAt": "2020-06-03T02:56:16Z", "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -43,6 +44,31 @@ def test_configuration(self):\n         config.disabled_client_side_validations = \"\"\n \n \n+    def test_x_auth_id_alias(self):\n+        configuration = petstore_api.Configuration(\n+            host='http://localhost/',\n+            api_key={\n+                'api_key': 'SECRET_VALUE'\n+            },\n+            api_key_prefix={\n+                'api_key': 'PREFIX'\n+            }\n+        )\n+\n+        def request(*args, **kwargs):\n+            assert ('api_key_query', 'SECRET_VALUE') in kwargs['query_params']\n+            assert 'PREFIX SECRET_VALUE' == kwargs['headers']['api_key']\n+            raise RuntimeError(\"passed\")\n+\n+        with petstore_api.ApiClient(configuration) as client:\n+            api = FakeApi(client)\n+            client.request = request\n+            try:\n+                api.test_client_model(client_client={})\n+            except RuntimeError as e:\n+                assert \"passed\" == str(e)", "originalCommit": "5b8f65f1ca54ef9bc343c586fcfc6485bf368c63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0637df2eb1c278ebcc32a74713a5d1fb369ad28c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0637df2eb1c278ebcc32a74713a5d1fb369ad28c", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-03T09:57:39Z", "type": "commit"}, {"oid": "116fa250baafd084e8095ec6d3a0bf02aa654567", "url": "https://github.com/OpenAPITools/openapi-generator/commit/116fa250baafd084e8095ec6d3a0bf02aa654567", "message": "Document alias in generated code", "committedDate": "2020-06-03T10:02:31Z", "type": "commit"}, {"oid": "eb6557ebd14f8d6bac8f60a64aa11a27a1e612c6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/eb6557ebd14f8d6bac8f60a64aa11a27a1e612c6", "message": "Support override of aliased keys", "committedDate": "2020-06-03T10:19:49Z", "type": "commit"}, {"oid": "49a4c3ddde5c8a6c1f14c9038d6b09dcd1711b7c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/49a4c3ddde5c8a6c1f14c9038d6b09dcd1711b7c", "message": "Use diferent id and name for api keys", "committedDate": "2020-06-03T10:43:21Z", "type": "commit"}, {"oid": "185650ad84633f31b27935562c0833827c1548d3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/185650ad84633f31b27935562c0833827c1548d3", "message": "ensure up-to-date", "committedDate": "2020-06-03T13:58:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NTc5OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434875798", "bodyText": "@spacether please note that the aliasargument is only generated for x-auth-id-alias now.", "author": "jirikuncar", "createdAt": "2020-06-03T21:45:41Z", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -462,12 +463,15 @@ conf = {{{packageName}}}.Configuration(\n         auth = {}\n {{#authMethods}}\n {{#isApiKey}}\n-        if '{{keyParamName}}' in self.api_key:\n+        if '{{name}}' in self.api_key{{#vendorExtensions.x-auth-id-alias}} or '{{.}}' in self.api_key{{/vendorExtensions.x-auth-id-alias}}:\n             auth['{{name}}'] = {\n                 'type': 'api_key',\n                 'in': {{#isKeyInCookie}}'cookie'{{/isKeyInCookie}}{{#isKeyInHeader}}'header'{{/isKeyInHeader}}{{#isKeyInQuery}}'query'{{/isKeyInQuery}},\n                 'key': '{{keyParamName}}',\n-                'value': self.get_api_key_with_prefix('{{keyParamName}}')\n+                'value': self.get_api_key_with_prefix(\n+                    '{{name}}',{{#vendorExtensions.x-auth-id-alias}}\n+                    alias='{{.}}',{{/vendorExtensions.x-auth-id-alias}}", "originalCommit": "185650ad84633f31b27935562c0833827c1548d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjUzMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434942530", "bodyText": "Why not get rid of the alias parameter and pass in the alias value as the identifier value? When we have the alias value don't we never use the identified value?\nIt looks like we use one or the other and pass one value in as identifier, right?", "author": "spacether", "createdAt": "2020-06-04T01:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NTc5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEzMjc2NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435132765", "bodyText": "I am trying to keep the code backward compatible. In general, it's easier to keep backward compatibility with keyword arguments especially when they have default value.", "author": "jirikuncar", "createdAt": "2020-06-04T09:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NTc5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE4MzQ5MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435183491", "bodyText": "I agree that the approach in the PR would be my preference as well.", "author": "jimschubert", "createdAt": "2020-06-04T11:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NTc5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzMTQ0NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435331444", "bodyText": "Understood, thanks", "author": "spacether", "createdAt": "2020-06-04T15:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NTc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NjE5Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434876192", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # configuration.api_key_prefix['{{#vendorExtensions.x-auth-id-alias}}{{{.}}}{{/vendorExtensions.x-auth-id-alias}}{{^vendorExtensions.x-auth-id-alias}}{{{name}}}{{/vendorExtensions.x-auth-id-alias}}'] = 'Bearer'\n          \n          \n            \n            # configuration.api_key_prefix['{{name}}'] = 'Bearer'", "author": "jirikuncar", "createdAt": "2020-06-03T21:46:40Z", "path": "modules/openapi-generator/src/main/resources/python/python_doc_auth_partial.mustache", "diffHunk": "@@ -95,11 +95,11 @@ configuration = {{{packageName}}}.Configuration(\n configuration = {{{packageName}}}.Configuration(\n     host = \"{{{basePath}}}\",\n     api_key = {\n-        '{{{keyParamName}}}': 'YOUR_API_KEY'\n+        '{{#vendorExtensions.x-auth-id-alias}}{{{.}}}{{/vendorExtensions.x-auth-id-alias}}{{^vendorExtensions.x-auth-id-alias}}{{{name}}}{{/vendorExtensions.x-auth-id-alias}}': 'YOUR_API_KEY'\n     }\n )\n # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n-# configuration.api_key_prefix['{{{keyParamName}}}'] = 'Bearer'\n+# configuration.api_key_prefix['{{#vendorExtensions.x-auth-id-alias}}{{{.}}}{{/vendorExtensions.x-auth-id-alias}}{{^vendorExtensions.x-auth-id-alias}}{{{name}}}{{/vendorExtensions.x-auth-id-alias}}'] = 'Bearer'", "originalCommit": "185650ad84633f31b27935562c0833827c1548d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg3NjI1Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434876253", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    '{{#vendorExtensions.x-auth-id-alias}}{{{.}}}{{/vendorExtensions.x-auth-id-alias}}{{^vendorExtensions.x-auth-id-alias}}{{{name}}}{{/vendorExtensions.x-auth-id-alias}}': 'YOUR_API_KEY'\n          \n          \n            \n                    '{{name}}': 'YOUR_API_KEY'", "author": "jirikuncar", "createdAt": "2020-06-03T21:46:48Z", "path": "modules/openapi-generator/src/main/resources/python/python_doc_auth_partial.mustache", "diffHunk": "@@ -95,11 +95,11 @@ configuration = {{{packageName}}}.Configuration(\n configuration = {{{packageName}}}.Configuration(\n     host = \"{{{basePath}}}\",\n     api_key = {\n-        '{{{keyParamName}}}': 'YOUR_API_KEY'\n+        '{{#vendorExtensions.x-auth-id-alias}}{{{.}}}{{/vendorExtensions.x-auth-id-alias}}{{^vendorExtensions.x-auth-id-alias}}{{{name}}}{{/vendorExtensions.x-auth-id-alias}}': 'YOUR_API_KEY'", "originalCommit": "185650ad84633f31b27935562c0833827c1548d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5710b7d561525b4b34b7794378892ac0f28df89", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c5710b7d561525b4b34b7794378892ac0f28df89", "message": "Simple example without x-auth-id-alias", "committedDate": "2020-06-03T21:48:39Z", "type": "commit"}, {"oid": "899e1f4f453c86f010b0021286e17765b2e85d07", "url": "https://github.com/OpenAPITools/openapi-generator/commit/899e1f4f453c86f010b0021286e17765b2e85d07", "message": "regenerate docs", "committedDate": "2020-06-03T21:50:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMzUyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434933523", "bodyText": "It may not be obvious but some generators samples have \"live\" tests which run pre-written tests against compiled code (see jersey2-java8). The tests aren't overwritten on generation (as a rule within DefaultGenerator).\nThis is documented in the description at the top of the file:\n\nThis spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose.\n\nIf you update this api key, it would require changing those other \"live tests\".\nIn this case, I'd recommend creating a separate smaller spec or adding another auth type outside of api_key which allows you to test the aliasing. That way you wouldn't have the conflict in the test.", "author": "jimschubert", "createdAt": "2020-06-04T00:53:54Z", "path": "modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml", "diffHunk": "@@ -1159,11 +1162,13 @@ components:\n             'read:pets': read your pets\n     api_key:\n       type: apiKey\n-      name: api_key\n+      name: X-Api-Key", "originalCommit": "899e1f4f453c86f010b0021286e17765b2e85d07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDI3NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r434940274", "bodyText": "Jim does this point apply to this cordoned off spec file which is used for python-experimental only?\nIs there another tag where we could ad this security scheme on to an use it there?\nShould we use a new api tag?", "author": "spacether", "createdAt": "2020-06-04T01:22:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5MTQzMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435191431", "bodyText": "@spacether I don't know why a spec for python-only would be used by Java. My comment above is about changing a spec which is shared elsewhere and would require changes to hand-written Java tests.\nI don't really follow your other questions. My recommendation was to add to the spec to avoid breaking those Java tests, or to create a standalone spec which demonstrates the aliasing behavior. If it was me, I'd do a separate minimal spec which demonstrates the behavior in unit tests then add the new alias parts to any existing spec to verify samples generation.\nAn issue with modifying existing specs that target swagger petstore (as does the one modified here) is that swagger petstore defines the header as api_key and someone wouldn't be able to use this spec to generate a valid client against that live API any longer. If we instead have another spec which doesn't target a real system's design (search for pony, fruits, and minimal \"ping\" specs), we don't risk breaking existing examples.\nEventually, I think we need to better organize and document the test specs so we know each are \"fakes\", which are intended to be exemplar full APIs, and which ones are only meant to evaluate full feature support.", "author": "jimschubert", "createdAt": "2020-06-04T11:44:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5ODMxNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435198317", "bodyText": "I will create a separate spec to test API key aliasing feature and generate new Python client with tests for it.", "author": "jirikuncar", "createdAt": "2020-06-04T11:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzNzExNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435337114", "bodyText": "So the modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml spec is used in 2 locations to generate samples:\n\nbin/openapi3/java-petstore-jersey2-java8.sh\nbin/openapi3/python-experimental-petstore.sh\n\nSo I agree with Jim's assessment that we need a separate spec for python-experimental for this case because I do not see a PR adding support for api key aliasing in java-jersey2.\nIf this spec were only used by python-experimental then we could just:\n\nadd new security schemes\nuse them in a non-live server api like the fake tag api\n\nHow about this fix?\n\nsaving off the existing modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml as a resource that java-petstore-jersey2-java8.sh uses, maybe in a java-jersey2-java8 folder\nadding your new changes to the existing python-experimental test file in the fake api, add new security schemes so they are only used in that one endpoint on the fake api\n\nThat fix meets these needs:\n\nit keeps feature isolation between these 2 generators\nit has no impact on live server testing based on specs because the fake api is not live\nit keeps is clear which sample that our users should look at when they look for python-experimental samples for the v3.0 openapi sample", "author": "spacether", "createdAt": "2020-06-04T15:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1MDI3Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435350276", "bodyText": "@jimschubert does this proposed fix meet your needs or do you still prefer the small feature only spec?", "author": "spacether", "createdAt": "2020-06-04T15:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMzUyMw=="}], "type": "inlineReview"}, {"oid": "12e4f9db39e3304209fbfc9799c6d03ba98ae3a7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/12e4f9db39e3304209fbfc9799c6d03ba98ae3a7", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-04T09:56:24Z", "type": "commit"}, {"oid": "b2d82c11b6d3cbe36a101d2f4fe103af6ac9b6e1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b2d82c11b6d3cbe36a101d2f4fe103af6ac9b6e1", "message": "Regenerate", "committedDate": "2020-06-04T09:58:03Z", "type": "commit"}, {"oid": "ea2706d4e4cacc7959704c3aeb38bf813fb1fdc4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/ea2706d4e4cacc7959704c3aeb38bf813fb1fdc4", "message": "Provide separate spec for x-auth-id-alias", "committedDate": "2020-06-04T12:37:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIyMDIxNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435220217", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            from petstore_api.api import FakeApi", "author": "jirikuncar", "createdAt": "2020-06-04T12:38:37Z", "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -21,6 +21,7 @@\n from collections import namedtuple\n \n import petstore_api\n+from petstore_api.api import FakeApi", "originalCommit": "ea2706d4e4cacc7959704c3aeb38bf813fb1fdc4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e8cdc89c91f4ea155a6bfd17fb566dd8eb04d6be", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e8cdc89c91f4ea155a6bfd17fb566dd8eb04d6be", "message": "Apply suggestions from code review", "committedDate": "2020-06-04T12:38:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0ODUwNg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435348506", "bodyText": "If we decide to keep this separate sample can you put in a python-experimental folder so our uses see both python-experimental samples at the same place?\nSomething like\n\nsamples/openapi3/client/petstore/python-experimental/general_sample\nsamples/openapi3/client/petstore/python-experimental/auith_id_alias_sample\n\nAlso, how about this solution of separating our existing spec into a python-experimental only version and a java version. That will let us add this feature in a python-experimental only spec, have no impact on other generators, not impact live server testing, and will keep it clear to users what sample to look at because there will only be one.", "author": "spacether", "createdAt": "2020-06-04T15:29:37Z", "path": "bin/openapi3/python-experimental-petstore.sh", "diffHunk": "@@ -32,3 +32,8 @@ yaml=\"modules/openapi-generator/src/test/resources/3_0/python-experimental/petst\n ags=\"generate -t modules/openapi-generator/src/main/resources/python -i $yaml -g python-experimental -o samples/openapi3/client/petstore/python-experimental/ --additional-properties packageName=petstore_api $@\"\n \n java $JAVA_OPTS -jar $executable $ags\n+\n+yaml=\"modules/openapi-generator/src/test/resources/3_0/extensions/x-auth-id-alias.yaml\"\n+ags=\"generate -t modules/openapi-generator/src/main/resources/python -i $yaml -g python-experimental -o samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/ --additional-properties packageName=x_auth_id_alias $@\"", "originalCommit": "e8cdc89c91f4ea155a6bfd17fb566dd8eb04d6be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MzcyOQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435383729", "bodyText": "I would like to generate other clients for this feature. I don't think it's python-experimental specific.", "author": "jirikuncar", "createdAt": "2020-06-04T16:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0ODUwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2MzI5Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435463296", "bodyText": "Ah, I understand. That's fine then", "author": "spacether", "createdAt": "2020-06-04T18:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0ODUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4NTUzNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435385535", "bodyText": "I could change the folder name where the client is generated:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ags=\"generate -t modules/openapi-generator/src/main/resources/python -i $yaml -g python-experimental -o samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/ --additional-properties packageName=x_auth_id_alias $@\"\n          \n          \n            \n            ags=\"generate -t modules/openapi-generator/src/main/resources/python -i $yaml -g python-experimental -o samples/openapi3/client/python-experimental/extensions/x-auth-id-alias/ --additional-properties packageName=x_auth_id_alias $@\"", "author": "jirikuncar", "createdAt": "2020-06-04T16:20:56Z", "path": "bin/openapi3/python-experimental-petstore.sh", "diffHunk": "@@ -32,3 +32,8 @@ yaml=\"modules/openapi-generator/src/test/resources/3_0/python-experimental/petst\n ags=\"generate -t modules/openapi-generator/src/main/resources/python -i $yaml -g python-experimental -o samples/openapi3/client/petstore/python-experimental/ --additional-properties packageName=petstore_api $@\"\n \n java $JAVA_OPTS -jar $executable $ags\n+\n+yaml=\"modules/openapi-generator/src/test/resources/3_0/extensions/x-auth-id-alias.yaml\"\n+ags=\"generate -t modules/openapi-generator/src/main/resources/python -i $yaml -g python-experimental -o samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/ --additional-properties packageName=x_auth_id_alias $@\"", "originalCommit": "e8cdc89c91f4ea155a6bfd17fb566dd8eb04d6be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NDI1MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6469#discussion_r435464251", "bodyText": "No need, where you have it makes more sense given that this is a feature prove out and will apply across generators like you said", "author": "spacether", "createdAt": "2020-06-04T18:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4NTUzNQ=="}], "type": "inlineReview"}, {"oid": "3d5f7b7bfe80fcccc0a742bdb76e02aeec0fb466", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3d5f7b7bfe80fcccc0a742bdb76e02aeec0fb466", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-05T10:23:34Z", "type": "commit"}, {"oid": "e770aadb5676d1ed9cf3eb3610b2741d9160b2fa", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e770aadb5676d1ed9cf3eb3610b2741d9160b2fa", "message": "regenerated", "committedDate": "2020-06-05T15:35:47Z", "type": "commit"}, {"oid": "55277024780f2bd948c5cd3e050a3d2d33c31cdd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/55277024780f2bd948c5cd3e050a3d2d33c31cdd", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-05T15:35:50Z", "type": "commit"}, {"oid": "2502a2c28b24bdd44bcb85163e058f031a49e5a4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2502a2c28b24bdd44bcb85163e058f031a49e5a4", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-08T09:05:19Z", "type": "commit"}, {"oid": "a7a9183f39392dc12e9c5f643a36e7633a5cd9fe", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a7a9183f39392dc12e9c5f643a36e7633a5cd9fe", "message": "Merge remote-tracking branch 'upstream/master' into jirikuncar/python-experimental/key-aliasing", "committedDate": "2020-06-11T14:08:08Z", "type": "commit"}]}