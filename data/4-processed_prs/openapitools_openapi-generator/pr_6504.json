{"pr_number": 6504, "pr_title": "[JS] adding handling for epoch dates", "pr_createdAt": "2020-05-31T07:18:03Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6504", "timeline": [{"oid": "40a7e53b19267611d11c307f8aead367050d8fd3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/40a7e53b19267611d11c307f8aead367050d8fd3", "message": "Improve handling spaces in example command (#6482)", "committedDate": "2020-05-30T15:15:53Z", "type": "forcePushed"}, {"oid": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "message": "adding handling for epoch dates in javascript ApiClient mustache file (#6497)", "committedDate": "2020-06-13T09:36:04Z", "type": "commit"}, {"oid": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "message": "adding handling for epoch dates in javascript ApiClient mustache file (#6497)", "committedDate": "2020-06-13T09:36:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMzM1Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6504#discussion_r465113353", "bodyText": "The Number.isNaN() method determines whether a value is NaN (Not-A-Number).\n\nRef: https://www.w3schools.com/jsref/jsref_isnan_number.asp\nDid you mean to check if str is a number?", "author": "wing328", "createdAt": "2020-08-04T14:55:44Z", "path": "modules/openapi-generator/src/main/resources/Javascript/ApiClient.mustache", "diffHunk": "@@ -541,12 +541,15 @@\n {{/usePromises}}  };\n \n {{#emitJSDoc}}  /**\n-   * Parses an ISO-8601 string representation of a date value.\n+   * Parses an ISO-8601 string representation or epoch representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n {{/emitJSDoc}}  exports.parseDate = function(str) {\n-    return new Date(str.replace(/T/i, ' '));\n+    if (isNaN(str)) {", "originalCommit": "cd7910c47ea3a12ad63677c26087d9b7b2c3b37c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEyMjcxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6504#discussion_r465122712", "bodyText": "No I meant to check if str is not a number. If it's not a number then we'll default to the existing logic otherwise it's a number that we can just pass into Date.", "author": "tray2100", "createdAt": "2020-08-04T15:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMzM1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE1NTQ1Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6504#discussion_r465155453", "bodyText": "OK. After reading https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN, I think we can go with your fix.", "author": "wing328", "createdAt": "2020-08-04T15:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTExMzM1Mw=="}], "type": "inlineReview"}]}