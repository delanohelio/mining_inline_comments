{"pr_number": 5914, "pr_title": "[Go] Interface definitions for api functions", "pr_createdAt": "2020-04-13T16:24:12Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5914", "timeline": [{"oid": "70c24e1a258f2c17896718a13426d2531a989b75", "url": "https://github.com/OpenAPITools/openapi-generator/commit/70c24e1a258f2c17896718a13426d2531a989b75", "message": "Update go-petstore-withxml with new generateInterfaces option", "committedDate": "2020-04-13T16:33:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4ODUxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r407588512", "bodyText": "I didn't see any reason this repeated the setWithXml from the previous line, so I think this was a bug.", "author": "arvindth", "createdAt": "2020-04-13T17:00:13Z", "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/go/GoClientOptionsTest.java", "diffHunk": "@@ -45,10 +45,11 @@ protected void verifyOptions() {\n         verify(clientCodegen).setPackageName(GoClientOptionsProvider.PACKAGE_NAME_VALUE);\n         verify(clientCodegen).setWithGoCodegenComment(GoClientOptionsProvider.WITH_GO_CODEGEN_COMMENT_VALUE);\n         verify(clientCodegen).setWithXml(GoClientOptionsProvider.WITH_XML_VALUE);\n-        verify(clientCodegen).setWithXml(GoClientOptionsProvider.ENUM_CLASS_PREFIX_VALUE);\n+        verify(clientCodegen).setEnumClassPrefix(GoClientOptionsProvider.ENUM_CLASS_PREFIX_VALUE);", "originalCommit": "70c24e1a258f2c17896718a13426d2531a989b75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU0MjAxNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r480542017", "bodyText": "Yeah, apparently this was just previously running this twice:\nverify(clientCodegen).setWithXml(true);", "author": "jimschubert", "createdAt": "2020-09-01T01:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4ODUxMg=="}], "type": "inlineReview"}, {"oid": "90d444725c773b2901e84461cba77231c2486595", "url": "https://github.com/OpenAPITools/openapi-generator/commit/90d444725c773b2901e84461cba77231c2486595", "message": "Update go-petstore-withxml with new generateInterfaces option", "committedDate": "2020-04-19T17:45:45Z", "type": "forcePushed"}, {"oid": "c2ce01233473aa8c092b12c9478116beeba88fc7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c2ce01233473aa8c092b12c9478116beeba88fc7", "message": "Add new generateInterfaces option for go-experimental\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods", "committedDate": "2020-05-14T00:16:06Z", "type": "forcePushed"}, {"oid": "d7586b9c2c0156de575a5345aa7a58916b7b4597", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d7586b9c2c0156de575a5345aa7a58916b7b4597", "message": "Add new generateInterfaces option for go-experimental samples\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods", "committedDate": "2020-05-14T19:55:13Z", "type": "forcePushed"}, {"oid": "04b8a8228c47d8bf7e4023da09f8a0b0b075600d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/04b8a8228c47d8bf7e4023da09f8a0b0b075600d", "message": "Add new generateInterfaces option for go-experimental samples\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods", "committedDate": "2020-05-14T21:09:32Z", "type": "forcePushed"}, {"oid": "230f5d083ea922d1bf5afe0f600a10112b333b4d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/230f5d083ea922d1bf5afe0f600a10112b333b4d", "message": "Add new generateInterfaces option for go-experimental samples\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods", "committedDate": "2020-05-15T12:27:09Z", "type": "forcePushed"}, {"oid": "248301516fc65224855ba7510a1fbb793ca14f9f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/248301516fc65224855ba7510a1fbb793ca14f9f", "message": "Add new generateInterfaces option for go-experimental samples\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods", "committedDate": "2020-05-15T12:29:43Z", "type": "forcePushed"}, {"oid": "b56472ef2a5de60f0d84b29adcf6b45cdf6c6b4b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b56472ef2a5de60f0d84b29adcf6b45cdf6c6b4b", "message": "bin/go-experimental-petstore.sh fixes", "committedDate": "2020-05-16T13:24:15Z", "type": "forcePushed"}, {"oid": "6c2cf187ceaa6dc46cfb96a826b806166b2cfc0d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/6c2cf187ceaa6dc46cfb96a826b806166b2cfc0d", "message": "debug ensure-up-to-date", "committedDate": "2020-05-16T14:35:04Z", "type": "forcePushed"}, {"oid": "769c53500c017dd0fc0bdcf5c3b6004c7a714d3b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/769c53500c017dd0fc0bdcf5c3b6004c7a714d3b", "message": "debug ensure-up-to-date", "committedDate": "2020-05-16T14:42:54Z", "type": "forcePushed"}, {"oid": "b1f203ca22b4fb991e49578006e5d61eeb32beff", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b1f203ca22b4fb991e49578006e5d61eeb32beff", "message": "more debug4, use latest mockgen", "committedDate": "2020-05-17T02:09:55Z", "type": "forcePushed"}, {"oid": "09886ce02f018e6b5fa77e668ddb7c903676e9b5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/09886ce02f018e6b5fa77e668ddb7c903676e9b5", "message": "more debug5, use latest mockgen w/o version", "committedDate": "2020-05-17T04:18:27Z", "type": "forcePushed"}, {"oid": "f88bd86be0530e74581acd10daa4490de61e9550", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f88bd86be0530e74581acd10daa4490de61e9550", "message": "more debug5, use latest mockgen w/o version", "committedDate": "2020-05-17T04:19:03Z", "type": "forcePushed"}, {"oid": "e54c569f1c1dd91e60e42d05905ebbd858e334e7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e54c569f1c1dd91e60e42d05905ebbd858e334e7", "message": "more debug5, use various go get mockgens", "committedDate": "2020-05-17T05:02:42Z", "type": "forcePushed"}, {"oid": "31e3721b08b9b8c2332f8a1dba9c9401521b92e5", "url": "https://github.com/OpenAPITools/openapi-generator/commit/31e3721b08b9b8c2332f8a1dba9c9401521b92e5", "message": "debug6 need to move this to the bin script", "committedDate": "2020-05-17T14:59:17Z", "type": "forcePushed"}, {"oid": "078580e22df827b671f527a66363580695f0d4f7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/078580e22df827b671f527a66363580695f0d4f7", "message": "debug6 need to move this to the bin script", "committedDate": "2020-05-17T15:06:50Z", "type": "forcePushed"}, {"oid": "7e868a4936369d79ac92b0a1240e185cc4261150", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7e868a4936369d79ac92b0a1240e185cc4261150", "message": "debug6 need to move this to the bin script", "committedDate": "2020-05-17T15:11:34Z", "type": "forcePushed"}, {"oid": "4769d9683c87575978e2e7fe149e0f639ef6ea8e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4769d9683c87575978e2e7fe149e0f639ef6ea8e", "message": "Enable generateInterfaces for go-experimental samples\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods\n  * Switch to go 1.14 for circleci to allow generating mocks", "committedDate": "2020-05-17T22:46:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MzM3OA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r463963378", "bodyText": "Why is all this necessary?", "author": "jimschubert", "createdAt": "2020-08-01T13:43:13Z", "path": "CI/circle_parallel.sh", "diffHunk": "@@ -33,6 +33,12 @@ elif [ \"$NODE_INDEX\" = \"2\" ]; then\n   if [[ $project_version == *\"-SNAPSHOT\" ]]; then\n     echo \"Running node $NODE_INDEX to test ensure-up-to-date\"\n     java -version\n+    # Install golang version 1.14\n+    go version\n+    sudo mkdir /usr/local/go1.14\n+    wget -c https://dl.google.com/go/go1.14.linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local/go1.14", "originalCommit": "4769d9683c87575978e2e7fe149e0f639ef6ea8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4NzY4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r463987689", "bodyText": "it's probably to run checks against latest version of go, but this looks far out of scope for this projects and IMO shouldn't be here, that's another thing to remember and maintain.", "author": "agilob", "createdAt": "2020-08-01T18:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MzM3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwODQ0MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r465808440", "bodyText": "Yeah, I deliberately put this in the last commit as a POC to showcase the usage of the mocks in the test. I can definitely take it out.", "author": "arvindth", "createdAt": "2020-08-05T15:23:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MzM3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk2MzQ5NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r463963495", "bodyText": "This does not belong in the generation script.", "author": "jimschubert", "createdAt": "2020-08-01T13:44:19Z", "path": "bin/go-experimental-petstore.sh", "diffHunk": "@@ -34,6 +34,17 @@ rm -rf $STUB_DIR\n \n # if you've executed sbt assembly previously it will use that instead.\n export JAVA_OPTS=\"${JAVA_OPTS} -Xmx1024M -DloggerPath=conf/log4j.properties\"\n-ags=\"generate -t modules/openapi-generator/src/main/resources/$GENERATOR -i $SPEC -g $GENERATOR -o $STUB_DIR --additional-properties packageName=petstore $@\"\n+ags=\"generate -t modules/openapi-generator/src/main/resources/$GENERATOR -i $SPEC -g $GENERATOR -o $STUB_DIR --additional-properties packageName=petstore,generateInterfaces=true $@\"\n \n java $JAVA_OPTS -jar $executable $ags\n+\n+# Generate mocks for testing the samples\n+cd samples/client/petstore/go-experimental/go-petstore/\n+echo \"which go = $(which go)\"\n+go version\n+gopath=$(go env GOPATH)\n+GO111MODULE=on go get github.com/golang/mock/mockgen@v1.4.3\n+mockgencmd=\"${gopath%%:*}/bin/mockgen -source=api_pet.go -destination=mock_api_pet.go -package petstore\"\n+echo \"Running $mockgencmd\"\n+$mockgencmd\n+cd -", "originalCommit": "4769d9683c87575978e2e7fe149e0f639ef6ea8e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bf0968bbaf0ee412e5a55a6b866b4b43cd339568", "url": "https://github.com/OpenAPITools/openapi-generator/commit/bf0968bbaf0ee412e5a55a6b866b4b43cd339568", "message": "[Go]: Interface definitions for api functions\n\n * Fix #2294 with code suggested by @partkyle", "committedDate": "2020-08-22T20:20:43Z", "type": "commit"}, {"oid": "a3454a3a6178da2ced3fb53baafaa68d2c35a1d7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a3454a3a6178da2ced3fb53baafaa68d2c35a1d7", "message": "Use interface in client struct", "committedDate": "2020-08-22T20:20:43Z", "type": "commit"}, {"oid": "1b50c28ca5fb336ad1587e53b481f0455389bb41", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b50c28ca5fb336ad1587e53b481f0455389bb41", "message": "Fixups to align with current master", "committedDate": "2020-08-22T20:20:44Z", "type": "commit"}, {"oid": "a06ed942f9d15ba7b1369c9f02d468877f925bb2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a06ed942f9d15ba7b1369c9f02d468877f925bb2", "message": "Replace classname with method name in method comments", "committedDate": "2020-08-22T20:20:44Z", "type": "commit"}, {"oid": "b5abc28e28f5d0b4d1a3be3f47f8f47b81725406", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b5abc28e28f5d0b4d1a3be3f47f8f47b81725406", "message": "Make method comments a bit prettier", "committedDate": "2020-08-22T20:20:44Z", "type": "commit"}, {"oid": "7bca6e019c9affab2af4ec776f645f0771c91ca7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/7bca6e019c9affab2af4ec776f645f0771c91ca7", "message": "Add commandline option to enable generateInterfaces", "committedDate": "2020-08-22T20:20:45Z", "type": "commit"}, {"oid": "9822d5cf4a42b4f1a4f8735a96f0928e21331bc2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9822d5cf4a42b4f1a4f8735a96f0928e21331bc2", "message": "Update go-petstore & oa3/go-petstore samples with prettier comments\n\n  - Use default generateInterfaces=false to suppress interfaces", "committedDate": "2020-08-22T20:20:45Z", "type": "commit"}, {"oid": "8f1f4085832cd2686dd95320b862a1be4232750b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8f1f4085832cd2686dd95320b862a1be4232750b", "message": "Regenerate go-experimental/oas2 samples w/o interfaces", "committedDate": "2020-08-23T13:11:37Z", "type": "forcePushed"}, {"oid": "9653a67cefe2228f66f8830f87b02e5610989c53", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9653a67cefe2228f66f8830f87b02e5610989c53", "message": "Enable generateInterfaces and update samples for go-petstore-withxml", "committedDate": "2020-08-23T18:41:18Z", "type": "commit"}, {"oid": "75cfe81211408236256bb6c130e4d5a051ad5f5a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/75cfe81211408236256bb6c130e4d5a051ad5f5a", "message": "Add generateInterfaces/prettier comments for go-experimental templates\n\n  * Backward incompatible since it changes the api method\n    signatures significantly.\n  * Adheres to a builder pattern more strictly. Execute now runs on the\n    req object returned by the builder, instead of the builder itself\n  * Prettify/align method comments", "committedDate": "2020-08-23T18:41:37Z", "type": "commit"}, {"oid": "fc00c988d63ab398a0a51e4aae7e8d8a1468e4b7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fc00c988d63ab398a0a51e4aae7e8d8a1468e4b7", "message": "Method signature refactors for go-experimental (and openapi3) samples\n\n  * Also update to include prettier method comments", "committedDate": "2020-08-23T18:41:37Z", "type": "commit"}, {"oid": "16c2141ab56194664d8f2494868d0839439bbbcb", "url": "https://github.com/OpenAPITools/openapi-generator/commit/16c2141ab56194664d8f2494868d0839439bbbcb", "message": "Enable generateInterfaces for go-experimental samples\n\n  * Samples now contain interfaces, using backward incompatible method\n    signatures.\n  * Add one test for mocked methods\n  * Switch to go 1.14 for circleci to allow generating mocks", "committedDate": "2020-08-23T18:41:38Z", "type": "commit"}, {"oid": "9ac3de2f81cb79fe137bf4dd6b8d19280f5f7330", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9ac3de2f81cb79fe137bf4dd6b8d19280f5f7330", "message": "Undo mock additions in CI/backward incompatibility in tests", "committedDate": "2020-08-23T18:41:38Z", "type": "commit"}, {"oid": "339849280b61ec9e063436dd8fe04ee6d6898430", "url": "https://github.com/OpenAPITools/openapi-generator/commit/339849280b61ec9e063436dd8fe04ee6d6898430", "message": "Address PR comments: fix backward incompatibility in templates\n\n  - add Execute redirection from request back up to service", "committedDate": "2020-08-23T18:41:39Z", "type": "commit"}, {"oid": "4945c11ac779c829d1f7ee25da749ae9a9de69b8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4945c11ac779c829d1f7ee25da749ae9a9de69b8", "message": "Regenerate go-experimental/oas2 samples w/o interfaces", "committedDate": "2020-08-23T18:41:59Z", "type": "commit"}, {"oid": "4945c11ac779c829d1f7ee25da749ae9a9de69b8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4945c11ac779c829d1f7ee25da749ae9a9de69b8", "message": "Regenerate go-experimental/oas2 samples w/o interfaces", "committedDate": "2020-08-23T18:41:59Z", "type": "forcePushed"}, {"oid": "fdc4599662ce8ae5366787d06bbf24c2f8a8e101", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fdc4599662ce8ae5366787d06bbf24c2f8a8e101", "message": "Regenerate go-experimental/oas2 samples with interfaces", "committedDate": "2020-08-23T21:01:21Z", "type": "commit"}, {"oid": "9d6ca297f8b776e7e554bc14cf566839111d7f29", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9d6ca297f8b776e7e554bc14cf566839111d7f29", "message": "Add mock to test go-experimental interface", "committedDate": "2020-08-23T21:59:52Z", "type": "commit"}, {"oid": "9d6ca297f8b776e7e554bc14cf566839111d7f29", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9d6ca297f8b776e7e554bc14cf566839111d7f29", "message": "Add mock to test go-experimental interface", "committedDate": "2020-08-23T21:59:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2ODUyMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5914#discussion_r475268523", "bodyText": "Rather than requiring callers to call the new backward incompatible *Execute methods in Service directly, I've re-added the original Execute method in *Request, which just redirects the call to the Service's *Execute, in order to maintain backward compatibility.", "author": "arvindth", "createdAt": "2020-08-23T21:17:10Z", "path": "modules/openapi-generator/src/main/resources/go-experimental/api.mustache", "diffHunk": "@@ -15,49 +15,77 @@ import (\n var (\n \t_ _context.Context\n )\n+{{#generateInterfaces}}\n+\n+type {{classname}} interface {\n+  {{#operation}}\n+\n+  /*\n+   * {{operationId}}{{#summary}} {{{.}}}{{/summary}}{{^summary}} Method for {{operationId}}{{/summary}}\n+  {{#notes}}\n+   * {{{unescapedNotes}}}\n+  {{/notes}}\n+   * @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().{{#pathParams}}\n+   * @param {{paramName}}{{#description}} {{{.}}}{{/description}}{{/pathParams}}\n+   * @return Api{{operationId}}Request\n+   */\n+  {{{nickname}}}(ctx _context.Context{{#pathParams}}, {{paramName}} {{{dataType}}}{{/pathParams}}) Api{{operationId}}Request\n+\n+  /*\n+   * {{nickname}}Execute executes the request{{#returnType}}\n+   * @return {{{.}}}{{/returnType}}\n+   */\n+  {{nickname}}Execute(r Api{{operationId}}Request) ({{#returnType}}{{{.}}}, {{/returnType}}*_nethttp.Response, error)\n+  {{/operation}}\n+}\n+{{/generateInterfaces}}\n \n // {{classname}}Service {{classname}} service\n type {{classname}}Service service\n-\n {{#operation}}\n-type api{{operationId}}Request struct {\n-\tctx _context.Context\n-\tapiService *{{classname}}Service{{#allParams}}\n-\t{{paramName}} {{^isPathParam}}*{{/isPathParam}}{{{dataType}}}{{/allParams}}\n-}\n \n+type Api{{operationId}}Request struct {\n+\tctx _context.Context{{#generateInterfaces}}\n+\tApiService {{classname}}\n+{{/generateInterfaces}}{{^generateInterfaces}}\n+\tApiService *{{classname}}Service\n+{{/generateInterfaces}}\n {{#allParams}}\n-{{^isPathParam}}\n-func (r api{{operationId}}Request) {{vendorExtensions.x-export-param-name}}({{paramName}} {{{dataType}}}) api{{operationId}}Request {\n+\t{{paramName}} {{^isPathParam}}*{{/isPathParam}}{{{dataType}}}\n+{{/allParams}}\n+}\n+{{#allParams}}{{^isPathParam}}\n+func (r Api{{operationId}}Request) {{vendorExtensions.x-export-param-name}}({{paramName}} {{{dataType}}}) Api{{operationId}}Request {\n \tr.{{paramName}} = &{{paramName}}\n \treturn r\n+}{{/isPathParam}}{{/allParams}}\n+\n+func (r Api{{operationId}}Request) Execute() ({{#returnType}}{{{.}}}, {{/returnType}}*_nethttp.Response, error) {\n+    return r.ApiService.{{nickname}}Execute(r)\n }\n-{{/isPathParam}}\n-{{/allParams}}\n+", "originalCommit": "af471d8c47696aefde9056c0d0326de9b257b6af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}