{"pr_number": 5209, "pr_title": "[python] use datetime aware object", "pr_createdAt": "2020-02-05T03:17:27Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5209", "timeline": [{"oid": "d865718dc6a24f7f693599f63bdaceaece8158f0", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d865718dc6a24f7f693599f63bdaceaece8158f0", "message": "python use aware datetime object", "committedDate": "2020-02-05T03:08:43Z", "type": "commit"}, {"oid": "262f8e26085afecbbb6fb421163cf7c56394a19d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/262f8e26085afecbbb6fb421163cf7c56394a19d", "message": "python use aware datetime object", "committedDate": "2020-02-05T04:49:29Z", "type": "commit"}, {"oid": "e2d911883803774a3217ffceb2dde6cb4c258abe", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e2d911883803774a3217ffceb2dde6cb4c258abe", "message": "python use aware datetime object", "committedDate": "2020-02-05T04:49:39Z", "type": "commit"}, {"oid": "c79baecfbdf7c12de59780b96bcde5c01c4d167f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c79baecfbdf7c12de59780b96bcde5c01c4d167f", "message": "python use aware datetime object", "committedDate": "2020-02-05T06:32:11Z", "type": "commit"}, {"oid": "1b2917bc6a433e7fda26f53b678fef4ba4efee78", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b2917bc6a433e7fda26f53b678fef4ba4efee78", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-02-05T06:48:57Z", "type": "commit"}, {"oid": "2c2321a2952836dcff2f81b481ab18f56952d0d7", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2c2321a2952836dcff2f81b481ab18f56952d0d7", "message": "python use aware datetime object", "committedDate": "2020-02-05T06:57:48Z", "type": "commit"}, {"oid": "818473c0e6dc258544d40315e4b21136e17e3272", "url": "https://github.com/OpenAPITools/openapi-generator/commit/818473c0e6dc258544d40315e4b21136e17e3272", "message": "Merge remote-tracking branch 'origin' into python-datetime-timezone", "committedDate": "2020-02-05T15:15:16Z", "type": "commit"}, {"oid": "9c3a91f41764314aa514b6ba286851ea7083ed97", "url": "https://github.com/OpenAPITools/openapi-generator/commit/9c3a91f41764314aa514b6ba286851ea7083ed97", "message": "python use aware datetime object", "committedDate": "2020-02-05T15:16:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3OTE1NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5209#discussion_r375579155", "bodyText": "Should we worry about a server using non-gmt time/a specific time zone?\nAnother solution would be to add that timezone input in a later PR if (and probably when) some poor soul hits that use case.", "author": "spacether", "createdAt": "2020-02-06T00:12:01Z", "path": "samples/openapi3/client/petstore/python-experimental/petstore_api/signing.py", "diffHunk": "@@ -270,15 +263,16 @@ def _get_signed_header_info(self, resource_path, method, headers, body, query_pa\n         if query_params:\n             request_target += \"?\" + urlencode(query_params)\n \n-        # Get current time and generate RFC 1123 (HTTP/1.1) date/time string.\n-        now = datetime.now()\n-        stamp = mktime(now.timetuple())\n-        cdate = formatdate(timeval=stamp, localtime=False, usegmt=True)\n+        # Get UNIX time, e.g. seconds since epoch, not including leap seconds.\n+        now = time()\n+        # Format date per RFC 7231 section-7.1.1.2. An example is:\n+        # Date: Wed, 21 Oct 2015 07:28:00 GMT\n+        cdate = formatdate(timeval=now, localtime=False, usegmt=True)", "originalCommit": "9c3a91f41764314aa514b6ba286851ea7083ed97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4NDU0NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5209#discussion_r375584544", "bodyText": "Timezone would be for human visibility only, because what really matters is that client and server can agree on time unambiguously, independent of the timezone. For example, if the client is in PST time 09:00:00AM, it may be received at 06:00:01PM in Europe, but if the client always sends in UTC time and clearly specifies so, there is no ambiguity.\nOn the other hand, using timezones is not a good idea, because the client and servers may not have the exact set of timezones (since timezone information can change over time). There is less risk of mismatch if UTC is used.\nAdditionally, the client and server can always convert the serialized time to a local time if they want to display the information to humans.\nThe RFC states the Date header can have one of three formats, but there is a preferred format, which must be in UTC. And unless I am mistaken, in RFC 7231 they use GMT for historic reasons, but it means UTC.\n     Sun, 06 Nov 1994 08:49:37 GMT\n\nExamples of the two obsolete formats are\n     Sunday, 06-Nov-94 08:49:37 GMT   ; obsolete RFC 850 format\n     Sun Nov  6 08:49:37 1994         ; ANSI C's asctime() format", "author": "sebastien-rosset", "createdAt": "2020-02-06T00:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3OTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4Njk2Mw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5209#discussion_r375586963", "bodyText": "Should we worry about a server using non-gmt time/a specific time zone?\n\nThat would be ok. If the server is in PST time zone, and it receives the following date: Date: Wed, 21 Oct 2015 07:28:00 GMT\nIt will know unambiguously when the client sent the request (of course assuming the client is reasonably in sync with Internet time). It does not matter if the client is in Europe or Asia.", "author": "sebastien-rosset", "createdAt": "2020-02-06T00:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3OTE1NQ=="}], "type": "inlineReview"}]}