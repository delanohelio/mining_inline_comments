{"pr_number": 7555, "pr_title": "added serialize option in to_dict function in python generated model", "pr_createdAt": "2020-09-30T12:16:27Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/7555", "timeline": [{"oid": "851284c2e009ae664a8067abe9d3fc7285c0893e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/851284c2e009ae664a8067abe9d3fc7285c0893e", "message": "added to_json_dict in python generated model", "committedDate": "2020-09-30T12:18:16Z", "type": "commit"}, {"oid": "851284c2e009ae664a8067abe9d3fc7285c0893e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/851284c2e009ae664a8067abe9d3fc7285c0893e", "message": "added to_json_dict in python generated model", "committedDate": "2020-09-30T12:18:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwODMxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r499708310", "bodyText": "This code looks good but it is being added to every model that is generated which creates a lot of extra lines.\nHow about centralizing a utility fn to do this or putting it as a class method in a base class?\nThat's what we do in python_experimental and we do it to minimize code duplication.\n\nmodelutils.model_to_dict\nusing it in a model template in our ModelNormal object based model class\nexample output model method", "author": "spacether", "createdAt": "2020-10-05T16:02:05Z", "path": "modules/openapi-generator/src/main/resources/python/model.mustache", "diffHunk": "@@ -221,6 +221,40 @@ class {{classname}}(object):\n \n         return result\n \n+    def to_json_dict(self):\n+        \"\"\"Returns the model properties as a dict\"\"\"\n+        result = {}\n+\n+        def get_value(val):\n+            if hasattr(val, \"to_json_dict\"):\n+                return val.to_json_dict()\n+            elif hasattr(val, \"to_dict\"):\n+                return val.to_dict()\n+            else:\n+                return val\n+\n+        for attr, _ in six.iteritems(self.openapi_types):\n+            value = getattr(self, attr)\n+            key = self.attribute_map.get(attr, attr)\n+            if isinstance(value, list):\n+                result[key] = list(map(\n+                    lambda x: get_value(x),\n+                    value\n+                ))\n+            elif hasattr(value, \"to_json_dict\"):\n+                result[key] = value.to_json_dict()\n+            elif hasattr(value, \"to_dict\"):\n+                result[key] = value.to_dict()\n+            elif isinstance(value, dict):\n+                result[key] = dict(map(\n+                    lambda item: (item[0], get_value(item[1])),\n+                    value.items()\n+                ))\n+            else:\n+                result[key] = value\n+\n+        return result\n+", "originalCommit": "851284c2e009ae664a8067abe9d3fc7285c0893e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0NDA4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r512644089", "bodyText": "Hi @spacether \uff0chave updated the PR.  I modified the to_dict function instead of adding a new function, and it is compatible to those sdk which is not generated using the new code. Please help to review.", "author": "gtarcoder", "createdAt": "2020-10-27T12:16:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwODMxMA=="}], "type": "inlineReview"}, {"oid": "da30ba4b37dd21cb892605be8f333e4cd4d71ba4", "url": "https://github.com/OpenAPITools/openapi-generator/commit/da30ba4b37dd21cb892605be8f333e4cd4d71ba4", "message": "update to_dict", "committedDate": "2020-10-27T12:12:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyMjg4NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r513122885", "bodyText": "Why would to_dict have more than 2 args?\nWhy is the number of arguments not constant?\nHow about:\ntry:\n    return x.to_dict(serialize)\nexcept AttributeError:\n    return x", "author": "spacether", "createdAt": "2020-10-28T01:16:50Z", "path": "modules/openapi-generator/src/main/resources/python/model.mustache", "diffHunk": "@@ -197,27 +197,37 @@ class {{classname}}(object):\n         return self.discriminator_value_class_map.get(discriminator_value)\n \n {{/discriminator}}\n-    def to_dict(self):\n+    def to_dict(self, serialize=False):\n         \"\"\"Returns the model properties as a dict\"\"\"\n         result = {}\n \n+        def convert(x):\n+            if hasattr(x, \"to_dict\"):\n+                args = inspect.getargspec(x.to_dict).args\n+                if len(args) == 1:\n+                    return x.to_dict()\n+                elif len(args) == 2:\n+                    return x.to_dict(serialize)\n+                else:\n+                    raise ValueError(\"Invalid argument size of to_dict\")", "originalCommit": "da30ba4b37dd21cb892605be8f333e4cd4d71ba4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEzNDEyNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r513134124", "bodyText": "Hi @spacether ,\nA model generated by newer openapi-generator-cli.jar should be able to apply to_dict function to its inner models which having only to_dict() but no to_dict(serialize) if those inner models are generated by an older openapi-generator-cli.jar\nSo I updated  to following code :\ndef convert(x):  \n    if hasattr(x, \"to_dict\"):\n        args = inspect.getargspec(x.to_dict).args  \n        if len(args) == 1:  \n            return x.to_dict()  \n        else:  \n            return x.to_dict(serialize)  \n    else:  \n        return x", "author": "gtarcoder", "createdAt": "2020-10-28T01:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyMjg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwNjA3Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r514106077", "bodyText": "Hi @spacether ,  is the change ok to be merged?", "author": "gtarcoder", "createdAt": "2020-10-29T09:11:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyMjg4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAwMzIxNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r518003215", "bodyText": "Hi @spacether  , would you please help to review this new change?", "author": "gtarcoder", "createdAt": "2020-11-05T12:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyMjg4NQ=="}], "type": "inlineReview"}, {"oid": "2c670fdfc14490ef7736ab48035f3a5b2c80c173", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2c670fdfc14490ef7736ab48035f3a5b2c80c173", "message": "updated to_dict", "committedDate": "2020-10-28T01:56:14Z", "type": "commit"}]}