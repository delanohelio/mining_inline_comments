{"pr_number": 566, "pr_title": "Allow URL-safe Base64 decoding", "pr_createdAt": "2020-05-22T19:26:48Z", "pr_url": "https://github.com/dogtagpki/jss/pull/566", "timeline": [{"oid": "0eeaa1208c027cfd964c7f51abe41d13748d64dc", "url": "https://github.com/dogtagpki/jss/commit/0eeaa1208c027cfd964c7f51abe41d13748d64dc", "message": "Allow URL-safe Base64 decoding\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-05-22T19:29:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMjU1Mw==", "url": "https://github.com/dogtagpki/jss/pull/566#discussion_r429422553", "bodyText": "If the string doesn't contain \"_\" or \"-\", can it be decoded with any of these methods and will they produce the same results?", "author": "edewata", "createdAt": "2020-05-22T19:33:51Z", "path": "org/mozilla/jss/netscape/security/util/Utils.java", "diffHunk": "@@ -406,7 +406,16 @@ public static String base64encodeSingleLine(byte[] bytes) {\n      */\n     public static byte[] base64decode(String string) {\n         try {\n-            return Base64.getMimeDecoder().decode(string);\n+            // Java is particular about its base64. We already used the MIME\n+            // decoder as it was most flexible about whitespace. However, it\n+            // doesn't understand URL-encoded Base64 (using '-' instead of\n+            // '+' and '_' instead of '/'). So, detect those characters and\n+            // pass it to the correct decoder.\n+            if (string.contains(\"_\") || string.contains(\"-\")) {\n+                return Base64.getUrlDecoder().decode(string);\n+            } else {\n+                return Base64.getMimeDecoder().decode(string);\n+            }", "originalCommit": "0eeaa1208c027cfd964c7f51abe41d13748d64dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjgzMA==", "url": "https://github.com/dogtagpki/jss/pull/566#discussion_r429426830", "bodyText": "Yes. The alphabets are in the same order, the only difference is this substitution. If they don't contain these character (_ or - or + or /), then any decoder will work. We want to prefer the MIME decoder as it is the most flexible (w.r.t. whitespace), but use the URL decoder when we need it.", "author": "cipherboy", "createdAt": "2020-05-22T19:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMjU1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTE2NQ==", "url": "https://github.com/dogtagpki/jss/pull/566#discussion_r429425165", "bodyText": "I think these aren't originally from the same data. Could we use the data below and compare the decoded data to make sure they match?\nURL-safe Base64:\nMIICjDCCAXQCAQIwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALdt\nHPsAesaTlWRE3pyW6PtDhbQSUt_jYbKSxLMR7uln7YNiL74pYHFNZ9ZrW51GWPF0\nKqldtx6c3zAweynehJtI_AR5pDtHi8bh8L8mqLpsJXgSx5laAGt2n_aAXNxJNS85\n4b_q6lV7k6nIfECsZwTkQV3LCEISjbW9jNLQsuSAV_TznJ3UoEmZh9YMA-cwpBBo\nnLcHxRx-0ymq9R53yUCyAUfLWl0pbfUlCF0EKHJ25et_T8TftzMqdLFJ23gyONdj\nzgPhc0fNN4fKYqvisg_9V-v0NaVR8VtV1yOhRZp4qy-7JCC6veCb1BZtAVfYJYA4\nMj-k9Una6z6Qnjl97VECAwEAAaBHMEUGCSqGSIb3DQEJDjE4MDYwNAYDVR0RBC0w\nK4Ipdm0tMTcxLTEyNC5hYmMuaWRtLmxhYi5lbmcuYnJxLnJlZGhhdC5jb20wDQYJ\nKoZIhvcNAQELBQADggEBAImj0y3AaGwCxlkgkGtlou4eookqD_xnaeckmS3cil5M\nA6Ff1Ec0orcYBTNBIGwjQN7Z7FC_7ALOa4E94AfqFl6kquy4ArxrVsP3OIC5kGE6\nkLcz6F2MJCRuNQdGdxBujlCYyjv4Wr67rLgzeSUD-DGPMehFvdQxTW8VorKBaIxx\ntFtqiFZtEs_9bSVfw0jzC4a5maM77kl819I9TXNwwEjGd3_eNmab42qvp9KvXS6Y\nhTD-sqE5GmL09YvV3KR1vU1o-9iGJF9Nvg8xOROzTCN-U-TKLv982kbOrrKYwdgn\nfYlMwsGlnPuwSNhMH51fxZU5o_F6EXOAdLqIEPEuFQo\n\nMIME Base64:\nMIICjDCCAXQCAQIwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALdt\nHPsAesaTlWRE3pyW6PtDhbQSUt/jYbKSxLMR7uln7YNiL74pYHFNZ9ZrW51GWPF0\nKqldtx6c3zAweynehJtI/AR5pDtHi8bh8L8mqLpsJXgSx5laAGt2n/aAXNxJNS85\n4b/q6lV7k6nIfECsZwTkQV3LCEISjbW9jNLQsuSAV/TznJ3UoEmZh9YMA+cwpBBo\nnLcHxRx+0ymq9R53yUCyAUfLWl0pbfUlCF0EKHJ25et/T8TftzMqdLFJ23gyONdj\nzgPhc0fNN4fKYqvisg/9V+v0NaVR8VtV1yOhRZp4qy+7JCC6veCb1BZtAVfYJYA4\nMj+k9Una6z6Qnjl97VECAwEAAaBHMEUGCSqGSIb3DQEJDjE4MDYwNAYDVR0RBC0w\nK4Ipdm0tMTcxLTEyNC5hYmMuaWRtLmxhYi5lbmcuYnJxLnJlZGhhdC5jb20wDQYJ\nKoZIhvcNAQELBQADggEBAImj0y3AaGwCxlkgkGtlou4eookqD/xnaeckmS3cil5M\nA6Ff1Ec0orcYBTNBIGwjQN7Z7FC/7ALOa4E94AfqFl6kquy4ArxrVsP3OIC5kGE6\nkLcz6F2MJCRuNQdGdxBujlCYyjv4Wr67rLgzeSUD+DGPMehFvdQxTW8VorKBaIxx\ntFtqiFZtEs/9bSVfw0jzC4a5maM77kl819I9TXNwwEjGd3/eNmab42qvp9KvXS6Y\nhTD+sqE5GmL09YvV3KR1vU1o+9iGJF9Nvg8xOROzTCN+U+TKLv982kbOrrKYwdgn\nfYlMwsGlnPuwSNhMH51fxZU5o/F6EXOAdLqIEPEuFQo=", "author": "edewata", "createdAt": "2020-05-22T19:40:53Z", "path": "org/mozilla/jss/tests/Base64Parsing.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package org.mozilla.jss.tests;\n+\n+import org.mozilla.jss.netscape.security.util.Utils;\n+\n+public class Base64Parsing {\n+\tpublic static String mime =     \"MIICjDCCAXQCAQIwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALQh\\nUMzz+5gLdL9X5XqGwCmjoC5vWFC/g1MV/7YhGhqoIuZfbZav9SGjGm/ty++efk+j\\ngkDuB1erJsCkAsxI9GMDH3cbhKsVRsTnznlgy6dhZGFjYSSuwDCYFfFP+kxBjFTL\\n+WarXCRc1sKe8ldA8M+IavntwH24IffiEXmjhjiJQlQAFyi0d4v7Jnbs4CZoGONr\\n4Wac53U8VEoCDxONZ2DYY0Ds88X+daD/W+qWZpNYbY1LDpPaMwZ9Ll3bHdp6QthE\\nfcePk9chpKcQjegjSYXzLNFm1uXUPsADwrg0MGxjMWsWglqOMHTR0ESQE+CAKhcK\\neuKhy0RNcUfrDaFfHZECAwEAAaBHMEUGCSqGSIb3DQEJDjE4MDYwNAYDVR0RBC0w\\nK4Ipdm0tMTcxLTEyNC5hYmMuaWRtLmxhYi5lbmcuYnJxLnJlZGhhdC5jb20wDQYJ\\nKoZIhvcNAQELBQADggEBABZGy1BXwWQfz9KyZPjcSq3bxofQOVQ+k8wRe9etKv/L\\nZOGhBDs3NCiTNjGaioChVMQIpieudnUD1oLO12AHlqSjkqEl9cVMbDOcvAipA0h/\\n3lPnc10fxPYu/As8Ph3V0cakSm0tckqRqEQyqVdYqk9ouVDND7WyffhwLGwjAsPy\\nompzeZ5OwL6rWafVrho+ETkTktz3mvs7VEcyTVR9t1EoYWKXa82Cn/2SbXoZV48T\\nn/LqQZvKToKymtUTfXp341F1qdKtJpacFLe2RAxfUsIOSERhF8YeyKA78igDK6UK\\n+7xo562+wAhy2w3ryG2qI7s3adycl6+0NP45kWWR80k=\\n\";\n+\tpublic static String url_safe = \"MIICjDCCAXQCAQIwADCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALdtHPsAesaTlWRE3pyW6PtDhbQSUt_jYbKSxLMR7uln7YNiL74pYHFNZ9ZrW51GWPF0Kqldtx6c3zAweynehJtI_AR5pDtHi8bh8L8mqLpsJXgSx5laAGt2n_aAXNxJNS854b_q6lV7k6nIfECsZwTkQV3LCEISjbW9jNLQsuSAV_TznJ3UoEmZh9YMA-cwpBBonLcHxRx-0ymq9R53yUCyAUfLWl0pbfUlCF0EKHJ25et_T8TftzMqdLFJ23gyONdjzgPhc0fNN4fKYqvisg_9V-v0NaVR8VtV1yOhRZp4qy-7JCC6veCb1BZtAVfYJYA4Mj-k9Una6z6Qnjl97VECAwEAAaBHMEUGCSqGSIb3DQEJDjE4MDYwNAYDVR0RBC0wK4Ipdm0tMTcxLTEyNC5hYmMuaWRtLmxhYi5lbmcuYnJxLnJlZGhhdC5jb20wDQYJKoZIhvcNAQELBQADggEBAImj0y3AaGwCxlkgkGtlou4eookqD_xnaeckmS3cil5MA6Ff1Ec0orcYBTNBIGwjQN7Z7FC_7ALOa4E94AfqFl6kquy4ArxrVsP3OIC5kGE6kLcz6F2MJCRuNQdGdxBujlCYyjv4Wr67rLgzeSUD-DGPMehFvdQxTW8VorKBaIxxtFtqiFZtEs_9bSVfw0jzC4a5maM77kl819I9TXNwwEjGd3_eNmab42qvp9KvXS6YhTD-sqE5GmL09YvV3KR1vU1o-9iGJF9Nvg8xOROzTCN-U-TKLv982kbOrrKYwdgnfYlMwsGlnPuwSNhMH51fxZU5o_F6EXOAdLqIEPEuFQo\";", "originalCommit": "0eeaa1208c027cfd964c7f51abe41d13748d64dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODc0Nw==", "url": "https://github.com/dogtagpki/jss/pull/566#discussion_r429428747", "bodyText": "Sure, happy to. Updated.", "author": "cipherboy", "createdAt": "2020-05-22T19:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTE2NQ=="}], "type": "inlineReview"}, {"oid": "3048ddd364d98e883839ef5a1f31c490abd007bb", "url": "https://github.com/dogtagpki/jss/commit/3048ddd364d98e883839ef5a1f31c490abd007bb", "message": "Allow URL-safe Base64 decoding\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-05-22T19:47:47Z", "type": "commit"}, {"oid": "3048ddd364d98e883839ef5a1f31c490abd007bb", "url": "https://github.com/dogtagpki/jss/commit/3048ddd364d98e883839ef5a1f31c490abd007bb", "message": "Allow URL-safe Base64 decoding\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-05-22T19:47:47Z", "type": "forcePushed"}]}