{"pr_number": 432, "pr_title": "Enable SSLSession - Query GetChannelInfo / GetPreliminaryChannelInfo / InvalidateSession", "pr_createdAt": "2020-03-20T16:32:15Z", "pr_url": "https://github.com/dogtagpki/jss/pull/432", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MjI2Mg==", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396592262", "bodyText": "@edewata Namely, these checks here. (See this comment)", "author": "cipherboy", "createdAt": "2020-03-23T16:39:24Z", "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +438,137 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#if (NSS_VMAJOR >= 3) && (NSS_VMINOR >= 34)\n+    /* The following fields were added in NSS v3.34 */\n+    haveNSS334 = JNI_TRUE;\n+    oKG = info.originalKeaGroup;\n+    r = info.resumed;\n+    pDC = info.peerDelegCred;\n+#endif\n+\n+    return JSS_NewSSLChannelInfo(env, pV, cS, aKB, kKB, cT, lAT, eT, sID, cM,\n+                                 eMSU, eDA, kT, kG, sC, mA, aT, sS,\n+                                 haveNSS334, oKG, r, pDC);\n+}\n+\n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetPreliminaryChannelInfo(JNIEnv *env,\n+    jclass clazz, jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLPreliminaryChannelInfo info = { 0 };\n+    jlong vS = 0;\n+    jint pV = 0;\n+    jint cS = 0;\n+    jboolean cSED = JNI_FALSE;\n+    jlong mEDS = 0;\n+    jboolean haveNSS343 = JNI_FALSE;\n+    jint zRCS = 0;\n+    jboolean haveNSS348 = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+    jint aKB = 0;\n+    jint sS = 0;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetPreliminaryChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    vS = info.valuesSet;\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    cSED = info.canSendEarlyData;\n+\n+    mEDS = info.maxEarlyDataSize;\n+\n+#if (NSS_VMAJOR >= 3) && (NSS_VMINOR >= 43)", "originalCommit": "1bfbb7a079c68ae71303d6e51738bed07c872a3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7a4732cae50a3c64432a621809ae53d1884f81fd", "url": "https://github.com/dogtagpki/jss/commit/7a4732cae50a3c64432a621809ae53d1884f81fd", "message": "Add SSLKEAType enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:32Z", "type": "commit"}, {"oid": "b45eb4f361f21ec93852e032556fc89258acd30b", "url": "https://github.com/dogtagpki/jss/commit/b45eb4f361f21ec93852e032556fc89258acd30b", "message": "Add SSLNamedGroup enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:32Z", "type": "commit"}, {"oid": "99c0bacaa08e4dbceea109e36e77a52f7af50a98", "url": "https://github.com/dogtagpki/jss/commit/99c0bacaa08e4dbceea109e36e77a52f7af50a98", "message": "Add SSLAuthType enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:32Z", "type": "commit"}, {"oid": "bfce2582f14e13415a9fbf216cd1f356e86334ae", "url": "https://github.com/dogtagpki/jss/commit/bfce2582f14e13415a9fbf216cd1f356e86334ae", "message": "Add SSLCipherAlgorithm enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:32Z", "type": "commit"}, {"oid": "d90bae2fe6b2560c97840559243835908bc9a967", "url": "https://github.com/dogtagpki/jss/commit/d90bae2fe6b2560c97840559243835908bc9a967", "message": "Add SSLCompressionMethod enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:32Z", "type": "commit"}, {"oid": "c2794dae027cc3a41e60ebf2ac3b94756b216ebf", "url": "https://github.com/dogtagpki/jss/commit/c2794dae027cc3a41e60ebf2ac3b94756b216ebf", "message": "Add SSLMACAlgorithm enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:33Z", "type": "commit"}, {"oid": "67244f587852e7ed3be3a019c77b9f9641442696", "url": "https://github.com/dogtagpki/jss/commit/67244f587852e7ed3be3a019c77b9f9641442696", "message": "Add SSLSignatureScheme enum\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T18:15:33Z", "type": "commit"}, {"oid": "68260b9d16cf6c7e7df76992e7c9fab678ee7dab", "url": "https://github.com/dogtagpki/jss/commit/68260b9d16cf6c7e7df76992e7c9fab678ee7dab", "message": "Add SSL_InvalidateSession\n\nThis allows the caller to invalidate the current session on a SSLFDProxy\ninstance.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T19:07:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ==", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396697185", "bodyText": "Is haveNSS334 still needed? Or should it be renamed to something like haveNSSChannelInfoOriginalKeaGroup since the actual NSS version number is no longer relevant?", "author": "edewata", "createdAt": "2020-03-23T19:18:37Z", "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;", "originalCommit": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcwNTkyOA==", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396705928", "bodyText": "I think the name is fine as-is. It is supposed to be present in that version or later. Also, in the SSLPreliminaryChannelInfo, it would conflict with the query field's implementation:\n\n  \n    \n      jss/org/mozilla/jss/nss/SSLPreliminaryChannelInfo.java\n    \n    \n        Lines 219 to 228\n      in\n      eeeeaa5\n    \n    \n    \n    \n\n        \n          \n               /** \n        \n\n        \n          \n                * Check this to see whether the value of zeroRttCipherSuite can be used. \n        \n\n        \n          \n                * \n        \n\n        \n          \n                * Returns true if the handshake has progressed far enough for the value \n        \n\n        \n          \n                * of the field to be determined. \n        \n\n        \n          \n                */ \n        \n\n        \n          \n               public boolean have0RTTCipherSuite() { \n        \n\n        \n          \n                   long ssl_preinfo_0rtt_cipher_suite = 1 << 2; \n        \n\n        \n          \n                   return haveField(ssl_preinfo_0rtt_cipher_suite) && haveNSS343; \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nSo I'd perfer to leave it as-is, to show the separation.", "author": "cipherboy", "createdAt": "2020-03-23T19:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMzI5Nw==", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396713297", "bodyText": "Since the javadoc comments describe what the parameters represent, I guess this is fine for now. In the long term the more we have these discrepancies between version-based and feature-based checks the code could become more difficult to understand.", "author": "edewata", "createdAt": "2020-03-23T19:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMDgwMA==", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396730800", "bodyText": "Okie dokie, thanks! (And yeah, I'm hoping most version/feature discrepancies can be hidden in the future and kept at the C level like the SSLCipher ones. ).", "author": "cipherboy", "createdAt": "2020-03-23T20:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5ODk5OA==", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396698998", "bodyText": "Same question about haveNSS348.", "author": "edewata", "createdAt": "2020-03-23T19:21:55Z", "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;\n+    oKG = info.originalKeaGroup;\n+    r = info.resumed;\n+    pDC = info.peerDelegCred;\n+#endif\n+\n+    return JSS_NewSSLChannelInfo(env, pV, cS, aKB, kKB, cT, lAT, eT, sID, cM,\n+                                 eMSU, eDA, kT, kG, sC, mA, aT, sS,\n+                                 haveNSS334, oKG, r, pDC);\n+}\n+\n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetPreliminaryChannelInfo(JNIEnv *env,\n+    jclass clazz, jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLPreliminaryChannelInfo info = { 0 };\n+    jlong vS = 0;\n+    jint pV = 0;\n+    jint cS = 0;\n+    jboolean cSED = JNI_FALSE;\n+    jlong mEDS = 0;\n+    jboolean haveNSS343 = JNI_FALSE;\n+    jint zRCS = 0;\n+    jboolean haveNSS348 = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+    jint aKB = 0;\n+    jint sS = 0;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetPreliminaryChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    vS = info.valuesSet;\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    cSED = info.canSendEarlyData;\n+\n+    mEDS = info.maxEarlyDataSize;\n+\n+#if HAVE_NSS_PRELIMINARY_CHANNEL_INFO_ZERO_RTT_CIPHER_SUITE\n+    /* The following fields were added in NSS v3.43 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS343 = JNI_TRUE;\n+    zRCS = info.zeroRttCipherSuite;\n+#endif\n+\n+#if HAVE_NSS_PRELIMINARY_CHANNEL_INFO_PEER_DELEG_CRED\n+    /* The following fields were added in NSS v3.48 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS348 = JNI_TRUE;", "originalCommit": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5c2aa61075f3e68ff36f7b349dc8a248b4a57dd8", "url": "https://github.com/dogtagpki/jss/commit/5c2aa61075f3e68ff36f7b349dc8a248b4a57dd8", "message": "Add SSLChannelInfo, SSLPreliminaryChannelInfo\n\nThese two types are the results of two nss.SSL calls;\nSSLPreliminaryChannelInfo contains the same information as\nSSLChannelInfo, with added members to check if a field has been\npopulated by the respective NSS call. This occurs when the SSL handshake\nisn't yet complete.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T19:31:34Z", "type": "commit"}, {"oid": "cd2bb6aea229f02419b8e03d2bc78d5c16778ce3", "url": "https://github.com/dogtagpki/jss/commit/cd2bb6aea229f02419b8e03d2bc78d5c16778ce3", "message": "Add SSL_GetChannelInfo, SSL_GetPreliminaryChannelInfo\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T19:31:34Z", "type": "commit"}, {"oid": "c9e0f546c63ce532fc340c33e39030fd0096b8de", "url": "https://github.com/dogtagpki/jss/commit/c9e0f546c63ce532fc340c33e39030fd0096b8de", "message": "Add tests for SSL_GetChannelInfo, SSL_GetPreliminaryChannelInfo\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T19:31:34Z", "type": "commit"}, {"oid": "eeeeaa5513dc8521099a08f08c9a8b04dbb4ffd0", "url": "https://github.com/dogtagpki/jss/commit/eeeeaa5513dc8521099a08f08c9a8b04dbb4ffd0", "message": "Add SSL_InvalidateSession\n\nThis allows the caller to invalidate the current session on a SSLFDProxy\ninstance.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T19:31:34Z", "type": "commit"}, {"oid": "eeeeaa5513dc8521099a08f08c9a8b04dbb4ffd0", "url": "https://github.com/dogtagpki/jss/commit/eeeeaa5513dc8521099a08f08c9a8b04dbb4ffd0", "message": "Add SSL_InvalidateSession\n\nThis allows the caller to invalidate the current session on a SSLFDProxy\ninstance.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>", "committedDate": "2020-03-23T19:31:34Z", "type": "forcePushed"}]}