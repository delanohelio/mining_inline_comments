{"pr_number": 7779, "pr_title": "Support for repeating qualifiers in ArC plus automated tests", "pr_createdAt": "2020-03-11T16:22:30Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7779", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4NjMxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r391486311", "bodyText": "I don't think we need to run this for every annotation. I'd place this if  block outside the loop.", "author": "mkouba", "createdAt": "2020-03-12T09:14:14Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/Beans.java", "diffHunk": "@@ -51,11 +51,12 @@ static BeanInfo createClassBean(ClassInfo beanClass, BeanDeployment beanDeployme\n         String name = null;\n \n         for (AnnotationInstance annotation : beanDeployment.getAnnotations(beanClass)) {\n-            if (beanDeployment.getQualifier(annotation.name()) != null) {\n+            for (AnnotationInstance qualifierAnnotation : beanDeployment.getQualifierExtractor(annotation.name())\n+                    .apply(annotation)) {\n                 // Qualifiers\n-                qualifiers.add(annotation);\n-                if (DotNames.NAMED.equals(annotation.name())) {\n-                    AnnotationValue nameValue = annotation.value();\n+                qualifiers.add(qualifierAnnotation);\n+                if (DotNames.NAMED.equals(qualifierAnnotation.name())) {", "originalCommit": "ceb75decbb2adee02ca41db5674e1b433e77ea49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MDYxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r391490615", "bodyText": "Hm, maybe we could simplify the code a little bit. Function<> getQualifierExtractor(annotation.name()) -> Collection<AnnotationInstance> getQualifiers(annotation) and the loop could be replaced with beanDeployment.getQualifiers(annotation).forEach(qualifiers::add);. WDYT?", "author": "mkouba", "createdAt": "2020-03-12T09:22:43Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/Beans.java", "diffHunk": "@@ -51,11 +51,12 @@ static BeanInfo createClassBean(ClassInfo beanClass, BeanDeployment beanDeployme\n         String name = null;\n \n         for (AnnotationInstance annotation : beanDeployment.getAnnotations(beanClass)) {\n-            if (beanDeployment.getQualifier(annotation.name()) != null) {\n+            for (AnnotationInstance qualifierAnnotation : beanDeployment.getQualifierExtractor(annotation.name())", "originalCommit": "ceb75decbb2adee02ca41db5674e1b433e77ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU0NDUyNg==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r391544526", "bodyText": "I just realized that my code doesn't call continue properly on the outer loop once we know it's qualifier (so we needn't process it any further). And so does yours. We should take that into account, so in fact it should look something like this:\n            Collection<AnnotationInstance> qualifierCollection = beanDeployment.getQualifierExtractor(annotation.name()).apply(annotation);\n            for (AnnotationInstance qualifierAnnotation : qualifierCollection) {\n                // Qualifiers\n                qualifiers.add(qualifierAnnotation);\n            }\n            if (!qualifierCollection.isEmpty()) {\n                // we needn't process it further, the annotation was a qualifier (or multiple repeating ones)\n                continue;\n            }", "author": "manovotn", "createdAt": "2020-03-12T11:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MDYxNQ=="}], "type": "inlineReview"}, {"oid": "f0767cca53966ea6203445b3a438c753faca6e0e", "url": "https://github.com/quarkusio/quarkus/commit/f0767cca53966ea6203445b3a438c753faca6e0e", "message": "Support for repeating qualifiers in ArC plus automated tests.", "committedDate": "2020-03-12T13:03:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjA3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r392852075", "bodyText": "Looking at the usage I wonder if it makes sense to return a function. Collection<AnnotationInstance> getQualifiers(AnnotationInstance annotation) would be sufficient and more convenient in most cases. Alternatively, we could add a convenient method like this:\nCollection<AnnotationInstance> getQualifiers(AnnotationInstance annotation) {\n    return getQualifierExtractor(annotation.name()).apply(annotation);\n}", "author": "mkouba", "createdAt": "2020-03-16T08:29:58Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "diffHunk": "@@ -363,6 +372,20 @@ ClassInfo getQualifier(DotName name) {\n         return qualifiers.get(name);\n     }\n \n+    Function<AnnotationInstance, Collection<AnnotationInstance>> getQualifierExtractor(DotName name) {", "originalCommit": "f0767cca53966ea6203445b3a438c753faca6e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1Mzg0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r392953843", "bodyText": "Ok, I will change that to the suggested method. You're right that it's easier to read and use.", "author": "manovotn", "createdAt": "2020-03-16T11:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjA3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjIwNg==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r392852206", "bodyText": "These could be final... but it's just a minor.", "author": "mkouba", "createdAt": "2020-03-16T08:30:16Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "diffHunk": "@@ -95,6 +97,12 @@\n     private final boolean removeFinalForProxyableMethods;\n     private final boolean jtaCapabilities;\n \n+    private Function<AnnotationInstance, Collection<AnnotationInstance>> singletonFunction = annotationInstance -> Collections", "originalCommit": "f0767cca53966ea6203445b3a438c753faca6e0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NDE0NA==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r392954144", "bodyText": "These will be removed altogether accordingly to your earlier suggestion.", "author": "manovotn", "createdAt": "2020-03-16T11:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjIwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjkyNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7779#discussion_r392852925", "bodyText": "resultingQualifiers::add?", "author": "mkouba", "createdAt": "2020-03-16T08:31:43Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/DisposerInfo.java", "diffHunk": "@@ -71,9 +72,11 @@ void init(List<Throwable> errors) {\n     }\n \n     Collection<AnnotationInstance> getDisposedParameterQualifiers() {\n-        return Annotations.getParameterAnnotations(declaringBean.getDeployment(), disposerMethod, disposedParameter.position())\n-                .stream().filter(a -> declaringBean.getDeployment().getQualifier(a.name()) != null)\n-                .collect(Collectors.toList());\n+        Set<AnnotationInstance> resultingQualifiers = new HashSet<>();\n+        Annotations.getParameterAnnotations(declaringBean.getDeployment(), disposerMethod, disposedParameter.position())\n+                .stream().forEach(a -> declaringBean.getDeployment().getQualifierExtractor(a.name()).apply(a)\n+                        .forEach(an -> resultingQualifiers.add(an)));", "originalCommit": "f0767cca53966ea6203445b3a438c753faca6e0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7f7a03a22ddf2a06368aab4e55902b3f8f040245", "url": "https://github.com/quarkusio/quarkus/commit/7f7a03a22ddf2a06368aab4e55902b3f8f040245", "message": "Support for repeating qualifiers in ArC plus automated tests.", "committedDate": "2020-03-16T11:53:46Z", "type": "forcePushed"}, {"oid": "341ec1eec0a8816b890db6392a8824b5b432cee7", "url": "https://github.com/quarkusio/quarkus/commit/341ec1eec0a8816b890db6392a8824b5b432cee7", "message": "Support for repeating qualifiers in ArC plus automated tests.", "committedDate": "2020-03-16T12:30:05Z", "type": "commit"}, {"oid": "341ec1eec0a8816b890db6392a8824b5b432cee7", "url": "https://github.com/quarkusio/quarkus/commit/341ec1eec0a8816b890db6392a8824b5b432cee7", "message": "Support for repeating qualifiers in ArC plus automated tests.", "committedDate": "2020-03-16T12:30:05Z", "type": "forcePushed"}]}