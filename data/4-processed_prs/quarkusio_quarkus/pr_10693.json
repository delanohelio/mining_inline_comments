{"pr_number": 10693, "pr_title": "funqy docs disclaimers and usage improvements", "pr_createdAt": "2020-07-13T16:17:00Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10693", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NjE4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r453776183", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            of protocols and function cloud platforms, its very minimalistic and constrained.  For example, if you\n          \n          \n            \n            of protocols and function cloud platforms, it is very minimalistic and constrained.  For example, if you", "author": "gastaldi", "createdAt": "2020-07-13T16:29:22Z", "path": "docs/src/main/asciidoc/funqy.adoc", "diffHunk": "@@ -151,13 +156,36 @@ import io.quarkus.funqy.Context;\n public class GreetingFunction {\n \n     @Funq\n-    public Greeting greet(Friend friend, @Context AwsContext ctx) {\n+    public Greeting greet(Friend friend, @Context CloudEvent eventInfo) {\n+        System.out.println(\"Received greeting request from: \" eventInfo.getSource());\n+\n         Greeting greeting = new Greeting();\n-        greeting.setMessage(service.greet(friend.getName()));\n+        greeting.setMessage(\"Hello \" + friend.getName()));\n         return greeting;\n     }\n }\n ----\n \n+== Should I Use Funqy?\n+\n+REST over HTTP has become a very common way to write services over the past decade.  While Funqy\n+has an HTTP binding it is not a replacement for REST.  Because Funqy has to work across a variety\n+of protocols and function cloud platforms, its very minimalistic and constrained.  For example, if you", "originalCommit": "2de5f1754dc33488b4c2b7ec5437da89aa085ec7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "445473eb091bd360f0e0e12a46af5a3560909fae", "url": "https://github.com/quarkusio/quarkus/commit/445473eb091bd360f0e0e12a46af5a3560909fae", "message": "funqy docs disclaimers and usage improvements\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>", "committedDate": "2020-07-13T16:42:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjMxNg==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454032316", "bodyText": "Maybe include a pointer to the relevant guide?\nI also think we need to try and explain conceptually the difference between a function and a HTTP Endpoint, although I am not really sure how to word this.", "author": "stuartwdouglas", "createdAt": "2020-07-14T00:50:39Z", "path": "docs/src/main/asciidoc/funqy-http.adoc", "diffHunk": "@@ -11,6 +11,13 @@ include::./attributes.adoc[]\n The guide walks through quickstart code to show you how you can deploy Funqy as a\n standalone service and invoke on Funqy functions using HTTP.\n \n+WARNING: The Funqy HTTP binding is not a replacement for REST over HTTP.  Because Funqy\n+needs to be portable cross a lot of different protocols and function providers its HTTP binding\n+is very minimalistic and you will lose REST features like linking and the ability to leverage\n+HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's\n+JAX-RS, Spring MVC, or Vert.x Web Reactive Route support instead, although Funqy will have less overhead\n+than these alternatives other than Vert.x.", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1MTcwMg==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454051702", "bodyText": "IMO, function is just a buzzword.  They are all endpoints.", "author": "patriot1burke", "createdAt": "2020-07-14T01:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1NTgxOA==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454055818", "bodyText": "Kinda, but they are single purpose endpoints. HTTP has a path, a method and headers, so the one deployment will generally provide a few different function (e.g. even a simple CRUD endpoint for a single entity will have different methods for GET, PUT, DELETE etc). IMHO difference between a function and server-less HTTP is that a function only done one thing. If you want to do CRUD with functions you need 4 different functions, one for each operation, while for HTTP you have a single endpoint that handles different methods.", "author": "stuartwdouglas", "createdAt": "2020-07-14T02:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2OTEzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454069139", "bodyText": "Yeah, people love to talk about semantics, but in the end, most devs just use all of this for RPC.", "author": "patriot1burke", "createdAt": "2020-07-14T02:59:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MzQ2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454393461", "bodyText": "added some links", "author": "patriot1burke", "createdAt": "2020-07-14T14:22:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjMxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTIzMA==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454279230", "bodyText": "I would list JAX-RS, Vert.x Reactive Route and Servlet not Spring MVC.\nBy the way, we didn' have any integration test with Spring MVC so better not document it despite it should works.", "author": "loicmathieu", "createdAt": "2020-07-14T11:09:09Z", "path": "docs/src/main/asciidoc/funqy-amazon-lambda-http.adoc", "diffHunk": "@@ -8,14 +8,21 @@ https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n \n include::./attributes.adoc[]\n \n-If you like link:funqy-http[Funqy HTTP], you can use it on AWS Lambda.  Quarkus allows you to expose multiple\n-Funqy functions through HTTP deployed as one AWS Lambda.\n+If you want to allow HTTP clients to invoke on your Funqy functions on AWS Lambda, Quarkus allows you to expose multiple\n+Funqy functions through HTTP deployed as one AWS Lambda.  This approach does add overhead over the\n+regular Funqy AWS Lambda integration and also requires you to use AWS API Gateway.\n \n include::./status-include.adoc[]\n \n Follow the link:amazon-lambda-http[Amazon Lambda Http Guide].  It walks through using a variety of HTTP\n frameworks on Amazon Lambda, including Funqy.\n \n+WARNING: The Funqy HTTP + AWS Lambda binding is not a replacement for REST over HTTP.  Because Funqy\n+needs to be portable cross a lot of different protocols and function providers its HTTP binding\n+is very minimalistic and you will lose REST features like linking and the ability to leverage\n+HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's\n+JAX-RS, Spring MVC, or Vert.x Web Reactive Route support instead.  They also work with Quarkus and AWS Lambda.", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3NzM2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454377369", "bodyText": "Disagree on on this point.  We have Spring MVC support in Quarkus for all this stuff.  Who writes Servlets anymore?", "author": "patriot1burke", "createdAt": "2020-07-14T13:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTIzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMzk1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454513959", "bodyText": "Servlet is tested but not Spring MVC.\nIf we document Spring MVC we should test it.\nI agree that almost nobody writes servlet anymore ...", "author": "loicmathieu", "createdAt": "2020-07-14T17:14:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTIzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUyMDI4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454520287", "bodyText": "Our Spring MVC integration is a plugin to Resteasy.  Resteasy is tested.", "author": "patriot1burke", "createdAt": "2020-07-14T17:25:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTIzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUyNDY2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454524667", "bodyText": "OK then", "author": "loicmathieu", "createdAt": "2020-07-14T17:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTM5NA==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454279394", "bodyText": "Same comment about missing Sevlet and not including Spring MVC", "author": "loicmathieu", "createdAt": "2020-07-14T11:09:30Z", "path": "docs/src/main/asciidoc/funqy-azure-functions-http.adoc", "diffHunk": "@@ -11,6 +11,13 @@ include::./attributes.adoc[]\n You can use link:funqy-http[Funqy HTTP] on Azure Functions.  This allows you to invoke on multiple Funqy functions\n using HTTP deployed as one Azure Function.\n \n+WARNING: The Funqy HTTP + Azure Functions binding is not a replacement for REST over HTTP.  Because Funqy\n+needs to be portable cross a lot of different protocols and function providers its HTTP binding\n+is very minimalistic and you will lose REST features like linking and the ability to leverage\n+HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's\n+JAX-RS, Spring MVC, or Vert.x Web Reactive Route support instead.  They also work with Quarkus and Azure Functions.", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTU2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454279565", "bodyText": "Same comment about missing Servlet and not including Spring MVC", "author": "loicmathieu", "createdAt": "2020-07-14T11:09:54Z", "path": "docs/src/main/asciidoc/funqy-http.adoc", "diffHunk": "@@ -11,6 +11,13 @@ include::./attributes.adoc[]\n The guide walks through quickstart code to show you how you can deploy Funqy as a\n standalone service and invoke on Funqy functions using HTTP.\n \n+WARNING: The Funqy HTTP binding is not a replacement for REST over HTTP.  Because Funqy\n+needs to be portable cross a lot of different protocols and function providers its HTTP binding\n+is very minimalistic and you will lose REST features like linking and the ability to leverage\n+HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's\n+JAX-RS, Spring MVC, or Vert.x Web Reactive Route support instead, although Funqy will have less overhead", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3Nzk0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454377947", "bodyText": "Disagree.  No recommending servlet.  and we do support Spring MVC in quarkuks", "author": "patriot1burke", "createdAt": "2020-07-14T14:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3OTU2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4MDAxMw==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454280013", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            are specific to a protocol (i.e. HTTP) or function api (i.e. AWS Lambda).  There are\n          \n          \n            \n            are specific to a protocol (i.e. HTTP) or function API (i.e. AWS Lambda).  There are", "author": "loicmathieu", "createdAt": "2020-07-14T11:10:46Z", "path": "docs/src/main/asciidoc/funqy.adoc", "diffHunk": "@@ -135,13 +137,16 @@ public class GreetingFunction {\n \n == Context injection\n \n-You can inject contextual information that is specific to the Funqy runtime or specific to the\n-Funqy binding you are using (lambda, azure, cloud events, etc.).\n+The Funqy API will usually not allow you to inject or use abstractions that\n+are specific to a protocol (i.e. HTTP) or function api (i.e. AWS Lambda).  There are", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4MDE4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454280182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            exceptions to the rule though and you can may be able to inject\n          \n          \n            \n            exceptions to the rule though and you may be able to inject", "author": "loicmathieu", "createdAt": "2020-07-14T11:11:08Z", "path": "docs/src/main/asciidoc/funqy.adoc", "diffHunk": "@@ -135,13 +137,16 @@ public class GreetingFunction {\n \n == Context injection\n \n-You can inject contextual information that is specific to the Funqy runtime or specific to the\n-Funqy binding you are using (lambda, azure, cloud events, etc.).\n+The Funqy API will usually not allow you to inject or use abstractions that\n+are specific to a protocol (i.e. HTTP) or function api (i.e. AWS Lambda).  There are\n+exceptions to the rule though and you can may be able to inject", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4MDcyOA==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454280728", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            use Funqy you lose the ability to link (think URIs) to the data your functions spit out.  You also\n          \n          \n            \n            use Funqy you lose the ability to link (think URIs) to the data your functions split out.  You also", "author": "loicmathieu", "createdAt": "2020-07-14T11:12:23Z", "path": "docs/src/main/asciidoc/funqy.adoc", "diffHunk": "@@ -151,13 +156,35 @@ import io.quarkus.funqy.Context;\n public class GreetingFunction {\n \n     @Funq\n-    public Greeting greet(Friend friend, @Context AwsContext ctx) {\n+    public Greeting greet(Friend friend, @Context CloudEvent eventInfo) {\n+        System.out.println(\"Received greeting request from: \" eventInfo.getSource());\n+\n         Greeting greeting = new Greeting();\n-        greeting.setMessage(service.greet(friend.getName()));\n+        greeting.setMessage(\"Hello \" + friend.getName()));\n         return greeting;\n     }\n }\n ----\n \n+== Should I Use Funqy?\n+\n+REST over HTTP has become a very common way to write services over the past decade.  While Funqy\n+has an HTTP binding it is not a replacement for REST.  Because Funqy has to work across a variety\n+of protocols and function cloud platforms, it is very minimalistic and constrained.  For example, if you\n+use Funqy you lose the ability to link (think URIs) to the data your functions spit out.  You also", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3ODUwNg==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454378506", "bodyText": "\"spit\" is correct", "author": "patriot1burke", "createdAt": "2020-07-14T14:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4MDcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4MTEzOA==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454281138", "bodyText": "Again, Spring MVC is not tested inside our integration test so better not document it untill it's tested", "author": "loicmathieu", "createdAt": "2020-07-14T11:13:17Z", "path": "docs/src/main/asciidoc/funqy.adoc", "diffHunk": "@@ -151,13 +156,35 @@ import io.quarkus.funqy.Context;\n public class GreetingFunction {\n \n     @Funq\n-    public Greeting greet(Friend friend, @Context AwsContext ctx) {\n+    public Greeting greet(Friend friend, @Context CloudEvent eventInfo) {\n+        System.out.println(\"Received greeting request from: \" eventInfo.getSource());\n+\n         Greeting greeting = new Greeting();\n-        greeting.setMessage(service.greet(friend.getName()));\n+        greeting.setMessage(\"Hello \" + friend.getName()));\n         return greeting;\n     }\n }\n ----\n \n+== Should I Use Funqy?\n+\n+REST over HTTP has become a very common way to write services over the past decade.  While Funqy\n+has an HTTP binding it is not a replacement for REST.  Because Funqy has to work across a variety\n+of protocols and function cloud platforms, it is very minimalistic and constrained.  For example, if you\n+use Funqy you lose the ability to link (think URIs) to the data your functions spit out.  You also\n+lose the ability to leverage cool HTTP features like `cache-control` and conditional GETs.  Many\n+developers will be ok with that as many won't be using these REST/HTTP features or styles. You'll\n+have to make the decision on what camp you are in.  Quarkus does support REST integration (through JAX-RS,\n+ Spring MVC, Vert.x Web, and Servlet) with", "originalCommit": "445473eb091bd360f0e0e12a46af5a3560909fae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c18ea69aef6b6a5474c55ba3ac75c1762ffc1030", "url": "https://github.com/quarkusio/quarkus/commit/c18ea69aef6b6a5474c55ba3ac75c1762ffc1030", "message": "funqy docs disclaimers and usage improvements\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>", "committedDate": "2020-07-14T14:02:01Z", "type": "forcePushed"}, {"oid": "34647594a5f26b2f2ed281fcb9c7519c34dc5b8e", "url": "https://github.com/quarkusio/quarkus/commit/34647594a5f26b2f2ed281fcb9c7519c34dc5b8e", "message": "funqy docs disclaimers and usage improvements\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nadd links", "committedDate": "2020-07-14T14:21:56Z", "type": "forcePushed"}, {"oid": "56fdf50de1a654de6101d1eebe4df5fcafe3b919", "url": "https://github.com/quarkusio/quarkus/commit/56fdf50de1a654de6101d1eebe4df5fcafe3b919", "message": "funqy docs disclaimers and usage improvements\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nadd links", "committedDate": "2020-07-14T14:23:48Z", "type": "commit"}, {"oid": "56fdf50de1a654de6101d1eebe4df5fcafe3b919", "url": "https://github.com/quarkusio/quarkus/commit/56fdf50de1a654de6101d1eebe4df5fcafe3b919", "message": "funqy docs disclaimers and usage improvements\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nUpdate docs/src/main/asciidoc/funqy.adoc\n\nCo-authored-by: Lo\u00efc Mathieu <loikeseke@gmail.com>\n\nadd links", "committedDate": "2020-07-14T14:23:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg0Mjk5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r454842999", "bodyText": "Small suggestion; I'd put this into an admonition block (here and the other occurrences):\n[NOTE] \n====\nThe Funqy HTTP + AWS Lambda binding...\n====", "author": "gunnarmorling", "createdAt": "2020-07-15T07:19:19Z", "path": "docs/src/main/asciidoc/funqy-amazon-lambda-http.adoc", "diffHunk": "@@ -8,14 +8,21 @@ https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n \n include::./attributes.adoc[]\n \n-If you like link:funqy-http[Funqy HTTP], you can use it on AWS Lambda.  Quarkus allows you to expose multiple\n-Funqy functions through HTTP deployed as one AWS Lambda.\n+If you want to allow HTTP clients to invoke on your Funqy functions on AWS Lambda, Quarkus allows you to expose multiple\n+Funqy functions through HTTP deployed as one AWS Lambda.  This approach does add overhead over the\n+regular Funqy AWS Lambda integration and also requires you to use AWS API Gateway.\n \n include::./status-include.adoc[]\n \n Follow the link:amazon-lambda-http[Amazon Lambda Http Guide].  It walks through using a variety of HTTP\n frameworks on Amazon Lambda, including Funqy.\n \n+WARNING: The Funqy HTTP + AWS Lambda binding is not a replacement for REST over HTTP.  Because Funqy", "originalCommit": "56fdf50de1a654de6101d1eebe4df5fcafe3b919", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA3MjcxOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10693#discussion_r455072719", "bodyText": "Well, it is an admonition, it just uses the shortcut. I think it's good enough this way.", "author": "gsmet", "createdAt": "2020-07-15T13:58:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg0Mjk5OQ=="}], "type": "inlineReview"}]}