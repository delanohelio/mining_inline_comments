{"pr_number": 13820, "pr_title": "Update SmallRye GraphQL, adding more test cases for reactive", "pr_createdAt": "2020-12-10T17:31:00Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13820", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzMjEzMg==", "url": "https://github.com/quarkusio/quarkus/pull/13820#discussion_r540532132", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:\n          \n          \n            \n            Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, for example:", "author": "gsmet", "createdAt": "2020-12-10T22:07:30Z", "path": "docs/src/main/asciidoc/microprofile-graphql.adoc", "diffHunk": "@@ -543,6 +543,54 @@ the heroes:\n \n <1> Here receive the films as a batch, allowing you to fetch the corresponding heroes.\n \n+=== Reactive\n+\n+Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:", "originalCommit": "9ee8f83142e1b781a887ebf2aec1fc0598232b91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzMjQ0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/13820#discussion_r540532449", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently, in example:\n          \n          \n            \n            Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently.\n          \n          \n            \n            \n          \n          \n            \n            For instance, the query below will fetch `film0` and `film1` concurrently:", "author": "gsmet", "createdAt": "2020-12-10T22:08:04Z", "path": "docs/src/main/asciidoc/microprofile-graphql.adoc", "diffHunk": "@@ -543,6 +543,54 @@ the heroes:\n \n <1> Here receive the films as a batch, allowing you to fetch the corresponding heroes.\n \n+=== Reactive\n+\n+Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public Uni<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+\n+NOTE: Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood.\n+\n+Or you can use `CompletionStage`:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public CompletionStage<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+ \n+Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently, in example:", "originalCommit": "9ee8f83142e1b781a887ebf2aec1fc0598232b91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzMzM3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/13820#discussion_r540533371", "bodyText": "And I would remove this line.", "author": "gsmet", "createdAt": "2020-12-10T22:09:39Z", "path": "docs/src/main/asciidoc/microprofile-graphql.adoc", "diffHunk": "@@ -543,6 +543,54 @@ the heroes:\n \n <1> Here receive the films as a batch, allowing you to fetch the corresponding heroes.\n \n+=== Reactive\n+\n+Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public Uni<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+\n+NOTE: Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood.\n+\n+Or you can use `CompletionStage`:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public CompletionStage<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+ \n+Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently, in example:\n+\n+[source, graphql]\n+----\n+query getFilms {\n+  film0: film(filmId: 0) {\n+    title\n+    director\n+    releaseDate\n+    episodeID\n+  }\n+  film1: film(filmId: 1) {\n+    title\n+    director\n+    releaseDate\n+    episodeID\n+  }\n+}\n+----\n+\n+Above will fetch `film0` and `film1` concurrently.", "originalCommit": "9ee8f83142e1b781a887ebf2aec1fc0598232b91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "286b1c4ac9bcdcf30e61c0599fcb5755f0149ca1", "url": "https://github.com/quarkusio/quarkus/commit/286b1c4ac9bcdcf30e61c0599fcb5755f0149ca1", "message": "Upgrade the SmallRye GraphQL version, adding some more Test cases for reactive and adding a small section in the guide about reactive\n\nSigned-off-by: Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-12-11T06:16:57Z", "type": "commit"}]}