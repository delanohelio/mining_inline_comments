{"pr_number": 7886, "pr_title": "Make it possible to dump zig files in all modes", "pr_createdAt": "2020-03-16T13:22:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7886", "timeline": [{"oid": "b6ca129d64010296d009849ade856c858f4784d9", "url": "https://github.com/quarkusio/quarkus/commit/b6ca129d64010296d009849ade856c858f4784d9", "message": "Make it possible to dump zig files in all modes\n\n- resolves #7844", "committedDate": "2020-03-16T13:21:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzc3OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7886#discussion_r393023779", "bodyText": "Should this be invoked if source == null ?", "author": "gastaldi", "createdAt": "2020-03-16T13:31:37Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/GeneratedClassGizmoAdaptor.java", "diffHunk": "@@ -1,22 +1,48 @@\n package io.quarkus.deployment;\n \n+import java.io.StringWriter;\n+import java.io.Writer;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n import io.quarkus.deployment.annotations.BuildProducer;\n import io.quarkus.deployment.builditem.GeneratedClassBuildItem;\n import io.quarkus.gizmo.ClassOutput;\n+import io.quarkus.runner.bootstrap.BootstrapDebug;\n \n public class GeneratedClassGizmoAdaptor implements ClassOutput {\n \n     private final BuildProducer<GeneratedClassBuildItem> classOutput;\n     private final boolean applicationClass;\n+    private final Map<String, StringWriter> sources;\n \n     public GeneratedClassGizmoAdaptor(BuildProducer<GeneratedClassBuildItem> classOutput, boolean applicationClass) {\n         this.classOutput = classOutput;\n         this.applicationClass = applicationClass;\n+        this.sources = BootstrapDebug.DEBUG_SOURCES_DIR != null ? new ConcurrentHashMap<>() : null;\n+    }\n+\n+    @Override\n+    public void write(String className, byte[] bytes) {\n+        String source = null;\n+        if (sources != null) {\n+            StringWriter sw = sources.get(className);\n+            if (sw != null) {\n+                source = sw.toString();\n+            }\n+        }\n+        classOutput.produce(\n+                new GeneratedClassBuildItem(applicationClass, className, bytes, source));", "originalCommit": "b6ca129d64010296d009849ade856c858f4784d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNDk0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7886#discussion_r393024946", "bodyText": "Yes, it's ok to pass null. It just means \"no source available\".", "author": "mkouba", "createdAt": "2020-03-16T13:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzc3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNjcxNA==", "url": "https://github.com/quarkusio/quarkus/pull/7886#discussion_r393026714", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                (resource.getName().replace('/', '.')).getBytes(Charset.forName(\"UTF-8\")), null));\n          \n          \n            \n                                (resource.getName().replace('/', '.')).getBytes(StandardCharsets.UTF_8), null));", "author": "gastaldi", "createdAt": "2020-03-16T13:36:24Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/ComponentsProviderGenerator.java", "diffHunk": "@@ -123,7 +124,7 @@ public ComponentsProviderGenerator(AnnotationLiteralProcessor annotationLiterals\n         for (Resource resource : classOutput.getResources()) {\n             resources.add(resource);\n             resources.add(ResourceImpl.serviceProvider(ComponentsProvider.class.getName(),\n-                    (resource.getName().replace('/', '.')).getBytes(Charset.forName(\"UTF-8\"))));\n+                    (resource.getName().replace('/', '.')).getBytes(Charset.forName(\"UTF-8\")), null));", "originalCommit": "b6ca129d64010296d009849ade856c858f4784d9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "21705aece60cf160469647fb77a6b7eed0b2d6fe", "url": "https://github.com/quarkusio/quarkus/commit/21705aece60cf160469647fb77a6b7eed0b2d6fe", "message": "Update independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/ComponentsProviderGenerator.java\n\nCo-Authored-By: George Gastaldi <gegastaldi@gmail.com>", "committedDate": "2020-03-16T13:55:31Z", "type": "commit"}, {"oid": "21705aece60cf160469647fb77a6b7eed0b2d6fe", "url": "https://github.com/quarkusio/quarkus/commit/21705aece60cf160469647fb77a6b7eed0b2d6fe", "message": "Update independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/ComponentsProviderGenerator.java\n\nCo-Authored-By: George Gastaldi <gegastaldi@gmail.com>", "committedDate": "2020-03-16T13:55:31Z", "type": "forcePushed"}]}