{"pr_number": 10652, "pr_title": "[Qute] Allow nested content for user defined tags", "pr_createdAt": "2020-07-10T21:22:42Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10652", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNDc3NA==", "url": "https://github.com/quarkusio/quarkus/pull/10652#discussion_r456304774", "bodyText": "Well, this is not a correct approach as the invocation of CompletableFuture.get() blocks. It should not be a big problem in most cases but we do attempt to keep the \"resolution\" part of rendering non-blocking. I need to think about this a little. It seems that our API does not cover this specific use case...", "author": "mkouba", "createdAt": "2020-07-17T08:41:01Z", "path": "independent-projects/qute/core/src/main/java/io/quarkus/qute/UserTagSectionHelper.java", "diffHunk": "@@ -28,8 +30,27 @@ public UserTagSectionHelper(Supplier<Template> templateSupplier, Map<String, Exp\n             if (t1 != null) {\n                 result.completeExceptionally(t1);\n             } else {\n-                // Execute the template with the params as the root context object\n+\n                 try {\n+\n+                    // Execute nested code for later usage in the user tag\n+                    CompletableFuture<ResultNode> nestedResult = new CompletableFuture<>();\n+                    context.execute(context.resolutionContext().createChild(r1, null)).whenComplete((r2, t2) -> {\n+                        if (t2 != null) {\n+                            result.completeExceptionally(t2);\n+                        } else {\n+                            nestedResult.complete(r2);\n+                        }\n+                    });\n+                    if (result.isCompletedExceptionally()) {\n+                        return;\n+                    }\n+\n+                    StringBuilder sb = new StringBuilder();\n+                    nestedResult.get().process((s) -> sb.append(s));", "originalCommit": "e178825694676811ea170f88c395fbb4a7f1d71b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNjk4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10652#discussion_r456306983", "bodyText": "Yes, I was pretty sure of that... (check my first comment) But I didn't not find the right way to do it. Note that the PR's only goal is a tentative to add a feature ; if it cannot be done correctly we should not lose too much time on it.", "author": "jlannoy", "createdAt": "2020-07-17T08:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNDc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwODEzMg==", "url": "https://github.com/quarkusio/quarkus/pull/10652#discussion_r456308132", "bodyText": "The API is still evolving... so I think that we should spend some time to try to implement this (and improve the API ;-)", "author": "mkouba", "createdAt": "2020-07-17T08:47:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwNDc3NA=="}], "type": "inlineReview"}, {"oid": "920f490d609f0ceaee458c13f3d31a29b0216e57", "url": "https://github.com/quarkusio/quarkus/commit/920f490d609f0ceaee458c13f3d31a29b0216e57", "message": "Implement nested content for user-defined tags", "committedDate": "2020-07-17T14:57:48Z", "type": "commit"}, {"oid": "6ceb1ecd3fb345bd47b64e3176a64b70a96ef950", "url": "https://github.com/quarkusio/quarkus/commit/6ceb1ecd3fb345bd47b64e3176a64b70a96ef950", "message": "UserTagSectionHelper - non-blocking nested content implementation", "committedDate": "2020-07-17T15:01:52Z", "type": "commit"}]}