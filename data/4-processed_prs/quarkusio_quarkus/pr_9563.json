{"pr_number": 9563, "pr_title": "Add documentation about the Minikube extension", "pr_createdAt": "2020-05-25T05:27:54Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9563", "timeline": [{"oid": "c02657d1000e72f93ecfebe258501da4a6579fc7", "url": "https://github.com/quarkusio/quarkus/commit/c02657d1000e72f93ecfebe258501da4a6579fc7", "message": "Fix some Kubernetes doc headings and sources", "committedDate": "2020-05-25T04:50:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NDgyMg==", "url": "https://github.com/quarkusio/quarkus/pull/9563#discussion_r429844822", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <dependency>\n          \n          \n            \n                  <groupId>io.quarkus</groupId>\n          \n          \n            \n                  <artifactId>quarkus-minikube</artifactId>\n          \n          \n            \n                </dependency>\n          \n          \n            \n            <dependency>\n          \n          \n            \n                <groupId>io.quarkus</groupId>\n          \n          \n            \n                <artifactId>quarkus-minikube</artifactId>\n          \n          \n            \n            </dependency>\n          \n      \n    \n    \n  \n\nIt's minor but, to be consistent with the rest of the doc, let's remove the leading indent and have groupId and artifactId indented with 4 spaces.", "author": "gsmet", "createdAt": "2020-05-25T09:51:06Z", "path": "docs/src/main/asciidoc/deploying-to-kubernetes.adoc", "diffHunk": "@@ -388,12 +388,53 @@ To access the API server from within a Kubernetes cluster, some RBAC related res\n So, when the `kubernetes-client` extension is present, the `kubernetes` extension is going to create those resources automatically, so that application will be granted the `view` role.\n If more roles are required, they will have to be added manually.\n \n+=== Deploying to Minikube\n+\n+https://github.com/kubernetes/minikube[Minikube] is quite popular when a Kubernetes cluster is needed for development purposes. To make the deployment to Minikube\n+experience as frictionless as possible, Quarkus provides the `quarkus-minikube` extension. This extension can be added to a project like so:\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-minikube</artifactId>\n+    </dependency>", "originalCommit": "89e2e25dacbccad671d5a3e1007ef1a88eb8dad7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NTE3OA==", "url": "https://github.com/quarkusio/quarkus/pull/9563#discussion_r429845178", "bodyText": "I think you need a + here to make the source part of the bullet point.", "author": "gsmet", "createdAt": "2020-05-25T09:51:57Z", "path": "docs/src/main/asciidoc/deploying-to-kubernetes.adoc", "diffHunk": "@@ -388,12 +388,53 @@ To access the API server from within a Kubernetes cluster, some RBAC related res\n So, when the `kubernetes-client` extension is present, the `kubernetes` extension is going to create those resources automatically, so that application will be granted the `view` role.\n If more roles are required, they will have to be added manually.\n \n+=== Deploying to Minikube\n+\n+https://github.com/kubernetes/minikube[Minikube] is quite popular when a Kubernetes cluster is needed for development purposes. To make the deployment to Minikube\n+experience as frictionless as possible, Quarkus provides the `quarkus-minikube` extension. This extension can be added to a project like so:\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-minikube</artifactId>\n+    </dependency>\n+----\n+\n+The purpose of this extension is to generate Kubernetes manifests (`minikube.yaml` and `minikube.json`) that are tailored to Minikube.\n+This extension assumes a couple things:\n+\n+* Users won't be using an image registry and will instead make their container image accessible to the Kubernetes cluster by building it directly\n+into Minikube's Docker daemon. To use Minikube's Docker daemon you must first execute:\n+", "originalCommit": "89e2e25dacbccad671d5a3e1007ef1a88eb8dad7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTA1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/9563#discussion_r429851051", "bodyText": "I didn't know that trick, thanks!", "author": "geoand", "createdAt": "2020-05-25T10:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NTE3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NTI2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/9563#discussion_r429845269", "bodyText": "Same here.", "author": "gsmet", "createdAt": "2020-05-25T09:52:08Z", "path": "docs/src/main/asciidoc/deploying-to-kubernetes.adoc", "diffHunk": "@@ -388,12 +388,53 @@ To access the API server from within a Kubernetes cluster, some RBAC related res\n So, when the `kubernetes-client` extension is present, the `kubernetes` extension is going to create those resources automatically, so that application will be granted the `view` role.\n If more roles are required, they will have to be added manually.\n \n+=== Deploying to Minikube\n+\n+https://github.com/kubernetes/minikube[Minikube] is quite popular when a Kubernetes cluster is needed for development purposes. To make the deployment to Minikube\n+experience as frictionless as possible, Quarkus provides the `quarkus-minikube` extension. This extension can be added to a project like so:\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-minikube</artifactId>\n+    </dependency>\n+----\n+\n+The purpose of this extension is to generate Kubernetes manifests (`minikube.yaml` and `minikube.json`) that are tailored to Minikube.\n+This extension assumes a couple things:\n+\n+* Users won't be using an image registry and will instead make their container image accessible to the Kubernetes cluster by building it directly\n+into Minikube's Docker daemon. To use Minikube's Docker daemon you must first execute:\n+\n+[source]\n+----\n+eval $(minikube -p minikube docker-env)\n+----\n+\n+* Applications deployed to Kubernetes won't be accessed via a Kubernetes `Ingress`, but rather as a `NodePort` `Service`.\n+The advantage of doing this is that the URL of an application can be retrieved trivially by executing:\n+", "originalCommit": "89e2e25dacbccad671d5a3e1007ef1a88eb8dad7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NTY5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9563#discussion_r429845695", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            only. When deploying to production, consider using the vanilla Kubernetes manifests (or the Openshift ones when targeting Openshift).\n          \n          \n            \n            only. When deploying to production, consider using the vanilla Kubernetes manifests (or the OpenShift ones when targeting OpenShift).", "author": "gsmet", "createdAt": "2020-05-25T09:52:54Z", "path": "docs/src/main/asciidoc/deploying-to-kubernetes.adoc", "diffHunk": "@@ -388,12 +388,53 @@ To access the API server from within a Kubernetes cluster, some RBAC related res\n So, when the `kubernetes-client` extension is present, the `kubernetes` extension is going to create those resources automatically, so that application will be granted the `view` role.\n If more roles are required, they will have to be added manually.\n \n+=== Deploying to Minikube\n+\n+https://github.com/kubernetes/minikube[Minikube] is quite popular when a Kubernetes cluster is needed for development purposes. To make the deployment to Minikube\n+experience as frictionless as possible, Quarkus provides the `quarkus-minikube` extension. This extension can be added to a project like so:\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-minikube</artifactId>\n+    </dependency>\n+----\n+\n+The purpose of this extension is to generate Kubernetes manifests (`minikube.yaml` and `minikube.json`) that are tailored to Minikube.\n+This extension assumes a couple things:\n+\n+* Users won't be using an image registry and will instead make their container image accessible to the Kubernetes cluster by building it directly\n+into Minikube's Docker daemon. To use Minikube's Docker daemon you must first execute:\n+\n+[source]\n+----\n+eval $(minikube -p minikube docker-env)\n+----\n+\n+* Applications deployed to Kubernetes won't be accessed via a Kubernetes `Ingress`, but rather as a `NodePort` `Service`.\n+The advantage of doing this is that the URL of an application can be retrieved trivially by executing:\n+\n+[source]\n+----\n+minikube service list\n+----\n+\n+To control the https://kubernetes.io/docs/concepts/services-networking/service/#nodeport[nodePort] that is used in this case, users can set `quarkus.kubernetes.node-port`.\n+Note however that this configuration is entirely optional because Quarkus will automatically use a proper (and non-changing) value if none is set.\n+\n+WARNING: It is highly discouraged to use the manifests generated by the Minikube extension when deploying to production as these manifests are intended for development purposes\n+only. When deploying to production, consider using the vanilla Kubernetes manifests (or the Openshift ones when targeting Openshift).", "originalCommit": "89e2e25dacbccad671d5a3e1007ef1a88eb8dad7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0NjE0OA==", "url": "https://github.com/quarkusio/quarkus/pull/9563#discussion_r429846148", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In the case of wrapper extension like Openshift and Minikube, when these extensions have been explicitly added to the project, the default `deployment-target`\n          \n          \n            \n            In the case of wrapper extensions like OpenShift and Minikube, when these extensions have been explicitly added to the project, the default `deployment-target`", "author": "gsmet", "createdAt": "2020-05-25T09:53:53Z", "path": "docs/src/main/asciidoc/deploying-to-kubernetes.adoc", "diffHunk": "@@ -734,6 +775,19 @@ The generated service can be customized using the following properties:\n | quarkus.knative.sidecars                        | Map<String, Container>                    |             |\n |====\n \n+=== Deployment targets\n+\n+Mentioned in the previous sections was the concept of `deployment-target`. This concept allows users to control which Kubernetes manifests will be generated\n+and deployed to a cluster (if `quarkus.kubernetes.deploy` has been set to `true`).\n+\n+By default, when no `deployment-target` is set, then only vanilla Kubernetes resources are generated and deployed. When multiple values are set (for example\n+`quarkus.kubernetes.deployment-target=kubernetes,openshift`) then the resources for all targets are generated, but only the resources\n+that correspond to the *first* target are applied to the cluster (if deployment is enabled).\n+\n+In the case of wrapper extension like Openshift and Minikube, when these extensions have been explicitly added to the project, the default `deployment-target`", "originalCommit": "89e2e25dacbccad671d5a3e1007ef1a88eb8dad7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e25081098a694d204cf9c166b6a273ce44383e66", "url": "https://github.com/quarkusio/quarkus/commit/e25081098a694d204cf9c166b6a273ce44383e66", "message": "Add documentation about the Minikube extension\n\nFollows up on #8840\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-05-25T10:04:09Z", "type": "commit"}, {"oid": "e25081098a694d204cf9c166b6a273ce44383e66", "url": "https://github.com/quarkusio/quarkus/commit/e25081098a694d204cf9c166b6a273ce44383e66", "message": "Add documentation about the Minikube extension\n\nFollows up on #8840\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-05-25T10:04:09Z", "type": "forcePushed"}]}