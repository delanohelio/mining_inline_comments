{"pr_number": 10672, "pr_title": "Logging doc", "pr_createdAt": "2020-07-13T08:41:26Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10672", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MTM1MA==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r453671350", "bodyText": "These levels should be de-emphasized.  The levels we expect users to use and care about are FATAL, ERROR, WARN, INFO, DEBUG, and TRACE - aka the Apache standard levels.  The JUL levels should be the footnote.", "author": "dmlloyd", "createdAt": "2020-07-13T14:00:29Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,91 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+=== What about Apache Log4j 2 ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j 2] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j 2 logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId>\n+    </dependency>\n+----\n+\n+You can then use the Log4J 2 API inside your application.\n+\n+WARNING: do not include any Log4j 2 dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j 2 as a logging facade.\n+\n+NOTE: if you still use the legacy Log4j version 1, you need to use `log4j-jboss-logmanager` instead.\n+\n+== Logging levels\n+\n+JBoss logging support the link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[standard JDK log levels] (in descending order):", "originalCommit": "9107039dc8d057337afda846ee7c5073b26428d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5MTkyMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r453691923", "bodyText": "Just read your detailed explaination on the issues about log levels, I'll update the documentation to emphasize the Apache levels.", "author": "loicmathieu", "createdAt": "2020-07-13T14:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MTM1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Mzk3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r453773977", "bodyText": "Done", "author": "loicmathieu", "createdAt": "2020-07-13T16:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MTM1MA=="}], "type": "inlineReview"}, {"oid": "6c1da56382c671415616669550bd95cf8a555e9b", "url": "https://github.com/quarkusio/quarkus/commit/6c1da56382c671415616669550bd95cf8a555e9b", "message": "Improve logging guide", "committedDate": "2020-07-13T16:17:26Z", "type": "forcePushed"}, {"oid": "a7af4579587ce2c0daf47ecbb8c915aaa3026ab8", "url": "https://github.com/quarkusio/quarkus/commit/a7af4579587ce2c0daf47ecbb8c915aaa3026ab8", "message": "Improve logging guide", "committedDate": "2020-07-13T16:24:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5NjYxMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r453996613", "bodyText": "You could use descriptive list here and the list below (https://asciidoctor.org/docs/user-manual/#description-list) with horizontal style. THe final appearance is very similar to what it's written and more semantycally accurate.", "author": "abelsromero", "createdAt": "2020-07-13T23:05:53Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,93 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j 2 ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j 2] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j 2 logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId>\n+    </dependency>\n+----\n+\n+You can then use the Log4J 2 API inside your application.\n+\n+WARNING: do not include any Log4j 2 dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j 2 as a logging facade.\n+\n+NOTE: if you still use the legacy Log4j version 1, you need to use `log4j-jboss-logmanager` instead.\n+\n+== Logging levels\n+\n+JBoss Logging supports Apache style logs levels:\n+\n+- **FATAL**: A critical service failure/complete inability to service requests of any kind. *It has a higher order than **SEVERE**.*", "originalCommit": "a7af4579587ce2c0daf47ecbb8c915aaa3026ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MDk2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r454850969", "bodyText": "I didn't kow this type of list, try it and I do think it looks better, thanks for the suggestion.", "author": "loicmathieu", "createdAt": "2020-07-15T07:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5NjYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwMDQ1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r454000451", "bodyText": "To me this section reads in a bit convoluted way. Maybe just title it \"What about Apache Log4j ?\", then:\n\nIntroduce both 1 & 2 are supported but require different extra depency\nShow current dependency example of 2 (since it's more common use case), and use a callout to show log4j 1 dependency. So no need for the NOTE below.", "author": "abelsromero", "createdAt": "2020-07-13T23:17:44Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,93 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j 2 ?", "originalCommit": "a7af4579587ce2c0daf47ecbb8c915aaa3026ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MDc1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r454850759", "bodyText": "I was not very found of this section neither. I refactor it as you suggested.", "author": "loicmathieu", "createdAt": "2020-07-15T07:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwMDQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwMTA2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r454001066", "bodyText": "I think most admonitions start with capital. Regardless of style I think it should be consistent.", "author": "abelsromero", "createdAt": "2020-07-13T23:19:41Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -183,6 +283,8 @@ quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE\n quarkus.log.category.\"io.undertow.request.security\".level=TRACE\n ----\n \n+NOTE: as we don't change the root logger, console log will only contains `INFO` or higher order logs.", "originalCommit": "a7af4579587ce2c0daf47ecbb8c915aaa3026ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1MDUzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r454850535", "bodyText": "Done", "author": "loicmathieu", "createdAt": "2020-07-15T07:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwMTA2Ng=="}], "type": "inlineReview"}, {"oid": "99a5a28216cdf5678842ed744d68a4b2d7216191", "url": "https://github.com/quarkusio/quarkus/commit/99a5a28216cdf5678842ed744d68a4b2d7216191", "message": "Improve logging guide", "committedDate": "2020-07-15T07:32:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NjY2OA==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455756668", "bodyText": "Is this meant to use AsciiDoc style or JavaDoc style?  If the latter, this should be a <ul>; if the former, then they shouldn't use {@link}.", "author": "dmlloyd", "createdAt": "2020-07-16T12:43:40Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/LogConfig.java", "diffHunk": "@@ -17,23 +17,29 @@\n     /**\n      * The log level of the root category, which is used as the default log level for all categories.\n      *\n-     * In addition to the standard JDK log level JBoss Logging also adds the following:\n+     * JBoss Logging supports Apache style log levels:\n      *\n-     * {@link org.jboss.logmanager.Level#FATAL}\n-     * {@link org.jboss.logmanager.Level#ERROR}\n-     * {@link org.jboss.logmanager.Level#WARN}\n-     * {@link org.jboss.logmanager.Level#INFO}\n-     * {@link org.jboss.logmanager.Level#DEBUG}\n-     * {@link org.jboss.logmanager.Level#TRACE}\n+     * * {@link org.jboss.logmanager.Level#FATAL}", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5NzI2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455797269", "bodyText": "<ul> list are not well rendered on configuration reference section on the website.\nI'll remove the {@link}.", "author": "loicmathieu", "createdAt": "2020-07-16T13:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NjY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgwMTgyMg==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455801822", "bodyText": "On the other hand {@link} are ignored by the asciidoc processing so it didn't appears on the website. Removing them will restrict API discovery on IDE ...", "author": "loicmathieu", "createdAt": "2020-07-16T13:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NjY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg0NTYzMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455845633", "bodyText": "This is a long standing point of contention. :-)  @gsmet do you know what we settled on?  Is the doc renderer using AsciiDoc, or do we need a separate JavaDoc and AsciiDoc section, or what?", "author": "dmlloyd", "createdAt": "2020-07-16T14:49:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NjY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4NDEyMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455884123", "bodyText": "This is both a JavaDoc and an asciidoc, and the doc build generates the HTML for the website based on asciidoc processing.\nI think that the current aproach works even if it can seems disturbing because it mixes JavaDoc directive and asciidoc one.", "author": "loicmathieu", "createdAt": "2020-07-16T15:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NjY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NzIzMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455757233", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n          \n          \n            \n            Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs.", "author": "dmlloyd", "createdAt": "2020-07-16T12:44:41Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NzY2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455757662", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n          \n          \n            \n            <1> This is the library needed for Log2J version 2; if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.", "author": "dmlloyd", "createdAt": "2020-07-16T12:45:20Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1Nzc4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455757789", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n          \n          \n            \n            link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.", "author": "dmlloyd", "createdAt": "2020-07-16T12:45:31Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODAwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455758009", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            WARNING: Do not include any Log4j dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n          \n          \n            \n            WARNING: Do not include any Log4j dependencies. The `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.", "author": "dmlloyd", "createdAt": "2020-07-16T12:45:55Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODE2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455758165", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            JBoss Logging supports Apache style logs levels:\n          \n          \n            \n            JBoss Logging supports these Apache-style log levels:", "author": "dmlloyd", "createdAt": "2020-07-16T12:46:12Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports Apache style logs levels:", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODU3MA==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455758570", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            FATAL:: A critical service failure/complete inability to service requests of any kind. *It has a higher order than **SEVERE**.*\n          \n          \n            \n            FATAL:: A critical service failure/complete inability to service requests of any kind. *It has a higher order than `java.util.logging`'s **SEVERE** level (see below).*", "author": "dmlloyd", "createdAt": "2020-07-16T12:46:49Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports Apache style logs levels:\n+\n+[horizontal]\n+FATAL:: A critical service failure/complete inability to service requests of any kind. *It has a higher order than **SEVERE**.*", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3MTEyMQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455771121", "bodyText": "In fact I can remove this as now the Apache style are introduce first and when SEVERE is introduce it is desribed as having the same order as ERROR.", "author": "loicmathieu", "createdAt": "2020-07-16T13:07:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODU3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4NDcwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455884705", "bodyText": "I forget to commit this one. This is done now.", "author": "loicmathieu", "createdAt": "2020-07-16T15:42:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1ODkzMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455758933", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            JBoss logging also supports the link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[standard JDK log levels]:\n          \n          \n            \n            JBoss logging also supports link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[JDK log levels]:", "author": "dmlloyd", "createdAt": "2020-07-16T12:47:25Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports Apache style logs levels:\n+\n+[horizontal]\n+FATAL:: A critical service failure/complete inability to service requests of any kind. *It has a higher order than **SEVERE**.*\n+ERROR:: A significant disruption in a request or the inability to service a request.\n+WARN:: A non-critical service error or problem that may not require immediate correction.\n+INFO:: Service lifecycle events or important related very-low-frequency information.\n+DEBUG:: Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging.\n+TRACE:: Messages that convey extra per-request debugging information that may be very high frequency.\n+\n+JBoss logging also supports the link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[standard JDK log levels]:", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1OTEzMQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455759131", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            for example to set the default log level to `INFO` logging and include Hibernate `DEBUG` logs:\n          \n          \n            \n            for example, to set the default log level to `INFO` logging and include Hibernate `DEBUG` logs:", "author": "dmlloyd", "createdAt": "2020-07-16T12:47:44Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging, you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation, it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2, if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies, the `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports Apache style logs levels:\n+\n+[horizontal]\n+FATAL:: A critical service failure/complete inability to service requests of any kind. *It has a higher order than **SEVERE**.*\n+ERROR:: A significant disruption in a request or the inability to service a request.\n+WARN:: A non-critical service error or problem that may not require immediate correction.\n+INFO:: Service lifecycle events or important related very-low-frequency information.\n+DEBUG:: Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging.\n+TRACE:: Messages that convey extra per-request debugging information that may be very high frequency.\n+\n+JBoss logging also supports the link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[standard JDK log levels]:\n+\n+[horizontal]\n+OFF:: Special level to turn off logging.\n+SEVERE:: Same as **ERROR**.\n+WARNING:: Same as **WARN**.\n+CONFIG:: Service configuration information.\n+FINE:: Same as **DEBUG**.\n+FINER:: Same as **TRACE**.\n+FINEST:: Event more debugging information than `TRACE`, maybe with even higher frequency.\n+ALL:: Special level for all messages including custom levels.\n+\n == Runtime configuration\n \n Run time logging is configured in the `application.properties` file,\n-for example to set everything to `INFO` logging except Hibernate:\n+for example to set the default log level to `INFO` logging and include Hibernate `DEBUG` logs:", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MDEzMg==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455760132", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The root logger configuration is used when no configuration exists for a given logger category.\n          \n          \n            \n            If no level configuration exists for a given logger category, the enclosing (parent) category is examined. If no categories are configured which enclose the category in question, then the root logger configuration is used.", "author": "dmlloyd", "createdAt": "2020-07-16T12:49:34Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -54,25 +139,16 @@ The root logger category is handled separately, and is configured via the follow\n |quarkus.log.level|INFO|The default minimum log level for every log category.\n |===\n \n-=== Log levels\n+The root logger configuration is used when no configuration exists for a given logger category.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MDk3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455760977", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            By default, Quarkus uses a **String** logging format that format a log event in a simple text.\n          \n          \n            \n            By default, Quarkus uses a pattern-based logging formatter that generates human-readable text logs.", "author": "dmlloyd", "createdAt": "2020-07-16T12:50:43Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -54,25 +139,16 @@ The root logger category is handled separately, and is configured via the follow\n |quarkus.log.level|INFO|The default minimum log level for every log category.\n |===\n \n-=== Log levels\n+The root logger configuration is used when no configuration exists for a given logger category.\n \n-There are several log levels you can use:\n+== Logging Format\n \n-[cols=\"<m,<5\",options=\"header\"]\n-|===\n-|Level|Description\n-|FATAL|A critical service failure/complete inability to service requests of any kind\n-|ERROR|A significant disruption in a request or the inability to service a request\n-|WARN|A non-critical service error or problem that may not require immediate correction\n-|INFO|Service lifecycle events or important related very-low-frequency information\n-|DEBUG|Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging\n-|TRACE|Messages that convey extra per-request debugging information that may be very high frequency\n-|===\n+By default, Quarkus uses a **String** logging format that format a log event in a simple text.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4NDkzNw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455884937", "bodyText": "I forget to commit this suggestion, this is done now.", "author": "loicmathieu", "createdAt": "2020-07-16T15:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MDk3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MTc1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455761755", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can configure this logging format for each log handler via a dedicated property,\n          \n          \n            \n            for the console handler it will be the `quarkus.log.console.format` property.\n          \n          \n            \n            You can configure the format for each log handler via a dedicated property.\n          \n          \n            \n            For the console handler, the property is `quarkus.log.console.format`.", "author": "dmlloyd", "createdAt": "2020-07-16T12:52:05Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -54,25 +139,16 @@ The root logger category is handled separately, and is configured via the follow\n |quarkus.log.level|INFO|The default minimum log level for every log category.\n |===\n \n-=== Log levels\n+The root logger configuration is used when no configuration exists for a given logger category.\n \n-There are several log levels you can use:\n+== Logging Format\n \n-[cols=\"<m,<5\",options=\"header\"]\n-|===\n-|Level|Description\n-|FATAL|A critical service failure/complete inability to service requests of any kind\n-|ERROR|A significant disruption in a request or the inability to service a request\n-|WARN|A non-critical service error or problem that may not require immediate correction\n-|INFO|Service lifecycle events or important related very-low-frequency information\n-|DEBUG|Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging\n-|TRACE|Messages that convey extra per-request debugging information that may be very high frequency\n-|===\n+By default, Quarkus uses a **String** logging format that format a log event in a simple text.\n \n-[id=\"format-string\"]\n-== Format String\n+You can configure this logging format for each log handler via a dedicated property,\n+for the console handler it will be the `quarkus.log.console.format` property.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NDMyMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455774323", "bodyText": "We should said You can configure the pattern but the configuration is called format and we don't have configuration alias to easily change this without breaking compatibility ...", "author": "loicmathieu", "createdAt": "2020-07-16T13:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MTc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NTQ5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455775499", "bodyText": "That's OK; I think either way is understandable.", "author": "dmlloyd", "createdAt": "2020-07-16T13:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MTc1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MTk2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455761966", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The **String** logging format supports the following symbols:\n          \n          \n            \n            The logging format string supports the following symbols:\n          \n      \n    \n    \n  \n\nI'd stick with the original text here.", "author": "dmlloyd", "createdAt": "2020-07-16T12:52:27Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -54,25 +139,16 @@ The root logger category is handled separately, and is configured via the follow\n |quarkus.log.level|INFO|The default minimum log level for every log category.\n |===\n \n-=== Log levels\n+The root logger configuration is used when no configuration exists for a given logger category.\n \n-There are several log levels you can use:\n+== Logging Format\n \n-[cols=\"<m,<5\",options=\"header\"]\n-|===\n-|Level|Description\n-|FATAL|A critical service failure/complete inability to service requests of any kind\n-|ERROR|A significant disruption in a request or the inability to service a request\n-|WARN|A non-critical service error or problem that may not require immediate correction\n-|INFO|Service lifecycle events or important related very-low-frequency information\n-|DEBUG|Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging\n-|TRACE|Messages that convey extra per-request debugging information that may be very high frequency\n-|===\n+By default, Quarkus uses a **String** logging format that format a log event in a simple text.\n \n-[id=\"format-string\"]\n-== Format String\n+You can configure this logging format for each log handler via a dedicated property,\n+for the console handler it will be the `quarkus.log.console.format` property.\n \n-The logging format string supports the following symbols:\n+The **String** logging format supports the following symbols:", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MjE5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455762196", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In order to configure JSON logging format, the `quarkus-logging-json` extension may be employed.  Add this extension to your\n          \n          \n            \n            In order to configure the JSON logging format, the `quarkus-logging-json` extension may be employed.  Add this extension to your", "author": "dmlloyd", "createdAt": "2020-07-16T12:52:48Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -112,9 +188,9 @@ of the Quarkus application is captured by a service which can, for example, proc\n later analysis.\n \n [id=\"json-logging\"]\n-==== JSON Logging\n+==== JSON Logging Format\n \n-In order to configure JSON logging, the `quarkus-logging-json` extension may be employed.  Add this extension to your\n+In order to configure JSON logging format, the `quarkus-logging-json` extension may be employed.  Add this extension to your", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2MjUzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455762535", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A log handler is a logging component responsible to emits log events to a recipient. +\n          \n          \n            \n            A log handler is a logging component responsible for the emission of log events to a recipient.", "author": "dmlloyd", "createdAt": "2020-07-16T12:53:23Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NDIzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455764239", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is enabled by default, it outputs all log events inside the console of your application (stdout).\n          \n          \n            \n            The console log handler is enabled by default.  It outputs all log events to the console of your application (typically to the system's `stdout`).", "author": "dmlloyd", "createdAt": "2020-07-16T12:56:00Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NDQxOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455764419", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].\n          \n          \n            \n            For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[the Console Logging configuration reference].", "author": "dmlloyd", "createdAt": "2020-07-16T12:56:17Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NDg5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455764891", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is disabled by default, it allows to output all log events inside a file on the application's host.\n          \n          \n            \n            The file log handler is disabled by default. It outputs all log events to a file on the application's host.", "author": "dmlloyd", "createdAt": "2020-07-16T12:57:03Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].\n+\n+=== File log handler\n+\n+It is disabled by default, it allows to output all log events inside a file on the application's host.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NTA2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455765062", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[File logging configuration reference].\n          \n          \n            \n            For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[the File Logging configuration reference].", "author": "dmlloyd", "createdAt": "2020-07-16T12:57:22Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].\n+\n+=== File log handler\n+\n+It is disabled by default, it allows to output all log events inside a file on the application's host.\n+It supports log file rotation.\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[File logging configuration reference].", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NTMxNg==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455765316", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            link:https://en.wikipedia.org/wiki/Syslog[Syslog] is a protocol for sending log messages on Unix-like systems defined by the link:https://tools.ietf.org/html/rfc5424[RFC5424].\n          \n          \n            \n            link:https://en.wikipedia.org/wiki/Syslog[Syslog] is a protocol for sending log messages on Unix-like systems using a protocol defined by link:https://tools.ietf.org/html/rfc5424[RFC 5424].", "author": "dmlloyd", "createdAt": "2020-07-16T12:57:46Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].\n+\n+=== File log handler\n+\n+It is disabled by default, it allows to output all log events inside a file on the application's host.\n+It supports log file rotation.\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[File logging configuration reference].\n+\n+=== Syslog log handler\n+\n+link:https://en.wikipedia.org/wiki/Syslog[Syslog] is a protocol for sending log messages on Unix-like systems defined by the link:https://tools.ietf.org/html/rfc5424[RFC5424].", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NTcwNA==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455765704", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The syslog handler allows to send all logs events to a syslog server (by default, on the local syslog server). +\n          \n          \n            \n            The syslog handler sends all log events to a syslog server (by default, the syslog server that is local to the application).", "author": "dmlloyd", "createdAt": "2020-07-16T12:58:25Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].\n+\n+=== File log handler\n+\n+It is disabled by default, it allows to output all log events inside a file on the application's host.\n+It supports log file rotation.\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[File logging configuration reference].\n+\n+=== Syslog log handler\n+\n+link:https://en.wikipedia.org/wiki/Syslog[Syslog] is a protocol for sending log messages on Unix-like systems defined by the link:https://tools.ietf.org/html/rfc5424[RFC5424].\n+\n+The syslog handler allows to send all logs events to a syslog server (by default, on the local syslog server). +", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NTgyOA==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455765828", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.syslog[Syslog logging configuration reference].\n          \n          \n            \n            For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.syslog[the Syslog Logging configuration reference].", "author": "dmlloyd", "createdAt": "2020-07-16T12:58:37Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -153,17 +229,43 @@ WARNING: Enabling pretty printing might cause certain processors and JSON parser\n NOTE: Printing the details can be expensive as the values are retrieved from the caller. The details include the\n source class name, source file name, source method name and source line number.\n \n+== Log Handlers\n+\n+A log handler is a logging component responsible to emits log events to a recipient. +\n+Quarkus comes with three different log handlers: **console**, **file** and **syslog**.\n+\n+=== Console log handler\n+\n+It is enabled by default, it outputs all log events inside the console of your application (stdout).\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[Console logging configuration reference].\n+\n+=== File log handler\n+\n+It is disabled by default, it allows to output all log events inside a file on the application's host.\n+It supports log file rotation.\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[File logging configuration reference].\n+\n+=== Syslog log handler\n+\n+link:https://en.wikipedia.org/wiki/Syslog[Syslog] is a protocol for sending log messages on Unix-like systems defined by the link:https://tools.ietf.org/html/rfc5424[RFC5424].\n+\n+The syslog handler allows to send all logs events to a syslog server (by default, on the local syslog server). +\n+It is disabled by default.\n+\n+For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.syslog[Syslog logging configuration reference].", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NjA0MA==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455766040", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: As we don't change the root logger, console log will only contains `INFO` or higher order logs.\n          \n          \n            \n            NOTE: As we don't change the root logger, console log will only contain `INFO` or higher order logs.", "author": "dmlloyd", "createdAt": "2020-07-16T12:59:02Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -183,6 +285,8 @@ quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE\n quarkus.log.category.\"io.undertow.request.security\".level=TRACE\n ----\n \n+NOTE: As we don't change the root logger, console log will only contains `INFO` or higher order logs.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc2NjI3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r455766271", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This is due to the logging implementation not being embarked in the native executable.\n          \n          \n            \n            This is due to the logging implementation not being included in the native executable.", "author": "dmlloyd", "createdAt": "2020-07-16T12:59:25Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -265,7 +360,7 @@ This is especially important when building native executables as you could encou\n Caused by java.lang.ClassNotFoundException: org.apache.commons.logging.impl.LogFactoryImpl\n ----\n \n-This is due to the logging implementation not being embarked in the the native executable.\n+This is due to the logging implementation not being embarked in the native executable.", "originalCommit": "99a5a28216cdf5678842ed744d68a4b2d7216191", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "72d8d17f6e5ff270bfe67dd83f5075d5f2c3a1fc", "url": "https://github.com/quarkusio/quarkus/commit/72d8d17f6e5ff270bfe67dd83f5075d5f2c3a1fc", "message": "Improve logging guide", "committedDate": "2020-07-16T13:17:29Z", "type": "forcePushed"}, {"oid": "24f915be129551a67aeb1f87cf7bf98fa6426835", "url": "https://github.com/quarkusio/quarkus/commit/24f915be129551a67aeb1f87cf7bf98fa6426835", "message": "Improve logging guide", "committedDate": "2020-07-16T15:14:29Z", "type": "forcePushed"}, {"oid": "25a46156404e466ec397db26ed7838f3fb2aa5cb", "url": "https://github.com/quarkusio/quarkus/commit/25a46156404e466ec397db26ed7838f3fb2aa5cb", "message": "Add log4j-jboss-logmanager to the bom", "committedDate": "2020-07-21T08:07:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTE0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r458051145", "bodyText": "I would put this with the list up above.", "author": "dmlloyd", "createdAt": "2020-07-21T12:16:59Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2; if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies. The `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports these Apache-style log levels:\n+\n+[horizontal]\n+FATAL:: A critical service failure/complete inability to service requests of any kind.\n+ERROR:: A significant disruption in a request or the inability to service a request.\n+WARN:: A non-critical service error or problem that may not require immediate correction.\n+INFO:: Service lifecycle events or important related very-low-frequency information.\n+DEBUG:: Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging.\n+TRACE:: Messages that convey extra per-request debugging information that may be very high frequency.\n+\n+JBoss logging also supports link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[JDK log levels]:\n+\n+[horizontal]\n+OFF:: Special level to turn off logging.", "originalCommit": "25a46156404e466ec397db26ed7838f3fb2aa5cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEwMTkzMw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r458101933", "bodyText": "Done", "author": "loicmathieu", "createdAt": "2020-07-21T13:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTE0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTIzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r458051235", "bodyText": "And this one up above as well.", "author": "dmlloyd", "createdAt": "2020-07-21T12:17:10Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2; if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies. The `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports these Apache-style log levels:\n+\n+[horizontal]\n+FATAL:: A critical service failure/complete inability to service requests of any kind.\n+ERROR:: A significant disruption in a request or the inability to service a request.\n+WARN:: A non-critical service error or problem that may not require immediate correction.\n+INFO:: Service lifecycle events or important related very-low-frequency information.\n+DEBUG:: Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging.\n+TRACE:: Messages that convey extra per-request debugging information that may be very high frequency.\n+\n+JBoss logging also supports link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[JDK log levels]:\n+\n+[horizontal]\n+OFF:: Special level to turn off logging.\n+SEVERE:: Same as **ERROR**.\n+WARNING:: Same as **WARN**.\n+CONFIG:: Service configuration information.\n+FINE:: Same as **DEBUG**.\n+FINER:: Same as **TRACE**.\n+FINEST:: Event more debugging information than `TRACE`, maybe with even higher frequency.\n+ALL:: Special level for all messages including custom levels.", "originalCommit": "25a46156404e466ec397db26ed7838f3fb2aa5cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEwMjAzMQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r458102031", "bodyText": "Done", "author": "loicmathieu", "createdAt": "2020-07-21T13:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTQwNg==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r458051406", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            JBoss Logging supports these Apache-style log levels:\n          \n          \n            \n            These are the log levels used by Quarkus:", "author": "dmlloyd", "createdAt": "2020-07-21T12:17:28Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2; if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies. The `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports these Apache-style log levels:", "originalCommit": "25a46156404e466ec397db26ed7838f3fb2aa5cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTc5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r458051793", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            JBoss logging also supports link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[JDK log levels]:\n          \n          \n            \n            In addition, the following levels may be configured for applications and libraries using link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[`java.util.logging`]:", "author": "dmlloyd", "createdAt": "2020-07-21T12:18:14Z", "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -9,10 +9,95 @@ include::./attributes.adoc[]\n \n This guide explains logging and how to configure it.\n \n+Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. +\n+You can use the JBoss Logging facade inside your code as it's already provided,\n+or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager.\n+\n+All the logging configuration will then be done inside your `application.properties`.\n+\n+== Supported Logging APIs\n+\n+Applications and components may use any of the following APIs for logging, and the logs will be merged:\n+\n+* JDK `java.util.logging` (also called JUL)\n+* https://github.com/jboss-logging/jboss-logging[JBoss Logging]\n+* https://www.slf4j.org/[SLF4J]\n+* https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]\n+\n+Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs.\n+\n+[source,java]\n+----\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/hello\")\n+public class ExampleResource {\n+\n+    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String hello() {\n+        LOG.info(\"Hello\");\n+        return \"hello\";\n+    }\n+}\n+----\n+\n+NOTE: If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter].\n+\n+=== What about Apache Log4j ?\n+\n+link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.\n+Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager.\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>org.jboss.logmanager</groupId>\n+      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n+    </dependency>\n+----\n+\n+<1> This is the library needed for Log2J version 2; if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead.\n+\n+You can then use the Log4J API inside your application.\n+\n+WARNING: Do not include any Log4j dependencies. The `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade.\n+\n+== Logging levels\n+\n+JBoss Logging supports these Apache-style log levels:\n+\n+[horizontal]\n+FATAL:: A critical service failure/complete inability to service requests of any kind.\n+ERROR:: A significant disruption in a request or the inability to service a request.\n+WARN:: A non-critical service error or problem that may not require immediate correction.\n+INFO:: Service lifecycle events or important related very-low-frequency information.\n+DEBUG:: Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging.\n+TRACE:: Messages that convey extra per-request debugging information that may be very high frequency.\n+\n+JBoss logging also supports link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[JDK log levels]:", "originalCommit": "25a46156404e466ec397db26ed7838f3fb2aa5cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "27721650a908f0632c93f1380c5618829363a2dc", "url": "https://github.com/quarkusio/quarkus/commit/27721650a908f0632c93f1380c5618829363a2dc", "message": "Using Log4j2", "committedDate": "2020-07-21T13:35:24Z", "type": "commit"}, {"oid": "1671b8aa56f78020344ddb1a3503a689801969ef", "url": "https://github.com/quarkusio/quarkus/commit/1671b8aa56f78020344ddb1a3503a689801969ef", "message": "Improve logging guide", "committedDate": "2020-07-21T13:35:24Z", "type": "commit"}, {"oid": "9d8117c8dbd61c44eb9ed9c49b261e987dd4cfc3", "url": "https://github.com/quarkusio/quarkus/commit/9d8117c8dbd61c44eb9ed9c49b261e987dd4cfc3", "message": "Add log4j-jboss-logmanager to the bom", "committedDate": "2020-07-21T13:35:24Z", "type": "commit"}, {"oid": "9d8117c8dbd61c44eb9ed9c49b261e987dd4cfc3", "url": "https://github.com/quarkusio/quarkus/commit/9d8117c8dbd61c44eb9ed9c49b261e987dd4cfc3", "message": "Add log4j-jboss-logmanager to the bom", "committedDate": "2020-07-21T13:35:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxNDk1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r459214951", "bodyText": "If this was never implemented and may be deleted, why not delete it now? I don\u2019t think anyone is using it since it never worked", "author": "gastaldi", "createdAt": "2020-07-23T04:59:33Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/LogConfig.java", "diffHunk": "@@ -17,23 +17,29 @@\n     /**\n      * The log level of the root category, which is used as the default log level for all categories.\n      *\n-     * In addition to the standard JDK log level JBoss Logging also adds the following:\n+     * JBoss Logging supports Apache style log levels:\n      *\n-     * {@link org.jboss.logmanager.Level#FATAL}\n-     * {@link org.jboss.logmanager.Level#ERROR}\n-     * {@link org.jboss.logmanager.Level#WARN}\n-     * {@link org.jboss.logmanager.Level#INFO}\n-     * {@link org.jboss.logmanager.Level#DEBUG}\n-     * {@link org.jboss.logmanager.Level#TRACE}\n+     * * {@link org.jboss.logmanager.Level#FATAL}\n+     * * {@link org.jboss.logmanager.Level#ERROR}\n+     * * {@link org.jboss.logmanager.Level#WARN}\n+     * * {@link org.jboss.logmanager.Level#INFO}\n+     * * {@link org.jboss.logmanager.Level#DEBUG}\n+     * * {@link org.jboss.logmanager.Level#TRACE}\n      *\n+     * In addition, it also supports the standard JDK log levels.\n+     *\n+     * @asciidoclet\n      */\n     @ConfigItem(defaultValue = \"INFO\")\n     public Level level;\n \n     /**\n      * The default minimum log level\n+     * \n+     * @deprecated this functionality was never implemented, it may be deleted or implemented in a future release.\n      */\n     @ConfigItem(defaultValue = \"INFO\")\n+    @Deprecated\n     public Level minLevel;", "originalCommit": "9d8117c8dbd61c44eb9ed9c49b261e987dd4cfc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mjk3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r459252975", "bodyText": "This was discussed on Zulip and decision to make is deprecated waiting to implement it or remove it.\nhttps://quarkusio.zulipchat.com/#narrow/stream/187038-dev/topic/Logging.3A.20what.20is.20min-level.20used.20to.20.3F", "author": "loicmathieu", "createdAt": "2020-07-23T07:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxNDk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM0MTUwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10672#discussion_r459341509", "bodyText": "Ok thanks", "author": "gastaldi", "createdAt": "2020-07-23T10:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxNDk1MQ=="}], "type": "inlineReview"}]}