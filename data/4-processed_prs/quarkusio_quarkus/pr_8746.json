{"pr_number": 8746, "pr_title": "fix MDC scope nesting", "pr_createdAt": "2020-04-22T12:48:49Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8746", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5ODU0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8746#discussion_r413098542", "bodyText": "Could be this test moved to Jaeger artifact - close to the MDC implementation?", "author": "pavolloffay", "createdAt": "2020-04-22T15:46:33Z", "path": "extensions/smallrye-opentracing/deployment/src/test/java/io/quarkus/smallrye/opentracing/deployment/NestedMdcScopesTest.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package io.quarkus.smallrye.opentracing.deployment;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+\n+import java.util.Map;\n+\n+import org.jboss.logging.MDC;\n+import org.junit.jupiter.api.Test;\n+\n+import io.jaegertracing.internal.JaegerSpanContext;\n+import io.opentracing.Scope;\n+import io.opentracing.Span;\n+import io.opentracing.SpanContext;\n+import io.opentracing.util.ThreadLocalScopeManager;\n+import io.quarkus.jaeger.runtime.MDCScopeManager;\n+\n+public class NestedMdcScopesTest {", "originalCommit": "8daf8865c6750d72b9509910575ec91c0fd62b76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMjQ0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8746#discussion_r413112447", "bodyText": "Hmm, I'm not sure why I added it to smallrye-opentracing, indeed this should be in jaeger. Thanks :-)", "author": "Ladicek", "createdAt": "2020-04-22T16:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5ODU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMzUyNw==", "url": "https://github.com/quarkusio/quarkus/pull/8746#discussion_r413113527", "bodyText": "Done.", "author": "Ladicek", "createdAt": "2020-04-22T16:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5ODU0Mg=="}], "type": "inlineReview"}, {"oid": "5081fecaf65a8d359f412b74d55fb7010cb1c027", "url": "https://github.com/quarkusio/quarkus/commit/5081fecaf65a8d359f412b74d55fb7010cb1c027", "message": "fix MDC scope nesting", "committedDate": "2020-04-22T16:05:34Z", "type": "commit"}, {"oid": "5081fecaf65a8d359f412b74d55fb7010cb1c027", "url": "https://github.com/quarkusio/quarkus/commit/5081fecaf65a8d359f412b74d55fb7010cb1c027", "message": "fix MDC scope nesting", "committedDate": "2020-04-22T16:05:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMjE3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8746#discussion_r413122175", "bodyText": "This certainly fixes the problem, but I am wondering whether it isn't better to just restore the old values of the keys that were removed. For instance they could be explicitly set by a user or other integration.", "author": "pavolloffay", "createdAt": "2020-04-22T16:16:57Z", "path": "extensions/jaeger/runtime/src/main/java/io/quarkus/jaeger/runtime/MDCScope.java", "diffHunk": "@@ -33,6 +35,10 @@ public void close() {\n         MDC.remove(TRACE_ID);\n         MDC.remove(SPAN_ID);\n         MDC.remove(SAMPLED);\n+\n+        if (toRestore != null && toRestore.span().context() instanceof JaegerSpanContext) {", "originalCommit": "5081fecaf65a8d359f412b74d55fb7010cb1c027", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUzMzg5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8746#discussion_r413533892", "bodyText": "Hmm, yea, we could do that...", "author": "Ladicek", "createdAt": "2020-04-23T06:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMjE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUzNDk4MA==", "url": "https://github.com/quarkusio/quarkus/pull/8746#discussion_r413534980", "bodyText": "I've followed the ThreadLocalScopeManager / ThreadLocalScope example :-)\nBut I agree it's cleaner to just restore the MDC map content. I have also found that the test can be improved a bit. I will submit a subsequent PR.", "author": "Ladicek", "createdAt": "2020-04-23T06:10:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMjE3NQ=="}], "type": "inlineReview"}]}