{"pr_number": 8565, "pr_title": "SmallRye Reactive Messaging 2.0", "pr_createdAt": "2020-04-14T11:47:31Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8565", "timeline": [{"oid": "96699ab0cfe1fd04dce8c17598b45fb91eb66e27", "url": "https://github.com/quarkusio/quarkus/commit/96699ab0cfe1fd04dce8c17598b45fb91eb66e27", "message": "SmallRye Reactive Messaging 2.0", "committedDate": "2020-04-10T09:24:21Z", "type": "commit"}, {"oid": "8334a906c071815974d43ad06b7089c34b2b288b", "url": "https://github.com/quarkusio/quarkus/commit/8334a906c071815974d43ad06b7089c34b2b288b", "message": "SmallRye Reactive Messaging 2.0 - blocking support + tests", "committedDate": "2020-04-14T10:21:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDA2MA==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408084060", "bodyText": "Can you add: Thread.currentThread().interrupt();", "author": "cescoffier", "createdAt": "2020-04-14T12:07:15Z", "path": "extensions/smallrye-reactive-messaging/deployment/src/test/java/io/quarkus/smallrye/reactivemessaging/blocking/beans/BeanReturningMessages.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.quarkus.smallrye.reactivemessaging.blocking.beans;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.reactive.messaging.Message;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+\n+@ApplicationScoped\n+public class BeanReturningMessages {\n+    private AtomicInteger count = new AtomicInteger();\n+    private List<String> threads = new CopyOnWriteArrayList<>();\n+\n+    @Blocking\n+    @Outgoing(\"infinite-producer-msg\")\n+    public Message<Integer> create() {\n+        try {\n+            Thread.sleep(200);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "originalCommit": "8334a906c071815974d43ad06b7089c34b2b288b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDE3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408084177", "bodyText": "(and remove the dump of the stack trace maybe)", "author": "cescoffier", "createdAt": "2020-04-14T12:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDA2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5NTU1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408095555", "bodyText": "done", "author": "michalszynkiewicz", "createdAt": "2020-04-14T12:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDI1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408084253", "bodyText": "Same comment as above (reset interrupt flag)", "author": "cescoffier", "createdAt": "2020-04-14T12:07:40Z", "path": "extensions/smallrye-reactive-messaging/deployment/src/test/java/io/quarkus/smallrye/reactivemessaging/blocking/beans/BeanReturningPayloads.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package io.quarkus.smallrye.reactivemessaging.blocking.beans;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+\n+@ApplicationScoped\n+public class BeanReturningPayloads {\n+    private AtomicInteger count = new AtomicInteger();\n+    private List<String> threads = new CopyOnWriteArrayList<>();\n+\n+    @Blocking\n+    @Outgoing(\"infinite-producer-payload\")\n+    public int create() {\n+        try {\n+            Thread.sleep(200);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "originalCommit": "8334a906c071815974d43ad06b7089c34b2b288b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5NTYzMg==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408095632", "bodyText": "done", "author": "michalszynkiewicz", "createdAt": "2020-04-14T12:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDI1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NTU2MA==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408085560", "bodyText": "We should be able to remove the quarkus-vertx-core dependency, as it's a transitive dependency of this one.", "author": "cescoffier", "createdAt": "2020-04-14T12:10:02Z", "path": "extensions/smallrye-reactive-messaging/runtime/pom.xml", "diffHunk": "@@ -25,6 +25,10 @@\n             <groupId>io.quarkus</groupId>\n             <artifactId>quarkus-vertx-core</artifactId>\n         </dependency>\n+        <dependency>", "originalCommit": "8334a906c071815974d43ad06b7089c34b2b288b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5NjU4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408096581", "bodyText": "done, also added dependency between deployments", "author": "michalszynkiewicz", "createdAt": "2020-04-14T12:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NTU2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NTc0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408085746", "bodyText": "Should it be private?", "author": "cescoffier", "createdAt": "2020-04-14T12:10:24Z", "path": "extensions/smallrye-reactive-messaging/runtime/src/main/java/io/quarkus/smallrye/reactivemessaging/runtime/QuarkusMediatorConfiguration.java", "diffHunk": "@@ -44,6 +44,12 @@\n \n     private Class<? extends Invoker> invokerClass;\n \n+    private boolean blocking;\n+\n+    private boolean blockingExecutionOrdered;\n+\n+    String workerPoolName;", "originalCommit": "8334a906c071815974d43ad06b7089c34b2b288b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5NjkyMA==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408096920", "bodyText": "done", "author": "michalszynkiewicz", "createdAt": "2020-04-14T12:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NTc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NjM4MA==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408086380", "bodyText": "IS the only difference with the upstream version the AlternativePriority?", "author": "cescoffier", "createdAt": "2020-04-14T12:11:37Z", "path": "extensions/smallrye-reactive-messaging/runtime/src/main/java/io/quarkus/smallrye/reactivemessaging/runtime/QuarkusWorkerPoolRegistry.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package io.quarkus.smallrye.reactivemessaging.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import javax.annotation.Priority;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.BeforeDestroyed;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.event.Reception;\n+import javax.inject.Inject;\n+\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.slf4j.LoggerFactory;\n+\n+import io.quarkus.arc.AlternativePriority;\n+import io.smallrye.mutiny.Uni;\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+import io.smallrye.reactive.messaging.connectors.ExecutionHolder;\n+import io.smallrye.reactive.messaging.connectors.WorkerPoolRegistry;\n+import io.smallrye.reactive.messaging.helpers.Validation;\n+import io.vertx.core.Handler;\n+import io.vertx.mutiny.core.Promise;\n+import io.vertx.mutiny.core.WorkerExecutor;\n+\n+@AlternativePriority(1)\n+@ApplicationScoped\n+// TODO: create a different entry for WorkerPoolRegistry than `analyzeWorker` and drop this class\n+public class QuarkusWorkerPoolRegistry extends WorkerPoolRegistry {", "originalCommit": "8334a906c071815974d43ad06b7089c34b2b288b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5ODE0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408098147", "bodyText": "the difference is the defineWorker method; the upstream version only works on AnnotatedType: https://github.com/smallrye/smallrye-reactive-messaging/blob/master/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/connectors/WorkerPoolRegistry.java#L98", "author": "michalszynkiewicz", "createdAt": "2020-04-14T12:32:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NjM4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwMTk2NA==", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408101964", "bodyText": "Thanks!", "author": "cescoffier", "createdAt": "2020-04-14T12:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NjM4MA=="}], "type": "inlineReview"}, {"oid": "356f1c7a77ad3464917ee5105f7112cbd3d00ada", "url": "https://github.com/quarkusio/quarkus/commit/356f1c7a77ad3464917ee5105f7112cbd3d00ada", "message": "SmallRye Reactive Messaging 2.0 - rework", "committedDate": "2020-04-14T12:33:56Z", "type": "commit"}]}