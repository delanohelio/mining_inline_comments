{"pr_number": 8095, "pr_title": "Add JSON-B customization to OptaPlanner extension", "pr_createdAt": "2020-03-23T19:21:07Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8095", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r396933053", "bodyText": "This is wierd. Does it work?\nIt doesn't modify the incoming config parameter, it reassigns it. Does this do anything?", "author": "ge0ffrey", "createdAt": "2020-03-24T06:51:42Z", "path": "extensions/optaplanner-jsonb/runtime/src/main/java/io/quarkus/optaplanner/jsonb/OptaPlannerJsonbConfigCustomizer.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.optaplanner.jsonb;\n+\n+import io.quarkus.jsonb.JsonbConfigCustomizer;\n+import org.optaplanner.core.api.score.Score;\n+import org.optaplanner.persistence.jsonb.api.OptaPlannerJsonbConfig;\n+\n+import javax.inject.Singleton;\n+import javax.json.bind.JsonbConfig;\n+\n+/**\n+ * OptaPlanner doesn't use JSON-B, but it does have optional JSON-B support for {@link Score}, etc.\n+ */\n+@Singleton\n+public class OptaPlannerJsonbConfigCustomizer implements JsonbConfigCustomizer {\n+\n+    @Override\n+    public void customize(JsonbConfig config) {\n+        config = OptaPlannerJsonbConfig.createConfig();", "originalCommit": "0f6cc6e492bb61b859e84855176b5fa9ce5750e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzODQzOA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r396938438", "bodyText": "The integration test proves that this works. I have no idea how it can work though.", "author": "ge0ffrey", "createdAt": "2020-03-24T07:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NDA0OA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r396944048", "bodyText": "@cuijulian Does the integration test fail if you uncomment this line?", "author": "ge0ffrey", "createdAt": "2020-03-24T07:22:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk3OTczNA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r396979734", "bodyText": "Indeed, this looks quite peculiar...", "author": "geoand", "createdAt": "2020-03-24T08:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4MzYxMw==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397283613", "bodyText": "@ge0ffrey The integration test still passes when I comment out that line. My thought process was to customize the JsonbConfig into the OptaPlannerJsonbConfig (which contains all the Score adapters) by reassigning it, but it seems to have no effect on the integration test. Alternatively, I could also manually customize the config using withAdapters(insert all OptaPlanner Adapters here) like it's suggested in the Quarkus docs, but I doubt that would have an effect either. @geoand Any thoughts on why this could be?\nSeparate question: when I build the module with -Pnative, the NativeImageTest fails with:\n[ERROR]   OptaPlannerTestResourceIT>OptaPlannerTestResourceTest.solveWithSolverFactory:26 1 expectation failed.\nResponse body doesn't match expectation.\nExpected: is \"{\\\"entityList\\\":[{\\\"value\\\":\\\"v1\\\"},{\\\"value\\\":\\\"v2\\\"}],\\\"score\\\":{\\\"initScore\\\":0,\\\"solutionInitialized\\\":true,\\\"score\\\":0},\\\"valueList\\\":[\\\"v1\\\",\\\"v2\\\"]}\"\n  Actual: {\"entityList\":[{\"value\":\"v1\"},{\"value\":\"v2\"}],\"score\":{\"score\":0},\"valueList\":[\"v1\",\"v2\"]}\n\nHow come the non native integration test passes, but the native IT gives a differently formatted response?", "author": "cuijulian", "createdAt": "2020-03-24T16:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4NzM3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397287373", "bodyText": "@cuijulian I am not sure I understand you issue with the JsonbConfigCustomizer, can you elaborate please?\nAs for the test issue, I am not really sure. I would need to look into it, it could be a number of things.\nRemind me to look at it tomorrow please as I will surely forget :)", "author": "geoand", "createdAt": "2020-03-24T16:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwMjA5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397302093", "bodyText": "@geoand Basically customizing the JsonbConfig config parameter with JsonbConfigCustomizer has no effect on the OptaPlannerTestResourceTest integration test.\nAs for the test issue, I'm going to do some more digging, I'll ping you if I have further questions. Thanks! :)", "author": "cuijulian", "createdAt": "2020-03-24T16:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQzODUwMw==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397438503", "bodyText": "@geoand @ge0ffrey Fixed by modifying the config using withAdapters(), the integration test works with expected output, for both non native and native mode. Latest changes have been pushed and squashed.", "author": "cuijulian", "createdAt": "2020-03-24T20:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1ODQwNg==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397658406", "bodyText": "Excellent!", "author": "geoand", "createdAt": "2020-03-25T07:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzA1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzODAyMw==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r396938023", "bodyText": "Move this under the optaplanner-jackson module a few lines up - keep em together.", "author": "ge0ffrey", "createdAt": "2020-03-24T07:06:00Z", "path": "integration-tests/pom.xml", "diffHunk": "@@ -99,6 +99,7 @@\n         <module>cache</module>\n         <module>qute</module>\n         <module>bootstrap-config</module>\n+        <module>optaplanner-jsonb</module>", "originalCommit": "0f6cc6e492bb61b859e84855176b5fa9ce5750e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk3OTM0OA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r396979348", "bodyText": "I would say let's add another 5 minutes here since we are adding a new module", "author": "geoand", "createdAt": "2020-03-24T08:36:31Z", "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -406,6 +406,7 @@ jobs:\n               logging-gelf\n               bootstrap-config\n               optaplanner-jackson\n+              optaplanner-jsonb\n           # kubernetes-client alone takes 30mn+\n           - category: Misc3\n             timeout: 50", "originalCommit": "0f6cc6e492bb61b859e84855176b5fa9ce5750e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4de1d9f1db911a0af9484b7de8f8a5dc01f75ad9", "url": "https://github.com/quarkusio/quarkus/commit/4de1d9f1db911a0af9484b7de8f8a5dc01f75ad9", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-03-24T20:16:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxMzUxOA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397713518", "bodyText": "This exposes the list of score implementations in quarkus, which is a maintenance problem in the long term. We regularly add score implementations upstream.\n@cuijulian Can you open a jira to \"add OptaPlannerJsonbConfig.getScoreAdaptorList() in optaplanner-persistence-jaxb\" and add a comment here, something like \"// TODO replace by  once released to avoid hardcoding the score implementations\"\nThen this PR is mergable. Once that jira is fixed and optaplanner is released, we send in a PR to quarkus to fix the TODO.\nDoesn't need to be return a List. getScoreAdaptors() that returns a Class array is good too. Whatever works best.", "author": "ge0ffrey", "createdAt": "2020-03-25T09:29:41Z", "path": "extensions/optaplanner-jsonb/runtime/src/main/java/io/quarkus/optaplanner/jsonb/OptaPlannerJsonbConfigCustomizer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.optaplanner.jsonb;\n+\n+import javax.inject.Singleton;\n+import javax.json.bind.JsonbConfig;\n+\n+import org.optaplanner.core.api.score.Score;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.bendable.BendableScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.bendablebigdecimal.BendableBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.bendablelong.BendableLongScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardmediumsoft.HardMediumSoftScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardmediumsoftbigdecimal.HardMediumSoftBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoft.HardSoftScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoftbigdecimal.HardSoftBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoftdouble.HardSoftDoubleScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoftlong.HardSoftLongScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simple.SimpleScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simplebigdecimal.SimpleBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simpledouble.SimpleDoubleScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simplelong.SimpleLongScoreJsonbAdapter;\n+\n+import io.quarkus.jsonb.JsonbConfigCustomizer;\n+\n+/**\n+ * OptaPlanner doesn't use JSON-B, but it does have optional JSON-B support for {@link Score}, etc.\n+ */\n+@Singleton\n+public class OptaPlannerJsonbConfigCustomizer implements JsonbConfigCustomizer {\n+\n+    @Override\n+    public void customize(JsonbConfig config) {\n+        config.withAdapters(new BendableScoreJsonbAdapter(),\n+                new BendableBigDecimalScoreJsonbAdapter(),\n+                new BendableLongScoreJsonbAdapter(),\n+                new HardMediumSoftScoreJsonbAdapter(),\n+                new HardMediumSoftBigDecimalScoreJsonbAdapter(),\n+                new HardMediumSoftLongScoreJsonbAdapter(),\n+                new HardSoftScoreJsonbAdapter(),\n+                new HardSoftBigDecimalScoreJsonbAdapter(),\n+                new HardSoftDoubleScoreJsonbAdapter(),\n+                new HardSoftLongScoreJsonbAdapter(),\n+                new SimpleScoreJsonbAdapter(),\n+                new SimpleBigDecimalScoreJsonbAdapter(),\n+                new SimpleDoubleScoreJsonbAdapter(),\n+                new SimpleLongScoreJsonbAdapter());", "originalCommit": "4de1d9f1db911a0af9484b7de8f8a5dc01f75ad9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwNzEzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r397907135", "bodyText": "Jira: https://issues.redhat.com/browse/PLANNER-1922. Comment added, changes pushed in latest commit.", "author": "cuijulian", "createdAt": "2020-03-25T14:40:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxMzUxOA=="}], "type": "inlineReview"}, {"oid": "d355fe5b0e9bcbf0f6ba4fa33a69e8953608f6b9", "url": "https://github.com/quarkusio/quarkus/commit/d355fe5b0e9bcbf0f6ba4fa33a69e8953608f6b9", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-03-25T13:35:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MzI2MA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r398353260", "bodyText": "@cuijulian (very soft suggestion - as we need to wait for optaplanner 7.35 to go out anyway): would you mind adding a hint in this TODO when it will be possible to fix it? For example: \"when upgrading to optaplanner 7.36\" (that TODO fix didn't make 7.35 which is being released). Before it was merged, I'd use the Jira url.\nAlso it's unclear which class has \"getScoreAdaptorList()\", making it hard for others your yourself in 6 months to figure out this TODO easily.", "author": "ge0ffrey", "createdAt": "2020-03-26T07:02:51Z", "path": "extensions/optaplanner-jsonb/runtime/src/main/java/io/quarkus/optaplanner/jsonb/OptaPlannerJsonbConfigCustomizer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.optaplanner.jsonb;\n+\n+import javax.inject.Singleton;\n+import javax.json.bind.JsonbConfig;\n+\n+import org.optaplanner.core.api.score.Score;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.bendable.BendableScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.bendablebigdecimal.BendableBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.bendablelong.BendableLongScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardmediumsoft.HardMediumSoftScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardmediumsoftbigdecimal.HardMediumSoftBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoft.HardSoftScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoftbigdecimal.HardSoftBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoftdouble.HardSoftDoubleScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.hardsoftlong.HardSoftLongScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simple.SimpleScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simplebigdecimal.SimpleBigDecimalScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simpledouble.SimpleDoubleScoreJsonbAdapter;\n+import org.optaplanner.persistence.jsonb.api.score.buildin.simplelong.SimpleLongScoreJsonbAdapter;\n+\n+import io.quarkus.jsonb.JsonbConfigCustomizer;\n+\n+/**\n+ * OptaPlanner doesn't use JSON-B, but it does have optional JSON-B support for {@link Score}, etc.\n+ */\n+@Singleton\n+public class OptaPlannerJsonbConfigCustomizer implements JsonbConfigCustomizer {\n+\n+    @Override\n+    public void customize(JsonbConfig config) {\n+        // TODO use getScoreAdaptorList() once released to avoid hardcoding the Score implementations\n+        config.withAdapters(new BendableScoreJsonbAdapter(),", "originalCommit": "d355fe5b0e9bcbf0f6ba4fa33a69e8953608f6b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0NzYzOA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r398547638", "bodyText": "Good point. I may as well also bump the optaplanner-bom version to 7.35 in this PR before it get merged.", "author": "cuijulian", "createdAt": "2020-03-26T12:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MzI2MA=="}], "type": "inlineReview"}, {"oid": "6f7fd8a2a2ecb020a4780f30f39cabc53b2e9946", "url": "https://github.com/quarkusio/quarkus/commit/6f7fd8a2a2ecb020a4780f30f39cabc53b2e9946", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-03-26T12:59:47Z", "type": "forcePushed"}, {"oid": "3619c80962d732f6bd2411f977711f2473e25497", "url": "https://github.com/quarkusio/quarkus/commit/3619c80962d732f6bd2411f977711f2473e25497", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-04-01T13:42:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3OTA2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r402279061", "bodyText": "Shouldn't this be a dependency on quarkus-jsonb-deployment instead?", "author": "gsmet", "createdAt": "2020-04-02T12:36:59Z", "path": "extensions/optaplanner-jsonb/deployment/pom.xml", "diffHunk": "@@ -0,0 +1,68 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-optaplanner-jsonb-parent</artifactId>\n+        <version>999-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>quarkus-optaplanner-jsonb-deployment</artifactId>\n+    <name>Quarkus - OptaPlanner JSON-B - Deployment</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-core-deployment</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-arc-deployment</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-jsonb-spi</artifactId>", "originalCommit": "3619c80962d732f6bd2411f977711f2473e25497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1MDQwNA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r402350404", "bodyText": "The quarkus-jsonb-spi dependency is needed in the deployment module according to the docs. But I am missing the quarkus-jsonb-deployment dep here, fixing in next commit.", "author": "cuijulian", "createdAt": "2020-04-02T14:19:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3OTA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MjYxNg==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r402362616", "bodyText": "Well, the SPI should come with the deployment module.", "author": "gsmet", "createdAt": "2020-04-02T14:35:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3OTA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4Mzk0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r402383942", "bodyText": "Good point. Sorry, didn't check :/ Fixing in next push.\nPerhaps the docs should instead say to add quarkus-jsonb-deployment rather than quarkus-jsonb-spi? Same goes for quarkus-jackson-deployment. I can make a PR for that.", "author": "cuijulian", "createdAt": "2020-04-02T15:01:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3OTA2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4NTc4NA==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r402385784", "bodyText": "Well, not really. You want to use the SPI if your dependency to Jackson/JSON-B is optional (which is often the case).\nHere you really want a hard dependency so you don't have to use the SPI: you need the whole extension.", "author": "gsmet", "createdAt": "2020-04-02T15:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3OTA2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI4MDA0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8095#discussion_r402280046", "bodyText": "If you have the optaplanner dependency here, you need the deployment counterpart in the deployment pom.", "author": "gsmet", "createdAt": "2020-04-02T12:38:38Z", "path": "extensions/optaplanner-jsonb/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-optaplanner-jsonb-parent</artifactId>\n+        <version>999-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>quarkus-optaplanner-jsonb</artifactId>\n+    <name>Quarkus - OptaPlanner JSON-B - Runtime</name>\n+    <description>Activate JSON-B bindings for OptaPlanner's Score classes</description>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-jsonb</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-optaplanner</artifactId>", "originalCommit": "3619c80962d732f6bd2411f977711f2473e25497", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3f6c2a2c109937663f995fc811af75b827401eb1", "url": "https://github.com/quarkusio/quarkus/commit/3f6c2a2c109937663f995fc811af75b827401eb1", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-04-02T14:45:45Z", "type": "forcePushed"}, {"oid": "8bdbcd6634728e8c3ad1590879c5fb499e0fb15e", "url": "https://github.com/quarkusio/quarkus/commit/8bdbcd6634728e8c3ad1590879c5fb499e0fb15e", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-04-02T15:08:15Z", "type": "commit"}, {"oid": "8bdbcd6634728e8c3ad1590879c5fb499e0fb15e", "url": "https://github.com/quarkusio/quarkus/commit/8bdbcd6634728e8c3ad1590879c5fb499e0fb15e", "message": "Add JSON-B customization module to OptaPlanner extension", "committedDate": "2020-04-02T15:08:15Z", "type": "forcePushed"}]}