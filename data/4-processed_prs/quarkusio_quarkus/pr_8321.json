{"pr_number": 8321, "pr_title": "Add warning about @Provider constructors", "pr_createdAt": "2020-04-01T08:25:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8321", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NjU5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401456592", "bodyText": "I wonder if we should send a PR to jandex to add a method like ClassInfo#constructors() ;-).", "author": "mkouba", "createdAt": "2020-04-01T08:53:44Z", "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -281,6 +283,16 @@ private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n         }\n     }\n \n+    private void checkProperConstructorInProvider(AnnotationInstance i) {\n+        ClassInfo targetClass = i.target().asClass();\n+        if (!targetClass.hasNoArgsConstructor()\n+                || targetClass.methods().stream().filter(m -> m.name().equals(\"<init>\")).count() > 1) {", "originalCommit": "535c42fd3e12d14aa7112b60a93ed367a49f4c04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NzE3OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401457179", "bodyText": "That's an excellent idea! I'll do that later today :)", "author": "geoand", "createdAt": "2020-04-01T08:54:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NjU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NTU0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401545547", "bodyText": "Here it is: wildfly/jandex#78", "author": "geoand", "createdAt": "2020-04-01T11:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NjU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NzQxNg==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401457416", "bodyText": "Shouldn't we mention what happens if it does not have such a constructor?", "author": "mkouba", "createdAt": "2020-04-01T08:54:56Z", "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -281,6 +283,16 @@ private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n         }\n     }\n \n+    private void checkProperConstructorInProvider(AnnotationInstance i) {\n+        ClassInfo targetClass = i.target().asClass();\n+        if (!targetClass.hasNoArgsConstructor()\n+                || targetClass.methods().stream().filter(m -> m.name().equals(\"<init>\")).count() > 1) {\n+            LOGGER.warn(\n+                    \"Classes annotated with @Provider should have a single, no-argument constructor. Offending class is \"", "originalCommit": "535c42fd3e12d14aa7112b60a93ed367a49f4c04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2MTY4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401461689", "bodyText": "Makes sense. I'll update the message.", "author": "geoand", "createdAt": "2020-04-01T09:01:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NzQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2MzY4NA==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401463684", "bodyText": "Fixed", "author": "geoand", "createdAt": "2020-04-01T09:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NzQxNg=="}], "type": "inlineReview"}, {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "url": "https://github.com/quarkusio/quarkus/commit/8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "message": "Add warning about Provider constructors\n\nFixes: #8180", "committedDate": "2020-04-01T09:05:15Z", "type": "commit"}, {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "url": "https://github.com/quarkusio/quarkus/commit/8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "message": "Add warning about Provider constructors\n\nFixes: #8180", "committedDate": "2020-04-01T09:05:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTQ4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r402119489", "bodyText": "The injection works fine if I add @ApplicationScoped to the filter (as described in the original issue). Why not use following text:\nClasses annotated with @Provider without @ApplicationScoped annotation should have a single, no-argument constructor, otherwise dependency injection won't work properly.\n\nHas the if-statement to cover @ApplicationScoped as well?", "author": "schrieveslaach", "createdAt": "2020-04-02T07:54:43Z", "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -281,6 +283,16 @@ private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n         }\n     }\n \n+    private void checkProperConstructorInProvider(AnnotationInstance i) {\n+        ClassInfo targetClass = i.target().asClass();\n+        if (!targetClass.hasNoArgsConstructor()\n+                || targetClass.methods().stream().filter(m -> m.name().equals(\"<init>\")).count() > 1) {\n+            LOGGER.warn(\n+                    \"Classes annotated with @Provider should have a single, no-argument constructor, otherwise dependency injection won't work properly. Offending class is \"", "originalCommit": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyNjQ1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r402126459", "bodyText": "Now I'm a bit confused. @geoand We should probably verify whether and where constructor injection works... it could be that CDI injection works but JAX-RS injection does not work. I don't remember ;-).", "author": "mkouba", "createdAt": "2020-04-02T08:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzMjk4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r402132985", "bodyText": "I couldn't get it to work reliably even with @Singleton, so I think it's best to play it safe.", "author": "geoand", "createdAt": "2020-04-02T08:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTQ4OQ=="}], "type": "inlineReview"}]}