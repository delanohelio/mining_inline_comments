{"pr_number": 8006, "pr_title": "Authentication fixes", "pr_createdAt": "2020-03-20T02:42:20Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8006", "timeline": [{"oid": "5ccd864277ca0de1d8e3bfa5e16cc065d3f22267", "url": "https://github.com/quarkusio/quarkus/commit/5ccd864277ca0de1d8e3bfa5e16cc065d3f22267", "message": "Multiple authentication fixes\n\n- Use synthetic beans to configure form and basic auth\n- Allow multiple authentication mechanisms\n- Better default behaviour based on what is configured\n\nFixes #7768\nFixes #5284", "committedDate": "2020-03-20T03:09:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAwOTQzNw==", "url": "https://github.com/quarkusio/quarkus/pull/8006#discussion_r396009437", "bodyText": "In case of those 3 extensions on the class path, can we get a case where quarkus-oidc will an identity provider with the other matching extensions ?\nIMHO for a given credential type only a single authentication mechanism should be supported. So if the users add all 3 of those extensions plus some custom one for the same credential type then only one is selected which means they will need to choose what exactly is needed by adding only one of these extensions :-)", "author": "sberyozkin", "createdAt": "2020-03-21T17:03:59Z", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/security/HttpAuthenticator.java", "diffHunk": "@@ -24,33 +29,40 @@\n     @Inject\n     IdentityProviderManager identityProviderManager;\n \n-    final HttpAuthenticationMechanism mechanism;\n+    final HttpAuthenticationMechanism[] mechanisms;\n \n     public HttpAuthenticator() {\n-        mechanism = null;\n+        mechanisms = null;\n     }\n \n     @Inject\n     public HttpAuthenticator(Instance<HttpAuthenticationMechanism> instance,\n-            Instance<IdentityProvider<UsernamePasswordAuthenticationRequest>> usernamePassword) {\n-        if (instance.isResolvable()) {\n-            if (instance.isAmbiguous()) {\n-                throw new IllegalStateException(\"Multiple HTTP authentication mechanisms are not implemented yet, discovered \"\n-                        + instance.stream().collect(Collectors.toList()));\n+            Instance<IdentityProvider<?>> providers) {\n+        List<HttpAuthenticationMechanism> mechanisms = new ArrayList<>();\n+        for (HttpAuthenticationMechanism mechanism : instance) {\n+            boolean notFound = false;\n+            for (Class<? extends AuthenticationRequest> mechType : mechanism.getCredentialTypes()) {\n+                boolean found = false;\n+                for (IdentityProvider<?> i : providers) {\n+                    if (i.getRequestType().equals(mechType)) {", "originalCommit": "5ccd864277ca0de1d8e3bfa5e16cc065d3f22267", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MDYyOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8006#discussion_r396190629", "bodyText": "It's not the credential type that is the issue, it is the mechanism that is used to provide it. FORM and BASIC are both username/password, however there is no confusion as one is a POST and the other is a header. If two mechanims are both using Bearer auth then that is a problem.", "author": "stuartwdouglas", "createdAt": "2020-03-23T02:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAwOTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4NTE2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8006#discussion_r396385169", "bodyText": "@stuartwdouglas how the unexpected side-effects can be prevented then ?\nHere is one case: quarkus-smallrye-jwt is configured to accept tokens as the cookies, quarkus-oidc web-app application is getting an IdToken, but  quarkus-smallrye-jwt MpJwtValidator is picked up to validate this token, which can either be unexpectedly accepted or rejected (say due to the different expiry limits which apply to OIDC access and id tokens). This is a user error I guess but it feels we need to tighten something here:\nMay be do something as basic as restricting a number of HttpAuthenticationMechanism per credential type ?\nOr should users who need such combinations provide a custom mechanism which would delegate to either Form or Basic ? May be we can just ship an extension providing this composite mechanism. Or introduce CompositeHttpAuthenticationMechanism which if injected, takes priority over everything else and will return a set of HttpAuthenticationMechanisms. So if the user needs a composition, they'd only need to provide:\n@ApplicationScoped\nclass FormBasicHttpAuthMechanism {\n    Set<HttpAuthenticationMechanism> getMechanisms() {\n         // return as set\n         new FormHttpAuthenticationMechanism()\n         new BasicHttpAuthenticationMechanism()\n    }\n}\n\nwhich may be more predictable than the quarkus security automating this process ?\netc", "author": "sberyozkin", "createdAt": "2020-03-23T11:33:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAwOTQzNw=="}], "type": "inlineReview"}, {"oid": "f4c3c381fbc189d0c9edb2502128dc58b60011fb", "url": "https://github.com/quarkusio/quarkus/commit/f4c3c381fbc189d0c9edb2502128dc58b60011fb", "message": "Make it possible to initialize a synthetic bean during RUNTIME_INIT\n\n- follows up on https://github.com/quarkusio/quarkus/pull/5938", "committedDate": "2020-03-25T23:47:33Z", "type": "commit"}, {"oid": "53b3b483a1ac127a39e5563d8275818e0b5554fd", "url": "https://github.com/quarkusio/quarkus/commit/53b3b483a1ac127a39e5563d8275818e0b5554fd", "message": "Multiple authentication fixes\n\n- Use synthetic beans to configure form and basic auth\n- Allow multiple authentication mechanisms\n- Better default behaviour based on what is configured\n\nFixes #7768\nFixes #5284", "committedDate": "2020-03-26T00:19:50Z", "type": "commit"}, {"oid": "53b3b483a1ac127a39e5563d8275818e0b5554fd", "url": "https://github.com/quarkusio/quarkus/commit/53b3b483a1ac127a39e5563d8275818e0b5554fd", "message": "Multiple authentication fixes\n\n- Use synthetic beans to configure form and basic auth\n- Allow multiple authentication mechanisms\n- Better default behaviour based on what is configured\n\nFixes #7768\nFixes #5284", "committedDate": "2020-03-26T00:19:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjU4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8006#discussion_r398456582", "bodyText": "That is fine, we can support bearer,code-flow in the future when a given mechanism supports different types", "author": "sberyozkin", "createdAt": "2020-03-26T10:14:32Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcAuthenticationMechanism.java", "diffHunk": "@@ -41,4 +46,15 @@ private boolean isWebApp(RoutingContext context) {\n         return OidcTenantConfig.ApplicationType.WEB_APP == tenantContext.oidcConfig.applicationType;\n     }\n \n+    @Override\n+    public Set<Class<? extends AuthenticationRequest>> getCredentialTypes() {\n+        return Collections.singleton(TokenAuthenticationRequest.class);\n+    }\n+\n+    @Override\n+    public HttpCredentialTransport getCredentialTransport() {\n+        //not 100% correct, but enough for now\n+        //if OIDC is present we don't really want another bearer mechanism\n+        return new HttpCredentialTransport(HttpCredentialTransport.Type.AUTHORIZATION, \"bearer\");", "originalCommit": "53b3b483a1ac127a39e5563d8275818e0b5554fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}