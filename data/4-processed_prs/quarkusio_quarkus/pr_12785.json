{"pr_number": 12785, "pr_title": "Externalized Quarkus platform properties", "pr_createdAt": "2020-10-19T10:23:55Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12785", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzOTM1Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r507639357", "bodyText": "This could probably be removed. I added it to make sure the build order is always correct even when it's concurrent.", "author": "aloubyansky", "createdAt": "2020-10-19T10:28:12Z", "path": "core/deployment/pom.xml", "diffHunk": "@@ -15,6 +15,18 @@\n     <name>Quarkus - Core - Deployment</name>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-platform-properties</artifactId>\n+            <type>pom</type>\n+            <version>${project.version}</version>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>*</groupId>\n+                    <artifactId>*</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>", "originalCommit": "398e4cee9972f80956df0245d853c071c560c274", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "49a93cf2b404cb77f8c1bd345673a59ddef49c16", "url": "https://github.com/quarkusio/quarkus/commit/49a93cf2b404cb77f8c1bd345673a59ddef49c16", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-19T12:55:55Z", "type": "forcePushed"}, {"oid": "68d0226d3257fa6af463c39753c1c867a7a1138a", "url": "https://github.com/quarkusio/quarkus/commit/68d0226d3257fa6af463c39753c1c867a7a1138a", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-19T15:54:16Z", "type": "forcePushed"}, {"oid": "41835820cff3630ff9f4049fe70955506b7d7aa0", "url": "https://github.com/quarkusio/quarkus/commit/41835820cff3630ff9f4049fe70955506b7d7aa0", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-19T20:10:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NDc5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508454791", "bodyText": "should be endsWith, right?", "author": "michalszynkiewicz", "createdAt": "2020-10-20T12:23:28Z", "path": "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/BootstrapAppModelResolver.java", "diffHunk": "@@ -281,6 +291,31 @@ public boolean visitLeave(DependencyNode node) {\n                 .build();\n     }\n \n+    private void collectPlatformProperties(AppModel.Builder appBuilder, List<Dependency> managedDeps)\n+            throws AppModelResolverException {\n+        for (Dependency d : managedDeps) {\n+            // assuming platform properties artifacts have the same reserved groupId\n+            Artifact artifact = d.getArtifact();\n+            if (artifact.getArtifactId().contains(BootstrapConstants.PLATFORM_PROPERTIES_ARTIFACT_ID_SUFFIX)) {", "originalCommit": "41835820cff3630ff9f4049fe70955506b7d7aa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU1MzQ2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508553461", "bodyText": "Yes, fixed. Thanks!", "author": "aloubyansky", "createdAt": "2020-10-20T14:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NDc5MQ=="}], "type": "inlineReview"}, {"oid": "9da89271cb0bb351742e280c2582048dcf1ff820", "url": "https://github.com/quarkusio/quarkus/commit/9da89271cb0bb351742e280c2582048dcf1ff820", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-20T14:22:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4ODM5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508588392", "bodyText": "is the extension here the file extension?", "author": "michalszynkiewicz", "createdAt": "2020-10-20T15:04:43Z", "path": "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/BootstrapAppModelResolver.java", "diffHunk": "@@ -281,6 +291,31 @@ public boolean visitLeave(DependencyNode node) {\n                 .build();\n     }\n \n+    private void collectPlatformProperties(AppModel.Builder appBuilder, List<Dependency> managedDeps)\n+            throws AppModelResolverException {\n+        for (Dependency d : managedDeps) {\n+            // assuming platform properties artifacts have the same reserved groupId\n+            Artifact artifact = d.getArtifact();\n+            if (artifact.getArtifactId().endsWith(BootstrapConstants.PLATFORM_PROPERTIES_ARTIFACT_ID_SUFFIX)) {\n+                final AppArtifact appArtifact = artifact.getExtension().equals(\"properties\") ? toAppArtifact(artifact)", "originalCommit": "9da89271cb0bb351742e280c2582048dcf1ff820", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5MDQxNA==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508590414", "bodyText": "yes, it's the file extension.", "author": "aloubyansky", "createdAt": "2020-10-20T15:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4ODM5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4OTI1MA==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508589250", "bodyText": "creating new AppArtifact looks a bit weird to me. When will it be necessary to create it? Are we sure that resolve(appArtifact) in this case returns an existing thing?", "author": "michalszynkiewicz", "createdAt": "2020-10-20T15:05:49Z", "path": "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/BootstrapAppModelResolver.java", "diffHunk": "@@ -281,6 +291,31 @@ public boolean visitLeave(DependencyNode node) {\n                 .build();\n     }\n \n+    private void collectPlatformProperties(AppModel.Builder appBuilder, List<Dependency> managedDeps)\n+            throws AppModelResolverException {\n+        for (Dependency d : managedDeps) {\n+            // assuming platform properties artifacts have the same reserved groupId\n+            Artifact artifact = d.getArtifact();\n+            if (artifact.getArtifactId().endsWith(BootstrapConstants.PLATFORM_PROPERTIES_ARTIFACT_ID_SUFFIX)) {\n+                final AppArtifact appArtifact = artifact.getExtension().equals(\"properties\") ? toAppArtifact(artifact)\n+                        : new AppArtifact(artifact.getGroupId(), artifact.getArtifactId(), artifact.getClassifier(),", "originalCommit": "9da89271cb0bb351742e280c2582048dcf1ff820", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NjM2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508596361", "bodyText": "It's just making sure the type of the artifact is always properties. If we go with this approach then BootstrapConstants.PLATFORM_PROPERTIES_ARTIFACT_ID_SUFFIX is becoming a reserved suffix requiring artifacts with this suffix to be of properties type. Because that's what we are looking for. OTOH, we could support other formats too.\nYou have a point. The reason I did it this way was I didn't add the type of the artifact to the BOM, so it appeared here as a jar, so I thought that could be a typical \"mistake\" and decided to not require <type>properties</type> in the BOM.", "author": "aloubyansky", "createdAt": "2020-10-20T15:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4OTI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4OTM1OA==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508589358", "bodyText": "where is this assumption in the code?", "author": "michalszynkiewicz", "createdAt": "2020-10-20T15:05:56Z", "path": "independent-projects/bootstrap/maven-resolver/src/main/java/io/quarkus/bootstrap/resolver/BootstrapAppModelResolver.java", "diffHunk": "@@ -281,6 +291,31 @@ public boolean visitLeave(DependencyNode node) {\n                 .build();\n     }\n \n+    private void collectPlatformProperties(AppModel.Builder appBuilder, List<Dependency> managedDeps)\n+            throws AppModelResolverException {\n+        for (Dependency d : managedDeps) {\n+            // assuming platform properties artifacts have the same reserved groupId", "originalCommit": "9da89271cb0bb351742e280c2582048dcf1ff820", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NzA3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r508597077", "bodyText": "ah, it's a leftover, i'll remove the comment.", "author": "aloubyansky", "createdAt": "2020-10-20T15:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4OTM1OA=="}], "type": "inlineReview"}, {"oid": "2709fab70cc26ba73cf4e93869707e50cf8dc272", "url": "https://github.com/quarkusio/quarkus/commit/2709fab70cc26ba73cf4e93869707e50cf8dc272", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-20T15:18:16Z", "type": "forcePushed"}, {"oid": "2f82434b4ff204340b43e24b085f94171d5a4488", "url": "https://github.com/quarkusio/quarkus/commit/2f82434b4ff204340b43e24b085f94171d5a4488", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-20T15:19:17Z", "type": "forcePushed"}, {"oid": "7ea9a180e56c2e1b07de0ffaa56d02ff354990f2", "url": "https://github.com/quarkusio/quarkus/commit/7ea9a180e56c2e1b07de0ffaa56d02ff354990f2", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-20T19:48:16Z", "type": "forcePushed"}, {"oid": "034d49deaeba84a3deede9e5f1720ee0cf1e72ee", "url": "https://github.com/quarkusio/quarkus/commit/034d49deaeba84a3deede9e5f1720ee0cf1e72ee", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-21T04:25:21Z", "type": "forcePushed"}, {"oid": "16fdeeaefa1e449338fc8e4a7393ed6d10d5eb0d", "url": "https://github.com/quarkusio/quarkus/commit/16fdeeaefa1e449338fc8e4a7393ed6d10d5eb0d", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-27T10:34:58Z", "type": "forcePushed"}, {"oid": "0c8117819e193e177a809fca6ef08fa07d2b9e19", "url": "https://github.com/quarkusio/quarkus/commit/0c8117819e193e177a809fca6ef08fa07d2b9e19", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-27T11:25:44Z", "type": "forcePushed"}, {"oid": "91aaaa891b73f363495e6e99d0c1176a42f3bc00", "url": "https://github.com/quarkusio/quarkus/commit/91aaaa891b73f363495e6e99d0c1176a42f3bc00", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-28T14:29:35Z", "type": "forcePushed"}, {"oid": "54cb0a545d87365e18e2e5ce3ba166b6b8d176ca", "url": "https://github.com/quarkusio/quarkus/commit/54cb0a545d87365e18e2e5ce3ba166b6b8d176ca", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-28T15:03:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUzNzEyNw==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r514537127", "bodyText": "Since these would be default values, they should have a low ordinal.  The constant DEFAULT_ORDINAL is the default ordinal for config sources, not the ordinal for default config sources, in case that was a point of confusion.  Using the default ordinal means that the defaults may take precedence over some explicitly configured values.\nOur default value configuration source is using an ordinal of Integer.MIN_VALUE (see io.quarkus.deployment.configuration.DefaultValuesConfigurationSource), so I think it would be appropriate to use, say, Integer.MIN_VALUE + 1000 or something along those lines.", "author": "dmlloyd", "createdAt": "2020-10-29T20:11:07Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -183,9 +201,11 @@ private static boolean isRecorder(AnnotatedElement element) {\n                 reader.getBuildTimePatternMap());\n         final DefaultValuesConfigurationSource ds2 = new DefaultValuesConfigurationSource(\n                 reader.getBuildTimeRunTimePatternMap());\n+        final PropertiesConfigSource platformConfigSource = new PropertiesConfigSource(platformProperties, \"Quarkus platform\",\n+                ConfigSource.DEFAULT_ORDINAL);", "originalCommit": "54cb0a545d87365e18e2e5ce3ba166b6b8d176ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3MjEwMw==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r515272103", "bodyText": "Thanks, fixed it and also added a couple tests to make sure the platform properties can be overriden in the application.properties and the command line with -D.", "author": "aloubyansky", "createdAt": "2020-10-30T17:40:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUzNzEyNw=="}], "type": "inlineReview"}, {"oid": "c80abf192db8c8271990583420fb7ad6ae3cdeec", "url": "https://github.com/quarkusio/quarkus/commit/c80abf192db8c8271990583420fb7ad6ae3cdeec", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-10-30T17:38:49Z", "type": "forcePushed"}, {"oid": "7639267f7f9c077d0bd7f95247ef0092b1682eed", "url": "https://github.com/quarkusio/quarkus/commit/7639267f7f9c077d0bd7f95247ef0092b1682eed", "message": "Require platform properties to have the 'platform.' prefix", "committedDate": "2020-11-02T13:55:17Z", "type": "forcePushed"}, {"oid": "29fcbf48ac8a88bfa6d249d98b656f3991ca7349", "url": "https://github.com/quarkusio/quarkus/commit/29fcbf48ac8a88bfa6d249d98b656f3991ca7349", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-11-02T17:48:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjgxOQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516232819", "bodyText": "I was thinking about this further and I had a concern.  The platform configuration source most likely should be based on a io.smallrye.config.KeyMapBackedConfigSource which can have a default value that matches a pattern.  This would allow configuration keys which have map key components to have a default value.", "author": "dmlloyd", "createdAt": "2020-11-02T20:23:01Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -183,9 +200,13 @@ private static boolean isRecorder(AnnotatedElement element) {\n                 reader.getBuildTimePatternMap());\n         final DefaultValuesConfigurationSource ds2 = new DefaultValuesConfigurationSource(\n                 reader.getBuildTimeRunTimePatternMap());\n+        final PropertiesConfigSource platformConfigSource = new PropertiesConfigSource(platformProperties, \"Quarkus platform\",\n+                // Our default value configuration source is using an ordinal of Integer.MIN_VALUE\n+                // (see io.quarkus.deployment.configuration.DefaultValuesConfigurationSource)\n+                Integer.MIN_VALUE + 1000);", "originalCommit": "29fcbf48ac8a88bfa6d249d98b656f3991ca7349", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDM0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516240345", "bodyText": "Should I be looking into creating values as nesed KeyMaps?", "author": "aloubyansky", "createdAt": "2020-11-02T20:38:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjgxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0Mjc0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516242741", "bodyText": "Right, IIRC it would look something like this to add some key under quarkus.foo.bar.*.baz:\nkeyMap.findOrCreate(\"quarkus\", \"foo\", \"bar\").getOrCreateAny().findOrCreate(\"baz\").putRootValue(\"the-default-value\");", "author": "dmlloyd", "createdAt": "2020-11-02T20:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjgxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0NjQyOA==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516246428", "bodyText": "Is there some kind of utility for that I should be splitting the key \"manually\"?", "author": "aloubyansky", "createdAt": "2020-11-02T20:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjgxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0Nzc3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516247777", "bodyText": "There's no canonical input format for key patterns (just the conventional style I used above), so there isn't really an answer to that question.  Ideally we could avoid having any kind of flat map (e.g. properties) as an input source.  Something hierarchical (e.g. YAML) could sidestep the problem.  Otherwise, yes, you'll have to devise an unambiguous syntax and a splitter for that syntax.", "author": "dmlloyd", "createdAt": "2020-11-02T20:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjgxOQ=="}], "type": "inlineReview"}, {"oid": "e62b22e62999f09eec5b53ca36af2f4e8fb1443e", "url": "https://github.com/quarkusio/quarkus/commit/e62b22e62999f09eec5b53ca36af2f4e8fb1443e", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-11-03T09:00:04Z", "type": "forcePushed"}, {"oid": "4fe2adf7cbba95fc0bb95df6c038198508fcfdab", "url": "https://github.com/quarkusio/quarkus/commit/4fe2adf7cbba95fc0bb95df6c038198508fcfdab", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-11-03T09:04:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUxMjg1MA==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516512850", "bodyText": "@dmlloyd is this looking ok?", "author": "aloubyansky", "createdAt": "2020-11-03T09:05:53Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -184,8 +203,19 @@ private static boolean isRecorder(AnnotatedElement element) {\n         final DefaultValuesConfigurationSource ds2 = new DefaultValuesConfigurationSource(\n                 reader.getBuildTimeRunTimePatternMap());\n         final PropertiesConfigSource pcs = new PropertiesConfigSource(buildSystemProps, \"Build system\");\n-\n-        builder.withSources(ds1, ds2, pcs);\n+        if (platformProperties.isEmpty()) {\n+            builder.withSources(ds1, ds2, pcs);\n+        } else {\n+            final KeyMap<String> props = new KeyMap<>(platformProperties.size());\n+            for (Map.Entry<String, String> prop : platformProperties.entrySet()) {\n+                props.findOrAdd(prop.getKey().split(\"\\\\.\")).putRootValue(prop.getValue());\n+            }\n+            final KeyMapBackedConfigSource platformConfigSource = new KeyMapBackedConfigSource(\"Quarkus platform\",\n+                    // Our default value configuration source is using an ordinal of Integer.MIN_VALUE\n+                    // (see io.quarkus.deployment.configuration.DefaultValuesConfigurationSource)\n+                    Integer.MIN_VALUE + 1000, props);\n+            builder.withSources(ds1, ds2, platformConfigSource, pcs);", "originalCommit": "4fe2adf7cbba95fc0bb95df6c038198508fcfdab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NDk3OQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516644979", "bodyText": "Yes, except the simple split above doesn't allow for embedded . in segments.  Actually there is a helpful utility, now that I remember a bit better... let me make a suggestion.", "author": "dmlloyd", "createdAt": "2020-11-03T12:54:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUxMjg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTk4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516645981", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            props.findOrAdd(prop.getKey().split(\"\\\\.\")).putRootValue(prop.getValue());\n          \n          \n            \n                            props.findOrAdd(new NameIterator(prop.getKey())).putRootValue(prop.getValue());\n          \n      \n    \n    \n  \n\nYou'll have to add an import for NameIterator too.  But it occurred to me that NameIterator already handles interior \" and escaping for you, and is more efficient than split anyway.", "author": "dmlloyd", "createdAt": "2020-11-03T12:56:38Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -184,8 +203,19 @@ private static boolean isRecorder(AnnotatedElement element) {\n         final DefaultValuesConfigurationSource ds2 = new DefaultValuesConfigurationSource(\n                 reader.getBuildTimeRunTimePatternMap());\n         final PropertiesConfigSource pcs = new PropertiesConfigSource(buildSystemProps, \"Build system\");\n-\n-        builder.withSources(ds1, ds2, pcs);\n+        if (platformProperties.isEmpty()) {\n+            builder.withSources(ds1, ds2, pcs);\n+        } else {\n+            final KeyMap<String> props = new KeyMap<>(platformProperties.size());\n+            for (Map.Entry<String, String> prop : platformProperties.entrySet()) {\n+                props.findOrAdd(prop.getKey().split(\"\\\\.\")).putRootValue(prop.getValue());", "originalCommit": "4fe2adf7cbba95fc0bb95df6c038198508fcfdab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcxNDYzOA==", "url": "https://github.com/quarkusio/quarkus/pull/12785#discussion_r516714638", "bodyText": "Thanks, @dmlloyd! Applied.", "author": "aloubyansky", "createdAt": "2020-11-03T14:38:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTk4MQ=="}], "type": "inlineReview"}, {"oid": "3d6574f9f000816e09d43150362c52901bb5d773", "url": "https://github.com/quarkusio/quarkus/commit/3d6574f9f000816e09d43150362c52901bb5d773", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-11-03T14:36:46Z", "type": "commit"}, {"oid": "3d6574f9f000816e09d43150362c52901bb5d773", "url": "https://github.com/quarkusio/quarkus/commit/3d6574f9f000816e09d43150362c52901bb5d773", "message": "Introduces support for Quarkus platform properties as an artifact that is configured in the dependencyManagement section of the platform BOM.\nPlatform properties can be used to set the default values that are platform release-specific. E.g. quarkus.native.builder-image, etc", "committedDate": "2020-11-03T14:36:46Z", "type": "forcePushed"}]}