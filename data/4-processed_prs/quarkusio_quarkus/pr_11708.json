{"pr_number": 11708, "pr_title": "Turn StartupBuildSteps.annotationTransformer() into an AutoAddScopeBuildItem", "pr_createdAt": "2020-08-28T11:08:44Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11708", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3MjQ5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479172492", "bodyText": "This rule is applied automatically: https://github.com/quarkusio/quarkus/blob/master/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/AutoAddScopeProcessor.java#L51", "author": "mkouba", "createdAt": "2020-08-28T11:37:02Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -51,26 +48,15 @@\n     private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n \n     @BuildStep\n-    AnnotationsTransformerBuildItem annotationTransformer(CustomScopeAnnotationsBuildItem customScopes) {\n-        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n-\n-            @Override\n-            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n-                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n-            }\n-\n-            @Override\n-            public void transform(TransformationContext context) {\n-                if (context.isClass() && !customScopes.isScopeDeclaredOn(context.getTarget().asClass())) {\n-                    // Class with no built-in scope annotation but with @Scheduled method\n-                    if (Annotations.contains(context.getTarget().asClass().classAnnotations(), STARTUP_NAME)) {\n-                        LOGGER.debugf(\"Found @Startup on a class %s with no scope annotations - adding @ApplicationScoped\",\n-                                context.getTarget());\n-                        context.transform().add(ApplicationScoped.class).done();\n-                    }\n-                }\n-            }\n-        });\n+    AutoAddScopeBuildItem addScope(CustomScopeAnnotationsBuildItem customScopes) {\n+        // Class with no built-in scope annotation but with @Startup method\n+        return AutoAddScopeBuildItem.builder()\n+                .defaultScope(BuiltinScope.APPLICATION)\n+                .match((clazz, annotations, index) -> clazz.classAnnotation(STARTUP_NAME) != null\n+                        && !customScopes.isScopeDeclaredOn(clazz))", "originalCommit": "83376970e1a462feaa1553dc21cd5949b53415f5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3MzQxMw==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479173413", "bodyText": "You can use AutoAddScopeBuildItem.Builder.containsAnnotations(DotName...) instead...", "author": "mkouba", "createdAt": "2020-08-28T11:37:54Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -51,26 +48,15 @@\n     private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n \n     @BuildStep\n-    AnnotationsTransformerBuildItem annotationTransformer(CustomScopeAnnotationsBuildItem customScopes) {\n-        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n-\n-            @Override\n-            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n-                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n-            }\n-\n-            @Override\n-            public void transform(TransformationContext context) {\n-                if (context.isClass() && !customScopes.isScopeDeclaredOn(context.getTarget().asClass())) {\n-                    // Class with no built-in scope annotation but with @Scheduled method\n-                    if (Annotations.contains(context.getTarget().asClass().classAnnotations(), STARTUP_NAME)) {\n-                        LOGGER.debugf(\"Found @Startup on a class %s with no scope annotations - adding @ApplicationScoped\",\n-                                context.getTarget());\n-                        context.transform().add(ApplicationScoped.class).done();\n-                    }\n-                }\n-            }\n-        });\n+    AutoAddScopeBuildItem addScope(CustomScopeAnnotationsBuildItem customScopes) {\n+        // Class with no built-in scope annotation but with @Startup method\n+        return AutoAddScopeBuildItem.builder()\n+                .defaultScope(BuiltinScope.APPLICATION)\n+                .match((clazz, annotations, index) -> clazz.classAnnotation(STARTUP_NAME) != null", "originalCommit": "83376970e1a462feaa1553dc21cd5949b53415f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MjU4OA==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479342588", "bodyText": "@mkouba but this will no longer have the same behaviour. Note that before the annotation transformer only cared about class-level annotations. Your suggestion will make it apply to producers as well. Namely producers without any scope such as this one in a test. I'd say that's not intended?", "author": "manovotn", "createdAt": "2020-08-28T14:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3MzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NzY2NA==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479497664", "bodyText": "Hm, I'm not quite sure. The truth is that we do add @Dependent for producers by default. In any case, you can replace the lambda with AutoAddScopeBuildItem#isAnnotatedWith().", "author": "mkouba", "createdAt": "2020-08-28T19:34:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3MzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwNzc0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479507743", "bodyText": "The truth is that we do add @dependent for producers by default.\n\nYeah, and that's pretty much spec based. I don't think we want to change that.\n\nIn any case, you can replace the lambda with AutoAddScopeBuildItem#isAnnotatedWith().\n\nUff, I read that class at least twice but never noticed that method. Fridays...\nI will do that once I am back in front of PC on Mon.", "author": "manovotn", "createdAt": "2020-08-28T19:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3MzQxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3NjQwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479176405", "bodyText": "This is already handled in the unremovableBeans() method. We should either remove that method or remove this requirement...", "author": "mkouba", "createdAt": "2020-08-28T11:40:31Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -51,26 +48,15 @@\n     private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n \n     @BuildStep\n-    AnnotationsTransformerBuildItem annotationTransformer(CustomScopeAnnotationsBuildItem customScopes) {\n-        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n-\n-            @Override\n-            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n-                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n-            }\n-\n-            @Override\n-            public void transform(TransformationContext context) {\n-                if (context.isClass() && !customScopes.isScopeDeclaredOn(context.getTarget().asClass())) {\n-                    // Class with no built-in scope annotation but with @Scheduled method\n-                    if (Annotations.contains(context.getTarget().asClass().classAnnotations(), STARTUP_NAME)) {\n-                        LOGGER.debugf(\"Found @Startup on a class %s with no scope annotations - adding @ApplicationScoped\",\n-                                context.getTarget());\n-                        context.transform().add(ApplicationScoped.class).done();\n-                    }\n-                }\n-            }\n-        });\n+    AutoAddScopeBuildItem addScope(CustomScopeAnnotationsBuildItem customScopes) {\n+        // Class with no built-in scope annotation but with @Startup method\n+        return AutoAddScopeBuildItem.builder()\n+                .defaultScope(BuiltinScope.APPLICATION)\n+                .match((clazz, annotations, index) -> clazz.classAnnotation(STARTUP_NAME) != null\n+                        && !customScopes.isScopeDeclaredOn(clazz))\n+                .unremovable()", "originalCommit": "83376970e1a462feaa1553dc21cd5949b53415f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MTA4NA==", "url": "https://github.com/quarkusio/quarkus/pull/11708#discussion_r479341084", "bodyText": "Fair enough, I noticed the method but forgot to remove this line.", "author": "manovotn", "createdAt": "2020-08-28T14:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3NjQwNQ=="}], "type": "inlineReview"}, {"oid": "01d3fdc4b75ba3e465c0c35d1fb9116463615d89", "url": "https://github.com/quarkusio/quarkus/commit/01d3fdc4b75ba3e465c0c35d1fb9116463615d89", "message": "Turn StartupBuildSteps.annotationTransformer() into an AutoAddScopeBuildItem.", "committedDate": "2020-08-28T14:30:51Z", "type": "forcePushed"}, {"oid": "0c1d7e33aaab03ff9db3ac9abc4cf5379e8910d8", "url": "https://github.com/quarkusio/quarkus/commit/0c1d7e33aaab03ff9db3ac9abc4cf5379e8910d8", "message": "Turn StartupBuildSteps.annotationTransformer() into an AutoAddScopeBuildItem.", "committedDate": "2020-08-31T08:00:14Z", "type": "commit"}, {"oid": "0c1d7e33aaab03ff9db3ac9abc4cf5379e8910d8", "url": "https://github.com/quarkusio/quarkus/commit/0c1d7e33aaab03ff9db3ac9abc4cf5379e8910d8", "message": "Turn StartupBuildSteps.annotationTransformer() into an AutoAddScopeBuildItem.", "committedDate": "2020-08-31T08:00:14Z", "type": "forcePushed"}]}