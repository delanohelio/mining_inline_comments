{"pr_number": 12213, "pr_title": "Mutiny 0.8.1", "pr_createdAt": "2020-09-20T09:12:04Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12213", "timeline": [{"oid": "9c8dbc8db1f793f0cbd638e6ac43907f282cb09b", "url": "https://github.com/quarkusio/quarkus/commit/9c8dbc8db1f793f0cbd638e6ac43907f282cb09b", "message": "Bump to Mutiny 0.8.0\n\nAlso fix parametric types in the code base.", "committedDate": "2020-09-20T08:31:13Z", "type": "commit"}, {"oid": "aad1071c8a6e1c4c688be1c190ca5a63bbb772a5", "url": "https://github.com/quarkusio/quarkus/commit/aad1071c8a6e1c4c688be1c190ca5a63bbb772a5", "message": "Mutiny dropped exception logging handler", "committedDate": "2020-09-20T08:31:14Z", "type": "commit"}, {"oid": "f189a75e93df77ec3f2ff73434cbebaf8d24351a", "url": "https://github.com/quarkusio/quarkus/commit/f189a75e93df77ec3f2ff73434cbebaf8d24351a", "message": "Configure the Mutiny thread blocking checker\n\nForbid blocking a Vert.x event-loop.", "committedDate": "2020-09-20T08:31:15Z", "type": "commit"}, {"oid": "c161615270d340e2ab77285e37c28162939a33d2", "url": "https://github.com/quarkusio/quarkus/commit/c161615270d340e2ab77285e37c28162939a33d2", "message": "Remove the logger from the heap", "committedDate": "2020-09-20T13:25:51Z", "type": "commit"}, {"oid": "fcd0acef18a66e07b455a3f078501671bf5e83c1", "url": "https://github.com/quarkusio/quarkus/commit/fcd0acef18a66e07b455a3f078501671bf5e83c1", "message": "Move Mutiny infrastructure initialization to STATIC_INIT", "committedDate": "2020-09-20T16:26:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMDg4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491810887", "bodyText": "[Picky] - We could have done everything in a single method.", "author": "cescoffier", "createdAt": "2020-09-21T06:14:27Z", "path": "extensions/mutiny/deployment/src/main/java/io/quarkus/mutiny/deployment/MutinyProcessor.java", "diffHunk": "@@ -23,4 +23,16 @@ public void initExecutor(ExecutorBuildItem executorBuildItem, MutinyInfrastructu\n         ExecutorService executor = executorBuildItem.getExecutorProxy();\n         recorder.configureMutinyInfrastructure(executor);\n     }\n+\n+    @BuildStep\n+    @Record(ExecutionTime.STATIC_INIT)\n+    public void defineDroppedExceptionHandler(MutinyInfrastructure recorder) {\n+        recorder.configureDroppedExceptionHandler();", "originalCommit": "fcd0acef18a66e07b455a3f078501671bf5e83c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzOTQ0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491839442", "bodyText": "Ok let me change that. I was wondering if that was a pattern to delegate to a class there, but since the actual code is in runtime and we're in a static init... yeah \ud83d\udc4d", "author": "jponge", "createdAt": "2020-09-21T07:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMDg4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1Mjk0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491852946", "bodyText": "Nevermind I get it now", "author": "jponge", "createdAt": "2020-09-21T07:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMDg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTEzMg==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491811132", "bodyText": "Should we cache the logger?", "author": "cescoffier", "createdAt": "2020-09-21T06:15:13Z", "path": "extensions/mutiny/runtime/src/main/java/io/quarkus/mutiny/runtime/MutinyInfrastructure.java", "diffHunk": "@@ -11,4 +15,23 @@\n     public void configureMutinyInfrastructure(ExecutorService exec) {\n         Infrastructure.setDefaultExecutor(exec);\n     }\n+\n+    public void configureDroppedExceptionHandler() {\n+        Infrastructure.setDroppedExceptionHandler(new Consumer<Throwable>() {\n+            @Override\n+            public void accept(Throwable throwable) {\n+                Logger.getLogger(MutinyInfrastructure.class).error(\"Mutiny had to drop the following exception\", throwable);", "originalCommit": "fcd0acef18a66e07b455a3f078501671bf5e83c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTI1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491811255", "bodyText": "Can we add the drop site too?", "author": "cescoffier", "createdAt": "2020-09-21T06:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTEzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0MDE5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491840195", "bodyText": "It should be infrequent enough, but I can try moving it back to the heap. In earlier iterations I had GraalVM compilation issues, but it was my bad understanding of the ExecutionTime scopes.", "author": "jponge", "createdAt": "2020-09-21T07:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTEzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1NDY2NA==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491854664", "bodyText": "Can we add the drop site too?\n\nSo far we get an exception like:\n2020-09-21 09:56:44,922 ERROR [io.qua.mut.run.MutinyInfrastructure] (main) Mutiny had to drop the following exception: java.io.IOException: boom\n\tat io.quarkus.mutiny.deployment.test.MutinyTest$BeanUsingMutiny.lambda$droppedException$2(MutinyTest.java:123)\n\tat io.smallrye.mutiny.operators.UniOnCancellationCall$1$1.execute(UniOnCancellationCall.java:40)\n\tat io.smallrye.mutiny.operators.UniOnCancellationCall$1$1.cancel(UniOnCancellationCall.java:30)\n\tat io.smallrye.mutiny.operators.UniSerializedSubscriber.cancel(UniSerializedSubscriber.java:124)\n\tat io.smallrye.mutiny.operators.UniSerializedSubscriber.cancel(UniSerializedSubscriber.java:124)\n\tat io.smallrye.mutiny.helpers.UniCallbackSubscriber.cancel(UniCallbackSubscriber.java:79)\n\tat io.quarkus.mutiny.deployment.test.MutinyTest.testDroppedException(MutinyTest.java:61)\n(...)\n\nWe will likely make the stack trace better when we tackle smallrye/smallrye-mutiny#177", "author": "jponge", "createdAt": "2020-09-21T08:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTEzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTUyMw==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491811523", "bodyText": "Can you add a comment about why we use that strategy (avoid depending on Vert.x explicitly, also avoid to select worker threads).", "author": "cescoffier", "createdAt": "2020-09-21T06:16:31Z", "path": "extensions/mutiny/runtime/src/main/java/io/quarkus/mutiny/runtime/MutinyInfrastructure.java", "diffHunk": "@@ -11,4 +15,23 @@\n     public void configureMutinyInfrastructure(ExecutorService exec) {\n         Infrastructure.setDefaultExecutor(exec);\n     }\n+\n+    public void configureDroppedExceptionHandler() {\n+        Infrastructure.setDroppedExceptionHandler(new Consumer<Throwable>() {\n+            @Override\n+            public void accept(Throwable throwable) {\n+                Logger.getLogger(MutinyInfrastructure.class).error(\"Mutiny had to drop the following exception\", throwable);\n+            }\n+        });\n+    }\n+\n+    public void configureThreadBlockingChecker() {\n+        Infrastructure.setCanCallerThreadBeBlockedSupplier(new BooleanSupplier() {\n+            @Override\n+            public boolean getAsBoolean() {\n+                String threadName = Thread.currentThread().getName();\n+                return !threadName.contains(\"vertx-eventloop-thread-\");", "originalCommit": "fcd0acef18a66e07b455a3f078501671bf5e83c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzOTYzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/12213#discussion_r491839639", "bodyText": "Yep", "author": "jponge", "createdAt": "2020-09-21T07:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTUyMw=="}], "type": "inlineReview"}, {"oid": "10b93d016aa7d39625e7ce1d5735ad40c9b0d7fe", "url": "https://github.com/quarkusio/quarkus/commit/10b93d016aa7d39625e7ce1d5735ad40c9b0d7fe", "message": "Address PR feedback", "committedDate": "2020-09-21T08:30:16Z", "type": "commit"}, {"oid": "10b93d016aa7d39625e7ce1d5735ad40c9b0d7fe", "url": "https://github.com/quarkusio/quarkus/commit/10b93d016aa7d39625e7ce1d5735ad40c9b0d7fe", "message": "Address PR feedback", "committedDate": "2020-09-21T08:30:16Z", "type": "forcePushed"}, {"oid": "62441971ee90246e8183a49780556299dc1e8f7f", "url": "https://github.com/quarkusio/quarkus/commit/62441971ee90246e8183a49780556299dc1e8f7f", "message": "Bump to Mutiny 0.8.1", "committedDate": "2020-09-21T12:29:42Z", "type": "commit"}]}