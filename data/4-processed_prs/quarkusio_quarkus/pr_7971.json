{"pr_number": 7971, "pr_title": "Gradle added to Amazon Lambda archetype", "pr_createdAt": "2020-03-19T12:39:55Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7971", "timeline": [{"oid": "eaf1a141103168a881a2c758d83b8d19f9a1a63f", "url": "https://github.com/quarkusio/quarkus/commit/eaf1a141103168a881a2c758d83b8d19f9a1a63f", "message": "Gradle added to archetype", "committedDate": "2020-03-19T12:28:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0NTAzMA==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395245030", "bodyText": "Shouldn't this be io.quarkus:quarkus-test-amazon-lambda:${quarkusPlatformVersion}.\nThe bom can't figure it out.", "author": "Nxtra", "createdAt": "2020-03-19T18:45:49Z", "path": "extensions/amazon-lambda/maven-archetype/src/main/resources/archetype-resources/build.gradle", "diffHunk": "@@ -0,0 +1,32 @@\n+plugins {\n+    id 'java'\n+    id 'io.quarkus'\n+}\n+\n+repositories {\n+     mavenLocal()\n+     mavenCentral()\n+}\n+\n+dependencies {\n+    implementation enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n+    implementation 'io.quarkus:quarkus-resteasy'\n+    implementation 'io.quarkus:quarkus-amazon-lambda'\n+\n+    testImplementation  \"io.quarkus:quarkus-test-amazon-lambda\"", "originalCommit": "eaf1a141103168a881a2c758d83b8d19f9a1a63f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyMTM0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395321342", "bodyText": "If you're on HEAD (999-SNAPSHOT), it will have this already, per PR #7925", "author": "oztimpower", "createdAt": "2020-03-19T21:10:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0NTAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzODA0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395438045", "bodyText": "Got it, thanks!", "author": "Nxtra", "createdAt": "2020-03-20T04:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0NTAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5Mjk5MA==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395292990", "bodyText": "When shipping the native binary to Lambda we need to create the function.zip file with the binary renamed to bootstrap insight. Can we use the a combination of the distribution plugin, distZip or custom buildZip task to do that?", "author": "Nxtra", "createdAt": "2020-03-19T20:13:23Z", "path": "extensions/amazon-lambda/maven-archetype/src/main/resources/archetype-resources/build.gradle", "diffHunk": "@@ -0,0 +1,32 @@\n+plugins {\n+    id 'java'\n+    id 'io.quarkus'\n+}\n+\n+repositories {\n+     mavenLocal()\n+     mavenCentral()\n+}\n+\n+dependencies {\n+    implementation enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n+    implementation 'io.quarkus:quarkus-resteasy'\n+    implementation 'io.quarkus:quarkus-amazon-lambda'\n+\n+    testImplementation  \"io.quarkus:quarkus-test-amazon-lambda\"\n+    testImplementation 'io.quarkus:quarkus-junit5'\n+    testImplementation 'io.rest-assured:rest-assured'\n+}\n+", "originalCommit": "eaf1a141103168a881a2c758d83b8d19f9a1a63f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxOTUzMA==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395319530", "bodyText": "Don't worry too much about that.  I'm currently working on having the extension generate the zip.", "author": "patriot1burke", "createdAt": "2020-03-19T21:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5Mjk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyMjA1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395322052", "bodyText": "Quarkus will generate this for you, via gradle buildNative.  No need for custom tasks.", "author": "oztimpower", "createdAt": "2020-03-19T21:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5Mjk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjEyOA==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395436128", "bodyText": "@patriot1burke okay, so for now I rename the runner to bootstrap and zip it up to function.zip?\n@oztimpower , quarkus will generate the runner but atm only mvn is creating the function.zip. As I understand this will be covered by @patriot1burke 's extension.", "author": "Nxtra", "createdAt": "2020-03-20T04:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5Mjk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjkyNw==", "url": "https://github.com/quarkusio/quarkus/pull/7971#discussion_r395436927", "bodyText": "Yes apologies, I forgot I had similar workarounds as you on the function.zip with Gradle, I did it via a one liner in manage.sh, and passed a flag if it was gradle or maven (to toggle the target/build).  Maybe I should PR that also.  For me I've always kept a Maven and Gradle build up to date on the projects as Gradle is only Preview and the Maven version put simply \"just works\"", "author": "oztimpower", "createdAt": "2020-03-20T04:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI5Mjk5MA=="}], "type": "inlineReview"}]}