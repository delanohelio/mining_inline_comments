{"pr_number": 7566, "pr_title": "Improve the documentation on Kotlin data class", "pr_createdAt": "2020-03-04T13:40:15Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7566", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3MzMyNA==", "url": "https://github.com/quarkusio/quarkus/pull/7566#discussion_r387673324", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.\n          \n          \n            \n            This will only work when the entity extends `PanacheMongoEntityBase` and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.", "author": "geoand", "createdAt": "2020-03-04T13:43:13Z", "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -653,17 +653,27 @@ See this part of the documentation: link:mongodb#simplifying-mongodb-client-usag\n Another option is to use the `@BsonCreator` annotation to tell the `PojoCodec` to use the Kotlin data class default constructor,\n in this case all constructor parameters have to be annotated with `@BsonProperty`: see link:{mongodb-doc-root-url}/bson/pojos/#supporting-pojos-without-no-args-constructors[Supporting pojos without no args constructor].\n \n+This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.", "originalCommit": "2626914f02792d47e1dbdbd037c3bc2ec1dfbf25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3MzU5MA==", "url": "https://github.com/quarkusio/quarkus/pull/7566#discussion_r387673590", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Here we use `var` but `val` can also be used.\n          \n          \n            \n            Here we use `var` but note that `val` can also be used.", "author": "geoand", "createdAt": "2020-03-04T13:43:43Z", "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -653,17 +653,27 @@ See this part of the documentation: link:mongodb#simplifying-mongodb-client-usag\n Another option is to use the `@BsonCreator` annotation to tell the `PojoCodec` to use the Kotlin data class default constructor,\n in this case all constructor parameters have to be annotated with `@BsonProperty`: see link:{mongodb-doc-root-url}/bson/pojos/#supporting-pojos-without-no-args-constructors[Supporting pojos without no args constructor].\n \n+This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.\n+\n An example of a `Person` class defined as a Kotlin data class would look like:\n \n [source,kotlin]\n ----\n data class Person @BsonCreator constructor (\n+    @BsonId var id: ObjectId,\n     @BsonProperty(\"name\") var name: String,\n     @BsonProperty(\"birth\") var birth: LocalDate,\n     @BsonProperty(\"status\") var status: Status\n-): PanacheMongoEntity()\n+): PanacheMongoEntityBase()\n ----\n \n+[TIP]\n+====\n+Here we use `var` but `val` can also be used.", "originalCommit": "2626914f02792d47e1dbdbd037c3bc2ec1dfbf25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NDIzMw==", "url": "https://github.com/quarkusio/quarkus/pull/7566#discussion_r387674233", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `@BsonId` annotation is used instead of `@BsonProperty(\"_id\")` as it is shorter, but both can be used.\n          \n          \n            \n            The `@BsonId` annotation is used instead of `@BsonProperty(\"_id\")` for brevity's sake, but use of either is valid.", "author": "geoand", "createdAt": "2020-03-04T13:44:55Z", "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -653,17 +653,27 @@ See this part of the documentation: link:mongodb#simplifying-mongodb-client-usag\n Another option is to use the `@BsonCreator` annotation to tell the `PojoCodec` to use the Kotlin data class default constructor,\n in this case all constructor parameters have to be annotated with `@BsonProperty`: see link:{mongodb-doc-root-url}/bson/pojos/#supporting-pojos-without-no-args-constructors[Supporting pojos without no args constructor].\n \n+This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.\n+\n An example of a `Person` class defined as a Kotlin data class would look like:\n \n [source,kotlin]\n ----\n data class Person @BsonCreator constructor (\n+    @BsonId var id: ObjectId,\n     @BsonProperty(\"name\") var name: String,\n     @BsonProperty(\"birth\") var birth: LocalDate,\n     @BsonProperty(\"status\") var status: Status\n-): PanacheMongoEntity()\n+): PanacheMongoEntityBase()\n ----\n \n+[TIP]\n+====\n+Here we use `var` but `val` can also be used.\n+\n+The `@BsonId` annotation is used instead of `@BsonProperty(\"_id\")` as it is shorter, but both can be used.", "originalCommit": "2626914f02792d47e1dbdbd037c3bc2ec1dfbf25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "818c6c0591bd2e5df3ea83a1603e06c40dbc913d", "url": "https://github.com/quarkusio/quarkus/commit/818c6c0591bd2e5df3ea83a1603e06c40dbc913d", "message": "Improve the documentation on Kotlin data class", "committedDate": "2020-03-04T14:08:38Z", "type": "commit"}, {"oid": "818c6c0591bd2e5df3ea83a1603e06c40dbc913d", "url": "https://github.com/quarkusio/quarkus/commit/818c6c0591bd2e5df3ea83a1603e06c40dbc913d", "message": "Improve the documentation on Kotlin data class", "committedDate": "2020-03-04T14:08:38Z", "type": "forcePushed"}]}