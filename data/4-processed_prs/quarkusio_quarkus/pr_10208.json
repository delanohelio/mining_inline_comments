{"pr_number": 10208, "pr_title": "Fix issue with primitive id types in Spring Data JPA", "pr_createdAt": "2020-06-24T06:23:05Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10208", "timeline": [{"oid": "3e4c59cf1f5a3307a6be43df9ff9c880a3e7f839", "url": "https://github.com/quarkusio/quarkus/commit/3e4c59cf1f5a3307a6be43df9ff9c880a3e7f839", "message": "Fix issue with primitive types in Spring Data JPA\n\nThis mainly comes up in Kotlin where kotlin.Long is converted\nto primitive long", "committedDate": "2020-06-24T06:22:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MjI0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10208#discussion_r444762245", "bodyText": "Why this cast?", "author": "gsmet", "createdAt": "2020-06-24T09:22:45Z", "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/StockMethodsAdder.java", "diffHunk": "@@ -134,6 +134,13 @@ private void generateSave(ClassCreator classCreator, FieldDescriptor entityClass\n                     BytecodeCreator idValueUnset;\n                     BytecodeCreator idValueSet;\n                     if (idType instanceof PrimitiveType) {\n+                        if (!idType.name().equals(DotNames.PRIMITIVE_LONG)\n+                                && !idType.name().equals(DotNames.PRIMITIVE_INTEGER)) {\n+                            throw new IllegalArgumentException(\"Id type of '\" + entityDotName + \"' is invalid.\");\n+                        }\n+                        if (idType.name().equals(DotNames.PRIMITIVE_LONG)) {\n+                            idValue = save.checkCast(idValue, int.class);", "originalCommit": "3e4c59cf1f5a3307a6be43df9ff9c880a3e7f839", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2NDUzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10208#discussion_r444764539", "bodyText": "We need to cast into int otherwise the bytecode verifier complains about bad operands on the stack (because ifne that follows expects an int to be on the stack - we don't care about it's value, we only care if it's zero or not).", "author": "geoand", "createdAt": "2020-06-24T09:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MjI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3NDE2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/10208#discussion_r444774162", "bodyText": "I suppose if the long is not a valid int, it won't be zero anyway. That's your rationale?", "author": "gsmet", "createdAt": "2020-06-24T09:43:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MjI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3NjgwOA==", "url": "https://github.com/quarkusio/quarkus/pull/10208#discussion_r444776808", "bodyText": "Exactly", "author": "geoand", "createdAt": "2020-06-24T09:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MjI0NQ=="}], "type": "inlineReview"}]}