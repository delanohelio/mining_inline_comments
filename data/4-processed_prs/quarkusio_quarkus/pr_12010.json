{"pr_number": 12010, "pr_title": "Use MetricsCapabilityBuildItem", "pr_createdAt": "2020-09-09T14:43:53Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12010", "timeline": [{"oid": "4e65ae0ade9126014ef1c7877cd0261710827a8b", "url": "https://github.com/quarkusio/quarkus/commit/4e65ae0ade9126014ef1c7877cd0261710827a8b", "message": "doc", "committedDate": "2020-09-09T16:26:22Z", "type": "forcePushed"}, {"oid": "12306a23050278135626a0562cde2eb04deef8e2", "url": "https://github.com/quarkusio/quarkus/commit/12306a23050278135626a0562cde2eb04deef8e2", "message": "Feature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T16:27:09Z", "type": "forcePushed"}, {"oid": "06faca91d2c393d0a9e721e5f75fede5a6a17df1", "url": "https://github.com/quarkusio/quarkus/commit/06faca91d2c393d0a9e721e5f75fede5a6a17df1", "message": "Feature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T16:41:13Z", "type": "forcePushed"}, {"oid": "b2861c7b0f4cefa83767d3bfc56aaae24df38877", "url": "https://github.com/quarkusio/quarkus/commit/b2861c7b0f4cefa83767d3bfc56aaae24df38877", "message": "Feature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T16:42:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NTExNg==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485765116", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you use the MicroProfile Metrics API in your application, the micrometer extension will create an adaptive\n          \n          \n            \n            If you use the MicroProfile Metrics API in your application, the Micrometer extension will create an adaptive", "author": "gsmet", "createdAt": "2020-09-09T16:44:39Z", "path": "docs/src/main/asciidoc/micrometer-metrics.adoc", "diffHunk": "@@ -275,7 +275,34 @@ jvm_memory_committed_bytes{area=\"nonheap\",id=\"CodeHeap 'non-profiled nmethods'\",\n Note that metrics appear lazily, you often won't see any data for your endpoint until\n something tries to access it, etc.\n \n+== Support for the MicroProfile Metrics API\n \n+If you use the MicroProfile Metrics API in your application, the micrometer extension will create an adaptive", "originalCommit": "b2861c7b0f4cefa83767d3bfc56aaae24df38877", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc3MDA5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485770093", "bodyText": "That case mistake is in a few places.. so I'll fix that up.", "author": "ebullient", "createdAt": "2020-09-09T16:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NTExNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NTQ3MA==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485765470", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            layer to map those metrics into the micrometer registry. Note that naming conventions between the two\n          \n          \n            \n            layer to map those metrics into the Micrometer registry. Note that naming conventions between the two", "author": "gsmet", "createdAt": "2020-09-09T16:45:01Z", "path": "docs/src/main/asciidoc/micrometer-metrics.adoc", "diffHunk": "@@ -275,7 +275,34 @@ jvm_memory_committed_bytes{area=\"nonheap\",id=\"CodeHeap 'non-profiled nmethods'\",\n Note that metrics appear lazily, you often won't see any data for your endpoint until\n something tries to access it, etc.\n \n+== Support for the MicroProfile Metrics API\n \n+If you use the MicroProfile Metrics API in your application, the micrometer extension will create an adaptive\n+layer to map those metrics into the micrometer registry. Note that naming conventions between the two", "originalCommit": "b2861c7b0f4cefa83767d3bfc56aaae24df38877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NTkyMg==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485765922", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `quarkus-smallrye-metrics` extension and the `quarkus-micrometer` extension provide support for collecting metrics. As a compatibility note, the `quarkus-micrometer` extension adapts the MP Metrics API to micrometer library primitives, so the `quarkus-micrometer` extension can be enabled without breaking code that relies on the MP Metrics API. Note that the metrics emitted by micrometer are different, see the `quarkus-micrometer` extension documentation for more information.\n          \n          \n            \n            The `quarkus-smallrye-metrics` extension and the `quarkus-micrometer` extension provide support for collecting metrics. As a compatibility note, the `quarkus-micrometer` extension adapts the MP Metrics API to Micrometer library primitives, so the `quarkus-micrometer` extension can be enabled without breaking code that relies on the MP Metrics API. Note that the metrics emitted by Micrometer are different, see the `quarkus-micrometer` extension documentation for more information.", "author": "gsmet", "createdAt": "2020-09-09T16:45:35Z", "path": "docs/src/main/asciidoc/writing-extensions.adoc", "diffHunk": "@@ -1496,13 +1496,15 @@ HealthBuildItem addHealthCheck(AgroalBuildTimeConfig agroalBuildTimeConfig) {\n \n === Extension Metrics\n \n-The `quarkus-smallrye-metrics` extension (and other 3rd party or experimental extensions) provide support for collecting metrics. There are two broad patterns that extensions can use to interact with an optional metrics extension to add their own metrics:\n+The `quarkus-smallrye-metrics` extension and the `quarkus-micrometer` extension provide support for collecting metrics. As a compatibility note, the `quarkus-micrometer` extension adapts the MP Metrics API to micrometer library primitives, so the `quarkus-micrometer` extension can be enabled without breaking code that relies on the MP Metrics API. Note that the metrics emitted by micrometer are different, see the `quarkus-micrometer` extension documentation for more information.", "originalCommit": "b2861c7b0f4cefa83767d3bfc56aaae24df38877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjI4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485766287", "bodyText": "Why?", "author": "gsmet", "createdAt": "2020-09-09T16:46:01Z", "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/binder/mpmetrics/AnnotationHandler.java", "diffHunk": "@@ -81,7 +81,7 @@ static boolean removeCountedWhenTimed(DotName sourceAnnotation, AnnotationTarget\n                         findAnnotation(classInfo.classAnnotations(), MetricDotNames.SIMPLY_TIMED_ANNOTATION) == null) {\n                     return false;\n                 }\n-                log.warnf(\"Bean %s is both counted and timed. The @Counted annotation \" +\n+                log.infof(\"Bean %s is both counted and timed. The @Counted annotation \" +", "originalCommit": "b2861c7b0f4cefa83767d3bfc56aaae24df38877", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2OTgwNg==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485769806", "bodyText": "So to clarify, I think we should keep them warn. If you don't want these log messages every time (bad UX), you need to do something about it thus the warn.", "author": "gsmet", "createdAt": "2020-09-09T16:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc3NzI2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485777263", "bodyText": "@loicmathieu suggested the warning was too strong (thinking something was wrong). As you and I discussed, I made it a warning to begin with because the behavior can be unexpected (in terms of metrics being emitted).\nI'm reconsidering. ;) I'll drop this commit, I think.", "author": "ebullient", "createdAt": "2020-09-09T16:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg5NDk0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/12010#discussion_r485894946", "bodyText": "Warning means something went wrong but we recover from this.\nIf I use open metrics, as per the spec I must add the two annotations to have the two metrics.\nFor interoperability concerns keeping the two annotations is a valid choice.\nSo this message is an information that micrometer is compatible with open metrics but didn't follow the spec.\nI would change it to debug level after a second thinking.\nBut I'm ok to keep warning it you didn't agree with the way I see this :)", "author": "loicmathieu", "createdAt": "2020-09-09T20:13:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjI4Nw=="}], "type": "inlineReview"}, {"oid": "203daaf34d8c415296a8f3b51db4bd5c2deb2b01", "url": "https://github.com/quarkusio/quarkus/commit/203daaf34d8c415296a8f3b51db4bd5c2deb2b01", "message": "Feature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T17:04:29Z", "type": "forcePushed"}, {"oid": "9e901ee426c005c9dd28a76ca21c037b50c248bb", "url": "https://github.com/quarkusio/quarkus/commit/9e901ee426c005c9dd28a76ca21c037b50c248bb", "message": "fault-tolerance: MetricsCapabilityBuildItem\n\nResolves #12000\nFeature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T17:07:07Z", "type": "forcePushed"}, {"oid": "158fbb98202cc127c355512a676405b952d72c5d", "url": "https://github.com/quarkusio/quarkus/commit/158fbb98202cc127c355512a676405b952d72c5d", "message": "fault-tolerance: MetricsCapabilityBuildItem\n\nResolves #12000\nFeature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T17:07:47Z", "type": "commit"}, {"oid": "158fbb98202cc127c355512a676405b952d72c5d", "url": "https://github.com/quarkusio/quarkus/commit/158fbb98202cc127c355512a676405b952d72c5d", "message": "fault-tolerance: MetricsCapabilityBuildItem\n\nResolves #12000\nFeature.MICROMETER constant. Capability.METRICS @deprecated", "committedDate": "2020-09-09T17:07:47Z", "type": "forcePushed"}]}