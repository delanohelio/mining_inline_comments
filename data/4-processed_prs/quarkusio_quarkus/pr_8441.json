{"pr_number": 8441, "pr_title": "Add a section about reactive in the JSON guide", "pr_createdAt": "2020-04-07T09:40:09Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8441", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTM1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8441#discussion_r404721355", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            More details about Mutiny can be found on the link:getting-started-reactive#mutiny[Getting Started with Reactive guide].\n          \n          \n            \n            More details about Mutiny can be found in the link:getting-started-reactive#mutiny[Getting Started with Reactive guide].", "author": "gsmet", "createdAt": "2020-04-07T11:00:15Z", "path": "docs/src/main/asciidoc/rest-json.adoc", "diffHunk": "@@ -383,6 +383,47 @@ Let's do that and follow the same steps as before:\n \n This time, you can see our list of legumes.\n \n+[[reactive]]\n+== Being reactive\n+\n+You can return _reactive types_ to handle asynchronous processing.\n+Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code.\n+\n+To integrate Mutiny and RestEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:\n+\n+[source, xml]\n+----\n+<dependency>\n+  <groupId>io.quarkus</groupId>\n+  <artifactId>quarkus-resteasy-mutiny</artifactId>\n+</dependency>\n+----\n+\n+Then, your endpoint can return `Uni` or `Multi` instances:\n+\n+[source,java]\n+----\n+\n+@GET\n+@Path(\"/{name}\")\n+public Uni<Fruit> getOne(@PathParam String name) {\n+    return findByName(name);\n+}\n+\n+@GET\n+public Multi<Fruit> getAll() {\n+    return findAll();\n+}\n+----\n+\n+Use `Uni` when you have a single result.\n+Use `Multi` when you have multiple items that may be emitted asynchronously.\n+\n+You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`.\n+\n+More details about Mutiny can be found on the link:getting-started-reactive#mutiny[Getting Started with Reactive guide].", "originalCommit": "23ad9389398086c56d5f7b1f90bf354b2041279c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTQ1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8441#discussion_r404721453", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To integrate Mutiny and RestEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:\n          \n          \n            \n            To integrate Mutiny and RESTEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:", "author": "gsmet", "createdAt": "2020-04-07T11:00:25Z", "path": "docs/src/main/asciidoc/rest-json.adoc", "diffHunk": "@@ -383,6 +383,47 @@ Let's do that and follow the same steps as before:\n \n This time, you can see our list of legumes.\n \n+[[reactive]]\n+== Being reactive\n+\n+You can return _reactive types_ to handle asynchronous processing.\n+Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code.\n+\n+To integrate Mutiny and RestEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:", "originalCommit": "23ad9389398086c56d5f7b1f90bf354b2041279c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1380eef3c107de2e1b2ddb4aa9ecb9ca6d0a10c", "url": "https://github.com/quarkusio/quarkus/commit/a1380eef3c107de2e1b2ddb4aa9ecb9ca6d0a10c", "message": "add a section about reactive in the JSON guide", "committedDate": "2020-04-07T15:09:39Z", "type": "commit"}, {"oid": "a1380eef3c107de2e1b2ddb4aa9ecb9ca6d0a10c", "url": "https://github.com/quarkusio/quarkus/commit/a1380eef3c107de2e1b2ddb4aa9ecb9ca6d0a10c", "message": "add a section about reactive in the JSON guide", "committedDate": "2020-04-07T15:09:39Z", "type": "forcePushed"}]}