{"pr_number": 6432, "pr_title": "ArC - optimize CreationalContext", "pr_createdAt": "2020-01-06T21:11:19Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6432", "timeline": [{"oid": "ae660fe701c7d460a2311c3edc62003e5a6394df", "url": "https://github.com/quarkusio/quarkus/commit/ae660fe701c7d460a2311c3edc62003e5a6394df", "message": "ArC - optimize CreationalContext\n\n- do not always store all dependent instances in CC\n- also introduce io.quarkus.arc.InjectableInstance\n- resolves #5281", "committedDate": "2020-01-06T21:07:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMDE5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6432#discussion_r363710196", "bodyText": "getActiveContext can return null if no context is active, we should probably check that.", "author": "manovotn", "createdAt": "2020-01-07T11:40:52Z", "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/InstanceHandleImpl.java", "diffHunk": "@@ -61,10 +60,14 @@ public T get() {\n     @Override\n     public void destroy() {\n         if (instance != null && destroyed.compareAndSet(false, true)) {\n-            if (bean.getScope().equals(Dependent.class)) {\n-                destroyInternal();\n+            if (destroyLogic != null) {\n+                destroyLogic.accept(instance);\n             } else {\n-                Arc.container().getActiveContext(bean.getScope()).destroy(bean);\n+                if (bean.getScope().equals(Dependent.class)) {\n+                    destroyInternal();\n+                } else {\n+                    Arc.container().getActiveContext(bean.getScope()).destroy(bean);", "originalCommit": "ae660fe701c7d460a2311c3edc62003e5a6394df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyNjkxMA==", "url": "https://github.com/quarkusio/quarkus/pull/6432#discussion_r363726910", "bodyText": "Good point. I did not check the existing code...", "author": "mkouba", "createdAt": "2020-01-07T12:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMDE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMDM5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/6432#discussion_r363710393", "bodyText": "Why Object, the instance should still be of type T, right?", "author": "manovotn", "createdAt": "2020-01-07T11:41:24Z", "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/InstanceImpl.java", "diffHunk": "@@ -120,7 +113,7 @@ public boolean isAmbiguous() {\n     }\n \n     @Override\n-    public void destroy(T instance) {\n+    public void destroy(Object instance) {", "originalCommit": "ae660fe701c7d460a2311c3edc62003e5a6394df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyNzI0MA==", "url": "https://github.com/quarkusio/quarkus/pull/6432#discussion_r363727240", "bodyText": "Because of the generics hell... yes, it should be T but it should be safe use Object too and it simplifies the code a little bit.", "author": "mkouba", "createdAt": "2020-01-07T12:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMDM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc0OTUwNg==", "url": "https://github.com/quarkusio/quarkus/pull/6432#discussion_r363749506", "bodyText": "Yea, Object works too. It's just that I saw T everywhere else, so this struck me as weird :)", "author": "manovotn", "createdAt": "2020-01-07T13:36:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMDM5Mw=="}], "type": "inlineReview"}, {"oid": "18ac748ce2ef2f8672a0f7cde9dc9e231dbdfa64", "url": "https://github.com/quarkusio/quarkus/commit/18ac748ce2ef2f8672a0f7cde9dc9e231dbdfa64", "message": "InstanceHandle#destroy - throw ContextNotActiveException if appropriate", "committedDate": "2020-01-07T15:43:11Z", "type": "commit"}, {"oid": "18ac748ce2ef2f8672a0f7cde9dc9e231dbdfa64", "url": "https://github.com/quarkusio/quarkus/commit/18ac748ce2ef2f8672a0f7cde9dc9e231dbdfa64", "message": "InstanceHandle#destroy - throw ContextNotActiveException if appropriate", "committedDate": "2020-01-07T15:43:11Z", "type": "forcePushed"}]}