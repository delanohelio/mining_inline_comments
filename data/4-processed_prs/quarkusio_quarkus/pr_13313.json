{"pr_number": 13313, "pr_title": "Vastly speed up lookup of META-INF/microprofile-config.properties for the common case (where the file is missing)", "pr_createdAt": "2020-11-16T13:03:23Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13313", "timeline": [{"oid": "6542a037e3ed1457cf7b211ca5038930d3c828fa", "url": "https://github.com/quarkusio/quarkus/commit/6542a037e3ed1457cf7b211ca5038930d3c828fa", "message": "Vastly speed up META-INF/microprofile-config.properties for the common case\n\nThis file is always looked up during boot (as part of the spec) and most of the time\nit doesn't exist.\nDue to it's location under META-INF, it forces the RunnerClassLoader to look\ninto every jar order to determine whether or not it exists.\nIn order to avoid that lookup, we add a fail-fast path which is almost certainly\ngoing to be used in most applications (which just use application.properties)", "committedDate": "2020-11-16T13:07:03Z", "type": "commit"}, {"oid": "6542a037e3ed1457cf7b211ca5038930d3c828fa", "url": "https://github.com/quarkusio/quarkus/commit/6542a037e3ed1457cf7b211ca5038930d3c828fa", "message": "Vastly speed up META-INF/microprofile-config.properties for the common case\n\nThis file is always looked up during boot (as part of the spec) and most of the time\nit doesn't exist.\nDue to it's location under META-INF, it forces the RunnerClassLoader to look\ninto every jar order to determine whether or not it exists.\nIn order to avoid that lookup, we add a fail-fast path which is almost certainly\ngoing to be used in most applications (which just use application.properties)", "committedDate": "2020-11-16T13:07:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2MDM1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13313#discussion_r524260355", "bodyText": "Yeah, that was my question. I also wonder if we should index the files in META-INF/ (I'm not sure if we should index recursively or not) and if we don't do it recursively META-INF/services/?\nThat would cover this use case too.", "author": "gsmet", "createdAt": "2020-11-16T13:18:04Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -551,9 +553,26 @@ private JarBuildItem buildThinJar(CurateOutcomeBuildItem curateOutcomeBuildItem,\n                 jars.add(path);\n             }\n         }\n+\n+        /*\n+         * There are some files like META-INF/microprofile-config.properties that usually don't exist in application\n+         * and yet are always looked up (spec compliance...) and due to the location in the jar,\n+         * the RunnerClassLoader needs to look into every jar to determine whether they exist or not.\n+         * In keeping true to the original design of the RunnerClassLoader which indexes the directory structure,\n+         * we just add a fail-fast path for files we know don't exist.\n+         *\n+         * TODO: if this gets more complex, we'll probably want a build item to carry this information instead of hard\n+         * coding it here", "originalCommit": "6542a037e3ed1457cf7b211ca5038930d3c828fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2NzIxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/13313#discussion_r524267215", "bodyText": "I have another draft PR exploring services, so I would prefer not to do anything with services for the time being.\nThe thing is, that even if we do index all files in META-INF, \n  \n    \n      quarkus/independent-projects/bootstrap/runner/src/main/java/io/quarkus/bootstrap/runner/RunnerClassLoader.java\n    \n    \n         Line 123\n      in\n      6542a03\n    \n    \n    \n    \n\n        \n          \n           private ClassLoadingResource[] getClassLoadingResources(String name) { \n        \n    \n  \n\n still is an obstacle.\nWhich is why I think the what I did here is the simplest thing to do for now, as we don't yet know how far we want to take this.", "author": "geoand", "createdAt": "2020-11-16T13:29:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2MDM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5MzM3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13313#discussion_r524293377", "bodyText": "Yeah, that was my question. I also wonder if we should index the files in META-INF/ (I'm not sure if we should index recursively or not) and if we don't do it recursively META-INF/services/?\n\nThere are HTML/JS/CSS files in META-INF/resources which probably won't need to be indexed", "author": "gastaldi", "createdAt": "2020-11-16T14:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2MDM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5NzUyMg==", "url": "https://github.com/quarkusio/quarkus/pull/13313#discussion_r524297522", "bodyText": "Indeed. They didn't show up in the profiling I did, but in the future we certainly should look further", "author": "geoand", "createdAt": "2020-11-16T14:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2MDM1NQ=="}], "type": "inlineReview"}]}