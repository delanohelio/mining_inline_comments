{"pr_number": 6928, "pr_title": "Introduce support for .env", "pr_createdAt": "2020-01-31T22:16:26Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6928", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxMDEwMw==", "url": "https://github.com/quarkusio/quarkus/pull/6928#discussion_r373710103", "bodyText": "@gastaldi you were totally right about this :)", "author": "dmlloyd", "createdAt": "2020-01-31T22:17:20Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/ConfigUtils.java", "diffHunk": "@@ -86,32 +95,68 @@ public static void addSourceProvider(SmallRyeConfigBuilder builder, ConfigSource\n         }\n     }\n \n-    static final class EnvConfigSource implements ConfigSource {\n+    static class EnvConfigSource implements ConfigSource {\n         static final Pattern REP_PATTERN = Pattern.compile(\"[^a-zA-Z0-9_]\");\n \n-        private final int ordinal;\n-\n-        EnvConfigSource(final int ordinal) {\n-            this.ordinal = ordinal;\n+        EnvConfigSource() {\n         }\n \n         public int getOrdinal() {\n-            return ordinal;\n+            return 300;", "originalCommit": "a9f5b981e5967858e7959e26d86fbf3e454280df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "207976341c56e0a37e5dfd63edc415738feb6459", "url": "https://github.com/quarkusio/quarkus/commit/207976341c56e0a37e5dfd63edc415738feb6459", "message": "Introduce support for .env\n\nFixes #3670", "committedDate": "2020-02-03T13:46:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExNTQ0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/6928#discussion_r374115443", "bodyText": "Not a big deal, but maybe it would be nice to debug log any IOExceptions thrown here", "author": "gastaldi", "createdAt": "2020-02-03T13:57:37Z", "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/ConfigUtils.java", "diffHunk": "@@ -86,32 +95,68 @@ public static void addSourceProvider(SmallRyeConfigBuilder builder, ConfigSource\n         }\n     }\n \n-    static final class EnvConfigSource implements ConfigSource {\n+    static class EnvConfigSource implements ConfigSource {\n         static final Pattern REP_PATTERN = Pattern.compile(\"[^a-zA-Z0-9_]\");\n \n-        private final int ordinal;\n-\n-        EnvConfigSource(final int ordinal) {\n-            this.ordinal = ordinal;\n+        EnvConfigSource() {\n         }\n \n         public int getOrdinal() {\n-            return ordinal;\n+            return 300;\n         }\n \n         public Map<String, String> getProperties() {\n             return Collections.emptyMap();\n         }\n \n         public String getValue(final String propertyName) {\n-            return System.getenv(REP_PATTERN.matcher(propertyName.toUpperCase(Locale.ROOT)).replaceAll(\"_\"));\n+            return getRawValue(REP_PATTERN.matcher(propertyName.toUpperCase(Locale.ROOT)).replaceAll(\"_\"));\n+        }\n+\n+        String getRawValue(final String name) {\n+            return System.getenv(name);\n         }\n \n         public String getName() {\n             return \"System environment\";\n         }\n     }\n \n+    static class DotEnvConfigSource extends EnvConfigSource {\n+        private final Map<String, String> values;\n+\n+        DotEnvConfigSource() {\n+            this(Paths.get(System.getProperty(\"user.dir\", \".\"), \".env\"));\n+        }\n+\n+        DotEnvConfigSource(Path path) {\n+            Map<String, String> values = new HashMap<>();\n+            try (InputStream is = Files.newInputStream(path)) {\n+                try (InputStreamReader isr = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n+                    final Properties properties = new Properties();\n+                    properties.load(isr);\n+                    for (String name : properties.stringPropertyNames()) {\n+                        values.put(name, properties.getProperty(name));\n+                    }\n+                }\n+            } catch (IOException ignored) {", "originalCommit": "207976341c56e0a37e5dfd63edc415738feb6459", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyMjM0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/6928#discussion_r374122341", "bodyText": "Fixed \ud83d\udc4d", "author": "dmlloyd", "createdAt": "2020-02-03T14:11:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExNTQ0Mw=="}], "type": "inlineReview"}, {"oid": "da3c82e4ba1552751c6a5f3bebc1757202b2ee1e", "url": "https://github.com/quarkusio/quarkus/commit/da3c82e4ba1552751c6a5f3bebc1757202b2ee1e", "message": "Introduce support for .env\n\nFixes #3670", "committedDate": "2020-02-03T14:10:52Z", "type": "forcePushed"}, {"oid": "36263b5e3e174821418e926e298a8ca2dda41406", "url": "https://github.com/quarkusio/quarkus/commit/36263b5e3e174821418e926e298a8ca2dda41406", "message": "Introduce support for .env\n\nFixes #3670", "committedDate": "2020-02-03T18:22:20Z", "type": "commit"}, {"oid": "36263b5e3e174821418e926e298a8ca2dda41406", "url": "https://github.com/quarkusio/quarkus/commit/36263b5e3e174821418e926e298a8ca2dda41406", "message": "Introduce support for .env\n\nFixes #3670", "committedDate": "2020-02-03T18:22:20Z", "type": "forcePushed"}]}