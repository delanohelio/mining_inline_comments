{"pr_number": 13515, "pr_title": "Remove the ProtectionDomain Map in RunnerClassLoader", "pr_createdAt": "2020-11-27T13:08:17Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13515", "timeline": [{"oid": "4ad9172fbaf501a75c3bec2225fcc0c722eeb59b", "url": "https://github.com/quarkusio/quarkus/commit/4ad9172fbaf501a75c3bec2225fcc0c722eeb59b", "message": "Remove the protection domain map in RunnerClassLoader\n\nBased on: https://github.com/quarkusio/quarkus/pull/13503#discussion_r531573829", "committedDate": "2020-11-27T13:14:42Z", "type": "forcePushed"}, {"oid": "88e6c71089a28af87812ac5e73760499564d3ba9", "url": "https://github.com/quarkusio/quarkus/commit/88e6c71089a28af87812ac5e73760499564d3ba9", "message": "Remove the protection domain map in RunnerClassLoader\n\nBased on: https://github.com/quarkusio/quarkus/pull/13503#discussion_r531573829", "committedDate": "2020-11-27T15:08:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NDc0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531654742", "bodyText": "just wondering - do we really want to impose that a ClassLoadingResource belongs to a unique classloader ever?", "author": "Sanne", "createdAt": "2020-11-27T15:12:53Z", "path": "independent-projects/bootstrap/runner/src/main/java/io/quarkus/bootstrap/runner/ClassLoadingResource.java", "diffHunk": "@@ -5,13 +5,22 @@\n \n public interface ClassLoadingResource {\n \n+    /**\n+     * A lifecycle hook that should be called when the ClassLoader to which this resource belongs to\n+     * is constructed\n+     */\n+    void init(ClassLoader runnerClassLoader);", "originalCommit": "88e6c71089a28af87812ac5e73760499564d3ba9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NTg2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531655865", "bodyText": "We indeed might want to revisit this in the future, but for now we only have single RunnerClassLoader so it's the YAGNIest way to remove the slow map :)", "author": "geoand", "createdAt": "2020-11-27T15:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NDc0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531656765", "bodyText": "this might need some thoughts regading threadsafety?\nMaybe you could simplify things by maintaining the same API as it had, then lazily initialize the ProtectionDomain domain on first request. This way you can also check if the classloader is the same as the one you have cached the ProtectionDomain for, and in case rebuild the instance.\nThis would ensure there's no way to get the wrong ProtectionDomain, for example in case the same JarResource was ever used by multiple / different classloader instances - I'm thinking for example it might be reusing the same JarResource by a fresh classloader on hot reload?", "author": "Sanne", "createdAt": "2020-11-27T15:17:06Z", "path": "independent-projects/bootstrap/runner/src/main/java/io/quarkus/bootstrap/runner/JarResource.java", "diffHunk": "@@ -106,20 +124,8 @@ public ManifestInfo getManifestInfo() {\n     }\n \n     @Override\n-    public ProtectionDomain getProtectionDomain(ClassLoader classLoader) {\n-        final URL url;\n-        try {\n-            String path = jarPath.toAbsolutePath().toString();\n-            if (!path.startsWith(\"/\")) {\n-                path = '/' + path;\n-            }\n-            URI uri = new URI(\"file\", null, path, null);\n-            url = uri.toURL();\n-        } catch (URISyntaxException | MalformedURLException e) {\n-            throw new RuntimeException(\"Unable to create protection domain for \" + jarPath, e);\n-        }\n-        CodeSource codesource = new CodeSource(url, (Certificate[]) null);\n-        return new ProtectionDomain(codesource, null, classLoader, null);\n+    public ProtectionDomain getProtectionDomain() {\n+        return protectionDomain;", "originalCommit": "88e6c71089a28af87812ac5e73760499564d3ba9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODM0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531658347", "bodyText": "Good point, but this ClassLoader is only used for fast-jar, it's not the ClassLoader that is used in dev-mode, so  no hot deployment can happen.\nThere shouldn't be any thread safety issues whatsoever, because the init method which creates the protection domain is only called once from the main thread.\nOtherwise I am missing something from what you said :)", "author": "geoand", "createdAt": "2020-11-27T15:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2Nzg2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531667866", "bodyText": "the init method is called once, but getProtectionDomain is invoked by any thread, as we support parrallel classloading. At very least the field should be volatile ?", "author": "Sanne", "createdAt": "2020-11-27T15:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2ODQ4NA==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531668484", "bodyText": "and once you made it volatile, you might as well make it lazy so to not need to remember to invoke init", "author": "Sanne", "createdAt": "2020-11-27T15:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2ODc1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531668759", "bodyText": "getProtectionDomain can indeed be called by multiple threads, but since we it just returns a value that has been pre-computed (by the init method), do we really need to make the protectionDomain field volatile?", "author": "geoand", "createdAt": "2020-11-27T15:42:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MjgyMw==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531672823", "bodyText": "yes - another thread will not necessarily be able to \"see\" its state otherwise, as there's no barrier at all giving you such guarantee.", "author": "Sanne", "createdAt": "2020-11-27T15:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3NTg1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531675855", "bodyText": "OK, I'll make it volatile then", "author": "geoand", "createdAt": "2020-11-27T15:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3NzU4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531677589", "bodyText": "and once you made it volatile, you might as well make it lazy so to not need to remember to invoke init\n\nI don't think that is the case - because init passes in the ClassLoader which is needed to create the ProtectionDomain.\nIf we were to remove init and go back to the assumption that ClassLoader resource could be used for multiple ClassLoaders, then we would effectively need to reintroduce the map.\nAm I missing something here?", "author": "geoand", "createdAt": "2020-11-27T16:01:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3ODA4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531678085", "bodyText": "We could of course make protectionDomain lazy and keep hold of the ClassLoader, but then that would mean adding the ClassLoader field as volatile as well.", "author": "geoand", "createdAt": "2020-11-27T16:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3OTg3NA==", "url": "https://github.com/quarkusio/quarkus/pull/13515#discussion_r531679874", "bodyText": "Ok, might be fine to use the init method and initialize this eagerly then.", "author": "Sanne", "createdAt": "2020-11-27T16:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1Njc2NQ=="}], "type": "inlineReview"}, {"oid": "d6d4de47483c598ca951b6cb4cfa358c08c0cfb2", "url": "https://github.com/quarkusio/quarkus/commit/d6d4de47483c598ca951b6cb4cfa358c08c0cfb2", "message": "Remove the protection domain map in RunnerClassLoader\n\nBased on: https://github.com/quarkusio/quarkus/pull/13503#discussion_r531573829", "committedDate": "2020-11-27T16:03:11Z", "type": "forcePushed"}, {"oid": "a94be261ce99c6410f70cae05c5565d75b41013c", "url": "https://github.com/quarkusio/quarkus/commit/a94be261ce99c6410f70cae05c5565d75b41013c", "message": "Remove the protection domain map in RunnerClassLoader\n\nBased on: https://github.com/quarkusio/quarkus/pull/13503#discussion_r531573829", "committedDate": "2020-12-01T06:21:28Z", "type": "commit"}, {"oid": "a94be261ce99c6410f70cae05c5565d75b41013c", "url": "https://github.com/quarkusio/quarkus/commit/a94be261ce99c6410f70cae05c5565d75b41013c", "message": "Remove the protection domain map in RunnerClassLoader\n\nBased on: https://github.com/quarkusio/quarkus/pull/13503#discussion_r531573829", "committedDate": "2020-12-01T06:21:28Z", "type": "forcePushed"}]}