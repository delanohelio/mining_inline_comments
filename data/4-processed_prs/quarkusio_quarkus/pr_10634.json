{"pr_number": 10634, "pr_title": "Simplify fast jar dockerfiles by only using a single copy command.", "pr_createdAt": "2020-07-10T09:34:37Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10634", "timeline": [{"oid": "cc4435c0fd2b14744a637f88e6e17a9caa3aa9de", "url": "https://github.com/quarkusio/quarkus/commit/cc4435c0fd2b14744a637f88e6e17a9caa3aa9de", "message": "Simplify fast jar dockerfiles by only using a single copy command.", "committedDate": "2020-07-10T09:32:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2MjYyMw==", "url": "https://github.com/quarkusio/quarkus/pull/10634#discussion_r452762623", "bodyText": "Is it equivalent? I would expect this to copy the quarkus-app directory inside /deployments/ whereas we used to copy the content of this directory, meaning the main jar was at the root of /deployments/.\nAt least if Docker's COPY has the same semantic as cp.", "author": "gsmet", "createdAt": "2020-07-10T10:31:23Z", "path": "devtools/platform-descriptor-json/src/main/resources/templates/dockerfile-fast-jar.ftl", "diffHunk": "@@ -45,10 +45,7 @@ RUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \\\n # Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\n ENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n \n-COPY --chown=1001 ${build_dir}/quarkus-app/lib/ /deployments/lib/\n-COPY --chown=1001 ${build_dir}/quarkus-app/*.jar /deployments/\n-COPY --chown=1001 ${build_dir}/quarkus-app/app/ /deployments/app/\n-COPY --chown=1001 ${build_dir}/quarkus-app/quarkus/ /deployments/quarkus/\n+COPY --chown=1001 ${build_dir}/quarkus-app /deployments/", "originalCommit": "cc4435c0fd2b14744a637f88e6e17a9caa3aa9de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1NTU5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10634#discussion_r452855597", "bodyText": "I tested it locally by adding a RUN ls /deployments line after that and the log shows that the contents of the directory have been copied:\nStep 13/17 : COPY --from=builder --chown=1001 /usr/src/app/bff/build/quarkus-app /deployments/\n ---> Using cache\n ---> 61e79dc8db06\nStep 14/17 : RUN ls /deployments\n ---> Running in 5124e52a774d\napp\nlib\nquarkus\nquarkus-run.jar\nrun-java.sh", "author": "andreas-eberle", "createdAt": "2020-07-10T13:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2MjYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3MjA0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10634#discussion_r452872049", "bodyText": "OK. That's a bit weird IMO but not familiar with Docker so I trust you :).\nThat being said, I'm wondering if we could change that to:\nCOPY --chown=1001 ${build_dir}/quarkus-app/* /deployments/\n\nto be on the safe side?", "author": "gsmet", "createdAt": "2020-07-10T14:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2MjYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2OTQ4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10634#discussion_r453469487", "bodyText": "Unfortunately this seems to unpack the directories in the quarkus-app directory. The ls now shows\napp-1.0.0-SNAPSHOT.jar\nboot\ngenerated-bytecode.jar\nmain\nquarkus-application.dat\nquarkus-run.jar\nrun-java.sh\ntransformed-bytecode.jar", "author": "andreas-eberle", "createdAt": "2020-07-13T07:10:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2MjYyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4Mzk0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10634#discussion_r453583943", "bodyText": "@gsmet: In the docker copy docs, I just found a note saying the following about the src path:\nThe directory itself is not copied, just its contents.\n\nFurthermore, the pattern matching seems to the one Golang uses. Therefore I think it doesn't apply the standard linux semantics.", "author": "andreas-eberle", "createdAt": "2020-07-13T11:30:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2MjYyMw=="}], "type": "inlineReview"}]}