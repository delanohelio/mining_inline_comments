{"pr_number": 11947, "pr_title": "Test for listing extensions-Gradle", "pr_createdAt": "2020-09-07T16:14:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11947", "timeline": [{"oid": "7c3c4cea6348a400f12e3513c421a147af2adf8a", "url": "https://github.com/quarkusio/quarkus/commit/7c3c4cea6348a400f12e3513c421a147af2adf8a", "message": "Test for listing extensions-Gradle", "committedDate": "2020-09-07T15:36:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MzMyNA==", "url": "https://github.com/quarkusio/quarkus/pull/11947#discussion_r484573324", "bodyText": "BTW I think there is already an assertion in AssertJ that asserts if a line exists in a given File assertThat(file).hasContent(...),  but this is okay", "author": "gastaldi", "createdAt": "2020-09-07T21:51:55Z", "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/ListExtensionsTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class ListExtensionsTest extends QuarkusGradleWrapperTestBase {\n+\n+    @Test\n+    public void testListExtensionsWork() throws IOException, URISyntaxException, InterruptedException {\n+\n+        final File projectDir = getProjectDir(\"list-extension-single-module\");\n+        runGradleWrapper(projectDir, \":listExtension\");\n+\n+        List<String> outputLogLines = listExtensions(projectDir, \":listExtension\");\n+\n+        assertThat(outputLogLines).anyMatch(line -> line.contains(\"quarkus-resteasy\"));", "originalCommit": "7c3c4cea6348a400f12e3513c421a147af2adf8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5MTI2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11947#discussion_r484691263", "bodyText": "Indeed, but I think we're fine with this for now :)", "author": "geoand", "createdAt": "2020-09-08T06:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MzMyNA=="}], "type": "inlineReview"}]}