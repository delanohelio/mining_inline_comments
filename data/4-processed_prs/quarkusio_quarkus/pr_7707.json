{"pr_number": 7707, "pr_title": "Qute - support nested expressions/virtual methods as virtual methods \u2026", "pr_createdAt": "2020-03-09T16:38:48Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7707", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMDE2OA==", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390300168", "bodyText": "How different is a virtual method from a @TemplateExtension?", "author": "gastaldi", "createdAt": "2020-03-10T13:10:22Z", "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -242,6 +242,47 @@ If you need to render the unescaped value:\n <1> `title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`\n <2> `paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`\n \n+===== Virtual Methods\n+\n+A virtual method is a part of an expression that looks like a regular Java method invocation.\n+It's called \"virtual\" because it does not have to match the actual method of a Java class.", "originalCommit": "63582775b56ed663148c18abae04058a88f7f485", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMzAxOA==", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390313018", "bodyText": "Virtual method is just a part of an expression. @TemplateExtension is one of the ways how to evaluate a virtual method. Others include the value resolvers generated for @TemplateData or classes used in parameter declarations - in this case a virtual method invocation is delegated to an existing instance method. But in fact, you can register a custom value resolver like in VirtualMethodParametersTest that is not backed by any Java method.", "author": "mkouba", "createdAt": "2020-03-10T13:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMDE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxODU5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390318597", "bodyText": "It would be nice to add a section explaining that difference", "author": "gastaldi", "createdAt": "2020-03-10T13:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMDE2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMTU0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390301543", "bodyText": "It would be nice to add a snippet for the buildName virtual method (much easier than explaining it) \ud83d\ude04", "author": "gastaldi", "createdAt": "2020-03-10T13:12:33Z", "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -242,6 +242,47 @@ If you need to render the unescaped value:\n <1> `title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`\n <2> `paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`\n \n+===== Virtual Methods\n+\n+A virtual method is a part of an expression that looks like a regular Java method invocation.\n+It's called \"virtual\" because it does not have to match the actual method of a Java class.\n+In fact, any virtual method is handled by a value resolver.\n+The only difference compared to regular parts of an expression is that for a virtual method a value resolver accepts parameters that are also expressions.\n+Parameters are always evaluated first.\n+\n+.Virtual Method Example\n+[source,html]\n+----\n+<html>\n+<h1>{item.buildName(item.name,5)}</h1> <1>\n+</html>\n+----\n+<1> `buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` (integer literal). ", "originalCommit": "63582775b56ed663148c18abae04058a88f7f485", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMxMzQ3OA==", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390313478", "bodyText": "Ok. I'dd add some more description.", "author": "mkouba", "createdAt": "2020-03-10T13:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMTU0Mw=="}], "type": "inlineReview"}, {"oid": "84ec75662431342f80dd1f35de2f9961ed865476", "url": "https://github.com/quarkusio/quarkus/commit/84ec75662431342f80dd1f35de2f9961ed865476", "message": "Qute - support nested expressions/virtual methods as virtual methods parameters\n\n- resolves #7592", "committedDate": "2020-03-10T14:33:44Z", "type": "commit"}, {"oid": "84ec75662431342f80dd1f35de2f9961ed865476", "url": "https://github.com/quarkusio/quarkus/commit/84ec75662431342f80dd1f35de2f9961ed865476", "message": "Qute - support nested expressions/virtual methods as virtual methods parameters\n\n- resolves #7592", "committedDate": "2020-03-10T14:33:44Z", "type": "forcePushed"}]}