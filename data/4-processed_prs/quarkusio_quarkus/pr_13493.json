{"pr_number": 13493, "pr_title": "Qute: TemplateInstance - add createUni(), remove deprecated publisher()", "pr_createdAt": "2020-11-26T15:14:22Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13493", "timeline": [{"oid": "9412502309e341f9fcb7e3481d34ff99fbb4ff1f", "url": "https://github.com/quarkusio/quarkus/commit/9412502309e341f9fcb7e3481d34ff99fbb4ff1f", "message": "Qute: TemplateInstance - add createUni(), remove deprecated publisher()\n\n- also mention Mutiny in the docs\n- resolves #11026", "committedDate": "2020-11-26T15:40:00Z", "type": "forcePushed"}, {"oid": "c03316f1807b314e03ca420ee392a1531c641ba0", "url": "https://github.com/quarkusio/quarkus/commit/c03316f1807b314e03ca420ee392a1531c641ba0", "message": "Qute: TemplateInstance - add createUni(), remove deprecated publisher()\n\n- also mention Mutiny in the docs\n- resolves #11026", "committedDate": "2020-11-26T15:56:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyMzU5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531123592", "bodyText": "What about asUni? and asMulti?", "author": "cescoffier", "createdAt": "2020-11-26T16:06:39Z", "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -862,6 +863,50 @@ We can include the tag like this:\n <1> `item` is resolved to an iteration element and can be referenced using the `it` key in the tag template.\n <2> Tag content injected using the `nested-content` key in the tag template.\n \n+=== Rendering Output\n+\n+`TemplateInstance` provides several ways to trigger the rendering and consume the result.\n+The most straightforward approach is represented by `TemplateInstance.render()`.\n+This method triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished, and returns the output.\n+By contrast, `TemplateInstance.renderAsync()` returns a `CompletionStage<String>` which is completed when the rendering is finished.\n+\n+.`TemplateInstance.renderAsync()` Example\n+[source,java]\n+----\n+template.data(foo).renderAsync().whenComplete((result, failure) -> { <1>\n+   if (failure == null) {\n+      // consume the output...\n+   } else {\n+      // process failure...\n+   }\n+};\n+----\n+<1> Register a callback that is executed once the rendering is finished. \n+\n+There are also two methods that return https://smallrye.io/smallrye-mutiny/[Mutiny] types.\n+`TemplateInstance.createUni()` returns a new `Uni<String>` object.", "originalCommit": "c03316f1807b314e03ca420ee392a1531c641ba0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQxNTkwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531415909", "bodyText": "Hm, I don't know. I usually only use asX() methods to easily cast a more generic type to a subtype, e.g. something like org.jboss.jandex.AnnotationTarget.asMethod().", "author": "mkouba", "createdAt": "2020-11-27T07:06:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyMzU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQxNjI4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531416283", "bodyText": "as you have renderAsync, maybe renderAsUni and renderAsMulti?", "author": "cescoffier", "createdAt": "2020-11-27T07:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyMzU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQxOTMzMA==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531419330", "bodyText": "The thing is that createUni() and createMulti() don't trigger rendering. It's the subscription that does trigger it.", "author": "mkouba", "createdAt": "2020-11-27T07:17:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyMzU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NzkxOA==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531577918", "bodyText": "Right!\nSo, let's keep createUni and createMulti.", "author": "cescoffier", "createdAt": "2020-11-27T12:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyMzU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyNDE1Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531124157", "bodyText": "When not just Uni.createFrom().completionStage(() -> renderAsync()) ?", "author": "cescoffier", "createdAt": "2020-11-26T16:07:49Z", "path": "independent-projects/qute/core/src/main/java/io/quarkus/qute/TemplateImpl.java", "diffHunk": "@@ -79,6 +80,17 @@ public String render() {\n                     }));\n         }\n \n+        @Override\n+        public Uni<String> createUni() {\n+            return Uni.createFrom().emitter(emitter -> renderAsync().whenComplete((r, f) -> {", "originalCommit": "c03316f1807b314e03ca420ee392a1531c641ba0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQxNjM2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13493#discussion_r531416367", "bodyText": "Ah, I missed the UniCreate.completionStage(Supplier<? extends CompletionStage<? extends T>>) variant. All the reactive APIs are so rich ;-).", "author": "mkouba", "createdAt": "2020-11-27T07:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyNDE1Nw=="}], "type": "inlineReview"}, {"oid": "0edf964f709f961894cda175c44b18286eeb31ad", "url": "https://github.com/quarkusio/quarkus/commit/0edf964f709f961894cda175c44b18286eeb31ad", "message": "Qute: TemplateInstance - add createUni(), remove deprecated publisher()\n\n- also mention Mutiny in the docs\n- resolves #11026", "committedDate": "2020-11-27T07:18:30Z", "type": "commit"}, {"oid": "0edf964f709f961894cda175c44b18286eeb31ad", "url": "https://github.com/quarkusio/quarkus/commit/0edf964f709f961894cda175c44b18286eeb31ad", "message": "Qute: TemplateInstance - add createUni(), remove deprecated publisher()\n\n- also mention Mutiny in the docs\n- resolves #11026", "committedDate": "2020-11-27T07:18:30Z", "type": "forcePushed"}]}