{"pr_number": 7439, "pr_title": "Prevent cleaning up the build directory when QuarkusProdModeTest fails", "pr_createdAt": "2020-02-26T12:52:07Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7439", "timeline": [{"oid": "6bcc8a53e964f20a05ec720fb735d9dd4e99e397", "url": "https://github.com/quarkusio/quarkus/commit/6bcc8a53e964f20a05ec720fb735d9dd4e99e397", "message": "Prevent cleaning up the build directory when QuarkusProdModeTest fails\n\nThis is very useful for post-mortem analysis", "committedDate": "2020-02-26T12:48:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3NzczOA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384477738", "bodyText": "Maybe it would be nice to log.debug here", "author": "gastaldi", "createdAt": "2020-02-26T13:03:25Z", "path": "extensions/kubernetes/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -200,6 +200,11 @@ public void build(ApplicationInfoBuildItem applicationInfo,\n                             resourceEntry.getValue().getBytes(StandardCharsets.UTF_8)));\n         }\n \n+        try {\n+            Files.delete(root);\n+        } catch (IOException ignored) {\n+", "originalCommit": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3OTAxMA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384479010", "bodyText": "Sure, fixed", "author": "geoand", "createdAt": "2020-02-26T13:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3NzczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3ODIxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384478215", "bodyText": "Can we use a logger here instead?", "author": "gastaldi", "createdAt": "2020-02-26T13:04:19Z", "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusProdModeTest.java", "diffHunk": "@@ -237,48 +240,53 @@ public void run() {\n             exportArchive(deploymentDir, testClass);\n \n             Path testLocation = PathTestHelper.getTestClassesLocation(testClass);\n-            try {\n-                QuarkusBootstrap.Builder builder = QuarkusBootstrap.builder(deploymentDir)\n-                        .setMode(QuarkusBootstrap.Mode.PROD)\n-                        .setLocalProjectDiscovery(true)\n-                        .addExcludedPath(testLocation)\n-                        .setProjectRoot(testLocation)\n-                        .setTargetDirectory(buildDir)\n-                        .setForcedDependencies(forcedDependencies.stream().map(d -> new AppDependency(d, \"compile\"))\n-                                .collect(Collectors.toList()));\n-                if (applicationName != null) {\n-                    builder.setBaseName(applicationName);\n-                }\n-                curatedApplication = builder.build().bootstrap();\n+            QuarkusBootstrap.Builder builder = QuarkusBootstrap.builder(deploymentDir)\n+                    .setMode(QuarkusBootstrap.Mode.PROD)\n+                    .setLocalProjectDiscovery(true)\n+                    .addExcludedPath(testLocation)\n+                    .setProjectRoot(testLocation)\n+                    .setTargetDirectory(buildDir)\n+                    .setForcedDependencies(forcedDependencies.stream().map(d -> new AppDependency(d, \"compile\"))\n+                            .collect(Collectors.toList()));\n+            if (applicationName != null) {\n+                builder.setBaseName(applicationName);\n+            }\n+            curatedApplication = builder.build().bootstrap();\n \n-                AugmentAction action = curatedApplication.createAugmentor();\n-                AugmentResult result = action.createProductionApplication();\n+            AugmentAction action = curatedApplication.createAugmentor();\n+            AugmentResult result = action.createProductionApplication();\n \n-                Path builtResultArtifact = setupProdModeResults(testClass, buildDir, result);\n+            Path builtResultArtifact = setupProdModeResults(testClass, buildDir, result);\n \n-                if (run) {\n-                    startBuiltResult(builtResultArtifact);\n-                    RestAssuredURLManager.setURL(false,\n-                            runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY) != null\n-                                    ? Integer.parseInt(runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY))\n-                                    : DEFAULT_HTTP_PORT_INT);\n+            if (run) {\n+                startBuiltResult(builtResultArtifact);\n+                RestAssuredURLManager.setURL(false,\n+                        runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY) != null\n+                                ? Integer.parseInt(runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY))\n+                                : DEFAULT_HTTP_PORT_INT);\n \n-                    if (logfilePath != null) {\n-                        logfileField = Arrays.stream(testClass.getDeclaredFields()).filter(\n-                                f -> f.isAnnotationPresent(LogFile.class) && Path.class.equals(f.getType()))\n-                                .findAny();\n-                        logfileField.ifPresent(f -> f.setAccessible(true));\n-                    }\n+                if (logfilePath != null) {\n+                    logfileField = Arrays.stream(testClass.getDeclaredFields()).filter(\n+                            f -> f.isAnnotationPresent(LogFile.class) && Path.class.equals(f.getType()))\n+                            .findAny();\n+                    logfileField.ifPresent(f -> f.setAccessible(true));\n                 }\n-\n-            } catch (Throwable e) {\n-                throw e;\n             }\n+\n         } catch (Exception e) {\n+            preventOutputDirCleanup = true;\n+            logOutputPathForPostMortem();\n             throw new RuntimeException(e);\n         }\n     }\n \n+    private void logOutputPathForPostMortem() {\n+        if (buildDir != null) {\n+            String message = \"The output of the Quarkus build can be found at \" + buildDir.toAbsolutePath().toString();\n+            System.err.println(message);", "originalCommit": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3ODUxMA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384478510", "bodyText": "I tried, it didn't work :)", "author": "geoand", "createdAt": "2020-02-26T13:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3ODIxNQ=="}], "type": "inlineReview"}, {"oid": "c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "url": "https://github.com/quarkusio/quarkus/commit/c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "message": "Cleanup the temporary output of the KubernetesProcessor", "committedDate": "2020-02-26T13:05:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MTU5MA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384481590", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.debug(\"Unable to delete file\", e);\n          \n          \n            \n                        LOG.debug(\"Unable to delete \" + root, e);", "author": "gastaldi", "createdAt": "2020-02-26T13:11:17Z", "path": "extensions/kubernetes/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -200,6 +200,11 @@ public void build(ApplicationInfoBuildItem applicationInfo,\n                             resourceEntry.getValue().getBytes(StandardCharsets.UTF_8)));\n         }\n \n+        try {\n+            Files.delete(root);\n+        } catch (IOException e) {\n+            LOG.debug(\"Unable to delete file\", e);", "originalCommit": "c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MjE2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384482162", "bodyText": "Done", "author": "geoand", "createdAt": "2020-02-26T13:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MTU5MA=="}], "type": "inlineReview"}, {"oid": "f11827b494f948b7a01d9c5705e7c995d09800d5", "url": "https://github.com/quarkusio/quarkus/commit/f11827b494f948b7a01d9c5705e7c995d09800d5", "message": "Cleanup the temporary output of the KubernetesProcessor", "committedDate": "2020-02-26T13:12:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384483139", "bodyText": "root is a directory, you need to recurse into its subfolders to delete it", "author": "gastaldi", "createdAt": "2020-02-26T13:14:17Z", "path": "extensions/kubernetes/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -200,6 +200,11 @@ public void build(ApplicationInfoBuildItem applicationInfo,\n                             resourceEntry.getValue().getBytes(StandardCharsets.UTF_8)));\n         }\n \n+        try {\n+            Files.delete(root);", "originalCommit": "f11827b494f948b7a01d9c5705e7c995d09800d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzM2NA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384483364", "bodyText": "I think there is an utility method somewhere", "author": "gastaldi", "createdAt": "2020-02-26T13:14:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NDEzOA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384484138", "bodyText": "io.quarkus.deployment.util.FileUtil#deleteDirectory", "author": "gastaldi", "createdAt": "2020-02-26T13:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NDQ2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384484461", "bodyText": "Actually we don't because the contents have already been deleted by Dekorate. But Dekorate doesn't delete the directory itself, which is what this commit addresses", "author": "geoand", "createdAt": "2020-02-26T13:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NDYwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384484609", "bodyText": "or io.quarkus.bootstrap.util.IoUtils#recursiveDelete", "author": "gastaldi", "createdAt": "2020-02-26T13:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NTgxMg==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384485812", "bodyText": "Note: we should really merge similar utility methods someday :)", "author": "gastaldi", "createdAt": "2020-02-26T13:19:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NjA5OA==", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384486098", "bodyText": "In any case, I added it and made it a little more fool-proof", "author": "geoand", "createdAt": "2020-02-26T13:19:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ=="}], "type": "inlineReview"}, {"oid": "70a719e6c7048d92c9e3e515fc7b94a2c6529e60", "url": "https://github.com/quarkusio/quarkus/commit/70a719e6c7048d92c9e3e515fc7b94a2c6529e60", "message": "Cleanup the temporary output of the KubernetesProcessor", "committedDate": "2020-02-26T13:19:35Z", "type": "forcePushed"}, {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "url": "https://github.com/quarkusio/quarkus/commit/f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "message": "Cleanup the temporary output of the KubernetesProcessor", "committedDate": "2020-02-26T13:20:34Z", "type": "commit"}, {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "url": "https://github.com/quarkusio/quarkus/commit/f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "message": "Cleanup the temporary output of the KubernetesProcessor", "committedDate": "2020-02-26T13:20:34Z", "type": "forcePushed"}]}