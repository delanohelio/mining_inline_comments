{"pr_number": 7073, "pr_title": "Handle MongoDB BsonDiscriminator", "pr_createdAt": "2020-02-07T13:43:34Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7073", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NTM3OA==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376895378", "bodyText": "I don't think this sentence provides any useful information. I propose we drop it and add the link to the next sentence", "author": "geoand", "createdAt": "2020-02-10T07:11:49Z", "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,", "originalCommit": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyNDgwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376924805", "bodyText": "I think we need to tell the user that the POJO codec is initialized by Quarkus in some way, and in the previous section we talk about creating custom codec so I wanted to make it clear that this is not mandatory as in most cases the pojo codec will works OOTB.", "author": "loicmathieu", "createdAt": "2020-02-10T08:42:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NTM3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyNzM5NA==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376927394", "bodyText": "Then perhaps the 2 sentences can be combined like so:\nThe POJO Codec provides a set of annotations that enable the customization of the way a POJO is mapped to a MongoDB collection and this codec is initialized automatically by Quarkus", "author": "geoand", "createdAt": "2020-02-10T08:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NTM3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NTk5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376895995", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.\n          \n          \n            \n            The POJO Codec provides a set of annotations that enable the customization of the way a POJO is mapped to a MongoDB collection.", "author": "geoand", "createdAt": "2020-02-10T07:14:03Z", "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,\n+you will be able to avoid the creation of a specific codec.\n+\n+The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.", "originalCommit": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NjM2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376896361", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            One of these annotations is the `@BsonDiscriminator` annotation that allows to store in a single collection multiple Java types by adding\n          \n          \n            \n            One of these annotations is the `@BsonDiscriminator` annotation that allows to storage multiple Java types in a single MongoDB collection by adding", "author": "geoand", "createdAt": "2020-02-10T07:15:26Z", "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,\n+you will be able to avoid the creation of a specific codec.\n+\n+The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.\n+\n+One of these annotations is the `@BsonDiscriminator` annotation that allows to store in a single collection multiple Java types by adding", "originalCommit": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NjYwOA==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376896608", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` inside the POJO codec, so you don't have to do it by yourself.\n          \n          \n            \n            Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` with the POJO codec.", "author": "geoand", "createdAt": "2020-02-10T07:16:28Z", "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,\n+you will be able to avoid the creation of a specific codec.\n+\n+The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.\n+\n+One of these annotations is the `@BsonDiscriminator` annotation that allows to store in a single collection multiple Java types by adding\n+a discriminator field inside the document. It can be useful when working with abstract types or interfaces.\n+\n+Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` inside the POJO codec, so you don't have to do it by yourself.", "originalCommit": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5Njc5MA==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376896790", "bodyText": "I don't think this can happen really... And if it does it's doubtful that AbstractMongoClientProducer.class.getClassLoader() will save you (certainly not dev mode that is :))", "author": "geoand", "createdAt": "2020-02-10T07:17:13Z", "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/AbstractMongoClientProducer.java", "diffHunk": "@@ -217,11 +219,24 @@ private MongoClientSettings createMongoConfiguration(MongoClientConfig config) {\n         }\n         // add pojo codec provider with automatic capabilities\n         // it always needs to be the last codec provided\n-        CodecProvider pojoCodecProvider = PojoCodecProvider.builder()\n+        PojoCodecProvider.Builder pojoCodecProviderBuilder = PojoCodecProvider.builder()\n                 .automatic(true)\n-                .conventions(Conventions.DEFAULT_CONVENTIONS)\n-                .build();\n-        providers.add(pojoCodecProvider);\n+                .conventions(Conventions.DEFAULT_CONVENTIONS);\n+        // register bson discriminators\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        if (classLoader == null) {", "originalCommit": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyODA5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376928097", "bodyText": "I copied this pattern from the Smallrye Fault Tolerance extension, and I just check almost all extensions directly used Thread.currentThread().getContextClassLoader() so it should be safe to use it.", "author": "loicmathieu", "createdAt": "2020-02-10T08:50:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5Njc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzMDEzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376930139", "bodyText": "Yeah, I can't see a scenario where Thread.currentThread().getContextClassLoader() will return null. In any case this is very minor so it's not worth putting too much thought into it", "author": "geoand", "createdAt": "2020-02-10T08:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5Njc5MA=="}], "type": "inlineReview"}, {"oid": "191c53d660651a6890dd41084fd86b49a4c9c1a7", "url": "https://github.com/quarkusio/quarkus/commit/191c53d660651a6890dd41084fd86b49a4c9c1a7", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292", "committedDate": "2020-02-10T09:01:07Z", "type": "forcePushed"}, {"oid": "9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "url": "https://github.com/quarkusio/quarkus/commit/9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292", "committedDate": "2020-02-10T12:12:57Z", "type": "commit"}, {"oid": "9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "url": "https://github.com/quarkusio/quarkus/commit/9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292", "committedDate": "2020-02-10T12:12:57Z", "type": "forcePushed"}]}