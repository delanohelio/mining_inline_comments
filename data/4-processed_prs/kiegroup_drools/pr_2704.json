{"pr_number": 2704, "pr_title": "DROOLS-4899 DMN demo extended builtin function for runtime", "pr_createdAt": "2020-01-03T10:45:24Z", "pr_url": "https://github.com/kiegroup/drools/pull/2704", "timeline": [{"oid": "9521f1f2cfec18dff4275e7a712f9af139ee0eef", "url": "https://github.com/kiegroup/drools/commit/9521f1f2cfec18dff4275e7a712f9af139ee0eef", "message": "DROOLS-4899 DMN extended builtin function for runtime", "committedDate": "2020-01-03T10:43:37Z", "type": "commit"}, {"oid": "73bfcbab9e08ea6bcfe688e2c419a1ecd80ad4cf", "url": "https://github.com/kiegroup/drools/commit/73bfcbab9e08ea6bcfe688e2c419a1ecd80ad4cf", "message": ".", "committedDate": "2020-01-03T12:55:52Z", "type": "commit"}, {"oid": "5297a45fad993ef52bfb6123bd64cc15000248b1", "url": "https://github.com/kiegroup/drools/commit/5297a45fad993ef52bfb6123bd64cc15000248b1", "message": "Revert kie-wise builtin function", "committedDate": "2020-01-03T14:40:43Z", "type": "commit"}, {"oid": "f34ecb6ba4e87605de30d6d87a799edcd07e68a9", "url": "https://github.com/kiegroup/drools/commit/f34ecb6ba4e87605de30d6d87a799edcd07e68a9", "message": "revert -core test", "committedDate": "2020-01-03T15:14:47Z", "type": "commit"}, {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372", "url": "https://github.com/kiegroup/drools/commit/5bfe6a7856149bc972060e24226f819c95bfd372", "message": "Provide demo of function", "committedDate": "2020-01-03T15:15:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDIyNg==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364284226", "bodyText": "Please add missing license header.", "author": "jiripetrlik", "createdAt": "2020-01-08T15:19:06Z", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountDMNProfile.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.kie.dmn.core.compiler.profiles;", "originalCommit": "5bfe6a7856149bc972060e24226f819c95bfd372", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMDE3NQ==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364420175", "bodyText": "well spotted, thanks", "author": "tarilabs", "createdAt": "2020-01-08T20:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDIyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDI5NA==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364284294", "bodyText": "Please add missing license header.", "author": "jiripetrlik", "createdAt": "2020-01-08T15:19:14Z", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountFunction.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.kie.dmn.core.compiler.profiles;", "originalCommit": "5bfe6a7856149bc972060e24226f819c95bfd372", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMDIwMg==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364420202", "bodyText": "well spotted, thanks", "author": "tarilabs", "createdAt": "2020-01-08T20:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDI5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NTMyNw==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364285327", "bodyText": "Is it necessary to write dmn result to console? I would suggest to remove this debugging output.", "author": "jiripetrlik", "createdAt": "2020-01-08T15:21:09Z", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/DMNProfilesTest.java", "diffHunk": "@@ -74,4 +74,35 @@ public void testJust47() {\n         final DMNContext result = dmnResult.getContext();\n         assertThat(result.get(\"decision result\"), is(new BigDecimal(47)));\n     }\n+\n+    @Test\n+    public void testCustomModelCount() {\n+        final KieServices ks = KieServices.Factory.get();\n+        final KieFileSystem kfs = ks.newKieFileSystem();\n+\n+        final KieModuleModel kmm = ks.newKieModuleModel();\n+        kmm.setConfigurationProperty(\"org.kie.dmn.profiles.CustomModelCountDMNProfile\", CustomModelCountDMNProfile.class.getCanonicalName());\n+        kfs.writeKModuleXML(kmm.toXML());\n+        kfs.write(ks.getResources().newClassPathResource(\"customModelCount.dmn\", this.getClass()));\n+\n+        final KieBuilder kieBuilder = ks.newKieBuilder(kfs).buildAll();\n+        final Results results = kieBuilder.getResults();\n+        assertThat(results.getMessages().toString(), results.hasMessages(org.kie.api.builder.Message.Level.ERROR), is(false));\n+\n+        final KieContainer kieContainer = ks.newKieContainer(ks.getRepository().getDefaultReleaseId());\n+        final DMNRuntime runtime = kieContainer.newKieSession().getKieRuntime(DMNRuntime.class);\n+\n+        final DMNModel dmnModel = runtime.getModel(\"http://www.trisotech.com/definitions/_5d9e63ac-e73a-4b9e-8635-760f0c23c0ad\", \"Drawing 1\");\n+        assertThat(dmnModel, notNullValue());\n+        assertThat(DMNRuntimeUtil.formatMessages(dmnModel.getMessages()), dmnModel.hasErrors(), is(false));\n+\n+        final DMNContext context = DMNFactory.newContext();\n+\n+        final DMNResult dmnResult = runtime.evaluateAll(dmnModel, context);\n+        System.out.println(dmnResult);", "originalCommit": "5bfe6a7856149bc972060e24226f819c95bfd372", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMDI3OA==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364420278", "bodyText": "well spotted, sorry this slipped through, thanks", "author": "tarilabs", "createdAt": "2020-01-08T20:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NTMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NjgyMg==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364286822", "bodyText": "Is this method part of some public API? Do we need to keep it as deprecated? Can't we delete it completely?", "author": "jiripetrlik", "createdAt": "2020-01-08T15:23:48Z", "path": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/lang/impl/EvaluationContextImpl.java", "diffHunk": "@@ -58,15 +58,18 @@ public EvaluationContextImpl(ClassLoader cl, FEELEventListenersManager eventsMan\n         push( global );\n     }\n \n+    @Deprecated", "originalCommit": "5bfe6a7856149bc972060e24226f819c95bfd372", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMTEyMQ==", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364421121", "bodyText": "Is this method part of some public API?\n\nNo\n\nDo we need to keep it as deprecated?\n\nI am introducing with this PR that is deprecated as I realized this constructor is not convenient as I did this specific task\n\nCan't we delete it completely?\n\nIt will be part of another task, for this PR I am realizing this constructor is just plain painful as it's not consistent with the other constructors.", "author": "tarilabs", "createdAt": "2020-01-08T20:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NjgyMg=="}], "type": "inlineReview"}, {"oid": "7b78fa24775f27b52705b0d8230961c7360c11d6", "url": "https://github.com/kiegroup/drools/commit/7b78fa24775f27b52705b0d8230961c7360c11d6", "message": "implement code review feedback", "committedDate": "2020-01-09T09:16:11Z", "type": "commit"}]}