{"pr_number": 3145, "pr_title": "[DROOLS-5647] Add range indexing to AlphaNode", "pr_createdAt": "2020-10-07T07:44:53Z", "pr_url": "https://github.com/kiegroup/drools/pull/3145", "timeline": [{"oid": "480554d65a8ba71fe58d4d230c0b98f429575986", "url": "https://github.com/kiegroup/drools/commit/480554d65a8ba71fe58d4d230c0b98f429575986", "message": "[DROOLS-5647] Add range indexing to AlphaNode", "committedDate": "2020-10-20T08:51:26Z", "type": "commit"}, {"oid": "480554d65a8ba71fe58d4d230c0b98f429575986", "url": "https://github.com/kiegroup/drools/commit/480554d65a8ba71fe58d4d230c0b98f429575986", "message": "[DROOLS-5647] Add range indexing to AlphaNode", "committedDate": "2020-10-20T08:51:26Z", "type": "forcePushed"}, {"oid": "6c4e822da19307edde5b541f77cc5e4d6784b5da", "url": "https://github.com/kiegroup/drools/commit/6c4e822da19307edde5b541f77cc5e4d6784b5da", "message": "- Fixed some code smells", "committedDate": "2020-10-21T03:04:37Z", "type": "commit"}, {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "url": "https://github.com/kiegroup/drools/commit/9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "message": "- Fixed RBTree.range()", "committedDate": "2020-10-21T06:14:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwNDI5NA==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r509904294", "bodyText": "A little uncomfortable to change the method signature for this minor tuning parameter. But I follow the same approach as alphaNodeHashingThreshold at the moment. We may file another JIRA to check if we can simplify it.", "author": "tkobayas", "createdAt": "2020-10-22T06:16:54Z", "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CompiledNetwork.java", "diffHunk": "@@ -167,8 +167,8 @@ public void startWindowNode(WindowNode windowNode) {\n     }\n \n     @Override\n-    public ObjectSinkPropagator addObjectSink(ObjectSink sink, int alphaNodeHashingThreshold) {\n-        return originalSinkPropagator.addObjectSink(sink, alphaNodeHashingThreshold);\n+    public ObjectSinkPropagator addObjectSink(ObjectSink sink, int alphaNodeHashingThreshold, int alphaNodeRangeIndexThreshold) {\n+        return originalSinkPropagator.addObjectSink(sink, alphaNodeHashingThreshold, alphaNodeRangeIndexThreshold);", "originalCommit": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIwODUwMQ==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510208501", "bodyText": "@tkobayas I agree, it would be better to encapsulate all this configuration parameter in single conf object and pass it around, but this is an improvement that we can add later. Please create another jira to avoid forgetting it.", "author": "mariofusco", "createdAt": "2020-10-22T14:28:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwNDI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3MTIwMw==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510571203", "bodyText": "@mariofusco Thanks. I filed https://issues.redhat.com/browse/DROOLS-5755", "author": "tkobayas", "createdAt": "2020-10-23T03:18:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwNDI5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIxMzI1Mg==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510213252", "bodyText": "Is this necessary? Isn't the AlphaNodeRangeIndexThreshold enough to also completely disable the range indexing when required?", "author": "mariofusco", "createdAt": "2020-10-22T14:34:29Z", "path": "drools-core/src/main/java/org/drools/core/reteoo/CompositeObjectSinkAdapter.java", "diffHunk": "@@ -51,43 +57,59 @@\n     //    public static final int    THRESHOLD_TO_HASH              = Integer.parseInt( System.getProperty( HASH_THRESHOLD_SYSTEM_PROPERTY,\n     //                                                                                                      \"3\" ) );\n \n+    public static final boolean RANGE_INDEX_ENABLED = Boolean.parseBoolean( System.getProperty( \"drools.alphaNodeRangeIndex.enabled\", \"true\"));", "originalCommit": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYxNzgwOQ==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510617809", "bodyText": "Sure, I'll remove the system property.", "author": "tkobayas", "createdAt": "2020-10-23T05:35:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIxMzI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjgxOQ==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510696819", "bodyText": "Is this rule used as reference for the test below? I'd add a comment", "author": "lucamolteni", "createdAt": "2020-10-23T07:45:46Z", "path": "drools-core/src/test/java/org/drools/core/util/index/RangeIndexTest.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.drools.core.util.index;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.function.IntPredicate;\n+\n+import org.assertj.core.api.Assertions;\n+import org.drools.core.reteoo.AlphaNode;\n+import org.drools.core.test.model.Person;\n+import org.drools.core.util.Entry;\n+import org.drools.core.util.FastIterator;\n+import org.drools.core.util.RBTree.Node;\n+import org.junit.Test;\n+\n+public class RangeIndexTest {\n+\n+    final String drl =", "originalCommit": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcwNTMyNg==", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510705326", "bodyText": "@lucamolteni Thanks! I'll add a comment", "author": "tkobayas", "createdAt": "2020-10-23T08:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjgxOQ=="}], "type": "inlineReview"}, {"oid": "11609a421585d13bef79479e4fb5c6389e3a0abc", "url": "https://github.com/kiegroup/drools/commit/11609a421585d13bef79479e4fb5c6389e3a0abc", "message": "- Use TreeMap instead of RBTree for RangeIndex\n- Removed RBTree, LeftTupleIndexRangeRBTree and RightTupleIndexRangeRBTree because they are no longer used\n- Minor test changes to test with ANC easier", "committedDate": "2020-10-23T08:07:32Z", "type": "commit"}]}