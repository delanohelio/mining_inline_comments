{"pr_number": 3076, "pr_title": "[DROOLS-5613] Disable Trusty pmml when jpmml is present", "pr_createdAt": "2020-09-02T14:57:30Z", "pr_url": "https://github.com/kiegroup/drools/pull/3076", "timeline": [{"oid": "3adefe0b6eb7d331d7504780712a1c88faabe0c0", "url": "https://github.com/kiegroup/drools/commit/3adefe0b6eb7d331d7504780712a1c88faabe0c0", "message": "[DROOLS-5613] Completely disabling kie-pmml (legacy and trusty) if jpmml is present in classpath", "committedDate": "2020-09-02T14:55:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4ODUyNQ==", "url": "https://github.com/kiegroup/drools/pull/3076#discussion_r482888525", "bodyText": "Please add some log info that JPMML was not found. At least at debug level.", "author": "jiripetrlik", "createdAt": "2020-09-03T10:54:05Z", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLAssemblerService.java", "diffHunk": "@@ -76,6 +79,16 @@ private static boolean isToEnable() {\n         }\n     }\n \n+    private static boolean isjPMMLAvailableToClassLoader() {\n+        try {\n+            Thread.currentThread().getContextClassLoader().loadClass(\"org.kie.dmn.jpmml.DMNjPMMLInvocationEvaluator\");\n+            logger.info(\"jpmml libraries available on classpath, skipping kie-pmml parsing and compilation\");\n+            return true;\n+        } catch (ClassNotFoundException e) {\n+            return false;", "originalCommit": "3adefe0b6eb7d331d7504780712a1c88faabe0c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4OTIwMA==", "url": "https://github.com/kiegroup/drools/pull/3076#discussion_r482889200", "bodyText": "Please add some log message.", "author": "jiripetrlik", "createdAt": "2020-09-03T10:55:11Z", "path": "kie-pmml/src/main/java/org/kie/pmml/assembler/PMMLAssemblerService.java", "diffHunk": "@@ -87,6 +90,16 @@ private static boolean isToEnable() {\n         }\n     }\n \n+    private static boolean isjPMMLAvailableToClassLoader() {\n+        try {\n+            Thread.currentThread().getContextClassLoader().loadClass(\"org.kie.dmn.jpmml.DMNjPMMLInvocationEvaluator\");\n+            log.info(\"jpmml libraries available on classpath, skipping kie-pmml parsing and compilation\");\n+            return true;\n+        } catch (ClassNotFoundException e) {\n+            return false;", "originalCommit": "3adefe0b6eb7d331d7504780712a1c88faabe0c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}