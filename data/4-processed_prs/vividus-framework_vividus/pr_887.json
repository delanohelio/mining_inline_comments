{"pr_number": 887, "pr_title": "[vividus test-transformer] Add new tests", "pr_createdAt": "2020-09-03T10:07:11Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/887", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDAyMw==", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483004023", "bodyText": "it seems it's not used", "author": "valfirst", "createdAt": "2020-09-03T14:05:06Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)", "originalCommit": "8d70a87ac81d68501d200feff706b0b35b18a1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDU3Mw==", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483004573", "bodyText": "java.util.function.Function#identity", "author": "valfirst", "createdAt": "2020-09-03T14:05:49Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };", "originalCommit": "8d70a87ac81d68501d200feff706b0b35b18a1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDcyMA==", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483004720", "bodyText": "why do you need spy?", "author": "valfirst", "createdAt": "2020-09-03T14:06:01Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };\n+    private final ExtendedTableTransformer transformer = spy(ExtendedTableTransformer.class);", "originalCommit": "8d70a87ac81d68501d200feff706b0b35b18a1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwOTEyMg==", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483009122", "bodyText": "does it make sense to use org.junit.jupiter.params.ParameterizedTest? it looks like, you can combine this test and the previous one", "author": "valfirst", "createdAt": "2020-09-03T14:12:14Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };\n+    private final ExtendedTableTransformer transformer = spy(ExtendedTableTransformer.class);\n+\n+    @Test\n+    void testProcessCompetingMandatoryNotNullProperties()\n+    {\n+        Map<String, String> values = Map.of(KEY_1, VALUE_1, KEY_2, VALUE_2);\n+        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->\n+                transformer.processCompetingMandatoryProperties(createProperties(values),\n+                    entry(KEY_1, func), entry(KEY_2, func)));\n+        assertEquals(\"Only one ExamplesTable property must be set, but found both 'key-1' and 'key-2'\",\n+                     exception.getMessage());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatoryNullProperties()\n+    {\n+        Map<String, String> values = Map.of(\"1\", VALUE_1, \"2\", VALUE_2);\n+        IllegalArgumentException exception =\n+               assertThrows(IllegalArgumentException.class, () ->\n+                     transformer.processCompetingMandatoryProperties(createProperties(values),\n+                                 entry(KEY_1, func), entry(KEY_2, func)));\n+        assertEquals(\"One of ExamplesTable properties must be set: either 'key-1' or 'key-2'\", exception.getMessage());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatoryFirstNullProperties()\n+    {\n+        Map<String, String> values = Map.of(\"key\", VALUE_1, KEY_2, VALUE_2);\n+        assertEquals(VALUE_2, transformer.processCompetingMandatoryProperties(createProperties(values),\n+                entry(KEY_1, func), entry(KEY_2, func)).toString());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatorySecondNullProperties()", "originalCommit": "8d70a87ac81d68501d200feff706b0b35b18a1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwOTQxMQ==", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483009411", "bodyText": "does it make sense to use org.junit.jupiter.params.ParameterizedTest? it looks like, you can combine this test and the previous one", "author": "valfirst", "createdAt": "2020-09-03T14:12:41Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };\n+    private final ExtendedTableTransformer transformer = spy(ExtendedTableTransformer.class);\n+\n+    @Test\n+    void testProcessCompetingMandatoryNotNullProperties()\n+    {\n+        Map<String, String> values = Map.of(KEY_1, VALUE_1, KEY_2, VALUE_2);\n+        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->\n+                transformer.processCompetingMandatoryProperties(createProperties(values),\n+                    entry(KEY_1, func), entry(KEY_2, func)));\n+        assertEquals(\"Only one ExamplesTable property must be set, but found both 'key-1' and 'key-2'\",\n+                     exception.getMessage());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatoryNullProperties()", "originalCommit": "8d70a87ac81d68501d200feff706b0b35b18a1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cfc256f615667187983853144c113ffba1ce7a0a", "url": "https://github.com/vividus-framework/vividus/commit/cfc256f615667187983853144c113ffba1ce7a0a", "message": "[vividus test-transformer] Add new tests", "committedDate": "2020-09-03T16:51:12Z", "type": "commit"}, {"oid": "cfc256f615667187983853144c113ffba1ce7a0a", "url": "https://github.com/vividus-framework/vividus/commit/cfc256f615667187983853144c113ffba1ce7a0a", "message": "[vividus test-transformer] Add new tests", "committedDate": "2020-09-03T16:51:12Z", "type": "forcePushed"}]}