{"pr_number": 110, "pr_title": "Add FreeBSD support", "pr_createdAt": "2020-02-28T11:33:20Z", "pr_url": "https://github.com/questdb/questdb/pull/110", "timeline": [{"oid": "5a16a85036e97f93bb0debb27e37f23c23d5bd5a", "url": "https://github.com/questdb/questdb/commit/5a16a85036e97f93bb0debb27e37f23c23d5bd5a", "message": "Add FreeBSD support", "committedDate": "2020-02-28T09:31:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1MzQwMw==", "url": "https://github.com/questdb/questdb/pull/110#discussion_r385653403", "bodyText": "This is a really old school method to check system name.  There is a decent (and up to date) guide on how to do this that can be found here:\nhttps://gitlab.kitware.com/cmake/community/-/wikis/doc/tutorials/How-To-Write-Platform-Checks\nIf above works it would be much better to avoid accidents such as running uname on windows. I know it may not run on windows, but still, external command exec isn't great.", "author": "bluestreak01", "createdAt": "2020-02-28T11:47:47Z", "path": "core/CMakeLists.txt", "diffHunk": "@@ -43,21 +44,40 @@ if (APPLE)\n             src/main/c/osx/accept.c\n     )\n elseif (UNIX)\n-    include_directories($ENV{JAVA_HOME}/include/linux/)\n-    message(${CMAKE_SYSTEM_PROCESSOR})\n-    if (CMAKE_SYSTEM_PROCESSOR MATCHES \"^aarch64\")\n-        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/armlinux)\n-        set(AARCH64 1)\n-    else ()\n-        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/linux)\n-    endif ()\n-    set(\n+    EXEC_PROGRAM(uname OUTPUT_VARIABLE SYSTEM_NAME)\n+    SET(SYSTEM_NAME \"${SYSTEM_NAME}\" CACHE INTERNAL \"\")", "originalCommit": "5a16a85036e97f93bb0debb27e37f23c23d5bd5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3MDAwMw==", "url": "https://github.com/questdb/questdb/pull/110#discussion_r385670003", "bodyText": "I was looking for that... to avoid the EXEC\n\nbuild also failed. CircleCI runs on Linux.", "author": "patrickSpaceSurfer", "createdAt": "2020-02-28T12:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1MzQwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDc3Nw==", "url": "https://github.com/questdb/questdb/pull/110#discussion_r385654777", "bodyText": "it is bit trick to change CMAKE build. Post change it has to be tested across multiple architectures. I anticipate that build will fail on ARM64 because check is done inside of FreeBSD branch - ARM64 is a linux.", "author": "bluestreak01", "createdAt": "2020-02-28T11:51:20Z", "path": "core/CMakeLists.txt", "diffHunk": "@@ -43,21 +44,40 @@ if (APPLE)\n             src/main/c/osx/accept.c\n     )\n elseif (UNIX)\n-    include_directories($ENV{JAVA_HOME}/include/linux/)\n-    message(${CMAKE_SYSTEM_PROCESSOR})\n-    if (CMAKE_SYSTEM_PROCESSOR MATCHES \"^aarch64\")\n-        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/armlinux)\n-        set(AARCH64 1)\n-    else ()\n-        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/linux)\n-    endif ()\n-    set(\n+    EXEC_PROGRAM(uname OUTPUT_VARIABLE SYSTEM_NAME)\n+    SET(SYSTEM_NAME \"${SYSTEM_NAME}\" CACHE INTERNAL \"\")\n+\n+    if (SYSTEM_NAME STREQUAL \"FreeBSD\")\n+        MESSAGE(\"Building for FreeBSD\")\n+        include_directories($ENV{JAVA_HOME}/include/freebsd/)\n+        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/freebsd)\n+        set(\n+            SOURCE_FILES ${SOURCE_FILES}\n+            src/main/c/freebsd/kqueue.c\n+            src/main/c/share/net.c\n+            src/main/c/freebsd/affinity.c\n+            src/main/c/freebsd/accept.c\n+        )\n+    else (SYSTEM_NAME STREQUAL \"FreeBSD\")\n+        MESSAGE(\"Building for GNU/Linux\")\n+        include_directories($ENV{JAVA_HOME}/include/linux/)\n+        message(${CMAKE_SYSTEM_PROCESSOR})\n+        if (CMAKE_SYSTEM_PROCESSOR MATCHES \"^aarch64\")", "originalCommit": "5a16a85036e97f93bb0debb27e37f23c23d5bd5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3MDE2Nw==", "url": "https://github.com/questdb/questdb/pull/110#discussion_r385670167", "bodyText": "I think you have misread it, the check is done in the linux branch", "author": "patrickSpaceSurfer", "createdAt": "2020-02-28T12:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDc3Nw=="}], "type": "inlineReview"}, {"oid": "2d00a88e4ed4a38f9950ac2d7e6e5729ee0fc044", "url": "https://github.com/questdb/questdb/commit/2d00a88e4ed4a38f9950ac2d7e6e5729ee0fc044", "message": "Revert \"Add FreeBSD support\"\nCommited the wrong directory\n\nThis reverts commit 5a16a85036e97f93bb0debb27e37f23c23d5bd5a.", "committedDate": "2020-02-28T12:10:45Z", "type": "commit"}, {"oid": "d396096f478573c479fede1970f29a58f1f61c7b", "url": "https://github.com/questdb/questdb/commit/d396096f478573c479fede1970f29a58f1f61c7b", "message": "Add FreeBSD support", "committedDate": "2020-02-28T12:25:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MzM3OQ==", "url": "https://github.com/questdb/questdb/pull/110#discussion_r385683379", "bodyText": "i guess i wasn't prepare to see else() with a condition inside? may be worth leaving this as else()", "author": "bluestreak01", "createdAt": "2020-02-28T13:03:26Z", "path": "core/CMakeLists.txt", "diffHunk": "@@ -43,21 +43,37 @@ if (APPLE)\n             src/main/c/osx/accept.c\n     )\n elseif (UNIX)\n-    include_directories($ENV{JAVA_HOME}/include/linux/)\n-    message(${CMAKE_SYSTEM_PROCESSOR})\n-    if (CMAKE_SYSTEM_PROCESSOR MATCHES \"^aarch64\")\n-        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/armlinux)\n-        set(AARCH64 1)\n-    else ()\n-        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/linux)\n-    endif ()\n-    set(\n+    if (CMAKE_SYSTEM_NAME MATCHES \"FreeBSD\")\n+        MESSAGE(\"Building for FreeBSD\")\n+        include_directories($ENV{JAVA_HOME}/include/freebsd/)\n+        set(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/main/resources/binaries/freebsd)\n+        set(\n+            SOURCE_FILES ${SOURCE_FILES}\n+            src/main/c/freebsd/kqueue.c\n+            src/main/c/share/net.c\n+            src/main/c/freebsd/affinity.c\n+            src/main/c/freebsd/accept.c\n+        )\n+    else (CMAKE_SYSTEM_NAME MATCHES \"FreeBSD\")", "originalCommit": "d396096f478573c479fede1970f29a58f1f61c7b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}