{"pr_number": 186, "pr_title": "Added README for resolving issue with integration tests", "pr_createdAt": "2020-05-14T12:49:05Z", "pr_url": "https://github.com/ExpediaGroup/circus-train/pull/186", "timeline": [{"oid": "1d569f0db49423ac2cc4e21f700c14fb703be250", "url": "https://github.com/ExpediaGroup/circus-train/commit/1d569f0db49423ac2cc4e21f700c14fb703be250", "message": "added README for resolving issue with integration tests", "committedDate": "2020-05-14T12:47:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE0NjI5MQ==", "url": "https://github.com/ExpediaGroup/circus-train/pull/186#discussion_r425146291", "bodyText": "Not sure what in the produce jar artifacts means.  Did you mean in the produced jar artifacts?", "author": "barnharts4", "createdAt": "2020-05-14T13:42:28Z", "path": "circus-train-integration-tests/README.md", "diffHunk": "@@ -0,0 +1,27 @@\n+## Running the integration tests\n+\n+Generally the integration tests should \"just work\" when run via Maven on the command line and in an IDE. However we have seen issues where \n+an IDE may struggle with the shading and relocating of certain classes which in turn causes certain tests to fail. This manifests itself in \n+tests that pass on the command line but fail in the IDE, usually with a failure like\n+```\n+java.util.ServiceConfigurationError: org.jclouds.providers.ProviderMetadata: Provider org.jclouds.azureblob.AzureBlobProviderMetadata could not be instantiated\n+\tat java.util.ServiceLoader.fail(ServiceLoader.java:232)\n+\tat java.util.ServiceLoader.access$100(ServiceLoader.java:185)\n+\t...\n+Caused by: java.lang.NoClassDefFoundError: com/google/common/base/MoreObjects$ToStringHelper\n+    ...\n+Caused by: java.lang.ClassNotFoundException: com.google.common.base.MoreObjects$ToStringHelper\n+\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\n+\tat java.lang.ClassLoader.loadClass(ClassLoader.java:418)\n+\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)\n+\tat java.lang.ClassLoader.loadClass(ClassLoader.java:351)    \n+```\n+This indicates that the shading and relocation (in the above example of a Guava class) hasn't been activated in the IDE. One solution to this is to \n+rebuild the entire project using Maven on the command line and then re-run the tests in the IDE. The following steps should achieve that: \n+\n+1. Run `mvn -DskipTests install` in the top-level Circus Train parent project (this should repackage and relocate classes using the Maven \n+plugin and generate the correct class files in the produce jar artifacts).", "originalCommit": "1d569f0db49423ac2cc4e21f700c14fb703be250", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE0NzQzNw==", "url": "https://github.com/ExpediaGroup/circus-train/pull/186#discussion_r425147437", "bodyText": "Yes I did, \"packaged\" is probably a better word, will change it.", "author": "massdosage", "createdAt": "2020-05-14T13:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE0NjI5MQ=="}], "type": "inlineReview"}, {"oid": "c6d225df8fb912788e6342c42db76102343f0de6", "url": "https://github.com/ExpediaGroup/circus-train/commit/c6d225df8fb912788e6342c42db76102343f0de6", "message": "PR feedback", "committedDate": "2020-05-14T13:45:40Z", "type": "commit"}]}