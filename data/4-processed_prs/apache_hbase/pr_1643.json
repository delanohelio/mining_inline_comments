{"pr_number": 1643, "pr_title": "HBASE-24318 Create-release scripts fixes and enhancements", "pr_createdAt": "2020-05-04T17:52:36Z", "pr_url": "https://github.com/apache/hbase/pull/1643", "timeline": [{"oid": "00a3b4fa27b3459d33a07ad0cd45277e9f1ab547", "url": "https://github.com/apache/hbase/commit/00a3b4fa27b3459d33a07ad0cd45277e9f1ab547", "message": "Small changes to make dev-support/create-release tools less focused\non hbase project only, while retaining special behaviors for\nhbase sub-projects which share the hbase dist and jira locations.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "db4bab6f57d61ecd89ff0656fa3d9890ce27de0c", "url": "https://github.com/apache/hbase/commit/db4bab6f57d61ecd89ff0656fa3d9890ce27de0c", "message": "narrow 'dry-run' limits so see svn activity up to just before check-in.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "afc35f67535f07c0de6b05201a545f0f59c4f7ac", "url": "https://github.com/apache/hbase/commit/afc35f67535f07c0de6b05201a545f0f59c4f7ac", "message": "Fix several typos and, in case of dry run, enable build step to chain from tag step by keeping the tagged git repo.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "2e18e2885d385de7a48d82e17250bb96f466b96c", "url": "https://github.com/apache/hbase/commit/2e18e2885d385de7a48d82e17250bb96f466b96c", "message": "Changed terminology of release publish steps, from <build|publish>\nto <publish-dist|publish-release>. In fact, what was formerly called\n\"build\" built the distribution tarballs AND published them to dist,\nwhile \"publish\" built the  maven artifacts AND published them to Nexus.\nThe new terminology clarifies what's happening, and removes the appearance\nof order dependendency.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "3c11815ac2047f94c29ff1e6d4794f6ab717352a", "url": "https://github.com/apache/hbase/commit/3c11815ac2047f94c29ff1e6d4794f6ab717352a", "message": "Improve Maven settings.xml file, and names of variables related to it. Remove unnecessary use of \"-Dmaven.repo.local\", put it in settings.xml instead. Stop putting password literals in settings.xml. (It's therefore no longer necessary to delete settings.xml in cleanup, but left that since there is no harm.)", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "8ae7456ec9e9e4556bef4bb9f3587cc0353b8aaa", "url": "https://github.com/apache/hbase/commit/8ae7456ec9e9e4556bef4bb9f3587cc0353b8aaa", "message": "Merge 'tag' into release-build.sh as another stage. Also found and fixed a couple bugs in the current release-tag.sh.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "911ba47c3bbc19d331125741b96179ed3637a584", "url": "https://github.com/apache/hbase/commit/911ba47c3bbc19d331125741b96179ed3637a584", "message": "Delete redundant release-tag.sh script.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "88ab8854f0aa44a60ba5c39c047de16891a9cf49", "url": "https://github.com/apache/hbase/commit/88ab8854f0aa44a60ba5c39c047de16891a9cf49", "message": "Multiple small improvements:\n- Fix publish-snapshot so it does same checks as publish-release.\n- Factor out common maven usages, and move them to build-util.sh.\n- Change default polarity of DRY_RUN to default to true.\n  Change -n (\"no-publish\") to -f (\"force publish\") to actually publish.\n- Fix problems in do-release.sh so it runs correctly outside of docker,\n  including DRY_RUN being exported.\n- Have do-release.sh set REPO (shared maven local repository) if doing all three stages.\n- Cleaned up REPO directory creation.\n- General cleanup of comments and usage.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "2e4c4e8073d6fa0f5502ad18339a5e92b019ed0d", "url": "https://github.com/apache/hbase/commit/2e4c4e8073d6fa0f5502ad18339a5e92b019ed0d", "message": "- fix all 'shellcheck' errors\n- use ${BASH_SOURCE[0]} instead of $0 to determine script directory path\n- smarter way to read version from pom with mvn\n- minor bug fixes", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "c78261205da8ece89a2f641f4f369612e752bc62", "url": "https://github.com/apache/hbase/commit/c78261205da8ece89a2f641f4f369612e752bc62", "message": "A few minor improvements, and some debug code that will be removed later.", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "8463b28ccc243bcf2a4433e7c1510fb970715d0e", "url": "https://github.com/apache/hbase/commit/8463b28ccc243bcf2a4433e7c1510fb970715d0e", "message": "- stop deleting maven settings file, now that it doesn't contain password strings\n- do maven-gpg-plugin config settings in maven settings file correctly as documented\n- fix gpg signing failure on Mac due to gpg-agent timeout\n- remove gpg debug code", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "556e5114754ace5d29581ba332c9539c4c655179", "url": "https://github.com/apache/hbase/commit/556e5114754ace5d29581ba332c9539c4c655179", "message": "- fix various bugs to enable publish-dist, publish-snapshot, and publish-release to work correctly as individual steps and/or without docker\n- fix another gpg timeout\n- improve log reporting from publish-release step", "committedDate": "2020-05-01T04:39:43Z", "type": "commit"}, {"oid": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "url": "https://github.com/apache/hbase/commit/0ed5931ff23cd5e097ace40c8f83545d83865eee", "message": "- fix bug in argument to checkcompatibility.py: replace PACKAGE_VERSION with GIT_REF\n- demote \"PACKAGE_VERSION\" to \"package_version_name\" and undocument it in favor of RELEASE_TAG. Still enable appropriate defaulting in case RELEASE_TAG is undefined.\n- unify RELEASE_VERSION with VERSION, to remove ambiguity and allow it to be set when only running 'publish' step without 'tag'\n- query confirm RELEASE_TAG\n- emphasize that release-build.sh is called for a single action at a time, and should be called from do-release.sh.\n- add '-s' option to do-release.sh\n- suppress maven \"Download from central:\" messages", "committedDate": "2020-05-04T16:12:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyMTkzNg==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419621936", "bodyText": "Good catch!", "author": "beettlle", "createdAt": "2020-05-04T17:59:27Z", "path": "dev-support/create-release/README.txt", "diffHunk": "@@ -37,13 +38,14 @@ $ sudo add-apt-repository -y \\\n $ sudo apt-get update\n $ sudo apt-get install -y docker-ce docker-ce-cli containerd.io\n $ sudo usermod -a -G docker $USERID\n-# LOGOUT and then LOGIN again so $USERID shows as part of docker groupl\n+# LOGOUT and then LOGIN again so $USERID shows as part of docker group", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NTQ0Ng==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419775446", "bodyText": "Highlight this? Add to the release note so RMs notice.", "author": "saintstack", "createdAt": "2020-05-04T22:53:48Z", "path": "dev-support/create-release/do-release-docker.sh", "diffHunk": "@@ -64,24 +65,26 @@ This script runs the release scripts inside a docker image.\n Options:\n \n   -d [path]    required. working directory. output will be written to \"output\" in here.\n-  -n           dry run mode. Checks and local builds, but does not upload anything.\n+  -f           \"force\" -- actually publish this release. Unless you specify '-f', it will\n+               default to dry run mode, which checks and does local builds, but does not upload anything.", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMjAwNA==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420502004", "bodyText": "Great idea, added a Release Note in the jira.", "author": "mattf-apache", "createdAt": "2020-05-06T01:38:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1Mjk4NQ==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420552985", "bodyText": "Good", "author": "saintstack", "createdAt": "2020-05-06T05:30:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NTQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NTY5Ng==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419775696", "bodyText": "good", "author": "saintstack", "createdAt": "2020-05-04T22:54:28Z", "path": "dev-support/create-release/do-release-docker.sh", "diffHunk": "@@ -64,24 +65,26 @@ This script runs the release scripts inside a docker image.\n Options:\n \n   -d [path]    required. working directory. output will be written to \"output\" in here.\n-  -n           dry run mode. Checks and local builds, but does not upload anything.\n+  -f           \"force\" -- actually publish this release. Unless you specify '-f', it will\n+               default to dry run mode, which checks and does local builds, but does not upload anything.\n   -t [tag]     tag for the hbase-rm docker image to use for building (default: \"latest\").\n   -j [path]    path to local JDK installation to use building. By default the script will\n                use openjdk8 installed in the docker image.\n-  -p [project] project to build; default 'hbase'; alternatively, 'hbase-thirdparty', etc.\n-  -s [step]    runs a single step of the process; valid steps are: tag, build, publish. if\n-               none specified, runs tag, then build, and then publish.\n+  -p [project] project to build, such as 'hbase' or 'hbase-thirdparty'; defaults to $PROJECT env var\n+  -s [step]    runs a single step of the process; valid steps are: tag|publish-dist|publish-release.\n+               If none specified, runs tag, then publish-dist, and then publish-release.\n+               'publish-snapshot' is also an allowed, less used, option.", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzEwMQ==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419777101", "bodyText": "I don't know where this comes from. The tag is immediate in my experience. A short wait and just move on would be nice future-to-have.", "author": "saintstack", "createdAt": "2020-05-04T22:58:39Z", "path": "dev-support/create-release/do-release.sh", "diffHunk": "@@ -66,26 +82,34 @@ function should_build {\n   fi\n }\n \n-if should_build \"tag\" && [ $SKIP_TAG = 0 ]; then\n+if should_build \"tag\" && [ \"$SKIP_TAG\" = 0 ]; then\n   run_silent \"Creating release tag $RELEASE_TAG...\" \"tag.log\" \\\n-    \"$SELF/release-tag.sh\"\n-  echo \"It may take some time for the tag to be synchronized to github.\"\n-  echo \"Press enter when you've verified that the new tag ($RELEASE_TAG) is available.\"\n-  read\n+    \"$SELF/release-build.sh\" tag\n+  if is_dry_run; then\n+    export TAG_SAME_DRY_RUN=\"true\";\n+  else\n+    echo \"It may take some time for the tag to be synchronized to github.\"\n+    echo \"Press enter when you've verified that the new tag ($RELEASE_TAG) is available.\"\n+    read -r\n+  fi", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMzc1MA==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420503750", "bodyText": "Apparently it was in the original code swiped from the Spark project. I think it would be pretty easy to replace it with a little wait loop; I'll do that.", "author": "mattf-apache", "createdAt": "2020-05-06T01:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1Mjk1NQ==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420552955", "bodyText": "No hurry. Nice-to-have. Can come later too.", "author": "saintstack", "createdAt": "2020-05-06T05:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1MzcyMA==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420553720", "bodyText": "Done.  See commit db4bab6 just added.\nIt waits in 30-second increments up to 5 minutes.", "author": "mattf-apache", "createdAt": "2020-05-06T05:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzQwNg==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419777406", "bodyText": "publish-dist is new step? If so, put that in release note too... as change.", "author": "saintstack", "createdAt": "2020-05-04T22:59:30Z", "path": "dev-support/create-release/do-release.sh", "diffHunk": "@@ -66,26 +82,34 @@ function should_build {\n   fi\n }\n \n-if should_build \"tag\" && [ $SKIP_TAG = 0 ]; then\n+if should_build \"tag\" && [ \"$SKIP_TAG\" = 0 ]; then\n   run_silent \"Creating release tag $RELEASE_TAG...\" \"tag.log\" \\\n-    \"$SELF/release-tag.sh\"\n-  echo \"It may take some time for the tag to be synchronized to github.\"\n-  echo \"Press enter when you've verified that the new tag ($RELEASE_TAG) is available.\"\n-  read\n+    \"$SELF/release-build.sh\" tag\n+  if is_dry_run; then\n+    export TAG_SAME_DRY_RUN=\"true\";\n+  else\n+    echo \"It may take some time for the tag to be synchronized to github.\"\n+    echo \"Press enter when you've verified that the new tag ($RELEASE_TAG) is available.\"\n+    read -r\n+  fi\n else\n   echo \"Skipping tag creation for $RELEASE_TAG.\"\n fi\n \n-if should_build \"build\"; then\n-  run_silent \"Building ${PROJECT}...\" \"build.log\" \\\n-    \"$SELF/release-build.sh\" build\n+if should_build \"publish-dist\"; then\n+  run_silent \"Publishing distribution packages (tarballs)\" \"publish-dist.log\" \\\n+    \"$SELF/release-build.sh\" publish-dist\n else\n-  echo \"Skipping build step.\"\n+  echo \"Skipping publish-dist step.\"", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMjQxOQ==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420502419", "bodyText": "Done, in Release Note in jira (along with the reason why).", "author": "mattf-apache", "createdAt": "2020-05-06T01:39:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzQwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1MjgzNg==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420552836", "bodyText": "Good.", "author": "saintstack", "createdAt": "2020-05-06T05:29:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3NzQwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODI0Mw==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419778243", "bodyText": "Is this what I do when I want to run a release candidate? Release candidate goes into staging repo first.", "author": "saintstack", "createdAt": "2020-05-04T23:01:39Z", "path": "dev-support/create-release/release-build.sh", "diffHunk": "@@ -20,114 +20,180 @@\n trap cleanup EXIT\n \n # Source in utils.\n-SELF=$(cd $(dirname $0) && pwd)\n+SELF=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n+# shellcheck source=SCRIPTDIR/release-util.sh\n . \"$SELF/release-util.sh\"\n \n # Print usage and exit.\n function exit_with_usage {\n-  cat << EOF\n-Usage: release-build.sh <build|publish-snapshot|publish-release>\n-Creates build deliverables from a tag/commit.\n-Arguments:\n- build             Create binary packages and commit to dist.apache.org/repos/dist/dev/hbase/\n- publish-snapshot  Publish snapshot release to Apache snapshots\n- publish-release   Publish a release to Apache release repo\n-\n-All other inputs are environment variables:\n- GIT_REF - Release tag or commit to build from\n- PACKAGE_VERSION - Release identifier in top level package directory (e.g. 2.1.2RC1)\n- VERSION - (optional) Version of project being built (e.g. 2.1.2)\n- ASF_USERNAME - Username of ASF committer account\n- ASF_PASSWORD - Password of ASF committer account\n- GPG_KEY - GPG key used to sign release artifacts\n- GPG_PASSPHRASE - Passphrase for GPG key\n- PROJECT - The project to build. No default.\n-\n-Set REPO environment to full path to repo to use\n-to avoid re-downloading dependencies on each run.\n+  cat <<'EOF'\n+Usage: release-build.sh <tag|publish-dist|publish-snapshot|publish-release>\n+Creates release deliverables from a tag or commit.\n+Argument: one of 'tag', 'publish-dist', 'publish-snapshot', or 'publish-release'\n+  tag               Prepares for release on specified git branch: Set release version,\n+                    update CHANGES and RELEASENOTES, create release tag,\n+                    increment version for ongoing dev, and publish to Apache git repo.\n+  publish-dist      Build and publish distribution packages (tarballs) to Apache dist repo\n+  publish-snapshot  Build and publish maven artifacts snapshot release to Apache snapshots repo\n+  publish-release   Build and publish maven artifacts release to Apache release repo, and", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwODk1OQ==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420508959", "bodyText": "What one should do to run a release candidate, is invoke do-release-docker.sh (preferably) or do-release.sh (if there's a reason not to use docker).  I agree with your comments here and in the next item below, that this script must clearly be documented as NOT the entrance script.  And yet, the many env variables that get passed around as inter-script communication do need to be documented somewhere.  Let me see if I can move them to do-release.sh, and make the comments and the README more useful.\nOn a completely unrelated note, you mention, as a question,\n\nRelease candidate goes into staging repo first.\n\nThat's correct, for non-snapshot releases/release candidates.  The business with staging repo in Nexus is part of the publish-release step. I did not change its basic logic, which is now in release-util.sh::maven_deploy():\n\nUse mvn to set the version in pom.xml\nDo mvn deploy to Nexus, using -P apache-release,release profiles, which use the maven-release-plugin, nexus-staging-maven-plugin, and configs from the HBase top-level pom and root ASF pom, to manage Nexus deployment.\nAfterward (back to release-build.sh, at the end of publish-release step), the code expects to find that the Staging Repo has been closed (made immutable), and returns the repo ID to the user. Note that for snapshot releases, the Staging Repo intermediate appears not to be used.", "author": "mattf-apache", "createdAt": "2020-05-06T02:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1Mjc4Ng==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420552786", "bodyText": "k. This sounds like it works as it used to which sort of basically worked.", "author": "saintstack", "createdAt": "2020-05-06T05:29:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODI0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODY3Mg==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419778672", "bodyText": "Do you think we need an entrance script or a rename of the one of these scripts as main.sh or some such. As is, operator has to consult the README. I suppose this ok given how specialized this all is.", "author": "saintstack", "createdAt": "2020-05-04T23:02:53Z", "path": "dev-support/create-release/release-build.sh", "diffHunk": "@@ -20,114 +20,180 @@\n trap cleanup EXIT\n \n # Source in utils.\n-SELF=$(cd $(dirname $0) && pwd)\n+SELF=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n+# shellcheck source=SCRIPTDIR/release-util.sh\n . \"$SELF/release-util.sh\"\n \n # Print usage and exit.\n function exit_with_usage {\n-  cat << EOF\n-Usage: release-build.sh <build|publish-snapshot|publish-release>\n-Creates build deliverables from a tag/commit.\n-Arguments:\n- build             Create binary packages and commit to dist.apache.org/repos/dist/dev/hbase/\n- publish-snapshot  Publish snapshot release to Apache snapshots\n- publish-release   Publish a release to Apache release repo\n-\n-All other inputs are environment variables:\n- GIT_REF - Release tag or commit to build from\n- PACKAGE_VERSION - Release identifier in top level package directory (e.g. 2.1.2RC1)\n- VERSION - (optional) Version of project being built (e.g. 2.1.2)\n- ASF_USERNAME - Username of ASF committer account\n- ASF_PASSWORD - Password of ASF committer account\n- GPG_KEY - GPG key used to sign release artifacts\n- GPG_PASSPHRASE - Passphrase for GPG key\n- PROJECT - The project to build. No default.\n-\n-Set REPO environment to full path to repo to use\n-to avoid re-downloading dependencies on each run.\n+  cat <<'EOF'\n+Usage: release-build.sh <tag|publish-dist|publish-snapshot|publish-release>\n+Creates release deliverables from a tag or commit.\n+Argument: one of 'tag', 'publish-dist', 'publish-snapshot', or 'publish-release'\n+  tag               Prepares for release on specified git branch: Set release version,\n+                    update CHANGES and RELEASENOTES, create release tag,\n+                    increment version for ongoing dev, and publish to Apache git repo.\n+  publish-dist      Build and publish distribution packages (tarballs) to Apache dist repo\n+  publish-snapshot  Build and publish maven artifacts snapshot release to Apache snapshots repo\n+  publish-release   Build and publish maven artifacts release to Apache release repo, and\n+                    construct vote email from template\n+\n+All other inputs are environment variables.  Please use do-release-docker.sh or\n+do-release.sh to set up the needed environment variables.  This script, release-build.sh,\n+is not intended to be called stand-alone, and such use is untested.  The env variables used are:", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMDk1Ng==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420520956", "bodyText": "I was letting it go due to how specialized it is, but you're right; there's no reason not to make it nice and clear.  Will try to improve this; see comment immediately above.", "author": "mattf-apache", "createdAt": "2020-05-06T03:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1MjQwNg==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420552406", "bodyText": "Sweet", "author": "saintstack", "createdAt": "2020-05-06T05:28:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1NDQwMg==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420554402", "bodyText": "Getting late, will tackle this in the morning.", "author": "mattf-apache", "createdAt": "2020-05-06T05:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODg3OA==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419778878", "bodyText": "Good doc.", "author": "saintstack", "createdAt": "2020-05-04T23:03:30Z", "path": "dev-support/create-release/release-build.sh", "diffHunk": "@@ -20,114 +20,180 @@\n trap cleanup EXIT\n \n # Source in utils.\n-SELF=$(cd $(dirname $0) && pwd)\n+SELF=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n+# shellcheck source=SCRIPTDIR/release-util.sh\n . \"$SELF/release-util.sh\"\n \n # Print usage and exit.\n function exit_with_usage {\n-  cat << EOF\n-Usage: release-build.sh <build|publish-snapshot|publish-release>\n-Creates build deliverables from a tag/commit.\n-Arguments:\n- build             Create binary packages and commit to dist.apache.org/repos/dist/dev/hbase/\n- publish-snapshot  Publish snapshot release to Apache snapshots\n- publish-release   Publish a release to Apache release repo\n-\n-All other inputs are environment variables:\n- GIT_REF - Release tag or commit to build from\n- PACKAGE_VERSION - Release identifier in top level package directory (e.g. 2.1.2RC1)\n- VERSION - (optional) Version of project being built (e.g. 2.1.2)\n- ASF_USERNAME - Username of ASF committer account\n- ASF_PASSWORD - Password of ASF committer account\n- GPG_KEY - GPG key used to sign release artifacts\n- GPG_PASSPHRASE - Passphrase for GPG key\n- PROJECT - The project to build. No default.\n-\n-Set REPO environment to full path to repo to use\n-to avoid re-downloading dependencies on each run.\n+  cat <<'EOF'\n+Usage: release-build.sh <tag|publish-dist|publish-snapshot|publish-release>\n+Creates release deliverables from a tag or commit.\n+Argument: one of 'tag', 'publish-dist', 'publish-snapshot', or 'publish-release'\n+  tag               Prepares for release on specified git branch: Set release version,\n+                    update CHANGES and RELEASENOTES, create release tag,\n+                    increment version for ongoing dev, and publish to Apache git repo.\n+  publish-dist      Build and publish distribution packages (tarballs) to Apache dist repo\n+  publish-snapshot  Build and publish maven artifacts snapshot release to Apache snapshots repo\n+  publish-release   Build and publish maven artifacts release to Apache release repo, and\n+                    construct vote email from template\n+\n+All other inputs are environment variables.  Please use do-release-docker.sh or\n+do-release.sh to set up the needed environment variables.  This script, release-build.sh,\n+is not intended to be called stand-alone, and such use is untested.  The env variables used are:\n+\n+Used for 'tag' and 'publish' stages:\n+  PROJECT - The project to build. No default.\n+  RELEASE_VERSION - Version used in pom files for release (e.g. 2.1.2)\n+    Required for 'tag'; defaults for 'publish' to the version in pom at GIT_REF\n+  RELEASE_TAG - Name of release tag (e.g. 2.1.2RC0), also used by\n+    publish-dist as package version name in dist directory path\n+  ASF_USERNAME - Username of ASF committer account\n+  ASF_PASSWORD - Password of ASF committer account\n+  DRY_RUN - 1:true (default), 0:false. If \"1\", does almost all the work, but doesn't actually\n+    publish anything to upstream source or object repositories. It defaults to \"1\", so if you want\n+    to actually publish you have to set '-f' (force) flag in do-release.sh or do-release-docker.sh.\n+\n+Used only for 'tag':\n+  GIT_NAME - Name to use with git\n+  GIT_EMAIL - E-mail address to use with git\n+  GIT_BRANCH - Git branch on which to make release. Tag is always placed at HEAD of this branch.\n+  NEXT_VERSION - Development version after release (e.g. 2.1.3-SNAPSHOT)\n+\n+Used only for 'publish':\n+  GIT_REF - Release tag or commit to build from (defaults to $RELEASE_TAG; only need to\n+    separately define GIT_REF if RELEASE_TAG is not actually present as a tag at publish time)\n+    If both RELEASE_TAG and GIT_REF are undefined it will default to HEAD of master.\n+  GPG_KEY - GPG key id (usually email addr) used to sign release artifacts\n+  GPG_PASSPHRASE - Passphrase for GPG key\n+  REPO - Set to full path of a directory to use as maven local repo (dependencies cache)\n+    to avoid re-downloading dependencies for each stage.  It is automatically set if you\n+    request full sequence of stages (tag, publish-dist, publish-release) in do-release.sh.", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3OTMwOQ==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r419779309", "bodyText": "Release or release candidate?", "author": "saintstack", "createdAt": "2020-05-04T23:04:48Z", "path": "dev-support/create-release/release-build.sh", "diffHunk": "@@ -20,114 +20,180 @@\n trap cleanup EXIT\n \n # Source in utils.\n-SELF=$(cd $(dirname $0) && pwd)\n+SELF=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n+# shellcheck source=SCRIPTDIR/release-util.sh\n . \"$SELF/release-util.sh\"\n \n # Print usage and exit.\n function exit_with_usage {\n-  cat << EOF\n-Usage: release-build.sh <build|publish-snapshot|publish-release>\n-Creates build deliverables from a tag/commit.\n-Arguments:\n- build             Create binary packages and commit to dist.apache.org/repos/dist/dev/hbase/\n- publish-snapshot  Publish snapshot release to Apache snapshots\n- publish-release   Publish a release to Apache release repo\n-\n-All other inputs are environment variables:\n- GIT_REF - Release tag or commit to build from\n- PACKAGE_VERSION - Release identifier in top level package directory (e.g. 2.1.2RC1)\n- VERSION - (optional) Version of project being built (e.g. 2.1.2)\n- ASF_USERNAME - Username of ASF committer account\n- ASF_PASSWORD - Password of ASF committer account\n- GPG_KEY - GPG key used to sign release artifacts\n- GPG_PASSPHRASE - Passphrase for GPG key\n- PROJECT - The project to build. No default.\n-\n-Set REPO environment to full path to repo to use\n-to avoid re-downloading dependencies on each run.\n+  cat <<'EOF'\n+Usage: release-build.sh <tag|publish-dist|publish-snapshot|publish-release>\n+Creates release deliverables from a tag or commit.\n+Argument: one of 'tag', 'publish-dist', 'publish-snapshot', or 'publish-release'\n+  tag               Prepares for release on specified git branch: Set release version,\n+                    update CHANGES and RELEASENOTES, create release tag,\n+                    increment version for ongoing dev, and publish to Apache git repo.\n+  publish-dist      Build and publish distribution packages (tarballs) to Apache dist repo\n+  publish-snapshot  Build and publish maven artifacts snapshot release to Apache snapshots repo\n+  publish-release   Build and publish maven artifacts release to Apache release repo, and\n+                    construct vote email from template\n+\n+All other inputs are environment variables.  Please use do-release-docker.sh or\n+do-release.sh to set up the needed environment variables.  This script, release-build.sh,\n+is not intended to be called stand-alone, and such use is untested.  The env variables used are:\n+\n+Used for 'tag' and 'publish' stages:\n+  PROJECT - The project to build. No default.\n+  RELEASE_VERSION - Version used in pom files for release (e.g. 2.1.2)\n+    Required for 'tag'; defaults for 'publish' to the version in pom at GIT_REF\n+  RELEASE_TAG - Name of release tag (e.g. 2.1.2RC0), also used by\n+    publish-dist as package version name in dist directory path\n+  ASF_USERNAME - Username of ASF committer account\n+  ASF_PASSWORD - Password of ASF committer account\n+  DRY_RUN - 1:true (default), 0:false. If \"1\", does almost all the work, but doesn't actually\n+    publish anything to upstream source or object repositories. It defaults to \"1\", so if you want\n+    to actually publish you have to set '-f' (force) flag in do-release.sh or do-release-docker.sh.\n+\n+Used only for 'tag':\n+  GIT_NAME - Name to use with git\n+  GIT_EMAIL - E-mail address to use with git\n+  GIT_BRANCH - Git branch on which to make release. Tag is always placed at HEAD of this branch.\n+  NEXT_VERSION - Development version after release (e.g. 2.1.3-SNAPSHOT)\n+\n+Used only for 'publish':\n+  GIT_REF - Release tag or commit to build from (defaults to $RELEASE_TAG; only need to\n+    separately define GIT_REF if RELEASE_TAG is not actually present as a tag at publish time)\n+    If both RELEASE_TAG and GIT_REF are undefined it will default to HEAD of master.\n+  GPG_KEY - GPG key id (usually email addr) used to sign release artifacts\n+  GPG_PASSPHRASE - Passphrase for GPG key\n+  REPO - Set to full path of a directory to use as maven local repo (dependencies cache)\n+    to avoid re-downloading dependencies for each stage.  It is automatically set if you\n+    request full sequence of stages (tag, publish-dist, publish-release) in do-release.sh.\n \n For example:\n- $ PROJECT=\"hbase-operator-tools\" ASF_USERNAME=NAME ASF_PASSWORD=PASSWORD GPG_PASSPHRASE=PASSWORD GPG_KEY=stack@apache.org ./release-build.sh build\n+ $ PROJECT=\"hbase-operator-tools\" ASF_USERNAME=NAME ASF_PASSWORD=PASSWORD GPG_PASSPHRASE=PASSWORD GPG_KEY=stack@apache.org ./release-build.sh publish-dist\n EOF\n   exit 1\n }\n \n set -e\n \n function cleanup {\n-  echo \"Cleaning up temp settings file.\" >&2\n-  rm \"${tmp_settings}\" &> /dev/null || true\n   # If REPO was set, then leave things be. Otherwise if we defined a repo clean it out.\n-  if [[ -z \"${REPO}\" ]] && [[ -n \"${tmp_repo}\" ]]; then\n-    echo \"Cleaning up temp repo in '${tmp_repo}'. set REPO to reuse downloads.\" >&2\n-    rm -rf \"${tmp_repo}\" &> /dev/null || true\n+  if [[ -z \"${REPO}\" ]] && [[ -n \"${MAVEN_LOCAL_REPO}\" ]]; then\n+    echo \"Cleaning up temp repo in '${MAVEN_LOCAL_REPO}'. Set REPO to reuse downloads.\" >&2\n+    rm -f \"${MAVEN_SETTINGS_FILE}\" &> /dev/null || true\n+    rm -rf \"${MAVEN_LOCAL_REPO}\" &> /dev/null || true\n   fi\n }\n \n-if [ $# -eq 0 ]; then\n+if [ $# -ne 1 ]; then\n   exit_with_usage\n fi\n \n-if [[ $@ == *\"help\"* ]]; then\n+if [[ \"$*\" == *\"help\"* ]]; then\n   exit_with_usage\n fi\n \n-# Read in the ASF password.\n-if [[ -z \"$ASF_PASSWORD\" ]]; then\n-  echo 'The environment variable ASF_PASSWORD is not set. Enter the password.'\n-  echo\n-  stty -echo && printf \"ASF password: \" && read ASF_PASSWORD && printf '\\n' && stty echo\n-fi\n+init_locale\n+init_java\n+init_mvn\n+init_python\n+# Print out subset of perl version (used in git hooks)\n+perl --version | grep 'This is'\n \n-# Read in the GPG passphrase\n-if [[ -z \"$GPG_PASSPHRASE\" ]]; then\n-  echo 'The environment variable GPG_PASSPHRASE is not set. Enter the passphrase to'\n-  echo 'unlock the GPG signing key that will be used to sign the release!'\n-  echo\n-  stty -echo && printf \"GPG passphrase: \" && read GPG_PASSPHRASE && printf '\\n' && stty echo\n-  export GPG_PASSPHRASE\n-  export GPG_TTY=$(tty)\n-fi\n+rm -rf \"${PROJECT}\"\n+\n+if [[ \"$1\" == \"tag\" ]]; then\n+  # for 'tag' stage\n+  set -o pipefail\n+  set -x  # detailed logging during action\n+  check_get_passwords ASF_PASSWORD\n+  check_needed_vars PROJECT ASF_USERNAME ASF_PASSWORD RELEASE_VERSION RELEASE_TAG NEXT_VERSION \\\n+      GIT_EMAIL GIT_NAME GIT_BRANCH\n+  ASF_REPO=\"gitbox.apache.org/repos/asf/${PROJECT}.git\"\n+  encoded_username=\"$(python -c \"import urllib; print urllib.quote('''$ASF_USERNAME''')\")\"\n+  encoded_password=\"$(python -c \"import urllib; print urllib.quote('''$ASF_PASSWORD''')\")\"\n+  git clone \"https://$encoded_username:$encoded_password@$ASF_REPO\" -b \"$GIT_BRANCH\" \"${PROJECT}\"\n+\n+  # 'update_releasenotes' searches the project's Jira for issues where 'Fix Version' matches specified\n+  # $jira_fix_version. For most projects this is same as ${RELEASE_VERSION}. However, all the 'hbase-*'\n+  # projects share the same HBASE jira name.  To make this work, by convention, the HBASE jira \"Fix Version\"\n+  # field values have the sub-project name pre-pended, as in \"hbase-operator-tools-1.0.0\".\n+  # So, here we prepend the project name to the version, but only for the hbase sub-projects.\n+  jira_fix_version=\"${RELEASE_VERSION}\"\n+  shopt -s nocasematch\n+  if [[ \"${PROJECT}\" =~ ^hbase- ]]; then\n+    jira_fix_version=\"${PROJECT}-${RELEASE_VERSION}\"\n+  fi\n+  shopt -u nocasematch\n+  update_releasenotes \"$(pwd)/${PROJECT}\" \"${jira_fix_version}\"\n+\n+  cd \"${PROJECT}\"\n+\n+  git config user.name \"$GIT_NAME\"\n+  git config user.email \"$GIT_EMAIL\"\n \n-for env in ASF_USERNAME GPG_PASSPHRASE GPG_KEY; do\n-  if [ -z \"${!env}\" ]; then\n-    echo \"ERROR: $env must be set to run this script\"\n-    exit_with_usage\n+  # Create release version", "originalCommit": "0ed5931ff23cd5e097ace40c8f83545d83865eee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjE2NA==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420526164", "bodyText": "This line of comment comes from the original code from what was formerly release-tag.sh. Basically, it sets the maven version in pom.xml for the release or release candidate you are making. It just uses the version string you've specified in do-release.sh, which is usually a release candidate version, but it's up to you.", "author": "mattf-apache", "createdAt": "2020-05-06T03:28:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3OTMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1MjMxMA==", "url": "https://github.com/apache/hbase/pull/1643#discussion_r420552310", "bodyText": "k", "author": "saintstack", "createdAt": "2020-05-06T05:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3OTMwOQ=="}], "type": "inlineReview"}, {"oid": "954e0646b129bbaa6aac9c2910600e6b4b082269", "url": "https://github.com/apache/hbase/commit/954e0646b129bbaa6aac9c2910600e6b4b082269", "message": "Replace human wait for tag propagation", "committedDate": "2020-05-06T05:30:21Z", "type": "commit"}]}