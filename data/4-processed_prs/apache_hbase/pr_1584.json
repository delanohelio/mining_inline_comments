{"pr_number": 1584, "pr_title": "HBASE-24256 When fixOverlap hits the max region limit, it is possible\u2026", "pr_createdAt": "2020-04-24T21:24:11Z", "pr_url": "https://github.com/apache/hbase/pull/1584", "timeline": [{"oid": "68e4b057a2bad7e3f13d7188cf4feca7e15a47cb", "url": "https://github.com/apache/hbase/commit/68e4b057a2bad7e3f13d7188cf4feca7e15a47cb", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request\n\nThere are two issues:\n   1. The same region could be included in multiple merge requests.\n   2. deleteMergeQualifiers() could delete columns without merge keyword,\n      which could cause inconsistent state.", "committedDate": "2020-04-24T21:28:53Z", "type": "forcePushed"}, {"oid": "f5e00a23ddb3d60e76aa3316af8887fad4859f7e", "url": "https://github.com/apache/hbase/commit/f5e00a23ddb3d60e76aa3316af8887fad4859f7e", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request\n\nThere are two issues:\n   1. The same region could be included in multiple merge requests.\n   2. deleteMergeQualifiers() could delete columns without merge keyword,\n      which could cause inconsistent state.", "committedDate": "2020-04-24T22:41:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r414880416", "bodyText": "Should we add a lock on the merge region instead of this?", "author": "saintstack", "createdAt": "2020-04-24T21:43:11Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -1846,6 +1846,16 @@ public static void deleteMergeQualifiers(Connection connection, final RegionInfo\n       qualifiers.add(qualifier);\n       delete.addColumns(getCatalogFamily(), qualifier, HConstants.LATEST_TIMESTAMP);\n     }\n+\n+    // There will be race condition that a GCMultipleMergedRegionsProcedure is scheduled while\n+    // the previous GCMultipleMergedRegionsProcedure is still going on, in this case, the second\n+    // GCMultipleMergedRegionsProcedure could delete the merged region by accident!\n+    if (qualifiers.isEmpty()) {", "originalCommit": "68e4b057a2bad7e3f13d7188cf4feca7e15a47cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkxNjY0Mw==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r414916643", "bodyText": "Thanks Stack, where to add the lock? More context here, this issue was found with the extra frequent calling of CatalogJanitor.scan() in TestMetaFixer#testOverlap(). It finds merged regions in meta table and fires GCMultipleMergedRegionsProcedure to gc these regions. The second scan() could find the same set of merged regions in meta and keep firing GCMultipleMergedRegionsProcedures. So the first GCMultipleMergedRegionsProcedure cleans up merge qualifiers and the following one will delete the new merged region from meta table, this will result in a hole.\nIf we maintain a locks in Catalog Janitor, then it needs to wait for GCMultipleMergedRegionsProcedures and unlocks the region, this will make scan() very slow. What do you think?", "author": "huaxiangsun", "createdAt": "2020-04-24T23:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzNzIzNA==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r415937234", "bodyText": "This method is called from GCMergedRegionsProcedure and GCMulitpleMergedRegionsProcedure. I was wondering if we took a lock on the Region being Merged would it stop two overlapping GCs happening?\nThe locking mechanism I'm talking of is in Procedure. There is a method called holdLock. Procedures operating on Regions will take out a lock while they are running to prevent other procedures operating at same time. If the Procedure implementation wants to hold the lock even when it is not executing to prevent other Procedures tampering, it will set this holdLock to true.\nA few Procedures do it: TruncateTableProcedure, DeleteTableProcedure, MergeTableRegionsProcedure. GC'ing  a Procedure seems like a candidate for one Procedure only being allowed to run the Delete. Changing the GC procedure to hold lock, does it help in your test?", "author": "saintstack", "createdAt": "2020-04-27T15:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NDM4NQ==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r417464385", "bodyText": "Thanks Stack, I will take a look at examples and come back.", "author": "huaxiangsun", "createdAt": "2020-04-29T16:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODIyMQ==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r418788221", "bodyText": "@saintstack I checked the code and went through what you said above. My understanding is that the lock prevents two procedures working on the same region at the same time. In this specific case, it is multiple MergeTableRegionsProcedures are submitted to clean up the merge states, so there are already locks in place. These multiple MergeTableRegionsProcedures are executed sequentially, because it does not check if there are mergeXXX qualifiers to delete, the second one could delete the child region.  To make MergeTableRegionsProcedures idempotent, we need this fix here. What do you think? There is another jira HBASE-24250 created by Andrey, where multiple MergeTableRegionsProcedures are observed in running clusters.", "author": "huaxiangsun", "createdAt": "2020-05-02T00:25:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2NTk1MA==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r419565950", "bodyText": "Let me create a new issue to track the GCMulitpleMergedRegionsProcedure non-idempotent issue and come up with an unitest to show the issue.", "author": "huaxiangsun", "createdAt": "2020-05-04T16:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2NzQ3MQ==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r419567471", "bodyText": "ok. sounds good. Let me look at the patch again.", "author": "saintstack", "createdAt": "2020-05-04T16:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MTI5NA==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r419571294", "bodyText": "Thanks @saintstack . I create HBASE-24256 to track GCMulitpleMergedRegionsProcedure issue, will drop the fix code in this patch and upload a new patch. In HBASE-24256, I will add an unitest to show the issue.", "author": "huaxiangsun", "createdAt": "2020-05-04T16:39:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4MDQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2ODE1Mw==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r419568153", "bodyText": "This bit is hard to read. A comment on why <= 1?", "author": "saintstack", "createdAt": "2020-05-04T16:34:26Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MetaFixer.java", "diffHunk": "@@ -242,17 +243,35 @@ void fixOverlaps(CatalogJanitor.Report report) throws IOException {\n     }\n     List<SortedSet<RegionInfo>> merges = new ArrayList<>();\n     SortedSet<RegionInfo> currentMergeSet = new TreeSet<>();\n+    HashSet<RegionInfo> regionsInMergeSet = new HashSet<>();\n     RegionInfo regionInfoWithlargestEndKey =  null;\n     for (Pair<RegionInfo, RegionInfo> pair: overlaps) {\n       if (regionInfoWithlargestEndKey != null) {\n         if (!isOverlap(regionInfoWithlargestEndKey, pair) ||\n             currentMergeSet.size() >= maxMergeCount) {\n-          merges.add(currentMergeSet);\n-          currentMergeSet = new TreeSet<>();\n+          if (currentMergeSet.size() <= 1) {", "originalCommit": "f5e00a23ddb3d60e76aa3316af8887fad4859f7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzNDg4OQ==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r420234889", "bodyText": "In the case of the merge set contains only 1 region or empty, we do not need to submit this merge request as no merge is going to happen. I will update the patch with comments to explain this case.", "author": "huaxiangsun", "createdAt": "2020-05-05T16:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2ODE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc5ODA0Ng==", "url": "https://github.com/apache/hbase/pull/1584#discussion_r421798046", "bodyText": "added comments.", "author": "huaxiangsun", "createdAt": "2020-05-07T21:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU2ODE1Mw=="}], "type": "inlineReview"}, {"oid": "f1774607d1f9842b96235e47e7595c106814f166", "url": "https://github.com/apache/hbase/commit/f1774607d1f9842b96235e47e7595c106814f166", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request", "committedDate": "2020-05-04T22:23:37Z", "type": "forcePushed"}, {"oid": "9435f1777c17691c48c56266965bea3dbc145f35", "url": "https://github.com/apache/hbase/commit/9435f1777c17691c48c56266965bea3dbc145f35", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request", "committedDate": "2020-05-04T22:50:34Z", "type": "forcePushed"}, {"oid": "9f80488fdaa512a1cedee50da2e6ec03d21a0a5a", "url": "https://github.com/apache/hbase/commit/9f80488fdaa512a1cedee50da2e6ec03d21a0a5a", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request", "committedDate": "2020-05-07T17:57:24Z", "type": "forcePushed"}, {"oid": "bb10a945f88da18e1ea718333d5a6d60d4f17501", "url": "https://github.com/apache/hbase/commit/bb10a945f88da18e1ea718333d5a6d60d4f17501", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request", "committedDate": "2020-05-07T21:13:14Z", "type": "commit"}, {"oid": "bb10a945f88da18e1ea718333d5a6d60d4f17501", "url": "https://github.com/apache/hbase/commit/bb10a945f88da18e1ea718333d5a6d60d4f17501", "message": "HBASE-24256 When fixOverlap hits the max region limit, it is possible to include the same region in multiple merge request", "committedDate": "2020-05-07T21:13:14Z", "type": "forcePushed"}]}