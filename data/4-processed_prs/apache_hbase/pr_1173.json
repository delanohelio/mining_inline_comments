{"pr_number": 1173, "pr_title": "HBASE-23851 Log networks and bind addresses when multicast publisher/\u2026", "pr_createdAt": "2020-02-15T17:25:38Z", "pr_url": "https://github.com/apache/hbase/pull/1173", "timeline": [{"oid": "cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "url": "https://github.com/apache/hbase/commit/cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "message": "HBASE-23851 Log networks and bind addresses when multicast publisher/listener enabled", "committedDate": "2020-02-15T17:21:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ0OTI3OA==", "url": "https://github.com/apache/hbase/pull/1173#discussion_r383449278", "bodyText": "Why WARN and not DEBUG?", "author": "ndimiduk", "createdAt": "2020-02-24T18:53:15Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncConnectionImpl.java", "diffHunk": "@@ -165,8 +165,7 @@ public void newDead(ServerName sn) {\n               }\n             }, conf, listenerClass);\n         } catch (IOException e) {\n-          LOG.warn(\"Failed to create ClusterStatusListener, not a critical problem, ignoring...\",\n-            e);\n+          LOG.warn(\"Failed create of ClusterStatusListener, not a critical, ignoring...\", e);", "originalCommit": "cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ0OTU1Mw==", "url": "https://github.com/apache/hbase/pull/1173#discussion_r383449553", "bodyText": "nit s/not a critical,/not critical,/", "author": "ndimiduk", "createdAt": "2020-02-24T18:53:46Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncConnectionImpl.java", "diffHunk": "@@ -165,8 +165,7 @@ public void newDead(ServerName sn) {\n               }\n             }, conf, listenerClass);\n         } catch (IOException e) {\n-          LOG.warn(\"Failed to create ClusterStatusListener, not a critical problem, ignoring...\",\n-            e);\n+          LOG.warn(\"Failed create of ClusterStatusListener, not a critical, ignoring...\", e);", "originalCommit": "cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ1MDg1NQ==", "url": "https://github.com/apache/hbase/pull/1173#discussion_r383450855", "bodyText": "If you're going to tweak toString() methods, you mind converting over use Commons's ToStringBuilder with the ShortPrefixToStringStyle ?", "author": "ndimiduk", "createdAt": "2020-02-24T18:56:19Z", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -373,7 +373,7 @@ protected synchronized void cleanup() {\n   @InterfaceAudience.Private\n   @Override\n   public String toString() {\n-    return \"[ScheduledChore: Name: \" + getName() + \" Period: \" + getPeriod() + \" Unit: \"\n-        + getTimeUnit() + \"]\";\n+    return \"ScheduledChore name=\" + getName() + \", period=\" + getPeriod() +", "originalCommit": "cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ1MTQyNg==", "url": "https://github.com/apache/hbase/pull/1173#discussion_r383451426", "bodyText": "Likewise with the ToStringBuilder.", "author": "ndimiduk", "createdAt": "2020-02-24T18:57:26Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ClusterStatusPublisher.java", "diffHunk": "@@ -126,6 +127,11 @@ public ClusterStatusPublisher(HMaster master, Configuration conf,\n     connected = true;\n   }\n \n+  @Override\n+  public String toString() {\n+    return super.toString() + \", publisher=\" + this.publisher + \", connected=\" + this.connected;", "originalCommit": "cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ1MzAyMg==", "url": "https://github.com/apache/hbase/pull/1173#discussion_r383453022", "bodyText": "What is the expected class/thread that needs this configuration change downstream from here? This seems like it introduces a timing race between this chore thread and the presumed viewer, which may or may not start after this code is hit.\nIs there a better approach to take? This strikes me as fishing for side-effects with global mutable state.", "author": "ndimiduk", "createdAt": "2020-02-24T19:00:19Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ClusterStatusPublisher.java", "diffHunk": "@@ -285,27 +295,33 @@ public void connect(Configuration conf) throws IOException {\n         }\n         ni = NetworkInterface.getByInetAddress(localAddress);\n       }\n-\n       Bootstrap b = new Bootstrap();\n       b.group(group)\n         .channelFactory(new HBaseDatagramChannelFactory<Channel>(NioDatagramChannel.class, family))\n         .option(ChannelOption.SO_REUSEADDR, true)\n         .handler(new ClusterMetricsEncoder(isa));\n-\n       try {\n+        LOG.debug(\"Channel bindAddress={}, networkInterface={}, INA={}\", bindAddress, ni, ina);\n         channel = (DatagramChannel) b.bind(bindAddress, 0).sync().channel();\n         channel.joinGroup(ina, ni, null, channel.newPromise()).sync();\n         channel.connect(isa).sync();\n+        // Set into configuration in case many networks available. Do this for tests so that\n+        // server and client use same Interface (presuming share same Configuration).\n+        // TestAsyncTableRSCrashPublish was failing when connected to VPN because extra networks\n+        // available with Master binding on one Interface and client on another so test failed.\n+        if (ni != null) {\n+          conf.set(HConstants.STATUS_MULTICAST_NI_NAME, ni.getName());", "originalCommit": "cf63f4d3213fe28cf1b8e6e0a4bfaa5d9e9426d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}