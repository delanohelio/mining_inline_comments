{"pr_number": 2497, "pr_title": "HBASE-25124 Support changing region replica count without disabling table", "pr_createdAt": "2020-10-03T15:04:20Z", "pr_url": "https://github.com/apache/hbase/pull/2497", "timeline": [{"oid": "cc40759b03cff80202c6371416d9a7eb5e95d8bf", "url": "https://github.com/apache/hbase/commit/cc40759b03cff80202c6371416d9a7eb5e95d8bf", "message": "HBASE-25124 Support changing meta replica count without disabling table", "committedDate": "2020-10-04T12:36:20Z", "type": "forcePushed"}, {"oid": "9b9ab5f2cf5c5231f472d4e24e038da5e157a10c", "url": "https://github.com/apache/hbase/commit/9b9ab5f2cf5c5231f472d4e24e038da5e157a10c", "message": "HBASE-25124 Support changing meta replica count without disabling table", "committedDate": "2020-10-05T14:44:21Z", "type": "forcePushed"}, {"oid": "741b7306954610afd624b073fc9b26a5a7bb28f2", "url": "https://github.com/apache/hbase/commit/741b7306954610afd624b073fc9b26a5a7bb28f2", "message": "HBASE-25124 Support changing meta replica count without disabling table", "committedDate": "2020-10-05T15:16:02Z", "type": "forcePushed"}, {"oid": "8d37f48e73798ffbcf64419579a0a40e637ad66d", "url": "https://github.com/apache/hbase/commit/8d37f48e73798ffbcf64419579a0a40e637ad66d", "message": "HBASE-25124 Support changing meta replica count without disabling table", "committedDate": "2020-10-05T15:21:33Z", "type": "forcePushed"}, {"oid": "fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "url": "https://github.com/apache/hbase/commit/fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "message": "HBASE-25124 Support changing region replica count without disabling table", "committedDate": "2020-10-06T14:51:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI5OTg0Nw==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501299847", "bodyText": "Think this could go back to branch-2? For 2.4.0?", "author": "saintstack", "createdAt": "2020-10-07T20:46:52Z", "path": "hbase-protocol-shaded/src/main/protobuf/server/master/MasterProcedure.proto", "diffHunk": "@@ -72,6 +72,8 @@ enum ModifyTableState {\n   MODIFY_TABLE_DELETE_FS_LAYOUT = 5;\n   MODIFY_TABLE_POST_OPERATION = 6;\n   MODIFY_TABLE_REOPEN_ALL_REGIONS = 7;\n+  MODIFY_TABLE_CLOSE_EXCESS_REPLICAS = 8;\n+  MODIFY_TABLE_ASSIGN_NEW_REPLICAS = 9;", "originalCommit": "fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzOTk2MQ==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501539961", "bodyText": "Yes.", "author": "Apache9", "createdAt": "2020-10-08T08:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI5OTg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzEyMw==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501303123", "bodyText": "I don't remember how this worked. It is a technique to stop the current procedure on the regionNode from running? What is the procedure that is on the regionNode? Is it something we've put in place? Something expected? Or just a random procedure that might be running? I don't remember this part of the code.", "author": "saintstack", "createdAt": "2020-10-07T20:52:57Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -870,32 +870,49 @@ public TransitRegionStateProcedure createOneUnassignProcedure(RegionInfo ri, boo\n       .sorted(AssignmentManager::compare).toArray(TransitRegionStateProcedure[]::new);\n   }\n \n+  // for creating unassign TRSP when disabling a table or closing excess region replicas\n+  private TransitRegionStateProcedure forceCreateUnssignProcedure(RegionStateNode regionNode) {\n+    regionNode.lock();\n+    try {\n+      if (!regionStates.include(regionNode, false) ||\n+        regionStates.isRegionOffline(regionNode.getRegionInfo())) {\n+        return null;\n+      }\n+      // As in DisableTableProcedure or ModifyTableProcedure, we will hold the xlock for table, so\n+      // we can make sure that this procedure has not been executed yet, as TRSP will hold the\n+      // shared lock for table all the time. So here we will unset it and when it is actually\n+      // executed, it will find that the attach procedure is not itself and quit immediately.\n+      if (regionNode.getProcedure() != null) {", "originalCommit": "fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzOTg5Mw==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501539893", "bodyText": "This is a fencing mechanism to prevent double assign. We have a procedure field for every region node, before scheduling a new TRSP for a region, we should attach the TRSP to this field, if there is already one, we will fail immediately.\nAnd here, the trick is the locking for procedures, for ModifyTableProcedure and DisableTableProcedure, we will hold the exclusive lock on the table, while for a TRSP, we will hold the shared lock on the table. Both locks will be held through the whole life cycle of the procedure, so here, since we hae already held the exclusive lock on the table, we can make sure that, even if there is already a TRSP attached, it has not been executed yet, so it is safe to 'abandon' and attach a new TRSP to close it. The actual 'abandon' is done in the execute method in TRSP, it will check whether it is still the one attached, if not, it will quit immediately.", "author": "Apache9", "createdAt": "2020-10-08T08:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwNDY2MA==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501304660", "bodyText": "Why safe the proc to a local variable? Just return result of unassign?", "author": "saintstack", "createdAt": "2020-10-07T20:55:56Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -870,32 +870,49 @@ public TransitRegionStateProcedure createOneUnassignProcedure(RegionInfo ri, boo\n       .sorted(AssignmentManager::compare).toArray(TransitRegionStateProcedure[]::new);\n   }\n \n+  // for creating unassign TRSP when disabling a table or closing excess region replicas\n+  private TransitRegionStateProcedure forceCreateUnssignProcedure(RegionStateNode regionNode) {\n+    regionNode.lock();\n+    try {\n+      if (!regionStates.include(regionNode, false) ||\n+        regionStates.isRegionOffline(regionNode.getRegionInfo())) {\n+        return null;\n+      }\n+      // As in DisableTableProcedure or ModifyTableProcedure, we will hold the xlock for table, so\n+      // we can make sure that this procedure has not been executed yet, as TRSP will hold the\n+      // shared lock for table all the time. So here we will unset it and when it is actually\n+      // executed, it will find that the attach procedure is not itself and quit immediately.\n+      if (regionNode.getProcedure() != null) {\n+        regionNode.unsetProcedure(regionNode.getProcedure());\n+      }\n+      TransitRegionStateProcedure proc = TransitRegionStateProcedure\n+        .unassign(getProcedureEnvironment(), regionNode.getRegionInfo());\n+      regionNode.setProcedure(proc);\n+      return proc;", "originalCommit": "fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU0Mjc0OA==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501542748", "bodyText": "Oh, I recall that you have changed the return value of setProcedure? Let me change.", "author": "Apache9", "createdAt": "2020-10-08T08:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwNDY2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwODQ3Nw==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501308477", "bodyText": "We didn't actually use this replicasFound that we read from meta?", "author": "saintstack", "createdAt": "2020-10-07T21:03:12Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/EnableTableProcedure.java", "diffHunk": "@@ -111,25 +104,16 @@ protected Flow executeFromState(final MasterProcedureEnv env, final EnableTableS\n           // How many replicas do we currently have? Check regions returned from\n           // in-memory state.\n           int currentMaxReplica = getMaxReplicaId(regionsOfTable);\n-\n-          // Read the META table to know the number of replicas the table currently has.\n-          // If there was a table modification on region replica count then need to\n-          // adjust replica counts here.\n-          int replicasFound = TableName.isMetaTableName(this.tableName)?", "originalCommit": "fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU0MjM2NQ==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501542365", "bodyText": "It will be log in the line below but I do not see the necesity. It does not effect the actual logic, if there are inconsistency, we should report it in the report from CatalogJanitor and fix it with HBCK2? Just a simple log here will just make users confusing.", "author": "Apache9", "createdAt": "2020-10-08T08:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwODQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwOTI5Mg==", "url": "https://github.com/apache/hbase/pull/2497#discussion_r501309292", "bodyText": "Nice", "author": "saintstack", "createdAt": "2020-10-07T21:04:53Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java", "diffHunk": "@@ -1846,11 +1846,9 @@ public static void modifyTableSync(Admin admin, TableDescriptor desc)\n    */\n   public static void setReplicas(Admin admin, TableName table, int replicaCount)\n     throws IOException, InterruptedException {\n-    admin.disableTable(table);\n     TableDescriptor desc = TableDescriptorBuilder.newBuilder(admin.getDescriptor(table))\n       .setRegionReplication(replicaCount).build();\n     admin.modifyTable(desc);\n-    admin.enableTable(table);\n   }", "originalCommit": "fb914bbf6ed37de97eaf16a8b2630ec8b61ce777", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a027599007e09ace3321e03d09809c840aab5fec", "url": "https://github.com/apache/hbase/commit/a027599007e09ace3321e03d09809c840aab5fec", "message": "HBASE-25124 Support changing region replica count without disabling table", "committedDate": "2020-10-08T08:46:52Z", "type": "commit"}, {"oid": "a027599007e09ace3321e03d09809c840aab5fec", "url": "https://github.com/apache/hbase/commit/a027599007e09ace3321e03d09809c840aab5fec", "message": "HBASE-25124 Support changing region replica count without disabling table", "committedDate": "2020-10-08T08:46:52Z", "type": "forcePushed"}]}