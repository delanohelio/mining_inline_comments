{"pr_number": 2071, "pr_title": "HBASE-24743 Reject to add a peer which replicate to itself earlier", "pr_createdAt": "2020-07-15T06:28:48Z", "pr_url": "https://github.com/apache/hbase/pull/2071", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwMTAyNQ==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r454901025", "bodyText": "Just a thought while going through this code, not required for the objective of this PR: as mentioned on the code comment, this is specific for HBaseInterClusterReplicationEndpoint, so shouldn't we define a checkClusterKey method on ReplicationEndpoint (with a default implementation), and implement this check specific for HBaseInterClusterReplicationEndpoint in HBaseInterClusterReplicationEndpoint?", "author": "wchevreuil", "createdAt": "2020-07-15T08:59:58Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -337,25 +347,21 @@ public void removeAllQueuesAndHFileRefs(String peerId) throws ReplicationExcepti\n \n   private void checkPeerConfig(ReplicationPeerConfig peerConfig) throws DoNotRetryIOException {\n     String replicationEndpointImpl = peerConfig.getReplicationEndpointImpl();\n-    boolean checkClusterKey = true;\n+    ReplicationEndpoint endpoint = null;\n     if (!StringUtils.isBlank(replicationEndpointImpl)) {\n-      // try creating a instance\n-      ReplicationEndpoint endpoint;\n       try {\n+        // try creating a instance\n         endpoint = Class.forName(replicationEndpointImpl)\n           .asSubclass(ReplicationEndpoint.class).getDeclaredConstructor().newInstance();\n       } catch (Throwable e) {\n         throw new DoNotRetryIOException(\n           \"Can not instantiate configured replication endpoint class=\" + replicationEndpointImpl,\n           e);\n       }\n-      // do not check cluster key if we are not HBaseInterClusterReplicationEndpoint\n-      if (!(endpoint instanceof HBaseInterClusterReplicationEndpoint)) {\n-        checkClusterKey = false;\n-      }\n     }\n-    if (checkClusterKey) {\n-      checkClusterKey(peerConfig.getClusterKey());\n+    // Default is HBaseInterClusterReplicationEndpoint and only it need to check cluster key\n+    if (endpoint == null || endpoint instanceof HBaseInterClusterReplicationEndpoint) {", "originalCommit": "ac728deb743f37bff67375db6a5398ecf7336a13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxMDQ2Mw==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455410463", "bodyText": "Replication#canReplicateToSameCluster() isn't it supposed to do this?", "author": "bharathv", "createdAt": "2020-07-15T22:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwMTAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMDg3MA==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455430870", "bodyText": "canReplicateToSameCluster() was added onlt for HBaseInterClusterReplicationEndpoint. But checked the code again, it was added to ReplicationEndpoint interface now and it is IA.Replication. So maybe override by user's plugglable ReplicationEndpoiint. Let me update the code to use canReplicateToSameCluster() again.", "author": "infraio", "createdAt": "2020-07-15T23:55:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwMTAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Njc4OQ==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455456789", "bodyText": "Thanks. Why have endpoint == null check? Ideally it shouldn't be null? (if we are past the try-catch)", "author": "bharathv", "createdAt": "2020-07-16T01:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwMTAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2MzQxMg==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455463412", "bodyText": "For default case, it didn't new a ReplicationEndpoint. There are a check !StringUtils.isBlank(replicationEndpointImpl).", "author": "infraio", "createdAt": "2020-07-16T01:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkwMTAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTA2OA==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455409068", "bodyText": "You are fetching the currentClusterId right? Why name it as peerClusterId? I think the argument to this method is peerClusterKey.", "author": "bharathv", "createdAt": "2020-07-15T22:49:49Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -493,12 +499,35 @@ private void checkConfiguredWALEntryFilters(ReplicationPeerConfig peerConfig)\n     }\n   }\n \n-  private void checkClusterKey(String clusterKey) throws DoNotRetryIOException {\n+  private void checkClusterKeyForHBaseInterClusterReplicationEndpoint(String clusterKey)\n+    throws DoNotRetryIOException {\n     try {\n       ZKConfig.validateClusterKey(clusterKey);\n     } catch (IOException e) {\n       throw new DoNotRetryIOException(\"Invalid cluster key: \" + clusterKey, e);\n     }\n+    String peerClusterId = \"\";", "originalCommit": "ac728deb743f37bff67375db6a5398ecf7336a13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNzcyNA==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455427724", "bodyText": "No, this fetch the peer cluster id.", "author": "infraio", "createdAt": "2020-07-15T23:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTA2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMTIxNw==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455431217", "bodyText": "oh sorry my bad, I misread the code.", "author": "bharathv", "createdAt": "2020-07-15T23:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTA2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTY2MA==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455409660", "bodyText": "ReplicationPeerManager is colocated with master, right? you can use master.getClusterId() without doing all this? (that is cached, so saves a ZK round trip).", "author": "bharathv", "createdAt": "2020-07-15T22:51:17Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -493,12 +499,35 @@ private void checkConfiguredWALEntryFilters(ReplicationPeerConfig peerConfig)\n     }\n   }\n \n-  private void checkClusterKey(String clusterKey) throws DoNotRetryIOException {\n+  private void checkClusterKeyForHBaseInterClusterReplicationEndpoint(String clusterKey)\n+    throws DoNotRetryIOException {\n     try {\n       ZKConfig.validateClusterKey(clusterKey);\n     } catch (IOException e) {\n       throw new DoNotRetryIOException(\"Invalid cluster key: \" + clusterKey, e);\n     }\n+    String peerClusterId = \"\";\n+    try {\n+      Configuration otherConf = HBaseConfiguration.createClusterConf(conf, clusterKey);\n+      ZKWatcher zkWatcher =\n+        new ZKWatcher(otherConf, this + \"check-peer-cluster-key\", new Abortable() {\n+          @Override public void abort(String why, Throwable e) {\n+          }\n+\n+          @Override public boolean isAborted() {\n+            return false;\n+          }\n+        });\n+      peerClusterId = ZKClusterId.readClusterIdZNode(zkWatcher);", "originalCommit": "ac728deb743f37bff67375db6a5398ecf7336a13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNzg2Nw==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455427867", "bodyText": "Not right. This fetch peer cluster id.", "author": "infraio", "createdAt": "2020-07-15T23:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTY2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzNDI2Ng==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455434266", "bodyText": "See the changed code in  hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "author": "infraio", "createdAt": "2020-07-16T00:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwOTY2MA=="}], "type": "inlineReview"}, {"oid": "129d94a8fa55313de7ba8b227754d880d4a7101e", "url": "https://github.com/apache/hbase/commit/129d94a8fa55313de7ba8b227754d880d4a7101e", "message": "HBASE-24743 Reject to add a peer which replicate to itself earlier", "committedDate": "2020-07-16T00:04:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1NTUzMg==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455455532", "bodyText": "nit = null is redundant.", "author": "bharathv", "createdAt": "2020-07-16T01:25:40Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -337,26 +347,26 @@ public void removeAllQueuesAndHFileRefs(String peerId) throws ReplicationExcepti\n \n   private void checkPeerConfig(ReplicationPeerConfig peerConfig) throws DoNotRetryIOException {\n     String replicationEndpointImpl = peerConfig.getReplicationEndpointImpl();\n-    boolean checkClusterKey = true;\n+    ReplicationEndpoint endpoint = null;", "originalCommit": "129d94a8fa55313de7ba8b227754d880d4a7101e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1NzM2Ng==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455457366", "bodyText": "nit: same question as above..null check on endpoint.", "author": "bharathv", "createdAt": "2020-07-16T01:32:11Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -337,26 +347,26 @@ public void removeAllQueuesAndHFileRefs(String peerId) throws ReplicationExcepti\n \n   private void checkPeerConfig(ReplicationPeerConfig peerConfig) throws DoNotRetryIOException {\n     String replicationEndpointImpl = peerConfig.getReplicationEndpointImpl();\n-    boolean checkClusterKey = true;\n+    ReplicationEndpoint endpoint = null;\n     if (!StringUtils.isBlank(replicationEndpointImpl)) {\n-      // try creating a instance\n-      ReplicationEndpoint endpoint;\n       try {\n+        // try creating a instance\n         endpoint = Class.forName(replicationEndpointImpl)\n           .asSubclass(ReplicationEndpoint.class).getDeclaredConstructor().newInstance();\n       } catch (Throwable e) {\n         throw new DoNotRetryIOException(\n           \"Can not instantiate configured replication endpoint class=\" + replicationEndpointImpl,\n           e);\n       }\n-      // do not check cluster key if we are not HBaseInterClusterReplicationEndpoint\n-      if (!(endpoint instanceof HBaseInterClusterReplicationEndpoint)) {\n-        checkClusterKey = false;\n-      }\n     }\n-    if (checkClusterKey) {\n+    // Default is HBaseInterClusterReplicationEndpoint and only it need to check cluster key\n+    if (endpoint == null || endpoint instanceof HBaseInterClusterReplicationEndpoint) {\n       checkClusterKey(peerConfig.getClusterKey());\n     }\n+    // Default is HBaseInterClusterReplicationEndpoint which cannot replicate to same cluster\n+    if (endpoint == null || !endpoint.canReplicateToSameCluster()) {", "originalCommit": "129d94a8fa55313de7ba8b227754d880d4a7101e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzc4OQ==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455457789", "bodyText": "Looks like ZKWatcher is null-safe with abortable. Since we are not actually relying on it, just pass null?", "author": "bharathv", "createdAt": "2020-07-16T01:33:55Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -501,6 +511,32 @@ private void checkClusterKey(String clusterKey) throws DoNotRetryIOException {\n     }\n   }\n \n+  private void checkClusterId(String clusterKey) throws DoNotRetryIOException {\n+    String peerClusterId = \"\";\n+    try {\n+      // Create the peer cluster config for get peer cluster id\n+      Configuration peerConf = HBaseConfiguration.createClusterConf(conf, clusterKey);\n+      ZKWatcher zkWatcher =\n+        new ZKWatcher(peerConf, this + \"check-peer-cluster-key\", new Abortable() {", "originalCommit": "129d94a8fa55313de7ba8b227754d880d4a7101e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk5NA==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455457994", "bodyText": "We want to close() the zkWatcher? Otherwise there is a connection leak?", "author": "bharathv", "createdAt": "2020-07-16T01:34:46Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -501,6 +511,32 @@ private void checkClusterKey(String clusterKey) throws DoNotRetryIOException {\n     }\n   }\n \n+  private void checkClusterId(String clusterKey) throws DoNotRetryIOException {\n+    String peerClusterId = \"\";\n+    try {\n+      // Create the peer cluster config for get peer cluster id\n+      Configuration peerConf = HBaseConfiguration.createClusterConf(conf, clusterKey);\n+      ZKWatcher zkWatcher =\n+        new ZKWatcher(peerConf, this + \"check-peer-cluster-key\", new Abortable() {\n+          @Override public void abort(String why, Throwable e) {\n+          }\n+\n+          @Override public boolean isAborted() {\n+            return false;\n+          }\n+        });\n+      peerClusterId = ZKClusterId.readClusterIdZNode(zkWatcher);\n+    } catch (IOException | KeeperException e) {\n+      throw new DoNotRetryIOException(\"Can't get peerClusterId for clusterKey=\" + clusterKey, e);\n+    }", "originalCommit": "129d94a8fa55313de7ba8b227754d880d4a7101e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2Mzg4Mg==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455463882", "bodyText": "Good catch. Let me fix this.", "author": "infraio", "createdAt": "2020-07-16T01:56:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1ODU1MA==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455458550", "bodyText": "Actually, now that I read the code again, why not use ReplicationEndpoint#getPeerUUID().toString(). That wraps the whole logic?", "author": "bharathv", "createdAt": "2020-07-16T01:36:40Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/replication/ReplicationPeerManager.java", "diffHunk": "@@ -501,6 +511,32 @@ private void checkClusterKey(String clusterKey) throws DoNotRetryIOException {\n     }\n   }\n \n+  private void checkClusterId(String clusterKey) throws DoNotRetryIOException {\n+    String peerClusterId = \"\";\n+    try {\n+      // Create the peer cluster config for get peer cluster id\n+      Configuration peerConf = HBaseConfiguration.createClusterConf(conf, clusterKey);\n+      ZKWatcher zkWatcher =\n+        new ZKWatcher(peerConf, this + \"check-peer-cluster-key\", new Abortable() {\n+          @Override public void abort(String why, Throwable e) {\n+          }\n+\n+          @Override public boolean isAborted() {\n+            return false;\n+          }\n+        });\n+      peerClusterId = ZKClusterId.readClusterIdZNode(zkWatcher);\n+    } catch (IOException | KeeperException e) {\n+      throw new DoNotRetryIOException(\"Can't get peerClusterId for clusterKey=\" + clusterKey, e);\n+    }\n+    // In rare case, zookeeper setting may be messed up. That leads to the incorrect\n+    // peerClusterId value, which is the same as the source clusterId\n+    if (clusterId.equals(peerClusterId)) {", "originalCommit": "129d94a8fa55313de7ba8b227754d880d4a7101e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2MzgxNg==", "url": "https://github.com/apache/hbase/pull/2071#discussion_r455463816", "bodyText": "The peerClusterId was not initialized in the constructor method of ReplicationEndpoint. So ReplicationEndpoint#getPeerUUID() will get null here.", "author": "infraio", "createdAt": "2020-07-16T01:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1ODU1MA=="}], "type": "inlineReview"}, {"oid": "ff7766f638906fe424380769c3115684ce309737", "url": "https://github.com/apache/hbase/commit/ff7766f638906fe424380769c3115684ce309737", "message": "HBASE-24743 Reject to add a peer which replicate to itself earlier", "committedDate": "2020-07-16T02:03:25Z", "type": "forcePushed"}, {"oid": "ef5ee55780e5edf5f7d59d9e6d04de9bb5083aba", "url": "https://github.com/apache/hbase/commit/ef5ee55780e5edf5f7d59d9e6d04de9bb5083aba", "message": "HBASE-24743 Reject to add a peer which replicate to itself earlier", "committedDate": "2020-07-20T06:49:21Z", "type": "commit"}, {"oid": "ef5ee55780e5edf5f7d59d9e6d04de9bb5083aba", "url": "https://github.com/apache/hbase/commit/ef5ee55780e5edf5f7d59d9e6d04de9bb5083aba", "message": "HBASE-24743 Reject to add a peer which replicate to itself earlier", "committedDate": "2020-07-20T06:49:21Z", "type": "forcePushed"}]}