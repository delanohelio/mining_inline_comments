{"pr_number": 2141, "pr_title": "HBASE-11686 Shell code should create a binding / irb workspace instead of polluting the root namespace", "pr_createdAt": "2020-07-24T18:54:06Z", "pr_url": "https://github.com/apache/hbase/pull/2141", "timeline": [{"oid": "b05c630c29ac50e7c1356f0b09a99513ec756d8c", "url": "https://github.com/apache/hbase/commit/b05c630c29ac50e7c1356f0b09a99513ec756d8c", "message": "HBASE-11686 Shell code should create a binding / irb workspace instead of polluting the root namespace\n\n- Refactor Shell.export_commands to define commands using ruby lambdas.\n  Additionally, this change stores a reference to shell_inst in scope so that\n  we no longer need to assume the existance of the variable @shell.\n- Add logic to Shell class for constructing an IRB workspace with its own\n  binding and non-global receiver. This workspace is loaded with all HBase and\n  IRB commands.\n- Create new method on Shell for evaluating input from an arbitrary IO instance\n  within the created IRB workspace. This is based on work by Hsieh that was\n  previously in bin/hirb.rb. This method is more generic and more testable.\n  This single pattern can be used for both executing files and reading from\n  stdin, therefore reducing complexity.\n- Move special 'help' and 'tools' command definitions to shell.rb. These\n  commands are tightly linked with an instance of the shell, so it is easiest\n  to have them defined together.\n- Remove all global includes of HBaseConstants from ruby test files. Before\n  this change, tests were loading these constants into the top level, which\n  could cause tests to pass that should really fail.\n- Try to reduce the number of places that constants are included. I think it's\n  best to reference each ruby constant's full name, but where that would cause\n  a big diff I instead moved the include to the innermost Module or Class.\n- Update docs and comments\n- Remove unneccessary includes\n- Add shell --top-level-cmds compatibility flag. Since this PR removes all the\n  HBase symbols from the top-level receiver (ie. main Object), it is possible\n  (albeit unlikely) that this will break operator scripts. This flag will\n  export all the commands at the top-level like the shell previously did.", "committedDate": "2020-07-24T18:51:23Z", "type": "commit"}, {"oid": "3d73834114be6a7268c159ca17c79c72156724bc", "url": "https://github.com/apache/hbase/commit/3d73834114be6a7268c159ca17c79c72156724bc", "message": "HBASE-11686 Light refactoring with added unit tests\n\n- Fixes some constants references by admin test 2\n- Install HBase commands as singleton methods on recevier instances so that\n  multiple receivers may exist.\n- Rename new flag from --top-level-cmds to --top-level-defs to be more\n  semantically accurate.\n- Create new helper method Shell::Shell#export_all to install @hbase, @shell,\n  constants, and all hbase commands to a target receiver. As a result, the\n  HBaseReceiver became very simple and could be moved to shell.rb.\n- Add unit tests for Shell::Shell#eval_io and Shell::Shell#export_all\n- Add @hbase and @shell to hbase-shell IRB workspace\n- Fix robocop issues within patch", "committedDate": "2020-07-27T16:52:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQ2MQ==", "url": "https://github.com/apache/hbase/pull/2141#discussion_r461065461", "bodyText": "s/is/if/", "author": "saintstack", "createdAt": "2020-07-27T17:51:54Z", "path": "bin/hirb.rb", "diffHunk": "@@ -143,21 +148,10 @@ def add_to_configuration(c, arg)\n @shell = Shell::Shell.new(@hbase, interactive)\n @shell.debug = @shell_debug\n \n-# Add commands to this namespace\n-# TODO avoid polluting main namespace by using a binding\n-@shell.export_commands(self)\n-\n-# Add help command\n-def help(command = nil)\n-  @shell.help(command)\n-end\n-\n-# Backwards compatibility method\n-def tools\n-  @shell.help_group('tools')\n-end\n-\n-# Debugging method\n+##\n+# Toggle shell debugging\n+#\n+# @return [Boolean] true is debug is turned on after updating the flag", "originalCommit": "3d73834114be6a7268c159ca17c79c72156724bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODE3Ng==", "url": "https://github.com/apache/hbase/pull/2141#discussion_r461098176", "bodyText": "Updated \ud83d\ude04", "author": "bitoffdev", "createdAt": "2020-07-27T18:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQ2MQ=="}], "type": "inlineReview"}, {"oid": "9b6dd5ed90b2e5e6f01ded7b029c665c4bd0e580", "url": "https://github.com/apache/hbase/commit/9b6dd5ed90b2e5e6f01ded7b029c665c4bd0e580", "message": "Typo s/is/if/", "committedDate": "2020-07-27T18:48:51Z", "type": "commit"}]}