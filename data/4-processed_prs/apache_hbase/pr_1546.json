{"pr_number": 1546, "pr_title": "HBASE-24211: Create table is slow in large cluster when AccessController is enabled.", "pr_createdAt": "2020-04-18T00:41:41Z", "pr_url": "https://github.com/apache/hbase/pull/1546", "timeline": [{"oid": "d19563ab1e85b71da395c3183c5c723b1d18c36e", "url": "https://github.com/apache/hbase/commit/d19563ab1e85b71da395c3183c5c723b1d18c36e", "message": "HBASE-24211: Create table is slow in large cluster when AccessController is enabled.", "committedDate": "2020-04-18T00:40:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzMzMQ==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410693331", "bodyText": "returning Collections.emptyList() would be better", "author": "virajjasani", "createdAt": "2020-04-18T12:43:47Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -741,6 +741,10 @@ public static int getNumberOfChildren(ZKWatcher zkw, String znode)\n     if (nodes != null) {\n       List<NodeAndData> newNodes = new ArrayList<>();\n       for (String node : nodes) {\n+        if (Thread.interrupted()) {\n+          // Partial data should not be processed. Cancel processing by sending empty list.\n+          return new ArrayList<>();", "originalCommit": "d19563ab1e85b71da395c3183c5c723b1d18c36e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwNzQ4OA==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410707488", "bodyText": "done", "author": "arshadmohammad", "createdAt": "2020-04-18T14:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzQ0NA==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410693444", "bodyText": "Please user {} for LOG param path", "author": "virajjasani", "createdAt": "2020-04-18T12:44:39Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java", "diffHunk": "@@ -185,25 +185,27 @@ public void run() {\n   public void nodeChildrenChanged(final String path) {\n     waitUntilStarted();\n     if (path.equals(aclZNode)) {\n-      try {\n-        final List<ZKUtil.NodeAndData> nodeList =\n-            ZKUtil.getChildDataAndWatchForNewChildren(watcher, aclZNode);\n-        // preempt any existing nodeChildrenChanged event processing\n-        if (childrenChangedFuture != null && !childrenChangedFuture.isDone()) {\n-          boolean cancelled = childrenChangedFuture.cancel(true);\n-          if (!cancelled) {\n-            // task may have finished between our check and attempted cancel, this is fine.\n-            if (! childrenChangedFuture.isDone()) {\n-              LOG.warn(\"Could not cancel processing node children changed event, \" +\n-                  \"please file a JIRA and attach logs if possible.\");\n-            }\n+      // preempt any existing nodeChildrenChanged event processing\n+      if (childrenChangedFuture != null && !childrenChangedFuture.isDone()) {\n+        boolean cancelled = childrenChangedFuture.cancel(true);\n+        if (!cancelled) {\n+          // task may have finished between our check and attempted cancel, this is fine.\n+          if (!childrenChangedFuture.isDone()) {\n+            LOG.warn(\"Could not cancel processing node children changed event, \"\n+              + \"please file a JIRA and attach logs if possible.\");\n           }\n         }\n-        childrenChangedFuture = asyncProcessNodeUpdate(() -> refreshNodes(nodeList));\n-      } catch (KeeperException ke) {\n-        LOG.error(\"Error reading data from zookeeper for path \"+path, ke);\n-        watcher.abort(\"ZooKeeper error get node children for path \"+path, ke);\n       }\n+      childrenChangedFuture = asyncProcessNodeUpdate(() -> {\n+        try {\n+          final List<ZKUtil.NodeAndData> nodeList =\n+            ZKUtil.getChildDataAndWatchForNewChildren(watcher, aclZNode);\n+          refreshNodes(nodeList);\n+        } catch (KeeperException ke) {\n+          LOG.error(\"Error reading data from zookeeper for path \" + path, ke);", "originalCommit": "d19563ab1e85b71da395c3183c5c723b1d18c36e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzU2NQ==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410693565", "bodyText": "Or better create a string variable and use it for both LOG.error and abort message.", "author": "virajjasani", "createdAt": "2020-04-18T12:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwNzQ3Mg==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410707472", "bodyText": "Done", "author": "arshadmohammad", "createdAt": "2020-04-18T14:49:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzQ0NA=="}], "type": "inlineReview"}, {"oid": "446560124c1f11dd111279eee745bd2470a7823b", "url": "https://github.com/apache/hbase/commit/446560124c1f11dd111279eee745bd2470a7823b", "message": "Fixed review comments", "committedDate": "2020-04-18T14:48:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410710605", "bodyText": "@arshadmohammad have you seen this issue being the cause for create table being slow or this is an improvement over preempting any existing nodeChildrenChanged event processing (done in ZKPermissionWatcher)?\nBasically, when thread is interrupted and we return empty list, what could be the catch? Some incorrect decision could be taken by HMaster?", "author": "virajjasani", "createdAt": "2020-04-18T15:15:35Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -741,6 +741,10 @@ public static int getNumberOfChildren(ZKWatcher zkw, String znode)\n     if (nodes != null) {\n       List<NodeAndData> newNodes = new ArrayList<>();\n       for (String node : nodes) {\n+        if (Thread.interrupted()) {\n+          // Partial data should not be processed. Cancel processing by sending empty list.", "originalCommit": "446560124c1f11dd111279eee745bd2470a7823b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNjM2OQ==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410716369", "bodyText": "For branch-1.3.x this is an issue, the reason I have explained in the issue description.\nFor master and branch-2, this PR change is for improvement as these branches do not use zk based region assignment.\nCode change is same, for branch-1.3.x  it is for the fix for other branches it is just improvement.", "author": "arshadmohammad", "createdAt": "2020-04-18T16:05:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNjg5Nw==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410716897", "bodyText": "getChildDataAndWatchForNewChildren is called from many places, but it is interrupted from ZKPermissionWatcher#nodeChildrenChanged() by calling childrenChangedFuture.cancel.  Here cancel/interrupt  indicates that we have more updated data, no need to proceed with the old data. Returning empty is for graceful exit of the processing.", "author": "arshadmohammad", "createdAt": "2020-04-18T16:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk1NDg5Mw==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410954893", "bodyText": "Thanks @arshadmohammad\nIt seems ZKPermissionWatcher#nodeChildrenChanged() is interrupting ZKPermissionWatcher#refreshNodes() and that method is already taking care of Thread.interrupted() check. That would not interrupt ZKUtil#getChildDataAndWatchForNewChildren().", "author": "virajjasani", "createdAt": "2020-04-19T17:43:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk2MzIxMA==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r411963210", "bodyText": "Thanks @virajjasani for the reviews\nI have not understood if there is any concern on the change from your comment. But still let me explain bit more.\nWhen cancel is called on childrenChangedFuture, irrespective of which method is executing inside run method, run method should finish. Inside run method we are invoking two independent methods getChildDataAndWatchForNewChildren and refreshNodes. So both should handle the interrupted state of the thread. refreshNodes method was already handling it, so i have added handling only for getChildDataAndWatchForNewChildren.", "author": "arshadmohammad", "createdAt": "2020-04-21T08:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MTgyMA==", "url": "https://github.com/apache/hbase/pull/1546#discussion_r412371820", "bodyText": "Oh okk, while looking into asyncProcessNodeUpdate(), I was actually referring to the current code and not your patch, hence I didn't find call stack from ZKPermissionWatcher -> ZKUtil#getChildDataAndWatchForNewChildren().\nGot it, all good.\nThanks", "author": "virajjasani", "createdAt": "2020-04-21T17:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ=="}], "type": "inlineReview"}]}