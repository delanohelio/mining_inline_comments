{"pr_number": 2682, "pr_title": "HBASE-25127 Enhance PerformanceEvaluation to profile meta replica per\u2026", "pr_createdAt": "2020-11-20T03:45:15Z", "pr_url": "https://github.com/apache/hbase/pull/2682", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MTQ5Nw==", "url": "https://github.com/apache/hbase/pull/2682#discussion_r527491497", "bodyText": "nits: add a * before the line.", "author": "Apache9", "createdAt": "2020-11-20T07:35:49Z", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java", "diffHunk": "@@ -1481,6 +1489,31 @@ void onTakedown() throws IOException {\n     }\n   }\n \n+  /*\n+  Parent class for all meta tests: MetaWriteTest, MetaRandomReadTest and CleanMetaTest", "originalCommit": "ca66986f7240ed635df5e05c7019872f50a480b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MTkzMA==", "url": "https://github.com/apache/hbase/pull/2682#discussion_r527491930", "bodyText": "Ditto.", "author": "Apache9", "createdAt": "2020-11-20T07:37:05Z", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java", "diffHunk": "@@ -1481,6 +1489,31 @@ void onTakedown() throws IOException {\n     }\n   }\n \n+  /*\n+  Parent class for all meta tests: MetaWriteTest, MetaRandomReadTest and CleanMetaTest\n+   */\n+  static abstract class MetaTest extends TableTest {\n+    protected int keyLength;\n+\n+    MetaTest(Connection con, TestOptions options, Status status) {\n+      super(con, options, status);\n+      keyLength = Integer.toString(opts.perClientRunRows).length();\n+    }\n+\n+    @Override\n+    void onTakedown() throws IOException {\n+      // No clean up\n+    }\n+\n+    /*\n+    Generates Lexicographically ascending strings", "originalCommit": "ca66986f7240ed635df5e05c7019872f50a480b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MjY0Mg==", "url": "https://github.com/apache/hbase/pull/2682#discussion_r527492642", "bodyText": "Since we do not pre set a seed here, please just use ThreadLocalRandom instead.", "author": "Apache9", "createdAt": "2020-11-20T07:38:30Z", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java", "diffHunk": "@@ -1999,6 +2032,47 @@ protected void testTakedown() throws IOException {\n     }\n   }\n \n+  /*\n+  Send random reads against fake regions inserted by MetaWriteTest\n+   */\n+  static class MetaRandomReadTest extends MetaTest {\n+    private Random rd = new Random();", "originalCommit": "ca66986f7240ed635df5e05c7019872f50a480b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkzMDc2Ng==", "url": "https://github.com/apache/hbase/pull/2682#discussion_r527930766", "bodyText": "Changed to existing random instance that is initialized by current system time.", "author": "clarax", "createdAt": "2020-11-20T19:39:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MjY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MzQzOQ==", "url": "https://github.com/apache/hbase/pull/2682#discussion_r527493439", "bodyText": "Out of interest, we have several pattern of the implementations for this method. Some just returns opts.perClientRunRows, some divide by 10, some divide by 100. What's the difference here? Why we choose 10 here? Because the random read test uses 10? Not a big concern, just asking.", "author": "Apache9", "createdAt": "2020-11-20T07:40:26Z", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java", "diffHunk": "@@ -1999,6 +2032,47 @@ protected void testTakedown() throws IOException {\n     }\n   }\n \n+  /*\n+  Send random reads against fake regions inserted by MetaWriteTest\n+   */\n+  static class MetaRandomReadTest extends MetaTest {\n+    private Random rd = new Random();\n+    private RegionLocator regionLocator;\n+\n+    MetaRandomReadTest(Connection con, TestOptions options, Status status) {\n+      super(con, options, status);\n+      LOG.info(\"call getRegionLocation\");\n+    }\n+\n+    @Override\n+    void onStartup() throws IOException {\n+      super.onStartup();\n+      this.regionLocator = connection.getRegionLocator(table.getName());\n+    }\n+\n+    @Override\n+    boolean testRow(final int i, final long startTime) throws IOException, InterruptedException {\n+      if (opts.randomSleep > 0) {\n+        Thread.sleep(rd.nextInt(opts.randomSleep));\n+      }\n+      HRegionLocation hRegionLocation = regionLocator.getRegionLocation(\n+        getSplitKey(rd.nextInt(opts.perClientRunRows)), true);\n+      LOG.debug(\"get location for region: \" + hRegionLocation);\n+      return true;\n+    }\n+\n+    @Override\n+    protected int getReportingPeriod() {\n+      int period = opts.perClientRunRows / 10;", "originalCommit": "ca66986f7240ed635df5e05c7019872f50a480b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4NTE2NQ==", "url": "https://github.com/apache/hbase/pull/2682#discussion_r527885165", "bodyText": "I didn't implement the others but my understanding is it depends on the balance of getting more frequent reports and the overhead of IO. I chose 10 because random read test uses 10. And it works fine in my test. We might want to make it configurable in the future if we run into issues with too many IO.", "author": "clarax", "createdAt": "2020-11-20T18:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MzQzOQ=="}], "type": "inlineReview"}, {"oid": "995d261aff190a5da6834b3de0574684a804d256", "url": "https://github.com/apache/hbase/commit/995d261aff190a5da6834b3de0574684a804d256", "message": "HBASE-25127 Enhance PerformanceEvaluation to profile meta replica performance. (#2644)\n\nSigned-off-by: Huaxiang Sun <huaxiangsun@apache.com>\nSigned-off-by: stack <stack@apache.com>", "committedDate": "2020-11-20T19:36:38Z", "type": "commit"}, {"oid": "995d261aff190a5da6834b3de0574684a804d256", "url": "https://github.com/apache/hbase/commit/995d261aff190a5da6834b3de0574684a804d256", "message": "HBASE-25127 Enhance PerformanceEvaluation to profile meta replica performance. (#2644)\n\nSigned-off-by: Huaxiang Sun <huaxiangsun@apache.com>\nSigned-off-by: stack <stack@apache.com>", "committedDate": "2020-11-20T19:36:38Z", "type": "forcePushed"}]}