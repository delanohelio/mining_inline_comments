{"pr_number": 1047, "pr_title": "HBASE-23683 Make HBaseInterClusterReplicationEndpoint more extensible\u2026", "pr_createdAt": "2020-01-15T13:05:24Z", "pr_url": "https://github.com/apache/hbase/pull/1047", "timeline": [{"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636", "url": "https://github.com/apache/hbase/commit/f9c77341e9ed28abb96a22d0d5af26aa77dff636", "message": "HBASE-23683 Make HBaseInterClusterReplicationEndpoint more extensible (#1027)\n\nSigned-off-by: Bharath Vissapragada <bharathv@apache.org>\nSigned-off-by: Josh Elser <elserj@apache.org>\nSigned-off-by: binlijin <binlijin@gmail.com>", "committedDate": "2020-01-15T12:54:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MzE2OQ==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r366993169", "bodyText": "nit: redundant cast to conn.", "author": "bharathv", "createdAt": "2020-01-15T16:59:35Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -114,6 +114,25 @@\n   private boolean dropOnDeletedTables;\n   private boolean isSerial = false;\n \n+  /*\n+   * Some implementations of HBaseInterClusterReplicationEndpoint may require instantiate different\n+   * Connection implementations, or initialize it in a different way, so defining createConnection\n+   * as protected for possible overridings.\n+   */\n+  protected Connection createConnection(Configuration conf) throws IOException {\n+    return ConnectionFactory.createConnection(conf);\n+  }\n+\n+  /*\n+   * Some implementations of HBaseInterClusterReplicationEndpoint may require instantiate different\n+   * ReplicationSinkManager implementations, or initialize it in a different way,\n+   * so defining createReplicationSinkManager as protected for possible overridings.\n+   */\n+  protected ReplicationSinkManager createReplicationSinkManager(Connection conn) {\n+    return new ReplicationSinkManager((ClusterConnection) conn, this.ctx.getPeerId(),", "originalCommit": "f9c77341e9ed28abb96a22d0d5af26aa77dff636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3MDA5Nw==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367070097", "bodyText": "Compilation fails without this cast, as ReplicationSinkManager expects ClusterConnection.", "author": "wchevreuil", "createdAt": "2020-01-15T19:41:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MzE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3NjcwMg==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367076702", "bodyText": "sorry, I meant pass ClusterConnection directly, but I guess that brings us back to your other comment as to why you want to use generic \"Connection\" object.", "author": "bharathv", "createdAt": "2020-01-15T19:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MzE2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r366994096", "bodyText": "Do we need force createConnection() to return a connection of type ClusterConnection? Otherwise, theoretically overrides can return any type of Connection (may or may not be ClusterConnection) and the type cast here fails. Just a thought.", "author": "bharathv", "createdAt": "2020-01-15T17:01:15Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -133,12 +152,12 @@ public void init(Context context) throws IOException {\n     // TODO: This connection is replication specific or we should make it particular to\n     // replication and make replication specific settings such as compression or codec to use\n     // passing Cells.\n-    this.conn = (ClusterConnection) ConnectionFactory.createConnection(this.conf);\n+    this.conn = (ClusterConnection) createConnection(this.conf);", "originalCommit": "f9c77341e9ed28abb96a22d0d5af26aa77dff636", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3MjA5OA==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367072098", "bodyText": "Yeah, that kind of restrict the extensibility, which is what we are trying to improve here, but addressing that would require an extra refactoring effort, just as @joshelser mentioned on the master PR. For example, in master branch, we are forced to return AsyncClusterConnection.", "author": "wchevreuil", "createdAt": "2020-01-15T19:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4MTE1Mw==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367081153", "bodyText": "that kind of restrict the extensibility, which is what we are trying to improve here,\n\nHmm.. May be I'm missing something, what does your use case look like here where you have an override that does a generic Connection rather than (some type of) ClusterConnection? I'm curious how it restricts extensibility because to use this, it has to be a ClusterConnection, otherwise it fails at runtime, no?", "author": "bharathv", "createdAt": "2020-01-15T20:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM0OTY0NQ==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367349645", "bodyText": "what does your use case look like here where you have an override that does a generic Connection rather than (some type of) ClusterConnection?\n\nI have a HBaseInterClusterReplicationEndpoint extension where I'm still using ConnectionFactory for creating connections, but I use different factory method than what is used by HBaseInterClusterReplicationEndpoint. I don't really care about which connection implementation the factory is returning, I just rely on whatever is the default (in 2.x, it's ClusterConnection). I noticed, though, that default connection type changed between 2.x and 3.0, from ClusterConnection to AsycnClusterConnection. So, if we keep create methods referencing generic Connection only, I won't need to change my HBaseInterClusterReplicationEndpoint extension if I upgrade to hbase 3.x (provided, of course, that HBaseInterClusterReplicationEndpoint.conn variable also changes to same default returned by  ConnectionFactory).", "author": "wchevreuil", "createdAt": "2020-01-16T10:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MTYyMA==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367551620", "bodyText": "Oh I see.. I think I get the problem. Basically you are just relying on ConnectionFactory and not worried about the type it is returning. Ya, refactoring it will be a bigger patch.\nnit: How about adding a preconditions check.. Preconditions.checkState(returnedConn instanceof ClusterConnection) and back it up with a comment why it could fail?", "author": "bharathv", "createdAt": "2020-01-16T17:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDM5Mw==", "url": "https://github.com/apache/hbase/pull/1047#discussion_r366994393", "bodyText": "nit: instantiating..", "author": "bharathv", "createdAt": "2020-01-15T17:01:50Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -114,6 +114,25 @@\n   private boolean dropOnDeletedTables;\n   private boolean isSerial = false;\n \n+  /*\n+   * Some implementations of HBaseInterClusterReplicationEndpoint may require instantiate different", "originalCommit": "f9c77341e9ed28abb96a22d0d5af26aa77dff636", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0868dfd10bf5e3727fd0bdb41c21fb3d64fc1b60", "url": "https://github.com/apache/hbase/commit/0868dfd10bf5e3727fd0bdb41c21fb3d64fc1b60", "message": "Addressing last round of reviews", "committedDate": "2020-01-20T14:08:02Z", "type": "commit"}, {"oid": "fea133b6b9ed1163e0949c730056e2209492a281", "url": "https://github.com/apache/hbase/commit/fea133b6b9ed1163e0949c730056e2209492a281", "message": "changed import order", "committedDate": "2020-01-21T14:46:52Z", "type": "commit"}]}