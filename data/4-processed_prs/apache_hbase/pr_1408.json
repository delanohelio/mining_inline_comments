{"pr_number": 1408, "pr_title": "HBASE-24086 Disable output stream capability enforcement when running in standalone mode", "pr_createdAt": "2020-04-01T18:36:34Z", "pr_url": "https://github.com/apache/hbase/pull/1408", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401910697", "bodyText": "nit: make it an else if? meaning if the user didn't override UNSAFE_STREAM_CAPABILITY_ENFORCE and its a local fs mode..", "author": "bharathv", "createdAt": "2020-04-01T21:08:48Z", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java", "diffHunk": "@@ -350,11 +350,18 @@ public static void setWALRootDir(final Configuration c, final Path root) {\n   public static FileSystem getWALFileSystem(final Configuration c) throws IOException {\n     Path p = getWALRootDir(c);\n     FileSystem fs = p.getFileSystem(c);\n-    // hadoop-core does fs caching, so need to propogate this if set\n+    // hadoop-core does fs caching, so need to propagate this if set\n     String enforceStreamCapability = c.get(UNSAFE_STREAM_CAPABILITY_ENFORCE);\n     if (enforceStreamCapability != null) {\n       fs.getConf().set(UNSAFE_STREAM_CAPABILITY_ENFORCE, enforceStreamCapability);\n     }\n+    if (!c.getBoolean(HConstants.CLUSTER_DISTRIBUTED, false)) {", "originalCommit": "788f800c68200f78eb05b535d33b4b4f8fcff64f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMzk5NQ==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401913995", "bodyText": "Can you not ask fs if it is an instance of local fs? If it is, then set the boolean?", "author": "saintstack", "createdAt": "2020-04-01T21:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxNTExMQ==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401915111", "bodyText": "Hmm.... Looking here, the distributed flag is good to check [1] but would we run non-distributed on an fs that supports sync? s3?\n\nhttp://hbase.apache.org/book.html#standalone", "author": "saintstack", "createdAt": "2020-04-01T21:17:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzMDEzMg==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401930132", "bodyText": "make it an else if? meaning if the user didn't override UNSAFE_STREAM_CAPABILITY_ENFORCE and its a local fs mode..\n\nI explicitly disable it here because we know it doesn't work with the local filesystem. There are plenty of places where conf lookups of UNSAFE_STREAM_CAPABILITY_ENFORCE have a default of true, so leaving it unset sometimes doesn't help.", "author": "ndimiduk", "createdAt": "2020-04-01T21:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzMTMwMQ==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401931301", "bodyText": "Can you not ask fs if it is an instance of local fs? If it is, then set the boolean?\nwould we run non-distributed on an fs that supports sync? s3?\n\nMy preference would be if !distributed && !fs.supportsCapabilities(), however the only way I see to ask a FS if it supports the capabilities is to first instantiate a stream, which I didn't want to do here. Other suggestions?", "author": "ndimiduk", "createdAt": "2020-04-01T21:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3MTg3OA==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401971878", "bodyText": "I think @saintstack is right. We can run non-distributed on a distributed fs with stream capabilities. So the check is probably not tight...\n\nOther suggestions?\n\nOne naive way is to just check for instance of LocalFileSystem and override? (Think this is what Stack was suggesting). This covers the most common case of testing something by just unpacking a bin release. Any other fancy filesystems, users may have to figure out themselves?", "author": "bharathv", "createdAt": "2020-04-01T23:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3ODQ4Mw==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401978483", "bodyText": "I was hoping to avoid pinning the logic to specific FileSystem implementations, rather on capabilities. Fun fact: the only commonality between LocalFileSystem and RawLocalFileSystem is FileSystem :/", "author": "ndimiduk", "createdAt": "2020-04-02T00:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3OTc3Mw==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401979773", "bodyText": "Ya, that'd be ideal.. probably a new Hadoop jira for the FileSystem interface to expose the capabilities in some form...", "author": "bharathv", "createdAt": "2020-04-02T00:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk4NTUxMA==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r401985510", "bodyText": "From debugging, it's LocalFileSystem that gets used for wals, so that's what I've used. This seems very fragile though :/", "author": "ndimiduk", "createdAt": "2020-04-02T00:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMDY5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxMDMxMw==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r402010313", "bodyText": "Just test whether this is a LocalFileSystem is enough?", "author": "Apache9", "createdAt": "2020-04-02T02:01:13Z", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java", "diffHunk": "@@ -350,11 +349,19 @@ public static void setWALRootDir(final Configuration c, final Path root) {\n   public static FileSystem getWALFileSystem(final Configuration c) throws IOException {\n     Path p = getWALRootDir(c);\n     FileSystem fs = p.getFileSystem(c);\n-    // hadoop-core does fs caching, so need to propogate this if set\n+    // hadoop-core does fs caching, so need to propagate this if set\n     String enforceStreamCapability = c.get(UNSAFE_STREAM_CAPABILITY_ENFORCE);\n     if (enforceStreamCapability != null) {\n       fs.getConf().set(UNSAFE_STREAM_CAPABILITY_ENFORCE, enforceStreamCapability);\n     }\n+    if (!c.getBoolean(HConstants.CLUSTER_DISTRIBUTED, false)", "originalCommit": "8d798e78da954d6cbbe96566252912f8efb58baf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxNTI1Nw==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r402015257", "bodyText": "You tell me :)\nYes, for running out of the source tree, not modifying any configuration, this change permits the process to start, master and region server threads all come online. I performed some additional verification by running ltt against the process, a scant 100k rows.\nI don't know well when we choose LocalFileSystem vs. RawLocalFIleSystem, so there may be other issues lurking.", "author": "ndimiduk", "createdAt": "2020-04-02T02:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxMDMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA1OTQxOA==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r402059418", "bodyText": "Hmm.. I too think it should just be (fs instanceof LocalFS).. With this patch, try using the following combination (distributed cluster + localfs), it fails with the same error when it should work..\n<configuration>\n    <property>\n          <name>hbase.cluster.distributed</name>\n          <value>true</value>\n    </property>\n</configuration>\n\nPoint being that, these two configuration params are disjoint. Meaning a distributed/non-distributed cluster should work with a local file system. Stream capability is a property of the FS in use, so just a check on FS should be good IMO.\nI poked around a little bit about RawFS in the hadoop code, didn't fully understand its use but it appears that FileSystem when parsing the config would pick LocalFileSystem when the scheme is file:///. So I think just doing it for LocalFileSystem should be ok.", "author": "bharathv", "createdAt": "2020-04-02T05:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxMDMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1NjQyNQ==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r402456425", "bodyText": "How do you run a distributed cluster on local fs? You running off of shared NFS mounts?", "author": "ndimiduk", "createdAt": "2020-04-02T16:43:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxMDMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2NTI5Mw==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r402465293", "bodyText": "Pseudo-distributed http://hbase.apache.org/book.html#quickstart_pseudo, just that I didn't set \"hbase.rootdir\" and hence it defaults to local fs.", "author": "bharathv", "createdAt": "2020-04-02T16:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxMDMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3NjIxMg==", "url": "https://github.com/apache/hbase/pull/1408#discussion_r402476212", "bodyText": "Yeah, fair enough. So I'll remove the CLUSTER_DISTRIBUTED check and instead check fs instanceOf LocalFileSystem.\nI also asked the stream capabilities question over on hdfs-user.", "author": "ndimiduk", "createdAt": "2020-04-02T17:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxMDMxMw=="}], "type": "inlineReview"}, {"oid": "cbe08c6e5bf891df207fcb2d8e4a44d040dbf0f4", "url": "https://github.com/apache/hbase/commit/cbe08c6e5bf891df207fcb2d8e4a44d040dbf0f4", "message": "HBASE-24086 Disable output stream capability enforcement when running on LocalFileSystem", "committedDate": "2020-04-02T17:49:04Z", "type": "forcePushed"}, {"oid": "40b316f978b1452827b8f5c8451f26f31e580e05", "url": "https://github.com/apache/hbase/commit/40b316f978b1452827b8f5c8451f26f31e580e05", "message": "HBASE-24086 Disable output stream capability enforcement when running on LocalFileSystem\n\nSigned-off-by: stack <stack@apache.org>\nSigned-off-by: Bharath Vissapragada <bharathv@apache.org>\nSigned-off-by: Duo Zhang <zhangduo@apache.org>", "committedDate": "2020-04-03T16:14:42Z", "type": "commit"}, {"oid": "40b316f978b1452827b8f5c8451f26f31e580e05", "url": "https://github.com/apache/hbase/commit/40b316f978b1452827b8f5c8451f26f31e580e05", "message": "HBASE-24086 Disable output stream capability enforcement when running on LocalFileSystem\n\nSigned-off-by: stack <stack@apache.org>\nSigned-off-by: Bharath Vissapragada <bharathv@apache.org>\nSigned-off-by: Duo Zhang <zhangduo@apache.org>", "committedDate": "2020-04-03T16:14:42Z", "type": "forcePushed"}]}