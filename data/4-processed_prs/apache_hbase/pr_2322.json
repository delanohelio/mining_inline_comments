{"pr_number": 2322, "pr_title": "[HBASE-24956] ConnectionManager#locateRegionInMeta waits for user region lock indefinitely.", "pr_createdAt": "2020-08-27T15:15:35Z", "pr_url": "https://github.com/apache/hbase/pull/2322", "timeline": [{"oid": "3a795dbbeb04818f8363a50d718a132268b5ffcd", "url": "https://github.com/apache/hbase/commit/3a795dbbeb04818f8363a50d718a132268b5ffcd", "message": "[HBASE-24956] ConnectionManager#locateRegionInMeta waits for user region lock indefinitely.", "committedDate": "2020-08-27T02:05:41Z", "type": "commit"}, {"oid": "2e72cffb75029f70ea83737fb26e8ed47696fcd4", "url": "https://github.com/apache/hbase/commit/2e72cffb75029f70ea83737fb26e8ed47696fcd4", "message": "Merge branch 'branch-2' of https://github.com/apache/hbase into HBASE-24956", "committedDate": "2020-08-27T15:40:24Z", "type": "commit"}, {"oid": "94f2de8e052ae71a652983f593231169b5371b6a", "url": "https://github.com/apache/hbase/commit/94f2de8e052ae71a652983f593231169b5371b6a", "message": "[HBASE-24956] Fixing errors pointed by apache hbase bot.", "committedDate": "2020-08-27T15:50:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMjEyMw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r478612123", "bodyText": "Make this subclass HBaseIOException rather than IOException?", "author": "saintstack", "createdAt": "2020-08-27T18:23:56Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/LockTimeoutException.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.client;\n+\n+import java.io.IOException;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/*\n+  Thrown whenever we are not able to get the lock within the specified wait time.\n+ */\n+@InterfaceAudience.Public\n+public class LockTimeoutException extends IOException {", "originalCommit": "94f2de8e052ae71a652983f593231169b5371b6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwMTUwMA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r478701500", "bodyText": "Fixed in latest commit. Please review again", "author": "shahrs87", "createdAt": "2020-08-27T21:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMjEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r478687341", "bodyText": "@saintstack Rushabh and I had a quick offline chat about this PR. We were wondering what is the right timeout to use for this lock. In the client code path there are a bunch of time out configurations depending on the path we take and sometimes layered on top of each other.\nSpecifically I was wondering if hbase.client.operation.timeout would be the right one to use for this. I understand that we are using the scanner timeout here because the call wraps a scanner with the same timeout. From a client standpoint though, scanner is just an implementation detail of locateRegion (root caller in this case) and that root caller should be wrapped with a general operation timeout rather than a timeout that is specific to the scanner.\nNot a big deal but I was just curious and would like to know your thoughts. Thanks.", "author": "bharathv", "createdAt": "2020-08-27T20:49:46Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -968,6 +968,19 @@ private RegionLocations locateRegionInMeta(TableName tableName, byte[] row, bool\n     }\n   }\n \n+  private void takeUserRegionLock() throws IOException {\n+    try {\n+      long waitTime = connectionConfig.getScannerTimeoutPeriod();\n+      if (!userRegionLock.tryLock(waitTime, TimeUnit.MILLISECONDS)) {", "originalCommit": "94f2de8e052ae71a652983f593231169b5371b6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2Mjc3NQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r478762775", "bodyText": "We were wondering what is the right timeout to use for this lock.\n\n+1. The scanner timeout is not a good choice here.", "author": "infraio", "createdAt": "2020-08-28T00:15:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2NzA0Ng==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r478767046", "bodyText": "@bharathv  @infraio  Thank you for your feedback.\n\nSpecifically I was wondering if hbase.client.operation.timeout would be the right one to use for this.\n\nI don't feel hbase.client.operation.timeout is the right choice here too. This config is meant for the whole end to end operation timeout which includes all layers of retries and the default value is 20 mins. If we use this timeout then we are not gaining anything.\nWe can introduce a new config property (something like hbase.client.lock.timeout.period) and default it to something like 10 seconds. That way we don't depend on existing scanner/operation timeout periods. Let me know what you guys think. Thank you !", "author": "shahrs87", "createdAt": "2020-08-28T00:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0MTYwNg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479441606", "bodyText": "This is really difficult to operate already, just look at us discussing it now. Scanner timeout? Operation timeout? Both! Neither! Make another! Let's not introduce another config option.", "author": "apurtell", "createdAt": "2020-08-28T17:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MDU4Ng==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479460586", "bodyText": "Good concern @bharathv .\noperation timeout is for 'whole operation end-to-end' per @shahrs87 . Here we are doing a sub-task so operation timeout doesn't seem right. Scanner timeout seems good; when it expires the scan will throw and we'll do the finally block anyways?\nWhat would you suggest @infraio ?\nI agree w/ @apurtell that last thing we need is new timeout ; client timeout is fraught as is.", "author": "saintstack", "createdAt": "2020-08-28T18:09:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MDkzMQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479580931", "bodyText": "operation timeout is for 'whole operation end-to-end'\n\nIn that case IMO the right fix is to extend the operation timeout to all public methods of HTable (may or may not be a part of this change). Looking at the code, we do it for some and we skip it for others. One of those methods is locateRegion() which is the root caller in this case.\nMy concern was from a user configuration POV, there 3 or 4 different timeouts a user has to configure (depending on which API they are using) to get a proper timeout behavior. Ideally it'd be nice if there is a single timeout at the root level that is an e-e timeout and probably other timeouts like scanner timeout etc for finer control depending on the need.\nDon't mean to block this PR, we can probably implement that as a separate change.", "author": "bharathv", "createdAt": "2020-08-29T00:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc5MjU1OA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479792558", "bodyText": "My concern was from a user configuration POV, there 3 or 4 different timeouts a user has to configure (depending on which API they are using) to get a proper timeout behavior. Ideally it'd be nice if there is a single timeout at the root level that is an e-e timeout and probably other timeouts like scanner timeout etc for finer control depending on the need.\nThis is a critical concern. Our @petersomogyi was the last to throw himself against this rampart. The work is not yet finished. Yes, to a new issue.\nHere will wait on @infraio 's input.....", "author": "saintstack", "createdAt": "2020-08-30T17:01:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2NTYzMQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479865631", "bodyText": "I am +1 to use operation timeout here.", "author": "infraio", "createdAt": "2020-08-31T03:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NzA5Mw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r480197093", "bodyText": "I am +1 to use operation timeout here.\n\n@infraio  the default value for operation timeout is 20 minutes. Do you want clients to wait for 20 minutes to acquire this lock ?", "author": "shahrs87", "createdAt": "2020-08-31T15:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3Njc2Mg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r480476762", "bodyText": "@saintstack  @apurtell  @infraio  We need to come to consensus on which timeout property to use ? IMHO don't think we should use operation timeout.", "author": "shahrs87", "createdAt": "2020-08-31T23:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1MjAxNA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r481152014", "bodyText": "the default value for operation timeout is 20 minutes. Do you want clients to wait for 20 minutes to acquire this lock ?\n\nThe problem is not how long the default value. The problem here is to use the right timeout. And for the default 20min operation timeout, we set it to 20mins because it is easy for passing ITBLL. And in real producetion cluster, no user will use the default value if it serve for online service.\nThe guarantee of operation timeout is all table call (exclude scan) should return or throw exception when timeout. And when need to locate, locateRegionInMeta is one step of table call. So it should to keep this guarantee.", "author": "infraio", "createdAt": "2020-09-01T13:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1Mjk4Mw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r481152983", "bodyText": "Operation timout is not the best choice but better than scanner timeout. Thanks.", "author": "infraio", "createdAt": "2020-09-01T13:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3NTExNQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r482175115", "bodyText": "Let me explain my POV with one of our client example.\nWe have an internal customer who wants a strict 15 seconds SLA for every operation. Since operation timeout is end to end timeout which includes all the retries, sleep within retries so we suggested them to use operation timeout as 15 seconds.\nAlso we recommended them to set scanner timeout period to 7 seconds with  retries config (hbase.client.retries.number)  set to 2 .  There is some sleep interval between each attempt and we expect the call to complete within 15 seconds and if it doesn't then operation timeout will kick in and fail the call.\nBut we found out that getRegionLocations call is not bounded by operation timeout.\nNow if we set the lock timeout to same as operation timeout, then in worst case scenario call will fail in 15 (lock timeout) + 15 (lock timeout 2nd try) + 1 (assuming sleep of 1 second) = 31 seconds\nIf we set the lock timeout to same as scanner timeout, then in worst case scenario the call will fail in 7 (scanner timeout) + 7 (scanner timeout) + 1 (sleep between tries) = 16 seconds which is closer to SLA that we promised.\nHope this makes sense. If still the community wants to go forward with operation timeout, I will change it to operation timeout.\n@infraio  @bharathv  @virajjasani  @saintstack  @apurtell", "author": "shahrs87", "createdAt": "2020-09-02T15:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTM3Mg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r482199372", "bodyText": "I just had an offline chat with @shahrs87 and I am +1 with keeping scanner timeout as config for Lock, the intention is to:\n\nnot introduce more timeout configs and worsen timeout burden.\nuse the one which can help with multiple retries (if allowed within SLA) rather than timeout which is available at entire operation level (rpc call + lock + locate region by scan + retry if required + and so on...).", "author": "virajjasani", "createdAt": "2020-09-02T16:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA0NjU4MQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r483046581", "bodyText": "Got your case. I thought the problem is if lock timeout, the 2nd retry need to consider this case and should not retry.\nLet me give a example about the rpc timeout (configed as 4 secs) and operation timeout(configed as 10 secs). The rpc timeout maybe reset when the remaining time is less than rpc timeout.\n\nrpc call with 4 secs timeout.\nretry call with 4 secs timeout.\nretry call with 2 secs timeout which equals 10 - 4 - 4.\n\nFor this case, we need same guarantee. If the remaining time is zero, it should not to retry. I thought this is the right way to fix this problem. Thanks.", "author": "infraio", "createdAt": "2020-09-03T15:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg1OTk0Mg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r483859942", "bodyText": "Hi @infraio,\nI am not able to understand your last comment. Could you please elaborate ? Thank you !", "author": "shahrs87", "createdAt": "2020-09-04T21:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk3NjUzNw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r483976537", "bodyText": "Given that we have 4 +1s on using hbase.client.scanner.timeout.period, can we commit this patch ?  Also I have created https://issues.apache.org/jira/browse/HBASE-24983 for wrapping scan operation under operation timeout.\n@apurtell  @saintstack  @bharathv  @virajjasani  @infraio  what do you guys think ?", "author": "shahrs87", "createdAt": "2020-09-05T18:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgwOTIyNA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r484809224", "bodyText": "then in worst case scenario call will fail in 15 (lock timeout) + 15 (lock timeout 2nd try) + 1 (assuming sleep of 1 second) = 31 seconds\n\nReread RpcRetryingCallerImpl#callWithRetries code. If callable.prepare throw the LockTimeoutException, it will not retry. There are a check about call duration and callTimeout in line 156. See https://github.com/apache/hbase/blob/branch-2/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerImpl.java#L156", "author": "infraio", "createdAt": "2020-09-08T10:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNjY5OA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r485216698", "bodyText": "If callable.prepare throw the LockTimeoutException,\n\nIIUC the code, callable.prepare will never throw LockTimeoutException. We throw LockTimeoutException here  At this place we haven't created ReversedClientScanner object also. There is one retry loop here which will retry if exception is not TNFE or retries are not exhausted.\n@infraio  please correct me if I misunderstood anything.", "author": "shahrs87", "createdAt": "2020-09-08T21:52:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3MjA4MQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r485272081", "bodyText": "bq. There is one retry loop here which will retry if exception is not TNFE or retries are not exhausted.\nPlease check the code. The LockTimeoutException will be throwed out and terminate the loop. It is not in the try...catch code block.\nbq. IIUC the code, callable.prepare will never throw LockTimeoutException.\ncallable.prepare will call locateRegionInMeta inside. So  locateRegionInMeta throw LockTimeoutException, then it will throw this exception out.\nThanks.", "author": "infraio", "createdAt": "2020-09-09T00:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA2Mzc5NQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486063795", "bodyText": "What is the resolution here @shahrs87  + @infraio ?", "author": "saintstack", "createdAt": "2020-09-10T04:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3NTYyNg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486075626", "bodyText": "Please check the code. The LockTimeoutException will be throwed out and terminate the loop. It is not in the try...catch code block.\n\n@infraio  you are right. Fixed that in latest commit. Please review again.", "author": "shahrs87", "createdAt": "2020-09-10T05:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODU2OQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486558569", "bodyText": "What is the resolution here @shahrs87 + @infraio ?\n\n@infraio  pointed out one bug in my patch. Fixed it yesterday. Waiting for his feedback. Thank you for being so patient !", "author": "shahrs87", "createdAt": "2020-09-10T18:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAxODA1Nw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r489018057", "bodyText": "@infraio  could you please review again ?", "author": "shahrs87", "createdAt": "2020-09-15T22:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4NzM0MQ=="}], "type": "inlineReview"}, {"oid": "541b33b8cc30c903eb1a89a4109083e87f279d3d", "url": "https://github.com/apache/hbase/commit/541b33b8cc30c903eb1a89a4109083e87f279d3d", "message": "[HBASE-24956] Address CR and fix checkstyle warnings.", "committedDate": "2020-08-27T21:16:49Z", "type": "commit"}, {"oid": "d184c89f8d0363aac1802c6d8d4c7973d9e1d5ed", "url": "https://github.com/apache/hbase/commit/d184c89f8d0363aac1802c6d8d4c7973d9e1d5ed", "message": "[HBASE-24956] Missed hunks.", "committedDate": "2020-08-28T21:21:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU0MDk1OA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479540958", "bodyText": "On my local system I created patch for this on top of 1.3 branch but while porting the patch to branch-2, I missed applying this hunk.\n@saintstack  @apurtell  Since you guys already +1 the previous diff, wanted to bring this change to your attention. Sorry for confusion.\nCc @bharathv  @infraio", "author": "shahrs87", "createdAt": "2020-08-28T21:24:19Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -863,13 +863,15 @@ private RegionLocations locateRegionInMeta(TableName tableName, byte[] row, bool\n       }\n       // Query the meta region\n       long pauseBase = this.pause;\n-      userRegionLock.lock();\n+      takeUserRegionLock();\n       try {\n-        if (useCache) {// re-check cache after get lock\n-          RegionLocations locations = getCachedLocation(tableName, row);\n-          if (locations != null && locations.getRegionLocation(replicaId) != null) {\n-            return locations;\n-          }\n+        // We don't need to check if useCache is enabled or not. Even if useCache is false", "originalCommit": "d184c89f8d0363aac1802c6d8d4c7973d9e1d5ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3Nzg4Mw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479577883", "bodyText": "static getInt() is deprecated, switch to conf.getInt()?", "author": "bharathv", "createdAt": "2020-08-28T23:53:21Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionConfiguration.java", "diffHunk": "@@ -117,6 +119,11 @@\n \n     this.writeRpcTimeout = conf.getInt(HConstants.HBASE_RPC_WRITE_TIMEOUT_KEY,\n         conf.getInt(HConstants.HBASE_RPC_TIMEOUT_KEY, HConstants.DEFAULT_HBASE_RPC_TIMEOUT));\n+\n+    this.scannerTimeoutPeriod = HBaseConfiguration.getInt(conf,", "originalCommit": "d184c89f8d0363aac1802c6d8d4c7973d9e1d5ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcxMzU0Nw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479713547", "bodyText": "Looks like HConstants.HBASE_REGIONSERVER_LEASE_PERIOD_KEY config property is deprecated after 0.96 release. So remove the deprecated config property altogether.", "author": "shahrs87", "createdAt": "2020-08-30T02:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3Nzg4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTY2OA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479581668", "bodyText": "need to be public?", "author": "bharathv", "createdAt": "2020-08-29T00:16:13Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/LockTimeoutException.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.client;\n+\n+import org.apache.hadoop.hbase.HBaseIOException;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/*\n+  Thrown whenever we are not able to get the lock within the specified wait time.\n+ */\n+@InterfaceAudience.Public", "originalCommit": "d184c89f8d0363aac1802c6d8d4c7973d9e1d5ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcxMzYwNg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r479713606", "bodyText": "Actually I don't know. Since this will thrown back all the way to client so thought to make it public. But open for suggestions.", "author": "shahrs87", "createdAt": "2020-08-30T02:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyNjE3OQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r480226179", "bodyText": "I just realized there is an exact same class LockTimeoutException under org.apache.hadoop.hbase.exceptions, switch to that?\n\nBut open for suggestions.\n\nI was hoping that clients would rely on a generic HBaseIOException and marking this as private would give us more flexibility to remove/update etc in the future. But i think it doesn't matter if we switch to the above LockTimeout I was referring to.", "author": "bharathv", "createdAt": "2020-08-31T15:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzOTQ1Nw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r480239457", "bodyText": "I just realized there is an exact same class LockTimeoutException under org.apache.hadoop.hbase.exceptions, switch to that?\n\nThis class only exists in branch-1 and not in master/branch-2. :(", "author": "shahrs87", "createdAt": "2020-08-31T16:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0MDk1OQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r480240959", "bodyText": "Maybe when I create a new PR for branch-1, I can re-use the existing exception class. Would that work ?", "author": "shahrs87", "createdAt": "2020-08-31T16:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTY2OA=="}], "type": "inlineReview"}, {"oid": "f3210c8908809fa154118454e6a23f57bc222db1", "url": "https://github.com/apache/hbase/commit/f3210c8908809fa154118454e6a23f57bc222db1", "message": "[HBASE-24956] Addressing CR comments.", "committedDate": "2020-08-30T02:55:06Z", "type": "commit"}, {"oid": "4cd6f9542b97f8163e6f3e23f66f2edee4b5f8ef", "url": "https://github.com/apache/hbase/commit/4cd6f9542b97f8163e6f3e23f66f2edee4b5f8ef", "message": "Merge branch 'branch-2' of https://github.com/apache/hbase into HBASE-24956", "committedDate": "2020-08-31T16:07:04Z", "type": "commit"}, {"oid": "b7c71147fe47b73ebca74e264cfac14cbf2f1211", "url": "https://github.com/apache/hbase/commit/b7c71147fe47b73ebca74e264cfac14cbf2f1211", "message": "Merge branch 'branch-2' of https://github.com/apache/hbase into HBASE-24956", "committedDate": "2020-09-08T21:05:50Z", "type": "commit"}, {"oid": "57d680a27bfc3b0b4cc5dc4729a2bc2d0529a367", "url": "https://github.com/apache/hbase/commit/57d680a27bfc3b0b4cc5dc4729a2bc2d0529a367", "message": "[HBASE-24956] Addressing CR comments.", "committedDate": "2020-09-10T03:47:18Z", "type": "commit"}, {"oid": "58cb1cdaba1dbf952647934be0f34b4bad2e71db", "url": "https://github.com/apache/hbase/commit/58cb1cdaba1dbf952647934be0f34b4bad2e71db", "message": "Merge branch 'branch-2' of https://github.com/apache/hbase into HBASE-24956", "committedDate": "2020-09-10T03:47:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486099032", "bodyText": "Seems not push the latest commit?", "author": "infraio", "createdAt": "2020-09-10T06:39:01Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -968,6 +974,19 @@ private RegionLocations locateRegionInMeta(TableName tableName, byte[] row, bool\n     }\n   }\n \n+  void takeUserRegionLock() throws IOException {\n+    try {\n+      long waitTime = connectionConfig.getScannerTimeoutPeriod();", "originalCommit": "58cb1cdaba1dbf952647934be0f34b4bad2e71db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MjEzMA==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486492130", "bodyText": "@infraio  I moved the acquiring of lock inside try catch block. \n  \n    \n      hbase/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\n    \n    \n         Line 868\n      in\n      58cb1cd\n    \n    \n    \n    \n\n        \n          \n           takeUserRegionLock(); \n        \n    \n  \n\n\nAlso added a test case for that.", "author": "shahrs87", "createdAt": "2020-09-10T16:52:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3NzcxNQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486877715", "bodyText": "Why move the takeUserRegionLock to inside \"try catch block\"? The right fix is to use operation timeout......", "author": "infraio", "createdAt": "2020-09-11T08:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3OTY4OQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486879689", "bodyText": "I am -1 to use scanner timeout. It is too weird and confused. Operation timeout is not the best choice too but better. Thanks.", "author": "infraio", "createdAt": "2020-09-11T09:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4NDE4MQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r486884181", "bodyText": "Reread RpcRetryingCallerImpl#callWithRetries code. If callable.prepare throw the LockTimeoutException, it will not retry. There are a check about call duration and callTimeout in line 156.\n\nMy point here is that your 15 seconds SLA case is not right. It is still meet your SLA even you use the operation timeout. I didn't mean that \"move takeUserRegionLock  to try catch block\". Thanks.", "author": "infraio", "createdAt": "2020-09-11T09:05:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3MzA1Ng==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r487273056", "bodyText": "Operation timeout is not the best choice too but better\n\n@infraio  In scan operation, there are 2 operations. One is to wait for lock and other is to wait for rpc to complete. On top of that we have retries. The problem we are trying to solve here is what is the timeout to use for lock. If we wait for operation timeout period and if it can't get the lock after the timeout, it will not have any time remaining for next attempts. So I am confused when you suggest to use operation timeout, are you suggesting to wait for operation timeout period while trying to get lock ?", "author": "shahrs87", "createdAt": "2020-09-11T20:24:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3NDA2MQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r487274061", "bodyText": "@saintstack  Could you please chime in with your inputs. I think we are going back and forth on which timeout to use. Also I have created https://issues.apache.org/jira/browse/HBASE-24983 to wrap the whole scan operation within operation timeout but is outside the scope of this jira. Thank you ! Cc @SukumarMaddineni", "author": "shahrs87", "createdAt": "2020-09-11T20:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0OTIxNw==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r487349217", "bodyText": "If we wait for operation timeout period and if it can't get the lock after the timeout, it will not have any time remaining for next attempts.\n\nYes. The guarantee is that the operation will fail or success within the \"operation timeout\". No remaining time to retry and failed the operation is acceptable.\n\nare you suggesting to wait for operation timeout period while trying to get lock\n\nYes. Use the operation timeout period when wait for lock, instead of the scanner timeout now.\n\nI think we are going back and forth on which timeout to use.\n\nI thought my point is clearly since we start this discussion. I suggested that use operation timeout instead of scanner timeout. Then you give me a 15 seconds SLA example. Then I checked the code: use operation timeout can meet your SLA requirements, too. So why not use operation timeout?", "author": "infraio", "createdAt": "2020-09-12T01:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0Njk3NQ==", "url": "https://github.com/apache/hbase/pull/2322#discussion_r487446975", "bodyText": "@infraio  Thank you for your comment. Now I understand better what you mean. Let me update the PR by today. Thank you for being so patient with me.", "author": "shahrs87", "createdAt": "2020-09-12T20:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5OTAzMg=="}], "type": "inlineReview"}, {"oid": "37e306bc46270482e716e5acfc3dc2e9a0d0e437", "url": "https://github.com/apache/hbase/commit/37e306bc46270482e716e5acfc3dc2e9a0d0e437", "message": "Merge branch 'branch-2' of https://github.com/apache/hbase into HBASE-24956", "committedDate": "2020-09-15T18:33:10Z", "type": "commit"}, {"oid": "be6cda65636c5b3138e63aed40c239a1a1561709", "url": "https://github.com/apache/hbase/commit/be6cda65636c5b3138e63aed40c239a1a1561709", "message": "[HBASE-24956] Addressing CR comments.", "committedDate": "2020-09-15T21:20:12Z", "type": "commit"}]}