{"pr_number": 2824, "pr_title": "HBASE-25447 remoteProc is suspended due to OOM ERROR", "pr_createdAt": "2020-12-29T02:06:50Z", "pr_url": "https://github.com/apache/hbase/pull/2824", "timeline": [{"oid": "801c359896e4719ca151b40fe9cf4908fb69c9ba", "url": "https://github.com/apache/hbase/commit/801c359896e4719ca151b40fe9cf4908fb69c9ba", "message": "HBASE-25447 remoteProc is suspended due to OOM ERROR", "committedDate": "2020-12-29T02:06:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYwNDc2OQ==", "url": "https://github.com/apache/hbase/pull/2824#discussion_r549604769", "bodyText": "Should we abort for all exception or only for OOM?", "author": "pankaj72981", "createdAt": "2020-12-29T07:51:37Z", "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "diffHunk": "@@ -306,15 +315,22 @@ public TimeoutExecutorThread() {\n     @Override\n     public void run() {\n       while (running.get()) {\n-        final DelayedWithTimeout task = DelayedUtil.takeWithoutInterrupt(queue);\n-        if (task == null || task == DelayedUtil.DELAYED_POISON) {\n-          // the executor may be shutting down, and the task is just the shutdown request\n-          continue;\n-        }\n-        if (task instanceof DelayedTask) {\n-          threadPool.execute(((DelayedTask) task).getObject());\n-        } else {\n-          ((BufferNode) task).dispatch();\n+        try {\n+          final DelayedWithTimeout task = DelayedUtil.takeWithoutInterrupt(queue);\n+          if (task == null || task == DelayedUtil.DELAYED_POISON) {\n+            // the executor may be shutting down, and the task is just the shutdown request\n+            continue;\n+          }\n+          if (task instanceof DelayedTask) {\n+            threadPool.execute(((DelayedTask) task).getObject());\n+          } else {\n+            ((BufferNode) task).dispatch();\n+          }\n+        } catch (Throwable e) {\n+          LOG.error(\"Caught error\", e);\n+          if (timeoutExecutorError != null) {", "originalCommit": "801c359896e4719ca151b40fe9cf4908fb69c9ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY4NDM4MQ==", "url": "https://github.com/apache/hbase/pull/2824#discussion_r549684381", "bodyText": "yes. whatever the exception, the thread exits...", "author": "cuibo01", "createdAt": "2020-12-29T12:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYwNDc2OQ=="}], "type": "inlineReview"}, {"oid": "8eefa73d10f7c448e985f03715f6ad9bf2c10fa3", "url": "https://github.com/apache/hbase/commit/8eefa73d10f7c448e985f03715f6ad9bf2c10fa3", "message": "HBASE-25447 remoteProc is suspended due to OOME", "committedDate": "2020-12-31T14:22:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3NTY4Ng==", "url": "https://github.com/apache/hbase/pull/2824#discussion_r550775686", "bodyText": "Better name it something else? Like setTimeoutExecutorUncaughtExceptionHandler? As we have a method all getUncaugtExceptionHandler in this class, for getting uncaughtExceptionHandler for the thread pool.", "author": "Apache9", "createdAt": "2021-01-01T14:54:36Z", "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "diffHunk": "@@ -106,6 +106,10 @@ public boolean start() {\n     return true;\n   }\n \n+  protected void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {", "originalCommit": "8eefa73d10f7c448e985f03715f6ad9bf2c10fa3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1403aa47be2149d97b5b927264500fa5ee570f15", "url": "https://github.com/apache/hbase/commit/1403aa47be2149d97b5b927264500fa5ee570f15", "message": "HBASE-25447 remoteProc is suspended due to OOM ERROR", "committedDate": "2021-01-03T03:00:20Z", "type": "commit"}, {"oid": "1403aa47be2149d97b5b927264500fa5ee570f15", "url": "https://github.com/apache/hbase/commit/1403aa47be2149d97b5b927264500fa5ee570f15", "message": "HBASE-25447 remoteProc is suspended due to OOM ERROR", "committedDate": "2021-01-03T03:00:20Z", "type": "forcePushed"}]}