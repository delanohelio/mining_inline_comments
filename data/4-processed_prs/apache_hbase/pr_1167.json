{"pr_number": 1167, "pr_title": "HBASE-18095 Zookeeper-less client connection umbrella", "pr_createdAt": "2020-02-13T03:04:31Z", "pr_url": "https://github.com/apache/hbase/pull/1167", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkxODk3MA==", "url": "https://github.com/apache/hbase/pull/1167#discussion_r378918970", "bodyText": "Should phrase this change in uptime needs of the master ensemble in terms of when the feature is enabled rather than in terms of hbase versions.", "author": "busbey", "createdAt": "2020-02-13T15:07:46Z", "path": "src/main/asciidoc/_chapters/architecture.adoc", "diffHunk": "@@ -577,11 +644,24 @@ If the active Master loses its lease in ZooKeeper (or the Master shuts down), th\n [[master.runtime]]\n === Runtime Impact\n \n-A common dist-list question involves what happens to an HBase cluster when the Master goes down.\n+A common dist-list question involves what happens to an HBase cluster when the Master goes down. This information has changed staring 3.0.0.\n+\n+==== Up until releases 2.x.y\n Because the HBase client talks directly to the RegionServers, the cluster can still function in a \"steady state\". Additionally, per <<arch.catalog>>, `hbase:meta` exists as an HBase table and is not resident in the Master.\n However, the Master controls critical functions such as RegionServer failover and completing region splits.\n So while the cluster can still run for a short time without the Master, the Master should be restarted as soon as possible.\n \n+==== Staring release 3.0.0\n+As mentioned in section <<client.masterregistry>>, the default connection registry for clients is now based on master rpc end points. Hence the requirements for\n+masters' uptime are even tighter starting this release.\n+\n+- At least one active or stand by master is needed for a connection set up, unlike before when all the clients needed was a ZooKeeper ensemble.\n+- Master is now in critical path for read/write operations. For example, if the meta region bounces off to a different region server, clients\n+need master to fetch the new locations. Earlier this was done by fetching this information directly from ZooKeeper.\n+- Masters will now have higher connection load than before. So, the server side configuration might need adjustment depending on the load.\n+\n+Overall, the master uptime requirements starting with this version are even higher for the client operations to go through.", "originalCommit": "69f4c403ac3bfe53855bd5030b357d1adb4fd345", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NTAxNA==", "url": "https://github.com/apache/hbase/pull/1167#discussion_r379155014", "bodyText": "Done.", "author": "bharathv", "createdAt": "2020-02-13T22:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkxODk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkyMDEyMg==", "url": "https://github.com/apache/hbase/pull/1167#discussion_r378920122", "bodyText": "Also clients need an additional set of config files in secure deployments because zk uses JAAS", "author": "busbey", "createdAt": "2020-02-13T15:09:45Z", "path": "dev-support/design-docs/HBASE-18095-Zookeeper-less-client-connection-design.adoc", "diffHunk": "@@ -0,0 +1,112 @@\n+////\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+////\n+\n+= HBASE-18095: Zookeeper-less client connection\n+\n+\n+== Context\n+Currently, Zookeeper (ZK) lies in the critical code path of connection init. To set up a connection to a given HBase cluster, client relies on the zookeeper quorum configured in the client hbase-site.xml and attempts to fetch the following information.\n+\n+* ClusterID\n+* Active HMaster server name\n+* Meta table region locations\n+\n+ZK is deemed the source of truth since other processes that maintain the cluster state persist the changes to this data into ZK. So it is an obvious place to look at for clients to fetch the latest cluster state.  However this comes with it\u2019s own set of problems, some of them are below.\n+\n+* Timeouts and retry logic for ZK clients are managed separately from HBase configuration. This is more administration overhead for end users (example: multiple timeouts are to be configured for different types of RPCs. client->master, client->ZK etc.). This prevents HBase from having a single holistic timeout configuration that applies to any RPCs.\n+* If there is any issue with ZK (like connection overload / timeouts), the entire HBase service appears frozen and there is little visibility into it.\n+* Exposing zookeeper to all the clients can be risky since it can potentially be abused to DDOS.\n+* Embedded ZK client is bundled with hbase client jar as a dependency (with it\u2019s log spew :-]).", "originalCommit": "69f4c403ac3bfe53855bd5030b357d1adb4fd345", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDE5Mg==", "url": "https://github.com/apache/hbase/pull/1167#discussion_r379154192", "bodyText": "Good point, added.", "author": "bharathv", "createdAt": "2020-02-13T22:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkyMDEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkyMjQwNA==", "url": "https://github.com/apache/hbase/pull/1167#discussion_r378922404", "bodyText": "This specifically doesn't need to be all of the Masters configured for the cluster, right?\nSo if I wanted to hedge against clients ddosing masters to the point that I can't get an active master for the cluster I could e.g. only give them half of the Masters.\nPresuming that's the case, a brief entry in the troubleshooting section that basically says to do this in case clients are causing masters to die would help us get ahead of that concern.\nI say this as someone who has had to troubleshoot clusters where bad client behavior essentially meant every hbase operation hit ZK for meta and as a result said cluster would die.", "author": "busbey", "createdAt": "2020-02-13T15:13:13Z", "path": "src/main/asciidoc/_chapters/configuration.adoc", "diffHunk": "@@ -563,38 +563,63 @@ Changes here will require a cluster restart for HBase to notice the change thoug\n \n If you are running HBase in standalone mode, you don't need to configure anything for your client to work provided that they are all on the same machine.\n \n-Since the HBase Master may move around, clients bootstrap by looking to ZooKeeper for current critical locations.\n-ZooKeeper is where all these values are kept.\n-Thus clients require the location of the ZooKeeper ensemble before they can do anything else.\n-Usually this ensemble location is kept out in the _hbase-site.xml_ and is picked up by the client from the `CLASSPATH`.\n+Starting release 3.0.0, the default connection registry has been switched to a master based implementation. Refer to <<client.masterregistry>> for more details about\n+what a connection registry is and implications of this change. Depending on your HBase version, following is the expected minimal client configuration.\n \n-If you are configuring an IDE to run an HBase client, you should include the _conf/_ directory on your classpath so _hbase-site.xml_ settings can be found (or add _src/test/resources_ to pick up the hbase-site.xml used by tests).\n+==== Up until 2.x.y releases\n+In 2.x.y releases, the default connection registry was based on ZooKeeper as the source of truth. This means that the clients always looked up ZooKeeper znodes to fetch\n+the required metadata. For example, if an active master crashed and the a new master is elected, clients looked up the master znode to fetch\n+the active master address (similarly for meta locations). This meant that the clients needed to have access to ZooKeeper and need to know\n+the ZooKeeper ensemble information before they can do anything. This can be configured in the client configuration xml as follows:\n \n-For Java applications using Maven, including the hbase-shaded-client module is the recommended dependency when connecting to a cluster:\n [source,xml]\n ----\n-<dependency>\n-  <groupId>org.apache.hbase</groupId>\n-  <artifactId>hbase-shaded-client</artifactId>\n-  <version>2.0.0</version>\n-</dependency>\n+<?xml version=\"1.0\"?>\n+<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n+<configuration>\n+  <property>\n+    <name>hbase.zookeeper.quorum</name>\n+    <value>example1,example2,example3</value>\n+    <description> Zookeeper ensemble information</description>\n+  </property>\n+</configuration>\n ----\n \n-A basic example _hbase-site.xml_ for client only may look as follows:\n+==== Starting 3.0.0 release\n+\n+The default implementation was switched to a master based connection registry. With this implementation, clients always contact the active or\n+stand-by master RPC end points to fetch the the connection registry information. This means that the clients should have access to the list of active and master\n+end points before they can do anything. This can be configured in the client configuration xml as follows:", "originalCommit": "69f4c403ac3bfe53855bd5030b357d1adb4fd345", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NTkwOQ==", "url": "https://github.com/apache/hbase/pull/1167#discussion_r379155909", "bodyText": "This specifically doesn't need to be all of the Masters configured for the cluster, right?\nRight.\n\nAdded some notes on trouble shooting.", "author": "bharathv", "createdAt": "2020-02-13T22:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkyMjQwNA=="}], "type": "inlineReview"}, {"oid": "7242ff7fe41f7a0e0656bfccb043b839931e22e5", "url": "https://github.com/apache/hbase/commit/7242ff7fe41f7a0e0656bfccb043b839931e22e5", "message": "HBASE-23331: Documentation for HBASE-18095", "committedDate": "2020-02-13T22:48:56Z", "type": "forcePushed"}, {"oid": "9a53d3e45108d10859ace08d6668f5d8e75fdc5e", "url": "https://github.com/apache/hbase/commit/9a53d3e45108d10859ace08d6668f5d8e75fdc5e", "message": "HBASE-23331: Documentation for HBASE-18095", "committedDate": "2020-02-14T08:42:01Z", "type": "forcePushed"}, {"oid": "e7d519f5df817010c2ebffedc1f0a7043a866d34", "url": "https://github.com/apache/hbase/commit/e7d519f5df817010c2ebffedc1f0a7043a866d34", "message": "HBASE-23331: Documentation for HBASE-18095", "committedDate": "2020-02-17T17:35:09Z", "type": "forcePushed"}, {"oid": "f88ed9c630436e1e7f39f7a24817c0c0fe9d8fa2", "url": "https://github.com/apache/hbase/commit/f88ed9c630436e1e7f39f7a24817c0c0fe9d8fa2", "message": "HBASE-23331: Documentation for HBASE-18095", "committedDate": "2020-02-18T19:57:16Z", "type": "forcePushed"}, {"oid": "792d43aeb5801d75abc9b2fee0fb35c81f8367d1", "url": "https://github.com/apache/hbase/commit/792d43aeb5801d75abc9b2fee0fb35c81f8367d1", "message": "HBASE-23275: Track active master's address in ActiveMasterManager (#812)\n\n* HBASE-23275: Track active master's address in ActiveMasterManager\r\n\r\nCurrently we just track whether an active master exists.\r\nIt helps to also track the address of the active master in\r\nall the masters to help serve the client RPC requests to\r\nknow which master is active.\r\n\r\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>\r\nSigned-off-by: Andrew Purtell <apurtell@apache.org>", "committedDate": "2020-02-20T00:27:48Z", "type": "commit"}, {"oid": "adcf5c9b1acc077d2067876bf6defd2f002d4275", "url": "https://github.com/apache/hbase/commit/adcf5c9b1acc077d2067876bf6defd2f002d4275", "message": "HBASE-23281: Track meta region locations in masters (#830)\n\n* HBASE-23281: Track meta region changes on masters\n\nThis patch adds a simple cache that tracks the meta region replica\nlocations. It keeps an eye on the region movements so that the\ncached locations are not stale.\n\nThis information is used for servicing client RPCs for connections\nthat use master based registry (HBASE-18095). The RPC end points\nwill be added in a separate patch.\n\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>", "committedDate": "2020-02-20T00:27:48Z", "type": "commit"}, {"oid": "4e25707bbd53122e5f6477fb32c126a7475cdc81", "url": "https://github.com/apache/hbase/commit/4e25707bbd53122e5f6477fb32c126a7475cdc81", "message": "HBASE-23304: RPCs needed for client meta information lookup (#904)\n\n* HBASE-23304: RPCs needed for client meta information lookup\n\nThis patch implements the RPCs needed for the meta information\nlookup during connection init. New tests added to cover the RPC\ncode paths. HBASE-23305 builds on this to implement the client\nside logic.\n\nFixed a bunch of checkstyle nits around the places the patch\ntouches.\n\nSigned-off-by: Andrew Purtell <apurtell@apache.org>", "committedDate": "2020-02-20T00:32:23Z", "type": "commit"}, {"oid": "99afd13743141f35739ff080bdba377ad8ef7d48", "url": "https://github.com/apache/hbase/commit/99afd13743141f35739ff080bdba377ad8ef7d48", "message": "HBASE-23604: Clarify AsyncRegistry usage in the code. (#957)\n\n* HBASE-23604: Cleanup AsyncRegistry interface\r\n\r\n- Cleans up the method names to make more sense and adds a little\r\nmore javadocs for context. In future patches we can revisit\r\nthe name of the actual class to make it more self explanatory.\r\n\r\n- Does AsyncRegistry -> ConnectionRegistry rename.\r\n\"async\" ness of the registry is kind of implicit based on\r\nthe interface contents and need not be reflected in the name.\r\n\r\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>\r\nSigned-off-by: stack <stack@apache.org>\r\nSigned-off-by: Viraj Jasani <vjasani@apache.org>", "committedDate": "2020-02-20T00:36:36Z", "type": "commit"}, {"oid": "e4cbe57225426477d9fd3f6c174c4396fc4b52d6", "url": "https://github.com/apache/hbase/commit/e4cbe57225426477d9fd3f6c174c4396fc4b52d6", "message": "HBASE-23648: Re-use underlying connection registry in RawAsyncHBaseAdmin (#994)\n\n* HBASE-23648: Re-use underlying connection registry in RawAsyncHBaseAdmin\r\n\r\nNo need to create and close a new registry on demand. Audited other\r\nusages of getRegistry() and the code looks fine.\r\n\r\n* Fix checkstyle issues in RawAsyncHBaseAdmin", "committedDate": "2020-02-20T00:36:36Z", "type": "commit"}, {"oid": "836bd9495eaa3608ead810b6e1d65a0792971af4", "url": "https://github.com/apache/hbase/commit/836bd9495eaa3608ead810b6e1d65a0792971af4", "message": "HBASE-23305: Master based registry implementation (#954)\n\nImplements a master based registry for clients.\n\n - Supports hedged RPCs (fan out configured via configs).\n - Parameterized existing client tests to run with multiple registry combinations.\n - Added unit-test coverage for the new registry implementation.\n\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>\nSigned-off-by: stack <stack@apache.org>\nSigned-off-by: Andrew Purtell <apurtell@apache.org>", "committedDate": "2020-02-20T00:36:36Z", "type": "commit"}, {"oid": "2612bc6931562f3b1f3e41b4bd493c5e3885074e", "url": "https://github.com/apache/hbase/commit/2612bc6931562f3b1f3e41b4bd493c5e3885074e", "message": "HBASE-23330: Fix delegation token fetch with MasterRegistry (#1084)\n\nSigned-off-by: Andrew Purtell <apurtell@apache.org>", "committedDate": "2020-02-20T00:36:37Z", "type": "commit"}, {"oid": "73569e7d566d356e2dae5d555b5291cb57e16a2e", "url": "https://github.com/apache/hbase/commit/73569e7d566d356e2dae5d555b5291cb57e16a2e", "message": "HBASE-23647: Make MasterRegistry the default impl. (#1039)\n\nSigned-off-by: Stack <stack@apache.org>\r\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>\r\nSigned-off-by: Andrew Purtell <apurtell@apache.org>", "committedDate": "2020-02-20T00:40:13Z", "type": "commit"}, {"oid": "2d9f88e2008e0bdf4cdd158d5383b4e321972308", "url": "https://github.com/apache/hbase/commit/2d9f88e2008e0bdf4cdd158d5383b4e321972308", "message": "HBASE-23731: De-flake TestFromClientSide (#1091)\n\nThere were a couple of issues.\r\n\r\n- There was a leak of a file descriptor for hbck lock file. This\r\nwas contributing to all the \"ConnectionRefused\" stack traces since\r\nit was trying to renew lease for an already expired mini dfs cluster.\r\nThis issue was there for a while, just that we noticed it now.\r\n\r\n- After upgrade to JUnit 4.13, it looks like the behavior for test\r\ntimeouts has changed. Earlier the timeout seems to have applied for\r\neach parameterized run, but now it looks like it is applied across\r\nall the runs.\r\n\r\nThis patch fixes both the issues.\r\n\r\nSigned-off-by: Stack <stack@apache.org>\r\nSigned-off-by: Jan Hentschel <jan.hentschel@ultratendency.com>", "committedDate": "2020-02-20T00:40:13Z", "type": "commit"}, {"oid": "334495ef517740d02c6058f62e6a4920294e9142", "url": "https://github.com/apache/hbase/commit/334495ef517740d02c6058f62e6a4920294e9142", "message": "HBASE-23752: Fix remaining test failures from nightly runs (#1102)\n\nTestFromClientSideWithCoprocessor: Initialization bug causing parameterized\r\nruns to fail.\r\nTestCustomSaslAuthenticationProvider: Test config had to be fixed because\r\nit was written pre-master registry implementation.\r\nTestSnapshotScannerHDFSAclController: Cluster restart did not reset the\r\ncached connection state.\r\n\r\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>\r\nSigned-off-by: Josh Elser <elserj@apache.org>", "committedDate": "2020-02-20T00:40:13Z", "type": "commit"}, {"oid": "dfa6755220b564c8c0827adc1b07a76c80c1f3ab", "url": "https://github.com/apache/hbase/commit/dfa6755220b564c8c0827adc1b07a76c80c1f3ab", "message": "HBASE-23804: Fix default master addr hostname in master registry (#1137)\n\nMaster rpc server end point doesn't bind to localhost's\r\nIP address by default. Instead, it looks up the hostname and\r\nbinds to the endpoint to which it resolves. MasterRegistry should\r\ndo the same when building the default server end point to talk to.\r\n\r\nSigned-off-by: Nick Dimiduk <ndimiduk@apache.org>", "committedDate": "2020-02-20T00:40:13Z", "type": "commit"}, {"oid": "1cca55106e08b984779112930089bef9a1bdd6e3", "url": "https://github.com/apache/hbase/commit/1cca55106e08b984779112930089bef9a1bdd6e3", "message": "HBASE-23331: Documentation for HBASE-18095", "committedDate": "2020-02-20T00:40:13Z", "type": "commit"}, {"oid": "1cca55106e08b984779112930089bef9a1bdd6e3", "url": "https://github.com/apache/hbase/commit/1cca55106e08b984779112930089bef9a1bdd6e3", "message": "HBASE-23331: Documentation for HBASE-18095", "committedDate": "2020-02-20T00:40:13Z", "type": "forcePushed"}]}