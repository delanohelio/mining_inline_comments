{"pr_number": 1747, "pr_title": "HBASE-24405 : Document hbase:slowlog related operations", "pr_createdAt": "2020-05-20T17:15:02Z", "pr_url": "https://github.com/apache/hbase/pull/1747", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0ODIxMQ==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429048211", "bodyText": "The one inside the () are redundant I think. You can remove them and still it makese sense.", "author": "ramkrish86", "createdAt": "2020-05-22T05:23:21Z", "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2079,6 +2079,98 @@ Examples:\n \n ----\n \n+[[slow_log_responses_from_systable]]\n+==== Get Slow/Large Response Logs from System table hbase:slowlog\n+\n+The above section provides details about Admin APIs:\n+\n+* get_slowlog_responses\n+* get_largelog_responses\n+* clear_slowlog_responses\n+\n+All of the above APIs access online in-memory ring buffers from\n+individual RegionServers and accumulate logs from ring buffers to display\n+to end user. However, they can only be used for an ongoing slow/large RPC calls\n+and user can retrieve ongoing issues with RPC logs. After RegionServer is\n+restarted, all the objects held in memory of that RegionServer will be cleaned up\n+and previous problematic logs are lost. What if we want to persist all these logs?\n+What if we want to store them in such a manner that operator can get all historical\n+records with some filters? e.g get me all large/slow RPC logs that are triggered by\n+user1 and are related to region:\n+cluster_test,cccccccc,1589635796466.aa45e1571d533f5ed0bb31cdccaaf9cf.\n+\n+If we have a system table that stores such logs in increasing (not so strictly though)\n+order of time, it can definitely help operators debug some historical events\n+(scan, get, put, compaction, flush etc) with detailed inputs.\n+\n+Config which enabled system table to be created and store all log events is\n+`hbase.regionserver.slowlog.systable.enabled`.\n+\n+The default value for this config is `false`. If provided `true`\n+(Note: `hbase.regionserver.slowlog.buffer.enabled` should also be `true`),\n+HMaster will create system table `hbase:slowlog` and each RegionServer, upon\n+determining any slow/large RPC logs at RpcServer level, will put them in in-memory\n+ring buffer (since `hbase.regionserver.slowlog.buffer.enabled` is true) and", "originalCommit": "94bd3586a0503fa8282a532b41d5279030845896", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0ODY4Mg==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429048682", "bodyText": "Generally i feel that the querying will be like for given time range give me all the slow logs? Then they can drill down. So if they want to query with TS they can specify the Time range correct? Probably you can provide a sample input and output for that too.", "author": "ramkrish86", "createdAt": "2020-05-22T05:25:20Z", "path": "src/main/asciidoc/_chapters/hbase-default.adoc", "diffHunk": "@@ -2246,6 +2246,23 @@ The percent of region server RPC threads failed to abort RS.\n `false`\n \n \n+[[hbase.regionserver.slowlog.systable.enabled]]\n+*`hbase.regionserver.slowlog.systable.enabled`*::\n++\n+.Description\n+\n+      Should be enabled only if hbase.regionserver.slowlog.buffer.enabled is enabled.\n+      If enabled (true), all slow/large RPC logs would be persisted to system table\n+      hbase:slowlog (in addition to in-memory ring buffer at each RegionServer).\n+      The records are stored in increasing order of time.\n+      Operators can scan the table with various combination of ColumnValueFilter.", "originalCommit": "94bd3586a0503fa8282a532b41d5279030845896", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NTU1Mg==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429175552", "bodyText": "I dont think we need to explain any impl detail here like who create the table. We can say a cron job running in every RS will persist the slow/large logs into this table. Also explain what is the default cron period and how to config that. Also are we not saying about the buffer size configs?", "author": "anoopsjohn", "createdAt": "2020-05-22T10:44:57Z", "path": "src/main/asciidoc/_chapters/slow_log_responses_from_systable.adoc", "diffHunk": "@@ -0,0 +1,116 @@\n+////\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+////\n+\n+[[slow_log_responses_from_systable]]\n+==== Get Slow/Large Response Logs from System table hbase:slowlog\n+\n+The above section provides details about Admin APIs:\n+\n+* get_slowlog_responses\n+* get_largelog_responses\n+* clear_slowlog_responses\n+\n+All of the above APIs access online in-memory ring buffers from\n+individual RegionServers and accumulate logs from ring buffers to display\n+to end user. However, they can only be used for an ongoing slow/large RPC calls\n+and user can retrieve ongoing issues with RPC logs. After RegionServer is\n+restarted, all the objects held in memory of that RegionServer will be cleaned up\n+and previous problematic logs are lost. What if we want to persist all these logs?\n+What if we want to store them in such a manner that operator can get all historical\n+records with some filters? e.g get me all large/slow RPC logs that are triggered by\n+user1 and are related to region:\n+cluster_test,cccccccc,1589635796466.aa45e1571d533f5ed0bb31cdccaaf9cf.\n+\n+If we have a system table that stores such logs in increasing (not so strictly though)\n+order of time, it can definitely help operators debug some historical events\n+(scan, get, put, compaction, flush etc) with detailed inputs.\n+\n+Config which enabled system table to be created and store all log events is\n+`hbase.regionserver.slowlog.systable.enabled`.\n+\n+The default value for this config is `false`. If provided `true`\n+(Note: `hbase.regionserver.slowlog.buffer.enabled` should also be `true`),\n+HMaster will create system table `hbase:slowlog` and each RegionServer, upon", "originalCommit": "edbc0bf2771b9e58ceddd955afddbb849dd3b791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyODA2OQ==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429228069", "bodyText": "Done. Provided sufficient info as per your suggestion.", "author": "virajjasani", "createdAt": "2020-05-22T12:52:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NTU1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NjEwMw==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429176103", "bodyText": "BTW these logs in ring buffer will have any timestamp ? (When the slow/large RPC happened?)", "author": "anoopsjohn", "createdAt": "2020-05-22T10:46:14Z", "path": "src/main/asciidoc/_chapters/slow_log_responses_from_systable.adoc", "diffHunk": "@@ -0,0 +1,116 @@\n+////\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+////\n+\n+[[slow_log_responses_from_systable]]\n+==== Get Slow/Large Response Logs from System table hbase:slowlog\n+\n+The above section provides details about Admin APIs:\n+\n+* get_slowlog_responses\n+* get_largelog_responses\n+* clear_slowlog_responses\n+\n+All of the above APIs access online in-memory ring buffers from\n+individual RegionServers and accumulate logs from ring buffers to display\n+to end user. However, they can only be used for an ongoing slow/large RPC calls\n+and user can retrieve ongoing issues with RPC logs. After RegionServer is", "originalCommit": "edbc0bf2771b9e58ceddd955afddbb849dd3b791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MjU3Ng==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429192576", "bodyText": "Yes, they have timestamp of when they occured, but that is related to RPC call itself. One sample:\nhbase(main):004:0* get_largelog_responses '*'\n2020-05-07 19:05:10,882 WARN  [main] util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\nRetrieved LargeLog Responses from RegionServers\n{\n  \"startTime\": 1588858410089,\n  \"processingTime\": 1,\n  \"queueTime\": 0,\n  \"responseSize\": 2,\n  \"clientAddress\": \"172.20.10.2:57523\",\n  \"serverClass\": \"HRegionServer\",\n  \"methodName\": \"Mutate\",\n  \"callDetails\": \"Mutate(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$MutateRequest)\",\n  \"param\": \"region\\u003d hbase:meta,,1\",\n  \"userName\": \"vjasani\"\n}\n{\n  \"startTime\": 1588858409968,\n  \"processingTime\": 1,\n  \"queueTime\": 0,\n  \"responseSize\": 4,\n  \"clientAddress\": \"172.20.10.2:57523\",\n  \"serverClass\": \"HRegionServer\",\n  \"methodName\": \"Get\",\n  \"callDetails\": \"Get(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$GetRequest)\",\n  \"param\": \"region\\u003d hbase:meta,,1, row\\u003d hbase:slowlog\",\n  \"userName\": \"vjasani\"\n}\n{\n  \"startTime\": 1588858409945,\n  \"processingTime\": 1,\n  \"queueTime\": 0,\n  \"responseSize\": 4,\n  \"clientAddress\": \"172.20.10.2:57523\",\n  \"serverClass\": \"HRegionServer\",\n  \"methodName\": \"Get\",\n  \"callDetails\": \"Get(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$GetRequest)\",\n  \"param\": \"region\\u003d hbase:meta,,1, row\\u003d hbase:slowlog\",\n  \"userName\": \"vjasani\"\n}", "author": "virajjasani", "createdAt": "2020-05-22T11:27:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NjEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NzAwNQ==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429177005", "bodyText": "what to say \"Time range based queries will be also be very useful\" instead?", "author": "anoopsjohn", "createdAt": "2020-05-22T10:48:33Z", "path": "src/main/asciidoc/_chapters/slow_log_responses_from_systable.adoc", "diffHunk": "@@ -0,0 +1,116 @@\n+////\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+////\n+\n+[[slow_log_responses_from_systable]]\n+==== Get Slow/Large Response Logs from System table hbase:slowlog\n+\n+The above section provides details about Admin APIs:\n+\n+* get_slowlog_responses\n+* get_largelog_responses\n+* clear_slowlog_responses\n+\n+All of the above APIs access online in-memory ring buffers from\n+individual RegionServers and accumulate logs from ring buffers to display\n+to end user. However, they can only be used for an ongoing slow/large RPC calls\n+and user can retrieve ongoing issues with RPC logs. After RegionServer is\n+restarted, all the objects held in memory of that RegionServer will be cleaned up\n+and previous problematic logs are lost. What if we want to persist all these logs?\n+What if we want to store them in such a manner that operator can get all historical\n+records with some filters? e.g get me all large/slow RPC logs that are triggered by\n+user1 and are related to region:\n+cluster_test,cccccccc,1589635796466.aa45e1571d533f5ed0bb31cdccaaf9cf.\n+\n+If we have a system table that stores such logs in increasing (not so strictly though)\n+order of time, it can definitely help operators debug some historical events\n+(scan, get, put, compaction, flush etc) with detailed inputs.\n+\n+Config which enabled system table to be created and store all log events is\n+`hbase.regionserver.slowlog.systable.enabled`.\n+\n+The default value for this config is `false`. If provided `true`\n+(Note: `hbase.regionserver.slowlog.buffer.enabled` should also be `true`),\n+HMaster will create system table `hbase:slowlog` and each RegionServer, upon\n+determining any slow/large RPC logs at RpcServer level, will put them in in-memory\n+ring buffer and system table `hbase:slowlog`.\n+\n+hbase:slowlog has single ColumnFamily: `info`\n+`info` contains multiple qualifiers which are the same attributes present as\n+part of `get_slowlog_responses` API response.\n+\n+* info:call_details\n+* info:client_address\n+* info:method_name\n+* info:param\n+* info:processing_time\n+* info:queue_time\n+* info:region_name\n+* info:response_size\n+* info:server_class\n+* info:start_time\n+* info:type\n+* info:username\n+\n+And example of 2 rows from hbase:slowlog scan result:\n+[source]\n+----\n+\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:call_details, timestamp=2020-05-16T14:58:14.211Z, value=Scan(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ScanRequest)\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:client_address, timestamp=2020-05-16T14:58:14.211Z, value=172.20.10.2:57347\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:method_name, timestamp=2020-05-16T14:58:14.211Z, value=Scan\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:param, timestamp=2020-05-16T14:58:14.211Z, value=region { type: REGION_NAME value: \"hbase:meta,,1\" } scan { column { family: \"info\" } attribute { name: \"_isolationle\n+                                                             vel_\" value: \"\\x5C000\" } start_row: \"cluster_test,33333333,99999999999999\" stop_row: \"cluster_test,,\" time_range { from: 0 to: 9223372036854775807 } max_versions: 1 cache_blocks\n+                                                             : true max_result_size: 2097152 reversed: true caching: 10 include_stop_row: true readType: PREAD } number_of_rows: 10 close_scanner: false client_handles_partials: true client_\n+                                                             handles_heartbeats: true track_scan_metrics: false\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:processing_time, timestamp=2020-05-16T14:58:14.211Z, value=18\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:queue_time, timestamp=2020-05-16T14:58:14.211Z, value=0\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:region_name, timestamp=2020-05-16T14:58:14.211Z, value=hbase:meta,,1\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:response_size, timestamp=2020-05-16T14:58:14.211Z, value=1575\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:server_class, timestamp=2020-05-16T14:58:14.211Z, value=HRegionServer\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:start_time, timestamp=2020-05-16T14:58:14.211Z, value=1589640743732\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:type, timestamp=2020-05-16T14:58:14.211Z, value=ALL\n+ \\x024\\xC1\\x03\\xE9\\x04\\xF5@                                  column=info:username, timestamp=2020-05-16T14:58:14.211Z, value=user2\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:call_details, timestamp=2020-05-16T14:59:58.764Z, value=Scan(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$ScanRequest)\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:client_address, timestamp=2020-05-16T14:59:58.764Z, value=172.20.10.2:57348\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:method_name, timestamp=2020-05-16T14:59:58.764Z, value=Scan\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:param, timestamp=2020-05-16T14:59:58.764Z, value=region { type: REGION_NAME value: \"cluster_test,cccccccc,1589635796466.aa45e1571d533f5ed0bb31cdccaaf9cf.\" } scan { a\n+                                                             ttribute { name: \"_isolationlevel_\" value: \"\\x5C000\" } start_row: \"cccccccc\" time_range { from: 0 to: 9223372036854775807 } max_versions: 1 cache_blocks: true max_result_size: 2\n+                                                             097152 caching: 2147483647 include_stop_row: false } number_of_rows: 2147483647 close_scanner: false client_handles_partials: true client_handles_heartbeats: true track_scan_met\n+                                                             rics: false\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:processing_time, timestamp=2020-05-16T14:59:58.764Z, value=24\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:queue_time, timestamp=2020-05-16T14:59:58.764Z, value=0\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:region_name, timestamp=2020-05-16T14:59:58.764Z, value=cluster_test,cccccccc,1589635796466.aa45e1571d533f5ed0bb31cdccaaf9cf.\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:response_size, timestamp=2020-05-16T14:59:58.764Z, value=211227\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:server_class, timestamp=2020-05-16T14:59:58.764Z, value=HRegionServer\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:start_time, timestamp=2020-05-16T14:59:58.764Z, value=1589640743932\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:type, timestamp=2020-05-16T14:59:58.764Z, value=ALL\n+ \\x024\\xC1\\x06X\\x81\\xF6\\xEC                                  column=info:username, timestamp=2020-05-16T14:59:58.764Z, value=user1\n+----\n+\n+Operator can use ColumnValueFilter to filter records based on region_name, username,\n+client_address etc.\n+\n+Time range based queries would also be used quite frequently.", "originalCommit": "edbc0bf2771b9e58ceddd955afddbb849dd3b791", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NzM1Ng==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429177356", "bodyText": "Above are shell commands?", "author": "anoopsjohn", "createdAt": "2020-05-22T10:49:23Z", "path": "src/main/asciidoc/_chapters/slow_log_responses_from_systable.adoc", "diffHunk": "@@ -0,0 +1,116 @@\n+////\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+////\n+\n+[[slow_log_responses_from_systable]]\n+==== Get Slow/Large Response Logs from System table hbase:slowlog\n+\n+The above section provides details about Admin APIs:\n+\n+* get_slowlog_responses\n+* get_largelog_responses\n+* clear_slowlog_responses\n+\n+All of the above APIs access online in-memory ring buffers from", "originalCommit": "edbc0bf2771b9e58ceddd955afddbb849dd3b791", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MTA5MQ==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429191091", "bodyText": "Yes", "author": "virajjasani", "createdAt": "2020-05-22T11:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NzM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3Nzg4OQ==", "url": "https://github.com/apache/hbase/pull/1747#discussion_r429177889", "bodyText": "ongoing slow RPC?  Little bit confusing statement IMO.", "author": "anoopsjohn", "createdAt": "2020-05-22T10:50:38Z", "path": "src/main/asciidoc/_chapters/slow_log_responses_from_systable.adoc", "diffHunk": "@@ -0,0 +1,116 @@\n+////\n+/**\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+////\n+\n+[[slow_log_responses_from_systable]]\n+==== Get Slow/Large Response Logs from System table hbase:slowlog\n+\n+The above section provides details about Admin APIs:\n+\n+* get_slowlog_responses\n+* get_largelog_responses\n+* clear_slowlog_responses\n+\n+All of the above APIs access online in-memory ring buffers from\n+individual RegionServers and accumulate logs from ring buffers to display\n+to end user. However, they can only be used for an ongoing slow/large RPC calls", "originalCommit": "edbc0bf2771b9e58ceddd955afddbb849dd3b791", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "275358093b41b768ff5d3dfecd7f6afa7f792c5e", "url": "https://github.com/apache/hbase/commit/275358093b41b768ff5d3dfecd7f6afa7f792c5e", "message": "HBASE-24405 : Document hbase:slowlog related operations", "committedDate": "2020-05-22T11:48:39Z", "type": "forcePushed"}, {"oid": "275358093b41b768ff5d3dfecd7f6afa7f792c5e", "url": "https://github.com/apache/hbase/commit/275358093b41b768ff5d3dfecd7f6afa7f792c5e", "message": "HBASE-24405 : Document hbase:slowlog related operations", "committedDate": "2020-05-22T11:48:39Z", "type": "commit"}]}