{"pr_number": 1088, "pr_title": "HBASE-22853 Git/Jira Release Audit Tool", "pr_createdAt": "2020-01-24T18:59:18Z", "pr_url": "https://github.com/apache/hbase/pull/1088", "timeline": [{"oid": "2da4f0fd89ed29a7846069734ee25b5d7c9378d1", "url": "https://github.com/apache/hbase/commit/2da4f0fd89ed29a7846069734ee25b5d7c9378d1", "message": "HBASE-22853 Git/Jira Release Audit Tool\n\nThis is an application for performing an audit between the histories\non our git branches and the `fixVersion` field set on issues in\nJIRA. It does this by building a Sqlite database from the commits\nfound on each git branch, identifying Jira IDs and release tags, and\nthen requesting information about those issues from Jira. Once both\nsources have been collected, queries can be performed against the\ndatabase to look for discrepancies between the sources of truth (and,\npossibly, bugs in this script).", "committedDate": "2020-01-24T18:55:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxOTM4NQ==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r370819385", "bodyText": "Adding a brief section at the end of this README that explains the fallback-actions-path is used to identify how the parser should handle commits with known ambiguous messages would help with maintainability 6 months from now.", "author": "busbey", "createdAt": "2020-01-24T20:04:44Z", "path": "dev-support/git-jira-release-audit/README.md", "diffHunk": "@@ -0,0 +1,186 @@\n+<!---\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# Git / JIRA Release Audit\n+\n+This is an application for performing an audit between the histories on our git\n+branches and the `fixVersion` field set on issues in JIRA. It does this by\n+building a Sqlite database from the commits found on each git branch,\n+identifying Jira IDs and release tags, and then requesting information about\n+those issues from Jira. Once both sources have been collected, queries can be\n+performed against the database to look for discrepancies between the sources of\n+truth (and, possibly, bugs in this script).\n+\n+## Setup\n+\n+The system prerequisites are Python3 with VirtualEnv available and Sqlite. Also,\n+you'll need the content of this directory and a local checkout of git repository.\n+\n+Build a VirtualEnv with the script's dependencies with\n+\n+```shell script\n+$ python3 --version\n+Python 3.7.6\n+$ python3 -m venv ./venv\n+$ ./venv/bin/pip install -r ./requirements.txt\n+...\n+Successfully installed...\n+```\n+\n+## Usage\n+\n+The tool provides basic help docs.\n+\n+```shell script\n+$ ./venv/bin/python ./git_jira_release_audit.py --help\n+usage: git_jira_release_audit.py [-h] [--db-path DB_PATH]\n+                                 [--git-repo-path GIT_REPO_PATH]\n+                                 [--remote-name REMOTE_NAME]\n+                                 [--development-branch DEVELOPMENT_BRANCH]\n+                                 [--development-branch-fix-version DEVELOPMENT_BRANCH_FIX_VERSION]\n+                                 [--release-line-regexp RELEASE_LINE_REGEXP]\n+                                 [--fallback-actions-path FALLBACK_ACTIONS_PATH]\n+                                 [--jira-url JIRA_URL] --branch-1-fix-version\n+                                 BRANCH_1_FIX_VERSION --branch-2-fix-version\n+                                 BRANCH_2_FIX_VERSION\n+\n+optional arguments:\n+  -h, --help            show this help message and exit\n+  --db-path DB_PATH     Path to the database file, or leave unspecified for a\n+                        transient db.\n+  --git-repo-path GIT_REPO_PATH\n+                        Path to the git repo, or leave unspecified to infer\n+                        from the current file's path.\n+  --remote-name REMOTE_NAME\n+                        The name of the git remote to use when identifying\n+                        branches.\n+  --development-branch DEVELOPMENT_BRANCH\n+                        The name of the branch from which all release lines\n+                        originate.\n+  --development-branch-fix-version DEVELOPMENT_BRANCH_FIX_VERSION\n+                        The Jira fixVersion used to indicate an issue is\n+                        committed to the development branch.\n+  --release-line-regexp RELEASE_LINE_REGEXP\n+                        A regexp used to identify release lines.\n+  --fallback-actions-path FALLBACK_ACTIONS_PATH", "originalCommit": "2da4f0fd89ed29a7846069734ee25b5d7c9378d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM5OTA2NQ==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371399065", "bodyText": "I've added a comment to the top of that file.", "author": "ndimiduk", "createdAt": "2020-01-27T18:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxOTM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0NzczNA==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371347734", "bodyText": "Is this the \"recommended\" way of doing it? I've always done: virtualenv venv && source venv/bin/activate in the past.", "author": "joshelser", "createdAt": "2020-01-27T16:34:19Z", "path": "dev-support/git-jira-release-audit/README.md", "diffHunk": "@@ -0,0 +1,186 @@\n+<!---\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# Git / JIRA Release Audit\n+\n+This is an application for performing an audit between the histories on our git\n+branches and the `fixVersion` field set on issues in JIRA. It does this by\n+building a Sqlite database from the commits found on each git branch,\n+identifying Jira IDs and release tags, and then requesting information about\n+those issues from Jira. Once both sources have been collected, queries can be\n+performed against the database to look for discrepancies between the sources of\n+truth (and, possibly, bugs in this script).\n+\n+## Setup\n+\n+The system prerequisites are Python3 with VirtualEnv available and Sqlite. Also,\n+you'll need the content of this directory and a local checkout of git repository.\n+\n+Build a VirtualEnv with the script's dependencies with\n+\n+```shell script\n+$ python3 --version\n+Python 3.7.6\n+$ python3 -m venv ./venv", "originalCommit": "2da4f0fd89ed29a7846069734ee25b5d7c9378d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwMTU5Mg==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371401592", "bodyText": "Dunno what you mean by \"recommended\". This is python -- there are multiple ways to solve a problem. In this case, I wanted to be sure I was getting virtualenv from a python3 install, hence the -mvenv invocation. I also have no need to \"drop into\" the environment, so venv/bin/activate doesn't buy me anything.", "author": "ndimiduk", "createdAt": "2020-01-27T18:16:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0NzczNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwMzAyMQ==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371403021", "bodyText": "Oh, virtualenv used to be a completely separate thing and it's been rolled into python 3.3 under the venv module (https://virtualenv.pypa.io/en/latest/). I guess this approach eliminates getting some \"wrong\" virtualenv executable. Just curious, not an issue :)", "author": "joshelser", "createdAt": "2020-01-27T18:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0NzczNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1MjUyMQ==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371352521", "bodyText": "I understand the words you have written, but I'm not sure what I would actually pass to this option. I see in the example below you didn't provide it, but I'm not sure when I would want/need to provide it.", "author": "joshelser", "createdAt": "2020-01-27T16:42:21Z", "path": "dev-support/git-jira-release-audit/README.md", "diffHunk": "@@ -0,0 +1,186 @@\n+<!---\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# Git / JIRA Release Audit\n+\n+This is an application for performing an audit between the histories on our git\n+branches and the `fixVersion` field set on issues in JIRA. It does this by\n+building a Sqlite database from the commits found on each git branch,\n+identifying Jira IDs and release tags, and then requesting information about\n+those issues from Jira. Once both sources have been collected, queries can be\n+performed against the database to look for discrepancies between the sources of\n+truth (and, possibly, bugs in this script).\n+\n+## Setup\n+\n+The system prerequisites are Python3 with VirtualEnv available and Sqlite. Also,\n+you'll need the content of this directory and a local checkout of git repository.\n+\n+Build a VirtualEnv with the script's dependencies with\n+\n+```shell script\n+$ python3 --version\n+Python 3.7.6\n+$ python3 -m venv ./venv\n+$ ./venv/bin/pip install -r ./requirements.txt\n+...\n+Successfully installed...\n+```\n+\n+## Usage\n+\n+The tool provides basic help docs.\n+\n+```shell script\n+$ ./venv/bin/python ./git_jira_release_audit.py --help\n+usage: git_jira_release_audit.py [-h] [--db-path DB_PATH]\n+                                 [--git-repo-path GIT_REPO_PATH]\n+                                 [--remote-name REMOTE_NAME]\n+                                 [--development-branch DEVELOPMENT_BRANCH]\n+                                 [--development-branch-fix-version DEVELOPMENT_BRANCH_FIX_VERSION]\n+                                 [--release-line-regexp RELEASE_LINE_REGEXP]\n+                                 [--fallback-actions-path FALLBACK_ACTIONS_PATH]\n+                                 [--jira-url JIRA_URL] --branch-1-fix-version\n+                                 BRANCH_1_FIX_VERSION --branch-2-fix-version\n+                                 BRANCH_2_FIX_VERSION\n+\n+optional arguments:\n+  -h, --help            show this help message and exit\n+  --db-path DB_PATH     Path to the database file, or leave unspecified for a\n+                        transient db.\n+  --git-repo-path GIT_REPO_PATH\n+                        Path to the git repo, or leave unspecified to infer\n+                        from the current file's path.\n+  --remote-name REMOTE_NAME\n+                        The name of the git remote to use when identifying\n+                        branches.\n+  --development-branch DEVELOPMENT_BRANCH", "originalCommit": "2da4f0fd89ed29a7846069734ee25b5d7c9378d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwMjcwNA==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371402704", "bodyText": "So for HBase and 95% of git-tracked projects, this is master. I believe Hadoop calls the trunk, as per its Subversion legacy. It's the branch where development takes place; I'm not sure what else to call this.", "author": "ndimiduk", "createdAt": "2020-01-27T18:19:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1MjUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwMzU0Mw==", "url": "https://github.com/apache/hbase/pull/1088#discussion_r371403543", "bodyText": "Gotcha. Wasn't sure if there was a case where we'd be providing a value for hbase. I understand the hadoop use-case. Thanks!", "author": "joshelser", "createdAt": "2020-01-27T18:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1MjUyMQ=="}], "type": "inlineReview"}, {"oid": "18f432869466767b77d8f6fcc6c1342e4e53f886", "url": "https://github.com/apache/hbase/commit/18f432869466767b77d8f6fcc6c1342e4e53f886", "message": "PR Feedback", "committedDate": "2020-01-27T18:10:42Z", "type": "commit"}]}