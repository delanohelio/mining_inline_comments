{"pr_number": 1945, "pr_title": "HBASE-24603: Make Zookeeper sync() call synchronous", "pr_createdAt": "2020-06-21T23:32:35Z", "pr_url": "https://github.com/apache/hbase/pull/1945", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443368727", "bodyText": "IMHO error is fine but better to keep it warn. We anyways have warn for InterruptedException also.", "author": "virajjasani", "createdAt": "2020-06-22T07:35:46Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);\n+    try {\n+      if (!latch.await(zkSyncTimeout, TimeUnit.MILLISECONDS)) {\n+        LOG.error(\"sync() operation to ZK timed out. Configured timeout: {}ms. This usually points \"", "originalCommit": "9bde262b066b94877f53066c01b024f14ded5107", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxODE2Mg==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443718162", "bodyText": "This should be WARN.", "author": "apurtell", "createdAt": "2020-06-22T17:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMTg1Mw==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443731853", "bodyText": "Any particular reason this has to be WARN? This can potentially be a correctness issue at this point and hence I chose the higher log level.", "author": "bharathv", "createdAt": "2020-06-22T17:56:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxNDY1NA==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r444414654", "bodyText": "WARN implies to me as an operator that something bad happened that is noteworthy but not an emergency. ERROR implies a serious problem that probably should cause someone to be paged.\nsync is going to occasionally time out. We should be handling such without correctness problems. ERROR logging doesn't substitute for handling the timeout properly. So, assuming we are handling timeouts correctly, WARN level logging is most appropriate.", "author": "apurtell", "createdAt": "2020-06-23T18:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI3NTk1Ng==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445275956", "bodyText": "Fair point. Changed.", "author": "bharathv", "createdAt": "2020-06-25T02:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2OTkxNA==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443369914", "bodyText": "RecoverableZooKeeper is IA.Private. Can we remove last argument Object ctx as part of this PR? Anyways we pass null context to actual API.", "author": "virajjasani", "createdAt": "2020-06-22T07:38:12Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);", "originalCommit": "9bde262b066b94877f53066c01b024f14ded5107", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczNjM3Ng==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443736376", "bodyText": "ok will do.", "author": "bharathv", "createdAt": "2020-06-22T18:04:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2OTkxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3NTc5NA==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443775794", "bodyText": "Why can't we instead pass ctx as the last argument instead of NULL during the actual API call ? Just in case we want to use this field somewhere else in future to get the context in callback.", "author": "sguggilam", "createdAt": "2020-06-22T19:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2OTkxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI3NjE3Mg==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445276172", "bodyText": "That sounds better Sandeep. Fixed it. (I don't have a strong preference either way)", "author": "bharathv", "createdAt": "2020-06-25T02:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2OTkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNzk1Ng==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443717956", "bodyText": "This has to be backported to branch-1, which requires Java 7 compatible code, and there's no real need for a lambda here. We have guaranteed code divergence between the branches in exchange for perhaps some improved readability. Is it worth it?", "author": "apurtell", "createdAt": "2020-06-22T17:30:33Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);", "originalCommit": "9bde262b066b94877f53066c01b024f14ded5107", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczNzg3NQ==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443737875", "bodyText": "I kind of like the fact that the code is a bit concise (since there is no real logic in this lambda in this case) but I get the concern about readability. I don't have a strong preference though, I can switch it to an inline class.", "author": "bharathv", "createdAt": "2020-06-22T18:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNzk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxNTMwMw==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r444415303", "bodyText": "Every Java 8 ism makes a backport to branch-1 that more painful. If you don't need to do it, please don't. Unless the change is not intended for branch-1 then who cares.", "author": "apurtell", "createdAt": "2020-06-23T18:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNzk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI3NjQyMQ==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445276421", "bodyText": "Ya, this is meant to be back ported to branch-1, but I'll take care of it with a small rewrite, hope thats okay.", "author": "bharathv", "createdAt": "2020-06-25T02:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNzk1Ng=="}], "type": "inlineReview"}, {"oid": "23e9e963c0c708bf7b36f2621199dee47f2b14ba", "url": "https://github.com/apache/hbase/commit/23e9e963c0c708bf7b36f2621199dee47f2b14ba", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread.", "committedDate": "2020-06-25T02:43:24Z", "type": "forcePushed"}, {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "url": "https://github.com/apache/hbase/commit/75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread.", "committedDate": "2020-06-25T16:20:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY4OTkzMQ==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445689931", "bodyText": "Yeah, this looks better.", "author": "virajjasani", "createdAt": "2020-06-25T16:34:56Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -530,10 +539,26 @@ public void process(WatchedEvent event) {\n         break;\n       }\n       default:\n-        throw new IllegalStateException(\"Received event is not valid: \" + event.getState());\n+        LOG.error(\"Invalid event of type {} received for path {}. Ignoring.\",", "originalCommit": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5NTMzNA==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445695334", "bodyText": "keep it private?", "author": "virajjasani", "createdAt": "2020-06-25T16:43:56Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -479,29 +502,15 @@ public ZNodePaths getZNodePaths() {\n     return znodePaths;\n   }\n \n-  /**\n-   * Method called from ZooKeeper for events and connection status.\n-   * <p>\n-   * Valid events are passed along to listeners.  Connection status changes\n-   * are dealt with locally.\n-   */\n-  @Override\n-  public void process(WatchedEvent event) {\n-    LOG.debug(prefix(\"Received ZooKeeper Event, \" +\n-        \"type=\" + event.getType() + \", \" +\n-        \"state=\" + event.getState() + \", \" +\n-        \"path=\" + event.getPath()));\n-\n+  void processEvent(WatchedEvent event) {", "originalCommit": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyMzAwMw==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445723003", "bodyText": "Done.", "author": "bharathv", "createdAt": "2020-06-25T17:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5NTMzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5ODM3OQ==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445698379", "bodyText": "Why not use new ThreadFactoryBuilder() and set name format?", "author": "virajjasani", "createdAt": "2020-06-25T16:48:43Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -79,8 +86,22 @@\n   // listeners to be notified\n   private final List<ZKListener> listeners = new CopyOnWriteArrayList<>();\n \n+  // Single threaded executor pool that processes event notifications from Zookeeper. Events are\n+  // processed in the order in which they arrive (pool backed by an unbounded fifo queue). We do\n+  // this to decouple the event processing from Zookeeper's ClientCnxn's EventThread context.\n+  // EventThread internally runs a single while loop to serially process all the events. When events\n+  // are processed by the listeners in the same thread, that blocks the EventThread from processing\n+  // subsequent events. Processing events in a separate thread frees up the event thread to continue\n+  // and further prevents deadlocks if the process method itself makes other zookeeper calls.\n+  // It is ok to do it in a single thread because the Zookeeper ClientCnxn already serializes the\n+  // requests using a single while loop and hence there is no performance degradation.\n+  private final ExecutorService zkEventProcessor =\n+      Executors.newSingleThreadExecutor(Threads.getNamedThreadFactory(\"zk-event-processor\"));", "originalCommit": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcxNTUyMg==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445715522", "bodyText": "And also we can keep Threads.getNamedThreadFactory() private(unmodified) with this change", "author": "virajjasani", "createdAt": "2020-06-25T17:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5ODM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyNDM2Ng==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445724366", "bodyText": "The reason is ThreadFactoryBuilder is from a third party library (guava). Usually I prefer to reuse the code we already have rather than pulling it from elsewhere. Also, making that util public doesn't matter much I guess, its a static utility anyway.", "author": "bharathv", "createdAt": "2020-06-25T17:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5ODM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNDUwNQ==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445734505", "bodyText": "We should definitely avoid dependencies on Guava. Hadoop, HBase, and Phoenix do not stay in sync (Hadoop 3 is up on 21 and that will be painful for the rest!) and Google regularly breaks compatibility among Guava major versions.", "author": "apurtell", "createdAt": "2020-06-25T17:51:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5ODM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0Mjc5NA==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445742794", "bodyText": "Okk that makes sense", "author": "virajjasani", "createdAt": "2020-06-25T18:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5ODM3OQ=="}], "type": "inlineReview"}, {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540", "url": "https://github.com/apache/hbase/commit/93f268d3c405715a1513154dc0a3da0bd4463540", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread.", "committedDate": "2020-06-25T17:38:10Z", "type": "commit"}, {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540", "url": "https://github.com/apache/hbase/commit/93f268d3c405715a1513154dc0a3da0bd4463540", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread.", "committedDate": "2020-06-25T17:38:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNTQ0Mg==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445735442", "bodyText": "I see, this was at the root of the test failures.", "author": "apurtell", "createdAt": "2020-06-25T17:52:57Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -79,8 +86,22 @@\n   // listeners to be notified\n   private final List<ZKListener> listeners = new CopyOnWriteArrayList<>();\n \n+  // Single threaded executor pool that processes event notifications from Zookeeper. Events are\n+  // processed in the order in which they arrive (pool backed by an unbounded fifo queue). We do\n+  // this to decouple the event processing from Zookeeper's ClientCnxn's EventThread context.\n+  // EventThread internally runs a single while loop to serially process all the events. When events\n+  // are processed by the listeners in the same thread, that blocks the EventThread from processing\n+  // subsequent events. Processing events in a separate thread frees up the event thread to continue", "originalCommit": "93f268d3c405715a1513154dc0a3da0bd4463540", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNjEyMg==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445736122", "bodyText": "Do we need the lambda here? branch-1....", "author": "apurtell", "createdAt": "2020-06-25T17:54:03Z", "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -530,10 +539,26 @@ public void process(WatchedEvent event) {\n         break;\n       }\n       default:\n-        throw new IllegalStateException(\"Received event is not valid: \" + event.getState());\n+        LOG.error(\"Invalid event of type {} received for path {}. Ignoring.\",\n+            event.getState(), event.getPath());\n     }\n   }\n \n+  /**\n+   * Method called from ZooKeeper for events and connection status.\n+   * <p>\n+   * Valid events are passed along to listeners.  Connection status changes\n+   * are dealt with locally.\n+   */\n+  @Override\n+  public void process(WatchedEvent event) {\n+    LOG.debug(prefix(\"Received ZooKeeper Event, \" +\n+        \"type=\" + event.getType() + \", \" +\n+        \"state=\" + event.getState() + \", \" +\n+        \"path=\" + event.getPath()));\n+    zkEventProcessor.submit(() -> processEvent(event));", "originalCommit": "93f268d3c405715a1513154dc0a3da0bd4463540", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNjU1Nw==", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445736557", "bodyText": "Never mind, as long as it's understood this is a minor pain for backporting.", "author": "apurtell", "createdAt": "2020-06-25T17:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNjEyMg=="}], "type": "inlineReview"}]}