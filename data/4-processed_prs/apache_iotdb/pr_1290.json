{"pr_number": 1290, "pr_title": "[IOTDB-718]Fix wrong time precision of NOW()", "pr_createdAt": "2020-05-29T13:35:56Z", "pr_url": "https://github.com/apache/iotdb/pull/1290", "timeline": [{"oid": "3afd12f4aaab21527ca12c96b35a9d91d39f40c1", "url": "https://github.com/apache/iotdb/commit/3afd12f4aaab21527ca12c96b35a9d91d39f40c1", "message": "Fix wrong time precision of NOW()", "committedDate": "2020-05-29T13:34:56Z", "type": "commit"}, {"oid": "c028c0379eac6c3017a1e1b191ceb04d3db58a6f", "url": "https://github.com/apache/iotdb/commit/c028c0379eac6c3017a1e1b191ceb04d3db58a6f", "message": "add test cases", "committedDate": "2020-05-29T14:02:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432801939", "bodyText": "I'm just a little bit curious why don't you use System.nanoTime() here.", "author": "HTHou", "createdAt": "2020-05-30T02:26:32Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -1475,7 +1475,15 @@ long parseTimeFormat(String timestampStr) throws SQLParserException {\n       throw new SQLParserException(\"input timestamp cannot be empty\");\n     }\n     if (timestampStr.equalsIgnoreCase(SQLConstant.NOW_FUNC)) {\n-      return System.currentTimeMillis();\n+      String timePrecision = IoTDBDescriptor.getInstance().getConfig().getTimestampPrecision();\n+      switch (timePrecision) {\n+        case \"ns\":\n+          return System.currentTimeMillis() * 1000_000L;", "originalCommit": "c028c0379eac6c3017a1e1b191ceb04d3db58a6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxNzkxMQ==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432817911", "bodyText": "When users use now() and set the precision as ns or ms, they want to generate dense data. if you you System.currentTimeMillis()*1000 or 1000_000, then many timstamps will repeat...", "author": "jixuan1989", "createdAt": "2020-05-30T07:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwODYyMA==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432908620", "bodyText": "System.nanoTime is not the current time in nano second, it is usually used for timing:\nlong start = System.nanoTime();\nlong elapse = System.nanoTime() - start;\nAnd, there is no System. microsecond()...", "author": "qiaojialin", "createdAt": "2020-05-31T04:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzUwMw==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432927503", "bodyText": "I agree with @qiaojialin and @jixuan1989 both.  System.nanoTime can't get the current time correctly, while the precision of *1000 or *1000_100 is unchanged actually. We need to rethink about the implementation way.", "author": "Alima777", "createdAt": "2020-05-31T09:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzNDkwOA==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432934908", "bodyText": "Use Instant to generate nano seconds instead.", "author": "wshao08", "createdAt": "2020-05-31T11:00:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzNTYzNA==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432935634", "bodyText": "I think Instant.now() is a good solution.\nAnother way is just using the last 6 digits of System.nanoTime(), as in a JVM instance (which means if you do not restart the JVM), System.nanoTime() is keeping increasing.", "author": "jixuan1989", "createdAt": "2020-05-31T11:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1Mzc2Ng==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432953766", "bodyText": "Instant.getNano() returns the nanoseconds, but actully it's still millisecond resolution. I'm not sure it's useful here.", "author": "Alima777", "createdAt": "2020-05-31T14:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1NDcwOA==", "url": "https://github.com/apache/iotdb/pull/1290#discussion_r432954708", "bodyText": "I think what we need is to keep the nano time as monotonic increasing.", "author": "jixuan1989", "createdAt": "2020-05-31T14:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMTkzOQ=="}], "type": "inlineReview"}, {"oid": "79ddb8f404877d685b47c8c58bafd8e0359b416a", "url": "https://github.com/apache/iotdb/commit/79ddb8f404877d685b47c8c58bafd8e0359b416a", "message": "fix test case", "committedDate": "2020-05-31T10:20:15Z", "type": "commit"}, {"oid": "c3ae85187a7c6458ba6ba26a57bc77ca00c2493f", "url": "https://github.com/apache/iotdb/commit/c3ae85187a7c6458ba6ba26a57bc77ca00c2493f", "message": "use Instant to generate nanoseconds", "committedDate": "2020-05-31T10:58:47Z", "type": "commit"}, {"oid": "79f355cb87881f43947d29dfaa9d488da9691e9e", "url": "https://github.com/apache/iotdb/commit/79f355cb87881f43947d29dfaa9d488da9691e9e", "message": "Use System.nanoTime() to get precise nanoseconds", "committedDate": "2020-06-01T03:27:14Z", "type": "commit"}, {"oid": "185267b97b869dcca306259ecf6fc2d9ba36a045", "url": "https://github.com/apache/iotdb/commit/185267b97b869dcca306259ecf6fc2d9ba36a045", "message": "Fix us calculation bug", "committedDate": "2020-06-01T03:46:39Z", "type": "commit"}]}