{"pr_number": 1100, "pr_title": "[IOTDB-605] Add more levels of index in TsFileMetadata", "pr_createdAt": "2020-04-25T13:41:31Z", "pr_url": "https://github.com/apache/iotdb/pull/1100", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDA2Ng==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415194066", "bodyText": "is not empty?", "author": "qiaojialin", "createdAt": "2020-04-26T02:29:49Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -62,9 +62,9 @@ private TsFileMetaDataCache() {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n         if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n+            && value.getDeviceMetadataIndex().isEmpty()) {", "originalCommit": "b783d4b731735cf092910911a4e2c030eaaa71bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDU1Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415194557", "bodyText": "Sorry for the typo", "author": "samperson1997", "createdAt": "2020-04-26T02:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDA2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMTY1Mw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415231653", "bodyText": "I just feel it should be better if you move this class to org.apache.iotdb.tsfile.file.metadata, because it will be serialized to the end of TsFile.", "author": "HTHou", "createdAt": "2020-04-26T06:34:58Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {\n+\n+  private String name;\n+  private long offset;\n+  private ChildMetadataIndexType childMetadataIndexType;\n+\n+  public MetadataIndex() {\n+  }", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0Mjk2OA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415342968", "bodyText": "Thanks, that's a good idea.", "author": "samperson1997", "createdAt": "2020-04-26T16:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NjEwNw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415196107", "bodyText": "In this case, we'd better provide an API that read all TimeseriesMetadata at a time to reduce IO.", "author": "qiaojialin", "createdAt": "2020-04-26T02:43:48Z", "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -72,7 +67,8 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n \n   public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    List<String> deviceList = reader.getDevicesByMetadata(metaData.getDeviceMetadataIndex());\n+    for (String device : deviceList) {", "originalCommit": "b783d4b731735cf092910911a4e2c030eaaa71bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMDc2NA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415200764", "bodyText": "maxDegreeOfIndexNode or so", "author": "qiaojialin", "createdAt": "2020-04-26T03:14:59Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxNumberOfIndexItemsInNode = 5;\r", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0MzE5OA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343198", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-26T16:06:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMDc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjI1OA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202258", "bodyText": "replace these with metadataIndex.serializeTo", "author": "qiaojialin", "createdAt": "2020-04-26T03:24:45Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -123,10 +124,11 @@ public int serializeTo(OutputStream outputStream) throws IOException {\n     // deviceMetadataIndex\n     if (deviceMetadataIndex != null) {\n       byteLen += ReadWriteIOUtils.write(deviceMetadataIndex.size(), outputStream);\n-      for (Map.Entry<String, Pair<Long, Integer>> entry : deviceMetadataIndex.entrySet()) {\n-        byteLen += ReadWriteIOUtils.write(entry.getKey(), outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().left, outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().right, outputStream);\n+      for (MetadataIndex metadataIndex : deviceMetadataIndex) {\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getName(), outputStream);\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getOffset(), outputStream);\n+        byteLen += ReadWriteIOUtils\n+            .write(metadataIndex.getChildMetadataIndexType().serialize(), outputStream);", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0MzM4Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343387", "bodyText": "Replaced", "author": "samperson1997", "createdAt": "2020-04-26T16:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjI1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjU2MQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202561", "bodyText": "replace these with MetadataIndex.deserializeFrom", "author": "qiaojialin", "createdAt": "2020-04-26T03:26:32Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -68,16 +68,17 @@ public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n \n     // deviceMetadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndex> deviceMetaDataList = new ArrayList<>();\n     if (deviceNum > 0) {\n       for (int i = 0; i < deviceNum; i++) {\n-        String deviceId = ReadWriteIOUtils.readString(buffer);\n+        String name = ReadWriteIOUtils.readString(buffer);\n         long offset = ReadWriteIOUtils.readLong(buffer);\n-        int length = ReadWriteIOUtils.readInt(buffer);\n-        deviceMetaDataMap.put(deviceId, new Pair<>(offset, length));\n+        ChildMetadataIndexType type = ChildMetadataIndexType\n+            .deserialize(ReadWriteIOUtils.readShort(buffer));", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0Mzc3MA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343770", "bodyText": "Replaced", "author": "samperson1997", "createdAt": "2020-04-26T16:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjU2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY1Ng==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202656", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private List<MetadataIndex> deviceMetadataIndex;\n          \n          \n            \n              private List<MetadataIndex> metadataIndex;", "author": "qiaojialin", "createdAt": "2020-04-26T03:27:10Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -48,8 +48,8 @@\n   // bloom filter\n   private BloomFilter bloomFilter;\n \n-  // DeviceId -> offset and length of Map<String, TimeseriesMetadata>\n-  private Map<String, Pair<Long, Integer>> deviceMetadataIndex;\n+  // List of <name, offset, childMetadataIndexType>\n+  private List<MetadataIndex> deviceMetadataIndex;", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0MzkwNw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343907", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-26T16:10:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY5OA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202698", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public List<MetadataIndex> getDeviceMetadataIndex() {\n          \n          \n            \n              public List<MetadataIndex> getMetadataIndex() {", "author": "qiaojialin", "createdAt": "2020-04-26T03:27:20Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDA5Mg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344092", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-26T16:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjcxNA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202714", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {\n          \n          \n            \n              public void setMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "author": "qiaojialin", "createdAt": "2020-04-26T03:27:33Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {\n     return deviceMetadataIndex;\n   }\n \n-  public void setDeviceMetadataIndex(Map<String, Pair<Long, Integer>> deviceMetadataIndex) {\n+  public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDEzMg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344132", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-26T16:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjcxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjc5Ng==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202796", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public enum ChildMetadataIndexType {\n          \n          \n            \n            public enum =MetadataIndexNodeType {", "author": "qiaojialin", "createdAt": "2020-04-26T03:28:06Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDI3Ng==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344276", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-26T16:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzA1MA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415203050", "bodyText": "Internal_device, Leaf_device, Internal_Measurement, Leaf_Measurement\nGive examples of the four nodes in the javadoc of this class", "author": "qiaojialin", "createdAt": "2020-04-26T03:29:45Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {\n+  DEVICE_INDEX, DEVICE, MEASUREMENT_INDEX, MEASUREMENT;", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzE5Ng==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415203196", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class MetadataIndex {\n          \n          \n            \n            public class MetadataIndexNode {", "author": "qiaojialin", "createdAt": "2020-04-26T03:30:49Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDk1Mw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344953", "bodyText": "Renamed", "author": "samperson1997", "createdAt": "2020-04-26T16:15:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwNDM4Mw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415204383", "bodyText": "Actually this is a node of the tree index, so rename it to MetadataIndexNode or TsMetaIndexNode or TsIndexNode is better..", "author": "qiaojialin", "createdAt": "2020-04-26T03:38:20Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDk2OA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344968", "bodyText": "Renamed", "author": "samperson1997", "createdAt": "2020-04-26T16:15:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwNDM4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwOTUzOA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415209538", "bodyText": "This is a bug, deviceMetaData offset may index to a metadataIndex node, not the first metadata offset.\nUse TsFileMetadata.getMetaOffset()", "author": "qiaojialin", "createdAt": "2020-04-26T04:12:19Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/RestorableTsFileIOWriter.java", "diffHunk": "@@ -129,9 +129,9 @@ public static RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFil\n       if (reader.isComplete()) {\n         reader.loadMetadataSize();\n         TsFileMetadata metaData = reader.readFileMetadata();\n-        for (Pair<Long, Integer> deviceMetaData : metaData.getDeviceMetadataIndex().values()) {\n-          if (position > deviceMetaData.left) {\n-            position = deviceMetaData.left;\n+        for (MetadataIndex deviceMetaData : metaData.getDeviceMetadataIndex()) {\n+          if (position > deviceMetaData.getOffset()) {\n+            position = deviceMetaData.getOffset();", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIxNTkzOA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415215938", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);\n          \n          \n            \n                          serializeEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "author": "qiaojialin", "createdAt": "2020-04-26T04:55:36Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -304,22 +311,120 @@ public void endFile() throws IOException {\n       deviceTimeseriesMetadataMap.computeIfAbsent(device, k -> new ArrayList<>())\n           .add(timeseriesMetaData);\n     }\n-    // create DeviceMetaDataMap device -> Pair<TimeseriesMetaDataOffset, TimeseriesMetaDataLength> \n-    Map<String, Pair<Long, Integer>> deviceMetadataMap = new HashMap<>();\n+\n+    // create TsFileMetadata\n+    Map<String, Queue<MetadataIndex>> deviceMetadataIndexMap = new TreeMap<>();\n+    int maxNumOfIndexItems = config.getMaxNumberOfIndexItemsInNode();\n+\n+    // for timeseriesMetadata of each device\n     for (Map.Entry<String, List<TimeseriesMetadata>> entry : deviceTimeseriesMetadataMap\n         .entrySet()) {\n-      String device = entry.getKey();\n-      List<TimeseriesMetadata> timeseriesMetadataList = entry.getValue();\n-      long offsetOfFirstTimeseriesMetaDataInDevice = out.getPosition();\n-      int size = 0;\n-      for (TimeseriesMetadata timeseriesMetaData : timeseriesMetadataList) {\n-        size += timeseriesMetaData.serializeTo(out.wrapAsStream());\n+      if (entry.getValue().isEmpty()) {\n+        continue;\n+      }\n+      Queue<MetadataIndex> measurementMetadataIndexQueue = new ArrayDeque<>();\n+      TimeseriesMetadata timeseriesMetadata;\n+      for (int i = 0; i < entry.getValue().size(); i++) {\n+        timeseriesMetadata = entry.getValue().get(i);\n+        if (i % maxNumOfIndexItems == 0) {\n+          measurementMetadataIndexQueue\n+              .add(new MetadataIndex(timeseriesMetadata.getMeasurementId(), out.getPosition(),\n+                  ChildMetadataIndexType.MEASUREMENT));\n+        }\n+        timeseriesMetadata.serializeTo(out.wrapAsStream());\n+      }\n+      measurementMetadataIndexQueue\n+          .add(new MetadataIndex(\"\", out.getPosition(), ChildMetadataIndexType.MEASUREMENT));\n+\n+      int queueSize = measurementMetadataIndexQueue.size();\n+      MetadataIndex metadataIndex;\n+      while (queueSize > maxNumOfIndexItems) {\n+        for (int i = 0; i < queueSize; i++) {\n+          metadataIndex = measurementMetadataIndexQueue.poll();\n+          if (i % maxNumOfIndexItems == 0) {\n+            if (i != 0) {\n+              addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "originalCommit": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NTIxMA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415345210", "bodyText": "Renamed", "author": "samperson1997", "createdAt": "2020-04-26T16:16:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIxNTkzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416261543", "bodyText": "Now returns a MetadataIndexNode List, so please change the java doc too.\nAlso, since this method doesn't only flush ChunkMetadataList, I think we should give it a better name.", "author": "HTHou", "createdAt": "2020-04-28T01:29:36Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -274,9 +280,10 @@ public void endFile() throws IOException {\n \n   /**\n    * Flush ChunkMetadataList and TimeseriesMetaData\n+   *\n    * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushAllChunkMetadataList(", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NTQ0Mg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416285442", "bodyText": "Great point, I think we could call it flushTsFileMetadata, for flushing both ChunkMetadataList and TimeseriesMetaData. What do you think?", "author": "samperson1997", "createdAt": "2020-04-28T02:44:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MDE2Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416290167", "bodyText": "Actually, we have a class named TsFileMetadata and will be flushed to the disk after executing this method. How do you think? @qiaojialin", "author": "HTHou", "createdAt": "2020-04-28T02:59:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MTAyMw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417041023", "bodyText": "Renamed to flushMetadataIndex as he suggested \ud83d\ude02", "author": "samperson1997", "createdAt": "2020-04-29T03:00:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3OTEwMw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416279103", "bodyText": "Should we rename deviceMetaDataList to metadataIndexList?", "author": "HTHou", "createdAt": "2020-04-28T02:23:36Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -66,18 +64,15 @@\n   public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n     TsFileMetadata fileMetaData = new TsFileMetadata();\n \n-    // deviceMetadataIndex\n+    // metadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndexNode> deviceMetaDataList = new ArrayList<>();", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDczOA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416284738", "bodyText": "Thanks, I have checked all the deviceMetaDataList names  and renamed them.", "author": "samperson1997", "createdAt": "2020-04-28T02:42:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3OTEwMw=="}], "type": "inlineReview"}, {"oid": "ced199e87c9e337db4a6e55a5a7b34134ccf3102", "url": "https://github.com/apache/iotdb/commit/ced199e87c9e337db4a6e55a5a7b34134ccf3102", "message": "Merge master and fix some problems", "committedDate": "2020-04-28T06:32:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MDc5MA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416280790", "bodyText": "add a method getAllTimeseriesMetadata(), seek and IO all timeseriesMetadata once.", "author": "qiaojialin", "createdAt": "2020-04-28T02:29:05Z", "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -70,9 +64,9 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n     tsFileResource.setClosed(true);\n   }\n \n-  public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n+  public static void updateTsFileResource(TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    for (String device : reader.getAllDevices()) {", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MDg3Mg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417040872", "bodyText": "Added", "author": "samperson1997", "createdAt": "2020-04-29T02:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MDc5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTcwMQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416281701", "bodyText": "readAllTimeseriesMetadata", "author": "qiaojialin", "createdAt": "2020-04-28T02:31:56Z", "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/TsFileRecoverPerformer.java", "diffHunk": "@@ -157,11 +156,7 @@ private void recoverResourceFromFile() throws IOException {\n   private void recoverResourceFromReader() throws IOException {\n     try (TsFileSequenceReader reader =\n         new TsFileSequenceReader(resource.getFile().getAbsolutePath(), false)) {\n-      TsFileMetadata fileMetadata = reader.readFileMetadata();\n-      \n-      Map<String, Pair<Long, Integer>> deviceMetaDataMap = fileMetadata.getDeviceMetadataIndex();\n-      for (Map.Entry<String, Pair<Long, Integer>>  entry: deviceMetaDataMap.entrySet()) {\n-        String deviceId = entry.getKey();\n+      for (String deviceId : reader.getAllDevices()) {", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MDg0Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417040847", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-29T02:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTcwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTkzMw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416281933", "bodyText": "this should  be getAllDevices", "author": "qiaojialin", "createdAt": "2020-04-28T02:32:52Z", "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -62,7 +62,7 @@ object WideConverter extends Converter {\n   def getSeries(tsFileMetaData: TsFileMetadata, reader: TsFileSequenceReader): util.ArrayList[Series] = {\n     val series = new util.ArrayList[Series]()\n \n-    val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+    val devices = tsFileMetaData.getMetadataIndex", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzMzkxNQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417033915", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-29T02:29:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTkzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA2NA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282064", "bodyText": "getAllDevices", "author": "qiaojialin", "createdAt": "2020-04-28T02:33:22Z", "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -92,7 +92,7 @@ object WideConverter extends Converter {\n       val in = new HDFSInput(f.getPath, conf)\n       val reader = new TsFileSequenceReader(in)\n       val tsFileMetaData = reader.readFileMetadata\n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzMzk2Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417033967", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-29T02:29:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA4Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282087", "bodyText": "getAllDevices", "author": "qiaojialin", "createdAt": "2020-04-28T02:33:30Z", "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -133,7 +133,7 @@ object WideConverter extends Converter {\n     } else { // Remove nonexistent schema according to the current file's metadata.\n       // This may happen when queried TsFiles in the same folder do not have the same schema.\n \n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzNDAwNg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417034006", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-29T02:29:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjI3Mg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282272", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private int maxDegreeOfIndexNode = 5;\n          \n          \n            \n              private int maxDegreeOfIndexNode = 1024;\n          \n      \n    \n    \n  \n\nonly set 5 in test", "author": "qiaojialin", "createdAt": "2020-04-28T02:34:10Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxDegreeOfIndexNode = 5;\r", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyODQzOA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417028438", "bodyText": "Sure.", "author": "samperson1997", "createdAt": "2020-04-29T02:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjI3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjYwMA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282600", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private MetadataIndexNodeType metadataIndexNodeType;\n          \n          \n            \n              // type of the child node at offset\n          \n          \n            \n              private MetadataIndexNodeType childNodeType;", "author": "qiaojialin", "createdAt": "2020-04-28T02:35:18Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/MetadataIndexNode.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.MetadataIndexNodeType;\n+import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n+\n+public class MetadataIndexNode {\n+\n+  private String name;\n+  private long offset;\n+  private MetadataIndexNodeType metadataIndexNodeType;", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyODM1Ng==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417028356", "bodyText": "Renamed", "author": "samperson1997", "createdAt": "2020-04-29T02:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDAwOA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416284008", "bodyText": "use one byte is enough", "author": "qiaojialin", "createdAt": "2020-04-28T02:39:44Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/MetadataIndexNodeType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum MetadataIndexNodeType {\n+  INTERNAL_DEVICE, LEAF_DEVICE, INTERNAL_MEASUREMENT, LEAF_MEASUREMENT;\n+\n+  /**\n+   * deserialize short number.\n+   *\n+   * @param i short number\n+   * @return MetadataIndexNodeType\n+   */\n+  public static MetadataIndexNodeType deserialize(short i) {", "originalCommit": "ec9226479ab91b56f6dcd4753a83368c875bcff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzNDQ5Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417034497", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-29T02:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMwODkzNg==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416308936", "bodyText": "flushMetadataIndex", "author": "qiaojialin", "createdAt": "2020-04-28T03:59:00Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -273,10 +278,11 @@ public void endFile() throws IOException {\n   }\n \n   /**\n-   * Flush ChunkMetadataList and TimeseriesMetaData\n-   * @return DeviceMetaDataMap in TsFileMetaData\n+   * Flush TsFileMetadata, including ChunkMetadataList and TimeseriesMetaData\n+   *\n+   * @return MetadataIndexNode list in TsFileMetadata\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushTsFileMetadata(", "originalCommit": "9a7a77890fd83bc98bc21f5b523f3879c4c56b28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNjE4NQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417026185", "bodyText": "Renamed", "author": "samperson1997", "createdAt": "2020-04-29T01:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMwODkzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNzcxMQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417027711", "bodyText": "I think we should line up this column.", "author": "HTHou", "createdAt": "2020-04-29T02:03:49Z", "path": "docs/SystemDesign/1-TsFile/2-Format.md", "diffHunk": "@@ -236,7 +236,7 @@ ByteBuffer[] statistics = [\n |              Member Description              |            Member Type             |\n | :------------------------------------------: | :--------------------------------: |\n |              Number of devices               |                int                 |\n-| Pairs of device name and deviceMetadataIndex | String, TsDeviceMetadataIndex pair |\n+| Pairs of device name and metadataIndex | String, TsDeviceMetadataIndex pair |", "originalCommit": "36580164777c81dbd34668ce70a4ba23192a9989", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MTY5NA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417041694", "bodyText": "I intend to organize and modify the design docs in later PR ... For we've really changed a lot : )", "author": "samperson1997", "createdAt": "2020-04-29T03:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNzcxMQ=="}], "type": "inlineReview"}, {"oid": "69e1a7a6959c106674399fca9e4bc31a070d8d9e", "url": "https://github.com/apache/iotdb/commit/69e1a7a6959c106674399fca9e4bc31a070d8d9e", "message": "TsFileMetadataIndex pro", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "fa5c35b0f2f8e44e4cae69c1987d1a8ce9543c76", "url": "https://github.com/apache/iotdb/commit/fa5c35b0f2f8e44e4cae69c1987d1a8ce9543c76", "message": "Fix code sonar", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "901fe1e23f6980bfad903558f4eb57f31b842743", "url": "https://github.com/apache/iotdb/commit/901fe1e23f6980bfad903558f4eb57f31b842743", "message": "Fix some index building process", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "3ee7841d15d69151de489d2e9743b7f2f0c24739", "url": "https://github.com/apache/iotdb/commit/3ee7841d15d69151de489d2e9743b7f2f0c24739", "message": "Fix typo", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "4a2e24ec02893447941f254f7bb1283b97c2eb6c", "url": "https://github.com/apache/iotdb/commit/4a2e24ec02893447941f254f7bb1283b97c2eb6c", "message": "Update TsFileSequenceRead example", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "eecd03313f05f233dc8fd5de6cdfdc154ed35a23", "url": "https://github.com/apache/iotdb/commit/eecd03313f05f233dc8fd5de6cdfdc154ed35a23", "message": "Rename some classes, methods and variables", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "1183127c079fc565adacf3e9834ce250fd99a2c5", "url": "https://github.com/apache/iotdb/commit/1183127c079fc565adacf3e9834ce250fd99a2c5", "message": "Do more optimization", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "6bb340b715ac1f4bea4b0e1569363802f4fa867c", "url": "https://github.com/apache/iotdb/commit/6bb340b715ac1f4bea4b0e1569363802f4fa867c", "message": "Fix RestorableTsFileIOWriter", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "fe5b3b582d880dfdce5b1068e63b11a0df6f4db6", "url": "https://github.com/apache/iotdb/commit/fe5b3b582d880dfdce5b1068e63b11a0df6f4db6", "message": "Update the time of inserting empty item in queue", "committedDate": "2020-04-29T09:04:03Z", "type": "commit"}, {"oid": "316317e224c0d825cc5a8d298eeb08d28a8778d7", "url": "https://github.com/apache/iotdb/commit/316317e224c0d825cc5a8d298eeb08d28a8778d7", "message": "rename", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "e302fb1b0f323f7d27e939ce484a3fc3bdf9633b", "url": "https://github.com/apache/iotdb/commit/e302fb1b0f323f7d27e939ce484a3fc3bdf9633b", "message": "Fix review and update tsfile format-changelist.md", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "91dec73463bc42bff11d3bfb29eec3a0ac48edc7", "url": "https://github.com/apache/iotdb/commit/91dec73463bc42bff11d3bfb29eec3a0ac48edc7", "message": "Merge master and fix some problems", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "c511dce2c0ab6b6cdb5d211588269d783dc825cf", "url": "https://github.com/apache/iotdb/commit/c511dce2c0ab6b6cdb5d211588269d783dc825cf", "message": "Implement in a new way by adding MetadataIndexEntry", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "54aaf1f558685984bcc357de3800038c38f4629e", "url": "https://github.com/apache/iotdb/commit/54aaf1f558685984bcc357de3800038c38f4629e", "message": "Fix code smells", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "abc842dd39697f9574b0d78bd9330bc2d64f9ea3", "url": "https://github.com/apache/iotdb/commit/abc842dd39697f9574b0d78bd9330bc2d64f9ea3", "message": "Fix review", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "4e543c97d0451d9f98d9c30981edb7d0856d3e77", "url": "https://github.com/apache/iotdb/commit/4e543c97d0451d9f98d9c30981edb7d0856d3e77", "message": "Fix code smells and refactor codes", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "b1ca6f006b1e44acced477e0448753f9318b4af6", "url": "https://github.com/apache/iotdb/commit/b1ca6f006b1e44acced477e0448753f9318b4af6", "message": "fix bug if ts path does not exist in the tsfile", "committedDate": "2020-04-29T09:04:04Z", "type": "commit"}, {"oid": "b1ca6f006b1e44acced477e0448753f9318b4af6", "url": "https://github.com/apache/iotdb/commit/b1ca6f006b1e44acced477e0448753f9318b4af6", "message": "fix bug if ts path does not exist in the tsfile", "committedDate": "2020-04-29T09:04:04Z", "type": "forcePushed"}, {"oid": "6c31dc40ec89c3613ae60b11baf45d331bb11d23", "url": "https://github.com/apache/iotdb/commit/6c31dc40ec89c3613ae60b11baf45d331bb11d23", "message": "Add javadoc and fix query", "committedDate": "2020-04-29T09:27:38Z", "type": "commit"}, {"oid": "a523e4afd16dcf14f7b87dc346a82d766d497df6", "url": "https://github.com/apache/iotdb/commit/a523e4afd16dcf14f7b87dc346a82d766d497df6", "message": "Optimize query logic and add unit test", "committedDate": "2020-04-29T12:10:44Z", "type": "commit"}, {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f", "url": "https://github.com/apache/iotdb/commit/8c542d5ea0ea6b470bc6c7733b95e89ebc88843f", "message": "Fix code sonar", "committedDate": "2020-04-29T13:30:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzkwNQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417473905", "bodyText": "estimated size of metadataIndex entry in TsFileMetaData.", "author": "HTHou", "createdAt": "2020-04-29T17:06:54Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.", "originalCommit": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MTY3OA==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417691678", "bodyText": "Thanks for this good catch!", "author": "samperson1997", "createdAt": "2020-04-30T00:37:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzkwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDU3Nw==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417474577", "bodyText": "// metadataIndex", "author": "HTHou", "createdAt": "2020-04-29T17:07:56Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.\n    */\n-  private long deviceIndexMapEntrySize = 0;\n+  private long metadataIndexEntrySize = 0;\n \n   private TsFileMetaDataCache() {\n     logger.info(\"TsFileMetaDataCache size = \" + MEMORY_THRESHOLD_IN_B);\n     cache = new LRULinkedHashMap<String, TsFileMetadata>(MEMORY_THRESHOLD_IN_B, true) {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n-        if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n-          deviceIndexMapEntrySize = RamUsageEstimator\n-              .sizeOf(value.getDeviceMetadataIndex().entrySet().iterator().next());\n+        if (metadataIndexEntrySize == 0 && value.getMetadataIndex() != null\n+            && !value.getMetadataIndex().getChildren().isEmpty()) {\n+          metadataIndexEntrySize = RamUsageEstimator\n+              .sizeOf(value.getMetadataIndex().getChildren().iterator().next());\n         }\n         // totalChunkNum, invalidChunkNum\n         long valueSize = 4 + 4L;\n \n         // deviceMetadataIndex\n-        if (value.getDeviceMetadataIndex() != null) {\n-          valueSize += value.getDeviceMetadataIndex().size() * deviceIndexMapEntrySize;\n+        if (value.getMetadataIndex() != null) {", "originalCommit": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MTcwOQ==", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417691709", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-04-30T00:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDU3Nw=="}], "type": "inlineReview"}, {"oid": "2e2a0606cfef7457ff80a90033cc3e96ae83d382", "url": "https://github.com/apache/iotdb/commit/2e2a0606cfef7457ff80a90033cc3e96ae83d382", "message": "Rename some deviceMetadata -> metadataIndex", "committedDate": "2020-04-30T00:41:21Z", "type": "commit"}, {"oid": "49a86323e37d996f59b1d69f4baba9ecd758ebe6", "url": "https://github.com/apache/iotdb/commit/49a86323e37d996f59b1d69f4baba9ecd758ebe6", "message": "Rename function", "committedDate": "2020-04-30T02:32:01Z", "type": "commit"}]}