{"pr_number": 1466, "pr_title": "delete timeseries when path is not found", "pr_createdAt": "2020-07-06T13:22:10Z", "pr_url": "https://github.com/apache/iotdb/pull/1466", "timeline": [{"oid": "2f915b4c013900006b6966aab80b8c2394b8ae94", "url": "https://github.com/apache/iotdb/commit/2f915b4c013900006b6966aab80b8c2394b8ae94", "message": "path -> string", "committedDate": "2020-07-06T12:54:54Z", "type": "commit"}, {"oid": "7512091a4dd28bf0a76315882dc6368ed21fa24e", "url": "https://github.com/apache/iotdb/commit/7512091a4dd28bf0a76315882dc6368ed21fa24e", "message": "path -> string", "committedDate": "2020-07-06T13:07:42Z", "type": "commit"}, {"oid": "f11aea3614a346289aced1dd424dee5945b6f6ed", "url": "https://github.com/apache/iotdb/commit/f11aea3614a346289aced1dd424dee5945b6f6ed", "message": "use exception", "committedDate": "2020-07-06T13:12:54Z", "type": "commit"}, {"oid": "947247ba85cf1e3ff8a1b95bd875fcd7b1aa83f1", "url": "https://github.com/apache/iotdb/commit/947247ba85cf1e3ff8a1b95bd875fcd7b1aa83f1", "message": "check path", "committedDate": "2020-07-06T13:16:49Z", "type": "commit"}, {"oid": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "url": "https://github.com/apache/iotdb/commit/52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "message": "ignore exception", "committedDate": "2020-07-06T13:18:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MzE2Ng==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450593166", "bodyText": "fullPaths.addAll(fullPathStrs); may be put into the else branch to reduce unnecessary method calls.", "author": "jt2594838", "createdAt": "2020-07-07T03:35:33Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -2614,6 +2641,43 @@ private AsyncClientPool getDataAsyncClientPool() {\n     return ret;\n   }\n \n+  /**\n+   * Get all paths after removing wildcards in the path\n+   *\n+   * @param originalPaths, a list of paths, potentially with wildcard\n+   * @return a pair of path lists, the first are the existing full paths, the second are invalid\n+   * original paths\n+   */\n+  public Pair<List<String>, List<String>> getMatchedPaths(List<String> originalPaths) {\n+    ConcurrentSkipListSet<String> fullPaths = new ConcurrentSkipListSet<>();\n+    ConcurrentSkipListSet<String> nonExistPaths = new ConcurrentSkipListSet<>();\n+    ExecutorService getAllPathsService = Executors\n+        .newFixedThreadPool(partitionTable.getGlobalGroups().size());\n+    for (String pathStr : originalPaths) {\n+      getAllPathsService.submit(() -> {\n+        try {\n+          List<String> fullPathStrs = getMatchedPaths(pathStr);\n+          if (fullPathStrs.isEmpty()) {\n+            nonExistPaths.add(pathStr);\n+            logger.error(\"Path {} is not found.\", pathStr);\n+          }\n+          fullPaths.addAll(fullPathStrs);", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTA2Ng==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619066", "bodyText": "You're right. Thanks for your suggestion :)", "author": "Ring-k", "createdAt": "2020-07-07T05:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MzE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MzczMw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450593733", "bodyText": "Use Collections.emptyList().", "author": "jt2594838", "createdAt": "2020-07-07T03:37:47Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ClearCachePlan.java", "diffHunk": "@@ -34,4 +34,9 @@ public ClearCachePlan() {\n   public List<Path> getPaths() {\n     return new ArrayList<>();\n   }\n+\n+  @Override\n+  public List<String> getPathsStrings() {\n+    return new ArrayList<>();", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTE0OQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619149", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MzczMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDAzMg==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450594032", "bodyText": "Just Return Collections.singletonList(path.getFullPath()); and check other places, please.", "author": "jt2594838", "createdAt": "2020-07-07T03:39:19Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/AlterTimeSeriesPlan.java", "diffHunk": "@@ -102,6 +103,15 @@ public String getAlias() {\n     return Collections.singletonList(path);\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    List<String> ret = new ArrayList<>();\n+    for (Path curPath : Collections.singletonList(path)) {\n+      ret.add(curPath.getFullPath());\n+    }\n+    return ret;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTE3OA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619178", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:28:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDM2Nw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450594367", "bodyText": "It is not a good idea to return a null collection, use Collections.emptyList() instead.", "author": "jt2594838", "createdAt": "2020-07-07T03:40:53Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/DeletePartitionPlan.java", "diffHunk": "@@ -41,6 +41,11 @@ public DeletePartitionPlan(String storageGroupName, Set<Long> partitionId) {\n     return null;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return null;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTIwNg==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619206", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDUzMA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450594530", "bodyText": "Just use ret.add(deviceId + IoTDBConstant.PATH_SEPARATOR + m).", "author": "jt2594838", "createdAt": "2020-07-07T03:41:45Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/InsertRowPlan.java", "diffHunk": "@@ -196,13 +196,21 @@ public void markFailedMeasurementInsertion(int index, Exception e) {\n   @Override\n   public List<Path> getPaths() {\n     List<Path> ret = new ArrayList<>();\n-\n     for (String m : measurements) {\n       ret.add(new Path(deviceId, m));\n     }\n     return ret;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    List<String> ret = new ArrayList<>();\n+    for (String m : measurements) {\n+      ret.add(new Path(deviceId, m).getFullPath());", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTIyMQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619221", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDY5MQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450594691", "bodyText": "Just use ret.add(deviceId + IoTDBConstant.PATH_SEPARATOR + m) and return ret.", "author": "jt2594838", "createdAt": "2020-07-07T03:42:32Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/InsertTabletPlan.java", "diffHunk": "@@ -125,6 +125,23 @@ public void setRange(List<Integer> range) {\n     return ret;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    if (paths != null) {\n+      List<String> ret = new ArrayList<>();\n+      for (Path path : paths) {\n+        ret.add(path.getFullPath());\n+      }\n+      return ret;\n+    }\n+    List<Path> ret = new ArrayList<>();\n+    for (String m : measurements) {\n+      ret.add(new Path(deviceId, m));", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTI5Mg==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619292", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDY5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDk0NQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450594945", "bodyText": "return nodeName != null ? Collections.singletonList(nodeName.getFullPath()) : Collections.emptyList().", "author": "jt2594838", "createdAt": "2020-07-07T03:43:53Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/AuthorPlan.java", "diffHunk": "@@ -254,6 +254,15 @@ public String toString() {\n     return ret;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    List<String> ret = new ArrayList<>();\n+    if (nodeName != null) {\n+      ret.add(nodeName.getFullPath());\n+    }\n+    return ret;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTMwNQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619305", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTAyOA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595028", "bodyText": "Use Collections.emptyList().", "author": "jt2594838", "createdAt": "2020-07-07T03:44:23Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/CreateSnapshotPlan.java", "diffHunk": "@@ -35,4 +35,9 @@ public CreateSnapshotPlan() {\n   public List<Path> getPaths() {\n     return new ArrayList<>();\n   }\n+\n+  @Override\n+  public List<String> getPathsStrings() {\n+    return new ArrayList<>();", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTMyMQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619321", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTE1OQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595159", "bodyText": "Collections.singletonList(path.getFullPath())", "author": "jt2594838", "createdAt": "2020-07-07T03:44:58Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/CreateTimeSeriesPlan.java", "diffHunk": "@@ -133,12 +134,21 @@ public String toString() {\n     return String.format(\"seriesPath: %s, resultDataType: %s, encoding: %s, compression: %s\", path,\n         dataType, encoding, compressor);\n   }\n-  \n+\n   @Override\n   public List<Path> getPaths() {\n     return Collections.singletonList(path);\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    List<String> ret = new ArrayList<>();\n+    for (Path curPath : Collections.singletonList(path)) {\n+      ret.add(curPath.getFullPath());\n+    }\n+    return ret;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTM0MQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619341", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTIxOQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595219", "bodyText": "Collections.emptyList()", "author": "jt2594838", "createdAt": "2020-07-07T03:45:11Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/DataAuthPlan.java", "diffHunk": "@@ -49,6 +49,11 @@ public DataAuthPlan(OperatorType operatorType, List<String> users) {\n     return null;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return null;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTM5MA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619390", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTIxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTM1Ng==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595356", "bodyText": "Collections.emptyList()", "author": "jt2594838", "createdAt": "2020-07-07T03:45:47Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/LoadConfigurationPlan.java", "diffHunk": "@@ -115,6 +115,11 @@ public void deserialize(ByteBuffer buffer) {\n     return null;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return null;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTQwNg==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619406", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTQzNA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595434", "bodyText": "Here too.", "author": "jt2594838", "createdAt": "2020-07-07T03:46:10Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/LoadDataPlan.java", "diffHunk": "@@ -48,6 +48,15 @@ public LoadDataPlan(String inputFilePath, String measureType) {\n     return ret;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    List<String> ret = new ArrayList<>();\n+    if (measureType != null) {\n+      ret.add(measureType);\n+    }\n+    return ret;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTQyMw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619423", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTUyNA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595524", "bodyText": "And here.", "author": "jt2594838", "createdAt": "2020-07-07T03:46:29Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/MergePlan.java", "diffHunk": "@@ -38,4 +38,9 @@ public MergePlan() {\n   public List<Path> getPaths() {\n     return new ArrayList<>();\n   }\n+\n+  @Override\n+  public List<String> getPathsStrings() {\n+    return new ArrayList<>();", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTQ0MQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619441", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTYwMg==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595602", "bodyText": "And there.", "author": "jt2594838", "createdAt": "2020-07-07T03:46:49Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/OperateFilePlan.java", "diffHunk": "@@ -54,6 +54,11 @@ public OperateFilePlan(File file, File targetDir, OperatorType operatorType) {\n     return null;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return null;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTQ1Mw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619453", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTY0Mw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595643", "bodyText": "And here.", "author": "jt2594838", "createdAt": "2020-07-07T03:47:01Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/SetStorageGroupPlan.java", "diffHunk": "@@ -57,6 +58,15 @@ public void setPath(Path path) {\n     return ret;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    List<String> ret = new ArrayList<>();\n+    if (path != null) {\n+      ret.add(path.getFullPath());\n+    }\n+    return ret;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTQ2Ng==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619466", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTczNg==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595736", "bodyText": "And here.", "author": "jt2594838", "createdAt": "2020-07-07T03:47:30Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/SetTTLPlan.java", "diffHunk": "@@ -54,6 +54,11 @@ public SetTTLPlan(String storageGroup) {\n     return null;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return null;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTQ4NQ==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619485", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTczNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTc2OA==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595768", "bodyText": "And here.", "author": "jt2594838", "createdAt": "2020-07-07T03:47:40Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowPlan.java", "diffHunk": "@@ -39,6 +39,11 @@ public ShowPlan(ShowContentType showContentType){\n     return null;\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return null;", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTUwNw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450619507", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T05:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTc2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTg0Ng==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450595846", "bodyText": "And here.", "author": "jt2594838", "createdAt": "2020-07-07T03:47:57Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/TracingPlan.java", "diffHunk": "@@ -38,6 +38,11 @@ public TracingPlan(boolean isTracingOn) {\n     return new ArrayList<>();\n   }\n \n+  @Override\n+  public List<String> getPathsStrings() {\n+    return new ArrayList<>();", "originalCommit": "52b7ce4cb57c232eed0f19e7f4a3c66464c37605", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgzMDAyNw==", "url": "https://github.com/apache/iotdb/pull/1466#discussion_r450830027", "bodyText": "I'll change it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-07-07T12:35:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTg0Ng=="}], "type": "inlineReview"}, {"oid": "a5b4554e6fc528c4a8f81f89f9aaf0c43144fab4", "url": "https://github.com/apache/iotdb/commit/a5b4554e6fc528c4a8f81f89f9aaf0c43144fab4", "message": "collections", "committedDate": "2020-07-07T04:19:17Z", "type": "commit"}, {"oid": "7321349a29d0074511d49bf3ffcf9b3535b86855", "url": "https://github.com/apache/iotdb/commit/7321349a29d0074511d49bf3ffcf9b3535b86855", "message": "remove redundent", "committedDate": "2020-07-07T05:18:52Z", "type": "commit"}, {"oid": "1cc1eb60a1a875aeb1c92f741d85ab0c2e675096", "url": "https://github.com/apache/iotdb/commit/1cc1eb60a1a875aeb1c92f741d85ab0c2e675096", "message": "collections", "committedDate": "2020-07-07T05:23:03Z", "type": "commit"}, {"oid": "b8ff79594be5672b8211fa563aedb8a16c02fa13", "url": "https://github.com/apache/iotdb/commit/b8ff79594be5672b8211fa563aedb8a16c02fa13", "message": "fix conflict", "committedDate": "2020-07-09T03:19:33Z", "type": "commit"}]}