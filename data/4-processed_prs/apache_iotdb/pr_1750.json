{"pr_number": 1750, "pr_title": "[Sonar] Fix Codesmell blocker and critical issue", "pr_createdAt": "2020-09-22T07:02:00Z", "pr_url": "https://github.com/apache/iotdb/pull/1750", "timeline": [{"oid": "11b9b16680e852293f29c8ec07d2111a1a55f007", "url": "https://github.com/apache/iotdb/commit/11b9b16680e852293f29c8ec07d2111a1a55f007", "message": "fix sonar blocker issue", "committedDate": "2020-09-19T11:32:34Z", "type": "commit"}, {"oid": "c9ae58e9fd2c47656d787b09a0ad5ae46a73f6e7", "url": "https://github.com/apache/iotdb/commit/c9ae58e9fd2c47656d787b09a0ad5ae46a73f6e7", "message": "fix codesmell critical issue of duplicating string", "committedDate": "2020-09-21T08:46:48Z", "type": "commit"}, {"oid": "2aef7535100de4a60ded7b114093933ce84cb52d", "url": "https://github.com/apache/iotdb/commit/2aef7535100de4a60ded7b114093933ce84cb52d", "message": "Merge remote-tracking branch 'upstream/master' into codesmell-blocker", "committedDate": "2020-09-22T06:49:01Z", "type": "commit"}, {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "url": "https://github.com/apache/iotdb/commit/d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "message": "fix some bugs", "committedDate": "2020-09-23T03:19:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1NjcwNw==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493256707", "bodyText": "Combine to one String template, use String.format", "author": "qiaojialin", "createdAt": "2020-09-23T07:28:05Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/decoder/Decoder.java", "diffHunk": "@@ -31,6 +31,9 @@\n \n public abstract class Decoder {\n \n+  private static final String DECODER_NOT_FOUND = \"Decoder not found:\";\n+  private static final String DATA_TYPE = \" , DataType is :\";", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2NjI5Mg==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493266292", "bodyText": "combine these two", "author": "qiaojialin", "createdAt": "2020-09-23T07:43:26Z", "path": "hive-connector/src/main/java/org/apache/iotdb/hive/TsFileDeserializer.java", "diffHunk": "@@ -34,7 +34,8 @@\n \n public class TsFileDeserializer {\n   private static final Logger LOG = LoggerFactory.getLogger(TsFileDeserializer.class);\n-\n+  private static final String UNEXPECTED_DATA_TYPE = \"Unexpected data type: \";\n+  private static final String FOR_DATE_TYPEINFO = \" for Date TypeInfo: \";", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2ODE1Ng==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493268156", "bodyText": "combine to one string", "author": "qiaojialin", "createdAt": "2020-09-23T07:46:23Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -200,6 +200,9 @@\n   private UpdateOperator updateOp;\n   private QueryOperator queryOp;\n   private DeleteDataOperator deleteDataOp;\n+  private static final String FOR_DELETE_STATEMENT = \"For delete statement, where clause can only contain atomic expressions like : \";\n+  private static final String ATOMIC_EXPRESSION_RULE = \"time > XXX, time <= XXX, or two atomic expressions connected by 'AND'\";", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU1Nzc0MQ==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493557741", "bodyText": "String.format(\"Unexpected data type: %s for Date TypeInfo: %s\", data.getClass().getName(), type)", "author": "jixuan1989", "createdAt": "2020-09-23T12:57:55Z", "path": "hive-connector/src/main/java/org/apache/iotdb/hive/TsFileDeserializer.java", "diffHunk": "@@ -90,55 +91,55 @@ public Object deserialize(List<String> columnNames, List<TypeInfo> columnTypes,\n             row.add(((BooleanWritable)data).get());\n           }\n           else {\n-            throw new TsFileSerDeException(\"Unexpected data type: \" + data.getClass().getName() + \" for Date TypeInfo: \" + type);\n+            throw new TsFileSerDeException(UNEXPECTED_DATA_TYPE + data.getClass().getName() + FOR_DATE_TYPEINFO + type);", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU1ODcwNw==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493558707", "bodyText": "why change this name?", "author": "jixuan1989", "createdAt": "2020-09-23T12:58:57Z", "path": "server/src/main/java/org/apache/iotdb/db/cost/statistic/Measurement.java", "diffHunk": "@@ -112,7 +112,7 @@\n   private long displayIntervalInMs;\n   private Map<String, Boolean> operationSwitch;\n \n-  private static final Logger LOGGER = LoggerFactory.getLogger(Measurement.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(Measurement.class);", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU2MTQ2NA==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493561464", "bodyText": "public final static String ?", "author": "jixuan1989", "createdAt": "2020-09-23T13:01:55Z", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "diffHunk": "@@ -26,23 +26,23 @@\n \r\n public class JvmSource implements Source {\r\n \r\n-  public String sourceName = \"jvm\";\r\n+  public String SOURCE_NAME = \"jvm\";\r", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU2MTc3OA==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493561778", "bodyText": "final static String", "author": "jixuan1989", "createdAt": "2020-09-23T13:02:15Z", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/MetricsSource.java", "diffHunk": "@@ -24,7 +24,7 @@\n \r\n public class MetricsSource implements Source {\r\n \r\n-  public String sourceName = \"iot-metrics\";\r\n+  public String SOURCE_NAME = \"iot-metrics\";\r", "originalCommit": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "afb99b2c3b1721f7ac5ffab126a392745e90b3de", "url": "https://github.com/apache/iotdb/commit/afb99b2c3b1721f7ac5ffab126a392745e90b3de", "message": "fix some major codesmell issues", "committedDate": "2020-09-27T03:13:20Z", "type": "commit"}, {"oid": "8f0d09383a2a9fd85a64b274c8969e290d068320", "url": "https://github.com/apache/iotdb/commit/8f0d09383a2a9fd85a64b274c8969e290d068320", "message": "fix conflict", "committedDate": "2020-09-27T03:31:59Z", "type": "commit"}, {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "url": "https://github.com/apache/iotdb/commit/812ea07f011e3d8904dba8e2e416b50d67d87b3d", "message": "code revision", "committedDate": "2020-09-27T07:17:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MjY0Nw==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495542647", "bodyText": "Remove this pair of  parentheses", "author": "wshao08", "createdAt": "2020-09-27T07:53:23Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -132,8 +133,8 @@ public static void upgradeMLog(String schemaDir, String logFileName) throws IOEx\n     }\n \n     // if both old mlog and mlog.tmp exist, delete mlog tmp, then do upgrading\n-    if (tmpLogFile.exists()) {\n-      if (!tmpLogFile.delete()) {\n+    if (tmpLogFile.exists() && !tmpLogFile.delete()) {\n+      {", "originalCommit": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MjczNg==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495542736", "bodyText": "remove this parentheses", "author": "wshao08", "createdAt": "2020-09-27T07:54:15Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -898,8 +899,8 @@ private void findPath(MNode node, String[] nodes, int idx, List<Pair<PartialPath\n           continue;\n         }\n         findPath(child, nodes, idx + 1, timeseriesSchemaList, hasLimit, needLast, queryContext);\n-        if (hasLimit) {\n-          if (count.get().intValue() == limit.get().intValue()) {\n+        if (hasLimit && count.get().intValue() == limit.get().intValue()) {\n+           {", "originalCommit": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0Mjc2NQ==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495542765", "bodyText": "public static final", "author": "wshao08", "createdAt": "2020-09-27T07:54:29Z", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "diffHunk": "@@ -26,23 +26,23 @@\n \r\n public class JvmSource implements Source {\r\n \r\n-  public String sourceName = \"jvm\";\r\n+  public final static String SOURCE_NAME = \"jvm\";\r", "originalCommit": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MzAwOA==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495543008", "bodyText": "remove blank line", "author": "wshao08", "createdAt": "2020-09-27T07:57:29Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/compress/IUnCompressor.java", "diffHunk": "@@ -41,6 +42,7 @@\n    * @param name CompressionType\n    * @return the UnCompressor of specified CompressionType\n    */\n+", "originalCommit": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0NDA2Mw==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495544063", "bodyText": "Combine to one error message. Call it \"DELETE_RANGE_ERROR_MSG\"", "author": "wshao08", "createdAt": "2020-09-27T08:09:27Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -200,6 +200,9 @@\n   private UpdateOperator updateOp;\n   private QueryOperator queryOp;\n   private DeleteDataOperator deleteDataOp;\n+  private static final String FOR_DELETE_STATEMENT = \"For delete statement, where clause can only contain atomic expressions like : \";", "originalCommit": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0NDcxNg==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495544716", "bodyText": "Use BINARY_STATS_UNSUPPORTED_MSG to represent \"Binary statistics does not support: %s\",\nand use String.format(BINARY_STATS_UNSUPPORTED_MSG, \"min\");", "author": "wshao08", "createdAt": "2020-09-27T08:15:52Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/statistics/BinaryStatistics.java", "diffHunk": "@@ -36,6 +36,9 @@\n \n   private Binary firstValue = new Binary(\"\");\n   private Binary lastValue = new Binary(\"\");\n+  private static final String BINARY_STATISTICS_NOT_SUPPORT_MIN = \"Binary statistics does not support: min\";\n+  private static final String BINARY_STATISTICS_NOT_SUPPORT_MAX = \"Binary statistics does not support: max\";\n+  private static final String BINARY_STATISTICS_NOT_SUPPORT_SUM = \"Binary statistics does not support: sum\";", "originalCommit": "812ea07f011e3d8904dba8e2e416b50d67d87b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e02e97ab572905f3c9da6f95eb9f380667a9fb31", "url": "https://github.com/apache/iotdb/commit/e02e97ab572905f3c9da6f95eb9f380667a9fb31", "message": "code revision 02", "committedDate": "2020-09-27T09:38:09Z", "type": "commit"}, {"oid": "fac2703673be12d829bb9d24387052044d5a20ab", "url": "https://github.com/apache/iotdb/commit/fac2703673be12d829bb9d24387052044d5a20ab", "message": "code revision 03", "committedDate": "2020-09-27T09:57:51Z", "type": "commit"}, {"oid": "021f16b499fa9d910be94bb8d79445e47adf5764", "url": "https://github.com/apache/iotdb/commit/021f16b499fa9d910be94bb8d79445e47adf5764", "message": "code revision 04", "committedDate": "2020-09-27T11:15:04Z", "type": "commit"}, {"oid": "81109a6bb14f16589410f068efb9bb2c5653eaa4", "url": "https://github.com/apache/iotdb/commit/81109a6bb14f16589410f068efb9bb2c5653eaa4", "message": "fix code indentation", "committedDate": "2020-09-27T11:24:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2MjY3OQ==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495662679", "bodyText": "Remove blank line and set indentation to 2", "author": "wshao08", "createdAt": "2020-09-28T02:43:40Z", "path": "example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTablet.java", "diffHunk": "@@ -46,10 +46,9 @@ public static void main(String[] args) {\n     try {\n       String path = \"test.tsfile\";\n       File f = FSFactoryProducer.getFSFactory().getFile(path);\n-      if (f.exists()) {\n-        if (!f.delete()) {\n+      if (f.exists() && !f.delete()) {\n           throw new RuntimeException(\"can not delete \" + f.getAbsolutePath());\n-        }\n+        ", "originalCommit": "81109a6bb14f16589410f068efb9bb2c5653eaa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Mjc0Nw==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495662747", "bodyText": "set indentation to 2", "author": "wshao08", "createdAt": "2020-09-28T02:44:01Z", "path": "session/src/main/java/org/apache/iotdb/session/SessionDataSet.java", "diffHunk": "@@ -129,10 +129,8 @@ private RowRecord constructRowRecordFromValueArray() throws StatementExecutionEx\n \n \n   public RowRecord next() throws StatementExecutionException, IoTDBConnectionException {\n-    if (!ioTDBRpcDataSet.hasCachedRecord) {\n-      if (!hasNext()) {\n+    if (!ioTDBRpcDataSet.hasCachedRecord && !hasNext()) {\n         return null;", "originalCommit": "81109a6bb14f16589410f068efb9bb2c5653eaa4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "126af2b9e2cee83567fedc2ce7e17e181d9343a4", "url": "https://github.com/apache/iotdb/commit/126af2b9e2cee83567fedc2ce7e17e181d9343a4", "message": "set indentation to 2", "committedDate": "2020-09-28T03:41:36Z", "type": "commit"}, {"oid": "fdb18fd844a85d86a27da172b9ab5a607978355a", "url": "https://github.com/apache/iotdb/commit/fdb18fd844a85d86a27da172b9ab5a607978355a", "message": "fix bug", "committedDate": "2020-09-28T08:05:20Z", "type": "commit"}, {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "url": "https://github.com/apache/iotdb/commit/1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "message": "swap arguments so they are in correct order", "committedDate": "2020-09-29T07:59:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MDQ4MQ==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500760481", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String  UNSUPPORT_FILE_SYSTEM = \"Unsupported file system: \";\n          \n          \n            \n              private static final String UNSUPPORT_FILE_SYSTEM = \"Unsupported file system: \";", "author": "HTHou", "createdAt": "2020-10-07T06:14:36Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/fileSystem/SystemFileFactory.java", "diffHunk": "@@ -30,10 +30,10 @@\n   INSTANCE;\n \n   private static FSType fsType = IoTDBDescriptor.getInstance().getConfig().getSystemFileStorageFs();\n-\n+  private static final String  UNSUPPORT_FILE_SYSTEM = \"Unsupported file system: \";", "originalCommit": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MTg3OA==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500761878", "bodyText": "TimeSeries %s is removed from tag inverted index,  can also be const string.", "author": "HTHou", "createdAt": "2020-10-07T06:18:29Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -516,7 +518,7 @@ private void removeFromTagInvertedIndex(MeasurementMNode node) throws IOExceptio\n           if (logger.isDebugEnabled()) {\n             logger.debug(String.format(\n                 \"Delete: TimeSeries %s is removed from tag inverted index, \"", "originalCommit": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MjAzNw==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500762037", "bodyText": "Same as above", "author": "HTHou", "createdAt": "2020-10-07T06:19:01Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -1378,7 +1380,7 @@ public void upsertTagsAndAttributes(String alias, Map<String, String> tagsMap,\n               if (logger.isDebugEnabled()) {\n                 logger.debug(String.format(\n                     \"Upsert: TimeSeries %s's tag info has been removed from tag inverted index \"", "originalCommit": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MjMwOQ==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500762309", "bodyText": "Suggested change", "author": "HTHou", "createdAt": "2020-10-07T06:19:41Z", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "diffHunk": "@@ -26,23 +26,23 @@\n \r\n public class JvmSource implements Source {\r\n \r\n-  public String sourceName = \"jvm\";\r\n+  public static final String SOURCE_NAME = \"jvm\";\r\n   public MetricRegistry metricRegistry;\r\n \r\n   public JvmSource(MetricRegistry metricRegistry) {\r\n     this.metricRegistry = metricRegistry;\r\n   }\r\n \r\n   public void registerInfo() {\r\n-    metricRegistry.register(MetricRegistry.name(sourceName, \"gc\"), new GarbageCollectorMetricSet());\r\n-    metricRegistry.register(MetricRegistry.name(sourceName, \"memory\"), new MemoryUsageGaugeSet());\r\n-    metricRegistry.register(MetricRegistry.name(sourceName, \"buffer-pool\"),\r\n+    metricRegistry.register(MetricRegistry.name(SOURCE_NAME, \"gc\"), new GarbageCollectorMetricSet());\r\n+    metricRegistry.register(MetricRegistry.name(SOURCE_NAME, \"memory\"), new MemoryUsageGaugeSet());\r\n+    metricRegistry.register(MetricRegistry.name(SOURCE_NAME, \"buffer-pool\"),\r\n         new BufferPoolMetricSet(ManagementFactory.getPlatformMBeanServer()));\r\n   }\r\n \r\n   @Override\r\n   public String sourceName() {\r\n-    return this.sourceName;\r\n+    return this.SOURCE_NAME;\r\n   }\r\n-\r\n+  \r", "originalCommit": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2Mjk4NQ==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500762985", "bodyText": "I don't think it's necessary.", "author": "HTHou", "createdAt": "2020-10-07T06:21:29Z", "path": "server/src/main/java/org/apache/iotdb/db/metrics/ui/MetricsPage.java", "diffHunk": "@@ -39,6 +39,7 @@\n   private static final Logger logger = LoggerFactory.getLogger(MetricsPage.class);\r\n   private MetricRegistry mr;\r\n   private final List<SqlArgument> sqlArguments = TSServiceImpl.getSqlArgumentList();\r\n+  private static final String HTML_TD_TAG = \"</td>\";\r", "originalCommit": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2NTExMA==", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500765110", "bodyText": "NEW_LINE_QUERY_ID looks weird. I think it's better to use \"\\n\" + QUERY_ID in code below.", "author": "HTHou", "createdAt": "2020-10-07T06:26:44Z", "path": "server/src/main/java/org/apache/iotdb/db/query/control/TracingManager.java", "diffHunk": "@@ -32,6 +32,9 @@\n public class TracingManager {\n \n   private static final Logger logger = LoggerFactory.getLogger(TracingManager.class);\n+  private static final String QUERY_ID = \"Query Id: \";\n+  private static final String NEW_LINE_QUERY_ID = \"\\nQuery Id: \";", "originalCommit": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "url": "https://github.com/apache/iotdb/commit/1ab1874a56c4cdea7de2d8a3722145ff0946c29a", "message": "swap arguments so they are in correct order", "committedDate": "2020-09-29T07:59:58Z", "type": "forcePushed"}, {"oid": "4be808198add24e047649a367cb050e9cb52964b", "url": "https://github.com/apache/iotdb/commit/4be808198add24e047649a367cb050e9cb52964b", "message": "Merge remote-tracking branch 'upstream/master' into codesmell-blocker", "committedDate": "2020-10-10T14:11:25Z", "type": "commit"}, {"oid": "5de34e876f949be13f2fbb0996f1756ddacf9d4f", "url": "https://github.com/apache/iotdb/commit/5de34e876f949be13f2fbb0996f1756ddacf9d4f", "message": "revise code", "committedDate": "2020-10-11T03:13:08Z", "type": "commit"}, {"oid": "84e45703468ed1c65345aa643cc1a43ce2d841b1", "url": "https://github.com/apache/iotdb/commit/84e45703468ed1c65345aa643cc1a43ce2d841b1", "message": "revise code 02", "committedDate": "2020-10-11T03:55:42Z", "type": "commit"}, {"oid": "12bc44677a53aa0d5e0b19e59e4be18c5e2a2349", "url": "https://github.com/apache/iotdb/commit/12bc44677a53aa0d5e0b19e59e4be18c5e2a2349", "message": "revise code 03", "committedDate": "2020-10-12T03:58:53Z", "type": "commit"}, {"oid": "96fb4d666863379fec0011dc4dff277bee39160c", "url": "https://github.com/apache/iotdb/commit/96fb4d666863379fec0011dc4dff277bee39160c", "message": "fix sonarcloud codesmell issues", "committedDate": "2020-10-12T10:34:05Z", "type": "commit"}, {"oid": "12def8100748d14a4f316e2c7b7cd1ad78174144", "url": "https://github.com/apache/iotdb/commit/12def8100748d14a4f316e2c7b7cd1ad78174144", "message": "fix bug", "committedDate": "2020-10-13T01:38:06Z", "type": "commit"}, {"oid": "66ee5663996c363599b163db152983b7f58b91ad", "url": "https://github.com/apache/iotdb/commit/66ee5663996c363599b163db152983b7f58b91ad", "message": "Merge remote-tracking branch 'upstream/master' into codesmell-blocker", "committedDate": "2020-10-13T03:21:17Z", "type": "commit"}]}