{"pr_number": 2063, "pr_title": "Refactor LastQueryExecutor to separate the execution into multiple stages", "pr_createdAt": "2020-11-17T11:40:34Z", "pr_url": "https://github.com/apache/iotdb/pull/2063", "timeline": [{"oid": "39691323a5b3abb6e5e144b176acdd132f7c6b6b", "url": "https://github.com/apache/iotdb/commit/39691323a5b3abb6e5e144b176acdd132f7c6b6b", "message": "Refactor LastQueryExecutor to separate the execution into multiple stages", "committedDate": "2020-11-17T11:24:37Z", "type": "commit"}, {"oid": "370a06b56e648a8c6e3fdfe260c03590e9330b34", "url": "https://github.com/apache/iotdb/commit/370a06b56e648a8c6e3fdfe260c03590e9330b34", "message": "Fix codesmell", "committedDate": "2020-11-17T13:13:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1NDk0OA==", "url": "https://github.com/apache/iotdb/pull/2063#discussion_r525154948", "bodyText": "this may be used in cluster @jt2594838", "author": "qiaojialin", "createdAt": "2020-11-17T13:33:12Z", "path": "server/src/main/java/org/apache/iotdb/db/query/executor/QueryRouter.java", "diffHunk": "@@ -225,12 +225,8 @@ public QueryDataSet groupByFill(GroupByTimeFillPlan groupByFillPlan, QueryContex\n   @Override\n   public QueryDataSet lastQuery(LastQueryPlan lastQueryPlan, QueryContext context)\n       throws StorageEngineException, QueryProcessException, IOException {\n-    LastQueryExecutor lastQueryExecutor = getLastQueryExecutor(lastQueryPlan);\n+    LastQueryExecutor lastQueryExecutor = new LastQueryExecutor(lastQueryPlan);\n     return lastQueryExecutor.execute(context, lastQueryPlan);\n   }\n \n-  protected LastQueryExecutor getLastQueryExecutor(LastQueryPlan lastQueryPlan) {", "originalCommit": "370a06b56e648a8c6e3fdfe260c03590e9330b34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1ODc2Ng==", "url": "https://github.com/apache/iotdb/pull/2063#discussion_r525158766", "bodyText": "Yes, indeed. I hope you can make some interfaces out of it, which would better not be modified so frequently.", "author": "jt2594838", "createdAt": "2020-11-17T13:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1NDk0OA=="}], "type": "inlineReview"}, {"oid": "26508e9b7a158c4efb831eb225706414fa610daa", "url": "https://github.com/apache/iotdb/commit/26508e9b7a158c4efb831eb225706414fa610daa", "message": "Fix some issues", "committedDate": "2020-11-18T02:12:35Z", "type": "commit"}, {"oid": "9b2e4ab02af84347de663486912bc55de8473ed6", "url": "https://github.com/apache/iotdb/commit/9b2e4ab02af84347de663486912bc55de8473ed6", "message": "Fix review issues", "committedDate": "2020-11-18T04:52:54Z", "type": "commit"}, {"oid": "12f569db2b633dca611e4af22b99dc54e6ba3d7e", "url": "https://github.com/apache/iotdb/commit/12f569db2b633dca611e4af22b99dc54e6ba3d7e", "message": "Fix error in MTree", "committedDate": "2020-11-18T06:27:55Z", "type": "commit"}, {"oid": "e646559330b3e4cecce2addeef0d937c3fa7bdf9", "url": "https://github.com/apache/iotdb/commit/e646559330b3e4cecce2addeef0d937c3fa7bdf9", "message": "Fix test case error", "committedDate": "2020-11-18T06:42:01Z", "type": "commit"}, {"oid": "b9fc75000629277b242e8fc1a44dabfa73b3f6ca", "url": "https://github.com/apache/iotdb/commit/b9fc75000629277b242e8fc1a44dabfa73b3f6ca", "message": "codesmell fix", "committedDate": "2020-11-18T07:13:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyMjk1Nw==", "url": "https://github.com/apache/iotdb/pull/2063#discussion_r525622957", "bodyText": "it should be a Collections.single() instead of an emptySet()", "author": "JackieTien97", "createdAt": "2020-11-18T00:51:07Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -107,8 +109,12 @@ static long getLastTimeStamp(MeasurementMNode node, QueryContext queryContext) {\n       return node.getCachedLast().getTimestamp();\n     } else {\n       try {\n-        last = calculateLastPairForOneSeriesLocally(node.getPartialPath(),\n-            node.getSchema().getType(), queryContext, null, Collections.emptySet());\n+        QueryDataSource dataSource = QueryResourceManager.getInstance().\n+                getQueryDataSource(node.getPartialPath(), queryContext, null);\n+        LastPointReader lastReader = new LastPointReader(node.getPartialPath(),\n+                node.getSchema().getType(), Collections.emptySet(), queryContext,", "originalCommit": "370a06b56e648a8c6e3fdfe260c03590e9330b34", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}