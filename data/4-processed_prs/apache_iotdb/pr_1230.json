{"pr_number": 1230, "pr_title": "[IOTDB-665] validate physical plan before fowarding", "pr_createdAt": "2020-05-20T01:38:30Z", "pr_url": "https://github.com/apache/iotdb/pull/1230", "timeline": [{"oid": "ca957635db9690ef0ba8cd58e4a205436adbac07", "url": "https://github.com/apache/iotdb/commit/ca957635db9690ef0ba8cd58e4a205436adbac07", "message": "pre-validate", "committedDate": "2020-05-20T01:20:23Z", "type": "commit"}, {"oid": "a17b6b2c98287b7b5038334965bbb1626ab4a77c", "url": "https://github.com/apache/iotdb/commit/a17b6b2c98287b7b5038334965bbb1626ab4a77c", "message": "insert plan pre-validate", "committedDate": "2020-05-22T06:10:26Z", "type": "commit"}, {"oid": "379b2f29337c79fb94a09b3031d912a104b5ebf1", "url": "https://github.com/apache/iotdb/commit/379b2f29337c79fb94a09b3031d912a104b5ebf1", "message": "use pullSchema", "committedDate": "2020-05-22T12:49:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1ODAzMw==", "url": "https://github.com/apache/iotdb/pull/1230#discussion_r429858033", "bodyText": "I think you should also check the legalness of the path. It should start with \"root' but cannot be \"root\".", "author": "jt2594838", "createdAt": "2020-05-25T10:20:29Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1397,6 +1401,91 @@ public TSStatus executeNonQuery(PhysicalPlan plan) {\n     }\n   }\n \n+\n+  public TSStatus validatePlan(PhysicalPlan plan) {\n+    TSStatus result = StatusUtils.OK;\n+    if (plan instanceof SetStorageGroupPlan) {\n+      return validateSetStorageGroupPlan((SetStorageGroupPlan) plan);\n+    } else if (plan instanceof InsertPlan) {\n+      return validateInsertPlan((InsertPlan) plan);\n+    }\n+    // TODO add more pre-validations\n+    return result;\n+  }\n+\n+  private TSStatus validateSetStorageGroupPlan(SetStorageGroupPlan plan) {\n+    String path = plan.getPath().getFullPath();\n+    if (getAllStorageGroupNames().contains(path)) {\n+      return StatusUtils.PATH_ALREADY_EXIST_ERROR;\n+    }", "originalCommit": "379b2f29337c79fb94a09b3031d912a104b5ebf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk2NDgwOA==", "url": "https://github.com/apache/iotdb/pull/1230#discussion_r429964808", "bodyText": "That's right. Thanks for your reminding.", "author": "Ring-k", "createdAt": "2020-05-25T14:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1ODAzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1OTU4Nw==", "url": "https://github.com/apache/iotdb/pull/1230#discussion_r429859587", "bodyText": "Check the schema cache in MManager using MManager.getSeriesType() first, if it cannot be found then add them to the list and pull them.", "author": "jt2594838", "createdAt": "2020-05-25T10:24:16Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1397,6 +1401,91 @@ public TSStatus executeNonQuery(PhysicalPlan plan) {\n     }\n   }\n \n+\n+  public TSStatus validatePlan(PhysicalPlan plan) {\n+    TSStatus result = StatusUtils.OK;\n+    if (plan instanceof SetStorageGroupPlan) {\n+      return validateSetStorageGroupPlan((SetStorageGroupPlan) plan);\n+    } else if (plan instanceof InsertPlan) {\n+      return validateInsertPlan((InsertPlan) plan);\n+    }\n+    // TODO add more pre-validations\n+    return result;\n+  }\n+\n+  private TSStatus validateSetStorageGroupPlan(SetStorageGroupPlan plan) {\n+    String path = plan.getPath().getFullPath();\n+    if (getAllStorageGroupNames().contains(path)) {\n+      return StatusUtils.PATH_ALREADY_EXIST_ERROR;\n+    }\n+    return StatusUtils.OK;\n+  }\n+\n+  private TSStatus validateInsertPlan(InsertPlan plan) {\n+    List<Path> paths = (plan).getPaths();\n+    String[] values = (plan).getValues();\n+    List<String> pathStrings = new ArrayList<>();\n+    for (Path path : paths) {\n+      pathStrings.add(path.getFullPath());\n+    }\n+    List<MeasurementSchema> measurementSchemas;\n+    try {\n+      measurementSchemas = pullTimeSeriesSchemas(pathStrings);", "originalCommit": "379b2f29337c79fb94a09b3031d912a104b5ebf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4ODY0Mw==", "url": "https://github.com/apache/iotdb/pull/1230#discussion_r429988643", "bodyText": "The schema cache can help to accelerate the validations. Thanks for your suggestions.", "author": "Ring-k", "createdAt": "2020-05-25T15:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1OTU4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MDI5MQ==", "url": "https://github.com/apache/iotdb/pull/1230#discussion_r429860291", "bodyText": "We have defined these strings in SQLConstants, better to use them. And maybe you can use equalsIgnoreCase to increase robustness.", "author": "jt2594838", "createdAt": "2020-05-25T10:25:59Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1397,6 +1401,91 @@ public TSStatus executeNonQuery(PhysicalPlan plan) {\n     }\n   }\n \n+\n+  public TSStatus validatePlan(PhysicalPlan plan) {\n+    TSStatus result = StatusUtils.OK;\n+    if (plan instanceof SetStorageGroupPlan) {\n+      return validateSetStorageGroupPlan((SetStorageGroupPlan) plan);\n+    } else if (plan instanceof InsertPlan) {\n+      return validateInsertPlan((InsertPlan) plan);\n+    }\n+    // TODO add more pre-validations\n+    return result;\n+  }\n+\n+  private TSStatus validateSetStorageGroupPlan(SetStorageGroupPlan plan) {\n+    String path = plan.getPath().getFullPath();\n+    if (getAllStorageGroupNames().contains(path)) {\n+      return StatusUtils.PATH_ALREADY_EXIST_ERROR;\n+    }\n+    return StatusUtils.OK;\n+  }\n+\n+  private TSStatus validateInsertPlan(InsertPlan plan) {\n+    List<Path> paths = (plan).getPaths();\n+    String[] values = (plan).getValues();\n+    List<String> pathStrings = new ArrayList<>();\n+    for (Path path : paths) {\n+      pathStrings.add(path.getFullPath());\n+    }\n+    List<MeasurementSchema> measurementSchemas;\n+    try {\n+      measurementSchemas = pullTimeSeriesSchemas(pathStrings);\n+    } catch (MetadataException e) {\n+      return StatusUtils.NO_STORAGE_GROUP;\n+    }\n+    for (int i = 0; i < paths.size(); i++) {\n+      String measurement = paths.get(i).getMeasurement();\n+      String value = values[i];\n+      TSStatus result = null;\n+      for (MeasurementSchema schema : measurementSchemas) {\n+        if (schema.getMeasurementId().equals(measurement)) {\n+          try {\n+            tryParse(value, schema.getType());\n+            result = StatusUtils.OK;\n+          } catch (IllegalArgumentException e) {\n+            result = new TSStatus(StatusUtils.WRITE_PROCESS_ERROR.getCode());\n+            result.setMessage(StatusUtils.WRITE_PROCESS_ERROR.getMessage() + e.getMessage());\n+            return result;\n+          }\n+          break;\n+        }\n+      }\n+      if (result == null) {\n+        return StatusUtils.PATH_NOT_EXIST_ERROR;\n+      }\n+    }\n+    return StatusUtils.OK;\n+  }\n+\n+\n+  private void tryParse(String value, TSDataType type) {\n+    switch (type) {\n+      case INT32:\n+        Integer.parseInt(value);\n+        break;\n+      case INT64:\n+        Long.parseLong(value);\n+        break;\n+      case BOOLEAN:\n+        if (!(value.equals(\"true\") || value.equals(\"TRUE\")\n+            || value.equals(\"false\") || value.equals(\"FALSE\")\n+            || value.equals(\"0\") || value.equals(\"1\"))) {", "originalCommit": "379b2f29337c79fb94a09b3031d912a104b5ebf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5MzM0Ng==", "url": "https://github.com/apache/iotdb/pull/1230#discussion_r429993346", "bodyText": "Oh, I didn't notice that. That's convenient. Thanks for your suggestion :)", "author": "Ring-k", "createdAt": "2020-05-25T15:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MDI5MQ=="}], "type": "inlineReview"}, {"oid": "86215258658505723447909017820feb6a5422ff", "url": "https://github.com/apache/iotdb/commit/86215258658505723447909017820feb6a5422ff", "message": "path cannot be root", "committedDate": "2020-05-25T14:32:09Z", "type": "commit"}, {"oid": "6996c9bea87e362dd6dfac93881d06a4574cea7f", "url": "https://github.com/apache/iotdb/commit/6996c9bea87e362dd6dfac93881d06a4574cea7f", "message": "check schema cache", "committedDate": "2020-05-25T15:20:49Z", "type": "commit"}, {"oid": "3e0ef92342ef2dbbd4e63ded0ff9f80d06ed1b26", "url": "https://github.com/apache/iotdb/commit/3e0ef92342ef2dbbd4e63ded0ff9f80d06ed1b26", "message": "use sql constant", "committedDate": "2020-05-25T15:32:19Z", "type": "commit"}]}