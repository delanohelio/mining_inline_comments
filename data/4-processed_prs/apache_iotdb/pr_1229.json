{"pr_number": 1229, "pr_title": "[IOTDB-615] Use binary rather than string in insert plan", "pr_createdAt": "2020-05-20T01:03:37Z", "pr_url": "https://github.com/apache/iotdb/pull/1229", "timeline": [{"oid": "ce841efcec562edcd80c30fbf8361f892be0dbf0", "url": "https://github.com/apache/iotdb/commit/ce841efcec562edcd80c30fbf8361f892be0dbf0", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-05T02:16:06Z", "type": "commit"}, {"oid": "c82abe4d67253a889a4dedbe18bf28bd9b62b921", "url": "https://github.com/apache/iotdb/commit/c82abe4d67253a889a4dedbe18bf28bd9b62b921", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-11T01:32:18Z", "type": "commit"}, {"oid": "202e7fa8b36d8487e6a7b1f9b641786608c2891b", "url": "https://github.com/apache/iotdb/commit/202e7fa8b36d8487e6a7b1f9b641786608c2891b", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-17T01:19:37Z", "type": "commit"}, {"oid": "610082b233713e76f2a8067724cb7dc3de60938e", "url": "https://github.com/apache/iotdb/commit/610082b233713e76f2a8067724cb7dc3de60938e", "message": "add time partition when recovery", "committedDate": "2020-02-17T02:20:25Z", "type": "commit"}, {"oid": "829e6a883704bdbe0e6dcc34a6b3cdca4fd83ce4", "url": "https://github.com/apache/iotdb/commit/829e6a883704bdbe0e6dcc34a6b3cdca4fd83ce4", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-19T11:55:08Z", "type": "commit"}, {"oid": "890566ed46eef36c6b2be09fc9bfa634f6c166bf", "url": "https://github.com/apache/iotdb/commit/890566ed46eef36c6b2be09fc9bfa634f6c166bf", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-26T08:23:14Z", "type": "commit"}, {"oid": "45d9323493116511f1f2aeb5ce0d1707c4dc2ea6", "url": "https://github.com/apache/iotdb/commit/45d9323493116511f1f2aeb5ce0d1707c4dc2ea6", "message": "merge", "committedDate": "2020-03-27T10:45:03Z", "type": "commit"}, {"oid": "2f0465a32097202eda3422ab4bb7b362c6169f5c", "url": "https://github.com/apache/iotdb/commit/2f0465a32097202eda3422ab4bb7b362c6169f5c", "message": "fix deletion bug", "committedDate": "2020-03-27T10:45:59Z", "type": "commit"}, {"oid": "693832e459d59baa365301dbbf6868eb8d7b6ab7", "url": "https://github.com/apache/iotdb/commit/693832e459d59baa365301dbbf6868eb8d7b6ab7", "message": "Revert \"fix deletion bug\"\n\nThis reverts commit 2f0465a32097202eda3422ab4bb7b362c6169f5c.", "committedDate": "2020-03-27T10:47:27Z", "type": "commit"}, {"oid": "275fe1816f1a7fa88f439af7ee3960730abd3a56", "url": "https://github.com/apache/iotdb/commit/275fe1816f1a7fa88f439af7ee3960730abd3a56", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-04-23T02:37:13Z", "type": "commit"}, {"oid": "d4b3ed687b3c2c9b0a995ec442cd0371708992d9", "url": "https://github.com/apache/iotdb/commit/d4b3ed687b3c2c9b0a995ec442cd0371708992d9", "message": "init", "committedDate": "2020-04-23T05:44:46Z", "type": "commit"}, {"oid": "d4a408ba849f53a4a01e551613a1818b40e73eb6", "url": "https://github.com/apache/iotdb/commit/d4a408ba849f53a4a01e551613a1818b40e73eb6", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into IOTDB-615-Use-binary-rather-than-string-in-insert-plan\n\n# Conflicts:\n#\texample/session/src/main/java/org/apache/iotdb/SessionExample.java\n#\tserver/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java\n#\tserver/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java\n#\tservice-rpc/rpc-changelist.md\n#\tsession/src/main/java/org/apache/iotdb/session/Session.java\n#\tsession/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n#\tsession/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n#\tsession/src/test/java/org/apache/iotdb/session/pool/SessionPoolTest.java", "committedDate": "2020-05-05T13:51:44Z", "type": "commit"}, {"oid": "f4b19f8fd1d2f5562048bab855ff7752a451ed4a", "url": "https://github.com/apache/iotdb/commit/f4b19f8fd1d2f5562048bab855ff7752a451ed4a", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into IOTDB-615-Use-binary-rather-than-string-in-insert-plan\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java\n#\tsession/src/main/java/org/apache/iotdb/session/Session.java\n#\tsession/src/test/java/org/apache/iotdb/session/pool/SessionPoolTest.java", "committedDate": "2020-05-15T01:38:30Z", "type": "commit"}, {"oid": "47784f2acb0c05132b15dec766d0ef66263ca15c", "url": "https://github.com/apache/iotdb/commit/47784f2acb0c05132b15dec766d0ef66263ca15c", "message": "add comment", "committedDate": "2020-05-15T12:02:16Z", "type": "commit"}, {"oid": "52bbbba0fd796e19d62bfc3c442722c8170f4d11", "url": "https://github.com/apache/iotdb/commit/52bbbba0fd796e19d62bfc3c442722c8170f4d11", "message": "merge", "committedDate": "2020-05-18T01:05:39Z", "type": "commit"}, {"oid": "6c30b3bd28c1cbfe68adbc0037cc2b72d6dba71f", "url": "https://github.com/apache/iotdb/commit/6c30b3bd28c1cbfe68adbc0037cc2b72d6dba71f", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into IOTDB-615-Use-binary-rather-than-string-in-insert-plan", "committedDate": "2020-05-18T13:02:38Z", "type": "commit"}, {"oid": "13a850ab6955663cc114392a556ae85781046797", "url": "https://github.com/apache/iotdb/commit/13a850ab6955663cc114392a556ae85781046797", "message": "merge", "committedDate": "2020-05-19T07:51:59Z", "type": "commit"}, {"oid": "0ebcea9aeca97e5abad268fbc080e744f19d803c", "url": "https://github.com/apache/iotdb/commit/0ebcea9aeca97e5abad268fbc080e744f19d803c", "message": "fix bugs", "committedDate": "2020-05-19T08:13:43Z", "type": "commit"}, {"oid": "ca082e7bd5e2b3a072119f89307ea681f84310d6", "url": "https://github.com/apache/iotdb/commit/ca082e7bd5e2b3a072119f89307ea681f84310d6", "message": "fix example", "committedDate": "2020-05-19T16:48:53Z", "type": "commit"}, {"oid": "5a3fc4ebc256700492e6f4860bd890cda5801bb4", "url": "https://github.com/apache/iotdb/commit/5a3fc4ebc256700492e6f4860bd890cda5801bb4", "message": "fix bugs", "committedDate": "2020-05-19T17:18:31Z", "type": "commit"}, {"oid": "783fa4f9940a6d48946f4806a36186fa0dd4d510", "url": "https://github.com/apache/iotdb/commit/783fa4f9940a6d48946f4806a36186fa0dd4d510", "message": "fix bug", "committedDate": "2020-05-20T00:22:43Z", "type": "commit"}, {"oid": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "url": "https://github.com/apache/iotdb/commit/a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "message": "merge", "committedDate": "2020-05-20T01:11:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1OTk3Nw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427759977", "bodyText": "The format of message is changed, the example data should also be changed\nexample/rocketmq/src/main/java/org/apache/iotdb/rocketmq/Constant.java", "author": "qiaojialin", "createdAt": "2020-05-20T06:02:43Z", "path": "example/rocketmq/src/main/java/org/apache/iotdb/rocketmq/RocketMQConsumer.java", "diffHunk": "@@ -89,8 +90,37 @@ private void insert(String data) throws IoTDBConnectionException, StatementExecu\n     String device = dataArray[0];\n     long time = Long.parseLong(dataArray[1]);\n     List<String> measurements = Arrays.asList(dataArray[2].split(\":\"));\n-    List<String> values = Arrays.asList(dataArray[3].split(\":\"));\n-    session.insertRecord(device, time, measurements, values);\n+    List<TSDataType> types = new ArrayList<>();", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NjA0OQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427796049", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc1OTk3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MDI2Mw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427760263", "bodyText": "remove this", "author": "qiaojialin", "createdAt": "2020-05-20T06:03:32Z", "path": "service-rpc/rpc-changelist.md", "diffHunk": "@@ -121,3 +121,35 @@ Last Updated on 2019-10-27 by Lei Rui.\n | Add required i64 statementId in TSExecuteStatementReq        | Yuan Tian |\n | Add required binary time, required list<binary> valueList, required list<binary> bitmapList and remove required binary values, required i32 rowCount in TSQueryDataSet| Yuan Tian |\n | Add optional i32 fetchSize in TSExecuteStatementReq,<br />Add optional TSQueryDataSet in TSExecuteStatementResp| liutaohua |\n+<<<<<<< HEAD", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NjAzMQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427796031", "bodyText": "Sure~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MDI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjMzMQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427766331", "bodyText": "Could we refer type from values.class and omit this types", "author": "qiaojialin", "createdAt": "2020-05-20T06:20:50Z", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -215,66 +218,29 @@ private boolean reconnect() {\n   }\n \n   /**\n-   * insert data in one row, if you want to improve your performance, please use insertRecords method\n-   * or insertTablet method\n+   * insert data in one row, if you want to improve your performance, please use insertRecords\n+   * method or insertTablet method\n    *\n-   * @see Session#insertRecords(List, List, List, List)\n+   * @see Session#insertRecords(List, List, List, List, List)\n    * @see Session#insertTablet(Tablet)\n    */\n   public void insertRecord(String deviceId, long time, List<String> measurements,\n+      List<TSDataType> types,", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NjAxNw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427796017", "bodyText": "If user uses wrong type, we will fall at server end. I think we need fall at client to follow the \"fall quickly\" principle.", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjcyOA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427766728", "bodyText": "we'd better add back the List values interface", "author": "qiaojialin", "createdAt": "2020-05-20T06:21:54Z", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -215,66 +218,29 @@ private boolean reconnect() {\n   }\n \n   /**\n-   * insert data in one row, if you want to improve your performance, please use insertRecords method\n-   * or insertTablet method\n+   * insert data in one row, if you want to improve your performance, please use insertRecords\n+   * method or insertTablet method\n    *\n-   * @see Session#insertRecords(List, List, List, List)\n+   * @see Session#insertRecords(List, List, List, List, List)\n    * @see Session#insertTablet(Tablet)\n    */\n   public void insertRecord(String deviceId, long time, List<String> measurements,\n+      List<TSDataType> types,\n       Object... values) throws IoTDBConnectionException, StatementExecutionException {\n-    List<String> stringValues = new ArrayList<>();\n-    for (Object o : values) {\n-      stringValues.add(o.toString());\n-    }\n+    List<Object> valuesList = new ArrayList<>(Arrays.asList(values));\n \n-    insertRecord(deviceId, time, measurements, stringValues);\n+    insertRecord(deviceId, time, measurements, types, valuesList);\n   }\n \n-  /**\n-   * insert data in one row, if you want to improve your performance, please use insertRecords method\n-   * or insertTablet method\n-   *\n-   * @see Session#insertRecords(List, List, List, List)\n-   * @see Session#insertTablet(Tablet)\n-   */\n-  public void insertRecord(String deviceId, long time, List<String> measurements,", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NjAwNA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427796004", "bodyText": "Thanks~ Could you give a function signature here?", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjU3Nw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r431576577", "bodyText": "public void insertRecord(String deviceId, long time, List measurements, List values)", "author": "qiaojialin", "createdAt": "2020-05-28T04:36:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2Njg3Nw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427766877", "bodyText": "Why not use List directly", "author": "qiaojialin", "createdAt": "2020-05-20T06:22:18Z", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -215,66 +218,29 @@ private boolean reconnect() {\n   }\n \n   /**\n-   * insert data in one row, if you want to improve your performance, please use insertRecords method\n-   * or insertTablet method\n+   * insert data in one row, if you want to improve your performance, please use insertRecords\n+   * method or insertTablet method\n    *\n-   * @see Session#insertRecords(List, List, List, List)\n+   * @see Session#insertRecords(List, List, List, List, List)\n    * @see Session#insertTablet(Tablet)\n    */\n   public void insertRecord(String deviceId, long time, List<String> measurements,\n+      List<TSDataType> types,\n       Object... values) throws IoTDBConnectionException, StatementExecutionException {", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTk5NQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795995", "bodyText": "This method is add for some client using dynamic parameter. You can refer to https://issues.apache.org/jira/projects/IOTDB/issues/IOTDB-442?filter=allissues", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2Njg3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2Njk0NQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427766945", "bodyText": "format back", "author": "qiaojialin", "createdAt": "2020-05-20T06:22:29Z", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -215,66 +218,29 @@ private boolean reconnect() {\n   }\n \n   /**\n-   * insert data in one row, if you want to improve your performance, please use insertRecords method\n-   * or insertTablet method\n+   * insert data in one row, if you want to improve your performance, please use insertRecords\n+   * method or insertTablet method\n    *\n-   * @see Session#insertRecords(List, List, List, List)\n+   * @see Session#insertRecords(List, List, List, List, List)\n    * @see Session#insertTablet(Tablet)\n    */\n   public void insertRecord(String deviceId, long time, List<String> measurements,\n+      List<TSDataType> types,\n       Object... values) throws IoTDBConnectionException, StatementExecutionException {\n-    List<String> stringValues = new ArrayList<>();\n-    for (Object o : values) {\n-      stringValues.add(o.toString());\n-    }\n+    List<Object> valuesList = new ArrayList<>(Arrays.asList(values));\n \n-    insertRecord(deviceId, time, measurements, stringValues);\n+    insertRecord(deviceId, time, measurements, types, valuesList);\n   }\n \n-  /**\n-   * insert data in one row, if you want to improve your performance, please use insertRecords method\n-   * or insertTablet method\n-   *\n-   * @see Session#insertRecords(List, List, List, List)\n-   * @see Session#insertTablet(Tablet)\n-   */\n-  public void insertRecord(String deviceId, long time, List<String> measurements,\n-      List<String> values) throws IoTDBConnectionException, StatementExecutionException {\n-    TSInsertRecordReq request = new TSInsertRecordReq();\n-    request.setSessionId(sessionId);\n-    request.setDeviceId(deviceId);\n-    request.setTimestamp(time);\n-    request.setMeasurements(measurements);\n-    request.setValues(values);\n-\n-    try {\n-      RpcUtils.verifySuccess(client.insertRecord(request));\n-    } catch (TException e) {\n-      if (reconnect()) {\n-        try {\n-          RpcUtils.verifySuccess(client.insertRecord(request));\n-        } catch (TException e1) {\n-          throw new IoTDBConnectionException(e1);\n-        }\n-      } else {\n-        throw new IoTDBConnectionException(\"Fail to reconnect to server,\"\n-            + \" please check server status\", e);\n-      }\n-    }\n-  }\n \n \n   /**\n    * insert the data of a device. For each timestamp, the number of measurements is the same.\n-   *\n-   *  a Tablet example:\n-   *\n-   *        device1\n-   *     time s1, s2, s3\n-   *     1,   1,  1,  1\n-   *     2,   2,  2,  2\n-   *     3,   3,  3,  3\n-   *\n+   * <p>\n+   * a Tablet example:\n+   * <p>\n+   * device1 time s1, s2, s3 1,   1,  1,  1 2,   2,  2,  2 3,   3,  3,  3\n+   * <p>", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTk3Mg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795972", "bodyText": "Sure~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2Njk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NzM4Mg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427767382", "bodyText": "We could provide two types of interfaces:\nList<TSDataType> + List<String>\nor\nList<Object>", "author": "qiaojialin", "createdAt": "2020-05-20T06:23:36Z", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -393,16 +359,17 @@ public void insertTablets(Map<String, Tablet> tablets, boolean sorted)\n   }\n \n   /**\n-   * Insert multiple rows, which can reduce the overhead of network. This method is just like\n-   * jdbc executeBatch, we pack some insert request in batch and send them to server.\n-   * If you want improve your performance, please see insertTablet method\n-   *\n+   * Insert multiple rows, which can reduce the overhead of network. This method is just like jdbc\n+   * executeBatch, we pack some insert request in batch and send them to server. If you want improve\n+   * your performance, please see insertTablet method\n+   * <p>\n    * Each row is independent, which could have different deviceId, time, number of measurements\n    *\n    * @see Session#insertTablet(Tablet)\n    */\n   public void insertRecords(List<String> deviceIds, List<Long> times,\n-      List<List<String>> measurementsList, List<List<String>> valuesList)\n+      List<List<String>> measurementsList, List<List<TSDataType>> typesList,\n+      List<List<Object>> valuesList)", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTk2MA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795960", "bodyText": "If user uses wrong type, we will fall at server end. I think we need fall at client to follow the \"fall quickly\" principle.", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NzM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3MDk0Nw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427770947", "bodyText": "no need to construct a Binary, s.getBytes(TSFileConfig.STRING_CHARSET) is ok", "author": "qiaojialin", "createdAt": "2020-05-20T06:32:45Z", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -434,26 +408,103 @@ public void insertRecords(List<String> deviceIds, List<Long> times,\n     }\n   }\n \n+\n   /**\n-   * This method NOT insert data into database and the server just return after accept the request,\n-   * this method should be used to test other time cost in client\n+   * insert data in one row, if you want improve your performance, please use insertInBatch method\n+   * or insertBatch method\n+   *\n+   * @see Session#insertRecords(List, List, List, List, List)\n+   * @see Session#insertTablet(Tablet)\n    */\n-  public void testInsertRecord(String deviceId, long time, List<String> measurements,\n-      List<String> values) throws IoTDBConnectionException, StatementExecutionException {\n+  public void insertRecord(String deviceId, long time, List<String> measurements,\n+      List<TSDataType> types,\n+      List<Object> values) throws IoTDBConnectionException, StatementExecutionException {\n     TSInsertRecordReq request = new TSInsertRecordReq();\n     request.setSessionId(sessionId);\n     request.setDeviceId(deviceId);\n     request.setTimestamp(time);\n     request.setMeasurements(measurements);\n-    request.setValues(values);\n+    ByteBuffer buffer = ByteBuffer.allocate(calculateLength(types, values));\n+    putValues(types, values, buffer);\n+    buffer.flip();\n+    request.setValues(buffer);\n \n     try {\n-      RpcUtils.verifySuccess(client.testInsertRecord(request));\n+      RpcUtils.verifySuccess(client.insertRecord(request));\n     } catch (TException e) {\n       throw new IoTDBConnectionException(e);\n     }\n   }\n \n+  /**\n+   * put value in buffer\n+   * @param types types list\n+   * @param values values list\n+   * @param buffer buffer to insert\n+   * @throws IoTDBConnectionException\n+   */\n+  private void putValues(List<TSDataType> types, List<Object> values, ByteBuffer buffer)\n+      throws IoTDBConnectionException {\n+    for (int i = 0; i < values.size(); i++) {\n+      ReadWriteIOUtils.write(types.get(i), buffer);\n+      switch (types.get(i)) {\n+        case BOOLEAN:\n+          ReadWriteIOUtils.write((Boolean) values.get(i), buffer);\n+          break;\n+        case INT32:\n+          ReadWriteIOUtils.write((Integer) values.get(i), buffer);\n+          break;\n+        case INT64:\n+          ReadWriteIOUtils.write((Long) values.get(i), buffer);\n+          break;\n+        case FLOAT:\n+          ReadWriteIOUtils.write((Float) values.get(i), buffer);\n+          break;\n+        case DOUBLE:\n+          ReadWriteIOUtils.write((Double) values.get(i), buffer);\n+          break;\n+        case TEXT:\n+          ReadWriteIOUtils.write(new Binary((String) values.get(i)), buffer);", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgwMDkwMQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427800901", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:36:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3MDk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NTY5OQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427775699", "bodyText": "add an error status for this line", "author": "qiaojialin", "createdAt": "2020-05-20T06:44:21Z", "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -1066,15 +1066,22 @@ public TSExecuteBatchStatementResp insertRecords(TSInsertRecordsReq req) {\n \n     InsertPlan plan = new InsertPlan();\n     for (int i = 0; i < req.deviceIds.size(); i++) {\n-      plan.setDeviceId(req.getDeviceIds().get(i));\n-      plan.setTime(req.getTimestamps().get(i));\n-      plan.setMeasurements(req.getMeasurementsList().get(i).toArray(new String[0]));\n-      plan.setValues(req.getValuesList().get(i).toArray(new String[0]));\n-      TSStatus status = checkAuthority(plan, req.getSessionId());\n-      if (status != null) {\n-        resp.addToStatusList(status);\n-      } else {\n-        resp.addToStatusList(executePlan(plan));\n+      try {\n+        plan.setDeviceId(req.getDeviceIds().get(i));\n+        plan.setTime(req.getTimestamps().get(i));\n+        plan.setMeasurements(req.getMeasurementsList().get(i).toArray(new String[0]));\n+        plan.setTypes(new TSDataType[plan.getMeasurements().length]);\n+        plan.setValues(new Object[plan.getMeasurements().length]);\n+        plan.getValues(req.valuesList.get(i));\n+        TSStatus status = checkAuthority(plan, req.getSessionId());\n+        if (status != null) {\n+          resp.addToStatusList(status);\n+        } else {\n+          resp.addToStatusList(executePlan(plan));\n+        }\n+      }\n+      catch (Exception e) {\n+        logger.error(\"meet error when insert in batch\", e);", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzQ1MQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427797451", "bodyText": "The status has been set to the resp at\nresp.addToStatusList(executePlan(plan));", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NTY5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NzIwOA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427777208", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  plan.getValues(req.values);\n          \n          \n            \n                  plan.setValues(req.values);", "author": "qiaojialin", "createdAt": "2020-05-20T06:47:50Z", "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -1111,7 +1118,9 @@ public TSStatus insertRecord(TSInsertRecordReq req) {\n       plan.setDeviceId(req.getDeviceId());\n       plan.setTime(req.getTimestamp());\n       plan.setMeasurements(req.getMeasurements().toArray(new String[0]));\n-      plan.setValues(req.getValues().toArray(new String[0]));\n+      plan.setTypes(new TSDataType[plan.getMeasurements().length]);\n+      plan.setValues(new Object[plan.getMeasurements().length]);\n+      plan.getValues(req.values);", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTkwMQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795901", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NzIwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NzYzNg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427777636", "bodyText": "setValues", "author": "qiaojialin", "createdAt": "2020-05-20T06:48:55Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/InsertPlan.java", "diffHunk": "@@ -174,8 +234,102 @@ public void serializeTo(DataOutputStream stream) throws IOException {\n       schema.serializeTo(stream);\n     }\n \n-    for (String m : values) {\n-      putString(stream, m);\n+    try {\n+      putValues(stream);\n+    } catch (QueryProcessException e) {\n+      throw new IOException(e);\n+    }\n+  }\n+\n+  private void putValues(DataOutputStream outputStream) throws QueryProcessException, IOException {\n+    for (int i = 0; i < values.length; i++) {\n+      ReadWriteIOUtils.write(types[i], outputStream);\n+      switch (types[i]) {\n+        case BOOLEAN:\n+          ReadWriteIOUtils.write((Boolean) values[i], outputStream);\n+          break;\n+        case INT32:\n+          ReadWriteIOUtils.write((Integer) values[i], outputStream);\n+          break;\n+        case INT64:\n+          ReadWriteIOUtils.write((Long) values[i], outputStream);\n+          break;\n+        case FLOAT:\n+          ReadWriteIOUtils.write((Float) values[i], outputStream);\n+          break;\n+        case DOUBLE:\n+          ReadWriteIOUtils.write((Double) values[i], outputStream);\n+          break;\n+        case TEXT:\n+          ReadWriteIOUtils.write((Binary) values[i], outputStream);\n+          break;\n+        default:\n+          throw new QueryProcessException(\"Unsupported data type:\" + types[i]);\n+      }\n+    }\n+  }\n+\n+  private void putValues(ByteBuffer buffer) throws QueryProcessException {\n+    for (int i = 0; i < values.length; i++) {\n+      ReadWriteIOUtils.write(types[i], buffer);\n+      switch (types[i]) {\n+        case BOOLEAN:\n+          ReadWriteIOUtils.write((Boolean) values[i], buffer);\n+          break;\n+        case INT32:\n+          ReadWriteIOUtils.write((Integer) values[i], buffer);\n+          break;\n+        case INT64:\n+          ReadWriteIOUtils.write((Long) values[i], buffer);\n+          break;\n+        case FLOAT:\n+          ReadWriteIOUtils.write((Float) values[i], buffer);\n+          break;\n+        case DOUBLE:\n+          ReadWriteIOUtils.write((Double) values[i], buffer);\n+          break;\n+        case TEXT:\n+          ReadWriteIOUtils.write((Binary) values[i], buffer);\n+          break;\n+        default:\n+          throw new QueryProcessException(\"Unsupported data type:\" + types[i]);\n+      }\n+    }\n+  }\n+\n+  public TSDataType[] getTypes() {\n+    return types;\n+  }\n+\n+  public void setTypes(TSDataType[] types) {\n+    this.types = types;\n+  }\n+\n+  public void getValues(ByteBuffer buffer) throws QueryProcessException {", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTg5Ng==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795896", "bodyText": "Sure~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NzYzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTYzMg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427781632", "bodyText": "remove this", "author": "qiaojialin", "createdAt": "2020-05-20T06:57:50Z", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -168,32 +178,47 @@ private static void insertRecords() throws IoTDBConnectionException, BatchExecut\n     measurements.add(\"s3\");\n     List<String> deviceIds = new ArrayList<>();\n     List<List<String>> measurementsList = new ArrayList<>();\n-    List<List<String>> valuesList = new ArrayList<>();\n+    List<List<Object>> valuesList = new ArrayList<>();\n     List<Long> timestamps = new ArrayList<>();\n+    List<List<TSDataType>> typesList = new ArrayList<>();\n \n     for (long time = 0; time < 500; time++) {\n-      List<String> values = new ArrayList<>();\n-      values.add(\"1\");\n-      values.add(\"2\");\n-      values.add(\"3\");\n+      List<Object> values = new ArrayList<>();\n+      List<TSDataType> types = new ArrayList<>();\n+      values.add(1L);\n+      values.add(2L);\n+      values.add(3L);\n+      types.add(TSDataType.INT64);\n+      types.add(TSDataType.INT64);\n+      types.add(TSDataType.INT64);\n \n       deviceIds.add(deviceId);\n       measurementsList.add(measurements);\n       valuesList.add(values);\n+      typesList.add(types);\n       timestamps.add(time);\n       if (time != 0 && time % 100 == 0) {\n-        session.insertRecords(deviceIds, timestamps, measurementsList, valuesList);\n+        session.insertRecords(deviceIds, timestamps, measurementsList, typesList, valuesList);\n         deviceIds.clear();\n         measurementsList.clear();\n         valuesList.clear();\n         timestamps.clear();\n       }\n     }\n \n-    session.insertRecords(deviceIds, timestamps, measurementsList, valuesList);\n+    session.insertRecords(deviceIds, timestamps, measurementsList, typesList, valuesList);\n   }\n-\n   /**\n+<<<<<<< HEAD", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTg4Mg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795882", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTYzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTcxOQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427781719", "bodyText": "remove", "author": "qiaojialin", "createdAt": "2020-05-20T06:58:01Z", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -205,6 +230,7 @@ private static void insertRecords() throws IoTDBConnectionException, BatchExecut\n    * 3,   3,  3,  3\n    *\n    * Users need to control the count of Tablet and write a batch when it reaches the maxBatchSize\n+>>>>>>> 73dd5eb6e44e2194b650eea72aabcfaf929e5bdc", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTg2OA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795868", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTcxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTc1NQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427781755", "bodyText": "remove", "author": "qiaojialin", "createdAt": "2020-05-20T06:58:05Z", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -168,32 +178,47 @@ private static void insertRecords() throws IoTDBConnectionException, BatchExecut\n     measurements.add(\"s3\");\n     List<String> deviceIds = new ArrayList<>();\n     List<List<String>> measurementsList = new ArrayList<>();\n-    List<List<String>> valuesList = new ArrayList<>();\n+    List<List<Object>> valuesList = new ArrayList<>();\n     List<Long> timestamps = new ArrayList<>();\n+    List<List<TSDataType>> typesList = new ArrayList<>();\n \n     for (long time = 0; time < 500; time++) {\n-      List<String> values = new ArrayList<>();\n-      values.add(\"1\");\n-      values.add(\"2\");\n-      values.add(\"3\");\n+      List<Object> values = new ArrayList<>();\n+      List<TSDataType> types = new ArrayList<>();\n+      values.add(1L);\n+      values.add(2L);\n+      values.add(3L);\n+      types.add(TSDataType.INT64);\n+      types.add(TSDataType.INT64);\n+      types.add(TSDataType.INT64);\n \n       deviceIds.add(deviceId);\n       measurementsList.add(measurements);\n       valuesList.add(values);\n+      typesList.add(types);\n       timestamps.add(time);\n       if (time != 0 && time % 100 == 0) {\n-        session.insertRecords(deviceIds, timestamps, measurementsList, valuesList);\n+        session.insertRecords(deviceIds, timestamps, measurementsList, typesList, valuesList);\n         deviceIds.clear();\n         measurementsList.clear();\n         valuesList.clear();\n         timestamps.clear();\n       }\n     }\n \n-    session.insertRecords(deviceIds, timestamps, measurementsList, valuesList);\n+    session.insertRecords(deviceIds, timestamps, measurementsList, typesList, valuesList);\n   }\n-\n   /**\n+<<<<<<< HEAD\n+   * insert a batch data of one device, each batch contains multiple timestamps with values of\n+   * sensors\n+   * <p>\n+   * a RowBatch example:\n+   * <p>\n+   * device1 time s1, s2, s3 1,   1,  1,  1 2,   2,  2,  2 3,   3,  3,  3\n+   * <p>\n+   * Users need to control the count of RowBatch and write a batch when it reaches the maxBatchSize\n+=======", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTg1NQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795855", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTc1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTgyMA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427781820", "bodyText": "format to a table", "author": "qiaojialin", "createdAt": "2020-05-20T06:58:13Z", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -168,32 +178,47 @@ private static void insertRecords() throws IoTDBConnectionException, BatchExecut\n     measurements.add(\"s3\");\n     List<String> deviceIds = new ArrayList<>();\n     List<List<String>> measurementsList = new ArrayList<>();\n-    List<List<String>> valuesList = new ArrayList<>();\n+    List<List<Object>> valuesList = new ArrayList<>();\n     List<Long> timestamps = new ArrayList<>();\n+    List<List<TSDataType>> typesList = new ArrayList<>();\n \n     for (long time = 0; time < 500; time++) {\n-      List<String> values = new ArrayList<>();\n-      values.add(\"1\");\n-      values.add(\"2\");\n-      values.add(\"3\");\n+      List<Object> values = new ArrayList<>();\n+      List<TSDataType> types = new ArrayList<>();\n+      values.add(1L);\n+      values.add(2L);\n+      values.add(3L);\n+      types.add(TSDataType.INT64);\n+      types.add(TSDataType.INT64);\n+      types.add(TSDataType.INT64);\n \n       deviceIds.add(deviceId);\n       measurementsList.add(measurements);\n       valuesList.add(values);\n+      typesList.add(types);\n       timestamps.add(time);\n       if (time != 0 && time % 100 == 0) {\n-        session.insertRecords(deviceIds, timestamps, measurementsList, valuesList);\n+        session.insertRecords(deviceIds, timestamps, measurementsList, typesList, valuesList);\n         deviceIds.clear();\n         measurementsList.clear();\n         valuesList.clear();\n         timestamps.clear();\n       }\n     }\n \n-    session.insertRecords(deviceIds, timestamps, measurementsList, valuesList);\n+    session.insertRecords(deviceIds, timestamps, measurementsList, typesList, valuesList);\n   }\n-\n   /**\n+<<<<<<< HEAD\n+   * insert a batch data of one device, each batch contains multiple timestamps with values of\n+   * sensors\n+   * <p>\n+   * a RowBatch example:\n+   * <p>\n+   * device1 time s1, s2, s3 1,   1,  1,  1 2,   2,  2,  2 3,   3,  3,  3", "originalCommit": "a2f5001f8b8500473a04f5ea5b8b0bf32e979229", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NTg1MA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r427795850", "bodyText": "Fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-20T07:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4MTgyMA=="}], "type": "inlineReview"}, {"oid": "52d45f120fd136ebfc44198ee21a76687f7a0185", "url": "https://github.com/apache/iotdb/commit/52d45f120fd136ebfc44198ee21a76687f7a0185", "message": "fix bugs", "committedDate": "2020-05-20T07:37:09Z", "type": "commit"}, {"oid": "24d7335b638690c7a515e842b6054204698d54a6", "url": "https://github.com/apache/iotdb/commit/24d7335b638690c7a515e842b6054204698d54a6", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into IOTDB-615-Use-binary-rather-than-string-in-insert-plan", "committedDate": "2020-05-21T16:06:56Z", "type": "commit"}, {"oid": "29167994594ca888ee8ca9c766345f191b04454c", "url": "https://github.com/apache/iotdb/commit/29167994594ca888ee8ca9c766345f191b04454c", "message": "solve conflict", "committedDate": "2020-05-22T11:50:55Z", "type": "commit"}, {"oid": "0574d7a589870808ac690b35e6205d5a72b1c668", "url": "https://github.com/apache/iotdb/commit/0574d7a589870808ac690b35e6205d5a72b1c668", "message": "merge", "committedDate": "2020-05-24T01:50:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwMzkzNQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429703935", "bodyText": "I think this is a part of the out-of-date content. It's better to remove it.", "author": "HTHou", "createdAt": "2020-05-25T02:02:20Z", "path": "service-rpc/rpc-changelist.md", "diffHunk": "@@ -121,3 +121,34 @@ Last Updated on 2019-10-27 by Lei Rui.\n | Add required i64 statementId in TSExecuteStatementReq        | Yuan Tian |\n | Add required binary time, required list<binary> valueList, required list<binary> bitmapList and remove required binary values, required i32 rowCount in TSQueryDataSet| Yuan Tian |\n | Add optional i32 fetchSize in TSExecuteStatementReq,<br />Add optional TSQueryDataSet in TSExecuteStatementResp| liutaohua |\n+| Add optional map<string, string> props, optional map<string, string> tags, optional map<string, string> attributes and optional string aliasPath in TSCreateTimeseriesReq | Yuan Tian | \n+\n+\n+# 0.10.0 (version-1) -> version-2\n+\n+Last Updated on November 12th, 2019 by Tian Jiang.\n+\n+\n+## 1. Delete Old\n+\n+| Latest Changes                     | Related Committers |\n+| ---------------------------------- | ------------------ |\n+| Remove TS_SessionHandle,TSHandleIdentifier            | Tian Jiang         |\n+| Remove TSStatus,TSExecuteInsertRowInBatchResp            | Jialin Qiao|\n+\n+## 2. Add New\n+\n+| Latest Changes                                               | Related Committers                 |\n+| ------------------------------------------------------------ | ---------------------------------- |\n+| Add parameter sessionId in getTimeZone, getProperties, setStorageGroup, createTimeseries... | Tian Jiang|\n+| Add struct TSQueryNonAlignDataSet                            | Haonan Hou|\n+\n+## 3. Update\n+\n+| Latest Changes                                               | Related Committers     |\n+| ------------------------------------------------------------ | ---------------------- |\n+| Replace TS_SessionHandles with SessionIds, TSOperationHandle with queryIds  | Tian Jiang  |\n+| Add optional TSQueryNonAlignDataSet in TSExecuteStatementResp, TSFetchResultsResp and required bool isAlign in TSFetchResultsReq | Haonan Hou |\n+| Rename TSStatusType to TSStatus   | Jialin Qiao   |\n+| Remove sessionId in TSExecuteBatchStatementResp   | Jialin Qiao   |", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Mjc1NA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429772754", "bodyText": "Sure~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:25:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwMzkzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwNDM0OQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429704349", "bodyText": "Move the line 154 to line 53.", "author": "HTHou", "createdAt": "2020-05-25T02:05:08Z", "path": "service-rpc/rpc-changelist.md", "diffHunk": "@@ -121,3 +121,34 @@ Last Updated on 2019-10-27 by Lei Rui.\n | Add required i64 statementId in TSExecuteStatementReq        | Yuan Tian |\n | Add required binary time, required list<binary> valueList, required list<binary> bitmapList and remove required binary values, required i32 rowCount in TSQueryDataSet| Yuan Tian |\n | Add optional i32 fetchSize in TSExecuteStatementReq,<br />Add optional TSQueryDataSet in TSExecuteStatementResp| liutaohua |\n+| Add optional map<string, string> props, optional map<string, string> tags, optional map<string, string> attributes and optional string aliasPath in TSCreateTimeseriesReq | Yuan Tian | \n+\n+\n+# 0.10.0 (version-1) -> version-2\n+\n+Last Updated on November 12th, 2019 by Tian Jiang.\n+\n+\n+## 1. Delete Old\n+\n+| Latest Changes                     | Related Committers |\n+| ---------------------------------- | ------------------ |\n+| Remove TS_SessionHandle,TSHandleIdentifier            | Tian Jiang         |\n+| Remove TSStatus,TSExecuteInsertRowInBatchResp            | Jialin Qiao|\n+\n+## 2. Add New\n+\n+| Latest Changes                                               | Related Committers                 |\n+| ------------------------------------------------------------ | ---------------------------------- |\n+| Add parameter sessionId in getTimeZone, getProperties, setStorageGroup, createTimeseries... | Tian Jiang|\n+| Add struct TSQueryNonAlignDataSet                            | Haonan Hou|\n+\n+## 3. Update\n+\n+| Latest Changes                                               | Related Committers     |\n+| ------------------------------------------------------------ | ---------------------- |\n+| Replace TS_SessionHandles with SessionIds, TSOperationHandle with queryIds  | Tian Jiang  |\n+| Add optional TSQueryNonAlignDataSet in TSExecuteStatementResp, TSFetchResultsResp and required bool isAlign in TSFetchResultsReq | Haonan Hou |\n+| Rename TSStatusType to TSStatus   | Jialin Qiao   |\n+| Remove sessionId in TSExecuteBatchStatementResp   | Jialin Qiao   |\n+| Use TsDataType and binary rather than string in TSInsertInBatchReq and TSInsertReq  | Kaifeng Xue  |", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Mjc5Mg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429772792", "bodyText": "Sure~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwNDM0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODQxNg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429708416", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for(String type : dataArray[3].split(\":\")){\n          \n          \n            \n                for (String type : dataArray[3].split(\":\")) {", "author": "HTHou", "createdAt": "2020-05-25T02:29:40Z", "path": "example/rocketmq/src/main/java/org/apache/iotdb/rocketmq/RocketMQConsumer.java", "diffHunk": "@@ -89,8 +90,37 @@ private void insert(String data) throws IoTDBConnectionException, StatementExecu\n     String device = dataArray[0];\n     long time = Long.parseLong(dataArray[1]);\n     List<String> measurements = Arrays.asList(dataArray[2].split(\":\"));\n-    List<String> values = Arrays.asList(dataArray[3].split(\":\"));\n-    session.insertRecord(device, time, measurements, values);\n+    List<TSDataType> types = new ArrayList<>();\n+    for(String type : dataArray[3].split(\":\")){", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MzUyMQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429773521", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:26:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODUyOA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429708528", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for(int i = 0; i < valuesStr.length; i++){\n          \n          \n            \n                for (int i = 0; i < valuesStr.length; i++) {", "author": "HTHou", "createdAt": "2020-05-25T02:30:18Z", "path": "example/rocketmq/src/main/java/org/apache/iotdb/rocketmq/RocketMQConsumer.java", "diffHunk": "@@ -89,8 +90,37 @@ private void insert(String data) throws IoTDBConnectionException, StatementExecu\n     String device = dataArray[0];\n     long time = Long.parseLong(dataArray[1]);\n     List<String> measurements = Arrays.asList(dataArray[2].split(\":\"));\n-    List<String> values = Arrays.asList(dataArray[3].split(\":\"));\n-    session.insertRecord(device, time, measurements, values);\n+    List<TSDataType> types = new ArrayList<>();\n+    for(String type : dataArray[3].split(\":\")){\n+      types.add(TSDataType.valueOf(type));\n+    }\n+\n+    List<Object> values = new ArrayList<>();\n+    String[] valuesStr = dataArray[4].split(\":\");\n+    for(int i = 0; i < valuesStr.length; i++){", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MzU3MQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429773571", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODUyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODU1OQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429708559", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  switch (types.get(i)){\n          \n          \n            \n                  switch (types.get(i)) {", "author": "HTHou", "createdAt": "2020-05-25T02:30:31Z", "path": "example/rocketmq/src/main/java/org/apache/iotdb/rocketmq/RocketMQConsumer.java", "diffHunk": "@@ -89,8 +90,37 @@ private void insert(String data) throws IoTDBConnectionException, StatementExecu\n     String device = dataArray[0];\n     long time = Long.parseLong(dataArray[1]);\n     List<String> measurements = Arrays.asList(dataArray[2].split(\":\"));\n-    List<String> values = Arrays.asList(dataArray[3].split(\":\"));\n-    session.insertRecord(device, time, measurements, values);\n+    List<TSDataType> types = new ArrayList<>();\n+    for(String type : dataArray[3].split(\":\")){\n+      types.add(TSDataType.valueOf(type));\n+    }\n+\n+    List<Object> values = new ArrayList<>();\n+    String[] valuesStr = dataArray[4].split(\":\");\n+    for(int i = 0; i < valuesStr.length; i++){\n+      switch (types.get(i)){", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MzYyNQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429773625", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODY4Mg==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429708682", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(String type : tuple.get(fieldTypes).split(separator)){\n          \n          \n            \n                    for (String type : tuple.get(fieldTypes).split(separator)) {", "author": "HTHou", "createdAt": "2020-05-25T02:31:15Z", "path": "flink-iotdb-connector/src/main/java/org/apache/iotdb/flink/DefaultIoTSerializationSchema.java", "diffHunk": "@@ -49,12 +52,37 @@ public Event serialize(Map<String,String> tuple) {\n             measurements = Arrays.asList(tuple.get(fieldMeasurements).split(separator));\n         }\n \n-        List<String> values = null;\n-        if (tuple.get(fieldValues) != null) {\n-            values = Arrays.asList(tuple.get(fieldValues).split(separator));\n+        List<TSDataType> types = new ArrayList<>();\n+        for(String type : tuple.get(fieldTypes).split(separator)){", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MzcwNQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429773705", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MzkxNA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429773914", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODY4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODc1MQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429708751", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(int i = 0; i < valuesStr.length; i++){\n          \n          \n            \n                    for (int i = 0; i < valuesStr.length; i++) {", "author": "HTHou", "createdAt": "2020-05-25T02:31:45Z", "path": "flink-iotdb-connector/src/main/java/org/apache/iotdb/flink/DefaultIoTSerializationSchema.java", "diffHunk": "@@ -49,12 +52,37 @@ public Event serialize(Map<String,String> tuple) {\n             measurements = Arrays.asList(tuple.get(fieldMeasurements).split(separator));\n         }\n \n-        List<String> values = null;\n-        if (tuple.get(fieldValues) != null) {\n-            values = Arrays.asList(tuple.get(fieldValues).split(separator));\n+        List<TSDataType> types = new ArrayList<>();\n+        for(String type : tuple.get(fieldTypes).split(separator)){\n+            types.add(TSDataType.valueOf(type));\n         }\n \n-        return new Event(device, timestamp, measurements, values);\n+        List<Object> values = new ArrayList<>();\n+        String[] valuesStr = tuple.get(fieldValues).split(separator);\n+        for(int i = 0; i < valuesStr.length; i++){", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Mzk3Mw==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429773973", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODc3NQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429708775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        switch (types.get(i)){\n          \n          \n            \n                        switch (types.get(i)) {", "author": "HTHou", "createdAt": "2020-05-25T02:31:55Z", "path": "flink-iotdb-connector/src/main/java/org/apache/iotdb/flink/DefaultIoTSerializationSchema.java", "diffHunk": "@@ -49,12 +52,37 @@ public Event serialize(Map<String,String> tuple) {\n             measurements = Arrays.asList(tuple.get(fieldMeasurements).split(separator));\n         }\n \n-        List<String> values = null;\n-        if (tuple.get(fieldValues) != null) {\n-            values = Arrays.asList(tuple.get(fieldValues).split(separator));\n+        List<TSDataType> types = new ArrayList<>();\n+        for(String type : tuple.get(fieldTypes).split(separator)){\n+            types.add(TSDataType.valueOf(type));\n         }\n \n-        return new Event(device, timestamp, measurements, values);\n+        List<Object> values = new ArrayList<>();\n+        String[] valuesStr = tuple.get(fieldValues).split(separator);\n+        for(int i = 0; i < valuesStr.length; i++){\n+            switch (types.get(i)){", "originalCommit": "0574d7a589870808ac690b35e6205d5a72b1c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3NDAxMQ==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r429774011", "bodyText": "fixed~", "author": "SilverNarcissus", "createdAt": "2020-05-25T07:27:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwODc3NQ=="}], "type": "inlineReview"}, {"oid": "69f54326d8e072a2d34fa31aa200c2d0460d4a1b", "url": "https://github.com/apache/iotdb/commit/69f54326d8e072a2d34fa31aa200c2d0460d4a1b", "message": "fix bug", "committedDate": "2020-05-25T03:00:04Z", "type": "commit"}, {"oid": "248d25b519e623c4a276e64fb3b0e31c1c3dd66c", "url": "https://github.com/apache/iotdb/commit/248d25b519e623c4a276e64fb3b0e31c1c3dd66c", "message": "add original str interface", "committedDate": "2020-05-25T03:44:56Z", "type": "commit"}, {"oid": "5441d455c810b1355d362d71da87c02557c9c0a7", "url": "https://github.com/apache/iotdb/commit/5441d455c810b1355d362d71da87c02557c9c0a7", "message": "fix format", "committedDate": "2020-05-25T07:29:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU2MzU4MA==", "url": "https://github.com/apache/iotdb/pull/1229#discussion_r431563580", "bodyText": "logger more information, server type, client type", "author": "qiaojialin", "createdAt": "2020-05-28T03:37:28Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -900,7 +903,53 @@ public void insert(InsertPlan insertPlan) throws QueryProcessException {\n     }\n   }\n \n-  /** create timeseries with ignore PathAlreadyExistException */\n+  private void checkType(InsertPlan plan, int loc, TSDataType type) {\n+    plan.getTypes()[loc] = type;\n+    try {\n+      switch (type) {\n+        case INT32:\n+          if (!(plan.getValues()[loc] instanceof Integer)) {\n+            plan.getValues()[loc] =\n+                Integer.parseInt(((Binary) plan.getValues()[loc]).getStringValue());\n+          }\n+          break;\n+        case INT64:\n+          if (!(plan.getValues()[loc] instanceof Long)) {\n+            plan.getValues()[loc] =\n+                Long.parseLong(((Binary) plan.getValues()[loc]).getStringValue());\n+          }\n+          break;\n+        case DOUBLE:\n+          if (!(plan.getValues()[loc] instanceof Double)) {\n+            plan.getValues()[loc] =\n+                Double.parseDouble(((Binary) plan.getValues()[loc]).getStringValue());\n+          }\n+          break;\n+        case FLOAT:\n+          if (!(plan.getValues()[loc] instanceof Float)) {\n+            plan.getValues()[loc] =\n+                Float.parseFloat(((Binary) plan.getValues()[loc]).getStringValue());\n+          }\n+          break;\n+        case BOOLEAN:\n+          if (!(plan.getValues()[loc] instanceof Boolean)) {\n+            plan.getValues()[loc] =\n+                Boolean.parseBoolean(((Binary) plan.getValues()[loc]).getStringValue());\n+          }\n+          break;\n+        case TEXT:\n+          // need to do nothing\n+          break;\n+      }\n+    }\n+    catch (ClassCastException e){\n+      logger.error(\"inconsistent type between client and server\");", "originalCommit": "5441d455c810b1355d362d71da87c02557c9c0a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}