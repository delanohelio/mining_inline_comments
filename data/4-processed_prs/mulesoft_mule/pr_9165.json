{"pr_number": 9165, "pr_title": "CMTS-26: Validate and fix ValueProviderCacheIdGenerator for complex parameters", "pr_createdAt": "2020-08-04T21:26:38Z", "pr_url": "https://github.com/mulesoft/mule/pull/9165", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDIyNw==", "url": "https://github.com/mulesoft/mule/pull/9165#discussion_r465660227", "bodyText": "How about Map?", "author": "gsfernandes", "createdAt": "2020-08-05T11:29:51Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/api/dsl/model/metadata/ComponentBasedIdHelper.java", "diffHunk": "@@ -56,4 +61,50 @@ static String sourceElementNameFromSimpleValue(ComponentAst owner, ComponentPara\n     return elementModel.getRawParameterValue(CONFIG_ATTRIBUTE_NAME);\n   }\n \n+  public static int computeHashFor(ComponentParameterAst componentParameterAst) {\n+    return ParameterVisitorFunctions.computeHashFor(componentParameterAst);\n+  }\n+\n+  private static class ParameterVisitorFunctions {\n+\n+    private static int computeHashFor(ComponentParameterAst parameter) {\n+      return hash(new ParameterVisitorFunctions(parameter).hashBuilder.toString());\n+    }\n+\n+    private StringBuilder hashBuilder = new StringBuilder();\n+    private final Function<String, Void> leftFunction = this::hashForLeft;\n+    private final Function<Object, Void> rightFunction = this::hashForRight;\n+\n+    private ParameterVisitorFunctions(ComponentParameterAst startingParameter) {\n+      startingParameter.getValue().reduce(leftFunction, rightFunction);\n+    }\n+\n+    private Void hashForLeft(String s) {\n+      hashBuilder.append(s);\n+      return null;\n+    }\n+\n+    private Void hashForRight(Object o) {\n+      if (o instanceof ComponentAst) {\n+        final ComponentAst c = (ComponentAst) o;\n+        c.getParameters().stream().sorted(comparing(p -> p.getModel().getName())).forEach(p -> {\n+          hashBuilder.append(p.getModel().getName());\n+          if (p.getModel().getType() instanceof ArrayType) {\n+            hashForList((Collection<ComponentAst>) p.getValue().getRight());", "originalCommit": "545bccac50b48c69e1241c6bb53b7e75b07f038f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NjY4OA==", "url": "https://github.com/mulesoft/mule/pull/9165#discussion_r465686688", "bodyText": "Aren't maps ObjectTypes? It will call the same function again but with the value.", "author": "lucianoRM", "createdAt": "2020-08-05T12:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDIyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3NDkzNw==", "url": "https://github.com/mulesoft/mule/pull/9165#discussion_r465874937", "bodyText": "You are right", "author": "gsfernandes", "createdAt": "2020-08-05T17:05:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDIyNw=="}], "type": "inlineReview"}, {"oid": "6145fa17ca2adbc2bf7c53a0f73eb5029498b955", "url": "https://github.com/mulesoft/mule/commit/6145fa17ca2adbc2bf7c53a0f73eb5029498b955", "message": "added more options to test", "committedDate": "2020-08-05T12:55:39Z", "type": "forcePushed"}, {"oid": "9bce01b9bc0e18a46d5c5002e656e97e9261a126", "url": "https://github.com/mulesoft/mule/commit/9bce01b9bc0e18a46d5c5002e656e97e9261a126", "message": "new valueprovideridgenerator for caching with declaration and model", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "94ed00bacba0ec15955034e7de79a09b6a426b40", "url": "https://github.com/mulesoft/mule/commit/94ed00bacba0ec15955034e7de79a09b6a426b40", "message": "removed unused imports", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "60ac04f3835c74658a8cb3ba5ae29518bc84bf4f", "url": "https://github.com/mulesoft/mule/commit/60ac04f3835c74658a8cb3ba5ae29518bc84bf4f", "message": "recursively hashing parameters", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "dbfe60c1c6ea95c1dc35383931fa3af07af5e89c", "url": "https://github.com/mulesoft/mule/commit/dbfe60c1c6ea95c1dc35383931fa3af07af5e89c", "message": "added more tests and fixed behaviour", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "7be62bd85a5f588122fbd46de1efca82d3c01c8e", "url": "https://github.com/mulesoft/mule/commit/7be62bd85a5f588122fbd46de1efca82d3c01c8e", "message": "more tests and new behaviour", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "38938f10cd7b1e45ecc305a12166404076e59a8b", "url": "https://github.com/mulesoft/mule/commit/38938f10cd7b1e45ecc305a12166404076e59a8b", "message": "adding changes from test in master", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "87ab1aa5b7f082764522f31b7a7126d1e1099b0f", "url": "https://github.com/mulesoft/mule/commit/87ab1aa5b7f082764522f31b7a7126d1e1099b0f", "message": "saving", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "894c6518393c81595ad3fc26eaa881686b52f5e4", "url": "https://github.com/mulesoft/mule/commit/894c6518393c81595ad3fc26eaa881686b52f5e4", "message": "saving", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "7f0eca6fb8d36c8b39d063acf1b25ea201d3bb28", "url": "https://github.com/mulesoft/mule/commit/7f0eca6fb8d36c8b39d063acf1b25ea201d3bb28", "message": "removed empty lines and changed log level", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "d2e6dccd06a8b09efb7e3fa859af6b218da1c634", "url": "https://github.com/mulesoft/mule/commit/d2e6dccd06a8b09efb7e3fa859af6b218da1c634", "message": "removed unused implementations", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "6145fa17ca2adbc2bf7c53a0f73eb5029498b955", "url": "https://github.com/mulesoft/mule/commit/6145fa17ca2adbc2bf7c53a0f73eb5029498b955", "message": "added more options to test", "committedDate": "2020-08-05T12:55:39Z", "type": "commit"}, {"oid": "f8125394f2e98a4e7b23da623310b51fdc4b07e5", "url": "https://github.com/mulesoft/mule/commit/f8125394f2e98a4e7b23da623310b51fdc4b07e5", "message": "mapping import", "committedDate": "2020-08-05T17:37:01Z", "type": "commit"}]}