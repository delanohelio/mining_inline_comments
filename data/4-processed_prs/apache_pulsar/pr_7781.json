{"pr_number": 7781, "pr_title": "[Transaction] Support consume transaction messages.", "pr_createdAt": "2020-08-07T07:39:02Z", "pr_url": "https://github.com/apache/pulsar/pull/7781", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4MTMwOA==", "url": "https://github.com/apache/pulsar/pull/7781#discussion_r467881308", "bodyText": "It's might peek null here.", "author": "codelipenghui", "createdAt": "2020-08-10T12:52:26Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/TransactionReader.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.persistent;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.bookkeeper.mledger.AsyncCallbacks;\n+import org.apache.bookkeeper.mledger.Entry;\n+import org.apache.bookkeeper.mledger.ManagedLedgerException;\n+import org.apache.pulsar.broker.service.Consumer;\n+import org.apache.pulsar.broker.service.Topic;\n+import org.apache.pulsar.broker.transaction.buffer.TransactionBuffer;\n+import org.apache.pulsar.client.api.transaction.TxnID;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+\n+@Slf4j\n+public class TransactionReader {\n+\n+    private TransactionBuffer transactionBuffer;\n+    private volatile long startSequenceId = 0;\n+\n+    public void read(Topic topic, ConcurrentLinkedQueue<TxnID> transactionQueue,\n+                     int readMessageNum, Object ctx,\n+                     AsyncCallbacks.ReadEntriesCallback readEntriesCallback) {\n+        if (transactionBuffer == null) {\n+            topic.getTransactionBuffer(false).whenComplete((tb, throwable) -> {\n+                if (throwable != null) {\n+                    log.error(\"Get transactionBuffer failed.\", throwable);\n+                    readEntriesCallback.readEntriesFailed(\n+                            ManagedLedgerException.getManagedLedgerException(throwable), ctx);\n+                    return;\n+                }\n+                transactionBuffer = tb;\n+                read(transactionQueue, readMessageNum, ctx, readEntriesCallback);\n+            });\n+        } else {\n+            read(transactionQueue, readMessageNum, ctx, readEntriesCallback);\n+        }\n+    }\n+\n+    private void read(ConcurrentLinkedQueue<TxnID> transactionQueue,\n+                     int readMessageNum, Object ctx,\n+                     AsyncCallbacks.ReadEntriesCallback readEntriesCallback) {\n+        final TxnID txnID = transactionQueue.peek();", "originalCommit": "22f4c01a0c786b08de356d050f0f24589d514f29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM0NjU5MA==", "url": "https://github.com/apache/pulsar/pull/7781#discussion_r470346590", "bodyText": "Ok, I'll add a check.", "author": "gaoran10", "createdAt": "2020-08-14T00:55:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4MTMwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4MzI0NQ==", "url": "https://github.com/apache/pulsar/pull/7781#discussion_r467883245", "bodyText": "Is the read txn message count is the size of the transactionQueue ?  I did not understand this method, is the transactionQueue only stores the first txn ID?  I noticed you have only peek one item from this queue.", "author": "codelipenghui", "createdAt": "2020-08-10T12:56:02Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/TransactionReader.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.persistent;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.bookkeeper.mledger.AsyncCallbacks;\n+import org.apache.bookkeeper.mledger.Entry;\n+import org.apache.bookkeeper.mledger.ManagedLedgerException;\n+import org.apache.pulsar.broker.service.Consumer;\n+import org.apache.pulsar.broker.service.Topic;\n+import org.apache.pulsar.broker.transaction.buffer.TransactionBuffer;\n+import org.apache.pulsar.client.api.transaction.TxnID;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+\n+@Slf4j\n+public class TransactionReader {\n+\n+    private TransactionBuffer transactionBuffer;\n+    private volatile long startSequenceId = 0;\n+\n+    public void read(Topic topic, ConcurrentLinkedQueue<TxnID> transactionQueue,\n+                     int readMessageNum, Object ctx,\n+                     AsyncCallbacks.ReadEntriesCallback readEntriesCallback) {\n+        if (transactionBuffer == null) {\n+            topic.getTransactionBuffer(false).whenComplete((tb, throwable) -> {\n+                if (throwable != null) {\n+                    log.error(\"Get transactionBuffer failed.\", throwable);\n+                    readEntriesCallback.readEntriesFailed(\n+                            ManagedLedgerException.getManagedLedgerException(throwable), ctx);\n+                    return;\n+                }\n+                transactionBuffer = tb;\n+                read(transactionQueue, readMessageNum, ctx, readEntriesCallback);\n+            });\n+        } else {\n+            read(transactionQueue, readMessageNum, ctx, readEntriesCallback);\n+        }\n+    }\n+\n+    private void read(ConcurrentLinkedQueue<TxnID> transactionQueue,\n+                     int readMessageNum, Object ctx,\n+                     AsyncCallbacks.ReadEntriesCallback readEntriesCallback) {", "originalCommit": "22f4c01a0c786b08de356d050f0f24589d514f29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0OTkxMA==", "url": "https://github.com/apache/pulsar/pull/7781#discussion_r467949910", "bodyText": "I'll adjust this logic.", "author": "gaoran10", "createdAt": "2020-08-10T14:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4MzI0NQ=="}], "type": "inlineReview"}, {"oid": "9f213b756cd4158d5068d3684f919bb72346fc25", "url": "https://github.com/apache/pulsar/commit/9f213b756cd4158d5068d3684f919bb72346fc25", "message": "Hold a dispatcher in TransactionReader.", "committedDate": "2020-08-10T14:36:46Z", "type": "forcePushed"}, {"oid": "b17e8f43b3fdab89a26582da30e14342a5bd61d6", "url": "https://github.com/apache/pulsar/commit/b17e8f43b3fdab89a26582da30e14342a5bd61d6", "message": "Support consume transaction messages.", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "95fcde794fa7b60629b448a37d3dc85a2ae6e150", "url": "https://github.com/apache/pulsar/commit/95fcde794fa7b60629b448a37d3dc85a2ae6e150", "message": "fix", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "d078f8d485c95488a9917a2afe95fccddd28192b", "url": "https://github.com/apache/pulsar/commit/d078f8d485c95488a9917a2afe95fccddd28192b", "message": "fix test", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "150f8e727f4d63bc41acaf28cb6af4bd618d4618", "url": "https://github.com/apache/pulsar/commit/150f8e727f4d63bc41acaf28cb6af4bd618d4618", "message": "Hold a dispatcher in TransactionReader.", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "f6a6f81b84c5a55bdacb3bad7f1a05919efb64aa", "url": "https://github.com/apache/pulsar/commit/f6a6f81b84c5a55bdacb3bad7f1a05919efb64aa", "message": "fix test", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "05174fda42db6dde014d694745128967607a9e09", "url": "https://github.com/apache/pulsar/commit/05174fda42db6dde014d694745128967607a9e09", "message": "Make the TransactionEntry hold the Entry instead of the Entry's DataBuffer.", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "c516179b676cb1c9c6c62e442d10c352a06edf72", "url": "https://github.com/apache/pulsar/commit/c516179b676cb1c9c6c62e442d10c352a06edf72", "message": "fix test", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "8a83e749ed2f2470fc770f8eba66b8679309c12c", "url": "https://github.com/apache/pulsar/commit/8a83e749ed2f2470fc770f8eba66b8679309c12c", "message": "fix license", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "5007a2a4308c8a3647def18768b74d266fab06e4", "url": "https://github.com/apache/pulsar/commit/5007a2a4308c8a3647def18768b74d266fab06e4", "message": "fix", "committedDate": "2020-08-13T05:49:06Z", "type": "commit"}, {"oid": "5007a2a4308c8a3647def18768b74d266fab06e4", "url": "https://github.com/apache/pulsar/commit/5007a2a4308c8a3647def18768b74d266fab06e4", "message": "fix", "committedDate": "2020-08-13T05:49:06Z", "type": "forcePushed"}]}