{"pr_number": 8368, "pr_title": "[Issue 8364][docs] Update decommission content in different releases", "pr_createdAt": "2020-10-26T03:04:07Z", "pr_url": "https://github.com/apache/pulsar/pull/8368", "timeline": [{"oid": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "url": "https://github.com/apache/pulsar/commit/a37fdfe3842fc02dbd46f0d9847b25482790c598", "message": "Update decomission", "committedDate": "2020-10-26T02:57:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MTkwOA==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511781908", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n          \n          \n            \n            Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker by default. To ensure low write latency, BookKeeper is designed to use multiple devices:", "author": "codelipenghui", "createdAt": "2020-10-26T08:19:01Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations\n \n-BookKeeper provides [persistent message storage](concepts-architecture-overview.md#persistent-storage) for Pulsar.\n+Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n \n-Each Pulsar broker needs to have its own cluster of bookies. The BookKeeper cluster shares a local ZooKeeper quorum with the Pulsar cluster.\n+* Disk I/O capacity read/write\n+* Storage capacity\n \n-### Configure bookies\n+Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MzU3Mw==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511783573", "bodyText": "I think HDDs can't achieve ~0.4ms data sync latency even if with RAID. @sijie @jiazhai Please help double-check.", "author": "codelipenghui", "createdAt": "2020-10-26T08:22:18Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations\n \n-BookKeeper provides [persistent message storage](concepts-architecture-overview.md#persistent-storage) for Pulsar.\n+Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n \n-Each Pulsar broker needs to have its own cluster of bookies. The BookKeeper cluster shares a local ZooKeeper quorum with the Pulsar cluster.\n+* Disk I/O capacity read/write\n+* Storage capacity\n \n-### Configure bookies\n+Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+\n+* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAyNDg3Mg==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r512024872", "bodyText": "@codelipenghui . this is not only hdd, it is hdd with raid card(which contains cache)", "author": "jiazhai", "createdAt": "2020-10-26T14:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MzU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM0ODEyMw==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r512348123", "bodyText": "So HDDs with RAID can reach fsync latency of ~0.4ms, is it right?", "author": "Jennifer88huang", "createdAt": "2020-10-27T00:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MzU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEzODgzNA==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r513138834", "bodyText": "@codelipenghui @jiazhai thanks for your comments. Whether you agree on the fsync latency performance, could you please confirm? Thank you.", "author": "Jennifer88huang", "createdAt": "2020-10-28T02:15:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MzU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4ODI0Ng==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511788246", "bodyText": "The ledger storage doesn\u2019t care whether the data is acknowledged by consumers.", "author": "codelipenghui", "createdAt": "2020-10-26T08:30:54Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations\n \n-BookKeeper provides [persistent message storage](concepts-architecture-overview.md#persistent-storage) for Pulsar.\n+Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n \n-Each Pulsar broker needs to have its own cluster of bookies. The BookKeeper cluster shares a local ZooKeeper quorum with the Pulsar cluster.\n+* Disk I/O capacity read/write\n+* Storage capacity\n \n-### Configure bookies\n+Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+\n+* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.\n+\n+* A **ledger storage device** is where data is stored until all consumers have acknowledged the message. Writes happen in the background, so write I/O is not a big concern. Reads happen sequentially most of the time and the backlog is drained only in case of consumer drain. To store large amounts of data, a typical configuration involves multiple HDDs with a RAID controller.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NDMwMA==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511884300", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Decommissioning bookies cleanly\n          \n          \n            \n            ### Decommission bookies cleanly", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:15:00Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -230,15 +230,13 @@ This command creates a new ledger on the local bookie, writes a few entries, rea\n \n ### Decommissioning bookies cleanly", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NDUxNA==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511884514", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### Before you decommission\n          \n          \n            \n            #### Before decommission", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:15:20Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -230,15 +230,13 @@ This command creates a new ledger on the local bookie, writes a few entries, rea\n \n ### Decommissioning bookies cleanly\n \n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.\n \n-In case the user wants to decommission a bookie, the following process is useful to follow in order to verify if the\n-decommissioning was safely done.\n-\n-#### Before we decommission\n+#### Before you decommission", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NTg3Nw==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511885877", "bodyText": "To decommission a bookie safely, follow the following process.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:17:59Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -230,15 +230,13 @@ This command creates a new ledger on the local bookie, writes a few entries, rea\n \n ### Decommissioning bookies cleanly\n \n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NjE1MQ==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511886151", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Ensure state of your cluster can support the decommissioning of the target bookie.\n          \n          \n            \n            1. Ensure the state of your cluster supports decommissioning the target bookie.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:18:32Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -230,15 +230,13 @@ This command creates a new ledger on the local bookie, writes a few entries, rea\n \n ### Decommissioning bookies cleanly\n \n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.\n \n-In case the user wants to decommission a bookie, the following process is useful to follow in order to verify if the\n-decommissioning was safely done.\n-\n-#### Before we decommission\n+#### Before you decommission\n 1. Ensure state of your cluster can support the decommissioning of the target bookie.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NjU0Mw==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511886543", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. Ensure target bookie shows up in the `listbookies` command.\n          \n          \n            \n            2. Ensure the target bookie shows up in the `listbookies` command.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:19:23Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -230,15 +230,13 @@ This command creates a new ledger on the local bookie, writes a few entries, rea\n \n ### Decommissioning bookies cleanly\n \n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.\n \n-In case the user wants to decommission a bookie, the following process is useful to follow in order to verify if the\n-decommissioning was safely done.\n-\n-#### Before we decommission\n+#### Before you decommission\n 1. Ensure state of your cluster can support the decommissioning of the target bookie.\n Check if `EnsembleSize >= Write Quorum >= Ack Quorum` stays true with one less bookie\n \n-2. Ensure target bookie shows up in the listbookies command.\n+2. Ensure target bookie shows up in the `listbookies` command.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4NzQxMQ==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511887411", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you are running the decommission command for target bookie node from another bookie node you should mention the target bookie id in the arguments for `-bookieid`\n          \n          \n            \n            If you are running the decommission command for the target bookie node from another bookie node, you should mention the target bookie ID in the arguments for `-bookieid`", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:20:52Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -252,16 +250,15 @@ If there are, the decommission command will force them to be replicated.\n \n 3. Run the decommission command.\n If you have logged onto the node you wish to decommission, you don't need to provide `-bookieid`\n-If you are running the decommission command for target bookie node from another bookie node you should mention \n-the target bookie id in the arguments for `-bookieid`\n+If you are running the decommission command for target bookie node from another bookie node you should mention the target bookie id in the arguments for `-bookieid`", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4ODM3Nw==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511888377", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            4. Validate that no ledgers are on decommissioned bookie.\n          \n          \n            \n            4. Validate that no ledgers are on the decommissioned bookie.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:22:43Z", "path": "site2/docs/administration-zk-bk.md", "diffHunk": "@@ -252,16 +250,15 @@ If there are, the decommission command will force them to be replicated.\n \n 3. Run the decommission command.\n If you have logged onto the node you wish to decommission, you don't need to provide `-bookieid`\n-If you are running the decommission command for target bookie node from another bookie node you should mention \n-the target bookie id in the arguments for `-bookieid`\n+If you are running the decommission command for target bookie node from another bookie node you should mention the target bookie id in the arguments for `-bookieid`\n `$ bin/bookkeeper shell decommissionbookie`\n or\n `$ bin/bookkeeper shell decommissionbookie -bookieid <target bookieid>`\n \n-4. Validate that there are no ledgers on decommissioned bookie\n+4. Validate that no ledgers are on decommissioned bookie.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4OTI5Ng==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511889296", "bodyText": "Hardware requirements?", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:24:33Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5MDE4MQ==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511890181", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n          \n          \n            \n            Bookie hosts are responsible for storing message data on disk. To provide optimal performance, the bookies should have a suitable hardware configuration. You can choose two key dimensions to bookie hardware capacity:", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:26:07Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations\n \n-BookKeeper provides [persistent message storage](concepts-architecture-overview.md#persistent-storage) for Pulsar.\n+Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5MTM3MQ==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511891371", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.\n          \n          \n            \n            * A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID) controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:28:33Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations\n \n-BookKeeper provides [persistent message storage](concepts-architecture-overview.md#persistent-storage) for Pulsar.\n+Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n \n-Each Pulsar broker needs to have its own cluster of bookies. The BookKeeper cluster shares a local ZooKeeper quorum with the Pulsar cluster.\n+* Disk I/O capacity read/write\n+* Storage capacity\n \n-### Configure bookies\n+Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+\n+* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5MTk1OA==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511891958", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To change the zookeeper root path that Bookkeeper uses, use zkLedgersRootPath=/MY-PREFIX/ledgers instead of zkServers=localhost:2181/MY-PREFIX\n          \n          \n            \n            To change the ZooKeeper root path that Bookkeeper uses, use `zkLedgersRootPath=/MY-PREFIX/ledgers` instead of `zkServers=localhost:2181/MY-PREFIX`.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:29:43Z", "path": "site2/website/versioned_docs/version-2.6.1/administration-zk-bk.md", "diffHunk": "@@ -163,17 +163,50 @@ BookKeeper is responsible for all durable message storage in Pulsar. BookKeeper\n \n > For a guide to managing message persistence, retention, and expiry in Pulsar, see [this cookbook](cookbooks-retention-expiry.md).\n \n-### Deploy BookKeeper\n+### Hardware considerations\n \n-BookKeeper provides [persistent message storage](concepts-architecture-overview.md#persistent-storage) for Pulsar.\n+Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n \n-Each Pulsar broker needs to have its own cluster of bookies. The BookKeeper cluster shares a local ZooKeeper quorum with the Pulsar cluster.\n+* Disk I/O capacity read/write\n+* Storage capacity\n \n-### Configure bookies\n+Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+\n+* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.\n+\n+* A **ledger storage device** is where data is stored until all consumers have acknowledged the message. Writes happen in the background, so write I/O is not a big concern. Reads happen sequentially most of the time and the backlog is drained only in case of consumer drain. To store large amounts of data, a typical configuration involves multiple HDDs with a RAID controller.\n+\n+### Configure BookKeeper\n \n You can configure BookKeeper bookies using the [`conf/bookkeeper.conf`](reference-configuration.md#bookkeeper) configuration file. The most important aspect of configuring each bookie is ensuring that the [`zkServers`](reference-configuration.md#bookkeeper-zkServers) parameter is set to the connection string for local ZooKeeper of the Pulsar cluster.\n \n-### Start up bookies\n+Minimum configuration changes required in `conf/bookkeeper.conf` are:\n+\n+```properties\n+# Change to point to journal disk mount point\n+journalDirectory=data/bookkeeper/journal\n+\n+# Point to ledger storage disk mount point\n+ledgerDirectories=data/bookkeeper/ledgers\n+\n+# Point to local ZK quorum\n+zkServers=zk1.example.com:2181,zk2.example.com:2181,zk3.example.com:2181\n+\n+# Change the ledger manager type\n+ledgerManagerType=hierarchical\n+```\n+\n+To change the zookeeper root path that Bookkeeper uses, use zkLedgersRootPath=/MY-PREFIX/ledgers instead of zkServers=localhost:2181/MY-PREFIX", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5MzAwMw==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511893003", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Log on to the bookie node, check if there are underreplicated ledgers.\n          \n          \n            \n            1. Log in to the bookie node, check if there are underreplicated ledgers.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:31:46Z", "path": "site2/website/versioned_docs/version-2.6.2/administration-zk-bk.md", "diffHunk": "@@ -197,44 +230,43 @@ $ bin/bookkeeper shell bookiesanity\n \n This command creates a new ledger on the local bookie, writes a few entries, reads them back and finally deletes the ledger.\n \n-### Hardware considerations\n-\n-Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n-\n-* Disk I/O capacity read/write\n-* Storage capacity\n+### Decommissioning bookies cleanly\n \n-Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.\n \n-* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.\n-* A **ledger storage device** is where data is stored until all consumers have acknowledged the message. Writes happen in the background, so write I/O is not a big concern. Reads happen sequentially most of the time and the backlog is drained only in case of consumer drain. To store large amounts of data, a typical configuration involves multiple HDDs with a RAID controller.\n+#### Before you decommission\n+1. Ensure state of your cluster can support the decommissioning of the target bookie.\n+Check if `EnsembleSize >= Write Quorum >= Ack Quorum` stays true with one less bookie\n \n+2. Ensure target bookie shows up in the `listbookies` command.\n \n+3. Ensure that there is no other process ongoing (upgrade etc).\n \n-### Configure BookKeeper\n+#### Process of Decommissioning\n+1. Log on to the bookie node, check if there are underreplicated ledgers.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5MzkxOA==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511893918", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. Stop the bookie by killing the bookie process. Make sure there are no liveness / readiness probes setup for the bookies to spin them back up if you are deployed in a kubernetes environment.\n          \n          \n            \n            2. Stop the bookie by killing the bookie process. Make sure there are no liveness/readiness probes setup for the bookies to spin them back up if you are deployed in a kubernetes environment.\n          \n      \n    \n    \n  \n\n\"if you are deployed in a kubernetes environment\", this sentence does not use correct grammatical structure, please improve it.", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:33:40Z", "path": "site2/website/versioned_docs/version-2.6.2/administration-zk-bk.md", "diffHunk": "@@ -197,44 +230,43 @@ $ bin/bookkeeper shell bookiesanity\n \n This command creates a new ledger on the local bookie, writes a few entries, reads them back and finally deletes the ledger.\n \n-### Hardware considerations\n-\n-Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n-\n-* Disk I/O capacity read/write\n-* Storage capacity\n+### Decommissioning bookies cleanly\n \n-Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.\n \n-* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.\n-* A **ledger storage device** is where data is stored until all consumers have acknowledged the message. Writes happen in the background, so write I/O is not a big concern. Reads happen sequentially most of the time and the backlog is drained only in case of consumer drain. To store large amounts of data, a typical configuration involves multiple HDDs with a RAID controller.\n+#### Before you decommission\n+1. Ensure state of your cluster can support the decommissioning of the target bookie.\n+Check if `EnsembleSize >= Write Quorum >= Ack Quorum` stays true with one less bookie\n \n+2. Ensure target bookie shows up in the `listbookies` command.\n \n+3. Ensure that there is no other process ongoing (upgrade etc).\n \n-### Configure BookKeeper\n+#### Process of Decommissioning\n+1. Log on to the bookie node, check if there are underreplicated ledgers.\n \n-you can find configurable parameters for BookKeeper bookies in the [`conf/bookkeeper.conf`](reference-configuration.md#bookkeeper) file.\n+If there are, the decommission command will force them to be replicated.\n+`$ bin/bookkeeper shell listunderreplicated`\n \n-Minimum configuration changes required in `conf/bookkeeper.conf` are:\n+2. Stop the bookie by killing the bookie process. Make sure there are no liveness / readiness probes setup for the bookies to spin them back up if you are deployed in a kubernetes environment.", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5NDMyNQ==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r511894325", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you have logged onto the node you wish to decommission, you don't need to provide `-bookieid`\n          \n          \n            \n            If you have logged in to the node  to be decommissioned, you don't need to provide `-bookieid`", "author": "Huanli-Meng", "createdAt": "2020-10-26T11:34:28Z", "path": "site2/website/versioned_docs/version-2.6.2/administration-zk-bk.md", "diffHunk": "@@ -197,44 +230,43 @@ $ bin/bookkeeper shell bookiesanity\n \n This command creates a new ledger on the local bookie, writes a few entries, reads them back and finally deletes the ledger.\n \n-### Hardware considerations\n-\n-Bookie hosts are responsible for storing message data on disk. In order for bookies to provide optimal performance, ensuring that the bookies have a suitable hardware configuration is essential. You can choose two key dimensions to bookie hardware capacity:\n-\n-* Disk I/O capacity read/write\n-* Storage capacity\n+### Decommissioning bookies cleanly\n \n-Message entries written to bookies are always synced to disk before returning an acknowledgement to the Pulsar broker. To ensure low write latency, BookKeeper is designed to use multiple devices:\n+When you want to decommission a bookie, the following process is useful to follow in order to verify if the decommissioning was safely done.\n \n-* A **journal** to ensure durability. For sequential writes, having fast [fsync](https://linux.die.net/man/2/fsync) operations on bookie hosts is critical. Typically, small and fast [solid-state drives](https://en.wikipedia.org/wiki/Solid-state_drive) (SSDs) should suffice, or [hard disk drives](https://en.wikipedia.org/wiki/Hard_disk_drive) (HDDs) with a [RAID](https://en.wikipedia.org/wiki/RAID)s controller and a battery-backed write cache. Both solutions can reach fsync latency of ~0.4 ms.\n-* A **ledger storage device** is where data is stored until all consumers have acknowledged the message. Writes happen in the background, so write I/O is not a big concern. Reads happen sequentially most of the time and the backlog is drained only in case of consumer drain. To store large amounts of data, a typical configuration involves multiple HDDs with a RAID controller.\n+#### Before you decommission\n+1. Ensure state of your cluster can support the decommissioning of the target bookie.\n+Check if `EnsembleSize >= Write Quorum >= Ack Quorum` stays true with one less bookie\n \n+2. Ensure target bookie shows up in the `listbookies` command.\n \n+3. Ensure that there is no other process ongoing (upgrade etc).\n \n-### Configure BookKeeper\n+#### Process of Decommissioning\n+1. Log on to the bookie node, check if there are underreplicated ledgers.\n \n-you can find configurable parameters for BookKeeper bookies in the [`conf/bookkeeper.conf`](reference-configuration.md#bookkeeper) file.\n+If there are, the decommission command will force them to be replicated.\n+`$ bin/bookkeeper shell listunderreplicated`\n \n-Minimum configuration changes required in `conf/bookkeeper.conf` are:\n+2. Stop the bookie by killing the bookie process. Make sure there are no liveness / readiness probes setup for the bookies to spin them back up if you are deployed in a kubernetes environment.\n \n-```properties\n-# Change to point to journal disk mount point\n-journalDirectory=data/bookkeeper/journal\n+3. Run the decommission command.\n+If you have logged onto the node you wish to decommission, you don't need to provide `-bookieid`", "originalCommit": "a37fdfe3842fc02dbd46f0d9847b25482790c598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4Njk2Ng==", "url": "https://github.com/apache/pulsar/pull/8368#discussion_r512386966", "bodyText": "@Huanli-Meng thanks for your advice, it's for catch up, so I did not refine it from the editor perspective.", "author": "Jennifer88huang", "createdAt": "2020-10-27T02:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5NDMyNQ=="}], "type": "inlineReview"}, {"oid": "740803ae4047b03aad2cfff8ab734457af4332a0", "url": "https://github.com/apache/pulsar/commit/740803ae4047b03aad2cfff8ab734457af4332a0", "message": "update from editorial perspective", "committedDate": "2020-10-28T02:06:38Z", "type": "commit"}, {"oid": "e189902e5d4a4fa2ccaf98fca70beb6f88ff1f92", "url": "https://github.com/apache/pulsar/commit/e189902e5d4a4fa2ccaf98fca70beb6f88ff1f92", "message": "refine ledger storage device description", "committedDate": "2020-10-28T02:11:57Z", "type": "commit"}]}