{"pr_number": 7738, "pr_title": "Support set message TTL on topic level.", "pr_createdAt": "2020-08-04T04:30:24Z", "pr_url": "https://github.com/apache/pulsar/pull/7738", "timeline": [{"oid": "0288dc47f5329a065f2d5c1b6c0224a9257d4f48", "url": "https://github.com/apache/pulsar/commit/0288dc47f5329a065f2d5c1b6c0224a9257d4f48", "message": "Add support for message TTL at Topic level.\n\nAdd support for message TTL at Topic level using System Topic backed Topic policy.", "committedDate": "2020-08-04T04:08:47Z", "type": "commit"}, {"oid": "6a1ee6a5132d47c3cf6c954adbf2f6d2bb5a833d", "url": "https://github.com/apache/pulsar/commit/6a1ee6a5132d47c3cf6c954adbf2f6d2bb5a833d", "message": "Add CLI command for set/get/remove Topic Message TTL.", "committedDate": "2020-08-04T04:22:39Z", "type": "commit"}, {"oid": "2922739a5534f5a6fccc57850a84bfbb107f9b2c", "url": "https://github.com/apache/pulsar/commit/2922739a5534f5a6fccc57850a84bfbb107f9b2c", "message": "Merge remote-tracking branch 'apache-pulsar/master' into zxc-add-topic-level-ttl", "committedDate": "2020-08-04T23:40:44Z", "type": "commit"}, {"oid": "b11252a01b83f7e0121510cb793b6abc6b6c59cb", "url": "https://github.com/apache/pulsar/commit/b11252a01b83f7e0121510cb793b6abc6b6c59cb", "message": "Improve stability for Topic message ttl test.\n\nImprove test stability by trigger namespace bundle load to make sure topic initialized when test case is ran\nSimilar to what we do for TopicBacklogQuotaTest.\n\nAlso added wait time after setup.", "committedDate": "2020-08-05T01:04:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1MTQ0MQ==", "url": "https://github.com/apache/pulsar/pull/7738#discussion_r465451441", "bodyText": "Remove message TTL in seconds for a topic", "author": "jianyun8023", "createdAt": "2020-08-05T03:33:45Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -1032,6 +1032,53 @@ public void removeBacklogQuota(@Suspended final AsyncResponse asyncResponse, @Pa\n         internalRemoveBacklogQuota(asyncResponse, backlogQuotaType);\n     }\n \n+    @GET\n+    @Path(\"/{tenant}/{namespace}/{topic}/messageTTL\")\n+    @ApiOperation(value = \"Get message TTL in seconds for a topic\")\n+    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+                            @ApiResponse(code = 404, message = \"Topic does not exist\"),\n+                            @ApiResponse(code = 405, message = \"Topic level policy is disabled, enable the topic level policy and retry\")})\n+    public int getMessageTTL(@PathParam(\"tenant\") String tenant,\n+                             @PathParam(\"namespace\") String namespace,\n+                             @PathParam(\"topic\") @Encoded String encodedTopic) {\n+        validateTopicName(tenant, namespace, encodedTopic);\n+        return getTopicPolicies(topicName)\n+                .map(TopicPolicies::getMessageTTLInSeconds)\n+                .orElse(0);  //same as default ttl at namespace level\n+    }\n+\n+    @POST\n+    @Path(\"/{tenant}/{namespace}/{topic}/messageTTL\")\n+    @ApiOperation(value = \"Set message TTL in seconds for a topic\")\n+    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Not authenticate to perform the request or policy is read only\"),\n+                            @ApiResponse(code = 404, message = \"Topic does not exist\"),\n+                            @ApiResponse(code = 405, message = \"Topic level policy is disabled, enable the topic level policy and retry\"),\n+                            @ApiResponse(code = 412, message = \"Invalid message TTL value\") })\n+    public void setMessageTTL(@Suspended final AsyncResponse asyncResponse,\n+                              @PathParam(\"tenant\") String tenant,\n+                              @PathParam(\"namespace\") String namespace,\n+                              @PathParam(\"topic\") @Encoded String encodedTopic,\n+                              @ApiParam(value = \"TTL in seconds for the specified namespace\", required = true)\n+                              @QueryParam(\"messageTTL\") int messageTTL) {\n+        validateTopicName(tenant, namespace, encodedTopic);\n+        internalSetMessageTTL(asyncResponse, messageTTL);\n+    }\n+\n+    @DELETE\n+    @Path(\"/{tenant}/{namespace}/{topic}/messageTTL\")\n+    @ApiOperation(value = \"Set message TTL in seconds for a topic\")", "originalCommit": "b11252a01b83f7e0121510cb793b6abc6b6c59cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3e8c52f5318f2c84d7ea13aca2a7a9d21d2c9a14", "url": "https://github.com/apache/pulsar/commit/3e8c52f5318f2c84d7ea13aca2a7a9d21d2c9a14", "message": "Update description for removeMessageTTL REST endpoint to reflect what it does.", "committedDate": "2020-08-05T16:07:54Z", "type": "commit"}]}