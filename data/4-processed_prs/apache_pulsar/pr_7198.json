{"pr_number": 7198, "pr_title": "[pulsar-client-cpp] Support Seek on Partitioned Topic by Time", "pr_createdAt": "2020-06-08T04:21:24Z", "pr_url": "https://github.com/apache/pulsar/pull/7198", "timeline": [{"oid": "49bb3654b2d6c7e4e025ecfb1c7bc98cbafe6cec", "url": "https://github.com/apache/pulsar/commit/49bb3654b2d6c7e4e025ecfb1c7bc98cbafe6cec", "message": "support seek on partitioned topic", "committedDate": "2020-06-08T04:06:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1NTIwMg==", "url": "https://github.com/apache/pulsar/pull/7198#discussion_r436455202", "bodyText": "The message id is only relative to 1 partition. Seeking with same message id on multiple partition will position the subscription in the wrong position.", "author": "merlimat", "createdAt": "2020-06-08T04:48:42Z", "path": "pulsar-client-cpp/lib/PartitionedConsumerImpl.cc", "diffHunk": "@@ -542,11 +542,27 @@ void PartitionedConsumerImpl::handleGetConsumerStats(Result res, BrokerConsumerS\n }\n \n void PartitionedConsumerImpl::seekAsync(const MessageId& msgId, ResultCallback callback) {\n-    callback(ResultOperationNotSupported);\n+    Lock stateLock(mutex_);\n+    if (state_ != Ready) {\n+        callback(ResultAlreadyClosed);\n+        return;\n+    }\n+    stateLock.unlock();\n+    for (ConsumerList::const_iterator i = consumers_.begin(); i != consumers_.end(); i++) {\n+        (*i)->seekAsync(msgId, callback);", "originalCommit": "49bb3654b2d6c7e4e025ecfb1c7bc98cbafe6cec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ4NjMzOA==", "url": "https://github.com/apache/pulsar/pull/7198#discussion_r436486338", "bodyText": "I understood that.\nThis PR decides to support only seeking on partitioned topic by time.", "author": "k2la", "createdAt": "2020-06-08T06:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1NTIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1NTMwMA==", "url": "https://github.com/apache/pulsar/pull/7198#discussion_r436455300", "bodyText": "The mutex should be released before triggering the callback, since that might be blocking", "author": "merlimat", "createdAt": "2020-06-08T04:49:15Z", "path": "pulsar-client-cpp/lib/PartitionedConsumerImpl.cc", "diffHunk": "@@ -542,11 +542,27 @@ void PartitionedConsumerImpl::handleGetConsumerStats(Result res, BrokerConsumerS\n }\n \n void PartitionedConsumerImpl::seekAsync(const MessageId& msgId, ResultCallback callback) {\n-    callback(ResultOperationNotSupported);\n+    Lock stateLock(mutex_);\n+    if (state_ != Ready) {\n+        callback(ResultAlreadyClosed);\n+        return;\n+    }\n+    stateLock.unlock();\n+    for (ConsumerList::const_iterator i = consumers_.begin(); i != consumers_.end(); i++) {\n+        (*i)->seekAsync(msgId, callback);\n+    }\n }\n \n void PartitionedConsumerImpl::seekAsync(uint64_t timestamp, ResultCallback callback) {\n-    callback(ResultOperationNotSupported);\n+    Lock stateLock(mutex_);\n+    if (state_ != Ready) {\n+        callback(ResultAlreadyClosed);", "originalCommit": "49bb3654b2d6c7e4e025ecfb1c7bc98cbafe6cec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a1ee4b022dfd0e77f68a737e95dd478a1a962ee", "url": "https://github.com/apache/pulsar/commit/0a1ee4b022dfd0e77f68a737e95dd478a1a962ee", "message": "mutex is released before triggering callback", "committedDate": "2020-06-08T05:30:48Z", "type": "commit"}, {"oid": "6e4a6c8cce6641c44a28820700da40c36a88df84", "url": "https://github.com/apache/pulsar/commit/6e4a6c8cce6641c44a28820700da40c36a88df84", "message": "seeking for msgId is not supported", "committedDate": "2020-06-08T06:38:10Z", "type": "commit"}, {"oid": "700388d128db1a202e7cf0915fad29e377f0909c", "url": "https://github.com/apache/pulsar/commit/700388d128db1a202e7cf0915fad29e377f0909c", "message": "make format", "committedDate": "2020-06-08T07:14:30Z", "type": "commit"}]}