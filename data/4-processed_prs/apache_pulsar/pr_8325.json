{"pr_number": 8325, "pr_title": "[Issue 8311][pulsar-client-go] Fix memory leak in cgo golang client", "pr_createdAt": "2020-10-21T09:25:37Z", "pr_url": "https://github.com/apache/pulsar/pull/8325", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUxNTg0OA==", "url": "https://github.com/apache/pulsar/pull/8325#discussion_r509515848", "bodyText": "This doesn't change anything, it's just for consistency with the next line.", "author": "bschofield", "createdAt": "2020-10-21T17:55:24Z", "path": "pulsar-client-go/pulsar/c_go_pulsar.h", "diffHunk": "@@ -61,7 +61,7 @@ static inline void _pulsar_producer_close_async(pulsar_producer_t *producer, voi\n     pulsar_producer_close_async(producer, pulsarProducerCloseCallbackProxy, ctx);\n }\n \n-void pulsarProducerSendCallbackProxy(pulsar_result result, pulsar_message_id_t *message, void *ctx);\n+void pulsarProducerSendCallbackProxy(pulsar_result result, pulsar_message_id_t *messageId, void *ctx);", "originalCommit": "fa4356d95417fea946d56d469efb53ad25f6204c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjY5MQ==", "url": "https://github.com/apache/pulsar/pull/8325#discussion_r510272691", "bodyText": "@bschofield I think this free should not be done, because getMessageId(messageId) is already attaching a finalizer to the Go object and it will free the message id automatically:\nfunc getMessageId(messageId *C.pulsar_message_id_t) MessageID {\n\tmsgId := &messageID{ptr: messageId}\n\truntime.SetFinalizer(msgId, messageIdFinalizer)\n\treturn msgId\n}", "author": "merlimat", "createdAt": "2020-10-22T15:52:03Z", "path": "pulsar-client-go/pulsar/c_producer.go", "diffHunk": "@@ -298,6 +298,7 @@ func pulsarProducerSendCallbackProxyWithMsgID(res C.pulsar_result, messageId *C.\n \t\tsendCallback.callback(getMessageId(messageId), newError(res, \"Failed to send message\"))\n \t} else {\n \t\tsendCallback.callback(getMessageId(messageId), nil)\n+\t\tC.pulsar_message_id_free(messageId)", "originalCommit": "fa4356d95417fea946d56d469efb53ad25f6204c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyMjE0Mg==", "url": "https://github.com/apache/pulsar/pull/8325#discussion_r510322142", "bodyText": "You're absolutely right. I didn't even think to check that getter for side effects. Removed in latest commit. Thanks!", "author": "bschofield", "createdAt": "2020-10-22T17:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjY5MQ=="}], "type": "inlineReview"}, {"oid": "a95d48811e5f6d51a2cdb0d3b8c443a70a03da4f", "url": "https://github.com/apache/pulsar/commit/a95d48811e5f6d51a2cdb0d3b8c443a70a03da4f", "message": "[Issue 8311] Fixes memory leak in cgo golang client\n\nIn the C/C++ glue code, file c_Producer.cc function handle_producer_send(),\na new pulsar_message_id_t is created. This needs to be freed at some point.\n\nBecause of issues with legacy C clients, it is not possible to call delete\nfrom inside c_Producer.cc. Instead, the client must call pulsar_message_id_free().\n\nPreviously, the cgo interface was not freeing this message ID, which caused a\nmemory leak on every message sent.", "committedDate": "2020-10-22T17:03:33Z", "type": "commit"}, {"oid": "0b8f4a4510449274e50af6b1233f73f22d83b3d3", "url": "https://github.com/apache/pulsar/commit/0b8f4a4510449274e50af6b1233f73f22d83b3d3", "message": "The explicit free inside pulsarProducerSendCallbackProxyWithMsgID() is not required, because the getMessageId() call attaches a finalizer which will take care of things.", "committedDate": "2020-10-22T17:03:33Z", "type": "commit"}]}