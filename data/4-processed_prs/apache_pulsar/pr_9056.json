{"pr_number": 9056, "pr_title": "Add streaming dispatcher.", "pr_createdAt": "2020-12-25T01:22:09Z", "pr_url": "https://github.com/apache/pulsar/pull/9056", "timeline": [{"oid": "41d44cfcb5c3f827548857878e7580de5ef7d80d", "url": "https://github.com/apache/pulsar/commit/41d44cfcb5c3f827548857878e7580de5ef7d80d", "message": "Add streaming dispatcher.", "committedDate": "2020-12-25T01:14:09Z", "type": "commit"}, {"oid": "b1bf5aa8a0bb3aed6ae48ab69711873c7b9787d5", "url": "https://github.com/apache/pulsar/commit/b1bf5aa8a0bb3aed6ae48ab69711873c7b9787d5", "message": "Update situation reach end of topic.\nAdd debug print for ut.", "committedDate": "2020-12-25T22:13:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODc5Mg==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r549788792", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void notifyWaitingEntryCallBack() {\n          \n          \n            \n                void notifyWaitingEntryCallBacks() {", "author": "sijie", "createdAt": "2020-12-29T17:34:17Z", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -1915,6 +1920,21 @@ void notifyCursors() {\n         }\n     }\n \n+    void notifyWaitingEntryCallBack() {", "originalCommit": "b1bf5aa8a0bb3aed6ae48ab69711873c7b9787d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNjAzMg==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r552316032", "bodyText": "done.", "author": "MarvinCai", "createdAt": "2021-01-06T01:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODc5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODkxMA==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r549788910", "bodyText": "Can you mark this feature as a preview feature?", "author": "sijie", "createdAt": "2020-12-29T17:34:37Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -667,6 +667,12 @@\n     )\n     private boolean preciseDispatcherFlowControl = false;\n \n+    @FieldContext(\n+        category = CATEGORY_SERVER,\n+        doc = \"Whether to use streaming read dispatcher.\"\n+    )\n+    private boolean streamingDispatch = false;", "originalCommit": "b1bf5aa8a0bb3aed6ae48ab69711873c7b9787d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNjQzMw==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r552316433", "bodyText": "updated the doc.", "author": "MarvinCai", "createdAt": "2021-01-06T01:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODkxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODk2Ng==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r549788966", "bodyText": "It would be great to add more documentation about this feature.", "author": "sijie", "createdAt": "2020-12-29T17:34:50Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -667,6 +667,12 @@\n     )\n     private boolean preciseDispatcherFlowControl = false;\n \n+    @FieldContext(\n+        category = CATEGORY_SERVER,\n+        doc = \"Whether to use streaming read dispatcher.\"", "originalCommit": "b1bf5aa8a0bb3aed6ae48ab69711873c7b9787d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MTgwMA==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r549791800", "bodyText": "final?", "author": "sijie", "createdAt": "2020-12-29T17:44:18Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentStreamingDispatcherMultipleConsumers.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.persistent;\n+\n+import com.google.common.collect.Lists;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.bookkeeper.mledger.Entry;\n+import org.apache.bookkeeper.mledger.ManagedCursor;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.ManagedCursorImpl;\n+import org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.bookkeeper.mledger.util.SafeRun;\n+import org.apache.pulsar.broker.service.Consumer;\n+import org.apache.pulsar.broker.service.Subscription;\n+import org.apache.pulsar.broker.service.streamingdispatch.PendingReadEntryRequest;\n+import org.apache.pulsar.broker.service.streamingdispatch.StreamingDispatcher;\n+import org.apache.pulsar.broker.service.streamingdispatch.StreamingEntryReader;\n+\n+/**\n+ * A {@link PersistentDispatcherMultipleConsumers} implemented {@link StreamingDispatcher}.\n+ * It'll use {@link StreamingEntryReader} to read new entries instead read as micro batch from managed ledger.\n+ */\n+@Slf4j\n+public class PersistentStreamingDispatcherMultipleConsumers extends PersistentDispatcherMultipleConsumers\n+    implements StreamingDispatcher {\n+\n+    private StreamingEntryReader streamingEntryReader = new StreamingEntryReader((ManagedCursorImpl) cursor,", "originalCommit": "b1bf5aa8a0bb3aed6ae48ab69711873c7b9787d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzMyMQ==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r552317321", "bodyText": "updated.", "author": "MarvinCai", "createdAt": "2021-01-06T01:45:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MTgwMA=="}], "type": "inlineReview"}, {"oid": "242e61d316a9318f7127c2883dc5658d57ebd146", "url": "https://github.com/apache/pulsar/commit/242e61d316a9318f7127c2883dc5658d57ebd146", "message": "Merge remote-tracking branch 'apache-pulsar/master' into streamline-dispatcher", "committedDate": "2021-01-06T00:25:40Z", "type": "commit"}, {"oid": "474ed8b5627f47d7e8b7d1c46a29442268877ef0", "url": "https://github.com/apache/pulsar/commit/474ed8b5627f47d7e8b7d1c46a29442268877ef0", "message": "Address comments.", "committedDate": "2021-01-06T07:46:19Z", "type": "commit"}, {"oid": "2f02621bb6a14d5057eff99eb5da33557c01cc5e", "url": "https://github.com/apache/pulsar/commit/2f02621bb6a14d5057eff99eb5da33557c01cc5e", "message": "Try remove unnecessary synchronization in StreamingEntryReader.", "committedDate": "2021-01-06T18:32:41Z", "type": "commit"}, {"oid": "c296481639f0ff2ce39ab46b0e106bf1076b2b22", "url": "https://github.com/apache/pulsar/commit/c296481639f0ff2ce39ab46b0e106bf1076b2b22", "message": "Try run tests for streaming dispatcher as separate mvn command.", "committedDate": "2021-01-08T05:45:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcxMTkyOQ==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r557711929", "bodyText": "@MarvinCai Can you write a test case for this class?", "author": "sijie", "createdAt": "2021-01-14T21:32:23Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/streamingdispatch/StreamingEntryReader.java", "diffHunk": "@@ -0,0 +1,338 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.streamingdispatch;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.bookkeeper.mledger.AsyncCallbacks;\n+import org.apache.bookkeeper.mledger.Entry;\n+import org.apache.bookkeeper.mledger.ManagedLedgerException;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.WaitingEntryCallBack;\n+import org.apache.bookkeeper.mledger.impl.ManagedCursorImpl;\n+import org.apache.bookkeeper.mledger.impl.ManagedLedgerImpl;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.bookkeeper.mledger.util.SafeRun;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.broker.transaction.buffer.exceptions.TransactionNotSealedException;\n+import org.apache.pulsar.client.impl.Backoff;\n+\n+/**\n+ * Entry reader that fulfill read request by streamline the read instead of reading with micro batch.\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class StreamingEntryReader implements AsyncCallbacks.ReadEntryCallback, WaitingEntryCallBack {", "originalCommit": "c296481639f0ff2ce39ab46b0e106bf1076b2b22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc2NTc5Mg==", "url": "https://github.com/apache/pulsar/pull/9056#discussion_r557765792", "bodyText": "There's StreamingEntryReaderTests class, it's folded by github.", "author": "MarvinCai", "createdAt": "2021-01-14T23:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcxMTkyOQ=="}], "type": "inlineReview"}, {"oid": "884a49c5fe3e0d5137bc634f4d7106377a2ece09", "url": "https://github.com/apache/pulsar/commit/884a49c5fe3e0d5137bc634f4d7106377a2ece09", "message": "Merge remote-tracking branch 'apache-pulsar/master' into streamline-dispatcher", "committedDate": "2021-02-01T09:45:39Z", "type": "commit"}, {"oid": "081a569d2877f6492cba71ef06a1ea0560e837e7", "url": "https://github.com/apache/pulsar/commit/081a569d2877f6492cba71ef06a1ea0560e837e7", "message": "Fix import for proto generated type.", "committedDate": "2021-02-01T16:52:42Z", "type": "commit"}]}