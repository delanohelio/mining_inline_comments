{"pr_number": 6287, "pr_title": "[C++] Fixed triggering timers when the connection is being closed", "pr_createdAt": "2020-02-10T22:49:02Z", "pr_url": "https://github.com/apache/pulsar/pull/6287", "timeline": [{"oid": "423af929ae35d5392b6dd450c2ae792f07e0eaa5", "url": "https://github.com/apache/pulsar/commit/423af929ae35d5392b6dd450c2ae792f07e0eaa5", "message": "[C++] Fixed triggering timers when the connection is being closed", "committedDate": "2020-02-10T22:42:31Z", "type": "commit"}, {"oid": "902a4ba06ebff5a9a9a6b5137afb512a829969a5", "url": "https://github.com/apache/pulsar/commit/902a4ba06ebff5a9a9a6b5137afb512a829969a5", "message": "Fixed cpp formatting", "committedDate": "2020-02-10T23:07:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTM2Mg==", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377399362", "bodyText": "Not sure if we need this, since the operations are done under a lock.", "author": "jai1", "createdAt": "2020-02-11T00:40:49Z", "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -284,10 +285,14 @@ void ClientConnection::startConsumerStatsTimer(std::vector<uint64_t> consumerSta\n          it != pendingConsumerStatsMap_.end(); ++it) {\n         consumerStatsRequests.push_back(it->first);\n     }\n-    consumerStatsRequestTimer_->expires_from_now(operationsTimeout_);\n-    consumerStatsRequestTimer_->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout,\n-                                                     shared_from_this(), std::placeholders::_1,\n-                                                     consumerStatsRequests));\n+\n+    DeadlineTimerPtr timer = consumerStatsRequestTimer_;", "originalCommit": "902a4ba06ebff5a9a9a6b5137afb512a829969a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyODE5Nw==", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377428197", "bodyText": "The timer is not destroyed under a lock", "author": "merlimat", "createdAt": "2020-02-11T02:59:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTUwNg==", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377399506", "bodyText": "Don't we need\nconsumerStatsRequestTimer_  = timer here?", "author": "jai1", "createdAt": "2020-02-11T00:41:22Z", "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -284,10 +285,14 @@ void ClientConnection::startConsumerStatsTimer(std::vector<uint64_t> consumerSta\n          it != pendingConsumerStatsMap_.end(); ++it) {\n         consumerStatsRequests.push_back(it->first);\n     }\n-    consumerStatsRequestTimer_->expires_from_now(operationsTimeout_);\n-    consumerStatsRequestTimer_->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout,\n-                                                     shared_from_this(), std::placeholders::_1,\n-                                                     consumerStatsRequests));\n+\n+    DeadlineTimerPtr timer = consumerStatsRequestTimer_;\n+    if (timer) {\n+        timer->expires_from_now(operationsTimeout_);\n+        timer->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout, shared_from_this(),\n+                                    std::placeholders::_1, consumerStatsRequests));\n+    }", "originalCommit": "902a4ba06ebff5a9a9a6b5137afb512a829969a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyODQyOA==", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377428428", "bodyText": "No, it's already sharing a reference to the same object. The local copy is just to keep it alive while we're using it.", "author": "merlimat", "createdAt": "2020-02-11T03:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTU5NA==", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377399594", "bodyText": "nit: Can you create a separate function for this?", "author": "jai1", "createdAt": "2020-02-11T00:41:42Z", "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -253,9 +253,10 @@ void ClientConnection::handlePulsarConnected(const CommandConnected& cmdConnecte\n \n     if (serverProtocolVersion_ >= v1) {\n         // Only send keep-alive probes if the broker supports it\n-        keepAliveTimer_ = executor_->createDeadlineTimer();\n-        keepAliveTimer_->expires_from_now(boost::posix_time::seconds(KeepAliveIntervalInSeconds));\n-        keepAliveTimer_->async_wait(std::bind(&ClientConnection::handleKeepAliveTimeout, shared_from_this()));\n+        DeadlineTimerPtr keepAliveTimer = executor_->createDeadlineTimer();", "originalCommit": "902a4ba06ebff5a9a9a6b5137afb512a829969a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}