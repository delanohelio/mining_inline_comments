{"pr_number": 6974, "pr_title": "Fix 2.4.0 missing docs of cgo client", "pr_createdAt": "2020-05-17T13:26:17Z", "pr_url": "https://github.com/apache/pulsar/pull/6974", "timeline": [{"oid": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "url": "https://github.com/apache/pulsar/commit/f6f208cbc85b6f4442434262d6f6835f7867fb29", "message": "Fix 2.4.0 missing docs of cgo client\n\nSigned-off-by: xiaolong.ran <rxl@apache.org>", "committedDate": "2020-05-17T13:25:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMyOTc2NA==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426329764", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Pulsar Go client have the following methods available:\n          \n          \n            \n            Pulsar Go client has the following methods available:", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:18:18Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -90,6 +90,21 @@ func main() {\n }\n ```\n \n+### Client operations\n+\n+Pulsar Go client have the following methods available:", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMyOTgzNg==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426329836", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `CreateProducer(ProducerOptions)` | Create the producer instance(This method will block until the producer is created successfully). | `(Producer, error)`\n          \n          \n            \n            `CreateProducer(ProducerOptions)` | Create the producer instance. (This method will be blocked until the producer is created successfully.) | `(Producer, error)`", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:18:53Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -90,6 +90,21 @@ func main() {\n }\n ```\n \n+### Client operations\n+\n+Pulsar Go client have the following methods available:\n+\n+Method | Description | Return type\n+:------|:------------|:-----------\n+`CreateProducer(ProducerOptions)` | Create the producer instance(This method will block until the producer is created successfully). | `(Producer, error)`", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMyOTkwMw==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426329903", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `CreateProducerWithSchema(ProducerOptions, Schema)` | Create the producer instance with schema | `(Producer, error)`\n          \n          \n            \n            `CreateProducerWithSchema(ProducerOptions, Schema)` | Create a producer instance with schema. | `(Producer, error)`", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:19:24Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -90,6 +90,21 @@ func main() {\n }\n ```\n \n+### Client operations\n+\n+Pulsar Go client have the following methods available:\n+\n+Method | Description | Return type\n+:------|:------------|:-----------\n+`CreateProducer(ProducerOptions)` | Create the producer instance(This method will block until the producer is created successfully). | `(Producer, error)`\n+`CreateProducerWithSchema(ProducerOptions, Schema)` | Create the producer instance with schema | `(Producer, error)`", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzMDI1OQ==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426330259", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `Close()` | Close the Client and free associated resources. | `error`\n          \n          \n            \n            `Close()` | Close the Pulsar Go client and release associated resources. | `error`", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:21:27Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -90,6 +90,21 @@ func main() {\n }\n ```\n \n+### Client operations\n+\n+Pulsar Go client have the following methods available:\n+\n+Method | Description | Return type\n+:------|:------------|:-----------\n+`CreateProducer(ProducerOptions)` | Create the producer instance(This method will block until the producer is created successfully). | `(Producer, error)`\n+`CreateProducerWithSchema(ProducerOptions, Schema)` | Create the producer instance with schema | `(Producer, error)`\n+`Subscribe(ConsumerOptions)` | Create a `Consumer` by subscribing to a topic. | `(Consumer, error)`\n+`SubscribeWithSchema(ConsumerOptions, Schema)` | Create a `Consumer` with schema by subscribing to a topic. | `(Consumer, error)`\n+`CreateReader(ReaderOptions)` | Create a Reader instance. | `(Reader, error)`\n+`CreateReaderWithSchema(ReaderOptions, Schema)` | Create a Reader instance with schema. | `(Reader, error)`\n+`TopicPartitions(topic string)` | Fetch the list of partitions for a given topic. | `([]string, error)`\n+`Close()` | Close the Client and free associated resources. | `error`", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzMDMyMQ==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426330321", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `Schema()` | Message schema definition | `Schema`\n          \n          \n            \n            `Schema()` | Set the message schema definition. | `Schema`", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:22:04Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -268,6 +283,7 @@ Method | Description | Return type\n `NackID(MessageID)` | Acknowledge the failure to process a single message. | `error`\n `Close()` | Closes the consumer, disabling its ability to receive messages from the broker | `error`\n `RedeliverUnackedMessages()` | Redelivers *all* unacknowledged messages on the topic. In [failover](concepts-messaging.md#failover) mode, this request is ignored if the consumer isn't active on the specified topic; in [shared](concepts-messaging.md#shared) mode, redelivered messages are distributed across all consumers connected to the topic. **Note**: this is a *non-blocking* operation that doesn't throw an error. |\n+`Schema()` | Message schema definition | `Schema`", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzMDM2OA==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426330368", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `Name` | Set the consumer name | `string`\n          \n          \n            \n            `Name` | Set the consumer name. | `string`", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:22:27Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -330,10 +395,13 @@ Parameter | Description | Default\n `Name` | The name of the consumer |\n `AckTimeout` | | 0\n `NackRedeliveryDelay` | The delay after which to redeliver the messages that failed to be processed. Default is 1min. (See `Consumer.Nack()`) | 1 minute\n-`SubscriptionType` | Available options are `Exclusive`, `Shared`, and `Failover` | `Exclusive`\n+`SubscriptionType` | Available options are `Exclusive`, `Shared`, `Key_Shared` and `Failover` | `Exclusive`\n `MessageChannel` | The Go channel used by the consumer. Messages that arrive from the Pulsar topic(s) will be passed to this channel. |\n `ReceiverQueueSize` | Sets the size of the consumer's receiver queue, i.e. the number of messages that can be accumulated by the consumer before the application calls `Receive`. A value higher than the default of 1000 could increase consumer throughput, though at the expense of more memory utilization. | 1000\n `MaxTotalReceiverQueueSizeAcrossPartitions` |Set the max total receiver queue size across partitions. This setting will be used to reduce the receiver queue size for individual partitions if the total exceeds this value | 50000\n+`Name` | Set the consumer name | `string`", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzMDUyOA==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426330528", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `ReadCompacted` | If enabled, the consumer will read messages from the compacted topic rather than reading the full message backlog of the topic.| `bool`\n          \n          \n            \n            `ReadCompacted` | If this parameter is enabled, the consumer reads messages from the compacted topic rather than reading the full message backlog of the topic.| `bool`", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:23:13Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -330,10 +395,13 @@ Parameter | Description | Default\n `Name` | The name of the consumer |\n `AckTimeout` | | 0\n `NackRedeliveryDelay` | The delay after which to redeliver the messages that failed to be processed. Default is 1min. (See `Consumer.Nack()`) | 1 minute\n-`SubscriptionType` | Available options are `Exclusive`, `Shared`, and `Failover` | `Exclusive`\n+`SubscriptionType` | Available options are `Exclusive`, `Shared`, `Key_Shared` and `Failover` | `Exclusive`\n `MessageChannel` | The Go channel used by the consumer. Messages that arrive from the Pulsar topic(s) will be passed to this channel. |\n `ReceiverQueueSize` | Sets the size of the consumer's receiver queue, i.e. the number of messages that can be accumulated by the consumer before the application calls `Receive`. A value higher than the default of 1000 could increase consumer throughput, though at the expense of more memory utilization. | 1000\n `MaxTotalReceiverQueueSizeAcrossPartitions` |Set the max total receiver queue size across partitions. This setting will be used to reduce the receiver queue size for individual partitions if the total exceeds this value | 50000\n+`Name` | Set the consumer name | `string`\n+`ReadCompacted` | If enabled, the consumer will read messages from the compacted topic rather than reading the full message backlog of the topic.| `bool`", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzMTYzMA==", "url": "https://github.com/apache/pulsar/pull/6974#discussion_r426331630", "bodyText": "it's better to use a whole sentence as the leading-in sentence. such as:\nThis example shows how to create a producer and consumer with schema.", "author": "Huanli-Meng", "createdAt": "2020-05-18T01:30:18Z", "path": "site2/website/versioned_docs/version-2.4.0/client-libraries-go.md", "diffHunk": "@@ -321,6 +337,55 @@ func main() {\n }\n ```\n \n+#### Schema example\n+\n+Here's an example usage of", "originalCommit": "f6f208cbc85b6f4442434262d6f6835f7867fb29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4a119998db85d5a18f2ee71b3d8309c48d1d247", "url": "https://github.com/apache/pulsar/commit/e4a119998db85d5a18f2ee71b3d8309c48d1d247", "message": "fix comments\n\nSigned-off-by: xiaolong.ran <rxl@apache.org>", "committedDate": "2020-05-18T02:57:43Z", "type": "commit"}, {"oid": "79a6765d27ee2d7d7517a1005f64b84ca4e5794c", "url": "https://github.com/apache/pulsar/commit/79a6765d27ee2d7d7517a1005f64b84ca4e5794c", "message": "fix comments\n\nSigned-off-by: xiaolong.ran <rxl@apache.org>", "committedDate": "2020-05-18T02:59:13Z", "type": "commit"}]}