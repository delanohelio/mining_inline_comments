{"pr_number": 8169, "pr_title": "[broker] Add command to delete a cluster's metadata from ZK", "pr_createdAt": "2020-09-30T11:09:36Z", "pr_url": "https://github.com/apache/pulsar/pull/8169", "timeline": [{"oid": "6c876703c96dac693524845ce897e3b51f499ea4", "url": "https://github.com/apache/pulsar/commit/6c876703c96dac693524845ce897e3b51f499ea4", "message": "Add command to delete a cluster's metadata from ZK", "committedDate": "2020-09-30T11:04:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0MDI2Ng==", "url": "https://github.com/apache/pulsar/pull/8169#discussion_r497540266", "bodyText": "Maybe some of these parameters could be read from conf file?", "author": "jiazhai", "createdAt": "2020-09-30T14:09:14Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar;\n+\n+import com.beust.jcommander.JCommander;\n+import com.beust.jcommander.Parameter;\n+import org.apache.pulsar.zookeeper.ZooKeeperClientFactory;\n+import org.apache.pulsar.zookeeper.ZookeeperClientFactoryImpl;\n+import org.apache.zookeeper.KeeperException;\n+import org.apache.zookeeper.ZKUtil;\n+import org.apache.zookeeper.ZooKeeper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Teardown the metadata for a existed Pulsar cluster\n+ */\n+public class PulsarClusterMetadataTeardown {\n+\n+    private static class Arguments {\n+        @Parameter(names = { \"-zk\",\n+                \"--zookeeper\"}, description = \"Local ZooKeeper quorum connection string\", required = true)\n+        private String zookeeper;\n+\n+        @Parameter(names = {\n+                \"--zookeeper-session-timeout-ms\"\n+        }, description = \"Local zookeeper session timeout ms\")\n+        private int zkSessionTimeoutMillis = 30000;\n+\n+        @Parameter(names = { \"-c\", \"-cluster\" }, description = \"Cluster name\")\n+        private String cluster;\n+\n+        @Parameter(names = { \"-cs\", \"--configuration-store\" }, description = \"Configuration Store connection string\")\n+        private String configurationStore;\n+\n+        @Parameter(names = { \"-h\", \"--help\" }, description = \"Show this help message\")\n+        private boolean help = false;\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException {\n+        Arguments arguments = new Arguments();\n+        JCommander jcommander = new JCommander();\n+        try {\n+            jcommander.addObject(arguments);\n+            jcommander.parse(args);\n+            if (arguments.help) {\n+                jcommander.usage();\n+                return;\n+            }\n+        } catch (Exception e) {\n+            jcommander.usage();\n+            throw e;\n+        }\n+\n+        ZooKeeper localZk = initZk(arguments.zookeeper, arguments.zkSessionTimeoutMillis);\n+\n+        deleteZkNodeRecursively(localZk, \"/bookies\");", "originalCommit": "6c876703c96dac693524845ce897e3b51f499ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYxNjkzNA==", "url": "https://github.com/apache/pulsar/pull/8169#discussion_r497616934", "bodyText": "/managed-ledgers and /namespaces are hard coded in PulsarClusterMetadataSetup, /schemas is hard coded in BookkeeperSchemaStorage,  /loadbalance is hard coded in broker.loadbalance package. The left ZK nodes I can't find the definition, but I don't find it configurable. If they're all hard coded, IMO, reading them from conf file is unnecessary.", "author": "BewareMyPower", "createdAt": "2020-09-30T15:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0MDI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk3NjE0Nw==", "url": "https://github.com/apache/pulsar/pull/8169#discussion_r497976147", "bodyText": "get it", "author": "jiazhai", "createdAt": "2020-10-01T04:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0MDI2Ng=="}], "type": "inlineReview"}]}