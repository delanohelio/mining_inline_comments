{"pr_number": 7802, "pr_title": "Support set MaxUnackMessagesPerSubscription on topic level", "pr_createdAt": "2020-08-12T14:25:28Z", "pr_url": "https://github.com/apache/pulsar/pull/7802", "timeline": [{"oid": "8e8427fd1705b1ce66d36e5a965e3aa4943eabf2", "url": "https://github.com/apache/pulsar/commit/8e8427fd1705b1ce66d36e5a965e3aa4943eabf2", "message": "support maxunacked", "committedDate": "2020-08-12T09:19:35Z", "type": "commit"}, {"oid": "c3de422adf129b95d5270b422fb5dc7d2f9c2bda", "url": "https://github.com/apache/pulsar/commit/c3de422adf129b95d5270b422fb5dc7d2f9c2bda", "message": "change method name", "committedDate": "2020-08-12T09:25:44Z", "type": "commit"}, {"oid": "730652362653c8397961dba7648dccfff0e8218d", "url": "https://github.com/apache/pulsar/commit/730652362653c8397961dba7648dccfff0e8218d", "message": "merge master", "committedDate": "2020-08-12T14:23:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMzcwOQ==", "url": "https://github.com/apache/pulsar/pull/7802#discussion_r469313709", "bodyText": "Can I not pass AsyncResponse to the base class? Make internalSetMaxUnackedMessagesOnSubscription return CompletableFuture<Void>.\nI think this can lower the base and make it cleaner.", "author": "jianyun8023", "createdAt": "2020-08-12T14:45:00Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -800,6 +800,30 @@ protected void internalUnloadTopic(AsyncResponse asyncResponse, boolean authorit\n         }\n     }\n \n+    protected void internalSetMaxUnackedMessagesOnSubscription(AsyncResponse asyncResponse, Integer maxUnackedNum) {", "originalCommit": "730652362653c8397961dba7648dccfff0e8218d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTU0Mw==", "url": "https://github.com/apache/pulsar/pull/7802#discussion_r469329543", "bodyText": "TopicPolicies is implemented based on systemTopic, there is a delay in initialization, it is recommended to wait a few seconds", "author": "jianyun8023", "createdAt": "2020-08-12T15:06:08Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/MaxUnackedMessagesTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.admin;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.common.collect.Maps;\n+import org.apache.pulsar.client.api.Consumer;\n+import org.apache.pulsar.client.api.ConsumerBuilder;\n+import org.apache.pulsar.client.api.Message;\n+import org.apache.pulsar.client.api.MessageId;\n+import org.apache.pulsar.client.api.Producer;\n+import org.apache.pulsar.client.api.ProducerConsumerBase;\n+import org.apache.pulsar.client.api.PulsarClientException;\n+import org.apache.pulsar.client.api.SubscriptionType;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+import org.testng.collections.Lists;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.testng.Assert.fail;\n+\n+public class MaxUnackedMessagesTest extends ProducerConsumerBase {\n+    private final String testTenant = \"public\";\n+    private final String testNamespace = \"default\";\n+    private final String myNamespace = testTenant + \"/\" + testNamespace;\n+    private final String testTopic = \"persistent://\" + myNamespace + \"/max-unacked-\";\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        this.conf.setSystemTopicEnabled(true);\n+        this.conf.setTopicLevelPoliciesEnabled(true);\n+        super.internalSetup();\n+        super.producerBaseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test(timeOut = 20000)\n+    public void testMaxUnackedMessagesOnSubscriptionApi() throws Exception {\n+        final String topicName = testTopic + UUID.randomUUID().toString();\n+        admin.topics().createPartitionedTopic(topicName, 3);\n+        Integer max = admin.topics().getMaxUnackedMessagesOnSubscription(topicName);", "originalCommit": "730652362653c8397961dba7648dccfff0e8218d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3NjYxNw==", "url": "https://github.com/apache/pulsar/pull/7802#discussion_r469376617", "bodyText": "This is a good suggestion! But the fixed seconds of sleep may not guarantee the success of initialization, and if there are too many unit tests like this, it will slow down the CI process. So I try to loop to determine whether the initialization is successful.", "author": "315157973", "createdAt": "2020-08-12T16:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNDYwNA==", "url": "https://github.com/apache/pulsar/pull/7802#discussion_r469604604", "bodyText": "It's better to use the retry mechanism.", "author": "codelipenghui", "createdAt": "2020-08-12T23:34:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTU0Mw=="}], "type": "inlineReview"}, {"oid": "7ad0438e2da7acc4f1012de434b741643e0eefa1", "url": "https://github.com/apache/pulsar/commit/7ad0438e2da7acc4f1012de434b741643e0eefa1", "message": "fix as required", "committedDate": "2020-08-12T16:02:54Z", "type": "commit"}]}