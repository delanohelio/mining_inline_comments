{"pr_number": 15116, "pr_title": "Add striped content node B-tree bucket database impl", "pr_createdAt": "2020-10-30T13:54:53Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15116", "timeline": [{"oid": "20a572948405232c4fd5b74360c667e29058d2f8", "url": "https://github.com/vespa-engine/vespa/commit/20a572948405232c4fd5b74360c667e29058d2f8", "message": "Add striped implementation of B-tree content node bucket database\n\nAbstracts away multiple underlying B-tree DBs that each hold a subset\nof the super bucket space. Offers ordered iteration via a priority-queue\nbased view over the sub DBs.\n\nNot yet ready for prime time, as the striping inherently requires an\nabsolute lower bound on the bucket bits used in the system, which is\ncurrently not enforced.", "committedDate": "2020-10-30T13:35:48Z", "type": "commit"}, {"oid": "6d917736806d1e69b0b662657b5ab09e1bc5b904", "url": "https://github.com/vespa-engine/vespa/commit/6d917736806d1e69b0b662657b5ab09e1bc5b904", "message": "Add stripe bits config and wire to implementation\n\nDefault is zero bits, which causes the standard, non-striped\nimplementation to be used.", "committedDate": "2020-10-30T13:51:09Z", "type": "commit"}, {"oid": "848ef45a8fa00dc553919f7947507b6e41ed4381", "url": "https://github.com/vespa-engine/vespa/commit/848ef45a8fa00dc553919f7947507b6e41ed4381", "message": "Add test for explicit read guard iterator key ordering", "committedDate": "2020-10-30T15:18:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0NzA4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515847086", "bodyText": "Consider adding class comment.", "author": "geirst", "createdAt": "2020-11-02T09:40:52Z", "path": "storage/src/vespa/storage/bucketdb/const_iterator.h", "diffHunk": "@@ -0,0 +1,18 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include <cstdint>\n+\n+namespace storage::bucketdb {\n+\n+template <typename ConstRefT>\n+class ConstIterator {", "originalCommit": "20a572948405232c4fd5b74360c667e29058d2f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg2MzQxNw==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515863417", "bodyText": "Done", "author": "vekterli", "createdAt": "2020-11-02T10:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0NzA4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0ODQwMg==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515848402", "bodyText": "Nitpick: Consider /** */ for class comments as used elsewhere.", "author": "geirst", "createdAt": "2020-11-02T09:43:07Z", "path": "storage/src/vespa/storage/bucketdb/striped_btree_lockable_map.h", "diffHunk": "@@ -0,0 +1,88 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include \"btree_lockable_map.h\"\n+#include <memory>\n+#include <vector>\n+\n+namespace storage::bucketdb {\n+\n+// Bucket database implementation that stripes all superbuckets across", "originalCommit": "20a572948405232c4fd5b74360c667e29058d2f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg2MzQ4OQ==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515863489", "bodyText": "Done", "author": "vekterli", "createdAt": "2020-11-02T10:07:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0ODQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0OTY3OA==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515849678", "bodyText": "I think we can remove this.", "author": "geirst", "createdAt": "2020-11-02T09:45:09Z", "path": "storage/src/vespa/storage/bucketdb/striped_btree_lockable_map.hpp", "diffHunk": "@@ -0,0 +1,315 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include \"striped_btree_lockable_map.h\"\n+#include \"btree_lockable_map.hpp\"\n+#include <algorithm>\n+#include <cassert>\n+#include <queue>\n+\n+namespace storage::bucketdb {\n+\n+namespace {\n+\n+constexpr uint8_t used_bits_of(uint64_t key) noexcept {\n+    return static_cast<uint8_t>(key & 0b11'1111ULL);\n+}\n+\n+}\n+\n+// TODO rename to sharded_btree_lockable_map instead?", "originalCommit": "20a572948405232c4fd5b74360c667e29058d2f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1NjIwMg==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515856202", "bodyText": "Already removed in a subsequent commit \ud83d\ude42", "author": "vekterli", "createdAt": "2020-11-02T09:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0OTY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1NDAyNw==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515854027", "bodyText": "Nitpick: Consider using /** */ instead.", "author": "geirst", "createdAt": "2020-11-02T09:52:07Z", "path": "storage/src/vespa/storage/common/content_bucket_db_options.h", "diffHunk": "@@ -0,0 +1,16 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include <cstdint>\n+\n+namespace storage {\n+\n+// Type-safe encapsulation of any options that can be passed from config", "originalCommit": "6d917736806d1e69b0b662657b5ab09e1bc5b904", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg2MzYwMA==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515863600", "bodyText": "Done", "author": "vekterli", "createdAt": "2020-11-02T10:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1NDAyNw=="}], "type": "inlineReview"}, {"oid": "7fe9b99240dc82a0416608c1f92c6ab50eea5dc4", "url": "https://github.com/vespa-engine/vespa/commit/7fe9b99240dc82a0416608c1f92c6ab50eea5dc4", "message": "Update and add comments", "committedDate": "2020-11-02T10:02:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg5NDkyOQ==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515894929", "bodyText": "This might not work as intended if _n_stripe_bits is 0.", "author": "toregge", "createdAt": "2020-11-02T11:01:25Z", "path": "storage/src/vespa/storage/bucketdb/striped_btree_lockable_map.hpp", "diffHunk": "@@ -0,0 +1,313 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include \"striped_btree_lockable_map.h\"\n+#include \"btree_lockable_map.hpp\"\n+#include <algorithm>\n+#include <cassert>\n+#include <queue>\n+\n+namespace storage::bucketdb {\n+\n+namespace {\n+\n+constexpr uint8_t used_bits_of(uint64_t key) noexcept {\n+    return static_cast<uint8_t>(key & 0b11'1111ULL);\n+}\n+\n+}\n+\n+template <typename T>\n+StripedBTreeLockableMap<T>::StripedBTreeLockableMap(uint8_t n_stripe_bits)\n+    : _n_stripe_bits(n_stripe_bits),\n+      _n_stripes(1ULL << _n_stripe_bits),\n+      _stripes()\n+{\n+    assert(_n_stripe_bits > 0);\n+    assert(_n_stripe_bits <= MaxStripeBits);\n+    _stripes.reserve(_n_stripes);\n+    for (size_t i = 0; i < _n_stripes; ++i) {\n+        // TODO reduce initial sub-DB data store memory usage based on number of stripes\n+        _stripes.emplace_back(std::make_unique<BTreeLockableMap<T>>());\n+    }\n+}\n+\n+template <typename T>\n+StripedBTreeLockableMap<T>::~StripedBTreeLockableMap() = default;\n+\n+template <typename T>\n+size_t StripedBTreeLockableMap<T>::stripe_of(key_type key) const noexcept {\n+    assert(used_bits_of(key) >= _n_stripe_bits);\n+    // Since bucket keys have count-bits at the LSB positions, we want to look at the MSBs instead.\n+    return (key >> (64 - _n_stripe_bits));", "originalCommit": "7fe9b99240dc82a0416608c1f92c6ab50eea5dc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyODQ1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/15116#discussion_r515928453", "bodyText": "_n_stripe_bits is asserted to be in the range [1, 8] at construction time, so this invariant should be maintained", "author": "vekterli", "createdAt": "2020-11-02T12:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg5NDkyOQ=="}], "type": "inlineReview"}]}