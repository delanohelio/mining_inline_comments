{"pr_number": 14039, "pr_title": "- Do not do maintenance in the logger thread. That blocks both delive\u2026", "pr_createdAt": "2020-08-12T14:37:56Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14039", "timeline": [{"oid": "a9f8c9ea4167044634b62cedec8071b5fcb5004d", "url": "https://github.com/vespa-engine/vespa/commit/a9f8c9ea4167044634b62cedec8071b5fcb5004d", "message": "- Do not do maintenance in the logger thread. That blocks both delivery to the bound Q and holds objects in memory.\n  Instead just signal that it might be a good idea to do maintenance.", "committedDate": "2020-08-12T14:35:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMzM4Mg==", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r469313382", "bodyText": "now you do the same anyway, this could be simpler:\n        while (true) {\n                maintenance();\n                waitForTrigger(2000);\n            }", "author": "arnej27959", "createdAt": "2020-08-12T14:44:34Z", "path": "logserver/src/main/java/com/yahoo/logserver/handlers/archive/FilesArchived.java", "diffHunk": "@@ -30,21 +28,28 @@\n      */\n     private final File root;\n \n+    private final Object mutex = new Object();\n+\n     // known-existing files inside the archive directory\n     private List<LogFile> knownFiles;\n \n-    public final static long compressAfterMillis = 2L * 3600 * 1000;\n-    private long maxAgeDays = 30; // GDPR rules: max 30 days\n-    private long sizeLimit = 30L * (1L << 30); // 30 GB\n+    public static final long compressAfterMillis = 2L * 3600 * 1000;\n+    private static final long maxAgeDays = 30; // GDPR rules: max 30 days\n+    private static final long sizeLimit = 30L * (1L << 30); // 30 GB\n+\n+    private void waitForTrigger(long milliS) throws InterruptedException {\n+        synchronized (mutex) {\n+            mutex.wait(milliS);\n+        }\n+    }\n \n     private void run() {\n         try {\n-            Thread.sleep(125000); // 2 m 5 s\n             while (true) {\n                 while (maintenance()) {", "originalCommit": "a9f8c9ea4167044634b62cedec8071b5fcb5004d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNzk5Ng==", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r469327996", "bodyText": "Good point.", "author": "baldersheim", "createdAt": "2020-08-12T15:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMzM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxNTUxMg==", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r469315512", "bodyText": "why do you get() then set() the same thing?", "author": "arnej27959", "createdAt": "2020-08-12T14:47:25Z", "path": "logserver/src/main/java/com/yahoo/logserver/handlers/HandlerThread.java", "diffHunk": "@@ -201,10 +182,12 @@ public void run() {\n                 drainList.add(queue.take());\n                 queue.drainTo(drainList);\n \n-                for (ItemOrList o : drainList) {\n+                for (int i = 0; i < drainList.size(); i++) {\n                     // we can get two types of elements here: single log\n                     // messages or lists of log messages, so we need to\n                     // handle them accordingly.\n+                    ItemOrList o = drainList.get(i);", "originalCommit": "a9f8c9ea4167044634b62cedec8071b5fcb5004d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyODMyNA==", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r469328324", "bodyText": "Argh, null it should be.", "author": "baldersheim", "createdAt": "2020-08-12T15:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxNTUxMg=="}], "type": "inlineReview"}, {"oid": "84f643743ee64c101efb564758a11a3a8a970168", "url": "https://github.com/vespa-engine/vespa/commit/84f643743ee64c101efb564758a11a3a8a970168", "message": "Set to null to enable GC to collect.", "committedDate": "2020-08-12T15:03:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA1MzQ0NQ==", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r477053445", "bodyText": "RIP legmessage :'(", "author": "jonmv", "createdAt": "2020-08-26T06:02:44Z", "path": "logserver/src/main/java/com/yahoo/logserver/handlers/HandlerThread.java", "diffHunk": "@@ -191,8 +172,8 @@ public void run() {\n             throw new NullPointerException(\"channel is not allowed to be null\");\n         }\n \n-        // TODO: Make the legmessage elements some kind of composite structure to handle both individual messages and lists uniformly.", "originalCommit": "84f643743ee64c101efb564758a11a3a8a970168", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}