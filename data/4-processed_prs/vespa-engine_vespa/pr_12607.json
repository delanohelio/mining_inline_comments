{"pr_number": 12607, "pr_title": "Balder/tune hash settings 2", "pr_createdAt": "2020-03-18T10:23:44Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12607", "timeline": [{"oid": "907114ebbb981c075cd97c1da445c39c647a2012", "url": "https://github.com/vespa-engine/vespa/commit/907114ebbb981c075cd97c1da445c39c647a2012", "message": "Use and based hashing.", "committedDate": "2020-03-18T00:10:48Z", "type": "commit"}, {"oid": "4c0b30df435dc5dd961562f1eeccf4bd9cd16c16", "url": "https://github.com/vespa-engine/vespa/commit/4c0b30df435dc5dd961562f1eeccf4bd9cd16c16", "message": "Use suitable datatype for enum and used and based modulo", "committedDate": "2020-03-18T00:10:48Z", "type": "commit"}, {"oid": "e1d1cede2a01243e0b10e8283de5a4fe1f3679cb", "url": "https://github.com/vespa-engine/vespa/commit/e1d1cede2a01243e0b10e8283de5a4fe1f3679cb", "message": "Add some interseting statistics if debug has been enabled.", "committedDate": "2020-03-18T10:45:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwNDQwMg==", "url": "https://github.com/vespa-engine/vespa/pull/12607#discussion_r394304402", "bodyText": "Consider using auto instead.", "author": "geirst", "createdAt": "2020-03-18T12:19:59Z", "path": "searchlib/src/vespa/searchlib/attribute/attribute_weighted_set_blueprint.cpp", "diffHunk": "@@ -93,12 +97,12 @@ class AttributeFilter final : public queryeval::SearchIterator\n         }\n     }\n     void and_hits_into(BitVector & result,uint32_t begin_id) override {\n-        Map::iterator end = _map.end();\n+        typename Map::iterator end = _map.end();", "originalCommit": "e1d1cede2a01243e0b10e8283de5a4fe1f3679cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwNDQ2Mg==", "url": "https://github.com/vespa-engine/vespa/pull/12607#discussion_r394304462", "bodyText": "Consider using auto instead.", "author": "geirst", "createdAt": "2020-03-18T12:20:06Z", "path": "searchlib/src/vespa/searchlib/attribute/attribute_weighted_set_blueprint.cpp", "diffHunk": "@@ -93,12 +97,12 @@ class AttributeFilter final : public queryeval::SearchIterator\n         }\n     }\n     void and_hits_into(BitVector & result,uint32_t begin_id) override {\n-        Map::iterator end = _map.end();\n+        typename Map::iterator end = _map.end();\n         result.foreach_truebit([&, end](uint32_t key) { if ( _map.find(_attr.getToken(key)) == end) { result.clearBit(key); }}, begin_id);\n     }\n \n     void doSeek(uint32_t docId) override {\n-        Map::const_iterator pos = _map.find(_attr.getToken(docId));\n+        typename Map::const_iterator pos = _map.find(_attr.getToken(docId));", "originalCommit": "e1d1cede2a01243e0b10e8283de5a4fe1f3679cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}