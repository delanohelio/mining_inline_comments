{"pr_number": 11835, "pr_title": "Use bucket_space metric in retirement", "pr_createdAt": "2020-01-17T11:43:00Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11835", "timeline": [{"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31", "url": "https://github.com/vespa-engine/vespa/commit/c28f13dac59167dee1257f5b23835e6441bc5f31", "message": "Use bucket_space metric in retirement\n\nThis makes the Cluster Controller use the\nvds.datastored.bucket_space.buckets_total, dimension bucketSpace=default, to\ndetermine whether a content node manages zero buckets, and if so, will allow\nthe node to go permanently down. This is used when a node is retiring, and it\nis to be removed from the application.\n\nThe change is guarded by the use-bucket-space-metric, default true. If the new\nmetric doesn't work as expected, we can revert to using the current/old metric\nby flipping the flag. The flag can be controlled per application.", "committedDate": "2020-01-17T11:39:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk2OTM1MA==", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367969350", "bodyText": "Consider moving the comment (or comma) here and above to make the inline comment point at the right parameter", "author": "vekterli", "createdAt": "2020-01-17T14:42:45Z", "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -56,7 +56,7 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n             Set<ConfiguredNode> nodesInSlobrok = FleetControllerTest.toNodes(1, 3, 5, 7);\n \n             ContentCluster cluster = new ContentCluster(\n-                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */);\n+                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0, /* minRatioOfStorageNodesUp */true);", "originalCommit": "c28f13dac59167dee1257f5b23835e6441bc5f31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NjAwMA==", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367986000", "bodyText": "Done", "author": "hakonhall", "createdAt": "2020-01-17T15:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk2OTM1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MTA3Mg==", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367971072", "bodyText": "Typo: s/efefct/effect/", "author": "vekterli", "createdAt": "2020-01-17T14:45:58Z", "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -83,6 +83,13 @@\n             \"Takes effect on next node agent tick. Change is orchestrated, but does NOT require container restart\",\n             HOSTNAME, APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_BUCKET_SPACE_METRIC = defineFeatureFlag(\n+            \"use-bucket-space-metric\", true,\n+            \"Whether to use vds.datastored.bucket_space.buckets_total (true) instead of \" +\n+            \"vds.datastored.alldisks.buckets (false, legacy).\",\n+            \"Takes efefct on the next deployment of the application\",", "originalCommit": "c28f13dac59167dee1257f5b23835e6441bc5f31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NjE0OA==", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367986148", "bodyText": "Done", "author": "hakonhall", "createdAt": "2020-01-17T15:14:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MTA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MjA1Ng==", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367972056", "bodyText": "For completeness, consider also adding a check that the global bucketSpace dimension has zero buckets.", "author": "vekterli", "createdAt": "2020-01-17T14:47:52Z", "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/hostinfo/HostInfoTest.java", "diffHunk": "@@ -49,11 +52,16 @@ public void testFullSet() throws IOException {\n         assertThat(storageNodeList.size(), is(2));\n         assertThat(storageNodeList.get(0).getIndex(), is(0));\n         List<Metrics.Metric> metrics = hostInfo.getMetrics().getMetrics();\n-        assertThat(metrics.size(), is(2));\n-        Metrics.Value value = metrics.get(0).getValue();\n-        assertThat(value.getLast(), is(5095L));\n+        assertThat(metrics.size(), is(4));\n+        assertThat(metrics.get(0).getValue().getLast(), is(5095L));\n         assertThat(metrics.get(0).getName(), equalTo(\"vds.datastored.alldisks.buckets\"));\n+        assertThat(metrics.get(3).getValue().getLast(), is(129L));\n+        assertThat(metrics.get(3).getName(), equalTo(\"vds.datastored.bucket_space.buckets_total\"));\n         assertThat(hostInfo.getClusterStateVersionOrNull(), is(123));\n+\n+        Optional<Metrics.Value> value = hostInfo.getMetrics()\n+                .getValueAt(\"vds.datastored.bucket_space.buckets_total\", Map.of(\"bucketSpace\", \"default\"));\n+        assertThat(value.map(Metrics.Value::getLast), equalTo(Optional.of(129L)));", "originalCommit": "c28f13dac59167dee1257f5b23835e6441bc5f31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NjkzNQ==", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367986935", "bodyText": "Done", "author": "hakonhall", "createdAt": "2020-01-17T15:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MjA1Ng=="}], "type": "inlineReview"}, {"oid": "e50ede25fe5f3a45badb59fa45023af0e2d3a01e", "url": "https://github.com/vespa-engine/vespa/commit/e50ede25fe5f3a45badb59fa45023af0e2d3a01e", "message": "Test metric value for different dimensions, and more", "committedDate": "2020-01-17T15:21:22Z", "type": "commit"}]}