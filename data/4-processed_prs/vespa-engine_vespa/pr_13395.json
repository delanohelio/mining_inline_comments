{"pr_number": 13395, "pr_title": "wrapper for iterators needing TFMDA in constructor", "pr_createdAt": "2020-05-27T10:50:47Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13395", "timeline": [{"oid": "de4daa362edd091ca8e1b2db0559a20236447aae", "url": "https://github.com/vespa-engine/vespa/commit/de4daa362edd091ca8e1b2db0559a20236447aae", "message": "wrapper for iterators needing TFMDA in constructor", "committedDate": "2020-05-27T10:37:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1MjY0OA==", "url": "https://github.com/vespa-engine/vespa/pull/13395#discussion_r431052648", "bodyText": "prefer sending the number of fields directly instead of the state to reduces unneeded coupling", "author": "havardpe", "createdAt": "2020-05-27T11:40:48Z", "path": "searchlib/src/vespa/searchlib/queryeval/filter_wrapper.h", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include \"searchiterator.h\"\n+#include \"blueprint.h\"\n+#include <vespa/searchlib/fef/termfieldmatchdata.h>\n+#include <vespa/searchlib/fef/termfieldmatchdataarray.h>\n+\n+namespace search::queryeval {\n+\n+/**\n+ * Wraps an iterator for use as a filter search.\n+ * Owns TermFieldMatchData the wrapped iterator\n+ * can wire to, and write to if necessary.\n+ **/\n+class FilterWrapper : public SearchIterator {\n+private:\n+    std::vector<fef::TermFieldMatchData> _unused_md;\n+    fef::TermFieldMatchDataArray _tfmda;\n+    std::unique_ptr<SearchIterator> _wrapped_search;\n+public:\n+    FilterWrapper(const Blueprint::State &state)", "originalCommit": "de4daa362edd091ca8e1b2db0559a20236447aae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}