{"pr_number": 14965, "pr_title": "Balder/add thread local access to persistencehandler", "pr_createdAt": "2020-10-20T09:28:25Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14965", "timeline": [{"oid": "eb66d9f6ace62d9f8918f62ad3bee0431e12eefb", "url": "https://github.com/vespa-engine/vespa/commit/eb66d9f6ace62d9f8918f62ad3bee0431e12eefb", "message": "Add a registered threadlocal persistence handler.", "committedDate": "2020-10-20T09:05:35Z", "type": "commit"}, {"oid": "30a86bc16d6582a6fa9cb34a225e49869613d48c", "url": "https://github.com/vespa-engine/vespa/commit/30a86bc16d6582a6fa9cb34a225e49869613d48c", "message": "Use existing utility method for creating Mergehandler.", "committedDate": "2020-10-20T09:23:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4ODkxMw==", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508388913", "bodyText": "How do we ensure the _persistenceHandlers.size() < _metrics->disks[0]->threads.size() invariant holds when an \"arbitrary\" number of handlers can be registered?", "author": "vekterli", "createdAt": "2020-10-20T10:30:02Z", "path": "storage/src/vespa/storage/persistence/filestorage/filestormanager.cpp", "diffHunk": "@@ -127,6 +130,14 @@ FileStorManager::createRegisteredHandler(ServiceLayerComponent & component)\n                                                  *_bucketOwnershipNotifier, *_metrics->disks[0]->threads[index]));\n     return *_persistenceHandlers.back();\n }\n+\n+PersistenceHandler &\n+FileStorManager::getThreadLocalHandler() {\n+    if (_G_threadLocalHandler == nullptr) {\n+        _G_threadLocalHandler = & createRegisteredHandler(_component);", "originalCommit": "30a86bc16d6582a6fa9cb34a225e49869613d48c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQwMjIyOA==", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508402228", "bodyText": "The assumption is that this code will only be invoked from network threads and response threads.\nThose are accounted for in the last commit.", "author": "baldersheim", "createdAt": "2020-10-20T10:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4ODkxMw=="}], "type": "inlineReview"}, {"oid": "e986edb8657563c34b28a28e46af1841e9819679", "url": "https://github.com/vespa-engine/vespa/commit/e986edb8657563c34b28a28e46af1841e9819679", "message": "Take number of response threads and number of network threads into account.", "committedDate": "2020-10-20T10:44:42Z", "type": "commit"}, {"oid": "6b2863244a34f1ceebc90e28678ff9000ad82c15", "url": "https://github.com/vespa-engine/vespa/commit/6b2863244a34f1ceebc90e28678ff9000ad82c15", "message": "Do not access an object that has been moved away.", "committedDate": "2020-10-20T11:08:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNjk5MQ==", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508426991", "bodyText": "Typo: devolpers -> developers", "author": "geirst", "createdAt": "2020-10-20T11:35:15Z", "path": "storage/src/vespa/storage/config/stor-communicationmanager.def", "diffHunk": "@@ -68,6 +68,8 @@ rpc.num_network_threads int default=1\n ## The bucket id associated with a message is used to select the RPC target.\n ## This ensures the same RPC target is used for all messages to the same bucket to the same node,\n ## and the RPC target itself handles sequencing of these messages.\n+## NB !! It is vital that this number is kept in sync with stor-filestor:num_network_threads.\n+## Only skilled vespa core devolpers should touch this.", "originalCommit": "6b2863244a34f1ceebc90e28678ff9000ad82c15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzNDg1MQ==", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508434851", "bodyText": "Fixed in #14970", "author": "baldersheim", "createdAt": "2020-10-20T11:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNjk5MQ=="}], "type": "inlineReview"}]}