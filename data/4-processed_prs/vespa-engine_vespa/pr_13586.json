{"pr_number": 13586, "pr_title": "Use foreach_key_range for attribute iterator termwise evaluation", "pr_createdAt": "2020-06-15T11:41:56Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13586", "timeline": [{"oid": "d2bd498b4d89afd7b170602549cd165abb843e09", "url": "https://github.com/vespa-engine/vespa/commit/d2bd498b4d89afd7b170602549cd165abb843e09", "message": "Use foreach_key_range for attribute iterator termwise evaluation\nwhen inner iterator is a btree iterator.", "committedDate": "2020-06-15T11:38:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2ODIxNg==", "url": "https://github.com/vespa-engine/vespa/pull/13586#discussion_r440168216", "bodyText": "This looks like the same code as on lines 142 - 148. Consider refactor into common function.", "author": "geirst", "createdAt": "2020-06-15T13:17:45Z", "path": "searchlib/src/vespa/searchlib/attribute/attributeiterators.hpp", "diffHunk": "@@ -143,8 +191,18 @@ template <typename PL>\n std::unique_ptr<BitVector>\n FilterAttributePostingListIteratorT<PL>::get_hits(uint32_t begin_id) {\n     BitVector::UP result(BitVector::create(begin_id, getEndId()));\n-    for (; _iterator.valid() && _iterator.getKey() < getEndId(); ++_iterator) {\n-        result->setBit(_iterator.getKey());\n+    if constexpr (is_tree_iterator_v<PL>) {\n+        auto end_itr = _iterator;", "originalCommit": "d2bd498b4d89afd7b170602549cd165abb843e09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2ODc4Nw==", "url": "https://github.com/vespa-engine/vespa/pull/13586#discussion_r440168787", "bodyText": "This looks like the same code as on lines 163 - 173. Consider refactor into common function.", "author": "geirst", "createdAt": "2020-06-15T13:18:40Z", "path": "searchlib/src/vespa/searchlib/attribute/attributeiterators.hpp", "diffHunk": "@@ -154,9 +212,23 @@ template <typename PL>\n void\n FilterAttributePostingListIteratorT<PL>::or_hits_into(BitVector & result, uint32_t begin_id) {\n     (void) begin_id;\n-    for (; _iterator.valid() && _iterator.getKey() < getEndId(); ++_iterator) {\n-        if ( ! result.testBit(_iterator.getKey()) ) {\n-            result.setBit(_iterator.getKey());\n+    if constexpr (is_tree_iterator_v<PL>) {\n+        auto end_itr = _iterator;", "originalCommit": "d2bd498b4d89afd7b170602549cd165abb843e09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e04034b9dc7dd3b03ed609395e341c6de560302b", "url": "https://github.com/vespa-engine/vespa/commit/e04034b9dc7dd3b03ed609395e341c6de560302b", "message": "Factor out common code.", "committedDate": "2020-06-15T13:46:52Z", "type": "commit"}]}