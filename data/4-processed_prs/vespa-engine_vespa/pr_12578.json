{"pr_number": 12578, "pr_title": "Consume metrics timestamps in seconds not ms", "pr_createdAt": "2020-03-16T12:55:36Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12578", "timeline": [{"oid": "71695b9269d820b72966b6de5f81385b73e3cbd0", "url": "https://github.com/vespa-engine/vespa/commit/71695b9269d820b72966b6de5f81385b73e3cbd0", "message": "Consume metrics timestamps in seconds not ms", "committedDate": "2020-03-16T12:54:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTU5Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393005597", "bodyText": "Remove", "author": "freva", "createdAt": "2020-03-16T13:00:34Z", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java", "diffHunk": "@@ -141,4 +145,33 @@ public void testAutoscalingAws() {\n                                tester.autoscale(application1, cluster1));\n     }\n \n+    @Test", "originalCommit": "71695b9269d820b72966b6de5f81385b73e3cbd0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNjA0Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393036047", "bodyText": "tx", "author": "bratseth", "createdAt": "2020-03-16T13:51:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTU5Nw=="}], "type": "inlineReview"}, {"oid": "4628eeaa4f467500c36f8fe7caf91b666846f302", "url": "https://github.com/vespa-engine/vespa/commit/4628eeaa4f467500c36f8fe7caf91b666846f302", "message": "Remove temporary test", "committedDate": "2020-03-16T13:46:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw==", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393061807", "bodyText": "Why did this happen?", "author": "freva", "createdAt": "2020-03-16T14:23:31Z", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/NodeMetricsDbTest.java", "diffHunk": "@@ -18,15 +18,15 @@ public void testNodeMetricsDb() {\n         NodeMetricsDb db = new NodeMetricsDb();\n         List<NodeMetrics.MetricValue> values = new ArrayList<>();\n         for (int i = 0; i < 40; i++) {\n-            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().toEpochMilli(), 0.9f));\n+            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().getEpochSecond(), 0.9f));\n             clock.advance(Duration.ofHours(1));\n         }\n         db.add(values);\n \n-        assertEquals(30, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());\n+        assertEquals(29, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());", "originalCommit": "4628eeaa4f467500c36f8fe7caf91b666846f302", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4NTQ3NA==", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393085474", "bodyText": "We're now going through an API which uses seconds which round the current time to the nearest thousand, which causes the window to end up right at the boundary of the 30th value.", "author": "bratseth", "createdAt": "2020-03-16T14:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4Njk4Mw==", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393086983", "bodyText": "Oh, so there was 1/1000 chance this test would fail before? If it ran exactly on the second?", "author": "freva", "createdAt": "2020-03-16T14:56:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTQ5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393091499", "bodyText": "Yes, I think so. \"Problem\" here is I don't really care precisely how many ends up in the window ..", "author": "bratseth", "createdAt": "2020-03-16T15:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw=="}], "type": "inlineReview"}]}