{"pr_number": 15503, "pr_title": "Balder/gc loadtype set", "pr_createdAt": "2020-11-27T11:58:38Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15503", "timeline": [{"oid": "39d00826c3e7e30d59e6ca6d88eb3f36fb8358fd", "url": "https://github.com/vespa-engine/vespa/commit/39d00826c3e7e30d59e6ca6d88eb3f36fb8358fd", "message": "GC LoadTypeSet", "committedDate": "2020-11-27T11:56:09Z", "type": "commit"}, {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99", "url": "https://github.com/vespa-engine/vespa/commit/17d0bc7e91a0c055f57b002b6f501fea36235f99", "message": "GC LoadType and PriorityMapper.", "committedDate": "2020-11-27T11:56:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU2Nzg1OA==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531567858", "bodyText": "Can remove explicit here", "author": "vekterli", "createdAt": "2020-11-27T12:14:51Z", "path": "documentapi/src/vespa/documentapi/messagebus/routablerepository.h", "diffHunk": "@@ -40,15 +38,14 @@ class RoutableRepository {\n     mutable std::mutex   _lock;\n     TypeMap              _factoryTypes;\n     mutable FactoryCache _cache;\n-    const LoadTypeSet&   _loadTypes;\n \n public:\n     RoutableRepository(const RoutableRepository &) = delete;\n     RoutableRepository & operator = (const RoutableRepository &) = delete;\n     /**\n      * Constructs a new routable repository.\n      */\n-    explicit RoutableRepository(const LoadTypeSet& loadTypes);\n+    explicit RoutableRepository();", "originalCommit": "17d0bc7e91a0c055f57b002b6f501fea36235f99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzNzYzNw==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531637637", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-27T14:38:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU2Nzg1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3MjE5Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531572196", "bodyText": "Consider adding explicit to WrappedCodec and MessageCodecProvider ctors", "author": "vekterli", "createdAt": "2020-11-27T12:24:22Z", "path": "storage/src/vespa/storage/storageserver/rpc/message_codec_provider.h", "diffHunk": "@@ -34,14 +31,12 @@ class MessageCodecProvider {\n     mutable std::shared_mutex _rw_mutex;\n     std::shared_ptr<WrappedCodec> _active_codec;\n public:\n-    MessageCodecProvider(std::shared_ptr<const document::DocumentTypeRepo> doc_type_repo,\n-                         std::shared_ptr<const documentapi::LoadTypeSet> load_type_set);\n+    MessageCodecProvider(std::shared_ptr<const document::DocumentTypeRepo> doc_type_repo);", "originalCommit": "17d0bc7e91a0c055f57b002b6f501fea36235f99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzODM4Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531638386", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-27T14:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3MjE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3Mzg1OA==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531573858", "bodyText": "Consider making explicit", "author": "vekterli", "createdAt": "2020-11-27T12:27:45Z", "path": "storageapi/src/vespa/storageapi/mbusprot/protocolserialization7.h", "diffHunk": "@@ -13,13 +12,10 @@ namespace storage::mbusprot {\n  */\n class ProtocolSerialization7 final : public ProtocolSerialization {\n     const std::shared_ptr<const document::DocumentTypeRepo> _repo;\n-    const documentapi::LoadTypeSet& _load_types;\n public:\n-    ProtocolSerialization7(std::shared_ptr<const document::DocumentTypeRepo> repo,\n-                           const documentapi::LoadTypeSet& load_types);\n+    ProtocolSerialization7(std::shared_ptr<const document::DocumentTypeRepo> repo);", "originalCommit": "17d0bc7e91a0c055f57b002b6f501fea36235f99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzODUwNA==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531638504", "bodyText": "fixed", "author": "baldersheim", "createdAt": "2020-11-27T14:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3Mzg1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NDAzNw==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531574037", "bodyText": "Consider making explicit", "author": "vekterli", "createdAt": "2020-11-27T12:28:08Z", "path": "storageapi/src/vespa/storageapi/mbusprot/storageprotocol.h", "diffHunk": "@@ -15,8 +15,7 @@ class StorageProtocol final : public mbus::IProtocol\n \n     static mbus::string NAME;\n \n-    StorageProtocol(const std::shared_ptr<const document::DocumentTypeRepo>,\n-                    const documentapi::LoadTypeSet& loadTypes);\n+    StorageProtocol(const std::shared_ptr<const document::DocumentTypeRepo>);", "originalCommit": "17d0bc7e91a0c055f57b002b6f501fea36235f99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzODgxNg==", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531638816", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-11-27T14:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NDAzNw=="}], "type": "inlineReview"}, {"oid": "f1de9102c79fb4c07c2a291c9318aa6605fa4d03", "url": "https://github.com/vespa-engine/vespa/commit/f1de9102c79fb4c07c2a291c9318aa6605fa4d03", "message": "Use explicit on the right places.", "committedDate": "2020-11-27T14:41:09Z", "type": "commit"}]}