{"pr_number": 14770, "pr_title": "Arnej/less needless casting", "pr_createdAt": "2020-10-08T07:46:07Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14770", "timeline": [{"oid": "5638fb88e06e835a03cc0d9c70725a37dacd2974", "url": "https://github.com/vespa-engine/vespa/commit/5638fb88e06e835a03cc0d9c70725a37dacd2974", "message": "now needs less casting to DenseTensor", "committedDate": "2020-10-02T14:20:19Z", "type": "commit"}, {"oid": "e3dc8d27a19e75323ac16322dc0e43a58c49dbae", "url": "https://github.com/vespa-engine/vespa/commit/e3dc8d27a19e75323ac16322dc0e43a58c49dbae", "message": "less casting to DenseTensorView", "committedDate": "2020-10-02T14:20:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjkzNg==", "url": "https://github.com/vespa-engine/vespa/pull/14770#discussion_r501562936", "bodyText": "prefer removing this and fixing callers instead", "author": "havardpe", "createdAt": "2020-10-08T09:05:59Z", "path": "eval/src/vespa/eval/tensor/dense/dense_tensor_view.h", "diffHunk": "@@ -52,10 +52,10 @@ class DenseTensorView : public Tensor\n     }\n \n     template <typename T> static ConstArrayRef<T> typify_cells(const eval::Value &self) {\n-        return static_cast<const DenseTensorView &>(self).cellsRef().typify<T>();\n+        return self.cells().typify<T>();", "originalCommit": "e3dc8d27a19e75323ac16322dc0e43a58c49dbae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MzA1MA==", "url": "https://github.com/vespa-engine/vespa/pull/14770#discussion_r501563050", "bodyText": "prefer removing this and fixing callers instead", "author": "havardpe", "createdAt": "2020-10-08T09:06:09Z", "path": "eval/src/vespa/eval/tensor/dense/dense_tensor_view.h", "diffHunk": "@@ -52,10 +52,10 @@ class DenseTensorView : public Tensor\n     }\n \n     template <typename T> static ConstArrayRef<T> typify_cells(const eval::Value &self) {\n-        return static_cast<const DenseTensorView &>(self).cellsRef().typify<T>();\n+        return self.cells().typify<T>();\n     }\n     template <typename T> static ConstArrayRef<T> unsafe_typify_cells(const eval::Value &self) {\n-        return static_cast<const DenseTensorView &>(self).cellsRef().unsafe_typify<T>();\n+        return self.cells().unsafe_typify<T>();", "originalCommit": "e3dc8d27a19e75323ac16322dc0e43a58c49dbae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}