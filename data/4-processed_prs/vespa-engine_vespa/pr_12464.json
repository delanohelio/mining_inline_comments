{"pr_number": 12464, "pr_title": "Balder/optimize bool executors rebased", "pr_createdAt": "2020-03-05T14:47:50Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12464", "timeline": [{"oid": "31a053a74d2b481c4770cce1168681e8a71aae3a", "url": "https://github.com/vespa-engine/vespa/commit/31a053a74d2b481c4770cce1168681e8a71aae3a", "message": "Optimize for bool attributes.", "committedDate": "2020-03-05T13:05:01Z", "type": "commit"}, {"oid": "f21bf723e19b774f7b8f07564e3672d21b0c431d", "url": "https://github.com/vespa-engine/vespa/commit/f21bf723e19b774f7b8f07564e3672d21b0c431d", "message": "Use number of outputs as sanity check when createing bool executor.\nUse a function for makeing purpose clear.", "committedDate": "2020-03-05T13:05:01Z", "type": "commit"}, {"oid": "3f9ebe010b78feb15b8866b27db615ef9281ee99", "url": "https://github.com/vespa-engine/vespa/commit/3f9ebe010b78feb15b8866b27db615ef9281ee99", "message": "Restructure and do sanity checking against num outputs.", "committedDate": "2020-03-05T13:05:01Z", "type": "commit"}, {"oid": "79eb4da646da25b9734a1ae8eb1222d44cc85061", "url": "https://github.com/vespa-engine/vespa/commit/79eb4da646da25b9734a1ae8eb1222d44cc85061", "message": "Restructure also for multivalue to reduce the number of dynamic cast.", "committedDate": "2020-03-05T13:05:02Z", "type": "commit"}, {"oid": "ea7621f3a4b46ff504bd9d24ee345e51046e5d39", "url": "https://github.com/vespa-engine/vespa/commit/ea7621f3a4b46ff504bd9d24ee345e51046e5d39", "message": "std::make_shared", "committedDate": "2020-03-05T14:18:42Z", "type": "commit"}, {"oid": "533444f70616aa4c02d4bf7fa97e2b531acdb6d4", "url": "https://github.com/vespa-engine/vespa/commit/533444f70616aa4c02d4bf7fa97e2b531acdb6d4", "message": "After going though code I conclude that we can assert our assuptions here.", "committedDate": "2020-03-05T14:20:30Z", "type": "commit"}, {"oid": "d5a0a4fa7f5c48ca650579d79f1a459bc1d9828f", "url": "https://github.com/vespa-engine/vespa/commit/d5a0a4fa7f5c48ca650579d79f1a459bc1d9828f", "message": "Test must specify field type.", "committedDate": "2020-03-05T14:44:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNjA0Ng==", "url": "https://github.com/vespa-engine/vespa/pull/12464#discussion_r388816046", "bodyText": "in the future: maybe we need to enforce passing the data type", "author": "havardpe", "createdAt": "2020-03-06T10:07:45Z", "path": "searchlib/src/tests/features/prod_features.cpp", "diffHunk": "@@ -410,8 +411,8 @@ Test::setupForAttributeTest(FtFeatureTest &ft, bool setup_env)\n             .addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, \"slong\")\n             .addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, \"sdouble\")\n             .addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, \"sbyte\")\n-            .addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, \"sbool\")\n-            .addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, \"sebool\");\n+            .addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, DataType::BOOL,\"sbool\")", "originalCommit": "d5a0a4fa7f5c48ca650579d79f1a459bc1d9828f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcxMjM5NA==", "url": "https://github.com/vespa-engine/vespa/pull/12464#discussion_r389712394", "bodyText": "Agree.", "author": "baldersheim", "createdAt": "2020-03-09T14:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNjA0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxODA0Mg==", "url": "https://github.com/vespa-engine/vespa/pull/12464#discussion_r388818042", "bodyText": "should remove attr variable as well", "author": "havardpe", "createdAt": "2020-03-06T10:11:46Z", "path": "streamingvisitors/src/vespa/searchvisitor/searchvisitor.cpp", "diffHunk": "@@ -99,11 +99,11 @@ createAttribute(const vespalib::string & name, const document::FieldValue & fv)\n     AttributeVector::SP attr;\n \n     if (fv.inherits(document::ByteFieldValue::classId) || fv.inherits(document::IntFieldValue::classId) || fv.inherits(document::LongFieldValue::classId)) {\n-        attr.reset(new search::SingleIntegerExtAttribute(name));\n+        return std::make_shared<search::SingleIntegerExtAttribute>(name);\n     } else if (fv.inherits(document::DoubleFieldValue::classId) || fv.inherits(document::FloatFieldValue::classId)) {\n-        attr.reset(new search::SingleFloatExtAttribute(name));\n+        return std::make_shared<search::SingleFloatExtAttribute>(name);\n     } else if (fv.inherits(document::StringFieldValue::classId)) {\n-        attr.reset(new search::SingleStringExtAttribute(name));\n+        return std::make_shared<search::SingleStringExtAttribute>(name);", "originalCommit": "d5a0a4fa7f5c48ca650579d79f1a459bc1d9828f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMDk0OA==", "url": "https://github.com/vespa-engine/vespa/pull/12464#discussion_r389720948", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-09T14:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxODA0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxODkwMg==", "url": "https://github.com/vespa-engine/vespa/pull/12464#discussion_r388818902", "bodyText": "could just construct len directly from valueRef.size() instead of using a temporary", "author": "havardpe", "createdAt": "2020-03-06T10:13:24Z", "path": "streamingvisitors/src/vespa/searchvisitor/searchvisitor.cpp", "diffHunk": "@@ -240,9 +240,9 @@ void SearchVisitor::init(const Parameters & params)\n         LOG(debug, \"QFLAG_DUMP_FEATURES: %s\", _rankController.getDumpFeatures() ? \"true\" : \"false\");\n     }\n \n-    if (params.lookup(\"rankproperties\", valueRef) && valueRef.size() > 0) {\n+    if (params.lookup(\"rankproperties\", valueRef) && ! valueRef.empty()) {\n         LOG(spam, \"Received rank properties of %zd bytes\", valueRef.size());\n-        uint32_t len = static_cast<uint32_t>(valueRef.size());\n+        uint32_t len = uint32_t(valueRef.size());", "originalCommit": "d5a0a4fa7f5c48ca650579d79f1a459bc1d9828f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMTA3Ng==", "url": "https://github.com/vespa-engine/vespa/pull/12464#discussion_r389721076", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-09T14:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxODkwMg=="}], "type": "inlineReview"}, {"oid": "62a75e6a91a54e351a9f46af353598a2b68a06a5", "url": "https://github.com/vespa-engine/vespa/commit/62a75e6a91a54e351a9f46af353598a2b68a06a5", "message": "Use std::make_shared and remove cast not needed.", "committedDate": "2020-03-09T14:20:42Z", "type": "commit"}, {"oid": "9fce1c82ad19e5d96bec8e215381e3fb739e3bf7", "url": "https://github.com/vespa-engine/vespa/commit/9fce1c82ad19e5d96bec8e215381e3fb739e3bf7", "message": "Fix syntax errors.", "committedDate": "2020-03-09T14:21:46Z", "type": "commit"}]}