{"pr_number": 13848, "pr_title": "Arnej/cleanup parse item and simple query stack", "pr_createdAt": "2020-07-09T10:10:58Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13848", "timeline": [{"oid": "88099bec32481b83b41f3966c2a88ebf4034f1fe", "url": "https://github.com/vespa-engine/vespa/commit/88099bec32481b83b41f3966c2a88ebf4034f1fe", "message": "clean up various issues with ParseItem class\n\n* SimpleQueryStack only used for one unit test, move it there\n* Actual instances of ParseItem also only used for same unit test.\n  Split out the object representation into a separate\n  SimpleQueryStackItem class in the unit test directory.\n* give location ITEM_LOCATION_TERM instead of overloading NUMTERM\n* ParseItem::ITEM_PAREN never used for anything, remove it\n* add comment for removal of PAREN enum in prelude/query/Item.java\n* refactor flag handling with one method per flag", "committedDate": "2020-07-09T09:55:22Z", "type": "commit"}, {"oid": "69c84f46fae6c13b01b085738882e16bc7f11024", "url": "https://github.com/vespa-engine/vespa/commit/69c84f46fae6c13b01b085738882e16bc7f11024", "message": "GC unused code", "committedDate": "2020-07-09T10:10:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzODI4NQ==", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452138285", "bodyText": "Need to update abi\n[ERROR] Class com.yahoo.prelude.query.Item$ItemType: Extra field public static final enum com.yahoo.prelude.query.Item$ItemType LOCATION_TERM", "author": "baldersheim", "createdAt": "2020-07-09T11:04:58Z", "path": "container-search/src/main/java/com/yahoo/prelude/query/Item.java", "diffHunk": "@@ -60,7 +60,8 @@\n         PREDICATE_QUERY(23),\n         REGEXP(24),\n         WORD_ALTERNATIVES(25),\n-        NEAREST_NEIGHBOR(26);\n+        NEAREST_NEIGHBOR(26),\n+        LOCATION_TERM(27);", "originalCommit": "69c84f46fae6c13b01b085738882e16bc7f11024", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNzc4MQ==", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452127781", "bodyText": "Please fix comment above.", "author": "toregge", "createdAt": "2020-07-09T10:42:56Z", "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/query/weight.h>\n+#include <vespa/searchlib/util/rawbuf.h>\n+#include <vespa/vespalib/stllike/string.h>\n+#include <vespa/searchlib/parsequery/parse.h>\n+\n+namespace search {\n+\n+/**\n+ * An item on the simple query stack.\n+ *\n+ * An object of this class represents a single item\n+ * on the simple query stack. It has a type, which corresponds\n+ * to the different query stack execution operations. It also\n+ * provides an arity, and the string values indexName and term, to\n+ * accomodate the different needs of the operations.\n+ */\n+class SimpleQueryStackItem : public ParseItem\n+{\n+private:\n+    SimpleQueryStackItem(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem& operator=(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem();\n+public:\n+    /** Pointer to next item in a linked list. */\n+    SimpleQueryStackItem *_next;\n+\n+private:\n+    query::Weight _weight;\n+    uint32_t      _uniqueId;\n+    uint32_t      _arg1;\n+    double        _arg2;\n+    double        _arg3;\n+    uint8_t       _type;\n+    uint8_t       _flags;\n+\n+public:\n+    /** Extra information on each item (creator id) coded in bits 12-19 of _type */", "originalCommit": "69c84f46fae6c13b01b085738882e16bc7f11024", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyOTg3Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452129873", "bodyText": "Please fix comment above.", "author": "toregge", "createdAt": "2020-07-09T10:47:22Z", "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/query/weight.h>\n+#include <vespa/searchlib/util/rawbuf.h>\n+#include <vespa/vespalib/stllike/string.h>\n+#include <vespa/searchlib/parsequery/parse.h>\n+\n+namespace search {\n+\n+/**\n+ * An item on the simple query stack.\n+ *\n+ * An object of this class represents a single item\n+ * on the simple query stack. It has a type, which corresponds\n+ * to the different query stack execution operations. It also\n+ * provides an arity, and the string values indexName and term, to\n+ * accomodate the different needs of the operations.\n+ */\n+class SimpleQueryStackItem : public ParseItem\n+{\n+private:\n+    SimpleQueryStackItem(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem& operator=(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem();\n+public:\n+    /** Pointer to next item in a linked list. */\n+    SimpleQueryStackItem *_next;\n+\n+private:\n+    query::Weight _weight;\n+    uint32_t      _uniqueId;\n+    uint32_t      _arg1;\n+    double        _arg2;\n+    double        _arg3;\n+    uint8_t       _type;\n+    uint8_t       _flags;\n+\n+public:\n+    /** Extra information on each item (creator id) coded in bits 12-19 of _type */\n+    static inline ItemCreator GetCreator(uint8_t type) { return static_cast<ItemCreator>((type >> 3) & 0x01); }\n+    /** The old item type now uses only the lower 12 bits in a backward compatible way) */\n+    static inline ItemType GetType(uint8_t type) { return static_cast<ItemType>(type & 0x1F); }", "originalCommit": "69c84f46fae6c13b01b085738882e16bc7f11024", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzNjE0NA==", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452136144", "bodyText": "Please fix argument name above, it should be flags instead of type.", "author": "toregge", "createdAt": "2020-07-09T11:00:22Z", "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/query/weight.h>\n+#include <vespa/searchlib/util/rawbuf.h>\n+#include <vespa/vespalib/stllike/string.h>\n+#include <vespa/searchlib/parsequery/parse.h>\n+\n+namespace search {\n+\n+/**\n+ * An item on the simple query stack.\n+ *\n+ * An object of this class represents a single item\n+ * on the simple query stack. It has a type, which corresponds\n+ * to the different query stack execution operations. It also\n+ * provides an arity, and the string values indexName and term, to\n+ * accomodate the different needs of the operations.\n+ */\n+class SimpleQueryStackItem : public ParseItem\n+{\n+private:\n+    SimpleQueryStackItem(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem& operator=(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem();\n+public:\n+    /** Pointer to next item in a linked list. */\n+    SimpleQueryStackItem *_next;\n+\n+private:\n+    query::Weight _weight;\n+    uint32_t      _uniqueId;\n+    uint32_t      _arg1;\n+    double        _arg2;\n+    double        _arg3;\n+    uint8_t       _type;\n+    uint8_t       _flags;\n+\n+public:\n+    /** Extra information on each item (creator id) coded in bits 12-19 of _type */\n+    static inline ItemCreator GetCreator(uint8_t type) { return static_cast<ItemCreator>((type >> 3) & 0x01); }", "originalCommit": "69c84f46fae6c13b01b085738882e16bc7f11024", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c4e625a62bfc31d776a66576506404910dd51bba", "url": "https://github.com/vespa-engine/vespa/commit/c4e625a62bfc31d776a66576506404910dd51bba", "message": "remove even more unused code", "committedDate": "2020-07-09T12:24:49Z", "type": "commit"}, {"oid": "68d95a43f7c3664c3a26dc84b03e2d42a161f5dc", "url": "https://github.com/vespa-engine/vespa/commit/68d95a43f7c3664c3a26dc84b03e2d42a161f5dc", "message": "update ABI spec", "committedDate": "2020-07-09T12:32:17Z", "type": "commit"}]}