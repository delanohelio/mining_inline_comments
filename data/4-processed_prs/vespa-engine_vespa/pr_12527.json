{"pr_number": 12527, "pr_title": "Balder/compile euclidian distance for avx2 and avx512", "pr_createdAt": "2020-03-10T14:27:37Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12527", "timeline": [{"oid": "73b16bba68712e47d4f820a67e2c0e7d74d9eb1b", "url": "https://github.com/vespa-engine/vespa/commit/73b16bba68712e47d4f820a67e2c0e7d74d9eb1b", "message": "Add a euclidian distance that is optimal for avx, avx2 and avx512.", "committedDate": "2020-03-10T10:30:47Z", "type": "commit"}, {"oid": "e0bd73b016439f087edb7ce165524fed3c9ab1ee", "url": "https://github.com/vespa-engine/vespa/commit/e0bd73b016439f087edb7ce165524fed3c9ab1ee", "message": "Use method from vespalib::hwaccelrated", "committedDate": "2020-03-10T12:27:50Z", "type": "commit"}, {"oid": "10856a1ba094837bf3a098f377a0d77d9e753ce8", "url": "https://github.com/vespa-engine/vespa/commit/10856a1ba094837bf3a098f377a0d77d9e753ce8", "message": "Simply follow pattern from dotproduct.", "committedDate": "2020-03-10T13:54:03Z", "type": "commit"}, {"oid": "03bd3b755650d828e63458379d5c120da63d7221", "url": "https://github.com/vespa-engine/vespa/commit/03bd3b755650d828e63458379d5c120da63d7221", "message": "Moved to hw accelrated module.", "committedDate": "2020-03-10T14:26:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMTEzMQ==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390411131", "bodyText": "Please update class description to indicate that it can be hardware accelerated.", "author": "geirst", "createdAt": "2020-03-10T15:41:27Z", "path": "searchlib/src/vespa/searchlib/tensor/distance_functions.h", "diffHunk": "@@ -13,66 +14,20 @@ namespace search::tensor {\n template <typename FloatType>\n class SquaredEuclideanDistance : public DistanceFunction {\n public:\n+    SquaredEuclideanDistance()", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU2MzY0OQ==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390563649", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-10T19:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMTEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMTQ5MQ==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390411491", "bodyText": "Please use new copyright", "author": "geirst", "createdAt": "2020-03-10T15:41:53Z", "path": "vespalib/src/tests/hwaccelrated/CMakeLists.txt", "diffHunk": "@@ -0,0 +1,8 @@\n+# Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU2Mzc5Mw==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390563793", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-10T19:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMTQ5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMTY2OA==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390411668", "bodyText": "Please use new copyright", "author": "geirst", "createdAt": "2020-03-10T15:42:08Z", "path": "vespalib/src/tests/hwaccelrated/hwaccelrated_test.cpp", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU2OTE5Mw==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390569193", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-10T19:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMTY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMjQ5MQ==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390412491", "bodyText": "Typo: \"Euclidian\" -> \"Euclidean\"", "author": "geirst", "createdAt": "2020-03-10T15:43:11Z", "path": "vespalib/src/tests/hwaccelrated/hwaccelrated_test.cpp", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/vespalib/testkit/test_kit.h>\n+#include <vespa/vespalib/hwaccelrated/iaccelrated.h>\n+#include <vespa/vespalib/hwaccelrated/generic.h>\n+\n+using namespace vespalib;\n+\n+template<typename T>\n+std::vector<T> createAndFill(size_t sz) {\n+    std::vector<T> v(sz);\n+    for (size_t i(0); i < sz; i++) {\n+        v[i] = i;\n+    }\n+    return v;\n+}\n+\n+template<typename T>\n+void verifyEuclidianDistance(const hwaccelrated::IAccelrated & accel) {", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3MDg3Mg==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390570872", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-10T19:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMjQ5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMzI4MA==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390413280", "bodyText": "Typo: \"euclidian\" -> \"euclidean\"", "author": "geirst", "createdAt": "2020-03-10T15:44:11Z", "path": "vespalib/src/tests/hwaccelrated/hwaccelrated_test.cpp", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/vespalib/testkit/test_kit.h>\n+#include <vespa/vespalib/hwaccelrated/iaccelrated.h>\n+#include <vespa/vespalib/hwaccelrated/generic.h>\n+\n+using namespace vespalib;\n+\n+template<typename T>\n+std::vector<T> createAndFill(size_t sz) {\n+    std::vector<T> v(sz);\n+    for (size_t i(0); i < sz; i++) {\n+        v[i] = i;\n+    }\n+    return v;\n+}\n+\n+template<typename T>\n+void verifyEuclidianDistance(const hwaccelrated::IAccelrated & accel) {\n+    const size_t testLength(255);\n+    std::vector<T> a = createAndFill<T>(testLength);\n+    std::vector<T> b = createAndFill<T>(testLength);\n+    for (size_t j(0); j < 0x20; j++) {\n+        T sum(0);\n+        for (size_t i(j); i < testLength; i++) {\n+            sum += (a[i] - b[i]) * (a[i] - b[i]);\n+        }\n+        T hwComputedSum(accel.squaredEuclidianDistance(&a[j], &b[j], testLength - j));\n+        EXPECT_EQUAL (sum, hwComputedSum);\n+    }\n+}\n+\n+TEST(\"test euclidian distance\") {", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3NjgzMw==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390576833", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-10T20:01:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMzI4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxNDAxNw==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390414017", "bodyText": "Typo: \"Euclidian\" -> \"Euclidean\". This applies else where as well.", "author": "geirst", "createdAt": "2020-03-10T15:45:12Z", "path": "vespalib/src/vespa/vespalib/hwaccelrated/avx2.cpp", "diffHunk": "@@ -10,4 +10,14 @@ Avx2Accelrator::populationCount(const uint64_t *a, size_t sz) const {\n     return helper::populationCount(a, sz);\n }\n \n+double\n+Avx2Accelrator::squaredEuclidianDistance(const float * a, const float * b, size_t sz) const {", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3Njk1Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390576957", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-03-10T20:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxNDAxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMjkyOA==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390422928", "bodyText": "Consider using different data for vectors a and b. Now they are equal, and the difference between them are always 0 -> the squared euclidean distance is 0.", "author": "geirst", "createdAt": "2020-03-10T15:57:00Z", "path": "vespalib/src/tests/hwaccelrated/hwaccelrated_test.cpp", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/vespalib/testkit/test_kit.h>\n+#include <vespa/vespalib/hwaccelrated/iaccelrated.h>\n+#include <vespa/vespalib/hwaccelrated/generic.h>\n+\n+using namespace vespalib;\n+\n+template<typename T>\n+std::vector<T> createAndFill(size_t sz) {\n+    std::vector<T> v(sz);\n+    for (size_t i(0); i < sz; i++) {\n+        v[i] = i;\n+    }\n+    return v;\n+}\n+\n+template<typename T>\n+void verifyEuclidianDistance(const hwaccelrated::IAccelrated & accel) {\n+    const size_t testLength(255);\n+    std::vector<T> a = createAndFill<T>(testLength);\n+    std::vector<T> b = createAndFill<T>(testLength);", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4MDA2OA==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390580068", "bodyText": "Random with fixed seed.", "author": "baldersheim", "createdAt": "2020-03-10T20:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMjkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMzM1NA==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390423354", "bodyText": "Consider using different data for vectors a and b. Now they are equal, and the difference between them are always 0 -> the squared euclidean distance is 0.", "author": "geirst", "createdAt": "2020-03-10T15:57:34Z", "path": "vespalib/src/vespa/vespalib/hwaccelrated/iaccelrated.cpp", "diffHunk": "@@ -65,8 +62,24 @@ void verifyAccelrator(const IAccelrated & accel)\n             LOG_ABORT(\"should not be reached\");\n         }\n     }\n-    delete [] a;\n-    delete [] b;\n+}\n+\n+template<typename T>\n+void verifyEuclidianDistance(const IAccelrated & accel) {\n+    const size_t testLength(255);\n+    std::vector<T> a = createAndFill<T>(testLength);\n+    std::vector<T> b = createAndFill<T>(testLength);", "originalCommit": "03bd3b755650d828e63458379d5c120da63d7221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4MDE5Nw==", "url": "https://github.com/vespa-engine/vespa/pull/12527#discussion_r390580197", "bodyText": "Random with fixed seed.", "author": "baldersheim", "createdAt": "2020-03-10T20:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMzM1NA=="}], "type": "inlineReview"}, {"oid": "8d52222315d29507930750941e268491ade98934", "url": "https://github.com/vespa-engine/vespa/commit/8d52222315d29507930750941e268491ade98934", "message": "Followup from code review.\n- Update copyright\n- euclidian -> euclidean\n- better testdata.", "committedDate": "2020-03-10T20:09:22Z", "type": "commit"}]}