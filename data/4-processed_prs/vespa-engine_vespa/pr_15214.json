{"pr_number": 15214, "pr_title": "Arnej/simpler no overlap address merge", "pr_createdAt": "2020-11-06T15:03:59Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15214", "timeline": [{"oid": "6d1552839a5d44294da227f18a88e188411c699e", "url": "https://github.com/vespa-engine/vespa/commit/6d1552839a5d44294da227f18a88e188411c699e", "message": "just reorder so optimized join implementations are together", "committedDate": "2020-11-06T14:57:44Z", "type": "commit"}, {"oid": "dafdec43bf328013f800d34462b7e5eb26a1a96c", "url": "https://github.com/vespa-engine/vespa/commit/dafdec43bf328013f800d34462b7e5eb26a1a96c", "message": "pre-compute how to merge left and right sparse address components", "committedDate": "2020-11-06T14:57:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1MzY1Nw==", "url": "https://github.com/vespa-engine/vespa/pull/15214#discussion_r519653657", "bodyText": "this could be static inside HashedLabel since it might also be useful elsewhere", "author": "havardpe", "createdAt": "2020-11-09T09:11:53Z", "path": "eval/src/vespa/eval/eval/fast_value.hpp", "diffHunk": "@@ -331,6 +331,60 @@ FastValueIndex::sparse_full_overlap_join(const ValueType &res_type, const Fun &f\n \n //-----------------------------------------------------------------------------\n \n+template <typename LCT, typename RCT, typename OCT, typename Fun>\n+const Value &\n+FastValueIndex::sparse_no_overlap_join(const ValueType &res_type, const Fun &fun,\n+                                       const FastValueIndex &lhs, const FastValueIndex &rhs,\n+                                       const std::vector<JoinAddrSource> &addr_sources,\n+                                       ConstArrayRef<LCT> lhs_cells, ConstArrayRef<RCT> rhs_cells, Stash &stash)\n+{\n+    using HashedLabelRef = std::reference_wrapper<const FastSparseMap::HashedLabel>;\n+    size_t num_mapped_dims = addr_sources.size();\n+    auto &result = stash.create<FastValue<OCT>>(res_type, res_type.count_mapped_dimensions(), 1, lhs.map.size()*rhs.map.size());\n+    FastSparseMap::HashedLabel empty;", "originalCommit": "dafdec43bf328013f800d34462b7e5eb26a1a96c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1NTYxMQ==", "url": "https://github.com/vespa-engine/vespa/pull/15214#discussion_r519655611", "bodyText": "use num_mapped_dims from line above instead of counting dimensions again.", "author": "havardpe", "createdAt": "2020-11-09T09:15:04Z", "path": "eval/src/vespa/eval/eval/fast_value.hpp", "diffHunk": "@@ -331,6 +331,60 @@ FastValueIndex::sparse_full_overlap_join(const ValueType &res_type, const Fun &f\n \n //-----------------------------------------------------------------------------\n \n+template <typename LCT, typename RCT, typename OCT, typename Fun>\n+const Value &\n+FastValueIndex::sparse_no_overlap_join(const ValueType &res_type, const Fun &fun,\n+                                       const FastValueIndex &lhs, const FastValueIndex &rhs,\n+                                       const std::vector<JoinAddrSource> &addr_sources,\n+                                       ConstArrayRef<LCT> lhs_cells, ConstArrayRef<RCT> rhs_cells, Stash &stash)\n+{\n+    using HashedLabelRef = std::reference_wrapper<const FastSparseMap::HashedLabel>;\n+    size_t num_mapped_dims = addr_sources.size();\n+    auto &result = stash.create<FastValue<OCT>>(res_type, res_type.count_mapped_dimensions(), 1, lhs.map.size()*rhs.map.size());", "originalCommit": "dafdec43bf328013f800d34462b7e5eb26a1a96c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a03e8cd857ccd0fce1e6f97b1b8ad50832c8b9a0", "url": "https://github.com/vespa-engine/vespa/commit/a03e8cd857ccd0fce1e6f97b1b8ad50832c8b9a0", "message": "minor refactoring:\n\n* have a static const empty_label in FastSparseMap\n  (may be useful more places)\n* avoid re-computing num_mapped_dims needlessly", "committedDate": "2020-11-09T10:33:41Z", "type": "commit"}]}