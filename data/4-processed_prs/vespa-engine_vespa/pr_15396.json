{"pr_number": 15396, "pr_title": "combine dimensions and split reduce operations", "pr_createdAt": "2020-11-19T17:03:05Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15396", "timeline": [{"oid": "aef0081a38061e9fa69b32a3351ae14c357734eb", "url": "https://github.com/vespa-engine/vespa/commit/aef0081a38061e9fa69b32a3351ae14c357734eb", "message": "combine dimensions and split reduce operations", "committedDate": "2020-11-19T16:57:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3OTk1OQ==", "url": "https://github.com/vespa-engine/vespa/pull/15396#discussion_r527479959", "bodyText": "i think you've mentioned that we could have these three lines as a utility in the type\ntype_in.dimension(dim_name)?", "author": "arnej27959", "createdAt": "2020-11-20T07:05:10Z", "path": "eval/src/vespa/eval/tensor/dense/dense_single_reduce_function.cpp", "diffHunk": "@@ -147,14 +137,99 @@ struct MyGetFun {\n \n using MyTypify = TypifyValue<TypifyCellType,TypifyAggr,TypifyBool>;\n \n+std::pair<std::vector<vespalib::string>,ValueType> sort_and_drop_trivial(const std::vector<vespalib::string> &list_in, const ValueType &type_in) {\n+    std::vector<vespalib::string> dropped;\n+    std::vector<vespalib::string> list_out;\n+    for (const auto &dim_name: list_in) {\n+        auto dim_idx = type_in.dimension_index(dim_name);\n+        assert(dim_idx != ValueType::Dimension::npos);\n+        const auto &dim = type_in.dimensions()[dim_idx];", "originalCommit": "aef0081a38061e9fa69b32a3351ae14c357734eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}