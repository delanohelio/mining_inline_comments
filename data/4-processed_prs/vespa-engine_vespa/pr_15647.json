{"pr_number": 15647, "pr_title": "Don't increment or decrement volatile variables. It is deprecated when using C++20.", "pr_createdAt": "2020-12-03T18:13:22Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15647", "timeline": [{"oid": "54e2f0d40cad9ee1d442963e4dc765796fbac96b", "url": "https://github.com/vespa-engine/vespa/commit/54e2f0d40cad9ee1d442963e4dc765796fbac96b", "message": "Don't increment or decrement volatile variables. It is deprecated\nwhen using C++20.", "committedDate": "2020-12-03T18:01:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3NDkwMA==", "url": "https://github.com/vespa-engine/vespa/pull/15647#discussion_r535474900", "bodyText": "I think that it is better to remove volatile instead. It seems all use is while holding a lock.", "author": "baldersheim", "createdAt": "2020-12-03T18:21:21Z", "path": "searchcore/src/vespa/searchcore/proton/matching/querylimiter.cpp", "diffHunk": "@@ -25,14 +25,14 @@ QueryLimiter::grabToken(const Doom & doom)\n             _cond.wait_for(guard, left);\n         }\n     }\n-    _activeThreads++;\n+    _activeThreads = _activeThreads + 1;\n }\n \n void\n QueryLimiter::releaseToken()\n {\n     std::lock_guard<std::mutex> guard(_lock);\n-    _activeThreads--;\n+    _activeThreads = _activeThreads - 1;", "originalCommit": "54e2f0d40cad9ee1d442963e4dc765796fbac96b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3NTc2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15647#discussion_r535475761", "bodyText": "I think it is better to replace with an atomic instead.", "author": "baldersheim", "createdAt": "2020-12-03T18:22:22Z", "path": "vespalib/src/tests/array/array_test.cpp", "diffHunk": "@@ -27,16 +27,16 @@ std::ostream & operator << (std::ostream & os, const Array<T> & a)\n \n class Clever {\n public:\n-    Clever() : _counter(&_global) { (*_counter)++; }\n+    Clever() : _counter(&_global) { *_counter = *_counter + 1; }", "originalCommit": "54e2f0d40cad9ee1d442963e4dc765796fbac96b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3NTg3Mg==", "url": "https://github.com/vespa-engine/vespa/pull/15647#discussion_r535475872", "bodyText": "I think it is better to replace with an atomic instead.", "author": "baldersheim", "createdAt": "2020-12-03T18:22:31Z", "path": "vespalib/src/tests/stllike/hash_test.cpp", "diffHunk": "@@ -171,16 +171,16 @@ TEST(\"test hash map iterator stability\")\n \n class Clever {\n public:\n-    Clever() : _counter(&_global) { (*_counter)++; }\n+    Clever() : _counter(&_global) { *_counter = *_counter + 1; }", "originalCommit": "54e2f0d40cad9ee1d442963e4dc765796fbac96b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "13148035ce5843881e89f14ad2d644ac58a1b7ef", "url": "https://github.com/vespa-engine/vespa/commit/13148035ce5843881e89f14ad2d644ac58a1b7ef", "message": "Use std::atomic.", "committedDate": "2020-12-03T18:46:35Z", "type": "commit"}]}