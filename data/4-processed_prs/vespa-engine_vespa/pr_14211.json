{"pr_number": 14211, "pr_title": "Implement store for heap allocated tensors.", "pr_createdAt": "2020-08-31T14:29:48Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14211", "timeline": [{"oid": "e35cb626e2825376f4c88d62d5466bd8c205a8d4", "url": "https://github.com/vespa-engine/vespa/commit/e35cb626e2825376f4c88d62d5466bd8c205a8d4", "message": "Implement store for heap allocated tensors.", "committedDate": "2020-08-31T13:58:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3MTQ0MA==", "url": "https://github.com/vespa-engine/vespa/pull/14211#discussion_r480171440", "bodyText": "Consider removing unneeded log setup.", "author": "toregge", "createdAt": "2020-08-31T14:33:03Z", "path": "searchlib/src/tests/tensor/direct_tensor_store/direct_tensor_store_test.cpp", "diffHunk": "@@ -0,0 +1,93 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/searchlib/tensor/direct_tensor_store.h>\n+#include <vespa/vespalib/gtest/gtest.h>\n+#include <vespa/eval/tensor/default_tensor_engine.h>\n+#include <vespa/eval/tensor/tensor.h>\n+\n+#include <vespa/log/log.h>\n+LOG_SETUP(\"direct_tensor_store_test\");", "originalCommit": "e35cb626e2825376f4c88d62d5466bd8c205a8d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4NjkwNA==", "url": "https://github.com/vespa-engine/vespa/pull/14211#discussion_r480186904", "bodyText": "Fixed", "author": "geirst", "createdAt": "2020-08-31T14:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3MTQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3Mjk2Mw==", "url": "https://github.com/vespa-engine/vespa/pull/14211#discussion_r480172963", "bodyText": "Consider removing unneeded equality check, passing identity check implies equality.", "author": "toregge", "createdAt": "2020-08-31T14:35:13Z", "path": "searchlib/src/tests/tensor/direct_tensor_store/direct_tensor_store_test.cpp", "diffHunk": "@@ -0,0 +1,93 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/searchlib/tensor/direct_tensor_store.h>\n+#include <vespa/vespalib/gtest/gtest.h>\n+#include <vespa/eval/tensor/default_tensor_engine.h>\n+#include <vespa/eval/tensor/tensor.h>\n+\n+#include <vespa/log/log.h>\n+LOG_SETUP(\"direct_tensor_store_test\");\n+\n+using namespace search::tensor;\n+\n+using vespalib::datastore::EntryRef;\n+using vespalib::eval::TensorSpec;\n+using vespalib::tensor::DefaultTensorEngine;\n+using vespalib::tensor::Tensor;\n+\n+vespalib::string tensor_spec(\"tensor(x{})\");\n+\n+Tensor::UP\n+make_tensor(const TensorSpec& spec)\n+{\n+    auto value = DefaultTensorEngine::ref().from_spec(spec);\n+    auto* tensor = dynamic_cast<Tensor*>(value.get());\n+    assert(tensor != nullptr);\n+    value.release();\n+    return Tensor::UP(tensor);\n+}\n+\n+Tensor::UP\n+make_tensor(double value)\n+{\n+    return make_tensor(TensorSpec(tensor_spec).add({{\"x\", \"a\"}}, value));\n+}\n+\n+class DirectTensorStoreTest : public ::testing::Test {\n+public:\n+    DirectTensorStore store;\n+\n+    DirectTensorStoreTest() : store() {}\n+\n+    virtual ~DirectTensorStoreTest() {\n+        store.clearHoldLists();\n+    }\n+\n+    void expect_tensor(const Tensor* exp, EntryRef ref) {\n+        const auto* act = store.get_tensor(ref);\n+        ASSERT_TRUE(act);\n+        EXPECT_EQ(exp, act);\n+        EXPECT_EQ(*exp, *act);", "originalCommit": "e35cb626e2825376f4c88d62d5466bd8c205a8d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4Njk5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/14211#discussion_r480186999", "bodyText": "Fixed", "author": "geirst", "createdAt": "2020-08-31T14:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3Mjk2Mw=="}], "type": "inlineReview"}, {"oid": "3386f45c62d4d5194fafa7e06fcf3811942dafcb", "url": "https://github.com/vespa-engine/vespa/commit/3386f45c62d4d5194fafa7e06fcf3811942dafcb", "message": "Remove unneeded code.", "committedDate": "2020-08-31T14:56:12Z", "type": "commit"}]}