{"pr_number": 13230, "pr_title": "Use syncronized to make the loadbalancer semantically thread safe.", "pr_createdAt": "2020-05-12T21:39:46Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13230", "timeline": [{"oid": "cf214d62e2eaba0b413feec0fc525142698a8fda", "url": "https://github.com/vespa-engine/vespa/commit/cf214d62e2eaba0b413feec0fc525142698a8fda", "message": "Use syncronized to make the loadbalancer semantically thread safe.\nUse a cache to avoid parsing a string to get an index.\nMove test to same package to avoid public access to internal details.", "committedDate": "2020-05-12T21:35:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2NTE1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13230#discussion_r424265153", "bodyText": "Could use cachedIndex.computeIfAbsent here instead of explicit branch (though not needing a lambda might be faster?)", "author": "vekterli", "createdAt": "2020-05-13T08:32:16Z", "path": "documentapi/src/main/java/com/yahoo/documentapi/messagebus/protocol/LoadBalancer.java", "diffHunk": "@@ -54,6 +55,14 @@ public int getIndex(String nodeName) {\n             throw new IllegalArgumentException(err, e);\n         }\n     }\n+    private int getCachedIndex(String nodeName) {\n+        Integer index = cachedIndex.get(nodeName);\n+        if (index == null) {\n+            index = getIndex(nodeName);\n+            cachedIndex.put(nodeName, index);\n+        }", "originalCommit": "cf214d62e2eaba0b413feec0fc525142698a8fda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMzODA1Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13230#discussion_r424338053", "bodyText": "Done, I think the JIT compiler will solve the performance for us.", "author": "baldersheim", "createdAt": "2020-05-13T10:33:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2NTE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MzEyMw==", "url": "https://github.com/vespa-engine/vespa/pull/13230#discussion_r424283123", "bodyText": "The returned NodeMetrics object is shared and thus may be read outside the lock whilst concurrently being updated by another thread. Is this a problem? Should we deep-copy the metrics to make sure they're internally consistent? This is not something introduced by this PR, but just a general observation.", "author": "vekterli", "createdAt": "2020-05-13T09:00:11Z", "path": "documentapi/src/main/java/com/yahoo/documentapi/messagebus/protocol/LoadBalancer.java", "diffHunk": "@@ -68,24 +77,24 @@ public Node getRecipient(List<Mirror.Entry> choices) {\n \n         double weightSum = 0.0;\n         Node selectedNode = null;\n-        double position = safePosition.get();\n-        for (Mirror.Entry entry : choices) {\n-            NodeMetrics nodeMetrics = getNodeMetrics(entry);\n+        synchronized (this) {\n+            for (Mirror.Entry entry : choices) {\n+                NodeMetrics nodeMetrics = getNodeMetrics(entry);\n \n-            weightSum += nodeMetrics.weight;\n+                weightSum += nodeMetrics.weight;\n \n-            if (weightSum > position) {\n-                selectedNode = new Node(entry, nodeMetrics);\n-                break;\n+                if (weightSum > position) {\n+                    selectedNode = new Node(entry, nodeMetrics);", "originalCommit": "cf214d62e2eaba0b413feec0fc525142698a8fda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMTczMA==", "url": "https://github.com/vespa-engine/vespa/pull/13230#discussion_r424321730", "bodyText": "That was why I made it package private. I checked all other usage. That was only in tests.", "author": "baldersheim", "createdAt": "2020-05-13T10:03:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MzEyMw=="}], "type": "inlineReview"}, {"oid": "1ff3df2a091e99540d0bd7d2619d571d6d7e3ed8", "url": "https://github.com/vespa-engine/vespa/commit/1ff3df2a091e99540d0bd7d2619d571d6d7e3ed8", "message": "Use computeIfAbsent", "committedDate": "2020-05-13T10:32:45Z", "type": "commit"}]}