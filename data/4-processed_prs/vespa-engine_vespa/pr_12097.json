{"pr_number": 12097, "pr_title": "Implement wrapper for std::atomic of type EntryRef and use it in hnsw\u2026", "pr_createdAt": "2020-02-06T14:31:29Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12097", "timeline": [{"oid": "97129033202dadaf43615a8b55c35f284979fa65", "url": "https://github.com/vespa-engine/vespa/commit/97129033202dadaf43615a8b55c35f284979fa65", "message": "Implement wrapper for std::atomic of type EntryRef and use it in hnsw index to get snapshotting of level arrays.", "committedDate": "2020-02-06T14:27:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxMjc3MA==", "url": "https://github.com/vespa-engine/vespa/pull/12097#discussion_r375912770", "bodyText": "If this is always invoked from the writer thread, it's technically sufficient to use a load_relaxed() here since the changes to these structures shall always be visible to that thread anyway. But acquire loads are almost free on x86-64 anyway, so it's hardly something to prematurely optimize for.", "author": "vekterli", "createdAt": "2020-02-06T15:43:58Z", "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index_base.cpp", "diffHunk": "@@ -65,18 +64,16 @@ HnswIndexBase::get_link_array(uint32_t docid, uint32_t level) const\n {\n     auto levels = get_level_array(docid);\n     assert(level < levels.size());\n-    return _links.get(levels[level]);\n+    return _links.get(levels[level].load_acquire());\n }\n \n void\n HnswIndexBase::set_link_array(uint32_t docid, uint32_t level, const LinkArrayRef& links)\n {\n     auto links_ref = _links.add(links);\n-    // TODO: Add memory barrier?\n-    auto node_ref = _node_refs[docid];\n+    auto node_ref = _node_refs[docid].load_acquire();", "originalCommit": "97129033202dadaf43615a8b55c35f284979fa65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}