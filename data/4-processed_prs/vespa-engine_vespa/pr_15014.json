{"pr_number": 15014, "pr_title": "Refactor filestormanager tests", "pr_createdAt": "2020-10-22T13:40:22Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15014", "timeline": [{"oid": "d17f975cf4b36aba25afe3d29b645c6ba782cb0d", "url": "https://github.com/vespa-engine/vespa/commit/d17f975cf4b36aba25afe3d29b645c6ba782cb0d", "message": "Reduce code duplication by using TestFileStorComponents in more tests.", "committedDate": "2020-10-22T12:34:12Z", "type": "commit"}, {"oid": "321567fc907b58e3de11fbdd8c0d8a4d32d6c6d2", "url": "https://github.com/vespa-engine/vespa/commit/321567fc907b58e3de11fbdd8c0d8a4d32d6c6d2", "message": "Reduce code duplication by consolidating setup of FileStorHandler.", "committedDate": "2020-10-22T13:15:35Z", "type": "commit"}, {"oid": "3adef49574ec1d09a26235f6da34ce21c1d3f396", "url": "https://github.com/vespa-engine/vespa/commit/3adef49574ec1d09a26235f6da34ce21c1d3f396", "message": "Reduce code duplication by consolidating setup of PersistenceHandler.", "committedDate": "2020-10-22T13:37:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE3ODg5MA==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510178890", "bodyText": "Consider = default", "author": "vekterli", "createdAt": "2020-10-22T13:51:57Z", "path": "storage/src/tests/persistence/filestorage/filestormanagertest.cpp", "diffHunk": "@@ -218,6 +219,57 @@ struct TestFileStorComponents {\n     }\n };\n \n+struct FileStorHandlerComponents {\n+    DummyStorageLink top;\n+    DummyStorageLink* dummyManager;\n+    ForwardingMessageSender messageSender;\n+    documentapi::LoadTypeSet loadTypes;\n+    FileStorMetrics metrics;\n+    std::unique_ptr<FileStorHandler> filestorHandler;\n+\n+    FileStorHandlerComponents(FileStorManagerTest& test, uint32_t threadsPerDisk = 1)\n+        : top(),\n+          dummyManager(new DummyStorageLink),\n+          messageSender(*dummyManager),\n+          loadTypes(\"raw:\"),\n+          metrics(loadTypes.getMetricLoadTypes()),\n+          filestorHandler()\n+    {\n+        top.push_back(std::unique_ptr<StorageLink>(dummyManager));\n+        top.open();\n+\n+        metrics.initDiskMetrics(loadTypes.getMetricLoadTypes(), 1, threadsPerDisk);\n+\n+        filestorHandler = std::make_unique<FileStorHandlerImpl>(messageSender, metrics, test._node->getComponentRegister());\n+        filestorHandler->setGetNextMessageTimeout(50ms);\n+    }\n+    ~FileStorHandlerComponents() {}", "originalCommit": "3adef49574ec1d09a26235f6da34ce21c1d3f396", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5MjYzNA==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510192634", "bodyText": "That was not enough in this case. Inlining of destructor still failed.", "author": "geirst", "createdAt": "2020-10-22T14:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE3ODg5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDE5Mg==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510180192", "bodyText": "Consider = default", "author": "vekterli", "createdAt": "2020-10-22T13:53:37Z", "path": "storage/src/tests/persistence/filestorage/filestormanagertest.cpp", "diffHunk": "@@ -218,6 +219,57 @@ struct TestFileStorComponents {\n     }\n };\n \n+struct FileStorHandlerComponents {\n+    DummyStorageLink top;\n+    DummyStorageLink* dummyManager;\n+    ForwardingMessageSender messageSender;\n+    documentapi::LoadTypeSet loadTypes;\n+    FileStorMetrics metrics;\n+    std::unique_ptr<FileStorHandler> filestorHandler;\n+\n+    FileStorHandlerComponents(FileStorManagerTest& test, uint32_t threadsPerDisk = 1)\n+        : top(),\n+          dummyManager(new DummyStorageLink),\n+          messageSender(*dummyManager),\n+          loadTypes(\"raw:\"),\n+          metrics(loadTypes.getMetricLoadTypes()),\n+          filestorHandler()\n+    {\n+        top.push_back(std::unique_ptr<StorageLink>(dummyManager));\n+        top.open();\n+\n+        metrics.initDiskMetrics(loadTypes.getMetricLoadTypes(), 1, threadsPerDisk);\n+\n+        filestorHandler = std::make_unique<FileStorHandlerImpl>(messageSender, metrics, test._node->getComponentRegister());\n+        filestorHandler->setGetNextMessageTimeout(50ms);\n+    }\n+    ~FileStorHandlerComponents() {}\n+};\n+\n+struct PersistenceHandlerComponents : public FileStorHandlerComponents {\n+    ServiceLayerComponent component;\n+    BucketOwnershipNotifier bucketOwnershipNotifier;\n+    std::unique_ptr<PersistenceHandler> persistenceHandler;\n+\n+    PersistenceHandlerComponents(FileStorManagerTest& test)\n+        : FileStorHandlerComponents(test),\n+          component(test._node->getComponentRegister(), \"test\"),\n+          bucketOwnershipNotifier(component, messageSender),\n+          persistenceHandler()\n+    {\n+        vespa::config::content::StorFilestorConfig cfg;\n+        persistenceHandler =\n+                std::make_unique<PersistenceHandler>(test._node->executor(), component, cfg,\n+                                                     test._node->getPersistenceProvider(),\n+                                                     *filestorHandler, bucketOwnershipNotifier,\n+                                                     *metrics.disk->threads[0]);\n+    }\n+    std::unique_ptr<DiskThread> make_disk_thread() {\n+        return createThread(*persistenceHandler, *filestorHandler, component);\n+    }\n+    ~PersistenceHandlerComponents() {}", "originalCommit": "3adef49574ec1d09a26235f6da34ce21c1d3f396", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5MjcyMQ==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510192721", "bodyText": "That was not enough in this case. Inlining of destructor still failed.", "author": "geirst", "createdAt": "2020-10-22T14:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDE5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5OTgyOA==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510199828", "bodyText": "Move PersistenceHandlerComponents::~PersistenceHandlerComponents() = default; outside the class itself and the inliner becomes happy again", "author": "vekterli", "createdAt": "2020-10-22T14:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDE5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNjU5Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510436596", "bodyText": "Yes, that is the correct approach. = default in class definition applies the same inliner heuristics as not defining the destructor. Defining and empty destructor with {} changes the heuristics, while doing outside the class definitions avoids the problem.", "author": "baldersheim", "createdAt": "2020-10-22T20:27:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDE5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MTg2Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510451866", "bodyText": "Fixed.", "author": "geirst", "createdAt": "2020-10-22T20:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDE5Mg=="}], "type": "inlineReview"}, {"oid": "a9831d25b17d27f4c441e86b9d1607a4116bf38f", "url": "https://github.com/vespa-engine/vespa/commit/a9831d25b17d27f4c441e86b9d1607a4116bf38f", "message": "Use default destructor outside class definition.", "committedDate": "2020-10-22T20:55:41Z", "type": "commit"}]}