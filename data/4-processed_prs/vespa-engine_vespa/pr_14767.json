{"pr_number": 14767, "pr_title": "- GC unused code.", "pr_createdAt": "2020-10-07T20:55:28Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14767", "timeline": [{"oid": "356172042cbc96375be8d663a945879b9f10dd41", "url": "https://github.com/vespa-engine/vespa/commit/356172042cbc96375be8d663a945879b9f10dd41", "message": "- GC unused code.\n- vespalib::Lock -> std::mutex", "committedDate": "2020-10-07T20:53:05Z", "type": "commit"}, {"oid": "b0fa07975af2ed8812544950f5785a48f0b41dfd", "url": "https://github.com/vespa-engine/vespa/commit/b0fa07975af2ed8812544950f5785a48f0b41dfd", "message": "mutex must be mutable to be used in const method.", "committedDate": "2020-10-07T21:03:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODU0Mg==", "url": "https://github.com/vespa-engine/vespa/pull/14767#discussion_r501558542", "bodyText": "This existing implementation of double-checked locking does not seem entirely correct, as _instance may be read by a thread that has not formed a release-acquire pair with the thread that wrote it (since the reader thread won't be taking the guard).\nCould add explicit fencing, but I'd suggest just moving _instance into a static function scope variable, which makes the code simpler and also correctly does double-checked locking behind the scenes.", "author": "vekterli", "createdAt": "2020-10-08T08:59:14Z", "path": "document/src/vespa/document/datatype/positiondatatype.cpp", "diffHunk": "@@ -30,7 +31,7 @@ const StructDataType &\n PositionDataType::getInstance()\n {\n     if ( ! _instance) {\n-        vespalib::LockGuard guard(_lock);\n+        std::lock_guard guard(_G_lock);", "originalCommit": "b0fa07975af2ed8812544950f5785a48f0b41dfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MDM3NQ==", "url": "https://github.com/vespa-engine/vespa/pull/14767#discussion_r501560375", "bodyText": "See comment from PositionDataType re: subtly incorrect double-checked locking.", "author": "vekterli", "createdAt": "2020-10-08T09:02:00Z", "path": "document/src/vespa/document/datatype/urldatatype.cpp", "diffHunk": "@@ -34,7 +40,7 @@ const StructDataType &\n UrlDataType::getInstance()\n {\n     if ( ! _instance ) {\n-        vespalib::LockGuard guard(_lock);\n+        std::lock_guard guard(_G_lock);", "originalCommit": "b0fa07975af2ed8812544950f5785a48f0b41dfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}