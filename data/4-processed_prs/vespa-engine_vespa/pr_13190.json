{"pr_number": 13190, "pr_title": "Add get_transient_memory_usage() method to AttibuteInitializer.", "pr_createdAt": "2020-05-08T11:26:32Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13190", "timeline": [{"oid": "7bada2dfa33f583c54bd8691457c25c055d851c9", "url": "https://github.com/vespa-engine/vespa/commit/7bada2dfa33f583c54bd8691457c25c055d851c9", "message": "Add get_transient_memory_usage() method to AttibuteInitializer.", "committedDate": "2020-05-08T11:18:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0ODkyOA==", "url": "https://github.com/vespa-engine/vespa/pull/13190#discussion_r422148928", "bodyText": "Could also consider testing that transient memory is zero for a non fast-search attribute.", "author": "geirst", "createdAt": "2020-05-08T13:40:33Z", "path": "searchcore/src/tests/proton/attribute/attribute_initializer/attribute_initializer_test.cpp", "diffHunk": "@@ -198,6 +212,22 @@ TEST(\"require that too old attribute is not loaded\")\n     EXPECT_EQUAL(1u, av->getNumDocs());\n }\n \n+TEST(\"require that transient memory usage for first time posting list attribute load after enabling posting lists\")\n+{\n+    saveAttr(\"a\", int32_wset, 10, 2);\n+    Fixture f;\n+    auto avi = f.createInitializer({\"a\", get_int32_wset_fs()}, 5);\n+    EXPECT_EQUAL(40u, avi->get_transient_memory_usage());\n+}\n+\n+TEST(\"require that transient memory usage for normal posting list attribute load\")\n+{\n+    saveAttr(\"a\", get_int32_wset_fs(), 10, 2);\n+    Fixture f;\n+    auto avi = f.createInitializer({\"a\", get_int32_wset_fs()}, 5);\n+    EXPECT_EQUAL(24u, avi->get_transient_memory_usage());\n+}\n+", "originalCommit": "7bada2dfa33f583c54bd8691457c25c055d851c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1MDU1Nw==", "url": "https://github.com/vespa-engine/vespa/pull/13190#discussion_r422150557", "bodyText": "Please test these two in verify_roundtrip_serialization() in attribute_header_test.cpp.", "author": "geirst", "createdAt": "2020-05-08T13:43:43Z", "path": "searchlib/src/vespa/searchlib/attribute/attribute_header.h", "diffHunk": "@@ -63,6 +63,8 @@ class AttributeHeader {\n     bool getEnumerated() const { return _enumerated; }\n     uint64_t getCreateSerialNum() const { return _createSerialNum; }\n     uint32_t getVersion() const  { return _version; }\n+    uint64_t get_total_value_count() const { return _totalValueCount; }", "originalCommit": "7bada2dfa33f583c54bd8691457c25c055d851c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5e5a69f1a48922ea6a1b578cf2dcc877a30eea81", "url": "https://github.com/vespa-engine/vespa/commit/5e5a69f1a48922ea6a1b578cf2dcc877a30eea81", "message": "Verify that transient memory is zero when attribute to load doesn't have\na posting list.", "committedDate": "2020-05-08T13:52:47Z", "type": "commit"}, {"oid": "a52fa4a75cbc41d2ea7f1f484b12d39ee4ff910f", "url": "https://github.com/vespa-engine/vespa/commit/a52fa4a75cbc41d2ea7f1f484b12d39ee4ff910f", "message": "Test roundtrip serialization of total value count and unique value count.", "committedDate": "2020-05-08T13:58:56Z", "type": "commit"}]}