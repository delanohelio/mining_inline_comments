{"pr_number": 13533, "pr_title": "protect RNG with mutex", "pr_createdAt": "2020-06-10T10:14:49Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13533", "timeline": [{"oid": "5960e92dd2bc44ba62b11c9f160b4987d012d754", "url": "https://github.com/vespa-engine/vespa/commit/5960e92dd2bc44ba62b11c9f160b4987d012d754", "message": "protect RNG with mutex", "committedDate": "2020-06-10T10:12:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAyMjI4Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13533#discussion_r438022283", "bodyText": "Consider guarding only the random call, log might be expensive.", "author": "baldersheim", "createdAt": "2020-06-10T10:27:57Z", "path": "searchlib/src/vespa/searchlib/tensor/inv_log_level_generator.h", "diffHunk": "@@ -16,16 +17,19 @@ namespace search::tensor {\n \n class InvLogLevelGenerator : public RandomLevelGenerator {\n     std::mt19937_64 _rng;\n+    std::mutex _mutex;\n     std::uniform_real_distribution<double> _uniform;\n     double _levelMultiplier;\n public:\n     InvLogLevelGenerator(uint32_t m)\n       : _rng(0x1234deadbeef5678uLL),\n+        _mutex(),\n         _uniform(0.0, 1.0),\n         _levelMultiplier(1.0 / log(1.0 * m))\n     {}\n \n     uint32_t max_level() override {\n+        std::lock_guard<std::mutex> guard(_mutex);\n         double unif = _uniform(_rng);", "originalCommit": "5960e92dd2bc44ba62b11c9f160b4987d012d754", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAyMjYyNw==", "url": "https://github.com/vespa-engine/vespa/pull/13533#discussion_r438022627", "bodyText": "add const to signal that it does not change during the lifetime of the object.", "author": "baldersheim", "createdAt": "2020-06-10T10:28:38Z", "path": "searchlib/src/vespa/searchlib/tensor/inv_log_level_generator.h", "diffHunk": "@@ -16,16 +17,19 @@ namespace search::tensor {\n \n class InvLogLevelGenerator : public RandomLevelGenerator {\n     std::mt19937_64 _rng;\n+    std::mutex _mutex;\n     std::uniform_real_distribution<double> _uniform;\n     double _levelMultiplier;", "originalCommit": "5960e92dd2bc44ba62b11c9f160b4987d012d754", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01628464c504010f133f48148ccfbcaa27ce9683", "url": "https://github.com/vespa-engine/vespa/commit/01628464c504010f133f48148ccfbcaa27ce9683", "message": "tighten guard holding\n\nalso:\n* constify where possible\n* use uniform_real_distribution to invert range for us", "committedDate": "2020-06-10T12:15:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5NDM2Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13533#discussion_r438094363", "bodyText": "I assume reversing of the arguments was intentional .....", "author": "baldersheim", "createdAt": "2020-06-10T12:48:29Z", "path": "searchlib/src/vespa/searchlib/tensor/inv_log_level_generator.h", "diffHunk": "@@ -16,18 +17,25 @@ namespace search::tensor {\n \n class InvLogLevelGenerator : public RandomLevelGenerator {\n     std::mt19937_64 _rng;\n+    std::mutex _mutex;\n     std::uniform_real_distribution<double> _uniform;\n-    double _levelMultiplier;\n+    const double _levelMultiplier;\n+\n+    double get_uniform() {\n+        std::lock_guard<std::mutex> guard(_mutex);\n+        return _uniform(_rng);\n+    }\n public:\n     InvLogLevelGenerator(uint32_t m)\n       : _rng(0x1234deadbeef5678uLL),\n-        _uniform(0.0, 1.0),\n+        _mutex(),\n+        _uniform(1.0, 0.0),", "originalCommit": "01628464c504010f133f48148ccfbcaa27ce9683", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}