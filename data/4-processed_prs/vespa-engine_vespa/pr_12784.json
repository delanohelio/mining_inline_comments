{"pr_number": 12784, "pr_title": "Add explicit limits to backend document selection parsing", "pr_createdAt": "2020-03-31T15:02:03Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12784", "timeline": [{"oid": "bc693476136615bb44b9c4705cd959e53fee1afd", "url": "https://github.com/vespa-engine/vespa/commit/bc693476136615bb44b9c4705cd959e53fee1afd", "message": "Add explicit limits to backend document selection parsing\n\nAdds the following (very generous) limits:\n- Max AST depth of 1024\n- Max input selection string size of 1 MiB\n\nHave to track AST depth manually, as there is no exposed way of\ndoing this natively via Bison.\n\nAlso removed a regex that had the potential of catastrophic\nbacktracking in case of massive inputs. It wasn't removed during\nthe previous purge due to being used with capture groups, which are\nnot supported by our current vespalib regex wrapper.", "committedDate": "2020-03-31T14:37:10Z", "type": "commit"}, {"oid": "013342a0470e7a5b456921010009c38a4a0c828f", "url": "https://github.com/vespa-engine/vespa/commit/013342a0470e7a5b456921010009c38a4a0c828f", "message": "Compile Flex lexer with options for better code generation", "committedDate": "2020-03-31T15:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzEyNg==", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401407126", "bodyText": "Consider adding the size and limit to the exception message.", "author": "geirst", "createdAt": "2020-04-01T07:26:28Z", "path": "document/src/vespa/document/select/parser.cpp", "diffHunk": "@@ -8,7 +9,18 @@\n \n namespace document::select {\n \n+namespace {\n+\n+void verify_expression_not_too_large(const std::string& expr) {\n+    if (expr.size() > ParserLimits::MaxSelectionByteSize) {\n+        throw ParsingFailedException(\"expression is too large to be parsed\");", "originalCommit": "bc693476136615bb44b9c4705cd959e53fee1afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1MjM1MQ==", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401452351", "bodyText": "Done", "author": "vekterli", "createdAt": "2020-04-01T08:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzEyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzU3Mw==", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401407573", "bodyText": "Consider adding the depth and max depth limit to the exception message.", "author": "geirst", "createdAt": "2020-04-01T07:27:24Z", "path": "document/src/vespa/document/select/parser_limits.cpp", "diffHunk": "@@ -0,0 +1,11 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#include \"parser_limits.h\"\n+#include \"parsing_failed_exception.h\"\n+\n+namespace document::select {\n+\n+void throw_max_depth_exceeded_exception() {\n+    throw ParsingFailedException(\"expression is too deeply nested\");", "originalCommit": "bc693476136615bb44b9c4705cd959e53fee1afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NDc0MA==", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401454740", "bodyText": "Added limit to message. We cannot know the actual depth of the input AST as we terminate parsing immediately when hitting the limit.", "author": "vekterli", "createdAt": "2020-04-01T08:50:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzU3Mw=="}], "type": "inlineReview"}, {"oid": "201a7320f48b1d8868bc1fb38ee1182ad3d84dd7", "url": "https://github.com/vespa-engine/vespa/commit/201a7320f48b1d8868bc1fb38ee1182ad3d84dd7", "message": "Add more limit details to parse failure messages", "committedDate": "2020-04-01T08:45:54Z", "type": "commit"}, {"oid": "4153969ca13541e7434963d02add12d574c9a461", "url": "https://github.com/vespa-engine/vespa/commit/4153969ca13541e7434963d02add12d574c9a461", "message": "Also include actual expression size in message", "committedDate": "2020-04-01T08:49:33Z", "type": "commit"}]}