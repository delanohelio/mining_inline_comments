{"pr_number": 15621, "pr_title": "Allocate once with the correct size", "pr_createdAt": "2020-12-02T21:07:01Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15621", "timeline": [{"oid": "028c7f38ffe85327b85a5fe050511a5becf72588", "url": "https://github.com/vespa-engine/vespa/commit/028c7f38ffe85327b85a5fe050511a5becf72588", "message": "Allocate once with the correct size", "committedDate": "2020-12-02T21:05:56Z", "type": "commit"}, {"oid": "fc8b150ba0b7ed457eecee6d81ae4347f6756120", "url": "https://github.com/vespa-engine/vespa/commit/fc8b150ba0b7ed457eecee6d81ae4347f6756120", "message": "Be explicit wether size is give or not", "committedDate": "2020-12-02T21:27:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA3NTc3NQ==", "url": "https://github.com/vespa-engine/vespa/pull/15621#discussion_r535075775", "bodyText": "would it not be better to round up the memory used to (close to) a power of 2, instead of the number of entries?", "author": "havardpe", "createdAt": "2020-12-03T10:34:23Z", "path": "vespalib/src/vespa/vespalib/stllike/hashtable.hpp", "diffHunk": "@@ -6,6 +6,28 @@\n \n namespace vespalib {\n \n+namespace {\n+\n+/// TODO Currently we require that you have atleast one element in _nodes to avoid one extra branch\n+/// However that means that empty unused hashtables are larger than necessary.\n+/// This we should probably reconsider.\n+template<typename Modulator>\n+uint32_t\n+computeModulo(size_t size) {\n+    return (size > 0) ? Modulator::selectHashTableSize(roundUp2inN(size) / 3) : 1;\n+}\n+\n+template <typename NodeStore>\n+NodeStore\n+createStore(size_t size, uint32_t modulo) {\n+    size = (size > 0) ? roundUp2inN(std::max(size_t(modulo), roundUp2inN(size))) : 1;", "originalCommit": "fc8b150ba0b7ed457eecee6d81ae4347f6756120", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}