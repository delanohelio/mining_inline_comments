{"pr_number": 12202, "pr_title": "Revert \"Revert \"Create a resourcepool so that we do not need to reconnect to content \u2026\"\"", "pr_createdAt": "2020-02-14T16:13:43Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12202", "timeline": [{"oid": "4e366945d3ca4eb9cb4682770682efb5dade3c13", "url": "https://github.com/vespa-engine/vespa/commit/4e366945d3ca4eb9cb4682770682efb5dade3c13", "message": "Revert \"Revert \"Create a resourcepool so that we do not need to reconnect to content \u2026\"\"", "committedDate": "2020-02-14T16:13:30Z", "type": "commit"}, {"oid": "e2959282016fa77d7b64aa6511286387e360b153", "url": "https://github.com/vespa-engine/vespa/commit/e2959282016fa77d7b64aa6511286387e360b153", "message": "Let rpcresourcepool be a child of dispatcher and inject it.", "committedDate": "2020-02-14T18:53:36Z", "type": "commit"}, {"oid": "6393b18c87614ab8bda956414bc0d9f2a963fd8d", "url": "https://github.com/vespa-engine/vespa/commit/6393b18c87614ab8bda956414bc0d9f2a963fd8d", "message": "Make the resourcepool a proper child of the dispatcher.", "committedDate": "2020-02-15T13:12:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI1NzUyMg==", "url": "https://github.com/vespa-engine/vespa/pull/12202#discussion_r380257522", "bodyText": "Suggest to use var for these, as their type is clear from the right hand side.", "author": "gjoranv", "createdAt": "2020-02-17T15:51:22Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/search/ContainerSearch.java", "diffHunk": "@@ -58,7 +59,11 @@ public void connectSearchClusters(Map<String, AbstractSearchCluster> searchClust\n     private void initializeDispatchers(Collection<AbstractSearchCluster> searchClusters) {\n         for (AbstractSearchCluster searchCluster : searchClusters) {\n             if ( ! ( searchCluster instanceof IndexedSearchCluster)) continue;\n-            owningCluster.addComponent(new DispatcherComponent((IndexedSearchCluster)searchCluster));\n+            Component dispatcher = new DispatcherComponent((IndexedSearchCluster)searchCluster);\n+            Component rpcResoucePool = new RpcResourcePoolComponent();", "originalCommit": "6393b18c87614ab8bda956414bc0d9f2a963fd8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM3ODE4NQ==", "url": "https://github.com/vespa-engine/vespa/pull/12202#discussion_r380378185", "bodyText": "Can use 'var' for rpcResourcePool, but due to some generics mumbo jumbo with addComponent it was not possible for the dispatcher.", "author": "baldersheim", "createdAt": "2020-02-17T21:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI1NzUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MTY1OQ==", "url": "https://github.com/vespa-engine/vespa/pull/12202#discussion_r380261659", "bodyText": "Just inject() will do. The name is only used with the @Named annotation for named constructor params, which is useful when the same ctor needs multiple instances of the same class.", "author": "gjoranv", "createdAt": "2020-02-17T15:59:21Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/search/ContainerSearch.java", "diffHunk": "@@ -58,7 +59,11 @@ public void connectSearchClusters(Map<String, AbstractSearchCluster> searchClust\n     private void initializeDispatchers(Collection<AbstractSearchCluster> searchClusters) {\n         for (AbstractSearchCluster searchCluster : searchClusters) {\n             if ( ! ( searchCluster instanceof IndexedSearchCluster)) continue;\n-            owningCluster.addComponent(new DispatcherComponent((IndexedSearchCluster)searchCluster));\n+            Component dispatcher = new DispatcherComponent((IndexedSearchCluster)searchCluster);\n+            Component rpcResoucePool = new RpcResourcePoolComponent();\n+            dispatcher.injectForName(rpcResoucePool.getComponentId().getName(), rpcResoucePool);", "originalCommit": "6393b18c87614ab8bda956414bc0d9f2a963fd8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM3Nzc2OQ==", "url": "https://github.com/vespa-engine/vespa/pull/12202#discussion_r380377769", "bodyText": "Ok, fixed", "author": "baldersheim", "createdAt": "2020-02-17T21:54:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MTY1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MzU2NQ==", "url": "https://github.com/vespa-engine/vespa/pull/12202#discussion_r380263565", "bodyText": "container-search is available from the model, so the class object can be used instead of a string. It will then fail compile-time instead of runtime if the class is moved or renamed.", "author": "gjoranv", "createdAt": "2020-02-17T16:02:54Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/search/RpcResourcePoolComponent.java", "diffHunk": "@@ -0,0 +1,18 @@\n+// Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.model.container.search;\n+\n+import com.yahoo.osgi.provider.model.ComponentModel;\n+import com.yahoo.vespa.model.container.component.Component;\n+import com.yahoo.vespa.model.container.xml.BundleMapper;\n+\n+public class RpcResourcePoolComponent extends Component<RpcResourcePoolComponent, ComponentModel> {\n+\n+    public RpcResourcePoolComponent() {\n+        super(toComponentModel());\n+    }\n+\n+    private static ComponentModel toComponentModel() {\n+        String className = \"com.yahoo.search.dispatch.rpc.RpcResourcePool\";", "originalCommit": "6393b18c87614ab8bda956414bc0d9f2a963fd8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM3ODI2MA==", "url": "https://github.com/vespa-engine/vespa/pull/12202#discussion_r380378260", "bodyText": "Thanks, done.", "author": "baldersheim", "createdAt": "2020-02-17T21:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MzU2NQ=="}], "type": "inlineReview"}, {"oid": "760e14dfef63c04d27a6b6e88bd2d003bafdd314", "url": "https://github.com/vespa-engine/vespa/commit/760e14dfef63c04d27a6b6e88bd2d003bafdd314", "message": "Use class.getName to get compile time error detection.\nUse 'inject' and 'var' where obvious.", "committedDate": "2020-02-17T21:52:53Z", "type": "commit"}]}