{"pr_number": 13710, "pr_title": "Add filter iterators for weighted set blueprints.", "pr_createdAt": "2020-06-25T13:15:15Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13710", "timeline": [{"oid": "07344e04b5628b52da54aaeaed6a28fe979e83f1", "url": "https://github.com/vespa-engine/vespa/commit/07344e04b5628b52da54aaeaed6a28fe979e83f1", "message": "Add filter iterators for weighted set blueprints.", "committedDate": "2020-06-25T13:11:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwOTY3NQ==", "url": "https://github.com/vespa-engine/vespa/pull/13710#discussion_r446009675", "bodyText": "Any reason for not using uint32_t (same as docId)? Consider replacing", "author": "geirst", "createdAt": "2020-06-26T07:16:54Z", "path": "searchlib/src/vespa/searchlib/attribute/document_weight_or_filter_search.cpp", "diffHunk": "@@ -0,0 +1,80 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"document_weight_or_filter_search.h\"\n+#include \"iterator_pack.h\"\n+#include <vespa/searchlib/common/bitvector.h>\n+#include <vespa/searchlib/queryeval/emptysearch.h>\n+\n+namespace search::attribute {\n+\n+class DocumentWeightOrFilterSearchImpl : public DocumentWeightOrFilterSearch\n+{\n+    AttributeIteratorPack _children;\n+public:\n+    DocumentWeightOrFilterSearchImpl(AttributeIteratorPack&& children);\n+    ~DocumentWeightOrFilterSearchImpl();\n+\n+    void doSeek(uint32_t docId) override;\n+    \n+    void doUnpack(uint32_t) override;\n+\n+    void initRange(uint32_t begin, uint32_t end) override {\n+        SearchIterator::initRange(begin, end);\n+        _children.initRange(begin, end);\n+    }\n+\n+    void or_hits_into(BitVector &result, uint32_t begin_id) override {\n+        return _children.or_hits_into(result, begin_id);\n+    }\n+\n+    void and_hits_into(BitVector &result, uint32_t begin_id) override {\n+        return result.andWith(*get_hits(begin_id));\n+    }\n+\n+    std::unique_ptr<BitVector> get_hits(uint32_t begin_id) override {\n+        return _children.get_hits(begin_id, getEndId());\n+    }\n+\n+    Trinary is_strict() const override { return Trinary::True; }\n+};\n+\n+DocumentWeightOrFilterSearchImpl::DocumentWeightOrFilterSearchImpl(AttributeIteratorPack&& children)\n+    : DocumentWeightOrFilterSearch(),\n+      _children(std::move(children))\n+{\n+}\n+\n+DocumentWeightOrFilterSearchImpl::~DocumentWeightOrFilterSearchImpl() = default;\n+\n+void\n+DocumentWeightOrFilterSearchImpl::doSeek(uint32_t docId)\n+{\n+    if (_children.get_docid(0) < docId) {\n+        _children.seek(0, docId);\n+    }\n+    uint32_t min_doc_id = _children.get_docid(0);\n+    for (unsigned int i = 1; min_doc_id > docId && i < _children.size(); ++i) {", "originalCommit": "07344e04b5628b52da54aaeaed6a28fe979e83f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA1NTE3Nw==", "url": "https://github.com/vespa-engine/vespa/pull/13710#discussion_r446055177", "bodyText": "_children.size() returns a value of type size_t, while _children.get_docid() and _children.seek() expects argument of type uint16_t. Perhaps it's better to use uint16_t ?", "author": "toregge", "createdAt": "2020-06-26T08:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwOTY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA1Nzc1NQ==", "url": "https://github.com/vespa-engine/vespa/pull/13710#discussion_r446057755", "bodyText": "Yes, I agree", "author": "geirst", "createdAt": "2020-06-26T08:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwOTY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4MjM5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/13710#discussion_r446082399", "bodyText": "Fixed.", "author": "toregge", "createdAt": "2020-06-26T09:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwOTY3NQ=="}], "type": "inlineReview"}, {"oid": "c39384dbe4a5b366a0f0d5743f5c899597c81b91", "url": "https://github.com/vespa-engine/vespa/commit/c39384dbe4a5b366a0f0d5743f5c899597c81b91", "message": "Use uint16_t data type for loop variable over children.", "committedDate": "2020-06-26T09:42:42Z", "type": "commit"}]}