{"pr_number": 13264, "pr_title": "Unpack interleaved features if they are needed in equiv search.", "pr_createdAt": "2020-05-15T10:09:09Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13264", "timeline": [{"oid": "a5b49bb9f29cd9724cc538b128901e3b698533f8", "url": "https://github.com/vespa-engine/vespa/commit/a5b49bb9f29cd9724cc538b128901e3b698533f8", "message": "Unpack interleaved features if they are needed in equiv search.", "committedDate": "2020-05-15T09:57:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDI3Mw==", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425774273", "bodyText": "Please extend searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp with new test cases for the new functionality that is added.", "author": "geirst", "createdAt": "2020-05-15T12:42:05Z", "path": "searchlib/src/vespa/searchlib/fef/termmatchdatamerger.cpp", "diffHunk": "@@ -41,31 +41,52 @@ TermMatchDataMerger::merge(uint32_t docid,\n {\n     _scratch.clear();\n     bool wasMatch = false;\n+    bool needs_normal_features = out.needs_normal_features();", "originalCommit": "a5b49bb9f29cd9724cc538b128901e3b698533f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgwNTM1MA==", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425805350", "bodyText": "term match data merger test has been extended.", "author": "toregge", "createdAt": "2020-05-15T13:34:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDI3Mw=="}], "type": "inlineReview"}, {"oid": "e65f5cc1f099a339be26ee9b7de98f29dc32b85b", "url": "https://github.com/vespa-engine/vespa/commit/e65f5cc1f099a339be26ee9b7de98f29dc32b85b", "message": "Rewrite term match data merger test to use gtest.", "committedDate": "2020-05-15T13:09:05Z", "type": "commit"}, {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "url": "https://github.com/vespa-engine/vespa/commit/d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "message": "Extend term match data merger test: merging of interleaved features.", "committedDate": "2020-05-15T13:27:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxMzM2OA==", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425813368", "bodyText": "Typo? dected -> detected", "author": "geirst", "createdAt": "2020-05-15T13:47:27Z", "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.appendPosition(make_pos(5));\n+\n+    b.reset(docid);\n+    b.appendPosition(make_pos(3));\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(0u, out.size());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    out.setNeedInterleavedFeatures(true);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.setNumOccs(1);\n+    a.setFieldLength(30);\n+\n+    b.reset(docid);\n+    b.setNumOccs(1);\n+    b.setFieldLength(30);\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(2u, out.getNumOccs());\n+    EXPECT_EQ(30u, out.getFieldLength());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features_with_dected_duplicate)", "originalCommit": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNDgyOA==", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425814828", "bodyText": "Consider using different value than a so that max of field lengths are tested.", "author": "geirst", "createdAt": "2020-05-15T13:49:47Z", "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.appendPosition(make_pos(5));\n+\n+    b.reset(docid);\n+    b.appendPosition(make_pos(3));\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(0u, out.size());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    out.setNeedInterleavedFeatures(true);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.setNumOccs(1);\n+    a.setFieldLength(30);\n+\n+    b.reset(docid);\n+    b.setNumOccs(1);\n+    b.setFieldLength(30);", "originalCommit": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNjk1MQ==", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425816951", "bodyText": "These 3 tests share basically the same setup, from line 250 to 260. The only difference is which bools are set on out. I suggest putting the shared code into a test class with an init() function (or similar) that takes the two bools and instantiate the merger.", "author": "geirst", "createdAt": "2020-05-15T13:52:51Z", "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;", "originalCommit": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce1b5bdb2538d5bfe2d354eb40c139af6f95cfc9", "url": "https://github.com/vespa-engine/vespa/commit/ce1b5bdb2538d5bfe2d354eb40c139af6f95cfc9", "message": "Move common code to new test class.", "committedDate": "2020-05-15T14:14:14Z", "type": "commit"}]}