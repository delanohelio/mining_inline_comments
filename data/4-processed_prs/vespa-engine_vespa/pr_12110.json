{"pr_number": 12110, "pr_title": " Added query_setup_time to default public metric set, replacing query_collateral_time", "pr_createdAt": "2020-02-07T11:28:53Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12110", "timeline": [{"oid": "b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "url": "https://github.com/vespa-engine/vespa/commit/b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "message": " Added content.proton.documentdb.matching.rank_profile.query_setup_time.average to default public metric set. Replaces query_collateral_time", "committedDate": "2020-02-07T11:26:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NjI3Mw==", "url": "https://github.com/vespa-engine/vespa/pull/12110#discussion_r376356273", "bodyText": "Internally, we are calculating a more correct average based on sum and count, so we should not include it here.", "author": "gjoranv", "createdAt": "2020-02-07T12:01:27Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/admin/monitoring/VespaMetricSet.java", "diffHunk": "@@ -456,10 +456,14 @@\n         metrics.add(new Metric(\"content.proton.documentdb.matching.query_latency.sum\"));\n         metrics.add(new Metric(\"content.proton.documentdb.matching.query_latency.count\"));\n         metrics.add(new Metric(\"content.proton.documentdb.matching.query_latency.average\")); // TODO: Remove in Vespa 8\n-        metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.max\"));\n-        metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.sum\"));\n-        metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.count\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.max\")); // TODO: Remove in Vespa 8\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.sum\")); // TODO: Remove in Vespa 8\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.count\")); // TODO: Remove in Vespa 8\n         metrics.add(new Metric(\"content.proton.documentdb.matching.query_collateral_time.average\")); // TODO: Remove in Vespa 8\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_setup_time.max\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_setup_time.sum\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_setup_time.count\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.query_setup_time.average\"));", "originalCommit": "b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NjM1OQ==", "url": "https://github.com/vespa-engine/vespa/pull/12110#discussion_r376356359", "bodyText": "Same here, remove the average.", "author": "gjoranv", "createdAt": "2020-02-07T12:01:41Z", "path": "config-model/src/main/java/com/yahoo/vespa/model/admin/monitoring/VespaMetricSet.java", "diffHunk": "@@ -471,10 +475,14 @@\n         metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_latency.sum\"));\n         metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_latency.count\"));\n         metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_latency.average\")); // TODO: Remove in Vespa 8\n-        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.max\"));\n-        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.sum\"));\n-        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.count\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.max\")); // TODO: Remove in Vespa 8\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.sum\")); // TODO: Remove in Vespa 8\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.count\")); // TODO: Remove in Vespa 8\n         metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_collateral_time.average\")); // TODO: Remove in Vespa 8\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_setup_time.max\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_setup_time.sum\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_setup_time.count\"));\n+        metrics.add(new Metric(\"content.proton.documentdb.matching.rank_profile.query_setup_time.average\"));", "originalCommit": "b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NjkxNA==", "url": "https://github.com/vespa-engine/vespa/pull/12110#discussion_r376356914", "bodyText": "Add TODO Vespa 8", "author": "gjoranv", "createdAt": "2020-02-07T12:03:17Z", "path": "searchcore/src/vespa/searchcore/proton/matching/matcher.cpp", "diffHunk": "@@ -287,7 +287,9 @@ Matcher::match(const SearchRequest &request, vespalib::ThreadBundle &threadBundl\n             numThreadsPerSearch, _rankSetup->getNumThreadsPerSearch(), estHits, reply->totalHitCount,\n             request.ranking.c_str());\n     }\n-    my_stats.queryCollateralTime(vespalib::to_s(total_matching_time.elapsed()) - my_stats.queryLatencyAvg());\n+    double querySetupTime = vespalib::to_s(total_matching_time.elapsed()) - my_stats.queryLatencyAvg()\n+    my_stats.queryCollateralTime(querySetupTime);", "originalCommit": "b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NzU0OA==", "url": "https://github.com/vespa-engine/vespa/pull/12110#discussion_r376357548", "bodyText": "The class where queryCollateralTimeAvg is defined must have a 'TODO Vespa 8'", "author": "gjoranv", "createdAt": "2020-02-07T12:05:09Z", "path": "searchcore/src/tests/proton/matching/matching_stats_test.cpp", "diffHunk": "@@ -48,43 +48,51 @@ TEST(\"requireThatAverageTimesAreRecorded\") {\n     EXPECT_APPROX(0.0, stats.groupingTimeAvg(), 0.00001);\n     EXPECT_APPROX(0.0, stats.rerankTimeAvg(), 0.00001);\n     EXPECT_APPROX(0.0, stats.queryCollateralTimeAvg(), 0.00001);\n+    EXPECT_APPROX(0.0, stats.querySetupTimeAvg(), 0.00001);\n     EXPECT_APPROX(0.0, stats.queryLatencyAvg(), 0.00001);\n     EXPECT_EQUAL(0u, stats.matchTimeCount());\n     EXPECT_EQUAL(0u, stats.groupingTimeCount());\n     EXPECT_EQUAL(0u, stats.rerankTimeCount());\n     EXPECT_EQUAL(0u, stats.queryCollateralTimeCount());\n+    EXPECT_EQUAL(0u, stats.querySetupTimeCount());\n     EXPECT_EQUAL(0u, stats.queryLatencyCount());\n-    stats.matchTime(0.01).groupingTime(0.1).rerankTime(0.5).queryCollateralTime(2.0).queryLatency(1.0);\n+    stats.matchTime(0.01).groupingTime(0.1).rerankTime(0.5).queryCollateralTime(2.0).querySetupTime(2.0).queryLatency(1.0);\n     EXPECT_APPROX(0.01, stats.matchTimeAvg(), 0.00001);\n     EXPECT_APPROX(0.1, stats.groupingTimeAvg(), 0.00001);\n     EXPECT_APPROX(0.5, stats.rerankTimeAvg(), 0.00001);\n     EXPECT_APPROX(2.0, stats.queryCollateralTimeAvg(), 0.00001);\n+    EXPECT_APPROX(2.0, stats.querySetupTimeAvg(), 0.00001);\n     EXPECT_APPROX(1.0, stats.queryLatencyAvg(), 0.00001);\n-    stats.add(MatchingStats().matchTime(0.03).groupingTime(0.3).rerankTime(1.5).queryCollateralTime(6.0).queryLatency(3.0));\n+    stats.add(MatchingStats().matchTime(0.03).groupingTime(0.3).rerankTime(1.5).queryCollateralTime(6.0).querySetupTime(6.0).queryLatency(3.0));\n     EXPECT_APPROX(0.02, stats.matchTimeAvg(), 0.00001);\n     EXPECT_APPROX(0.2, stats.groupingTimeAvg(), 0.00001);\n     EXPECT_APPROX(1.0, stats.rerankTimeAvg(), 0.00001);\n     EXPECT_APPROX(4.0, stats.queryCollateralTimeAvg(), 0.00001);", "originalCommit": "b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1ODEwNQ==", "url": "https://github.com/vespa-engine/vespa/pull/12110#discussion_r376358105", "bodyText": "Add 'TODO Vespa 8' where appropriate, either here or somewhere to make this line fail compilation when the metric is removed.", "author": "gjoranv", "createdAt": "2020-02-07T12:06:39Z", "path": "searchcore/src/vespa/searchcore/proton/matching/matching_stats.cpp", "diffHunk": "@@ -30,6 +30,7 @@ MatchingStats::MatchingStats()\n       _doomOvertime(),\n       _softDoomFactor(INITIAL_SOFT_DOOM_FACTOR),\n       _queryCollateralTime(),", "originalCommit": "b8a5d7e72ea6919a903e71e6f3bf553cd2494cc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ad876f4af85cdaf3c1128d7ed70a055280d3559f", "url": "https://github.com/vespa-engine/vespa/commit/ad876f4af85cdaf3c1128d7ed70a055280d3559f", "message": "Removed query_setup_time averages in metric set. Added TODO comments for removing old metric", "committedDate": "2020-02-07T12:34:14Z", "type": "forcePushed"}, {"oid": "6165e307f376ce04e00fa712faebdb1369d2f54a", "url": "https://github.com/vespa-engine/vespa/commit/6165e307f376ce04e00fa712faebdb1369d2f54a", "message": "Removed query_setup_time averages in metric set. Added TODO comments for removing old metric", "committedDate": "2020-02-07T13:14:34Z", "type": "commit"}, {"oid": "6165e307f376ce04e00fa712faebdb1369d2f54a", "url": "https://github.com/vespa-engine/vespa/commit/6165e307f376ce04e00fa712faebdb1369d2f54a", "message": "Removed query_setup_time averages in metric set. Added TODO comments for removing old metric", "committedDate": "2020-02-07T13:14:34Z", "type": "forcePushed"}]}