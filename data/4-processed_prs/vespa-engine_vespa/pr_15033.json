{"pr_number": 15033, "pr_title": "Add support for async message handling when scheduling storage messag\u2026", "pr_createdAt": "2020-10-26T09:59:55Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15033", "timeline": [{"oid": "f41815b4118b3e98dce00a5a94be94334fe6e29c", "url": "https://github.com/vespa-engine/vespa/commit/f41815b4118b3e98dce00a5a94be94334fe6e29c", "message": "Add support for async message handling when scheduling storage messages in FileStorManager.\n\nWhen turned on, the calling thread (e.g. FNET network thread when using Storage API RPC)\ngets the next async message to handle (if any) as part of scheduling a storage message.\nThis async message is then handled by the calling thread immediately,\ninstead of going via a persistence thread.", "committedDate": "2020-10-26T09:57:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1OTk3NA==", "url": "https://github.com/vespa-engine/vespa/pull/15033#discussion_r511859974", "bodyText": "Could safely be tagged as noexcept", "author": "vekterli", "createdAt": "2020-10-26T10:31:35Z", "path": "storage/src/vespa/storage/persistence/asynchandler.h", "diffHunk": "@@ -25,6 +25,7 @@ class AsyncHandler : public Types {\n     MessageTrackerUP handlePut(api::PutCommand& cmd, MessageTrackerUP tracker) const;\n     MessageTrackerUP handleRemove(api::RemoveCommand& cmd, MessageTrackerUP tracker) const;\n     MessageTrackerUP handleUpdate(api::UpdateCommand& cmd, MessageTrackerUP tracker) const;\n+    static bool is_async_message(api::MessageType::Id type_id);", "originalCommit": "f41815b4118b3e98dce00a5a94be94334fe6e29c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4MjYyMQ==", "url": "https://github.com/vespa-engine/vespa/pull/15033#discussion_r511882621", "bodyText": "Fixed", "author": "geirst", "createdAt": "2020-10-26T11:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1OTk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg2Mzk4OA==", "url": "https://github.com/vespa-engine/vespa/pull/15033#discussion_r511863988", "bodyText": "Consider ++iter", "author": "vekterli", "createdAt": "2020-10-26T10:38:26Z", "path": "storage/src/vespa/storage/persistence/filestorage/filestorhandlerimpl.cpp", "diffHunk": "@@ -910,6 +921,24 @@ FileStorHandlerImpl::Stripe::getNextMessage(vespalib::duration timeout)\n     return {}; // No message fetched.\n }\n \n+FileStorHandler::LockedMessage\n+FileStorHandlerImpl::Stripe::get_next_async_message(monitor_guard& guard)\n+{\n+    if (_owner.isClosed() || _owner.isPaused()) {\n+        return {};\n+    }\n+    PriorityIdx& idx(bmi::get<1>(*_queue));\n+    PriorityIdx::iterator iter(idx.begin()), end(idx.end());\n+\n+    while ((iter != end) && operationIsInhibited(guard, iter->_bucket, *iter->_command)) {\n+        iter++;", "originalCommit": "f41815b4118b3e98dce00a5a94be94334fe6e29c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg4MjY2Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15033#discussion_r511882666", "bodyText": "Fixed", "author": "geirst", "createdAt": "2020-10-26T11:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg2Mzk4OA=="}], "type": "inlineReview"}, {"oid": "36c660bc1faff21f1566552092668b3cff9ce58d", "url": "https://github.com/vespa-engine/vespa/commit/36c660bc1faff21f1566552092668b3cff9ce58d", "message": "Use noexcept and prefix iterator increment.", "committedDate": "2020-10-26T11:09:49Z", "type": "commit"}]}