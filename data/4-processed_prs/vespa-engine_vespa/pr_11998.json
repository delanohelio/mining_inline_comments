{"pr_number": 11998, "pr_title": "Add ReadableAttributeVector accessor to IAttributeManager", "pr_createdAt": "2020-01-29T12:49:29Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11998", "timeline": [{"oid": "bb74faa5f2e56c930db1ec06ebf912e5b316c087", "url": "https://github.com/vespa-engine/vespa/commit/bb74faa5f2e56c930db1ec06ebf912e5b316c087", "message": "Add ReadableAttributeVector accessor to IAttributeManager\n\nProvides a unified interface for fetching both regular as well as\nimported attributes. Exposing `ReadableAttributeVector` instead of\nraw `AttributeVector` instances enforces that all access is done via\nappropriate acquired read guards.\n\nRefactor document selection processing code to use the new interface\nin order to prepare for imported field support in selections.", "committedDate": "2020-01-29T12:22:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNDMxOA==", "url": "https://github.com/vespa-engine/vespa/pull/11998#discussion_r372424318", "bodyText": "Do we need to expose AttributeReadGuard here or could we just return the IAttributeVector interface instead (that you get from the guard)? If so, we should probably rename the function to something like attribute_at_index() or guarded_attribute_at_index().", "author": "geirst", "createdAt": "2020-01-29T14:46:36Z", "path": "searchcore/src/vespa/searchcore/proton/common/selectcontext.cpp", "diffHunk": "@@ -26,23 +28,30 @@ SelectContext::SelectContext(const CachedSelect &cachedSelect)\n       _cachedSelect(cachedSelect)\n { }\n \n-SelectContext::~SelectContext() { }\n+SelectContext::~SelectContext() = default;\n \n void\n SelectContext::getAttributeGuards()\n {\n-    _guards->resize(_cachedSelect.attributes().size());\n-    auto j(_cachedSelect.attributes().begin());\n-    for (std::vector<AttributeGuard>::iterator i(_guards->begin()), ie(_guards->end()); i != ie; ++i, ++j) {\n-        *i = AttributeGuard(*j);\n+    _guards->clear();\n+    _guards->reserve(_cachedSelect.attributes().size());\n+    for (const auto& attr : _cachedSelect.attributes()) {\n+        _guards->emplace_back(attr->makeReadGuard(false));\n     }\n }\n \n-\n void\n SelectContext::dropAttributeGuards()\n {\n     _guards->clear();\n }\n \n+const search::attribute::AttributeReadGuard&\n+SelectContext::read_guard_at_index(uint32_t index) const noexcept", "originalCommit": "bb74faa5f2e56c930db1ec06ebf912e5b316c087", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyOTkyOQ==", "url": "https://github.com/vespa-engine/vespa/pull/11998#discussion_r372429929", "bodyText": "Agreed, it's better to just expose the IAttributeVector. Will do this as a follow-up since I'm already working on this code base as part of the \"imported fields in selections\" task", "author": "vekterli", "createdAt": "2020-01-29T14:55:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNDMxOA=="}], "type": "inlineReview"}]}