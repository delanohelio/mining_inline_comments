{"pr_number": 13192, "pr_title": "add set_global_filter API w/wiring and unit test", "pr_createdAt": "2020-05-08T12:00:06Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/13192", "timeline": [{"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432", "url": "https://github.com/vespa-engine/vespa/commit/b96bbd7df10bb9a151acb0740ff2b34956c2c432", "message": "add set_global_filter API w/wiring and unit test", "committedDate": "2020-05-08T11:59:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExNjI0Mg==", "url": "https://github.com/vespa-engine/vespa/pull/13192#discussion_r422116242", "bodyText": "We should consider using a wrapper class (ex GlobalFilter) that owns the bitvector and implements shared_from_this to avoid over-copying the shared pointer.", "author": "havardpe", "createdAt": "2020-05-08T12:32:03Z", "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -365,6 +370,16 @@ IntermediateBlueprint::optimize(Blueprint* &self)\n     maybe_eliminate_self(self, get_replacement());\n }\n \n+void\n+IntermediateBlueprint::set_global_filter(std::shared_ptr<BitVector> global_filter)", "originalCommit": "b96bbd7df10bb9a151acb0740ff2b34956c2c432", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDA1Mg==", "url": "https://github.com/vespa-engine/vespa/pull/13192#discussion_r422170052", "bodyText": "good catch, we'll do that soon.", "author": "arnej27959", "createdAt": "2020-05-08T14:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExNjI0Mg=="}], "type": "inlineReview"}]}