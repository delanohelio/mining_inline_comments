{"pr_number": 12669, "pr_title": "Use c++11 for loops and use std::move.", "pr_createdAt": "2020-03-23T13:54:41Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12669", "timeline": [{"oid": "42a981b2ced76876252c48e9109bbc7d39a77b50", "url": "https://github.com/vespa-engine/vespa/commit/42a981b2ced76876252c48e9109bbc7d39a77b50", "message": "Use c++11 for loops and use std::move.", "committedDate": "2020-03-23T12:41:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4MDIxOQ==", "url": "https://github.com/vespa-engine/vespa/pull/12669#discussion_r396480219", "bodyText": "For all these callsites, cmd is a const std::shared_ptr<T>&, so the move won't have any effect in practice.\nThis is due to how the legacy storage links/chains work, where the message is always passed to handlers (as a const ref to the shared_ptr) and the handler returns whether it handled the message after the fact. Since ownership is not known a-priori, moves cannot be done optimistically and using by-value would be too expensive.", "author": "vekterli", "createdAt": "2020-03-23T14:12:46Z", "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "diffHunk": "@@ -252,9 +253,10 @@ IMPL_MSG_COMMAND_H(ExternalOperationHandler, Put)\n \n     auto handle = _mutationSequencer.try_acquire(cmd->getDocumentId());\n     if (allowMutation(handle)) {\n+        document::BucketSpace bucketSpace = cmd->getBucket().getBucketSpace();\n         _op = std::make_shared<PutOperation>(*this,\n-                                             _bucketSpaceRepo.get(cmd->getBucket().getBucketSpace()),\n-                                             cmd, getMetrics().puts[cmd->getLoadType()], std::move(handle));\n+                                             _bucketSpaceRepo.get(bucketSpace),\n+                                             std::move(cmd), getMetrics().puts[loadType], std::move(handle));", "originalCommit": "42a981b2ced76876252c48e9109bbc7d39a77b50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUzMjgxOA==", "url": "https://github.com/vespa-engine/vespa/pull/12669#discussion_r396532818", "bodyText": "Yes, I figured that out. I just wanted to pull it as far out as possible, so when code is rewritten it will work optimal :)\nAt least one move into the PendingTrackerImpl takes effect.", "author": "baldersheim", "createdAt": "2020-03-23T15:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4MDIxOQ=="}], "type": "inlineReview"}]}