{"pr_number": 15819, "pr_title": "- Wire in the guard to make it evident that we have it when making ch\u2026", "pr_createdAt": "2020-12-15T13:27:32Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15819", "timeline": [{"oid": "37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "url": "https://github.com/vespa-engine/vespa/commit/37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "message": "- Wire in the guard to make it evident that we have it when making changes that require it.\n- Clean up some old members and code not used any more.", "committedDate": "2020-12-15T13:13:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5NzQ0MA==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543397440", "bodyText": "Should this be !g.owns(_waiter) instead ?", "author": "geirst", "createdAt": "2020-12-15T14:33:11Z", "path": "metrics/src/vespa/metrics/metricmanager.cpp", "diffHunk": "@@ -32,7 +32,7 @@ MetricManager::Timer::getTime() const {\n \n void\n MetricManager::assertMetricLockLocked(const MetricLockGuard& g) const {\n-    if ((g.mutex() != &_waiter) || !g.owns_lock()) {\n+    if (g.owns(_waiter)) {", "originalCommit": "37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMTI1MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543421251", "bodyText": "Agreed, this looks like an error in the PR.", "author": "toregge", "createdAt": "2020-12-15T15:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5NzQ0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzOTcwMg==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543439702", "bodyText": "Good catch. The effect of -1 * -1 = 1.\nFixed", "author": "baldersheim", "createdAt": "2020-12-15T15:22:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5NzQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNDAxNA==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543404014", "bodyText": "Why is this removed?", "author": "geirst", "createdAt": "2020-12-15T14:41:11Z", "path": "searchcore/src/vespa/searchcore/proton/server/documentdb.h", "diffHunk": "@@ -114,7 +97,6 @@ class DocumentDB : public DocumentDBConfigOwner,\n     mutable std::condition_variable _configCV;\n     DocumentDBConfig::SP          _activeConfigSnapshot;\n     int64_t                       _activeConfigSnapshotGeneration;\n-    SerialNum                     _activeConfigSnapshotSerialNum;", "originalCommit": "37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MTU0OQ==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543441549", "bodyText": "It was not used. It was set, but never used. I think it leftovers from when @toregge rewrote how we do TLS replay.", "author": "baldersheim", "createdAt": "2020-12-15T15:24:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNDAxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNDMxMQ==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543404311", "bodyText": "Why is this removed?", "author": "geirst", "createdAt": "2020-12-15T14:41:31Z", "path": "searchcore/src/vespa/searchcore/proton/server/proton.cpp", "diffHunk": "@@ -219,7 +232,6 @@ Proton::Proton(const config::ConfigUri & configUri,\n       _threadPool(128 * 1024),\n       _distributionKey(-1),\n       _isInitializing(true),\n-      _isReplayDone(false),", "originalCommit": "37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MDQ1Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543440456", "bodyText": "It was not used. It was set, but never used.", "author": "baldersheim", "createdAt": "2020-12-15T15:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNDMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNzkyMA==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543407920", "bodyText": "Should this be && _guard.owns_lock(); instead?", "author": "geirst", "createdAt": "2020-12-15T14:45:49Z", "path": "metrics/src/vespa/metrics/updatehook.cpp", "diffHunk": "@@ -0,0 +1,18 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"updatehook.h\"\n+\n+namespace metrics {\n+\n+MetricLockGuard::MetricLockGuard(std::mutex & mutex)\n+    : _guard(mutex)\n+{}\n+\n+bool\n+MetricLockGuard::owns(const std::mutex & mutex) const {\n+    return (_guard.mutex() == &mutex) && !_guard.owns_lock();", "originalCommit": "37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMDg2Mw==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543420863", "bodyText": "Agreed, this looks like an error in the PR.", "author": "toregge", "createdAt": "2020-12-15T15:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNzkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MjUzOA==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543442538", "bodyText": "Yes, 2 bugs cancelling each other causing the tests to still pass.", "author": "baldersheim", "createdAt": "2020-12-15T15:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNzkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwOTgyMg==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543409822", "bodyText": "Why is this removed?", "author": "geirst", "createdAt": "2020-12-15T14:47:51Z", "path": "searchcore/src/vespa/searchcore/proton/server/documentdb.cpp", "diffHunk": "@@ -222,16 +235,14 @@ void DocumentDB::registerReference()\n     }\n }\n \n-void DocumentDB::setActiveConfig(const DocumentDBConfig::SP &config,\n-                                 SerialNum serialNum, int64_t generation) {\n+void DocumentDB::setActiveConfig(const DocumentDBConfig::SP &config, int64_t generation) {\n     lock_guard guard(_configMutex);\n     registerReference();\n     _activeConfigSnapshot = config;\n     assert(generation >= config->getGeneration());\n     if (_activeConfigSnapshotGeneration < generation) {\n         _activeConfigSnapshotGeneration = generation;\n     }\n-    _activeConfigSnapshotSerialNum = serialNum;", "originalCommit": "37be7b1516dcd42bfd34b6f9ffbe3896959717eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxOTU1OA==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543419558", "bodyText": "Some compilers warn about private member variables that appears to be unused. The variable is never read by the C++\ncode, so the only use might be indirectly (e.g. when inspecting core dumps).", "author": "toregge", "createdAt": "2020-12-15T14:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwOTgyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NTM5MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15819#discussion_r543445391", "bodyText": "I think that having variables around for future possible coredumps is not a good pattern.", "author": "baldersheim", "createdAt": "2020-12-15T15:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwOTgyMg=="}], "type": "inlineReview"}, {"oid": "dda9a7c020ae24e18b6f7701477b95541cbca109", "url": "https://github.com/vespa-engine/vespa/commit/dda9a7c020ae24e18b6f7701477b95541cbca109", "message": "Fix the MetricLockGuard::owns and its use to match the intention.", "committedDate": "2020-12-15T15:30:08Z", "type": "commit"}]}