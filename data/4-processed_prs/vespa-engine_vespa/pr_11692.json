{"pr_number": 11692, "pr_title": "std::chrono::system_clock and std::chrono::steady_clock might have different duration types.", "pr_createdAt": "2020-01-07T23:21:50Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11692", "timeline": [{"oid": "03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "url": "https://github.com/vespa-engine/vespa/commit/03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "message": "system_time and steady_time might have different duration types.", "committedDate": "2020-01-07T23:15:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4ODI2OA==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364188268", "bodyText": "I think it would be better to just use the default constructor, which does exactly this", "author": "havardpe", "createdAt": "2020-01-08T11:35:30Z", "path": "config/src/tests/trace/trace.cpp", "diffHunk": "@@ -10,7 +10,7 @@ using namespace vespalib::slime;\n \n struct FixedClock : public Clock\n {\n-    FixedClock() : _currentTime(duration::zero()) { }\n+    FixedClock() : _currentTime(vespalib::system_time::duration::zero()) { }", "originalCommit": "03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMjA3MQ==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364202071", "bodyText": "Fixed", "author": "toregge", "createdAt": "2020-01-08T12:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4ODI2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4ODM2Ng==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364188366", "bodyText": "I think it would be better to just use the default constructor, which does exactly this", "author": "havardpe", "createdAt": "2020-01-08T11:35:46Z", "path": "config/src/tests/trace/trace.cpp", "diffHunk": "@@ -57,7 +57,7 @@ TEST(\"that trace can be copied\") {\n     EXPECT_EQUAL(trace.toString(), trace2.toString());\n }\n \n-constexpr vespalib::system_time epoch(duration::zero());\n+constexpr vespalib::system_time epoch(vespalib::system_time::duration::zero());", "originalCommit": "03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMjE4MQ==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364202181", "bodyText": "Fixed", "author": "toregge", "createdAt": "2020-01-08T12:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4ODM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDA5NA==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364194094", "bodyText": "should use default constructor", "author": "havardpe", "createdAt": "2020-01-08T11:51:22Z", "path": "vespalib/src/tests/trace/trace_serialization.cpp", "diffHunk": "@@ -21,7 +21,7 @@ TEST(\"that a single trace node is serialized\") {\n     EXPECT_FALSE(i[\"payload\"].valid());\n }\n \n-constexpr system_time zero_system_time(duration::zero());\n+constexpr system_time zero_system_time(system_time::duration::zero());", "originalCommit": "03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMjI3NA==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364202274", "bodyText": "Fixed", "author": "toregge", "createdAt": "2020-01-08T12:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDA5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDUxNQ==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364194515", "bodyText": "should use default constructor", "author": "havardpe", "createdAt": "2020-01-08T11:52:25Z", "path": "vespalib/src/tests/trace/trace.cpp", "diffHunk": "@@ -334,7 +334,7 @@ TEST(\"testVisiting\")\n     EXPECT_EQUAL(encoder.str, b1.encode());\n }\n \n-constexpr system_time zero(duration::zero());\n+constexpr system_time zero(system_time::duration::zero());", "originalCommit": "03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMjQwMg==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364202402", "bodyText": "Fixed", "author": "toregge", "createdAt": "2020-01-08T12:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDUxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDkyNg==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364194926", "bodyText": "should use default constructor", "author": "havardpe", "createdAt": "2020-01-08T11:53:37Z", "path": "storage/src/tests/visiting/memory_bounded_trace_test.cpp", "diffHunk": "@@ -7,7 +7,7 @@ using namespace ::testing;\n \n namespace storage {\n \n-constexpr vespalib::system_time epoch(vespalib::duration::zero());\n+constexpr vespalib::system_time epoch(vespalib::system_time::duration::zero());", "originalCommit": "03b1d8abecbf7db72845f883bf20c3c9bdf820a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMjQ1OQ==", "url": "https://github.com/vespa-engine/vespa/pull/11692#discussion_r364202459", "bodyText": "Fixed", "author": "toregge", "createdAt": "2020-01-08T12:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDkyNg=="}], "type": "inlineReview"}, {"oid": "8774a881126704a9c68a4ab4e748fec7572b795d", "url": "https://github.com/vespa-engine/vespa/commit/8774a881126704a9c68a4ab4e748fec7572b795d", "message": "Use default constructor for time point when duration since epoch is zero.", "committedDate": "2020-01-08T12:09:14Z", "type": "commit"}]}