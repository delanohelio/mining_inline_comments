{"pr_number": 15291, "pr_title": "Add 32 most significant bits of gid key to key in btree mapping from", "pr_createdAt": "2020-11-11T15:10:14Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15291", "timeline": [{"oid": "97ceb83036383d9f5f02c33a55078b8b40a748c9", "url": "https://github.com/vespa-engine/vespa/commit/97ceb83036383d9f5f02c33a55078b8b40a748c9", "message": "Add 32 most significant bits of gid key to key in btree mapping from\ngid to lid in document meta store to reduce amount of CPU cache misses\nduring lookup.", "committedDate": "2020-11-11T15:03:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2MzcwNw==", "url": "https://github.com/vespa-engine/vespa/pull/15291#discussion_r521463707", "bodyText": "I assume these should just be inlined and noexcept.", "author": "baldersheim", "createdAt": "2020-11-11T16:05:19Z", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/gid_to_lid_map_key.h", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <limits>\n+\n+namespace document { class GlobalId; }\n+\n+namespace proton::documentmetastore {\n+\n+/*\n+ * Class containing lid and the most significant portion of gid according\n+ * to compare functor (document::GlobalId::BucketOrderCmp).\n+ */\n+class GidToLidMapKey {\n+    uint32_t _lid;\n+    uint32_t _gid_key;\n+    static constexpr uint32_t FIND_DOC_ID = std::numeric_limits<uint32_t>::max();\n+\n+public:\n+    GidToLidMapKey();\n+    GidToLidMapKey(uint32_t lid, uint32_t gid_key);\n+    GidToLidMapKey(uint32_t lid, const document::GlobalId &gid);\n+    static GidToLidMapKey make_find_key(const document::GlobalId &gid);", "originalCommit": "97ceb83036383d9f5f02c33a55078b8b40a748c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3MTQyOA==", "url": "https://github.com/vespa-engine/vespa/pull/15291#discussion_r521471428", "bodyText": "Not inlined as not frequently called.", "author": "baldersheim", "createdAt": "2020-11-11T16:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2MzcwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4NzMzMA==", "url": "https://github.com/vespa-engine/vespa/pull/15291#discussion_r522987330", "bodyText": "Consider updating the comment to reflect the new key type.", "author": "geirst", "createdAt": "2020-11-13T14:33:32Z", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.h", "diffHunk": "@@ -60,7 +60,7 @@ class DocumentMetaStore final : public DocumentMetaStoreAttribute,\n     // Lids are stored as keys in the tree, sorted by their gid\n     // counterpart.  The LidGidKeyComparator class maps from lids -> metadata by\n     // using the metadata store.\n-    typedef vespalib::btree::BTree<DocId, vespalib::btree::BTreeNoLeafData,\n+    typedef vespalib::btree::BTree<documentmetastore::GidToLidMapKey, vespalib::btree::BTreeNoLeafData,", "originalCommit": "97ceb83036383d9f5f02c33a55078b8b40a748c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}