{"pr_number": 12706, "pr_title": "Unify the metrics for queuesize similar to what we have for the spi q\u2026", "pr_createdAt": "2020-03-25T11:54:56Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12706", "timeline": [{"oid": "44ec2d74b5e828b7d1f0bc97a315846a3d5051ac", "url": "https://github.com/vespa-engine/vespa/commit/44ec2d74b5e828b7d1f0bc97a315846a3d5051ac", "message": "Unify the metrics for queuesize similar to what we have for the spi queues.", "committedDate": "2020-03-25T11:40:45Z", "type": "commit"}, {"oid": "66c572366b31a9766d68b69e3d7dc20470abb50f", "url": "https://github.com/vespa-engine/vespa/commit/66c572366b31a9766d68b69e3d7dc20470abb50f", "message": "Add metrics to metric set.", "committedDate": "2020-03-25T12:11:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4MDMyMw==", "url": "https://github.com/vespa-engine/vespa/pull/12706#discussion_r397880323", "bodyText": "Consider using auto.", "author": "geirst", "createdAt": "2020-03-25T14:06:11Z", "path": "searchcore/src/vespa/searchcore/proton/metrics/executor_metrics.cpp", "diffHunk": "@@ -7,16 +7,19 @@ namespace proton {\n void\n ExecutorMetrics::update(const vespalib::ThreadStackExecutorBase::Stats &stats)\n {\n-    maxPending.set(stats.maxPendingTasks);\n+    maxPending.set(stats.queueSize.max());\n     accepted.inc(stats.acceptedTasks);\n     rejected.inc(stats.rejectedTasks);\n+    const vespalib::ThreadStackExecutorBase::Stats::QueueSizeT & qSize = stats.queueSize;", "originalCommit": "66c572366b31a9766d68b69e3d7dc20470abb50f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5MDYwMg==", "url": "https://github.com/vespa-engine/vespa/pull/12706#discussion_r398390602", "bodyText": "Fixed in a4f4486", "author": "baldersheim", "createdAt": "2020-03-26T08:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4MDMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4MDYyNg==", "url": "https://github.com/vespa-engine/vespa/pull/12706#discussion_r397880626", "bodyText": "\"size\" -> \"Size\"", "author": "geirst", "createdAt": "2020-03-25T14:06:35Z", "path": "searchcore/src/vespa/searchcore/proton/metrics/executor_metrics.cpp", "diffHunk": "@@ -7,16 +7,19 @@ namespace proton {\n void\n ExecutorMetrics::update(const vespalib::ThreadStackExecutorBase::Stats &stats)\n {\n-    maxPending.set(stats.maxPendingTasks);\n+    maxPending.set(stats.queueSize.max());\n     accepted.inc(stats.acceptedTasks);\n     rejected.inc(stats.rejectedTasks);\n+    const vespalib::ThreadStackExecutorBase::Stats::QueueSizeT & qSize = stats.queueSize;\n+    queueSize.addValueBatch(qSize.average(), qSize.count(), qSize.min(), qSize.max());\n }\n \n ExecutorMetrics::ExecutorMetrics(const std::string &name, metrics::MetricSet *parent)\n     : metrics::MetricSet(name, {}, \"Instance specific thread executor metrics\", parent),\n       maxPending(\"maxpending\", {}, \"Maximum number of pending (active + queued) tasks\", this),\n       accepted(\"accepted\", {}, \"Number of accepted tasks\", this),\n-      rejected(\"rejected\", {}, \"Number of rejected tasks\", this)\n+      rejected(\"rejected\", {}, \"Number of rejected tasks\", this),\n+      queueSize(\"queuesize\", {}, \"size of task queue\", this)", "originalCommit": "66c572366b31a9766d68b69e3d7dc20470abb50f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5MDcwNw==", "url": "https://github.com/vespa-engine/vespa/pull/12706#discussion_r398390707", "bodyText": "Fixed in a4f4486", "author": "baldersheim", "createdAt": "2020-03-26T08:26:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4MDYyNg=="}], "type": "inlineReview"}]}