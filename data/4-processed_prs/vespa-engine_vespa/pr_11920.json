{"pr_number": 11920, "pr_title": "Use atomic sematics for cached number of true bits to ensure visibility.", "pr_createdAt": "2020-01-24T11:03:35Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11920", "timeline": [{"oid": "7de3db5a1548ce595f76a4f817206b0bc663c2e7", "url": "https://github.com/vespa-engine/vespa/commit/7de3db5a1548ce595f76a4f817206b0bc663c2e7", "message": "Use atomic sematics for cached number of true bits to ensure visibility.", "committedDate": "2020-01-24T11:02:42Z", "type": "commit"}, {"oid": "4f94dad8ae0811bd0da6ff6c05c6e17e5049d5c1", "url": "https://github.com/vespa-engine/vespa/commit/4f94dad8ae0811bd0da6ff6c05c6e17e5049d5c1", "message": "Unroll tight loop.", "committedDate": "2020-01-24T11:16:18Z", "type": "commit"}, {"oid": "ec51225758e3c28360f7b03d9f315a1298badeef", "url": "https://github.com/vespa-engine/vespa/commit/ec51225758e3c28360f7b03d9f315a1298badeef", "message": "Count after invalidating.", "committedDate": "2020-01-24T11:26:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MTY2NQ==", "url": "https://github.com/vespa-engine/vespa/pull/11920#discussion_r370591665", "bodyText": "Is incNumBits/decNumBits possibly called from multiple threads concurrently? If not, and if visibility of changes to _numTrueBits are guaranteed between writer threads through other means (mutexes etc), this could be done without requiring explicit atomic bus operations. E.g.\n_numTrueBits.store(_numTrueBits.load(std::memory_order_relaxed) - 1, std::memory_order_relaxed);", "author": "vekterli", "createdAt": "2020-01-24T11:35:55Z", "path": "searchlib/src/vespa/searchlib/common/bitvector.h", "diffHunk": "@@ -285,12 +287,12 @@ class BitVector : protected BitWord\n     void setGuardBit() { setBit(size()); }\n     void incNumBits() {\n         if ( isValidCount() ) {\n-            _numTrueBits++;\n+            _numTrueBits.fetch_add(1, std::memory_order_relaxed);\n         }\n     }\n     void decNumBits() {\n         if ( isValidCount() ) {\n-            _numTrueBits--;\n+            _numTrueBits.fetch_sub(1, std::memory_order_relaxed);", "originalCommit": "ec51225758e3c28360f7b03d9f315a1298badeef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMTcyMw==", "url": "https://github.com/vespa-engine/vespa/pull/11920#discussion_r370631723", "bodyText": "Correct, there is only one writer thread anyway.", "author": "baldersheim", "createdAt": "2020-01-24T13:26:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MTY2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMzAzMw==", "url": "https://github.com/vespa-engine/vespa/pull/11920#discussion_r370633033", "bodyText": "Not very beautiful though....", "author": "baldersheim", "createdAt": "2020-01-24T13:29:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MTY2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5NTUyNA==", "url": "https://github.com/vespa-engine/vespa/pull/11920#discussion_r370595524", "bodyText": "Consider adding load()/store() to these lines where appropriate to make all atomic access explicit (if desired)", "author": "vekterli", "createdAt": "2020-01-24T11:46:53Z", "path": "searchlib/src/vespa/searchlib/common/bitvector.h", "diffHunk": "@@ -189,14 +189,16 @@ class BitVector : protected BitWord\n      * should be called before calling Test/Clear/Flip methods.\n      */\n     void invalidateCachedCount() const {\n-        _numTrueBits = invalidCount();\n+        _numTrueBits.store(invalidCount(), std::memory_order_relaxed);\n     }\n \n     void swap(BitVector & rhs) {\n         std::swap(_words, rhs._words);\n         std::swap(_startOffset, rhs._startOffset);\n         std::swap(_sz, rhs._sz);\n-        std::swap(_numTrueBits, rhs._numTrueBits);\n+        Index tmp = rhs._numTrueBits;\n+        rhs._numTrueBits = _numTrueBits.load();\n+        _numTrueBits = tmp;", "originalCommit": "ec51225758e3c28360f7b03d9f315a1298badeef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzNDYwNw==", "url": "https://github.com/vespa-engine/vespa/pull/11920#discussion_r370634607", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-01-24T13:33:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5NTUyNA=="}], "type": "inlineReview"}, {"oid": "4879730427ce2e2f14e23b2d8a3cac1d0d819a31", "url": "https://github.com/vespa-engine/vespa/commit/4879730427ce2e2f14e23b2d8a3cac1d0d819a31", "message": "Faster atomic operations based on PR review.", "committedDate": "2020-01-24T13:35:13Z", "type": "commit"}]}