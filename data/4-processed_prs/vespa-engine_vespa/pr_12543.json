{"pr_number": 12543, "pr_title": "Do not aggregate header info over multiple calls", "pr_createdAt": "2020-03-12T09:24:02Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/12543", "timeline": [{"oid": "769da18bf47b480e3b0822dd255f5570f56be846", "url": "https://github.com/vespa-engine/vespa/commit/769da18bf47b480e3b0822dd255f5570f56be846", "message": "Do not aggregate header info over multiple calls", "committedDate": "2020-03-12T09:20:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxMTAxMQ==", "url": "https://github.com/vespa-engine/vespa/pull/12543#discussion_r391511011", "bodyText": "why is it better to move it out of the class than to reset it when reading headers? (kind of messes with the API)\n(would not simply changing from += to = solve it?)", "author": "havardpe", "createdAt": "2020-03-12T09:58:44Z", "path": "fbench/src/httpclient/httpclient.h", "diffHunk": "@@ -95,21 +95,20 @@ class HTTPClient\n     vespalib::SocketAddress        _address;\n     vespalib::SyncCryptoSocket::UP _socket;\n \n-  std::string      _hostname;\n-  int              _port;\n-  bool             _keepAlive;\n-  bool             _headerBenchmarkdataCoverage;\n-  std::string      _extraHeaders;\n+  const std::string    _hostname;\n+  int                  _port;\n+  bool                 _keepAlive;\n+  bool                 _headerBenchmarkdataCoverage;\n+  const std::string    _extraHeaders;\n   vespalib::SocketSpec _sni_spec;\n-  std::string      _host_header_value;\n-  uint64_t         _reuseCount;\n+  std::string          _host_header_value;\n+  uint64_t             _reuseCount;\n \n   size_t           _bufsize;\n   char            *_buf;\n   ssize_t          _bufused;\n   ssize_t          _bufpos;\n \n-  std::string      _headerinfo;", "originalCommit": "769da18bf47b480e3b0822dd255f5570f56be846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyMDM1Mg==", "url": "https://github.com/vespa-engine/vespa/pull/12543#discussion_r391620352", "bodyText": "I think it is better to have the compiler enforce actual life being the same as semantic lifetime.", "author": "baldersheim", "createdAt": "2020-03-12T13:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxMTAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyMTQxMw==", "url": "https://github.com/vespa-engine/vespa/pull/12543#discussion_r391621413", "bodyText": "The methods only had internal usage, so I made them private. The the API clarity is not much of a problem. Ideally it should have returned an object.", "author": "baldersheim", "createdAt": "2020-03-12T13:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxMTAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxMTMyNg==", "url": "https://github.com/vespa-engine/vespa/pull/12543#discussion_r391511326", "bodyText": "this seems connected to the headerinfo string somehow...", "author": "havardpe", "createdAt": "2020-03-12T09:59:14Z", "path": "fbench/src/httpclient/httpclient.h", "diffHunk": "@@ -95,21 +95,20 @@ class HTTPClient\n     vespalib::SocketAddress        _address;\n     vespalib::SyncCryptoSocket::UP _socket;\n \n-  std::string      _hostname;\n-  int              _port;\n-  bool             _keepAlive;\n-  bool             _headerBenchmarkdataCoverage;\n-  std::string      _extraHeaders;\n+  const std::string    _hostname;\n+  int                  _port;\n+  bool                 _keepAlive;\n+  bool                 _headerBenchmarkdataCoverage;\n+  const std::string    _extraHeaders;\n   vespalib::SocketSpec _sni_spec;\n-  std::string      _host_header_value;\n-  uint64_t         _reuseCount;\n+  std::string          _host_header_value;\n+  uint64_t             _reuseCount;\n \n   size_t           _bufsize;\n   char            *_buf;\n   ssize_t          _bufused;\n   ssize_t          _bufpos;\n \n-  std::string      _headerinfo;\n   unsigned int     _headerinfoPos;", "originalCommit": "769da18bf47b480e3b0822dd255f5570f56be846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyMDQ3NQ==", "url": "https://github.com/vespa-engine/vespa/pull/12543#discussion_r391620475", "bodyText": "Not used, removed.", "author": "baldersheim", "createdAt": "2020-03-12T13:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxMTMyNg=="}], "type": "inlineReview"}, {"oid": "4a708e447f0f3e6efba7eee387e5558fd5056391", "url": "https://github.com/vespa-engine/vespa/commit/4a708e447f0f3e6efba7eee387e5558fd5056391", "message": "Move parts of interface not needing to be public to private.\nAvoid complicated buffer management from the time when malloc was expensive.", "committedDate": "2020-03-12T13:19:34Z", "type": "commit"}]}