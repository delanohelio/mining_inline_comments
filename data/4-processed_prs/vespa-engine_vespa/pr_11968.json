{"pr_number": 11968, "pr_title": "Allow room for bringing allocation along to reduce the need to copy.", "pr_createdAt": "2020-01-27T15:44:05Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/11968", "timeline": [{"oid": "53cc0b26079e41390588a39553355d34fa368ffc", "url": "https://github.com/vespa-engine/vespa/commit/53cc0b26079e41390588a39553355d34fa368ffc", "message": "Allow room for bringing allocation along to reduce the need to copy.", "committedDate": "2020-01-27T15:39:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyNDIwOA==", "url": "https://github.com/vespa-engine/vespa/pull/11968#discussion_r371324208", "bodyText": "Spurious line break?", "author": "vekterli", "createdAt": "2020-01-27T15:56:05Z", "path": "document/src/vespa/document/serialization/vespadocumentdeserializer.cpp", "diffHunk": "@@ -279,7 +279,8 @@ void readFieldInfo(nbostream& input, SerializableArray::EntryMap & field_info) {\n     for (size_t i = 0; i < field_count; ++i) {\n         const uint32_t id = getInt1_4Bytes(input);\n         const uint32_t size = getInt2_4_8Bytes(input);\n-        field_info.emplace_back(id, size, offset);\n+        field_info.emplace_back(id,\n+                size, offset);", "originalCommit": "53cc0b26079e41390588a39553355d34fa368ffc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM0MDMzMw==", "url": "https://github.com/vespa-engine/vespa/pull/11968#discussion_r371340333", "bodyText": "Fixed", "author": "baldersheim", "createdAt": "2020-01-27T16:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyNDIwOA=="}], "type": "inlineReview"}, {"oid": "13a7ff6e9e96e929cf18774b83909754cf652930", "url": "https://github.com/vespa-engine/vespa/commit/13a7ff6e9e96e929cf18774b83909754cf652930", "message": "Remove spurious line break.", "committedDate": "2020-01-27T16:21:33Z", "type": "commit"}]}