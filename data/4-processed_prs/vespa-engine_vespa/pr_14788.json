{"pr_number": 14788, "pr_title": "add optimization for the simplest dense-only concat case", "pr_createdAt": "2020-10-08T14:17:34Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14788", "timeline": [{"oid": "16d7902bc1fc911d69d82b0e40c3aef54651a299", "url": "https://github.com/vespa-engine/vespa/commit/16d7902bc1fc911d69d82b0e40c3aef54651a299", "message": "add optimization for the simplest dense-only concat case", "committedDate": "2020-10-08T14:12:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3MzQ3MA==", "url": "https://github.com/vespa-engine/vespa/pull/14788#discussion_r501773470", "bodyText": "if you concat a double and a vector of floats, the result type will be float and not double. This issue seems to also be in the generic version, and not tested in the unit test.", "author": "havardpe", "createdAt": "2020-10-08T14:37:16Z", "path": "eval/src/vespa/eval/instruction/generic_concat.cpp", "diffHunk": "@@ -93,8 +94,36 @@ void my_generic_concat_op(State &state, uint64_t param_in) {\n     state.pop_pop_push(result_ref);\n }\n \n+template <typename LCT, typename RCT>\n+void my_dense_simple_concat_op(State &state, uint64_t param_in) {\n+    using OCT = typename eval::UnifyCellTypes<LCT, RCT>::type;", "originalCommit": "16d7902bc1fc911d69d82b0e40c3aef54651a299", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08ca6183f9f5a66ca9a1fe7c3150a4bd6761bd9d", "url": "https://github.com/vespa-engine/vespa/commit/08ca6183f9f5a66ca9a1fe7c3150a4bd6761bd9d", "message": "handle concat(vector of float, double)", "committedDate": "2020-10-08T16:06:20Z", "type": "commit"}]}