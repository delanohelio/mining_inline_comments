{"pr_number": 14615, "pr_title": "Try prepare allocation without locking MERGEOK", "pr_createdAt": "2020-09-29T10:01:10Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/14615", "timeline": [{"oid": "90c8b5c969f16ba7ca0bc64f718a3ad8bdf527ff", "url": "https://github.com/vespa-engine/vespa/commit/90c8b5c969f16ba7ca0bc64f718a3ad8bdf527ff", "message": "Try prepare allocation without locking", "committedDate": "2020-09-29T10:00:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2OTQ0MA==", "url": "https://github.com/vespa-engine/vespa/pull/14615#discussion_r496669440", "bodyText": "Why are nodes removed from surplusActiveNodes - I don't see any nodes are removed in the current/previous code?", "author": "hakonhall", "createdAt": "2020-09-29T12:18:38Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/GroupPreparer.java", "diffHunk": "@@ -59,28 +61,26 @@ public GroupPreparer(NodeRepository nodeRepository,\n                               List<Node> surplusActiveNodes, MutableInteger highestIndex, int wantedGroups) {\n         boolean dynamicProvisioningEnabled = nodeRepository.canProvisionHosts() && nodeRepository.zone().getCloud().dynamicProvisioning();\n         boolean allocateFully = dynamicProvisioningEnabled && preprovisionCapacityFlag.value().isEmpty();\n-        try (Mutex lock = nodeRepository.lock(application)) {\n \n-            // Lock ready pool to ensure that the same nodes are not simultaneously allocated by others\n-            try (Mutex allocationLock = nodeRepository.lockUnallocated()) {\n+        // Try preparing in memory without lock. Most of the time there should be no changes and we can return nodes\n+        // previously allocated.\n+        {\n+            MutableInteger probePrepareHighestIndex = new MutableInteger(highestIndex.get());\n+            NodeAllocation probeAllocation = prepareAllocation(application, cluster, requestedNodes, surplusActiveNodes,\n+                    probePrepareHighestIndex, wantedGroups, allocateFully, PROBE_LOCK);\n+            if (probeAllocation.fulfilledAndNoChanges()) {\n+                List<Node> acceptedNodes = probeAllocation.finalNodes();\n+                surplusActiveNodes.removeAll(acceptedNodes);", "originalCommit": "90c8b5c969f16ba7ca0bc64f718a3ad8bdf527ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MTAxMQ==", "url": "https://github.com/vespa-engine/vespa/pull/14615#discussion_r496671011", "bodyText": "The same thing is done in the existing code, at the end of the method.", "author": "mpolden", "createdAt": "2020-09-29T12:21:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2OTQ0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MTI5Mg==", "url": "https://github.com/vespa-engine/vespa/pull/14615#discussion_r496671292", "bodyText": "Now I see it - never mind", "author": "hakonhall", "createdAt": "2020-09-29T12:21:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2OTQ0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MTMzMg==", "url": "https://github.com/vespa-engine/vespa/pull/14615#discussion_r496671332", "bodyText": "Removed here:\n\n  \n    \n      vespa/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/GroupPreparer.java\n    \n    \n         Line 119\n      in\n      90c8b5c\n    \n    \n    \n    \n\n        \n          \n           surplusActiveNodes.removeAll(acceptedNodes);", "author": "freva", "createdAt": "2020-09-29T12:21:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2OTQ0MA=="}], "type": "inlineReview"}]}