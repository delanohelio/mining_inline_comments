{"pr_number": 4002, "pr_title": "fix an npe and only refresh when changed", "pr_createdAt": "2020-05-02T16:58:30Z", "pr_url": "https://github.com/bndtools/bnd/pull/4002", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNjU2NQ==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419006565", "bodyText": "This changes the code from doing work in the future (when the supplier is called) to doing work now and returning a simple supplier. I assume you mean this change to do the work now? If so, then just return a Set<File>. The caller can check the set for emptyness and do other things including making the simple supplier. Or a the least change to return Optional<Set<File>>. Having a supplier in the return implies it is actually doing something interesting in the future. But with this change, all the interesting work has already been done.", "author": "bjhargrave", "createdAt": "2020-05-02T20:52:11Z", "path": "bndtools.m2e/src/bndtools/m2e/MavenDependenciesRepository.java", "diffHunk": "@@ -24,37 +23,39 @@\n })\n public class MavenDependenciesRepository extends MavenWorkspaceRepository {\n \n-\tprivate final static Logger\t\t\tlogger\t= LoggerFactory.getLogger(MavenDependenciesRepository.class);\n+\tprivate final static Logger\t\t\t\t\tlogger\t\t= LoggerFactory\n+\t\t.getLogger(MavenDependenciesRepository.class);\n+\tprivate final static MavenBndrunContainer\tmbc\t\t\t= new MavenBndrunContainer();\n \n \tprivate final Set<String>\t\t\tallScopes\t= new HashSet<>(\n \t\tArrays.asList(\"compile\", \"provided\", \"runtime\", \"system\", \"test\"));\n-\tprivate final MavenBndrunContainer\tmbc\t\t= new MavenBndrunContainer();\n \n \t@Override\n \tpublic String getName() {\n \t\treturn \"Maven Dependencies\";\n \t}\n \n \t@Override\n-\tSupplier<Set<File>> collect(IMavenProjectFacade projectFacade, IProgressMonitor monitor) {\n-\t\treturn () -> {\n-\t\t\ttry {\n-\t\t\t\tSet<File> files = new HashSet<>();\n-\t\t\t\tMavenProject mavenProject = projectFacade.getMavenProject(monitor);\n-\t\t\t\tBndrunContainer bndrunContainer = mbc.getBndrunContainer(projectFacade, null, true, true, allScopes,\n-\t\t\t\t\tmonitor);\n-\t\t\t\tDependencyResolver dependencyResolver = bndrunContainer.getDependencyResolver(mavenProject);\n-\t\t\t\tfiles.addAll(dependencyResolver.resolve()\n-\t\t\t\t\t.keySet());\n-\n-\t\t\t\tlogger.debug(\"{}: Collected files {} for project {}\", getName(), files, projectFacade.getFullPath());\n-\n-\t\t\t\treturn files;\n-\t\t\t} catch (Exception e) {\n-\t\t\t\tlogger.error(\"{}: Failed to collect files for project {}\", getName(), projectFacade.getFullPath(), e);\n-\t\t\t\treturn Collections.emptySet();\n-\t\t\t}\n-\t\t};\n+\tOptional<Supplier<Set<File>>> collect(IMavenProjectFacade projectFacade, IProgressMonitor monitor) {\n+\t\tlogger.debug(\"{}: Collecting files for project {}\", getName(), projectFacade.getProject());", "originalCommit": "f377485a6c55da39685bd19164a37639bbfb9c60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNzY3Ng==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419107676", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-05-03T13:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNjU2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNjYzMw==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419006633", "bodyText": "Same comment here as above.", "author": "bjhargrave", "createdAt": "2020-05-02T20:52:51Z", "path": "bndtools.m2e/src/bndtools/m2e/MavenWorkspaceRepository.java", "diffHunk": "@@ -358,54 +365,53 @@ private File get(final String bsn, final Version version) throws Exception {\n \t}\n \n \t@Override\n-\tprotected void remove(IProject iProject) {\n+\tprotected boolean remove(IProject iProject) {\n \t\tlogger.debug(\"{}: Removing project {}\", getName(), iProject);\n-\t\tsuper.remove(iProject);\n+\t\treturn super.remove(iProject);\n \t}\n \n-\tSupplier<Set<File>> collect(IMavenProjectFacade projectFacade, IProgressMonitor monitor) {\n-\t\tlogger.debug(\"{}: Adding project {}\", getName(), projectFacade.getProject());\n-\n-\t\treturn () -> {\n-\t\t\ttry {\n-\t\t\t\tSet<File> files = new HashSet<>();\n-\t\t\t\tMavenProject mavenProject = projectFacade.getMavenProject(monitor);\n+\tOptional<Supplier<Set<File>>> collect(IMavenProjectFacade projectFacade, IProgressMonitor monitor) {", "originalCommit": "f377485a6c55da39685bd19164a37639bbfb9c60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNzY4OA==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419107688", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-05-03T13:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNjYzMw=="}], "type": "inlineReview"}, {"oid": "1672933989f3cbf56aa81df868335587b0f2a410", "url": "https://github.com/bndtools/bnd/commit/1672933989f3cbf56aa81df868335587b0f2a410", "message": "bndtools.m2e: only refresh plugins if something is really changed\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-05-03T13:58:09Z", "type": "forcePushed"}, {"oid": "7a58cf4aef6e17167e3633ef21c48be45163cfc5", "url": "https://github.com/bndtools/bnd/commit/7a58cf4aef6e17167e3633ef21c48be45163cfc5", "message": "bndtools.m2e: only refresh plugins if something is really changed\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-05-03T13:58:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwODg5MA==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419108890", "bodyText": "Since you are in a loop here, you probably do not want to potentially set changed from true back to false. So you want something like:\nif (remove(event.getOldMavenProject().getProject())) {\n  changed = true;\n}", "author": "bjhargrave", "createdAt": "2020-05-03T14:09:01Z", "path": "bndtools.m2e/src/bndtools/m2e/MavenWorkspaceRepository.java", "diffHunk": "@@ -177,25 +177,33 @@ public boolean isEmpty() {\n \n \t@Override\n \tpublic void mavenProjectChanged(MavenProjectChangedEvent[] events, IProgressMonitor monitor) {\n+\t\tboolean changed = false;\n+\n \t\tfor (MavenProjectChangedEvent event : ((events != null) ? events : new MavenProjectChangedEvent[0])) {\n \t\t\tKind kind = Kind.get(event);\n \t\t\tlogger.debug(\"{}: mavenProjectChanged({}, {})\", getName(), kind, event.getSource());\n \t\t\tswitch (kind) {\n \t\t\t\tcase ADDED :\n \t\t\t\tcase CHANGED :\n \t\t\t\t\tIMavenProjectFacade projectFacade = event.getMavenProject();\n-\t\t\t\t\tIProject iProject = projectFacade.getProject();\n-\t\t\t\t\tindex(iProject, collect(projectFacade, monitor));\n+\t\t\t\t\tSet<File> collected = collect(projectFacade, monitor);\n+\t\t\t\t\tif (!collected.isEmpty()) {\n+\t\t\t\t\t\tindex(projectFacade.getProject(), collected);\n+\t\t\t\t\t\tchanged = true;\n+\t\t\t\t\t}\n \t\t\t\t\tbreak;\n \t\t\t\tcase REMOVED :\n-\t\t\t\t\tremove(event.getOldMavenProject()\n+\t\t\t\t\tchanged = remove(event", "originalCommit": "7a58cf4aef6e17167e3633ef21c48be45163cfc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwOTg4MQ==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419109881", "bodyText": "Or changed |= remove(....", "author": "bjhargrave", "createdAt": "2020-05-03T14:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwODg5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTExMzk4Ng==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419113986", "bodyText": "I noticed this and was already fixing it :) I actually needed to fix this exact issue in a wider scope.", "author": "rotty3000", "createdAt": "2020-05-03T14:49:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwODg5MA=="}], "type": "inlineReview"}, {"oid": "4739f9ec9c43773c8f35a5a6dd99e8486f4be0c6", "url": "https://github.com/bndtools/bnd/commit/4739f9ec9c43773c8f35a5a6dd99e8486f4be0c6", "message": "bndtoos.m2e: fix npe in implicit repository\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-05-04T12:34:55Z", "type": "commit"}, {"oid": "4e1f2bc7d3b18dc230d4ea1befa3a6d12b57e931", "url": "https://github.com/bndtools/bnd/commit/4e1f2bc7d3b18dc230d4ea1befa3a6d12b57e931", "message": "AbstractIndexingRepository: only update and inform upstream if really changed\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-05-04T12:34:55Z", "type": "commit"}, {"oid": "913b1352caa2931f0b3cdf7572c253723987e996", "url": "https://github.com/bndtools/bnd/commit/913b1352caa2931f0b3cdf7572c253723987e996", "message": "bndtools.m2e: only refresh plugins if something is really changed\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-05-04T12:34:55Z", "type": "commit"}, {"oid": "913b1352caa2931f0b3cdf7572c253723987e996", "url": "https://github.com/bndtools/bnd/commit/913b1352caa2931f0b3cdf7572c253723987e996", "message": "bndtools.m2e: only refresh plugins if something is really changed\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-05-04T12:34:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4NTUwNw==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419485507", "bodyText": "If this class already implements MavenRunListenerHelper, why does it need another helper instance? Is it because you need to call from static methods? Perhaps this class should no longer implement MavenRunListenerHelper?", "author": "bjhargrave", "createdAt": "2020-05-04T14:37:20Z", "path": "bndtools.m2e/src/bndtools/m2e/MavenBndrunContainer.java", "diffHunk": "@@ -41,10 +44,19 @@\n \tprivate static final ProjectRegistryManager\t\t\tprojectManager\t\t\t= MavenPluginActivator.getDefault()\n \t\t.getMavenProjectManagerImpl();\n \n-\tpublic BndrunContainer getBndrunContainer(IMavenProjectFacade projectFacade, MojoExecution mojoExecution,\n+\tprivate static final MavenRunListenerHelper\t\t\thelper\t\t\t\t\t= new MavenRunListenerHelper() {};", "originalCommit": "913b1352caa2931f0b3cdf7572c253723987e996", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwMzkzOQ==", "url": "https://github.com/bndtools/bnd/pull/4002#discussion_r419503939", "bodyText": "It's because the methods are static. Do note that I'm cleaning all this up in a future PR.", "author": "rotty3000", "createdAt": "2020-05-04T15:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4NTUwNw=="}], "type": "inlineReview"}]}