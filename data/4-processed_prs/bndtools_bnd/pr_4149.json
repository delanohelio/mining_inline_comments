{"pr_number": 4149, "pr_title": "analyzer: bnd does not support Setting Package Version information `N\u2026", "pr_createdAt": "2020-06-09T02:57:24Z", "pr_url": "https://github.com/bndtools/bnd/pull/4149", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExODIxNw==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437118217", "bodyText": "I think you also need to filter out empty dirs, no?\n\n  \n    \n      bnd/biz.aQute.bndlib/src/aQute/bnd/osgi/Jar.java\n    \n    \n        Lines 1018 to 1021\n      in\n      6c127ce\n    \n    \n    \n    \n\n        \n          \n           public List<String> getPackages() { \n        \n\n        \n          \n           \tcheck(); \n        \n\n        \n          \n           \treturn MapStream.of(directories) \n        \n\n        \n          \n           \t\t.filterValue(mdir -> Objects.nonNull(mdir) && !mdir.isEmpty()) \n        \n    \n  \n\n\nIt is possible a resource is added which creates a directory and later the resource is removed. This is why getPackages() filters out empty directories.", "author": "bjhargrave", "createdAt": "2020-06-09T03:31:21Z", "path": "biz.aQute.bndlib/src/aQute/bnd/osgi/Analyzer.java", "diffHunk": "@@ -1309,6 +1309,14 @@ private void doNamesection(Jar dot, Manifest manifest) {\n \t\tInstructions instructions = new Instructions(namesection);\n \t\tSet<String> resources = new HashSet<>(dot.getResources()\n \t\t\t.keySet());\n+\t\t// Support package attributes. See\n+\t\t// https://docs.oracle.com/javase/8/docs/technotes/guides/versioning/spec/versioning2.html#wp89936\n+\t\tdot.getDirectories()\n+\t\t\t.keySet()\n+\t\t\t.stream()", "originalCommit": "f54141de21d450512f4446585b95a419ea59f13d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyMjA5MA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437122090", "bodyText": "take note that I just added tests and docs.", "author": "rotty3000", "createdAt": "2020-06-09T03:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExODIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyMjc1MQ==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437122751", "bodyText": "I see your point. I can filter out non-package dirs.", "author": "rotty3000", "createdAt": "2020-06-09T03:52:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExODIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyMzc3Ng==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437123776", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-06-09T03:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExODIxNw=="}], "type": "inlineReview"}, {"oid": "92742d20d24dd96e154d094bfb7c4fd37dade9a6", "url": "https://github.com/bndtools/bnd/commit/92742d20d24dd96e154d094bfb7c4fd37dade9a6", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T03:48:16Z", "type": "forcePushed"}, {"oid": "afbf589cdb140ffe62d9e9d4fed2f9f8d7b79b46", "url": "https://github.com/bndtools/bnd/commit/afbf589cdb140ffe62d9e9d4fed2f9f8d7b79b46", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T03:56:24Z", "type": "forcePushed"}, {"oid": "3605f44e830c46eea470fe37f3b6856baa524232", "url": "https://github.com/bndtools/bnd/commit/3605f44e830c46eea470fe37f3b6856baa524232", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T03:59:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzNjY2OA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437336668", "bodyText": "What about allowing wildcards for packages if the wildcard ends in /? Then you could do -namesection: javax.*/;sealed=true. I can see that you do not want wildcards not ending in slash to apply to package entries. But I also think we should support wildcards ending in slash to apply to matching package entries?", "author": "bjhargrave", "createdAt": "2020-06-09T11:28:36Z", "path": "biz.aQute.bndlib/src/aQute/bnd/osgi/Analyzer.java", "diffHunk": "@@ -1326,8 +1334,13 @@ private void doNamesection(Jar dot, Manifest manifest) {\n \t\t\t\tString path = i.next();\n \t\t\t\t// For each resource\n \n-\t\t\t\tif (instr.getKey()\n-\t\t\t\t\t.matches(path)) {\n+\t\t\t\tInstruction instruction = instr.getKey();\n+\n+\t\t\t\tif (path.endsWith(\"/\") && (!instruction.isLiteral() || !instruction", "originalCommit": "3605f44e830c46eea470fe37f3b6856baa524232", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3NjU2Nw==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437376567", "bodyText": "Yeah this occurred to me as well. I'll make the change.", "author": "rotty3000", "createdAt": "2020-06-09T12:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzNjY2OA=="}], "type": "inlineReview"}, {"oid": "ed7d735a0b345853b58e9d84cae2eb199d10de76", "url": "https://github.com/bndtools/bnd/commit/ed7d735a0b345853b58e9d84cae2eb199d10de76", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T13:36:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNTYyNg==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437435626", "bodyText": "I think the text here needs fixing to allow for wildcards ending in /.", "author": "bjhargrave", "createdAt": "2020-06-09T13:50:29Z", "path": "biz.aQute.bndlib/src/aQute/bnd/help/Syntax.java", "diffHunk": "@@ -558,7 +558,7 @@\n \t\tnew Syntax(NOEE, \"Do not calculate the osgi.ee name space Execution Environment from the class file version.\",\n \t\t\tNOEE + \"=true\", \"true,false\", Verifier.TRUEORFALSEPATTERN),\n \t\tnew Syntax(NAMESECTION,\n-\t\t\t\"Create a name section (second part of manifest) with optional property expansion and addition of custom attributes.\",\n+\t\t\t\"Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. To add a section for a package do not use a wildcard and make sure the path ends with a slash (/). e.g. '-namesection: org/osgi/service/event/;Foo=Bar'\",", "originalCommit": "ed7d735a0b345853b58e9d84cae2eb199d10de76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNzMyNg==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437437326", "bodyText": "This would be a pattern not ending with / (vs. a pattern ending in *).", "author": "bjhargrave", "createdAt": "2020-06-09T13:52:01Z", "path": "docs/_instructions/namesection.md", "diffHunk": "@@ -5,78 +5,73 @@ title: -namesection RESOURCE-SPEC ( ',' RESOURCE-SPEC ) *\n summary:  Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. \n ---\n \n-\t/**\n-\t * Parse the namesection as instructions and then match them against the\n-\t * current set of resources For example:\n-\t * \n-\t * <pre>\n-\t * \t-namesection: *;baz=true, abc/def/bar/X.class=3\n-\t * </pre>\n-\t * \n-\t * The raw value of {@link Constants#NAMESECTION} is used but the values of\n-\t * the attributes are replaced where @ is set to the resource name. This\n-\t * allows macro to operate on the resource\n-\t */\n+Create a name section (second part of manifest) with optional property expansion and addition of custom attributes.\n \n-\tprivate void doNamesection(Jar dot, Manifest manifest) {\n+### Matching\n+The key of the `-namesection` instruction is an _ant style_ glob. And there are two target groups for matching:\n \n-\t\tParameters namesection = parseHeader(getProperties().getProperty(NAMESECTION));\n-\t\tInstructions instructions = new Instructions(namesection);\n-\t\tSet<String> resources = new HashSet<String>(dot.getResources().keySet());\n+* **resources** - the pattern ends with `*` or is an exact match for a resource path", "originalCommit": "ed7d735a0b345853b58e9d84cae2eb199d10de76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NTY5Ng==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437445696", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-06-09T14:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNzMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNzkxMA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437437910", "bodyText": "It is more correct to say not ending with /, right?", "author": "bjhargrave", "createdAt": "2020-06-09T13:52:34Z", "path": "docs/_instructions/namesection.md", "diffHunk": "@@ -5,78 +5,73 @@ title: -namesection RESOURCE-SPEC ( ',' RESOURCE-SPEC ) *\n summary:  Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. \n ---\n \n-\t/**\n-\t * Parse the namesection as instructions and then match them against the\n-\t * current set of resources For example:\n-\t * \n-\t * <pre>\n-\t * \t-namesection: *;baz=true, abc/def/bar/X.class=3\n-\t * </pre>\n-\t * \n-\t * The raw value of {@link Constants#NAMESECTION} is used but the values of\n-\t * the attributes are replaced where @ is set to the resource name. This\n-\t * allows macro to operate on the resource\n-\t */\n+Create a name section (second part of manifest) with optional property expansion and addition of custom attributes.\n \n-\tprivate void doNamesection(Jar dot, Manifest manifest) {\n+### Matching\n+The key of the `-namesection` instruction is an _ant style_ glob. And there are two target groups for matching:\n \n-\t\tParameters namesection = parseHeader(getProperties().getProperty(NAMESECTION));\n-\t\tInstructions instructions = new Instructions(namesection);\n-\t\tSet<String> resources = new HashSet<String>(dot.getResources().keySet());\n+* **resources** - the pattern ends with `*` or is an exact match for a resource path\n+* **packages** - the pattern ends with `/` or is an exact match for a package path \n \n-\t\t//\n-\t\t// For each instruction, iterator over the resources and filter\n-\t\t// them. If a resource matches, it must be removed even if the\n-\t\t// instruction is negative. If positive, add a name section\n-\t\t// to the manifest for the given resource name. Then add all\n-\t\t// attributes from the instruction to that name section.\n-\t\t//\n-\t\tfor (Map.Entry<Instruction,Attrs> instr : instructions.entrySet()) {\n-\t\t\tboolean matched = false;\n+#### Custom attributes\n \n-\t\t\t// For each instruction\n+The goal of named sections is to provide attributes over a specific subset of resources and paths in the jar file. Attributes are specified using the same syntax used elsewhere (such as package attributes). Attributes can contain properties and macros for expansion and replacement.\n \n-\t\t\tfor (Iterator<String> i = resources.iterator(); i.hasNext();) {\n-\t\t\t\tString path = i.next();\n-\t\t\t\t// For each resource\n+Each attribute is processed by bnd and the matching value is passed using the `@` property.\n \n-\t\t\t\tif (instr.getKey().matches(path)) {\n+#### Resources\n+Resources are targeted by using a glob pattern that ends with `*`.", "originalCommit": "ed7d735a0b345853b58e9d84cae2eb199d10de76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NTkxMA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437445910", "bodyText": "sure.", "author": "rotty3000", "createdAt": "2020-06-09T14:00:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNzkxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzOTE1MA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437439150", "bodyText": "I am not sure this is a good example since we have the -digests instruction to do this.", "author": "bjhargrave", "createdAt": "2020-06-09T13:53:36Z", "path": "docs/_instructions/namesection.md", "diffHunk": "@@ -5,78 +5,73 @@ title: -namesection RESOURCE-SPEC ( ',' RESOURCE-SPEC ) *\n summary:  Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. \n ---\n \n-\t/**\n-\t * Parse the namesection as instructions and then match them against the\n-\t * current set of resources For example:\n-\t * \n-\t * <pre>\n-\t * \t-namesection: *;baz=true, abc/def/bar/X.class=3\n-\t * </pre>\n-\t * \n-\t * The raw value of {@link Constants#NAMESECTION} is used but the values of\n-\t * the attributes are replaced where @ is set to the resource name. This\n-\t * allows macro to operate on the resource\n-\t */\n+Create a name section (second part of manifest) with optional property expansion and addition of custom attributes.\n \n-\tprivate void doNamesection(Jar dot, Manifest manifest) {\n+### Matching\n+The key of the `-namesection` instruction is an _ant style_ glob. And there are two target groups for matching:\n \n-\t\tParameters namesection = parseHeader(getProperties().getProperty(NAMESECTION));\n-\t\tInstructions instructions = new Instructions(namesection);\n-\t\tSet<String> resources = new HashSet<String>(dot.getResources().keySet());\n+* **resources** - the pattern ends with `*` or is an exact match for a resource path\n+* **packages** - the pattern ends with `/` or is an exact match for a package path \n \n-\t\t//\n-\t\t// For each instruction, iterator over the resources and filter\n-\t\t// them. If a resource matches, it must be removed even if the\n-\t\t// instruction is negative. If positive, add a name section\n-\t\t// to the manifest for the given resource name. Then add all\n-\t\t// attributes from the instruction to that name section.\n-\t\t//\n-\t\tfor (Map.Entry<Instruction,Attrs> instr : instructions.entrySet()) {\n-\t\t\tboolean matched = false;\n+#### Custom attributes\n \n-\t\t\t// For each instruction\n+The goal of named sections is to provide attributes over a specific subset of resources and paths in the jar file. Attributes are specified using the same syntax used elsewhere (such as package attributes). Attributes can contain properties and macros for expansion and replacement.\n \n-\t\t\tfor (Iterator<String> i = resources.iterator(); i.hasNext();) {\n-\t\t\t\tString path = i.next();\n-\t\t\t\t// For each resource\n+Each attribute is processed by bnd and the matching value is passed using the `@` property.\n \n-\t\t\t\tif (instr.getKey().matches(path)) {\n+#### Resources\n+Resources are targeted by using a glob pattern that ends with `*`.\n \n-\t\t\t\t\t// Instruction matches the resource\n+For example, the following instruction produces digests for matching resources:\n \n-\t\t\t\t\tmatched = true;\n-\t\t\t\t\tif (!instr.getKey().isNegated()) {\n+```properties\n+-namesection: org/osgi/service/event/*;\\", "originalCommit": "ed7d735a0b345853b58e9d84cae2eb199d10de76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0OTUzMg==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437449532", "bodyText": "Suggestions?", "author": "rotty3000", "createdAt": "2020-06-09T14:05:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzOTE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NjQ2NA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437456464", "bodyText": "-namesection: com/foo/*.png; Content-Type=image/png", "author": "bjhargrave", "createdAt": "2020-06-09T14:14:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzOTE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2MDg3OQ==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437460879", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-06-09T14:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzOTE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0MDYxMA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437440610", "bodyText": "Delete this line.", "author": "bjhargrave", "createdAt": "2020-06-09T13:55:01Z", "path": "docs/_instructions/namesection.md", "diffHunk": "@@ -5,78 +5,73 @@ title: -namesection RESOURCE-SPEC ( ',' RESOURCE-SPEC ) *\n summary:  Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. \n ---\n \n-\t/**\n-\t * Parse the namesection as instructions and then match them against the\n-\t * current set of resources For example:\n-\t * \n-\t * <pre>\n-\t * \t-namesection: *;baz=true, abc/def/bar/X.class=3\n-\t * </pre>\n-\t * \n-\t * The raw value of {@link Constants#NAMESECTION} is used but the values of\n-\t * the attributes are replaced where @ is set to the resource name. This\n-\t * allows macro to operate on the resource\n-\t */\n+Create a name section (second part of manifest) with optional property expansion and addition of custom attributes.\n \n-\tprivate void doNamesection(Jar dot, Manifest manifest) {\n+### Matching\n+The key of the `-namesection` instruction is an _ant style_ glob. And there are two target groups for matching:\n \n-\t\tParameters namesection = parseHeader(getProperties().getProperty(NAMESECTION));\n-\t\tInstructions instructions = new Instructions(namesection);\n-\t\tSet<String> resources = new HashSet<String>(dot.getResources().keySet());\n+* **resources** - the pattern ends with `*` or is an exact match for a resource path\n+* **packages** - the pattern ends with `/` or is an exact match for a package path \n \n-\t\t//\n-\t\t// For each instruction, iterator over the resources and filter\n-\t\t// them. If a resource matches, it must be removed even if the\n-\t\t// instruction is negative. If positive, add a name section\n-\t\t// to the manifest for the given resource name. Then add all\n-\t\t// attributes from the instruction to that name section.\n-\t\t//\n-\t\tfor (Map.Entry<Instruction,Attrs> instr : instructions.entrySet()) {\n-\t\t\tboolean matched = false;\n+#### Custom attributes\n \n-\t\t\t// For each instruction\n+The goal of named sections is to provide attributes over a specific subset of resources and paths in the jar file. Attributes are specified using the same syntax used elsewhere (such as package attributes). Attributes can contain properties and macros for expansion and replacement.\n \n-\t\t\tfor (Iterator<String> i = resources.iterator(); i.hasNext();) {\n-\t\t\t\tString path = i.next();\n-\t\t\t\t// For each resource\n+Each attribute is processed by bnd and the matching value is passed using the `@` property.\n \n-\t\t\t\tif (instr.getKey().matches(path)) {\n+#### Resources\n+Resources are targeted by using a glob pattern that ends with `*`.\n \n-\t\t\t\t\t// Instruction matches the resource\n+For example, the following instruction produces digests for matching resources:\n \n-\t\t\t\t\tmatched = true;\n-\t\t\t\t\tif (!instr.getKey().isNegated()) {\n+```properties\n+-namesection: org/osgi/service/event/*;\\\n+  MD5='${md5;${@}}';\\\n+  SHA1='${sha1;${@}}';\\\n+  MD5H='${md5;${@};hex}'\n+```\n \n-\t\t\t\t\t\t// Positive match, add the attributes\n+This produces a result like the following:\n+```properties\n+Name: org/osgi/service/event/EventAdmin.class\n+SHA1: VUlCR6XEdx8Nam/gYt26B7qLBJg=\n+MD5-Digest: tgtTuUr5bvkfpzvUs8feAg==\n+SHA1-Digest: VUlCR6XEdx8Nam/gYt26B7qLBJg=\n+MD5H: B60B53B94AF96EF91FA73BD4B3C7DE02\n+MD5: tgtTuUr5bvkfpzvUs8feAg==\n \n-\t\t\t\t\t\tAttributes attrs = manifest.getAttributes(path);\n-\t\t\t\t\t\tif (attrs == null) {\n-\t\t\t\t\t\t\tattrs = new Attributes();\n-\t\t\t\t\t\t\tmanifest.getEntries().put(path, attrs);\n-\t\t\t\t\t\t}\n+Name: org/osgi/service/event/TopicPermissionCollection.class\n+SHA1: Vzo2egiTA/8Ya4X7WI8PIgXCcnw=\n+MD5-Digest: l7D6gP+wRAizSBoVwezrsg==\n+SHA1-Digest: Vzo2egiTA/8Ya4X7WI8PIgXCcnw=\n+MD5H: 97B0FA80FFB04408B3481A15C1ECEBB2\n+MD5: l7D6gP+wRAizSBoVwezrsg==\n+...\n+```\n \n-\t\t\t\t\t\t//\n-\t\t\t\t\t\t// Add all the properties from the instruction to the\n-\t\t\t\t\t\t// name section\n-\t\t\t\t\t\t//\n+#### Packages\n+Packages are targeted by using a glob pattern that ends with `/`.\n \n-\t\t\t\t\t\tfor (Map.Entry<String,String> property : instr.getValue().entrySet()) {\n-\t\t\t\t\t\t\tsetProperty(\"@\", path);\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tString processed = getReplacer().process(property.getValue());\n-\t\t\t\t\t\t\t\tattrs.putValue(property.getKey(), processed);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tfinally {\n-\t\t\t\t\t\t\t\tunsetProperty(\"@\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\ti.remove();\n-\t\t\t\t}\n-\t\t\t}\n+For example, to produce a Java [Package Version Information](https://docs.oracle.com/javase/tutorial/deployment/jar/packageman.html) section use an instruction like this one:\n+```properties\n+-namesection: jakarta/annotation/*/;\\\n+\tSpecification-Title=Jakarta Annotations;\\\n+\tSpecification-Version=${annotation.spec.version};\\\n+\tSpecification-Vendor=Eclipse Foundation;\\\n+\tImplementation-Title=jakarta.annotation;\\\n+\tImplementation-Version=${annotation.spec.version}.${annotation.revision};\\\n+\tImplementation-Vendor=Apache Software Foundation\n+```\n \n-\t\t\tif (!matched && resources.size() > 0)\n-\t\t\t\twarning(\"The instruction %s in %s did not match any resources\", instr.getKey(), NAMESECTION);\n-\t\t}\n+This produces a result like the following:\n+```properties\n+Name: jakarta/annotation/\n+Implementation-Title: jakarta.annotation\n+Implementation-Vendor: Apache Software Foundation\n+Implementation-Version: 2.0.0-M1\n+Specification-Title: Jakarta Annotations\n+Specification-Vendor: Eclipse Foundation\n+Specification-Version: 2.0\n+...", "originalCommit": "ed7d735a0b345853b58e9d84cae2eb199d10de76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f2aca385e1a56fe2d97f7020abfcbf69d79eab02", "url": "https://github.com/bndtools/bnd/commit/f2aca385e1a56fe2d97f7020abfcbf69d79eab02", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T14:00:13Z", "type": "forcePushed"}, {"oid": "1d1f2c0e591a2d79db3ed10ee6c2c5b45343fae3", "url": "https://github.com/bndtools/bnd/commit/1d1f2c0e591a2d79db3ed10ee6c2c5b45343fae3", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T14:05:11Z", "type": "forcePushed"}, {"oid": "570e01e04dec77e4b22f9dd71f3a59a4b621286f", "url": "https://github.com/bndtools/bnd/commit/570e01e04dec77e4b22f9dd71f3a59a4b621286f", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T14:05:59Z", "type": "forcePushed"}, {"oid": "f97fc2084025af28ad9d218c7942066b24ac0023", "url": "https://github.com/bndtools/bnd/commit/f97fc2084025af28ad9d218c7942066b24ac0023", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T14:20:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2MzY2MQ==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437463661", "bodyText": ":-) Now I will be pedantic and say this would be Content-Type: image/png", "author": "bjhargrave", "createdAt": "2020-06-09T14:24:12Z", "path": "docs/_instructions/namesection.md", "diffHunk": "@@ -2,81 +2,63 @@\n layout: default\n class: Builder\n title: -namesection RESOURCE-SPEC ( ',' RESOURCE-SPEC ) *   \n-summary:  Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. \n+summary:  Create a name section (second part of manifest) with optional property expansion and addition of custom attributes. Patterns not ending with \\\"/\\\" target resources. Those ending with \\\"/\\\" target packages. \n ---\n \n-\t/**\n-\t * Parse the namesection as instructions and then match them against the\n-\t * current set of resources For example:\n-\t * \n-\t * <pre>\n-\t * \t-namesection: *;baz=true, abc/def/bar/X.class=3\n-\t * </pre>\n-\t * \n-\t * The raw value of {@link Constants#NAMESECTION} is used but the values of\n-\t * the attributes are replaced where @ is set to the resource name. This\n-\t * allows macro to operate on the resource\n-\t */\n+Create a name section (second part of manifest) with optional property expansion and addition of custom attributes.\n \n-\tprivate void doNamesection(Jar dot, Manifest manifest) {\n+### Matching\n+The key of the `-namesection` instruction is an _ant style_ glob. And there are two target groups for matching:\n \n-\t\tParameters namesection = parseHeader(getProperties().getProperty(NAMESECTION));\n-\t\tInstructions instructions = new Instructions(namesection);\n-\t\tSet<String> resources = new HashSet<String>(dot.getResources().keySet());\n+* **resources** - the pattern not ending with `/` or is an exact match for a resource path\n+* **packages** - the pattern ends with `/` or is an exact match for a package path \n \n-\t\t//\n-\t\t// For each instruction, iterator over the resources and filter\n-\t\t// them. If a resource matches, it must be removed even if the\n-\t\t// instruction is negative. If positive, add a name section\n-\t\t// to the manifest for the given resource name. Then add all\n-\t\t// attributes from the instruction to that name section.\n-\t\t//\n-\t\tfor (Map.Entry<Instruction,Attrs> instr : instructions.entrySet()) {\n-\t\t\tboolean matched = false;\n+#### Custom attributes\n \n-\t\t\t// For each instruction\n+The goal of named sections is to provide attributes over a specific subset of resources and paths in the jar file. Attributes are specified using the same syntax used elsewhere (such as package attributes). Attributes can contain properties and macros for expansion and replacement.\n \n-\t\t\tfor (Iterator<String> i = resources.iterator(); i.hasNext();) {\n-\t\t\t\tString path = i.next();\n-\t\t\t\t// For each resource\n+Each attribute is processed by bnd and the matching value is passed using the `@` property.\n \n-\t\t\t\tif (instr.getKey().matches(path)) {\n+#### Resources\n+Resources are targeted by using a glob pattern not ending with `/`.\n \n-\t\t\t\t\t// Instruction matches the resource\n+For example, the following instruction sets the content type attribute for `png` files:\n \n-\t\t\t\t\tmatched = true;\n-\t\t\t\t\tif (!instr.getKey().isNegated()) {\n+```properties\n+-namesection: com/foo/*.png; Content-Type=image/png\n+```\n \n-\t\t\t\t\t\t// Positive match, add the attributes\n+This produces a result like the following:\n+```properties\n+Name: org/foo/icon_12x12.png\n+Content-Type=image/png\n \n-\t\t\t\t\t\tAttributes attrs = manifest.getAttributes(path);\n-\t\t\t\t\t\tif (attrs == null) {\n-\t\t\t\t\t\t\tattrs = new Attributes();\n-\t\t\t\t\t\t\tmanifest.getEntries().put(path, attrs);\n-\t\t\t\t\t\t}\n+Name: org/foo/icon_48x48.png\n+Content-Type=image/png", "originalCommit": "f97fc2084025af28ad9d218c7942066b24ac0023", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2NTM5OA==", "url": "https://github.com/bndtools/bnd/pull/4149#discussion_r437465398", "bodyText": "fixed", "author": "rotty3000", "createdAt": "2020-06-09T14:26:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2MzY2MQ=="}], "type": "inlineReview"}, {"oid": "850dd8df834437d7392ceb72cacfd17907b38540", "url": "https://github.com/bndtools/bnd/commit/850dd8df834437d7392ceb72cacfd17907b38540", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T14:26:05Z", "type": "commit"}, {"oid": "850dd8df834437d7392ceb72cacfd17907b38540", "url": "https://github.com/bndtools/bnd/commit/850dd8df834437d7392ceb72cacfd17907b38540", "message": "analyzer: bnd does not support Setting Package Version information `Name` sections in the manifest\n\nfixes #4148\n\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>", "committedDate": "2020-06-09T14:26:05Z", "type": "forcePushed"}]}