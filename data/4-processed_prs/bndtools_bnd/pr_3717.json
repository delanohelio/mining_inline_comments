{"pr_number": 3717, "pr_title": "[tester] OSGiJUnitLaunchDelegate to handle restarting tester bundle", "pr_createdAt": "2020-01-16T06:18:49Z", "pr_url": "https://github.com/bndtools/bnd/pull/3717", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5ODAxNw==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r368198017", "bodyText": "So the only way out of this loop is throwing an exception? That seems like poor flow control.", "author": "bjhargrave", "createdAt": "2020-01-18T01:55:10Z", "path": "bndtools.core/src/bndtools/launch/OSGiJUnitLaunchDelegate.java", "diffHunk": "@@ -197,12 +197,14 @@ public void run() {\n \t\t\ttry {\n \t\t\t\tlistener = new ServerSocket(port);\n \n-\t\t\t\tsocket = listener.accept();\n-\t\t\t\toutStr = new DataOutputStream(socket.getOutputStream());\n-\t\t\t\twhile (socket.getInputStream()\n-\t\t\t\t\t.read() != -1) {\n-\t\t\t\t\ttestRunSession = new TestRunSessionAndPort(launch, project);\n-\t\t\t\t\toutStr.writeInt(testRunSession.getPort());\n+\t\t\t\twhile (true) {", "originalCommit": "52b24a7d782f2afc65090b30ab1c186b83a82073", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyMzE0NQ==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r368223145", "bodyText": "The loop spends the idle time in the call to accept(), which blocks until it receives an incoming connection attempt. The only way (that I have found) to interrupt it is by closing the socket from another thread, which causes accept() to throw a SocketException. If you know a better way, I'm all ears!", "author": "kriegfrj", "createdAt": "2020-01-18T11:57:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5ODAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3MTc0NA==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r368571744", "bodyText": "In the current code, it waits at the accept, then enters the read loop until the socket is closed and then exits the thread. In your change, it never, ever exits the thread. It just loops back up again. There is no control mechanism to tell this thread it is done and should exit. This makes this class generate threads which are stuck waiting on a server socket.", "author": "bjhargrave", "createdAt": "2020-01-20T14:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5ODAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc4MzEyNg==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r368783126", "bodyText": "Sorry, I may not have been clear. When I said \"the only way to interrupt [accept()] is by closing the [server] socket from another thread\", I should have perhaps noted that this mechanism was already in place. This code should not leave any threads behind stuck waiting on a server socket.\nZombie threads were still a potential problem that needed to be handled even in the old code, because it would still wait at the accept() until the first connection attempt was made - a zombie thread could still arise if that first connection attempt never came.\nThe fix was to call close() on the server socket at termination time:\n\n  \n    \n      bnd/bndtools.core/src/bndtools/launch/OSGiJUnitLaunchDelegate.java\n    \n    \n         Line 219\n      in\n      5905abe\n    \n    \n    \n    \n\n        \n          \n           IO.close(socket); \n        \n    \n  \n\n\n\n  \n    \n      bnd/bndtools.core/src/bndtools/launch/OSGiJUnitLaunchDelegate.java\n    \n    \n        Lines 245 to 246\n      in\n      5905abe\n    \n    \n    \n    \n\n        \n          \n           DebugPlugin.getDefault() \n        \n\n        \n          \n           \t.addDebugEventListener(new TerminationListener(launch, () -> controlThread.close())); \n        \n    \n  \n\n\nThis in turn causes the accept() call in the background thread to throw a SocketException, which exits the loop and allows the thread to die naturally.\nThe same mechanism still works in the new implementation. You can verify that this is the case by running a test - when the app-under-test exits, you should see this log message in your log:\n\n  \n    \n      bnd/bndtools.core/src/bndtools/launch/OSGiJUnitLaunchDelegate.java\n    \n    \n        Lines 207 to 208\n      in\n      5905abe\n    \n    \n    \n    \n\n        \n          \n           } catch (SocketException se) { \n        \n\n        \n          \n           \tlogger.logInfo(\"Connection to tester terminated\", se);", "author": "kriegfrj", "createdAt": "2020-01-21T02:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5ODAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzMjAwNQ==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r369232005", "bodyText": "So this only applies to rerunIDE mode for tester.junit-platform?", "author": "bjhargrave", "createdAt": "2020-01-21T20:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5ODAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMyOTEzNA==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r369329134", "bodyText": "Yes.\nIt also occurred to me if that if the loop's control flow is not immediately obvious to someone with your experience then a little commentary might be in order. I'll add some comments.", "author": "kriegfrj", "createdAt": "2020-01-22T01:21:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5ODAxNw=="}], "type": "inlineReview"}, {"oid": "1c164edb558ff5163b9511400a6a49045cb319c4", "url": "https://github.com/bndtools/bnd/commit/1c164edb558ff5163b9511400a6a49045cb319c4", "message": "[tester] OSGiJUnitLaunchDelegate to handle restarting tester bundle\n\nImplements #3528\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-01-22T01:41:30Z", "type": "commit"}, {"oid": "251a7facaa464557e42c4b239710f30e0071b71d", "url": "https://github.com/bndtools/bnd/commit/251a7facaa464557e42c4b239710f30e0071b71d", "message": "[bndtools tester] Init ControlThread.listener in constructor\n\nThis allows error reporting for initialisation to be separated from runtime errors for more informative reporting.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-01-22T02:55:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5NjkzNQ==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r369596935", "bodyText": "You also need to delete the port variable since it is no longer used. Also make listener, launch, and project variables final. The other variables should be volatile since they are written by one thread (run method) and read by another thread (close method).", "author": "bjhargrave", "createdAt": "2020-01-22T14:38:03Z", "path": "bndtools.core/src/bndtools/launch/OSGiJUnitLaunchDelegate.java", "diffHunk": "@@ -186,29 +186,36 @@ public void stopTestRun() {\n \t\tint\t\t\t\t\t\tport;\n \t\tDataOutputStream\t\toutStr;\n \n-\t\tpublic ControlThread(ILaunch launch, IJavaProject project, int port) {\n+\t\tpublic ControlThread(ILaunch launch, IJavaProject project, int port) throws IOException {\n \t\t\tthis.launch = launch;\n \t\t\tthis.project = project;\n-\t\t\tthis.port = port;\n+\t\t\tlistener = new ServerSocket(port);", "originalCommit": "251a7facaa464557e42c4b239710f30e0071b71d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzMjY0Mg==", "url": "https://github.com/bndtools/bnd/pull/3717#discussion_r369932642", "bodyText": "Done, done and done. I made the second two changes in a separate commit as they fix a separate issue. I also put a lock around the attempt to close testRunSession to avoid a race condition that could cause an NPE.", "author": "kriegfrj", "createdAt": "2020-01-23T05:06:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5NjkzNQ=="}], "type": "inlineReview"}, {"oid": "b2739bd4a98c3681715f7097cf35541a4b3d2bc3", "url": "https://github.com/bndtools/bnd/commit/b2739bd4a98c3681715f7097cf35541a4b3d2bc3", "message": "[bndtools tester] Init ControlThread.listener in constructor\n\nThis allows error reporting for initialisation to be separated from runtime errors for more informative reporting.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-01-23T04:11:01Z", "type": "commit"}, {"oid": "94a6f32c21c053f7479fbfc3ac40b5a82463e418", "url": "https://github.com/bndtools/bnd/commit/94a6f32c21c053f7479fbfc3ac40b5a82463e418", "message": "[bndtools tester] Improve thread safety of tester delegate\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-01-23T05:02:55Z", "type": "commit"}, {"oid": "94a6f32c21c053f7479fbfc3ac40b5a82463e418", "url": "https://github.com/bndtools/bnd/commit/94a6f32c21c053f7479fbfc3ac40b5a82463e418", "message": "[bndtools tester] Improve thread safety of tester delegate\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-01-23T05:02:55Z", "type": "forcePushed"}]}