{"pr_number": 402, "pr_title": "Missing roundabout 2run", "pr_createdAt": "2020-10-27T01:00:26Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/402", "timeline": [{"oid": "ed33bef1072d62b1813b6722293c06b5682df380", "url": "https://github.com/osmlab/atlas-checks/commit/ed33bef1072d62b1813b6722293c06b5682df380", "message": "add taggable filter for pedestrian and private access ways", "committedDate": "2020-10-19T18:10:20Z", "type": "commit"}, {"oid": "8eed336a877d0c009c08b0948872a560ba1dd550", "url": "https://github.com/osmlab/atlas-checks/commit/8eed336a877d0c009c08b0948872a560ba1dd550", "message": "missing roundabout 2nd version draft", "committedDate": "2020-10-26T17:53:08Z", "type": "commit"}, {"oid": "476dbe9d115446308c05c5d991d9aa6624a02377", "url": "https://github.com/osmlab/atlas-checks/commit/476dbe9d115446308c05c5d991d9aa6624a02377", "message": "missing roundabout 2nd version final version", "committedDate": "2020-10-27T00:31:50Z", "type": "commit"}, {"oid": "bf9976a3d45626fa5f2ff1b8b1c353a6e5d9be86", "url": "https://github.com/osmlab/atlas-checks/commit/bf9976a3d45626fa5f2ff1b8b1c353a6e5d9be86", "message": "missing roundabout 2nd version final version (checkStyle)", "committedDate": "2020-10-27T00:42:38Z", "type": "commit"}, {"oid": "f1cefb62a07fda93cb589a58ebb95def5dc20c03", "url": "https://github.com/osmlab/atlas-checks/commit/f1cefb62a07fda93cb589a58ebb95def5dc20c03", "message": "missing roundabout 2nd version final version (arrangement)", "committedDate": "2020-10-27T00:50:42Z", "type": "commit"}, {"oid": "673e6fcc905c32df9c0c4606fdff52e5195afa93", "url": "https://github.com/osmlab/atlas-checks/commit/673e6fcc905c32df9c0c4606fdff52e5195afa93", "message": "missing roundabout 2nd version final version (arrangement)", "committedDate": "2020-10-27T00:53:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczMDQwNg==", "url": "https://github.com/osmlab/atlas-checks/pull/402#discussion_r512730406", "bodyText": "I would reverse the conditional here and make the connectedEdges.add inside the conditional and remove the \"return\".\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        if (wayId.getOsmIdentifier() == edge.getOsmIdentifier())\n          \n          \n            \n                                        {\n          \n          \n            \n                                            return;\n          \n          \n            \n                                        }\n          \n          \n            \n                                        connectedEdges.add(wayId.getOsmIdentifier());\n          \n          \n            \n                                        if (wayId.getOsmIdentifier() != edge.getOsmIdentifier())\n          \n          \n            \n                                        {\n          \n          \n            \n                                            connectedEdges.add(wayId.getOsmIdentifier());\n          \n          \n            \n                                        }", "author": "atiannicelli", "createdAt": "2020-10-27T14:17:42Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/RoundaboutMissingTagCheck.java", "diffHunk": "@@ -151,8 +165,16 @@ private boolean intersectingWithMoreThan(final Edge edge)\n                         .filter(HighwayTag::isCarNavigableHighway)\n                         .filter(obj -> obj.getTag(ServiceTag.KEY).isEmpty())\n                         // de-duplication sectioned edges\n-                        .forEach(wayId -> connectedEdges.add(wayId.getOsmIdentifier())));\n-        return connectedEdges.size() > MINIMUM_INTERSECTION;\n+                        .forEach(wayId ->\n+                        {\n+                            if (wayId.getOsmIdentifier() == edge.getOsmIdentifier())\n+                            {\n+                                return;\n+                            }\n+                            connectedEdges.add(wayId.getOsmIdentifier());", "originalCommit": "673e6fcc905c32df9c0c4606fdff52e5195afa93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5298edfaba3f6a9e118dddc1dae1758d94a155d1", "url": "https://github.com/osmlab/atlas-checks/commit/5298edfaba3f6a9e118dddc1dae1758d94a155d1", "message": "Update src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/RoundaboutMissingTagCheck.java\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>", "committedDate": "2020-10-27T15:53:12Z", "type": "commit"}, {"oid": "9e50c2a7ecb2fda091b75b4d623dc19f6e2873d1", "url": "https://github.com/osmlab/atlas-checks/commit/9e50c2a7ecb2fda091b75b4d623dc19f6e2873d1", "message": "resolving merging conflicts and minor changes", "committedDate": "2020-10-27T23:28:58Z", "type": "commit"}, {"oid": "21aeb6df3b97d046ec769263f6c09cbb5def092d", "url": "https://github.com/osmlab/atlas-checks/commit/21aeb6df3b97d046ec769263f6c09cbb5def092d", "message": "spotless", "committedDate": "2020-10-27T23:32:24Z", "type": "commit"}, {"oid": "32fcda83fcac950b9fe7805de5546cefdfb5c322", "url": "https://github.com/osmlab/atlas-checks/commit/32fcda83fcac950b9fe7805de5546cefdfb5c322", "message": "merging issues", "committedDate": "2020-10-28T00:07:02Z", "type": "commit"}, {"oid": "d0cd88057ff58ef01e996e6ff9f3842de610b542", "url": "https://github.com/osmlab/atlas-checks/commit/d0cd88057ff58ef01e996e6ff9f3842de610b542", "message": "merging issues", "committedDate": "2020-10-28T15:46:55Z", "type": "commit"}, {"oid": "4963dff576d7594dbede8c46785e2fb871317a5b", "url": "https://github.com/osmlab/atlas-checks/commit/4963dff576d7594dbede8c46785e2fb871317a5b", "message": "merging issues", "committedDate": "2020-10-28T16:05:05Z", "type": "commit"}, {"oid": "9a00b27fb86eedc9259fb89286fd09b00225e138", "url": "https://github.com/osmlab/atlas-checks/commit/9a00b27fb86eedc9259fb89286fd09b00225e138", "message": "merging issues", "committedDate": "2020-10-28T16:18:11Z", "type": "commit"}, {"oid": "74367a9e036d33574cdaf9f4afc9a8d894b62a26", "url": "https://github.com/osmlab/atlas-checks/commit/74367a9e036d33574cdaf9f4afc9a8d894b62a26", "message": "Merge branch 'dev' into missingRoundabout_2run", "committedDate": "2020-10-28T19:25:56Z", "type": "commit"}, {"oid": "95bcb87f071ee30878b35c75b21bd67337628fa7", "url": "https://github.com/osmlab/atlas-checks/commit/95bcb87f071ee30878b35c75b21bd67337628fa7", "message": "minor changes", "committedDate": "2020-10-29T01:49:14Z", "type": "commit"}, {"oid": "49fa241cbd2380b1e38c92a220cb2c3cf52056b6", "url": "https://github.com/osmlab/atlas-checks/commit/49fa241cbd2380b1e38c92a220cb2c3cf52056b6", "message": "minor changes", "committedDate": "2020-10-29T15:37:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwODY0NA==", "url": "https://github.com/osmlab/atlas-checks/pull/402#discussion_r515308644", "bodyText": "This configuration key is already defined in BaseCheck. While there is no loss of effect because BaseCheck is using it effectively the same way, it would be better to use a different key.", "author": "Bentleysb", "createdAt": "2020-10-30T18:45:58Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/RoundaboutMissingTagCheck.java", "diffHunk": "@@ -60,6 +67,10 @@ public RoundaboutMissingTagCheck(final Configuration configuration)\n                 \"angle.threshold.maximum_degree\", MAX_THRESHOLD_DEGREES_DEFAULT, Angle::degrees);\n         this.minAngleThreshold = this.configurationValue(configuration,\n                 \"angle.threshold.minimum_degree\", MIN_THRESHOLD_DEGREES_DEFAULT, Angle::degrees);\n+        this.tagFilterIgnore = this.configurationValue(configuration, \"tags.filter\",", "originalCommit": "49fa241cbd2380b1e38c92a220cb2c3cf52056b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0ODczMA==", "url": "https://github.com/osmlab/atlas-checks/pull/402#discussion_r515348730", "bodyText": "thanks for suggestion! changed.", "author": "vladlemberg", "createdAt": "2020-10-30T20:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwODY0NA=="}], "type": "inlineReview"}, {"oid": "6f63bb740b1906033265ed7640b5e34c534f6505", "url": "https://github.com/osmlab/atlas-checks/commit/6f63bb740b1906033265ed7640b5e34c534f6505", "message": "tags filter minor changes", "committedDate": "2020-10-30T19:26:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1NzEyMQ==", "url": "https://github.com/osmlab/atlas-checks/pull/402#discussion_r516157121", "bodyText": "Can you change the configurable here too?", "author": "Bentleysb", "createdAt": "2020-11-02T17:57:31Z", "path": "src/test/java/org/openstreetmap/atlas/checks/validation/linear/edges/RoundaboutMissingTagCheckTest.java", "diffHunk": "@@ -19,6 +20,9 @@\n     @Rule\n     public ConsumerBasedExpectedCheckVerifier verifier = new ConsumerBasedExpectedCheckVerifier();\n \n+    private final Configuration inlineConfiguration = ConfigurationResolver.inlineConfiguration(\n+            \"{\\\"RoundaboutMissingTagCheck\\\":{\\\"tags.filter\\\":\\\"motor_vehicle->!no&foot->!yes&footway->!&access->!private&construction->!\\\"}}\");", "originalCommit": "6f63bb740b1906033265ed7640b5e34c534f6505", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4MjA0Mw==", "url": "https://github.com/osmlab/atlas-checks/pull/402#discussion_r516182043", "bodyText": "fixed.", "author": "vladlemberg", "createdAt": "2020-11-02T18:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1NzEyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3MDE3NQ==", "url": "https://github.com/osmlab/atlas-checks/pull/402#discussion_r516170175", "bodyText": "\ud83d\udc4d", "author": "sayas01", "createdAt": "2020-11-02T18:20:57Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/RoundaboutMissingTagCheck.java", "diffHunk": "@@ -168,4 +187,33 @@ private boolean isPartOfClosedWay(final Edge edge)\n                 .filter(inEdge -> inEdge.getOsmIdentifier() == edge.getOsmIdentifier())\n                 .count() == 1;\n     }\n+\n+    /**\n+     * Check if original OSM Way is a Turning Circle. See\n+     * https://wiki.openstreetmap.org/wiki/Tag:highway%3Dturning_circle\n+     *\n+     * @param edge\n+     *            entity with valence equal to\n+     *            {@link RoundaboutMissingTagCheck#MINIMUM_INTERSECTION}\n+     * @return true if way is a turning circle. OSM Examples:\n+     *         https://www.openstreetmap.org/way/220432725", "originalCommit": "6f63bb740b1906033265ed7640b5e34c534f6505", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "50de73eebdcdd71ef190220bcd8d4364a459c885", "url": "https://github.com/osmlab/atlas-checks/commit/50de73eebdcdd71ef190220bcd8d4364a459c885", "message": "ignore tags filter", "committedDate": "2020-11-02T18:42:18Z", "type": "commit"}]}