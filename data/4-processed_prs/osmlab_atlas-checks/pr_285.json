{"pr_number": 285, "pr_title": "OceanBleedingCheck update - coastlines and ferries", "pr_createdAt": "2020-04-20T20:25:13Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/285", "timeline": [{"oid": "c96ba26edebf5f39f9e2b4cf11f933c10ddf39d9", "url": "https://github.com/osmlab/atlas-checks/commit/c96ba26edebf5f39f9e2b4cf11f933c10ddf39d9", "message": "OceanBleeding - flag intersections w natural=coastline", "committedDate": "2020-04-14T21:42:23Z", "type": "commit"}, {"oid": "48823968c0f034800770475105ab80cc91b84b45", "url": "https://github.com/osmlab/atlas-checks/commit/48823968c0f034800770475105ab80cc91b84b45", "message": "spotless", "committedDate": "2020-04-20T20:18:55Z", "type": "commit"}, {"oid": "faa52ce51b870892980566bb0de2b546af4a718f", "url": "https://github.com/osmlab/atlas-checks/commit/faa52ce51b870892980566bb0de2b546af4a718f", "message": "Merge https://github.com/osmlab/atlas-checks into oceanBleedingUpdate", "committedDate": "2020-04-20T20:19:49Z", "type": "commit"}, {"oid": "379247b6a64b01b85ed30755ac81ea7dbe1b8f24", "url": "https://github.com/osmlab/atlas-checks/commit/379247b6a64b01b85ed30755ac81ea7dbe1b8f24", "message": "Merge branch 'dev' into oceanBleedingUpdate", "committedDate": "2020-04-30T17:24:08Z", "type": "commit"}, {"oid": "87741342eff02dd2920a7352ec8430c32e811cb6", "url": "https://github.com/osmlab/atlas-checks/commit/87741342eff02dd2920a7352ec8430c32e811cb6", "message": "saving some work", "committedDate": "2020-05-07T20:18:17Z", "type": "commit"}, {"oid": "0984d13bd89de36286a0ae459b17d3f35cab15cb", "url": "https://github.com/osmlab/atlas-checks/commit/0984d13bd89de36286a0ae459b17d3f35cab15cb", "message": "Merge branch 'oceanBleedingUpdate' of https://github.com/seancoulter/atlas-checks into oceanBleedingUpdate", "committedDate": "2020-05-07T20:18:24Z", "type": "commit"}, {"oid": "eab1de1be0dac29124b33f1d60d199436840264a", "url": "https://github.com/osmlab/atlas-checks/commit/eab1de1be0dac29124b33f1d60d199436840264a", "message": "fix intersecting/within", "committedDate": "2020-05-07T21:54:31Z", "type": "commit"}, {"oid": "feb67b7fa2935f08332ec8ea714e26f205373f4c", "url": "https://github.com/osmlab/atlas-checks/commit/feb67b7fa2935f08332ec8ea714e26f205373f4c", "message": "spotless", "committedDate": "2020-05-07T23:16:08Z", "type": "commit"}, {"oid": "a38fb25eb99218ce7cd6aad2bfb1c0cade51b445", "url": "https://github.com/osmlab/atlas-checks/commit/a38fb25eb99218ce7cd6aad2bfb1c0cade51b445", "message": "equalsIgnoreCase tag; flag nonexplicit intersections", "committedDate": "2020-05-09T00:50:54Z", "type": "commit"}, {"oid": "d62137a5716ebd2f90256b3cd3ddcc474b77d92d", "url": "https://github.com/osmlab/atlas-checks/commit/d62137a5716ebd2f90256b3cd3ddcc474b77d92d", "message": "unit tests", "committedDate": "2020-05-10T01:43:39Z", "type": "commit"}, {"oid": "500b0e7408e2f1fc1c356778d367490debfd89e5", "url": "https://github.com/osmlab/atlas-checks/commit/500b0e7408e2f1fc1c356778d367490debfd89e5", "message": "reduce cognitive complexity", "committedDate": "2020-05-10T01:59:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMzA4OA==", "url": "https://github.com/osmlab/atlas-checks/pull/285#discussion_r424013088", "bodyText": "nit: areaCrossed -> lineCrossed", "author": "Bentleysb", "createdAt": "2020-05-12T20:27:52Z", "path": "src/main/java/org/openstreetmap/atlas/checks/utility/IntersectionUtilities.java", "diffHunk": "@@ -73,17 +73,17 @@ public static double findIntersectionPercentage(final Polygon polygon,\n     }\n \n     /**\n-     * Verifies intersections of given {@link Polygon} and {@link LineItem} are explicit\n+     * Verifies intersections of given {@link PolyLine} and {@link LineItem} are explicit\n      * {@link Location}s for both items\n      *\n      * @param areaCrossed\n-     *            {@link Polygon} being crossed\n+     *            {@link PolyLine} being crossed\n      * @param crossingItem\n      *            {@link LineItem} crossing\n-     * @return whether given {@link Polygon} and {@link LineItem}'s intersections are actual\n+     * @return whether given {@link PolyLine} and {@link LineItem}'s intersections are actual\n      *         {@link Location}s for both items\n      */\n-    public static boolean haveExplicitLocationsForIntersections(final Polygon areaCrossed,\n+    public static boolean haveExplicitLocationsForIntersections(final PolyLine areaCrossed,", "originalCommit": "500b0e7408e2f1fc1c356778d367490debfd89e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTY2MQ==", "url": "https://github.com/osmlab/atlas-checks/pull/285#discussion_r423435661", "bodyText": "Will this break any other usage of this?", "author": "danielduhh", "createdAt": "2020-05-12T03:08:28Z", "path": "src/main/java/org/openstreetmap/atlas/checks/utility/IntersectionUtilities.java", "diffHunk": "@@ -73,17 +73,17 @@ public static double findIntersectionPercentage(final Polygon polygon,\n     }\n \n     /**\n-     * Verifies intersections of given {@link Polygon} and {@link LineItem} are explicit\n+     * Verifies intersections of given {@link PolyLine} and {@link LineItem} are explicit\n      * {@link Location}s for both items\n      *\n      * @param areaCrossed\n-     *            {@link Polygon} being crossed\n+     *            {@link PolyLine} being crossed\n      * @param crossingItem\n      *            {@link LineItem} crossing\n-     * @return whether given {@link Polygon} and {@link LineItem}'s intersections are actual\n+     * @return whether given {@link PolyLine} and {@link LineItem}'s intersections are actual\n      *         {@link Location}s for both items\n      */\n-    public static boolean haveExplicitLocationsForIntersections(final Polygon areaCrossed,\n+    public static boolean haveExplicitLocationsForIntersections(final PolyLine areaCrossed,", "originalCommit": "500b0e7408e2f1fc1c356778d367490debfd89e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MzU3MA==", "url": "https://github.com/osmlab/atlas-checks/pull/285#discussion_r424653570", "bodyText": "@danielduhh Polyline is Polygon's superclass, and outside of this check it's only used by LineCrossingWaterbody and LineCrossingBuilding, which both give Polygons as args, so we should be good", "author": "seancoulter", "createdAt": "2020-05-13T18:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTY2MQ=="}], "type": "inlineReview"}, {"oid": "2f3ea82ad6560cb0bdf54cbae9dc7bfa08717456", "url": "https://github.com/osmlab/atlas-checks/commit/2f3ea82ad6560cb0bdf54cbae9dc7bfa08717456", "message": "Merge branch 'dev' into oceanBleedingUpdate", "committedDate": "2020-05-13T15:17:58Z", "type": "commit"}, {"oid": "f61a30bee09c7816adacb3b222eee7425de65ed8", "url": "https://github.com/osmlab/atlas-checks/commit/f61a30bee09c7816adacb3b222eee7425de65ed8", "message": "nit and docs", "committedDate": "2020-05-13T18:56:49Z", "type": "commit"}, {"oid": "773346d478b1d56400f581d9f71d4c9870eb0fd4", "url": "https://github.com/osmlab/atlas-checks/commit/773346d478b1d56400f581d9f71d4c9870eb0fd4", "message": "Merge branch 'oceanBleedingUpdate' of https://github.com/seancoulter/atlas-checks into oceanBleedingUpdate", "committedDate": "2020-05-13T18:56:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NTYyOA==", "url": "https://github.com/osmlab/atlas-checks/pull/285#discussion_r424685628", "bodyText": "Is it possible to concatenate the ids into a single \"Way\" instruction? Same for \"Building\".\nThat way we can avoid instructions like:\nOcean feature 693833861 has invalid intersections.Way 781473903 intersects the ocean feature.Way 781473903 intersects the ocean feature.Way 781473903 intersects the ocean feature.Way 781473903 intersects the ocean feature.Way 373430804 intersects the ocean feature.Way 373430804 intersects the ocean feature.Way 373430800 intersects the ocean feature.Way 373430800 intersects the ocean feature.", "author": "danielduhh", "createdAt": "2020-05-13T19:39:35Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/OceanBleedingCheck.java", "diffHunk": "@@ -37,15 +45,17 @@\n             + \"|wetland->bog,fen,mangrove,marsh,saltern,saltmarsh,string_bog,swamp,wet_meadow\"\n             + \"|landuse->*\";\n     private final TaggableFilter invalidOceanTags;\n+    private static final String DEFAULT_OCEAN_BOUNDARY_TAGS = \"natural->coastline\";\n+    private final TaggableFilter oceanBoundaryTags;\n     private static final String DEFAULT_OFFENDING_MISCELLANEOUS_LINEITEMS = \"railway->rail,narrow_gauge,preserved,subway,disused,monorail,tram,light_rail,funicular,construction,miniature\";\n     private final TaggableFilter defaultOffendingLineitems;\n     private static final String DEFAULT_HIGHWAY_MINIMUM = \"TOLL_GANTRY\";\n     private final HighwayTag highwayMinimum;\n     private static final List<String> DEFAULT_HIGHWAYS_EXCLUDE = Collections.emptyList();\n     private final List<HighwayTag> highwaysExclude;\n-    private static final String OCEAN_INSTRUCTION = \"Ocean feature {0,number,#} has invalid intersections.\";\n-    private static final String BLEEDING_BUILDING_INSTRUCTION = \"Building {0,number,#} intersects the ocean feature.\";\n-    private static final String BLEEDING_LINEITEM_INSTRUCTION = \"Way {0,number,#} intersects the ocean feature.\";\n+    private static final String OCEAN_INSTRUCTION = \"Ocean feature {0,number,#} has invalid intersections. \";\n+    private static final String BLEEDING_BUILDING_INSTRUCTION = \"Building {0,number,#} intersects the ocean feature. \";\n+    private static final String BLEEDING_LINEITEM_INSTRUCTION = \"Way {0,number,#} intersects the ocean feature. \";", "originalCommit": "773346d478b1d56400f581d9f71d4c9870eb0fd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}