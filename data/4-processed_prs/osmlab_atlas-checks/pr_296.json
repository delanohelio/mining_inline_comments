{"pr_number": 296, "pr_title": "Enhancement to InvalidTagsCheck To Use Resource File For Filters", "pr_createdAt": "2020-05-12T17:09:54Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/296", "timeline": [{"oid": "37b6ecf955a57599728c53cd989a14305505b30c", "url": "https://github.com/osmlab/atlas-checks/commit/37b6ecf955a57599728c53cd989a14305505b30c", "message": "Refactor to use resource file for taggable filter", "committedDate": "2020-05-05T19:59:06Z", "type": "commit"}, {"oid": "d0fe9229119fdab07c2a3696050154277e2855ab", "url": "https://github.com/osmlab/atlas-checks/commit/d0fe9229119fdab07c2a3696050154277e2855ab", "message": "Add resource files", "committedDate": "2020-05-05T20:00:12Z", "type": "commit"}, {"oid": "3d6ed9cbe3f16ba2d8a78d18b4fc1560a238aa44", "url": "https://github.com/osmlab/atlas-checks/commit/3d6ed9cbe3f16ba2d8a78d18b4fc1560a238aa44", "message": "Revert config changes", "committedDate": "2020-05-05T22:05:58Z", "type": "commit"}, {"oid": "5a2879894a56de23ab985532a6a3710b82055d81", "url": "https://github.com/osmlab/atlas-checks/commit/5a2879894a56de23ab985532a6a3710b82055d81", "message": "Update unit test", "committedDate": "2020-05-05T22:08:25Z", "type": "commit"}, {"oid": "8f3b4d48c0c014f40204c47b7708fab9c3c2d008", "url": "https://github.com/osmlab/atlas-checks/commit/8f3b4d48c0c014f40204c47b7708fab9c3c2d008", "message": "Update logic and add comments", "committedDate": "2020-05-12T16:56:20Z", "type": "commit"}, {"oid": "d7e85d3a5edba705cb80644d112ababd0543c56a", "url": "https://github.com/osmlab/atlas-checks/commit/d7e85d3a5edba705cb80644d112ababd0543c56a", "message": "spotless", "committedDate": "2020-05-12T16:57:37Z", "type": "commit"}, {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d", "url": "https://github.com/osmlab/atlas-checks/commit/25a61bd2fee73a9ad855d60471a8448b630eed5d", "message": "Fix checktyle", "committedDate": "2020-05-12T17:22:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MzQ1NQ==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r423993455", "bodyText": "This is not the only character that can be a delimiter, so it would make more sense to just call this COLON.", "author": "Bentleysb", "createdAt": "2020-05-12T19:52:03Z", "path": "src/main/java/org/openstreetmap/atlas/checks/constants/CommonConstants.java", "diffHunk": "@@ -25,6 +25,7 @@ private CommonConstants()\n     public static final String UNDERSCORE = \"_\";\n     public static final String EQUALS_TO = \"=\";\n     public static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+    public static final String DELIMITER = \":\";", "originalCommit": "25a61bd2fee73a9ad855d60471a8448b630eed5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDQyNg==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424000426", "bodyText": "If these filters are mutually exclusive then why not just have one switch?", "author": "Bentleysb", "createdAt": "2020-05-12T20:04:36Z", "path": "docs/checks/invalidTagsCheck.md", "diffHunk": "@@ -1,17 +1,28 @@\n # Invalid Tags Check\n \n-This check flags features based on configurable filters.   \n+This check flags features for invalid tags based on a list of TaggableFilters. The list of TaggableFilters for this check is either a combination of filters passed through the \n+check configuration and default list of TaggableFilters or just the default filters. \n+The two configurable boolean values, \"override.default.filters\" and \"append.to.default.filters\", \n+determine the list of taggable filters that each of the atlas entities will be tested against. The rules are\n+1) If \"override.default.filters\" is true and \"append.to.default.filters\" is false,\n+only the filters that are passed through the configuration file will be used to test the atlas entities. \n+2) If \"append.to.default.filters\" is true and \"override.default.filters\" is false,", "originalCommit": "25a61bd2fee73a9ad855d60471a8448b630eed5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NTUyNA==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424045524", "bodyText": "The check originally had empty default filters and I wanted to keep it that way and so used two switches. Since list of new filters added is long and couldn't be appended to the config file, I saved them in a resource file and made use of these two switches to either use the filters in the resource or add the config filters to the ones in resource.", "author": "sayas01", "createdAt": "2020-05-12T21:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1MjYwNA==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424052604", "bodyText": "I think if we are adding a resource then it makes sense to have that as the default, but I like having the option to overwrite or append to it.", "author": "Bentleysb", "createdAt": "2020-05-12T21:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1MzYwNA==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424053604", "bodyText": "Yeah the only reason these filters are not in the config is because there are many. These are solely water-island related tag combinations and need not be default filters.", "author": "sayas01", "createdAt": "2020-05-12T21:48:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNzI1NA==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424007254", "bodyText": "This method was originally made to return the keys from a single filter so that an instruction could be made for each filter that is passed. Now this can return the combined keys of multiple filters, which could make the instructions more confusing.", "author": "Bentleysb", "createdAt": "2020-05-12T20:16:58Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/tag/InvalidTagsCheck.java", "diffHunk": "@@ -37,21 +52,87 @@\n             \"OSM feature {0,number,#} has invalid tags.\",\n             \"Check the following tags for missing, conflicting, or incorrect values: {0}\");\n     private static final String KEY_VALUE_SEPARATOR = \"->\";\n+    private static final String DEFAULT_FILTER_RESOURCE = \"invalidTags.txt\";\n+    private static final Logger logger = LoggerFactory.getLogger(InvalidTagsCheck.class);\n+\n+    private final List<Tuple<? extends Class<AtlasEntity>, List<TaggableFilter>>> classTagFilters;\n+    private final boolean overrideDefaultFilters;\n+    private final boolean appendToDefaultFilters;\n \n-    private final List<Tuple<? extends Set<Class<AtlasEntity>>, TaggableFilter>> classTagFilters;\n+    /**\n+     * @return a List of Tuple containing AtlasEntity and a list of TaggableFilters read from the\n+     *         json files of each AtlasEntity. DEFAULT_FILTER_RESOURCE file maps each AtlasEntity to\n+     *         its corresponding filter files.\n+     */\n+    private static List<Tuple<? extends Class<AtlasEntity>, List<TaggableFilter>>> getDefaultFilters()\n+    {\n+        try (BufferedReader reader = new BufferedReader(new InputStreamReader(\n+                InvalidTagsCheck.class.getResourceAsStream(DEFAULT_FILTER_RESOURCE))))\n+        {\n+            final List<Tuple<? extends Class<AtlasEntity>, List<TaggableFilter>>> listOfClassToFilters = new ArrayList<>();\n+            String line;\n+            while ((line = reader.readLine()) != null)\n+            {\n+                final String[] split = line.split(DELIMITER);\n+                if (split.length == 2)\n+                {\n+                    listOfClassToFilters.add(\n+                            new Tuple<>(ItemType.valueOf(split[0].toUpperCase()).getMemberClass(),\n+                                    getFiltersFromResource(split[1])));\n+                }\n+            }\n+            return listOfClassToFilters;\n+        }\n+        catch (final IOException exception)\n+        {\n+            logger.error(String.format(\"Could not read %s\", DEFAULT_FILTER_RESOURCE), exception);\n+            return Collections.emptyList();\n+        }\n+    }\n \n     /**\n      * Gathers the keys from a {@link TaggableFilter} using regex.\n      *\n-     * @param filter\n+     * @param listOfFilters<TaggableFilter>\n      *            a {@link TaggableFilter}\n      * @return the tag keys as a {@link Set} of {@link String}s\n      */\n-    private static Set<String> getFilterKeys(final TaggableFilter filter)\n+    private static Set<String> getFilterKeys(final AtlasObject atlasObject,\n+            final List<TaggableFilter> listOfFilters)\n     {\n-        return Arrays.stream(filter.toString().split(\"[|&]+\"))\n-                .filter(string -> string.contains(KEY_VALUE_SEPARATOR))\n-                .map(tag -> tag.split(KEY_VALUE_SEPARATOR)[0]).collect(Collectors.toSet());\n+        final Set<String> collectedKeys = new HashSet<>();\n+        listOfFilters.stream().filter(taggableFilter -> taggableFilter.test(atlasObject)).forEach(", "originalCommit": "25a61bd2fee73a9ad855d60471a8448b630eed5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1MjIxNA==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424052214", "bodyText": "Hmm yeah. I am filtering the list of filters here so that only the keys of the filter which the atlasobject passes will be used in the instruction. But I think it makes sense to group the keys in the instruction to avoid confusion.", "author": "sayas01", "createdAt": "2020-05-12T21:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNzI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3Mjc4Mg==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424072782", "bodyText": "@Bentleysb I have updated the logic to pass taggable filter, instead of list of filters, to this method so that for each filter, a new instruction is created just as before.", "author": "sayas01", "createdAt": "2020-05-12T22:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNzI1NA=="}], "type": "inlineReview"}, {"oid": "34ee348ac33dbdd5f39c322f346227919e800fae", "url": "https://github.com/osmlab/atlas-checks/commit/34ee348ac33dbdd5f39c322f346227919e800fae", "message": "Rename constant", "committedDate": "2020-05-12T21:46:08Z", "type": "commit"}, {"oid": "4439eb358613961cc94fa742ad35d14de6a510b5", "url": "https://github.com/osmlab/atlas-checks/commit/4439eb358613961cc94fa742ad35d14de6a510b5", "message": "Spotless", "committedDate": "2020-05-12T22:31:57Z", "type": "commit"}, {"oid": "ad5377dd0cc331e61921232e895acd974aad400a", "url": "https://github.com/osmlab/atlas-checks/commit/ad5377dd0cc331e61921232e895acd974aad400a", "message": "Rename variable", "committedDate": "2020-05-12T22:34:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzYwNw==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424103607", "bodyText": "This could be:\n\"filters.defaultt\": {\n \"override\": false,\n \"append\": true\n}", "author": "danielduhh", "createdAt": "2020-05-13T00:13:51Z", "path": "config/configuration.json", "diffHunk": "@@ -388,8 +388,11 @@\n     }\n   },\n   \"InvalidTagsCheck\": {\n+    \"override.default.filters\": false,", "originalCommit": "ad5377dd0cc331e61921232e895acd974aad400a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNDEwMw==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424104103", "bodyText": "If we go the resource route, the default values should be the tags in the original version", "author": "danielduhh", "createdAt": "2020-05-13T00:15:34Z", "path": "src/main/resources/org/openstreetmap/atlas/checks/validation/tag/invalid-tags-check-filter.json", "diffHunk": "@@ -0,0 +1,52 @@\n+{\n+  \"filters\": [\n+    \"island->*&natural->spring,hot_spring&name->*\",", "originalCommit": "ad5377dd0cc331e61921232e895acd974aad400a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzNjkwNg==", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424636906", "bodyText": "@danielduhh 96e197a should address this.", "author": "sayas01", "createdAt": "2020-05-13T18:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNDEwMw=="}], "type": "inlineReview"}, {"oid": "0f674e86135e70a4e6e7368f0e6004d539925cb2", "url": "https://github.com/osmlab/atlas-checks/commit/0f674e86135e70a4e6e7368f0e6004d539925cb2", "message": "Merge branch 'dev' into invalidtags", "committedDate": "2020-05-13T15:33:48Z", "type": "commit"}, {"oid": "96e197a3683865b16b6b502b8a558d0714fa312f", "url": "https://github.com/osmlab/atlas-checks/commit/96e197a3683865b16b6b502b8a558d0714fa312f", "message": "Update config switches and revert to original filters as default filters", "committedDate": "2020-05-13T18:11:35Z", "type": "commit"}, {"oid": "d996627d07ad2e702e06da97b9a06cceb7013ea8", "url": "https://github.com/osmlab/atlas-checks/commit/d996627d07ad2e702e06da97b9a06cceb7013ea8", "message": "Merge branch 'invalidtags' of https://github.com/sayas01/atlas-checks into invalidtags", "committedDate": "2020-05-13T18:12:10Z", "type": "commit"}, {"oid": "9f935b1e8d16b5d226e16db06dd33120ac85d331", "url": "https://github.com/osmlab/atlas-checks/commit/9f935b1e8d16b5d226e16db06dd33120ac85d331", "message": "Remove resource filters", "committedDate": "2020-05-13T21:29:43Z", "type": "commit"}, {"oid": "72ca3a91846131df79db2787ed9cba2890620f8c", "url": "https://github.com/osmlab/atlas-checks/commit/72ca3a91846131df79db2787ed9cba2890620f8c", "message": "Update unit test", "committedDate": "2020-05-13T21:34:49Z", "type": "commit"}]}