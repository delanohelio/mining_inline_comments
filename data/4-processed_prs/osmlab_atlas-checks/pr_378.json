{"pr_number": 378, "pr_title": "[MapRouletteUploadCommand] Add documentation", "pr_createdAt": "2020-10-02T05:22:51Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/378", "timeline": [{"oid": "e6d93df85f23e8618a076c80db8c59dfc7c64119", "url": "https://github.com/osmlab/atlas-checks/commit/e6d93df85f23e8618a076c80db8c59dfc7c64119", "message": "mr command docs", "committedDate": "2020-10-02T04:46:51Z", "type": "commit"}, {"oid": "7c237d3c6635eb65642a4d53ec789f31e1fa9f9f", "url": "https://github.com/osmlab/atlas-checks/commit/7c237d3c6635eb65642a4d53ec789f31e1fa9f9f", "message": "clean up", "committedDate": "2020-10-02T05:10:06Z", "type": "commit"}, {"oid": "a71f67eb36de87c98224882ea9a578068eccddbf", "url": "https://github.com/osmlab/atlas-checks/commit/a71f67eb36de87c98224882ea9a578068eccddbf", "message": "clean up", "committedDate": "2020-10-02T05:20:00Z", "type": "commit"}, {"oid": "60803484421cc4dad6a53aa4e943936af86bcebb", "url": "https://github.com/osmlab/atlas-checks/commit/60803484421cc4dad6a53aa4e943936af86bcebb", "message": "revert build change", "committedDate": "2020-10-02T05:20:34Z", "type": "commit"}, {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "url": "https://github.com/osmlab/atlas-checks/commit/0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "message": "clean up checkincomment switch description", "committedDate": "2020-10-02T05:22:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2ODA1OQ==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500268059", "bodyText": "This parameter should be optional.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]\n          \n          \n            \n            * **checkinCommentPrefix** (optional) - Prefix added to default check in comment of [prefix ISO - CheckName]", "author": "atiannicelli", "createdAt": "2020-10-06T13:18:20Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwNjUyNQ==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500306525", "bodyText": "I don't think you want \"staging\" in there. I had to remove it to make it work for me.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            -maproulette=\"https://staging.maproulette.org:443:checks_example_project:api|key\" \\\n          \n          \n            \n            -maproulette=\"https://maproulette.org:443:checks_example_project:api|key\" \\", "author": "atiannicelli", "createdAt": "2020-10-06T14:01:10Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]\n+\n+## Example\n+\n+The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. \n+Please remember to change the MapRoulette API key. You can find this in your MapRoulette user settings.\n+\n+```java\n+java -cp build/libs/atlas-checks-6.1.3-SNAPSHOT-shaded.jar org.openstreetmap.atlas.checks.maproulette.MapRouletteUploadCommand \\\n+-maproulette=\"https://staging.maproulette.org:443:checks_example_project:api|key\" \\", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTc5MQ==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500311791", "bodyText": "Not to be picky, but I think this creates \"Canada - EdgeCrossingEdgeCheck\"\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. CAN - EdgeCrossingEdgeCheck\n          \n          \n            \n            1. Canada - EdgeCrossingEdgeCheck", "author": "atiannicelli", "createdAt": "2020-10-06T14:06:38Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTkzNQ==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500311935", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. CAN - SinkIslandCheck\n          \n          \n            \n            2. Canada - SinkIslandCheck", "author": "atiannicelli", "createdAt": "2020-10-06T14:06:49Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMjEzOA==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500312138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. USA - EdgeCrossingEdgeCheck\n          \n          \n            \n            2. United States - EdgeCrossingEdgeCheck", "author": "atiannicelli", "createdAt": "2020-10-06T14:07:02Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMjMyMQ==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500312321", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            3. USA - SinkIslandCheck\n          \n          \n            \n            3. United States - SinkIslandCheck", "author": "atiannicelli", "createdAt": "2020-10-06T14:07:13Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxNTA4OQ==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500315089", "bodyText": "I had to copy https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar to the same directory and add that to the class path. Is that worth putting in here or would java experts just know that?", "author": "atiannicelli", "createdAt": "2020-10-06T14:09:57Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]\n+\n+## Example\n+\n+The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. \n+Please remember to change the MapRoulette API key. You can find this in your MapRoulette user settings.\n+\n+```java\n+java -cp build/libs/atlas-checks-6.1.3-SNAPSHOT-shaded.jar org.openstreetmap.atlas.checks.maproulette.MapRouletteUploadCommand \\", "originalCommit": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMTc1MA==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500411750", "bodyText": "Ah yeah.. sl4j is excluded in the gradle build. We could probably remove that.", "author": "danielduhh", "createdAt": "2020-10-06T15:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxNTA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDIwNw==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500414207", "bodyText": "OK, looks good as is then.", "author": "atiannicelli", "createdAt": "2020-10-06T15:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxNTA4OQ=="}], "type": "inlineReview"}, {"oid": "66493eeb69cab4b72a88ea8caea1b1212d455ddf", "url": "https://github.com/osmlab/atlas-checks/commit/66493eeb69cab4b72a88ea8caea1b1212d455ddf", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>", "committedDate": "2020-10-06T15:52:27Z", "type": "commit"}, {"oid": "c2c54d986739447a1afe3554571aa05c9a68b87a", "url": "https://github.com/osmlab/atlas-checks/commit/c2c54d986739447a1afe3554571aa05c9a68b87a", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>", "committedDate": "2020-10-06T15:52:42Z", "type": "commit"}, {"oid": "8843f5740fc39d2581ab6ecb23889e12d587165c", "url": "https://github.com/osmlab/atlas-checks/commit/8843f5740fc39d2581ab6ecb23889e12d587165c", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>", "committedDate": "2020-10-06T15:52:50Z", "type": "commit"}, {"oid": "675a5f33539942bd71afa2aef17d085b20dafbbe", "url": "https://github.com/osmlab/atlas-checks/commit/675a5f33539942bd71afa2aef17d085b20dafbbe", "message": "Apply suggestions from code review\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>", "committedDate": "2020-10-06T15:54:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1ODA2Ng==", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500658066", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. \n          \n          \n            \n            The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on maproulette.org.", "author": "Bentleysb", "createdAt": "2020-10-06T23:49:22Z", "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. Canada - EdgeCrossingEdgeCheck\n+2. Canada - SinkIslandCheck\n+2. United States - EdgeCrossingEdgeCheck\n+3. United States - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** (optional) - Prefix added to default check in comment of [prefix ISO - CheckName]\n+\n+## Example\n+\n+The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. ", "originalCommit": "675a5f33539942bd71afa2aef17d085b20dafbbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "55dc8774f948bdeea42baa188845bf6a4bd5857c", "url": "https://github.com/osmlab/atlas-checks/commit/55dc8774f948bdeea42baa188845bf6a4bd5857c", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: Bentley Breithaupt <bentleysb@gmail.com>", "committedDate": "2020-10-07T05:55:27Z", "type": "commit"}]}