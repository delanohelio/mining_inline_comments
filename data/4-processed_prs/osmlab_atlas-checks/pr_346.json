{"pr_number": 346, "pr_title": "Water Area checks", "pr_createdAt": "2020-08-20T15:15:32Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/346", "timeline": [{"oid": "e3145e22f72a52ecf325e10ff0ff665161828a56", "url": "https://github.com/osmlab/atlas-checks/commit/e3145e22f72a52ecf325e10ff0ff665161828a56", "message": "More false positives, but catches issues\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-08-20T15:36:00Z", "type": "forcePushed"}, {"oid": "ccee897b824d9675d2cae575ec3c4e7f6213c4f4", "url": "https://github.com/osmlab/atlas-checks/commit/ccee897b824d9675d2cae575ec3c4e7f6213c4f4", "message": "More false positives, but catches issues\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-08-20T17:08:35Z", "type": "forcePushed"}, {"oid": "442d135fcfb53acef372d64b98a272efdbfa6f97", "url": "https://github.com/osmlab/atlas-checks/commit/442d135fcfb53acef372d64b98a272efdbfa6f97", "message": "More false positives, but catches issues\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-08-20T17:08:51Z", "type": "forcePushed"}, {"oid": "52e1a748cc15dddf658b1a40965ca4ccb11df39c", "url": "https://github.com/osmlab/atlas-checks/commit/52e1a748cc15dddf658b1a40965ca4ccb11df39c", "message": "Revert \"More false positives, but catches issues\"\n\nThis reverts commit 442d135fcfb53acef372d64b98a272efdbfa6f97.", "committedDate": "2020-08-21T13:17:57Z", "type": "forcePushed"}, {"oid": "930bad730586070b8957e125a63304eb7faa94fd", "url": "https://github.com/osmlab/atlas-checks/commit/930bad730586070b8957e125a63304eb7faa94fd", "message": "Improve check (ignore dams, better intersection handling)\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-08-27T14:02:25Z", "type": "forcePushed"}, {"oid": "b6727b6a4138c7c5dad0841b9a2cfb178fa7a84e", "url": "https://github.com/osmlab/atlas-checks/commit/b6727b6a4138c7c5dad0841b9a2cfb178fa7a84e", "message": "WaterAreaCheck: Continue through area checks instead of stopping at the first problem\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-08-27T17:38:57Z", "type": "forcePushed"}, {"oid": "c525631eb4d90f87e12548f5eb6a80c8be128fa7", "url": "https://github.com/osmlab/atlas-checks/commit/c525631eb4d90f87e12548f5eb6a80c8be128fa7", "message": "Partially working water area test\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-09-08T13:11:55Z", "type": "commit"}, {"oid": "48f82aa586ce1087146d71e87c181b4bbb440f03", "url": "https://github.com/osmlab/atlas-checks/commit/48f82aa586ce1087146d71e87c181b4bbb440f03", "message": "More false positives, but catches issues\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-09-08T13:11:55Z", "type": "commit"}, {"oid": "36b08d5656fcfc889017663b89aa0c609b006783", "url": "https://github.com/osmlab/atlas-checks/commit/36b08d5656fcfc889017663b89aa0c609b006783", "message": "Improve check (ignore dams, better intersection handling)\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-09-08T13:11:55Z", "type": "commit"}, {"oid": "2148e21aaf15e86298fd96af1088eb945c660561", "url": "https://github.com/osmlab/atlas-checks/commit/2148e21aaf15e86298fd96af1088eb945c660561", "message": "WaterAreaCheck: Continue through area checks instead of stopping at the first problem\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-09-08T13:11:55Z", "type": "commit"}, {"oid": "2148e21aaf15e86298fd96af1088eb945c660561", "url": "https://github.com/osmlab/atlas-checks/commit/2148e21aaf15e86298fd96af1088eb945c660561", "message": "WaterAreaCheck: Continue through area checks instead of stopping at the first problem\n\nSigned-off-by: Taylor Smock <taylor.smock@kaart.com>", "committedDate": "2020-09-08T13:11:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzODY2Ng==", "url": "https://github.com/osmlab/atlas-checks/pull/346#discussion_r485238666", "bodyText": "Nit: extra line", "author": "Bentleysb", "createdAt": "2020-09-08T22:52:49Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/areas/WaterAreaCheck.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package org.openstreetmap.atlas.checks.validation.areas;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.openstreetmap.atlas.checks.base.BaseCheck;\n+import org.openstreetmap.atlas.checks.flag.CheckFlag;\n+import org.openstreetmap.atlas.checks.utility.IntersectionUtilities;\n+import org.openstreetmap.atlas.geography.Location;\n+import org.openstreetmap.atlas.geography.PolyLine;\n+import org.openstreetmap.atlas.geography.Polygon;\n+import org.openstreetmap.atlas.geography.Segment;\n+import org.openstreetmap.atlas.geography.atlas.items.Area;\n+import org.openstreetmap.atlas.geography.atlas.items.AtlasObject;\n+import org.openstreetmap.atlas.geography.atlas.items.Line;\n+import org.openstreetmap.atlas.geography.atlas.items.LineItem;\n+import org.openstreetmap.atlas.tags.filters.TaggableFilter;\n+import org.openstreetmap.atlas.utilities.collections.Iterables;\n+import org.openstreetmap.atlas.utilities.configuration.Configuration;\n+\n+/**\n+ * This checks water areas for overlaps and missing waterways (where appropriate).\n+ *\n+ * @author Taylor Smock\n+ */\n+public class WaterAreaCheck extends BaseCheck<Long>\n+{\n+    private static final long serialVersionUID = -2567398383133412329L;\n+\n+    private static final List<String> WATER_FILTERS = Arrays\n+            .asList(\"natural->water&water->*|waterway->riverbank\");\n+    private static final List<String> WATER_FILTERS_WATERWAY = Arrays\n+            .asList(\"natural->water&water->river,stream_pool,canal,lock|waterway->riverbank\");\n+    private static final List<String> WATERWAY_FILTERS = Arrays.asList(\"waterway->*\");\n+\n+    // https://wiki.openstreetmap.org/wiki/Tag:waterway%3Ddam specifies that dams\n+    // may cross other waterways\n+    // Probably should not cross other waterways with the same tag though.\n+    private static final List<String> WATERWAY_CROSSING_IGNORE = Arrays.asList(\"waterway->dam\");\n+\n+    private static final List<String> FALLBACK_INSTRUCTIONS = Arrays.asList(\n+            \"Waterway area (id={0,number,#}) is missing a waterway way.\",\n+            \"Waterway area (id={0,number,#}) has a waterway way, but there are none entering/exiting.\",\n+            \"Waterway area (id={0,number,#}) intersects with at least one other waterway area (id={1}).\");\n+\n+    private static final double MINIMUM_PROPORTION_DEFAULT = 0.01;\n+\n+    private final double minimumIntersect;\n+\n+    // List of TaggableFilters where each filter represents all tags for water areas\n+    // that\n+    // should not overlap", "originalCommit": "2148e21aaf15e86298fd96af1088eb945c660561", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzOTU0NA==", "url": "https://github.com/osmlab/atlas-checks/pull/346#discussion_r485239544", "bodyText": "Please add the configurable items with their default values here.", "author": "Bentleysb", "createdAt": "2020-09-08T22:55:30Z", "path": "config/configuration.json", "diffHunk": "@@ -1068,5 +1068,13 @@\n       \"difficulty\": \"EASY\",\n       \"defaultPriority\": \"LOW\"\n     }\n+  },\n+  \"WaterAreaCheck\": {", "originalCommit": "2148e21aaf15e86298fd96af1088eb945c660561", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a8c3d7d90a595722ec498aecc3510e6085a27f6c", "url": "https://github.com/osmlab/atlas-checks/commit/a8c3d7d90a595722ec498aecc3510e6085a27f6c", "message": "WaterAreaCheck: Remove unnecessary line\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-08T23:27:34Z", "type": "commit"}, {"oid": "cb02bc7a60aea047bf022b32d5f9d2428c4af76a", "url": "https://github.com/osmlab/atlas-checks/commit/cb02bc7a60aea047bf022b32d5f9d2428c4af76a", "message": "WaterAreaCheck: Add default config values\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-08T23:32:21Z", "type": "commit"}, {"oid": "9c8dffd5a7fa94a880d14dc8ff3b9cdd891fd95c", "url": "https://github.com/osmlab/atlas-checks/commit/9c8dffd5a7fa94a880d14dc8ff3b9cdd891fd95c", "message": "WaterAreaCheck: Expand variable names\n\n* Lambda functions have expanded variables\n* Other variables should be expanded\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-09T13:24:01Z", "type": "commit"}, {"oid": "36db6f0f24a70603c54a71494e9136d7ae364cf1", "url": "https://github.com/osmlab/atlas-checks/commit/36db6f0f24a70603c54a71494e9136d7ae364cf1", "message": "WaterAreaCheck: Move discrete checks to separate functions\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-09T14:23:20Z", "type": "commit"}, {"oid": "f5be2474bf21b5248aa656569750b7714690cc28", "url": "https://github.com/osmlab/atlas-checks/commit/f5be2474bf21b5248aa656569750b7714690cc28", "message": "WaterAreaCheck: Configuration: FIXUP: Failing tests\n\n* ConfigurationDeserializer#locateMap had an issue with a configuration variable\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-09T15:03:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjM2OQ==", "url": "https://github.com/osmlab/atlas-checks/pull/346#discussion_r485766369", "bodyText": "Is this going to be addressed in this PR?", "author": "sayas01", "createdAt": "2020-09-09T16:46:06Z", "path": "src/test/java/org/openstreetmap/atlas/checks/validation/areas/WaterAreaCheckTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package org.openstreetmap.atlas.checks.validation.areas;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.Arrays;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.openstreetmap.atlas.checks.configuration.ConfigurationResolver;\n+import org.openstreetmap.atlas.checks.validation.verifier.ConsumerBasedExpectedCheckVerifier;\n+\n+/**\n+ * Tests for WaterAreaCheck\n+ *\n+ * @author Taylor Smock\n+ */\n+public class WaterAreaCheckTest\n+{\n+    @Rule\n+    public WaterAreaCheckTestRule setup = new WaterAreaCheckTestRule();\n+\n+    @Rule\n+    public ConsumerBasedExpectedCheckVerifier verifier = new ConsumerBasedExpectedCheckVerifier();\n+\n+    /**\n+     * This was a test for a false-false positive. The false positive occurred due to the age of the\n+     * Belize pbf, where a waterway was drawn in April 2019 was not present.\n+     */\n+    @Test\n+    public void testBrazilRiverFalsePositive()\n+    {\n+        this.verifier.actual(this.setup.getBrazilRiverFalsePositive(),\n+                new WaterAreaCheck(ConfigurationResolver.emptyConfiguration()));\n+        this.verifier.verifyEmpty();\n+    }\n+\n+    @Test\n+    public void testMangoCreekAndUnnamedWaterwayBad()\n+    {\n+        this.verifier.actual(this.setup.getMangoCreekAtlasBad(),\n+                new WaterAreaCheck(ConfigurationResolver.emptyConfiguration()));\n+        this.verifier.verifyExpectedSize(1);\n+        this.verifier.verify(f -> assertTrue(f.getFlaggedObjects().parallelStream()\n+                .filter(i -> i.getProperties().containsKey(\"identifier\"))\n+                .allMatch(i -> Arrays.asList(\"601378260\", \"265672061\")\n+                        .contains(i.getProperties().get(\"identifier\")))));\n+    }\n+\n+    @Test\n+    public void testMangoCreekAndUnnamedWaterwayGood()\n+    {\n+        this.verifier.actual(this.setup.getMangoCreekAtlasGood(),\n+                new WaterAreaCheck(ConfigurationResolver.emptyConfiguration()));\n+        this.verifier.verifyEmpty();\n+    }\n+\n+    @Test\n+    public void testMangoCreekAndUnnamedWaterwayMissingWaterwayLineBad()\n+    {\n+        this.verifier.actual(this.setup.getMangoCreekAtlasBadWaterway(),\n+                new WaterAreaCheck(ConfigurationResolver.emptyConfiguration()));\n+        this.verifier.verifyExpectedSize(1);\n+        this.verifier.verify(f -> assertTrue(f.getFlaggedObjects().parallelStream()\n+                .allMatch(p -> \"601378260\".equals(p.getProperties().get(\"identifier\")))));\n+    }\n+\n+    @Test\n+    public void testMopanRiverFalsePositive()\n+    {\n+        this.verifier.actual(this.setup.getMopanRiverFalsePositive(),\n+                new WaterAreaCheck(ConfigurationResolver.emptyConfiguration()));\n+        this.verifier.verifyEmpty();\n+    }\n+\n+    @Test\n+    public void testOverlappingPonds()\n+    {\n+        this.verifier.actual(this.setup.getOverlappingPonds(),\n+                new WaterAreaCheck(ConfigurationResolver.emptyConfiguration()));\n+        this.verifier.verifyExpectedSize(1);\n+        // TODO verify actual check", "originalCommit": "f5be2474bf21b5248aa656569750b7714690cc28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5OTU0MA==", "url": "https://github.com/osmlab/atlas-checks/pull/346#discussion_r485799540", "bodyText": "I was intending to go and verify that I got one of the expected objects, but the flagged objects don't (currently) allow me to get the original AtlasObject back out. I could do some reflection to get it working, but I'd prefer to avoid that when I'm not unit testing that specific class.", "author": "tsmock", "createdAt": "2020-09-09T17:37:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NjM2OQ=="}], "type": "inlineReview"}, {"oid": "df3648270c4bd427503aad9f6f0a88c563913293", "url": "https://github.com/osmlab/atlas-checks/commit/df3648270c4bd427503aad9f6f0a88c563913293", "message": "WaterAreaCheck: Add docs\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-09T16:59:08Z", "type": "commit"}, {"oid": "4ab612740b454373fb7f516e1679c8c18fbd8422", "url": "https://github.com/osmlab/atlas-checks/commit/4ab612740b454373fb7f516e1679c8c18fbd8422", "message": "WaterAreaCheckTest: FIXUP: Remove extraneous TODO comment\n\nSigned-off-by: Taylor Smock <tsmock@fb.com>", "committedDate": "2020-09-09T17:33:45Z", "type": "commit"}]}