{"pr_number": 1018, "pr_title": "crash fix: ensure main thread is destructed before Http::Dispatcher", "pr_createdAt": "2020-08-10T23:56:49Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/1018", "timeline": [{"oid": "b5997a22e8c52a90f40a89cce769a4277a4c502b", "url": "https://github.com/envoyproxy/envoy-mobile/commit/b5997a22e8c52a90f40a89cce769a4277a4c502b", "message": "crash fix: ensure main thread is destructed before Http::Dispatcher\n\nCo-authored-by: Jose Nino <jnino@lyft.com>\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-10T23:53:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzNDI1Mw==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1018#discussion_r468334253", "bodyText": "Can we document this inline somewhere? We're now relying on implementation details of how destructors are called, which is very fragile. Tests would be ideal, but I understand this is probably quite difficult to test, so we should at least document it", "author": "rebello95", "createdAt": "2020-08-11T05:27:38Z", "path": "library/common/engine.h", "diffHunk": "@@ -48,12 +48,12 @@ class Engine {\n   envoy_engine_callbacks callbacks_;\n   Thread::MutexBasicLockable mutex_;\n   Thread::CondVar cv_;\n-  std::thread main_thread_;\n   std::unique_ptr<Http::Dispatcher> http_dispatcher_;\n   std::unique_ptr<MobileMainCommon> main_common_ GUARDED_BY(mutex_);\n   Server::Instance* server_{};\n   Server::ServerLifecycleNotifier::HandlePtr postinit_callback_handler_;\n   Event::Dispatcher* event_dispatcher_;\n+  std::thread main_thread_;", "originalCommit": "b5997a22e8c52a90f40a89cce769a4277a4c502b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcwNDk0NQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1018#discussion_r468704945", "bodyText": "We're now relying on implementation details of how destructors are called, which is very fragile\n\nFor better or worse this is a common c++ pattern.\n\nTests would be ideal\n\nAs always agreed. I had the idea for this crash \"fix\" but I am not entirely sure that the situation described here with instructions on the main_thread being executed after destruction of other objects is the actual problem. I tried writing repro tests but was not able to set it up. I have a related PR with engine tests coming up imminently that repros a different trace. I can try an massage that to repro this as well.\n\nCan we document this inline somewhere\n\nAbsolutely, this should be in the comments. Updated.", "author": "junr03", "createdAt": "2020-08-11T16:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzNDI1Mw=="}], "type": "inlineReview"}, {"oid": "3ad3cbf6520a8b5523c9e49fc2a54bc19d114d99", "url": "https://github.com/envoyproxy/envoy-mobile/commit/3ad3cbf6520a8b5523c9e49fc2a54bc19d114d99", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>", "committedDate": "2020-08-11T16:17:14Z", "type": "commit"}]}