{"pr_number": 745, "pr_title": "docs: add docs on `EnvoyClientBuilder`", "pr_createdAt": "2020-03-10T01:08:54Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/745", "timeline": [{"oid": "e21bb28e56b6cf03dc2e15b04198c29e897207aa", "url": "https://github.com/envoyproxy/envoy-mobile/commit/e21bb28e56b6cf03dc2e15b04198c29e897207aa", "message": "docs: add docs on `EnvoyClientBuilder`\n\nResolves https://github.com/lyft/envoy-mobile/issues/715.\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-03-10T01:08:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0MzMyOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/745#discussion_r390043328", "bodyText": "Just a nit: it would make more sense if it was something like https://envoyproxy.envoy-mobile.io?", "author": "buildbreaker", "createdAt": "2020-03-10T01:11:09Z", "path": "docs/root/api/starting_envoy.rst", "diffHunk": "@@ -10,29 +10,130 @@ Starting Envoy\n Starting an instance of Envoy Mobile for making requests is done by creating an ``EnvoyClient``,\n which conforms to the ``HTTPClient`` interface.\n \n-To do so, create an ``EnvoyClientBuilder`` and call ``build()``.\n+To do so, create an ``EnvoyClientBuilder`` and call ``build()`` (see below).\n \n-This builder exposes some of Envoy's configuration options programmatically using builder\n-functions, some of which are demonstrated below:\n+After the client is created, it should be stored and kept in memory in order to be used\n+for issuing requests.\n \n **Kotlin example**::\n \n-  val envoy = AndroidEnvoyClientBuilder(baseContext)\n+  val envoy = AndroidEnvoyClientBuilder(getApplication())\n     .addLogLevel(LogLevel.WARN)\n-    .addStatsFlushSeconds(60)\n     ...\n     .build()\n \n **Swift example**::\n \n   let envoy = try EnvoyClientBuilder()\n     .addLogLevel(.warn)\n-    .addStatsFlushSeconds(60)\n     ...\n     .build()\n \n-After the client is created, it should be stored and kept in memory in order to be used\n-for issuing requests.\n+----------------------\n+``EnvoyClientBuilder``\n+----------------------\n+\n+This type is used to configure an instance of ``EnvoyClient`` before finally\n+creating the client using ``.build()``.\n+\n+Available builders are 1:1 between iOS/Android, and are documented below.\n+\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+``addConnectTimeoutSeconds``\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Specify the timeout for new network connections to hosts in Envoy Mobile clusters.\n+\n+**Example**::\n+\n+  // Kotlin\n+  builder.addConnectTimeoutSeconds(30L)\n+\n+  // Swift\n+  builder.addConnectTimeoutSeconds(30)\n+\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+``addDNSFailureRefreshSeconds``\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Specify the rate at which Envoy Mobile should refresh DNS in states of failure.\n+\n+This should typically be a relatively aggressive range compared to the standard-state DNS refresh\n+rate, as it is required for Envoy Mobile to recover and continue making requests.\n+\n+**Example**::\n+\n+  // Kotlin\n+  builder.addDNSFailureRefreshSeconds(2, 5)\n+\n+  // Swift\n+  builder.addDNSFailureRefreshSeconds(base: 2, max: 5)\n+\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+``addDNSRefreshSeconds``\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Specify the interval at which Envoy should forcefully refresh DNS.\n+\n+**Example**::\n+\n+  // Kotlin\n+  builder.addDNSRefreshSeconds(60L)\n+\n+  // Swift\n+  builder.addDNSRefreshSeconds(60)\n+\n+~~~~~~~~~~~~~~~\n+``addLogLevel``\n+~~~~~~~~~~~~~~~\n+\n+Specify the log level to be used when running the underlying Envoy engine.\n+\n+**Example**::\n+\n+  // Kotlin\n+  builder.addLogLevel(LogLevel.WARN)\n+\n+  // Swift\n+  builder.addLogLevel(.warn)\n+\n+~~~~~~~~~~~~~~~~~~\n+``addStatsDomain``\n+~~~~~~~~~~~~~~~~~~\n+\n+Specify a domain which implements the\n+:tree:`stats endpoint <83908423d46a37574e9a35627df1f3dd9634e5ec/library/common/config_template.cc#L139-L145>`\n+in order to take advantage of the\n+`stats emitted by Envoy <https://www.envoyproxy.io/docs/envoy/latest/configuration/upstream/cluster_manager/cluster_stats>`_\n+(and subsequently Envoy Mobile).\n+\n+Note that only stats specified in the configuration's\n+:tree:`whitelist <83908423d46a37574e9a35627df1f3dd9634e5ec/library/common/config_template.cc#L146-L167>`\n+will be emitted.\n+\n+**Example**::\n+\n+  // Kotlin\n+  builder.addStatsDomain(\"io.envoyproxy.envoy-mobile\")", "originalCommit": "e21bb28e56b6cf03dc2e15b04198c29e897207aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0MzQ3Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/745#discussion_r390043472", "bodyText": "sure", "author": "rebello95", "createdAt": "2020-03-10T01:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0MzMyOA=="}], "type": "inlineReview"}, {"oid": "56255c6f2571d079221e973894471c5942677c68", "url": "https://github.com/envoyproxy/envoy-mobile/commit/56255c6f2571d079221e973894471c5942677c68", "message": "CR\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-03-10T01:12:10Z", "type": "commit"}]}