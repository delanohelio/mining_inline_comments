{"pr_number": 798, "pr_title": "platform: close streams explicitly with data or trailers", "pr_createdAt": "2020-04-20T22:07:11Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/798", "timeline": [{"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2", "url": "https://github.com/envoyproxy/envoy-mobile/commit/fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2", "message": "platform: close streams explicitly with data or trailers\n\nReplaces the `close(trailers: Map<String, List<String>>?)` function with two new functions (one for closing with data, and one for closing with trailers).\n\nThis removes the ambiguity of how a stream will be closed by making the consumer specify it explicitly.\n\nThe change is being done as a precursor for integrating L7 Swift/Kotlin filters, which will have interfaces in which trailers are not nullable.\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-04-20T22:07:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411725387", "bodyText": "Not going to keep the comments?", "author": "buildbreaker", "createdAt": "2020-04-20T22:09:18Z", "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {", "originalCommit": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNzg2NQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411727865", "bodyText": "They're specified in the superclass, so I figured it was better to have them in one place rather than copy-pasted to every implementation. WDYT?", "author": "rebello95", "createdAt": "2020-04-20T22:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMDA2NA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411730064", "bodyText": "Could we also delete the other comments? If it's a lot to change, we can both do it in another PR", "author": "buildbreaker", "createdAt": "2020-04-20T22:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMDQ0OA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411730448", "bodyText": "I'll do it in a follow up PR yep, waiting on this to merge to avoid conflicts", "author": "rebello95", "createdAt": "2020-04-20T22:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0MjQwOQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411742409", "bodyText": "https://github.com/lyft/envoy-mobile/pull/799/files#diff-9652aa5519ef4ba01992a74aaa5cd9b1L10", "author": "rebello95", "createdAt": "2020-04-20T22:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411726392", "bodyText": "What was the rationale for making this required (instead of having something like fun close(byteBuffer: ByteBuffer = ByteBuffer.allocate(0)", "author": "buildbreaker", "createdAt": "2020-04-20T22:11:22Z", "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {\n+    stream.sendTrailers(trailers)\n+  }\n+\n+  override fun close(byteBuffer: ByteBuffer) {", "originalCommit": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyODExOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411728118", "bodyText": "It'd be ambiguous if we did that for trailers as well, right? Consumers calling .close() would no longer be able to differentiate between data and trailers", "author": "rebello95", "createdAt": "2020-04-20T22:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMDY2NA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411730664", "bodyText": "Ah so the change here is to introduce the concept of closing with data versus closing with trailers", "author": "buildbreaker", "createdAt": "2020-04-20T22:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMTcwNA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411731704", "bodyText": "Yes", "author": "rebello95", "createdAt": "2020-04-20T22:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg=="}], "type": "inlineReview"}]}