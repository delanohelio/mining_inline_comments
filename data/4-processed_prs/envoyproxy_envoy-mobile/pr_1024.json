{"pr_number": 1024, "pr_title": "coverage: add unit tests for JvmBridgeUtility", "pr_createdAt": "2020-08-12T03:03:07Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/1024", "timeline": [{"oid": "46d48d766b1088aa82fa44e75e9b321bcbd9e3be", "url": "https://github.com/envoyproxy/envoy-mobile/commit/46d48d766b1088aa82fa44e75e9b321bcbd9e3be", "message": "coverage: add unit tests for JvmBridgeUtility\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-12T03:02:35Z", "type": "commit"}, {"oid": "6abf252d0f1c411a5b58ef36d2a65df886904ddf", "url": "https://github.com/envoyproxy/envoy-mobile/commit/6abf252d0f1c411a5b58ef36d2a65df886904ddf", "message": "update test description\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-12T03:05:56Z", "type": "commit"}, {"oid": "0912b540ca48e862f232ecc5e236cfe4d4b1c96b", "url": "https://github.com/envoyproxy/envoy-mobile/commit/0912b540ca48e862f232ecc5e236cfe4d4b1c96b", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-12T03:52:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3ODkyOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469378928", "bodyText": "This is unfortunate...\n#1027", "author": "buildbreaker", "createdAt": "2020-08-12T16:14:05Z", "path": "library/java/src/io/envoyproxy/envoymobile/engine/BUILD", "diffHunk": "@@ -36,3 +36,9 @@ java_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine/types:envoy_c_types_lib\",\n     ],\n )\n+\n+filegroup(", "originalCommit": "0912b540ca48e862f232ecc5e236cfe4d4b1c96b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3OTUyMg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469379522", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  .usingRecursiveComparison().isEqualTo(expectedHeaders)\n          \n          \n            \n                  .usingRecursiveComparison()\n          \n          \n            \n                  .isEqualTo(expectedHeaders)", "author": "buildbreaker", "createdAt": "2020-08-12T16:14:59Z", "path": "library/java/test/io/envoyproxy/envoymobile/engine/JvmBridgeUtilityTest.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine\n+\n+import org.assertj.core.api.Assertions.assertThat\n+import org.junit.Test\n+\n+class JvmBridgeUtilityTest {\n+\n+  @Test\n+  fun `retrieveHeaders produces a Map with all headers provided via passHeaders`() {\n+    val utility = JvmBridgeUtility()\n+    utility.passHeader(\"test-0\".toByteArray(), \"value-0\".toByteArray(), true)\n+    utility.passHeader(\"test-1\".toByteArray(), \"value-1\".toByteArray(), false)\n+    utility.passHeader(\"test-1\".toByteArray(), \"value-2\".toByteArray(), false)\n+\n+    val headers = utility.retrieveHeaders()\n+    val expectedHeaders = mapOf(\n+      \"test-0\" to listOf(\"value-0\"),\n+      \"test-1\" to listOf(\"value-1\", \"value-2\")\n+    )\n+\n+    assertThat(headers)\n+      .hasSize(2) // Two keys / header name\n+      .usingRecursiveComparison().isEqualTo(expectedHeaders)", "originalCommit": "0912b540ca48e862f232ecc5e236cfe4d4b1c96b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3NzAxOA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469477018", "bodyText": "These two are actually dependently-chained (and you couldn't, for instance, reverse the order of 22 and 23, since 23 changes the type) which was why I put them on one line. I don't feel terribly strongly about it though.", "author": "goaway", "createdAt": "2020-08-12T19:03:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3OTUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MzEwMw==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469383103", "bodyText": "I think we can have 2 separate tests (potentially 3 but up to you):\n\nvalidateCount returns the appropriate value (this can be split into the positive and negative cases but up to you)\nretrieveHeaders() resets the internal count\n\nSeparate question: Wouldn't it be easier if the utility just returned the count value instead of requiring the user to ask it if the utility has N counts?", "author": "buildbreaker", "createdAt": "2020-08-12T16:20:47Z", "path": "library/java/test/io/envoyproxy/envoymobile/engine/JvmBridgeUtilityTest.kt", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine\n+\n+import org.assertj.core.api.Assertions.assertThat\n+import org.junit.Test\n+\n+class JvmBridgeUtilityTest {\n+\n+  @Test\n+  fun `retrieveHeaders produces a Map with all headers provided via passHeaders`() {\n+    val utility = JvmBridgeUtility()\n+    utility.passHeader(\"test-0\".toByteArray(), \"value-0\".toByteArray(), true)\n+    utility.passHeader(\"test-1\".toByteArray(), \"value-1\".toByteArray(), false)\n+    utility.passHeader(\"test-1\".toByteArray(), \"value-2\".toByteArray(), false)\n+\n+    val headers = utility.retrieveHeaders()\n+    val expectedHeaders = mapOf(\n+      \"test-0\" to listOf(\"value-0\"),\n+      \"test-1\" to listOf(\"value-1\", \"value-2\")\n+    )\n+\n+    assertThat(headers)\n+      .hasSize(2) // Two keys / header name\n+      .usingRecursiveComparison().isEqualTo(expectedHeaders)\n+  }\n+\n+  @Test\n+  fun `validateCount checks if the expected number of header values in the map matches the actual`() {", "originalCommit": "0912b540ca48e862f232ecc5e236cfe4d4b1c96b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyMzIzMA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469523230", "bodyText": "We could do that. I don't know that it would necessarily be easier, but it's definitely a valid approach. I was trying to keep the interface scoped pretty narrowly, and nothing really has any business querying the accumulated count outside of validation purposes.", "author": "goaway", "createdAt": "2020-08-12T20:32:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUzNDczNQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469534735", "bodyText": "Oh also, I'm fine with splitting up the tests.", "author": "goaway", "createdAt": "2020-08-12T20:42:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MzEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYzOTU5MA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1024#discussion_r469639590", "bodyText": "Let's split them up :)\nI think it'll be clearer", "author": "buildbreaker", "createdAt": "2020-08-13T01:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MzEwMw=="}], "type": "inlineReview"}, {"oid": "c475d3f51e2997f8fcc442e92d5ed6e8c25cc1d7", "url": "https://github.com/envoyproxy/envoy-mobile/commit/c475d3f51e2997f8fcc442e92d5ed6e8c25cc1d7", "message": "split up tests and add further coverage\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-14T03:17:01Z", "type": "commit"}, {"oid": "486aa50f5b367f38c01b0828115db63b639df804", "url": "https://github.com/envoyproxy/envoy-mobile/commit/486aa50f5b367f38c01b0828115db63b639df804", "message": "fix format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-08-14T08:43:22Z", "type": "commit"}]}