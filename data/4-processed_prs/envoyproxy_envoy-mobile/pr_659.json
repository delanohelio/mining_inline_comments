{"pr_number": 659, "pr_title": "ios/android: allow zero for total upstream timeouts", "pr_createdAt": "2020-02-04T19:58:28Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/659", "timeline": [{"oid": "ab50f6367f0d3c94017578c6d807d5339ab1073a", "url": "https://github.com/envoyproxy/envoy-mobile/commit/ab50f6367f0d3c94017578c6d807d5339ab1073a", "message": "ios/android: allow zero for total upstream timeouts\n\nWe should allow zero to be specified for `totalUpstreamTimeoutMS`, which effectively [disables the upstream timeout per Envoy's docs](https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route_components.proto#envoy-api-field-route-routeaction-timeout).\n\nThis can be useful for consumers who only want to timeout on a per-request basis (rather than timing out all retries in aggregate).\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T19:57:52Z", "type": "commit"}, {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214", "url": "https://github.com/envoyproxy/envoy-mobile/commit/2816ba5f7ddaa936cabc69f7a894bdffc135f214", "message": "optionality\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T20:19:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374902236", "bodyText": "you still need to check for totalUpstreamTimeoutMS = 0 here, right?", "author": "Augustyniak", "createdAt": "2020-02-04T20:22:25Z", "path": "library/swift/src/RetryPolicy.swift", "diffHunk": "@@ -47,13 +47,15 @@ public final class RetryPolicy: NSObject {\n   ///                                     retries. Spans the point at which the entire downstream\n   ///                                     request has been processed and when the upstream\n   ///                                     response has been completely processed.\n-  ///                                     Zero may be specified to disable the upstream timeout.\n+  ///                                     Nil may be specified to disable the upstream timeout.\n   public init(maxRetryCount: UInt, retryOn: [RetryRule], perRetryTimeoutMS: UInt? = nil,\n-              totalUpstreamTimeoutMS: UInt = 15_000)\n+              totalUpstreamTimeoutMS: UInt? = 15_000)\n   {\n-    if let perRetryTimeoutMS = perRetryTimeoutMS {\n-      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS || totalUpstreamTimeoutMS == 0,\n-             \"Per-retry timeout must be <= total timeout if total timeout != 0\")\n+    if let perRetryTimeoutMS = perRetryTimeoutMS,\n+      let totalUpstreamTimeoutMS = totalUpstreamTimeoutMS\n+    {\n+      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS,", "originalCommit": "2816ba5f7ddaa936cabc69f7a894bdffc135f214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjk1Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374902952", "bodyText": "assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS && totalUpstreamTimeoutMS != 0)", "author": "Augustyniak", "createdAt": "2020-02-04T20:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMzU2Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374933562", "bodyText": "Personally I think that omitting the totalUpstreamTimeoutMS != 0 exclusion from the assert is probably preferred here since the consumer will then change the 0 to nil to achieve the same behavior (in line with the documentation of this function). Thoughts?", "author": "rebello95", "createdAt": "2020-02-04T21:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzkzMQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374937931", "bodyText": "One question - What happens if I provide perRetryTimeoutMS = 0 and totalUpstreamTimeoutMS = 0? I would expect this to break since the docs says that a user should use nil if they want totalUpstreamTimeoutMS to be ignored.", "author": "Augustyniak", "createdAt": "2020-02-04T21:39:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1OTk2Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374959962", "bodyText": "That's fair, I can update to include it in the assert.", "author": "rebello95", "createdAt": "2020-02-04T22:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMzUyNQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374903525", "bodyText": "let's add a test case for when per request timeout is equal to 0 (not nil) and per retry timeout is greater than 0.", "author": "Augustyniak", "createdAt": "2020-02-04T20:25:14Z", "path": "library/swift/test/RetryPolicyMapperTests.swift", "diffHunk": "@@ -23,4 +23,9 @@ final class RetryPolicyMapperTests: XCTestCase {\n     let policy = RetryPolicy(maxRetryCount: 123, retryOn: RetryRule.allCases)\n     XCTAssertNil(policy.outboundHeaders()[\"x-envoy-upstream-rq-per-try-timeout-ms\"])\n   }\n+\n+  func testConvertingToHeadersWithoutUpstreamTimeoutIncludesZeroForTimeoutHeader() {", "originalCommit": "2816ba5f7ddaa936cabc69f7a894bdffc135f214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMjcyOQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374932729", "bodyText": "Considered that but iOS doesn't really provide a way to test that asserts fail, and making the builder throw doesn't really seem worth it here", "author": "rebello95", "createdAt": "2020-02-04T21:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMzUyNQ=="}], "type": "inlineReview"}, {"oid": "ce1eceb39eda941d027a14347e70416798c8b672", "url": "https://github.com/envoyproxy/envoy-mobile/commit/ce1eceb39eda941d027a14347e70416798c8b672", "message": "fixups\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T21:30:00Z", "type": "commit"}, {"oid": "2e5622c99a083f65e27d1c8c891886bf7b82072d", "url": "https://github.com/envoyproxy/envoy-mobile/commit/2e5622c99a083f65e27d1c8c891886bf7b82072d", "message": "CR fixes\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T22:35:34Z", "type": "commit"}, {"oid": "9be03d6a30cbe803fb0acdf5c36ccd4ea16f8817", "url": "https://github.com/envoyproxy/envoy-mobile/commit/9be03d6a30cbe803fb0acdf5c36ccd4ea16f8817", "message": "tweak docs\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T22:43:28Z", "type": "commit"}, {"oid": "d1020d012536c10cb44291dc3eb75398d0a8f2e5", "url": "https://github.com/envoyproxy/envoy-mobile/commit/d1020d012536c10cb44291dc3eb75398d0a8f2e5", "message": "update assertion text\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T22:45:23Z", "type": "commit"}, {"oid": "bae6f688aa37877e248fb697b262f787a67c1b7b", "url": "https://github.com/envoyproxy/envoy-mobile/commit/bae6f688aa37877e248fb697b262f787a67c1b7b", "message": "fixup\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>", "committedDate": "2020-02-04T22:51:58Z", "type": "commit"}]}