{"pr_number": 1080, "pr_title": "filters: setup unit test coverage for PlatformBridgeFilter", "pr_createdAt": "2020-09-10T11:18:45Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/1080", "timeline": [{"oid": "9d741bc5db204eb080404d9e48df7d42f84d70a1", "url": "https://github.com/envoyproxy/envoy-mobile/commit/9d741bc5db204eb080404d9e48df7d42f84d70a1", "message": "filters: add basic unit test coverage to PlatformBridgeFilter\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-09-10T11:17:48Z", "type": "commit"}, {"oid": "2d0df6fde5c51d610e4895b1b49a2a76b9ba1536", "url": "https://github.com/envoyproxy/envoy-mobile/commit/2d0df6fde5c51d610e4895b1b49a2a76b9ba1536", "message": "fix and pass test\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-09-10T23:26:08Z", "type": "commit"}, {"oid": "aed497557a38657ee1d3662d97cf30d43f11d42e", "url": "https://github.com/envoyproxy/envoy-mobile/commit/aed497557a38657ee1d3662d97cf30d43f11d42e", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-09-10T23:28:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjcyMjc2Nw==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1080#discussion_r486722767", "bodyText": "nit: could we rename this to be invocations instead of just i?", "author": "buildbreaker", "createdAt": "2020-09-11T01:36:57Z", "path": "test/common/extensions/filters/http/platform_bridge/platform_bridge_filter_test.cc", "diffHunk": "@@ -0,0 +1,88 @@\n+#include \"test/mocks/http/mocks.h\"\n+#include \"test/test_common/utility.h\"\n+\n+#include \"gtest/gtest.h\"\n+#include \"library/common/api/external.h\"\n+#include \"library/common/extensions/filters/http/platform_bridge/filter.h\"\n+#include \"library/common/extensions/filters/http/platform_bridge/filter.pb.h\"\n+\n+using testing::ByMove;\n+using testing::Return;\n+\n+namespace Envoy {\n+namespace Extensions {\n+namespace HttpFilters {\n+namespace PlatformBridge {\n+namespace {\n+\n+class PlatformBridgeFilterTest : public testing::Test {\n+public:\n+  void setUpFilter(std::string&& yaml, envoy_http_filter* platform_filter) {\n+    envoymobile::extensions::filters::http::platform_bridge::PlatformBridge config;\n+    TestUtility::loadFromYaml(yaml, config);\n+    Api::External::registerApi(config.platform_filter_name(), platform_filter);\n+\n+    config_ = std::make_shared<PlatformBridgeFilterConfig>(config);\n+    filter_ = std::make_unique<PlatformBridgeFilter>(config_);\n+    filter_->setDecoderFilterCallbacks(decoder_callbacks_);\n+    filter_->setEncoderFilterCallbacks(encoder_callbacks_);\n+  }\n+\n+  typedef struct {\n+    unsigned int init_filter_calls;\n+    unsigned int on_request_headers_calls;\n+    unsigned int on_request_data_calls;\n+    unsigned int on_request_trailers_calls;\n+    unsigned int on_response_headers_calls;\n+    unsigned int on_response_data_calls;\n+    unsigned int on_response_trailers_calls;\n+    unsigned int release_filter_calls;\n+  } filter_invocations;\n+\n+  PlatformBridgeFilterConfigSharedPtr config_{};\n+  std::unique_ptr<PlatformBridgeFilter> filter_{};\n+  NiceMock<Http::MockStreamDecoderFilterCallbacks> decoder_callbacks_;\n+  NiceMock<Http::MockStreamEncoderFilterCallbacks> encoder_callbacks_;\n+};\n+\n+TEST_F(PlatformBridgeFilterTest, BasicContinueOnRequestHeaders) {\n+  envoy_http_filter platform_filter;\n+  filter_invocations i = {0, 0, 0, 0, 0, 0, 0, 0};", "originalCommit": "aed497557a38657ee1d3662d97cf30d43f11d42e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "33bee0dc72b498638d835f288556f2597af1e623", "url": "https://github.com/envoyproxy/envoy-mobile/commit/33bee0dc72b498638d835f288556f2597af1e623", "message": "rename variable\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-09-11T03:12:36Z", "type": "commit"}]}