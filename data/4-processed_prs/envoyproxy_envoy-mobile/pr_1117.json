{"pr_number": 1117, "pr_title": "stats: add gauge methods to engine and interface layers", "pr_createdAt": "2020-09-22T21:32:40Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/1117", "timeline": [{"oid": "c52c8d7b2573b6a3e686aa290ec874125dc21ddf", "url": "https://github.com/envoyproxy/envoy-mobile/commit/c52c8d7b2573b6a3e686aa290ec874125dc21ddf", "message": "stats: add gauge methods to engine and interface layers\n\nSigned-off-by: Jingwei Hao <jingweih@lyft.com>", "committedDate": "2020-09-22T21:29:17Z", "type": "commit"}, {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8", "url": "https://github.com/envoyproxy/envoy-mobile/commit/7621fb1c3c8d0a072a07cc87be29d5e7d12553e8", "message": "lint\n\nSigned-off-by: Jingwei Hao <jingweih@lyft.com>", "committedDate": "2020-09-22T23:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5OTA3Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r493099072", "bodyText": "moved to main_interface_test", "author": "jingwei99", "createdAt": "2020-09-23T00:02:08Z", "path": "test/common/engine_test.cc", "diffHunk": "@@ -49,42 +49,4 @@ TEST_F(EngineTest, EarlyExit) {\n \n   start_stream(0, {});\n }\n-\n-// TODO: move to main_interface_test.", "originalCommit": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNTUzMw==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494525533", "bodyText": "thanks!", "author": "junr03", "createdAt": "2020-09-24T18:28:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5OTA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjIyNg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494526226", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            const std::string CONFIG =\n          \n          \n            \n            const std::string MINIMAL_NOOP_CONFIG =", "author": "junr03", "createdAt": "2020-09-24T18:29:07Z", "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.\n+// There is nothing functional about the config, as the created stream is only used for\n+// send_metadata.\n+const std::string CONFIG =", "originalCommit": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjUxNA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494526514", "bodyText": "do you mind updating the comment, as this is now used in more places?", "author": "junr03", "createdAt": "2020-09-24T18:29:25Z", "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.\n+// There is nothing functional about the config, as the created stream is only used for\n+// send_metadata.", "originalCommit": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNzUyMQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494527521", "bodyText": "There is nothing functional about the config, as the created stream is only used for send_metadata. This part of the comment (and similar parts in other deleted comments) could be left in the test itself explaining why the minimal config is being used.", "author": "junr03", "createdAt": "2020-09-24T18:30:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjUxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjYzNA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494526634", "bodyText": "Thanks! Great clean up", "author": "junr03", "createdAt": "2020-09-24T18:29:33Z", "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.", "originalCommit": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b9b33a1613ca58539a681e0158a99628d52ea6de", "url": "https://github.com/envoyproxy/envoy-mobile/commit/b9b33a1613ca58539a681e0158a99628d52ea6de", "message": "address comments\n\nSigned-off-by: Jingwei Hao <jingweih@lyft.com>", "committedDate": "2020-09-24T20:31:38Z", "type": "commit"}, {"oid": "d031c19053e364e893a8bee17e0ed3fd0fcc3ea8", "url": "https://github.com/envoyproxy/envoy-mobile/commit/d031c19053e364e893a8bee17e0ed3fd0fcc3ea8", "message": "precommit\n\nSigned-off-by: Jingwei Hao <jingweih@lyft.com>", "committedDate": "2020-09-24T20:55:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMjkyNQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494612925", "bodyText": "I had originally been thinking we could group all stats-recording functions by prefixing them with record*. These could be called recordGuageSet, recordGuageAdd, recordGuageSub. recordCounter could be change to recordCounterInc or stay the same. What do you think?", "author": "goaway", "createdAt": "2020-09-24T21:11:27Z", "path": "library/common/engine.h", "diffHunk": "@@ -39,10 +39,30 @@ class Engine {\n    * Increment a counter with a given string of elements and by the given count.\n    * @param elements, joined elements of the timeseries.\n    * @param count, amount to add to the counter.\n-   * @param envoy_status_t, the resulting status of the operation.\n    */\n   envoy_status_t recordCounter(const std::string& elements, uint64_t count);\n \n+  /**\n+   * Set a gauge of a given string of elements with the given value.\n+   * @param elements, joined elements of the timeseries.\n+   * @param value, value to set to the gauge.\n+   */\n+  envoy_status_t setGauge(const std::string& elements, uint64_t value);", "originalCommit": "d031c19053e364e893a8bee17e0ed3fd0fcc3ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0OTE5MA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494649190", "bodyText": "Grouping all the stats-recording functions by the same prefix sounds a good idea to me.\nI'll update the gauge related methods to the suggested names in this pr.\nAs for the renaming of recordCounter, I assume we want the renaming to go all the way to the platform apis. It will be a breaking change, and I will split that change into a separate pr.\nHow does this plan sound? @goaway", "author": "jingwei99", "createdAt": "2020-09-24T22:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMjkyNQ=="}], "type": "inlineReview"}, {"oid": "fd739c99bf072b7be0e68bd9018cf05a00da1b4d", "url": "https://github.com/envoyproxy/envoy-mobile/commit/fd739c99bf072b7be0e68bd9018cf05a00da1b4d", "message": "update method names\n\nSigned-off-by: Jingwei Hao <jingweih@lyft.com>", "committedDate": "2020-09-25T20:21:14Z", "type": "commit"}, {"oid": "8aa52e660770e53cd0ed942d7820cf5c99a3dbe8", "url": "https://github.com/envoyproxy/envoy-mobile/commit/8aa52e660770e53cd0ed942d7820cf5c99a3dbe8", "message": "Merge branch 'main' into gauge", "committedDate": "2020-09-25T21:47:00Z", "type": "commit"}]}