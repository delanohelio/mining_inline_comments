{"pr_number": 1147, "pr_title": "examples: add AsyncDemoFilter to swift example app", "pr_createdAt": "2020-10-27T14:07:31Z", "pr_url": "https://github.com/envoyproxy/envoy-mobile/pull/1147", "timeline": [{"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "url": "https://github.com/envoyproxy/envoy-mobile/commit/88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "message": "examples: add AsyncDemoFilter to swift example app\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-10-27T14:03:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzQxMg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512873412", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class AsyncDemoFilter: AsyncResponseFilter {\n          \n          \n            \n            final class AsyncDemoFilter: AsyncResponseFilter {", "author": "rebello95", "createdAt": "2020-10-27T17:10:06Z", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {", "originalCommit": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3ODY3Mg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512878672", "bodyText": "Would also add a docstring above", "author": "rebello95", "createdAt": "2020-10-27T17:17:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzkxNA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512873914", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private var internalCallbacks: ResponseFilterCallbacks?\n          \n          \n            \n              private lazy var callbacks: ResponseFilterCallbacks = {\n          \n          \n            \n                internalCallbacks! //swiftlint:disable:this force_unwrapping\n          \n          \n            \n              }()\n          \n          \n            \n              private var callbacks: ResponseFilterCallbacks!", "author": "rebello95", "createdAt": "2020-10-27T17:10:51Z", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()", "originalCommit": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMTc3NA==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512911774", "bodyText": "Nice, I figured you must know a more idiomatic way of doing this. :)", "author": "goaway", "createdAt": "2020-10-27T17:59:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NDMyMg==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512874322", "bodyText": "Might be nice to add inline comments to explain what it's doing (since these serve as demos for readers looking to use the library)", "author": "rebello95", "createdAt": "2020-10-27T17:11:25Z", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()\n+\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    return .stopIteration\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    if endStream {", "originalCommit": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NDc1Ng==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512874756", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                self.internalCallbacks = callbacks\n          \n          \n            \n                self.callbacks = callbacks", "author": "rebello95", "createdAt": "2020-10-27T17:12:00Z", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()\n+\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    return .stopIteration\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    if endStream {\n+      callbacks.resumeResponse()\n+    }\n+    return .stopIterationAndBuffer\n+  }\n+\n+  func onResponseTrailers(\n+    _ trailers: ResponseTrailers\n+  ) -> FilterTrailersStatus<ResponseHeaders, ResponseTrailers> {\n+    callbacks.resumeResponse()\n+    return .stopIteration\n+  }\n+\n+  func setResponseFilterCallbacks(_ callbacks: ResponseFilterCallbacks) {\n+    self.internalCallbacks = callbacks", "originalCommit": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NzUxOQ==", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512877519", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                builder.add(name: \"async-filter-demo\", value: \"1\")\n          \n          \n            \n                  .add(name: \"async-filter-demo\", value: \"1\")", "author": "rebello95", "createdAt": "2020-10-27T17:16:05Z", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()\n+\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    return .stopIteration\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    if endStream {\n+      callbacks.resumeResponse()\n+    }\n+    return .stopIterationAndBuffer\n+  }\n+\n+  func onResponseTrailers(\n+    _ trailers: ResponseTrailers\n+  ) -> FilterTrailersStatus<ResponseHeaders, ResponseTrailers> {\n+    callbacks.resumeResponse()\n+    return .stopIteration\n+  }\n+\n+  func setResponseFilterCallbacks(_ callbacks: ResponseFilterCallbacks) {\n+    self.internalCallbacks = callbacks\n+  }\n+\n+  func onResumeResponse(\n+    headers: ResponseHeaders?,\n+    data: Data?,\n+    trailers: ResponseTrailers?,\n+    endStream: Bool\n+  ) -> FilterResumeStatus<ResponseHeaders, ResponseTrailers> {\n+    guard let headers = headers else {\n+      // Iteration stopped on headers, so headers must be present.\n+      fatalError(\"Filter behavior violation!\")\n+    }\n+    let builder = headers.toResponseHeadersBuilder()\n+    builder.add(name: \"async-filter-demo\", value: \"1\")", "originalCommit": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6e8a21de9cf7f66ece9b41adc876f1189dceaf44", "url": "https://github.com/envoyproxy/envoy-mobile/commit/6e8a21de9cf7f66ece9b41adc876f1189dceaf44", "message": "updates for comments\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-10-27T19:40:19Z", "type": "commit"}, {"oid": "aa22ac22ee340f1fc28e01614fa9abbe02c92099", "url": "https://github.com/envoyproxy/envoy-mobile/commit/aa22ac22ee340f1fc28e01614fa9abbe02c92099", "message": "typo\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>", "committedDate": "2020-10-27T20:06:55Z", "type": "commit"}]}