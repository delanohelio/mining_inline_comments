{"pr_number": 388, "pr_title": "Migrate pxf-hive to Spring Boot", "pr_createdAt": "2020-06-18T22:14:56Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/388", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMjkzNg==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442532936", "bodyText": "would \"Ensure ...\" better go into HINT field or that is a separate effort ?", "author": "denalex", "createdAt": "2020-06-18T22:20:18Z", "path": "automation/tincrepo/main/pxf/features/hive/errors/partitionNameMismatch/expected/query01.ans", "diffHunk": "@@ -18,5 +15,8 @@\n --\n -- end_matchsubs\n SELECT * from pxf_hive_small_data ORDER BY t1;\n-ERROR:  remote component error (500) from 'SOME_IP:SOME_PORT':  type  Exception Report   Message  Column 's2' does not exist in the Hive schema or Hive Partition. Ensure the column or partition exists and check the name spelling and case   Description  The server encountered an unexpected condition that prevented it from fulfilling the request.   Exception   java.lang.IllegalArgumentException: Column 's2' does not exist in the Hive schema or Hive Partition. Ensure the column or partition exists and check the name spelling and case (libchurl.c:xxx)\n+ERROR:  PXF server error : Column 's2' does not exist in the Hive schema or Hive Partition. Ensure the column or partition exists and check the name spelling and case", "originalCommit": "fa4094f20ae35f9e401f8a43dc97faf940519b90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDg3Mw==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442544873", "bodyText": "Good point. I can do this", "author": "frankgh", "createdAt": "2020-06-18T22:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMjkzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMzk3MQ==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442533971", "bodyText": "I thought we are not using log4j 1.2 anymore", "author": "denalex", "createdAt": "2020-06-18T22:23:22Z", "path": "server/build.gradle", "diffHunk": "@@ -82,8 +84,12 @@ configure(javaProjects) {\n             dependency(\"com.fasterxml.jackson.core:jackson-core:2.11.0\")\n             dependency(\"com.fasterxml.jackson.core:jackson-annotations:2.11.0\")\n \n-            dependency(\"org.apache.httpcomponents:httpcore:4.4.9\")\n-            dependency(\"org.apache.httpcomponents:httpclient:4.5.5\")\n+            dependency(\"joda-time:joda-time:2.8.1\")\n+\n+            dependency(\"org.apache.commons:commons-lang3:3.10\")\n+\n+            dependency(\"org.slf4j:slf4j-api:1.7.30\")\n+            dependency(\"org.slf4j:slf4j-log4j12:1.7.30\")", "originalCommit": "fa4094f20ae35f9e401f8a43dc97faf940519b90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDgzNw==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442544837", "bodyText": "it's a transitive dependency needed by some hadoop jar. A ClassNotFoundException is thrown if misssing", "author": "frankgh", "createdAt": "2020-06-18T22:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMzk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzOTEzNw==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442539137", "bodyText": "what if it is a subclass, does it need configuration also ? ideally should check class-level isAssignableFrom but this is existing code, I guess, so no need to change.", "author": "denalex", "createdAt": "2020-06-18T22:39:44Z", "path": "server/pxf-hive/src/main/java/org/greenplum/pxf/plugins/hive/utilities/HiveUtilities.java", "diffHunk": "@@ -115,25 +110,27 @@\n     }\n \n     /**\n-     * Verifies modifiers are null or integers.\n-     * Modifier is a value assigned to a type,\n-     * e.g. size of a varchar - varchar(size).\n+     * Creates the partition InputFormat.\n      *\n-     * @param modifiers type modifiers to be verified\n-     * @return whether modifiers are null or integers\n+     * @param inputFormatName input format class name\n+     * @param jobConf         configuration data for the Hadoop framework\n+     * @return a {@link org.apache.hadoop.mapred.InputFormat} derived object\n+     * @throws Exception if failed to create input format\n      */\n-    private static boolean verifyIntegerModifiers(String[] modifiers) {\n-        if (modifiers == null) {\n-            return true;\n-        }\n-        for (String modifier : modifiers) {\n-            if (StringUtils.isBlank(modifier) || !StringUtils.isNumeric(modifier)) {\n-                return false;\n-            }\n+    public InputFormat<?, ?> makeInputFormat(String inputFormatName,\n+                                             JobConf jobConf)\n+            throws Exception {\n+        Class<?> c = Class.forName(inputFormatName, true,\n+                JavaUtils.getClassLoader());\n+        InputFormat<?, ?> inputFormat = (InputFormat<?, ?>) c.getDeclaredConstructor().newInstance();\n+\n+        if (\"org.apache.hadoop.mapred.TextInputFormat\".equals(inputFormatName)) {\n+            // TextInputFormat needs a special configuration\n+            ((TextInputFormat) inputFormat).configure(jobConf);", "originalCommit": "fa4094f20ae35f9e401f8a43dc97faf940519b90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MDEzOA==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442580138", "bodyText": "We can change it I guess", "author": "frankgh", "createdAt": "2020-06-19T01:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzOTEzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MzU4NA==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442583584", "bodyText": "instead of harcoding the string , I am doing class.getName now", "author": "frankgh", "createdAt": "2020-06-19T01:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzOTEzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MDA5MQ==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442540091", "bodyText": "what if someone in China runs this ? would their default charset be different ?", "author": "denalex", "createdAt": "2020-06-18T22:42:37Z", "path": "server/pxf-jdbc/src/main/java/org/greenplum/pxf/plugins/jdbc/JdbcAccessor.java", "diffHunk": "@@ -325,7 +326,7 @@ private String getQueryText() {\n             if (LOG.isDebugEnabled()) {\r\n                 LOG.debug(\"Reading text of query={} from {}\", queryName, queryFile.getCanonicalPath());\r\n             }\r\n-            queryText = FileUtils.readFileToString(queryFile);\r\n+            queryText = FileUtils.readFileToString(queryFile, Charset.defaultCharset());\r", "originalCommit": "fa4094f20ae35f9e401f8a43dc97faf940519b90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MDA5Mg==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442580092", "bodyText": "FileUtils.readFileToString(String) is deprecated, so I switched to using FileUtils.readFileToString(String, Charset) with the default implementation. Effectively making no changes to the current implementation.", "author": "frankgh", "createdAt": "2020-06-19T01:12:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MDA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjA3Mw==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442542073", "bodyText": "what are these new files for ?", "author": "denalex", "createdAt": "2020-06-18T22:49:01Z", "path": "server/pxf-service/src/main/resources/hiveserver2-site.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?><configuration/>\n+<!--\n+  This file is required because initialization of HiveConf fails when it\n+  attempts to find the file in the classloader, then in HIVE_CONF_DIR, then\n+  HIVE_HOME, and finally it tries to find the file in the parent directory\n+  of the jar \"new File(new File(jarUri).getParentFile(), nameInConf)\".\n+  However, because the jar is an \"opaque\" jar (A URI is opaque if, and only if,\n+  it is absolute and its scheme-specific part does not begin with a slash\n+  character ('/'). An opaque URI has a scheme, a scheme-specific part, and\n+  possibly a fragment; all other components are undefined) the `File(jarUri)`\n+  call throws an IllegalArgumentException which causes the HiveConf class to\n+  completely fail to load. Adding this file, allows the `findConfigFile` method\n+  in HiveConf find the desired file by doing `classLoader.getResource(name)`\n+  and it prevents going to the failing branch of the code.\n+-->", "originalCommit": "fa4094f20ae35f9e401f8a43dc97faf940519b90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDYyNg==", "url": "https://github.com/greenplum-db/pxf/pull/388#discussion_r442544626", "bodyText": "HiveConf was failing to load because the static { } initialization block would throw an exception. I reported this issue https://issues.apache.org/jira/browse/HIVE-23700\nAdding these files allows HiveConf static block to succeed. Without these files, HiveConf fails to load and ClassNotFoundException is thrown", "author": "frankgh", "createdAt": "2020-06-18T22:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjA3Mw=="}], "type": "inlineReview"}, {"oid": "cc4336b9cf32b4cd6340e388fd1dfc74e3cd424b", "url": "https://github.com/greenplum-db/pxf/commit/cc4336b9cf32b4cd6340e388fd1dfc74e3cd424b", "message": "Migrate pxf-hive to Spring Boot\n\n- Update top level build.gradle to include pxf-hive\n- Add new build.gradle for pxf-hive\n- all existing unit tests should be ported to junit 5\n- The hive group for automation is passing", "committedDate": "2020-06-18T23:13:18Z", "type": "commit"}, {"oid": "cc4336b9cf32b4cd6340e388fd1dfc74e3cd424b", "url": "https://github.com/greenplum-db/pxf/commit/cc4336b9cf32b4cd6340e388fd1dfc74e3cd424b", "message": "Migrate pxf-hive to Spring Boot\n\n- Update top level build.gradle to include pxf-hive\n- Add new build.gradle for pxf-hive\n- all existing unit tests should be ported to junit 5\n- The hive group for automation is passing", "committedDate": "2020-06-18T23:13:18Z", "type": "forcePushed"}, {"oid": "e07c45427c38f2f0e4897fe28996740243bd9319", "url": "https://github.com/greenplum-db/pxf/commit/e07c45427c38f2f0e4897fe28996740243bd9319", "message": "Address PR feedback", "committedDate": "2020-06-19T01:15:16Z", "type": "commit"}, {"oid": "261e39acf9ed5e40cc9f1022e1109833a2403b51", "url": "https://github.com/greenplum-db/pxf/commit/261e39acf9ed5e40cc9f1022e1109833a2403b51", "message": "Fix expected message for HiveTest#columnNameMismatch", "committedDate": "2020-06-19T01:21:17Z", "type": "commit"}, {"oid": "d832c9002603a4ec7c0e7c699aa59fcc04b5a371", "url": "https://github.com/greenplum-db/pxf/commit/d832c9002603a4ec7c0e7c699aa59fcc04b5a371", "message": "Remove flakiness from testMultiThreadedAccessToFragments test", "committedDate": "2020-06-19T02:13:00Z", "type": "commit"}, {"oid": "621db71bbc7af58cf04b9cf41b9ff4bdbe7926b2", "url": "https://github.com/greenplum-db/pxf/commit/621db71bbc7af58cf04b9cf41b9ff4bdbe7926b2", "message": "Improve FakeRequestParser", "committedDate": "2020-06-19T11:05:28Z", "type": "commit"}, {"oid": "8719d68ee0de96eeb2fc5c5b9106bb846e7db8eb", "url": "https://github.com/greenplum-db/pxf/commit/8719d68ee0de96eeb2fc5c5b9106bb846e7db8eb", "message": "Route java.util.logging to Log4j 2\n\nTo ensure that debug logging performed using java.util.logging is routed\ninto Log4j 2, configure its JDK logging adapter by setting the\njava.util.logging.manager system property to\norg.apache.logging.log4j.jul.LogManager.\n\nhttps://docs.spring.io/spring-boot/docs/1.5.x/reference/html/howto-logging.html#howto-configure-log4j-for-logging", "committedDate": "2020-06-19T16:03:06Z", "type": "commit"}]}