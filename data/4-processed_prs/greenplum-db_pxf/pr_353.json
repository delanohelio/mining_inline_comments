{"pr_number": 353, "pr_title": "introduced RPM targets", "pr_createdAt": "2020-05-06T22:20:52Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/353", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyMjA0Mw==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421522043", "bodyText": "how about cleaning instead of doing a rm -rf build/stage?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            stage:\n          \n          \n            \n            \trm -rf build/stage\n          \n          \n            \n            stage: clean", "author": "frankgh", "createdAt": "2020-05-07T13:53:40Z", "path": "Makefile", "diffHunk": "@@ -37,6 +40,7 @@ install:\n \tmake -C server install\n \n stage:\n+\trm -rf build/stage", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MTY5NA==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421671694", "bodyText": "clean will wipe out all built artifacts in subprojects, here we are just making sure that the stage directory is clean and ready to receive new artifacts.", "author": "denalex", "createdAt": "2020-05-07T17:28:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyMjA0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5MDA4OQ==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421590089", "bodyText": "I think we deprecated the reference guide a long time ago no?", "author": "frankgh", "createdAt": "2020-05-07T15:22:38Z", "path": "README.md", "diffHunk": "@@ -7,14 +7,19 @@\n Introduction\n ============\n \n-PXF is an extensible framework that allows a distributed database like GPDB to query external data files, whose metadata is not managed by the database.\n-PXF includes built-in connectors for accessing data that exists inside HDFS files, Hive tables, HBase tables and more.\n-Users can also create their own connectors to other data storages or processing engines.\n-To create these connectors using JAVA plugins, see the PXF API and Reference Guide onGPDB.\n+PXF is an extensible framework that allows a distributed database like Greenplum to query external data files, whose metadata is not managed by the database.\n+PXF includes built-in connectors for accessing data that exists inside HDFS files, Hive tables, HBase tables, JDBC-accessible databases and more.\n+Users can also create their own connectors to other data storage or processing engines.\n+To create these connectors using JAVA plugins, see the PXF API and Reference Guide on GPDB.", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MjQwMA==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421672400", "bodyText": "probably, I can remove this line.", "author": "denalex", "createdAt": "2020-05-07T17:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5MDA4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5NDYzMg==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421594632", "bodyText": "so maven is another dependency required to run automation, we install it in our docker images, maybe add it in this list also?", "author": "frankgh", "createdAt": "2020-05-07T15:28:34Z", "path": "README.md", "diffHunk": "@@ -58,50 +63,53 @@ ln -s ~/<git_repos_root> ~/workspace\n \n To build PXF, you must have:\n \n-- JDK 1.8 to compile (PXF runs on Java 8 and Java 11)\n-- Go (1.9 or later)\n-- unzip\n-\n-Export your `JAVA_HOME`.\n-\n-```\n-export JAVA_HOME=<PATH_TO_YOUR_JAVA_HOME>\n-```\n-\n-To install Go on CentOS, `sudo yum install go`.\n-\n-For other platforms, see the [Go downloads page](https://golang.org/dl/).\n-\n-Make sure to export your `GOPATH` and add go to your `PATH`. For example:\n-\n-```\n-export GOPATH=$HOME/go\n-export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n-```\n-\n-Once you have installed Go, you will need the `dep` and `ginkgo` tools, which install Go dependencies and run Go tests,\n-respectively. Assuming `go` is on your `PATH`, you can run:\n-\n-```\n-go get github.com/golang/dep/cmd/dep\n-go get github.com/onsi/ginkgo/ginkgo\n-```\n-\n-to install them.\n-\n-## How to Build\n-PXF uses gradle for build and has a wrapper makefile for abstraction\n+1. GCC compiler, `make` system, `unzip` package ", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5NTUxMw==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421595513", "bodyText": "should we make the dev image public? since we already were doing that for the other image", "author": "frankgh", "createdAt": "2020-05-07T15:29:41Z", "path": "README.md", "diffHunk": "@@ -124,30 +129,34 @@ cd ~/workspace\n tar xzf singlecluster-HDP.tar.gz\n ```\n \n-### GPDB\n-```\n-git clone https://github.com/greenplum-db/gpdb.git\n-```\n \n-You'll end up with a directory structure like this:\n+# Development With Docker\n+NOTE: Since the docker container will house all Single cluster Hadoop, Greenplum and PXF, we recommend that you have at least 4 cpus and 6GB memory allocated to Docker. These settings are available under docker preferences.\n \n-```\n-~\n-\u2514\u2500\u2500 workspace\n-    \u251c\u2500\u2500 pxf\n-    \u251c\u2500\u2500 singlecluster-HDP\n-    \u2514\u2500\u2500 gpdb\n-```\n+The following commands run the docker container and set up and switch to user gpadmin.\n \n-If you already have GPDB installed and running using the instructions shown in the [GPDB README](https://github.com/greenplum-db/gpdb), \n-you can ignore the `Setup GPDB` section below and simply follow the steps in  `Setup Hadoop` and `Setup PXF`\n+```bash\n+# Get the latest image\n+export GCR_PROJECT=<YOUR-GOOGLE_CONTAINER_REGISTRY-PROJECT-NAME>", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5Njc1Nw==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421596757", "bodyText": "should we bake this into the container during docker build instead?", "author": "frankgh", "createdAt": "2020-05-07T15:31:31Z", "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5ODUwMQ==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421598501", "bodyText": "this doesn't look too good , too hacky no?", "author": "frankgh", "createdAt": "2020-05-07T15:34:06Z", "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NjI1Mg==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421676252", "bodyText": "I agree, but the need to source greenplum_path.sh causes us here to \"unvendor\" Python. I'm open to better solutions", "author": "denalex", "createdAt": "2020-05-07T17:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5ODUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5OTIxOA==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421599218", "bodyText": "this path assumes greenplum was installed from rpm, what if they build from source? should we use find instead of hardcoding the path?", "author": "frankgh", "createdAt": "2020-05-07T15:35:03Z", "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2\n+\n+# remove existing PXF, if any, that could come pre-installed with Greenplum RPM\n+#source /usr/local/greenplum-db*/greenplum_path.sh\n+\n+GPH=/usr/local/greenplum-db", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NjkxNw==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421676917", "bodyText": "probably, this is still WIP", "author": "denalex", "createdAt": "2020-05-07T17:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5OTIxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5OTgwMw==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421599803", "bodyText": "any reason why indentation is different here from previous line?", "author": "frankgh", "createdAt": "2020-05-07T15:35:55Z", "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2\n+\n+# remove existing PXF, if any, that could come pre-installed with Greenplum RPM\n+#source /usr/local/greenplum-db*/greenplum_path.sh\n+\n+GPH=/usr/local/greenplum-db\n+if [[ -d ${GPH}/pxf ]]; then\n+    rm -rf ${GPH}/pxf\n+    rm ${GPH}/lib/postgresql/pxf.so\n+\trm ${GPH}/share/postgresql/extension/pxf.control", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwMDY0Mg==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421600642", "bodyText": "can't we just copy this files from /singlecluster?", "author": "frankgh", "createdAt": "2020-05-07T15:37:02Z", "path": "dev/init_hadoop.bash", "diffHunk": "@@ -0,0 +1,198 @@\n+#!/usr/bin/env bash\n+\n+>~/workspace/singlecluster/hadoop/etc/hadoop/core-site.xml cat <<EOF", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3ODkwNQ==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421678905", "bodyText": "It is now re-mapped into workspace in start.sh:\n-v ~/workspace/singlecluster-HDP:/home/gpadmin/workspace/singlecluster\n\nIf you mapped singlecluster into /singlecluster in dev docker image, I can change this", "author": "denalex", "createdAt": "2020-05-07T17:39:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwMDY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMjkzNA==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421612934", "bodyText": "do we know why we need this?", "author": "frankgh", "createdAt": "2020-05-07T15:54:13Z", "path": "package/pxf-gp6.spec", "diffHunk": "@@ -0,0 +1,48 @@\n+# Disable repacking of jars, since it takes forever\n+%define __jar_repack %{nil}\n+\n+# Disable automatic dependency processing both for requirements and provides\n+AutoReqProv: no\n+\n+Name: pxf-gp6\n+Version: %{pxf_version}\n+Release: %{pxf_release}%{?dist}\n+Summary: Greenplum PXF framework for external data access\n+License: %{license}\n+URL: https://github.com/greenplum-db/pxf\n+Vendor: %{vendor}\n+\n+Prefix: /usr/local/%{name}\n+\n+# .so file makes sense only when installing on Greenplum node, so inherit Greenplum's dependencies implicitly\n+# Java server can be installed on a new node, only bash is needed for management scripts\n+Requires: bash\n+\n+%if 0%{?rhel} == 7\n+Requires: openssl-libs", "originalCommit": "af1f4f4b1aa437c690f293377702c4a917db2afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3OTk4OQ==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421679989", "bodyText": "not sure, maybe I can remove this.", "author": "denalex", "createdAt": "2020-05-07T17:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMjkzNA=="}], "type": "inlineReview"}, {"oid": "e2937bda94e322a7eb7ec4d1687471418e2f1d7a", "url": "https://github.com/greenplum-db/pxf/commit/e2937bda94e322a7eb7ec4d1687471418e2f1d7a", "message": "install .so files during init, GO CLI changes, PR feedback", "committedDate": "2020-05-07T21:56:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2NzcwMQ==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422267701", "bodyText": "${INSTALL_COMPONENT_SCRIPT_DIR} should be quoted", "author": "oliverralbertini", "createdAt": "2020-05-08T17:22:31Z", "path": "package/install_rpm", "diffHunk": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+\n+set -euo pipefail\n+\n+INSTALL_COMPONENT_SCRIPT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n+RPM_FILE=$(basename $(find ${INSTALL_COMPONENT_SCRIPT_DIR} -name '*.rpm'))", "originalCommit": "566781adcab88d86180103a2cfaa9e94a6dbe0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MDQwOQ==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422270409", "bodyText": "I'd rather have something like\n(( $(id -u) == 0 )) || sudo_if_needed=sudo", "author": "oliverralbertini", "createdAt": "2020-05-08T17:27:39Z", "path": "package/install_rpm", "diffHunk": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+\n+set -euo pipefail\n+\n+INSTALL_COMPONENT_SCRIPT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n+RPM_FILE=$(basename $(find ${INSTALL_COMPONENT_SCRIPT_DIR} -name '*.rpm'))\n+\n+echo \"Installing PXF RPM ${RPM_FILE} ...\"\n+\n+owner=$(whoami)\n+sudo_if_needed=''\n+if [[ \"${owner}\" != \"root\" ]]; then", "originalCommit": "566781adcab88d86180103a2cfaa9e94a6dbe0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjAxMg==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422272012", "bodyText": "we recently found that 6 primary segs is probably overkill", "author": "oliverralbertini", "createdAt": "2020-05-08T17:30:48Z", "path": "dev/init_greenplum.bash", "diffHunk": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env bash\n+\n+set -euo pipefail\n+\n+GPHOME=${GPHOME:=/usr/local/greenplum-db}\n+PYTHONHOME='' source \"${GPHOME}/greenplum_path.sh\"\n+\n+# Create config and data dirs.\n+data_dirs=(~gpadmin/data{1..6}/primary)", "originalCommit": "566781adcab88d86180103a2cfaa9e94a6dbe0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MzcxNg==", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422273716", "bodyText": "whitespace issue", "author": "oliverralbertini", "createdAt": "2020-05-08T17:34:24Z", "path": "Makefile", "diffHunk": "@@ -49,12 +53,50 @@ stage:\n \tcp -a cli/build/stage/* build/stage/$${PXF_PACKAGE_NAME} ;\\\n \tcp -a server/build/stage/* build/stage/$${PXF_PACKAGE_NAME} ;\\\n \techo $$(git rev-parse --verify HEAD) > build/stage/$${PXF_PACKAGE_NAME}/pxf/commit.sha ;\\\n-\tcp package/install_component build/stage/$${PXF_PACKAGE_NAME} ;\\\n+\tcp package/install_binary build/stage/$${PXF_PACKAGE_NAME}/install_component\n \n tar: stage\n+\trm -rf build/dist\n \tmkdir -p build/dist\n \ttar -czf build/dist/$(shell ls build/stage).tar.gz -C build/stage $(shell ls build/stage)\n \n+rpm:\n+\tmake -C external-table stage\n+\tmake -C cli/go/src/pxf-cli stage\n+\tmake -C server stage\n+\tset -e ;\\\n+\tGP_MAJOR_VERSION=$$(cat external-table/build/metadata/gp_major_version) ;\\\n+\tPXF_MAIN_VERSION=$${PXF_VERSION//-SNAPSHOT/} ;\\\n+\tif [[ $${PXF_VERSION} == *\"-SNAPSHOT\" ]]; then PXF_RELEASE=SNAPSHOT; else PXF_RELEASE=1; fi ;\\\n+\trm -rf build/rpmbuild ;\\\n+\tmkdir -p build/rpmbuild/{BUILD,RPMS,SOURCES,SPECS} ;\\\n+\tmkdir -p build/rpmbuild/SOURCES/gpextable ;\\\n+\tcp -a external-table/build/stage/* build/rpmbuild/SOURCES/gpextable ;\\\n+    cp -a cli/build/stage/pxf/* build/rpmbuild/SOURCES ;\\", "originalCommit": "566781adcab88d86180103a2cfaa9e94a6dbe0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6422de2a89c6ecab90df8c073c0fd37e30f38e09", "url": "https://github.com/greenplum-db/pxf/commit/6422de2a89c6ecab90df8c073c0fd37e30f38e09", "message": "introduced RPM targets", "committedDate": "2020-05-08T18:32:33Z", "type": "commit"}, {"oid": "3e695e27826519d6bf867ef391897c095272b89c", "url": "https://github.com/greenplum-db/pxf/commit/3e695e27826519d6bf867ef391897c095272b89c", "message": "changed GO CLI to work with PXF_HOME", "committedDate": "2020-05-08T18:32:33Z", "type": "commit"}, {"oid": "218869f480e1462629805b072fecf81426e6135c", "url": "https://github.com/greenplum-db/pxf/commit/218869f480e1462629805b072fecf81426e6135c", "message": "install .so files during init, GO CLI changes, PR feedback", "committedDate": "2020-05-08T18:32:33Z", "type": "commit"}, {"oid": "9337a2db91b8fa7bb7d4a392d6b4b8d633567b42", "url": "https://github.com/greenplum-db/pxf/commit/9337a2db91b8fa7bb7d4a392d6b4b8d633567b42", "message": "change pipeline to work with RPMs", "committedDate": "2020-05-08T18:52:23Z", "type": "commit"}, {"oid": "ba15e153669d6d3de83e03c5e1d71583da479fe9", "url": "https://github.com/greenplum-db/pxf/commit/ba15e153669d6d3de83e03c5e1d71583da479fe9", "message": "fixed PWD in Makefile", "committedDate": "2020-05-08T18:52:23Z", "type": "commit"}, {"oid": "0eceadf55451bb9c3f14c83e8cfbd01c8ae47756", "url": "https://github.com/greenplum-db/pxf/commit/0eceadf55451bb9c3f14c83e8cfbd01c8ae47756", "message": "added GP_VER to pipelines", "committedDate": "2020-05-08T18:58:11Z", "type": "commit"}, {"oid": "f04dabad78efebf658b2684bbd0d24447aaed0fd", "url": "https://github.com/greenplum-db/pxf/commit/f04dabad78efebf658b2684bbd0d24447aaed0fd", "message": "change permissions to gpadmin", "committedDate": "2020-05-08T18:58:11Z", "type": "commit"}, {"oid": "4038c5620fe3307d652182061a036a4aec4413f4", "url": "https://github.com/greenplum-db/pxf/commit/4038c5620fe3307d652182061a036a4aec4413f4", "message": "fixed multinode setup", "committedDate": "2020-05-08T18:58:11Z", "type": "commit"}, {"oid": "4ec42d8ad43c30dccc0a4a284c10d3dc606ad706", "url": "https://github.com/greenplum-db/pxf/commit/4ec42d8ad43c30dccc0a4a284c10d3dc606ad706", "message": "suspend passed requirement on Ubuntu tarball", "committedDate": "2020-05-08T19:02:01Z", "type": "commit"}, {"oid": "4ec42d8ad43c30dccc0a4a284c10d3dc606ad706", "url": "https://github.com/greenplum-db/pxf/commit/4ec42d8ad43c30dccc0a4a284c10d3dc606ad706", "message": "suspend passed requirement on Ubuntu tarball", "committedDate": "2020-05-08T19:02:01Z", "type": "forcePushed"}, {"oid": "a0ab6f1cd0ab1ae39c9c1852b71a426e43588e56", "url": "https://github.com/greenplum-db/pxf/commit/a0ab6f1cd0ab1ae39c9c1852b71a426e43588e56", "message": "added GP_VER to setup pxf task", "committedDate": "2020-05-08T19:18:55Z", "type": "commit"}, {"oid": "c76a48a35fe25d0b2d3692a80d20de313d8fdae0", "url": "https://github.com/greenplum-db/pxf/commit/c76a48a35fe25d0b2d3692a80d20de313d8fdae0", "message": "update pxf_home in scripts", "committedDate": "2020-05-08T20:09:18Z", "type": "commit"}, {"oid": "2c00a9819a3dcb94c7cb38387ff623fef4db13eb", "url": "https://github.com/greenplum-db/pxf/commit/2c00a9819a3dcb94c7cb38387ff623fef4db13eb", "message": "added GP5 RPM spec file", "committedDate": "2020-05-08T21:37:35Z", "type": "commit"}, {"oid": "b5e0f408071267a0f2242b894859cc2be2028080", "url": "https://github.com/greenplum-db/pxf/commit/b5e0f408071267a0f2242b894859cc2be2028080", "message": "point to dev CCP branch for now", "committedDate": "2020-05-08T22:09:22Z", "type": "commit"}, {"oid": "887109a7d3276cd7efff88c6513f7c538bdec004", "url": "https://github.com/greenplum-db/pxf/commit/887109a7d3276cd7efff88c6513f7c538bdec004", "message": "use greenplum-db-devel as GPHOME on multinode", "committedDate": "2020-05-08T22:40:44Z", "type": "commit"}, {"oid": "76f5e13288025dea0cb0f56c3cfe7e97749f0bc5", "url": "https://github.com/greenplum-db/pxf/commit/76f5e13288025dea0cb0f56c3cfe7e97749f0bc5", "message": "simplified concourse Makefile targets", "committedDate": "2020-05-08T23:17:32Z", "type": "commit"}, {"oid": "32e3f222b5b955893c7386cc63d555d3781b1962", "url": "https://github.com/greenplum-db/pxf/commit/32e3f222b5b955893c7386cc63d555d3781b1962", "message": "PR feedback", "committedDate": "2020-05-08T23:25:11Z", "type": "commit"}, {"oid": "c9d1237db8a06a8ca9c98bb71927a15adc07b73b", "url": "https://github.com/greenplum-db/pxf/commit/c9d1237db8a06a8ca9c98bb71927a15adc07b73b", "message": "restore multi-node job to after testing gate", "committedDate": "2020-05-08T23:28:12Z", "type": "commit"}, {"oid": "c5c130b5b506235973275c33ee8d81bdb32bda60", "url": "https://github.com/greenplum-db/pxf/commit/c5c130b5b506235973275c33ee8d81bdb32bda60", "message": "set explicit GPHOME", "committedDate": "2020-05-08T23:52:25Z", "type": "commit"}]}