{"pr_number": 365, "pr_title": "Migrate pxf-json to Spring Boot", "pr_createdAt": "2020-06-03T01:48:37Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/365", "timeline": [{"oid": "71b114b6337e4cff99c7443fc5d94485d8d7b5ac", "url": "https://github.com/greenplum-db/pxf/commit/71b114b6337e4cff99c7443fc5d94485d8d7b5ac", "message": "Migrate pxf-json to Spring Boot\n\n- Update top level build.gradle to include pxf-json\n- Add new build.gradle for pxf-json\n- all existing unit tests should be ported to junit 5\n- make test on java 11\n- automation tests passing for JSON\n\nCo-authored-by: Francisco Guerrero <aguerrero@pivotal.io>\nCo-authored-by: Alexander Denissov <adenissov@pivotal.io>", "committedDate": "2020-06-03T01:46:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwMjU0Mw==", "url": "https://github.com/greenplum-db/pxf/pull/365#discussion_r434702543", "bodyText": "wonder why we need to depend on this and not only on slf4j-api ?", "author": "denalex", "createdAt": "2020-06-03T16:33:37Z", "path": "server/pxf-json/build.gradle", "diffHunk": "@@ -0,0 +1,31 @@\n+apply plugin: \"java-library\"\n+\n+jar {\n+    enabled = true\n+}\n+\n+dependencies {\n+    /*******************************\n+     * API Dependencies\n+     *******************************/\n+\n+    /*******************************\n+     * Implementation Dependencies\n+     *******************************/\n+\n+    implementation(project(':pxf-api'))\n+    implementation(project(':pxf-hdfs'))\n+    implementation(\"org.springframework.boot:spring-boot-starter-log4j2\")", "originalCommit": "71b114b6337e4cff99c7443fc5d94485d8d7b5ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyNDkwNQ==", "url": "https://github.com/greenplum-db/pxf/pull/365#discussion_r434724905", "bodyText": "There's a good explanation here: https://docs.spring.io/spring-boot/docs/2.0.x/reference/html/howto-logging.html but basically this provides an abstraction for logging in spring boot.", "author": "frankgh", "createdAt": "2020-06-03T17:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwMjU0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwMzI1NQ==", "url": "https://github.com/greenplum-db/pxf/pull/365#discussion_r434703255", "bodyText": "can we reuse a single object Mapper if we do not customize its behavior ?", "author": "denalex", "createdAt": "2020-06-03T16:34:41Z", "path": "server/pxf-json/src/main/java/org/greenplum/pxf/plugins/json/JsonResolver.java", "diffHunk": "@@ -51,15 +54,14 @@\n     private ObjectMapper mapper;\n \n     @Override\n-    public void initialize(RequestContext requestContext) {\n-        super.initialize(requestContext);\n+    public void initialize() {\n         oneFieldList = new ArrayList<>();\n         mapper = new ObjectMapper();", "originalCommit": "71b114b6337e4cff99c7443fc5d94485d8d7b5ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyNjQ2OA==", "url": "https://github.com/greenplum-db/pxf/pull/365#discussion_r434726468", "bodyText": "will make a static final for this class.", "author": "frankgh", "createdAt": "2020-06-03T17:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwMzI1NQ=="}], "type": "inlineReview"}]}