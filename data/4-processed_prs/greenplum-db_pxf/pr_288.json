{"pr_number": 288, "pr_title": "Minor code optimizations", "pr_createdAt": "2020-01-09T22:48:03Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/288", "timeline": [{"oid": "9f7ac326b31c2035954164d1093bbaa56eb6e5a1", "url": "https://github.com/greenplum-db/pxf/commit/9f7ac326b31c2035954164d1093bbaa56eb6e5a1", "message": "Minor code optimizations\n\nWhile profiling the code, I noticed some hotspots in\n\nDataType#isTextForm: Optimized by using an array, iterating over a small\narray is significantly faster than using a HashSet.\n\nGreenplumCSV#toCsvField: I noticed a high amount of calls to\nString.length. Assign the length to a variable once and use it to\noptimize it.", "committedDate": "2020-01-09T22:44:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjY1Nw==", "url": "https://github.com/greenplum-db/pxf/pull/288#discussion_r365036657", "bodyText": "wonder how BitSet would behave, the largest int value is 701 (FLOAT8), which will make BitSet-backing array about 88 bytes long, which is not a big deal and checking is a binary operation (actually check : isText = (oid > set.size()-1 || !set.get(oid))\nAlso, there are other OIDs (like NUMERIC(1700)) that are not lister here, but probably are not text also ?", "author": "denalex", "createdAt": "2020-01-10T01:23:31Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/io/DataType.java", "diffHunk": "@@ -64,7 +64,8 @@\n     UNSUPPORTED_TYPE(-1);\n \n     private static final Map<Integer, DataType> lookup = new HashMap<>();\n-    private static final Set<Integer> notText = new HashSet<>();\n+    private static final int[] NOT_TEXT = {BIGINT.OID, BOOLEAN.OID, BYTEA.OID,\n+            FLOAT8.OID, INTEGER.OID, REAL.OID, SMALLINT.OID};", "originalCommit": "9f7ac326b31c2035954164d1093bbaa56eb6e5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzMTYyMQ==", "url": "https://github.com/greenplum-db/pxf/pull/288#discussion_r365231621", "bodyText": "Well, the array only uses 4 bytes/element * 7 elements = 28 bytes. I think speed-wise, the speed difference between BitSet#get vs iterating over a small array should be negligible. I'm not sure why NUMERIC is not included, will add it and see if something breaks", "author": "frankgh", "createdAt": "2020-01-10T13:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0MDkwNA==", "url": "https://github.com/greenplum-db/pxf/pull/288#discussion_r365240904", "bodyText": "Ok, it turns out that NUMERIC is treated as TEXT because GPDBWritable serializes it as a string:\nhttps://github.com/greenplum-db/pxf/blob/master/server/pxf-service/src/main/java/org/greenplum/pxf/service/BridgeOutputBuilder.java#L409", "author": "frankgh", "createdAt": "2020-01-10T13:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNjY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzNzU0OA==", "url": "https://github.com/greenplum-db/pxf/pull/288#discussion_r365037548", "bodyText": "even better to move to constructor and to withNewLine() method so it is analyzed only once per instance.", "author": "denalex", "createdAt": "2020-01-10T01:27:50Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/GreenplumCSV.java", "diffHunk": "@@ -174,28 +174,28 @@ public String toCsvField(String s,\n         if (s == null) return null;\n \n         final int length = s.length();\n-        int i, j, quotes = 0, specialChars = 0, pos = 0, total = length;\n+        int i, j, quotes = 0, specialChars = 0, pos = 0, total = length,\n+                newLineLength = newline != null ? newline.length() : 0;", "originalCommit": "9f7ac326b31c2035954164d1093bbaa56eb6e5a1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d5a6cd60da05ff0577e071d8d9877f09575fe6f2", "url": "https://github.com/greenplum-db/pxf/commit/d5a6cd60da05ff0577e071d8d9877f09575fe6f2", "message": "Address PR feedback", "committedDate": "2020-01-10T13:50:06Z", "type": "commit"}, {"oid": "f643b2203d00239fb6af2f5398253bff638ebfc0", "url": "https://github.com/greenplum-db/pxf/commit/f643b2203d00239fb6af2f5398253bff638ebfc0", "message": "GreenplumCSV support setting char values", "committedDate": "2020-01-10T14:18:11Z", "type": "commit"}]}