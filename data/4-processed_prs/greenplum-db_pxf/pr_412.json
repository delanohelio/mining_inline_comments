{"pr_number": 412, "pr_title": "docs - more avro compression codecs, more greenplum type certs", "pr_createdAt": "2020-07-16T15:19:20Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/412", "timeline": [{"oid": "28c74583ed994e105d917cc8fb113ca60b4339b9", "url": "https://github.com/greenplum-db/pxf/commit/28c74583ed994e105d917cc8fb113ca60b4339b9", "message": "docs - avro supports bzip2 and xz compression now", "committedDate": "2020-07-14T22:54:30Z", "type": "commit"}, {"oid": "c7c46559f4140d10450a88f7b0afd8b2cf523fc8", "url": "https://github.com/greenplum-db/pxf/commit/c7c46559f4140d10450a88f7b0afd8b2cf523fc8", "message": "add date/time type to string write mapping", "committedDate": "2020-07-16T15:14:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NTM1NQ==", "url": "https://github.com/greenplum-db/pxf/pull/412#discussion_r455955355", "bodyText": "Does it really pad to n+1? I thought it would be n.", "author": "oliverralbertini", "createdAt": "2020-07-16T17:33:29Z", "path": "docs/content/hdfs_avro.html.md.erb", "diffHunk": "@@ -75,14 +75,18 @@ PXF uses the following data type mapping when writing Avro data:\n | boolean | boolean |\n | bytea | bytes |\n | double | double |\n+| char<sup>1</sup> | string |\n | enum | string |\n | int |  int |\n | real | float |\n-| smallint<sup>1</sup> | int |\n+| smallint<sup>2</sup> | int |\n | text | string |\n+| varchar | string |\n | array ([]), enum, record | string |\n+| date, time, timestamp, timestamptz | string |\n \n-</br><sup>1</sup>&nbsp;PXF converts Greenplum <code>smallint</code> types to <code>int</code> before it writes the Avro data. Be sure to read the field into an <code>int</code>.\n+</br><sup>1</sup>&nbsp;PXF right-pads <code>char[<i>n</i>]</code> types to length <code><i>n</i> + 1</code>, if required, with white space.", "originalCommit": "c7c46559f4140d10450a88f7b0afd8b2cf523fc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2NTQ4Mw==", "url": "https://github.com/greenplum-db/pxf/pull/412#discussion_r455965483", "bodyText": "i saw on https://gpdb.docs.pivotal.io/6-9/ref_guide/data_types.html that the length of a char array is size of array plus one byte, assumed that would carry over.  i changed this to n.", "author": "lisakowen", "createdAt": "2020-07-16T17:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NTM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NTg0MQ==", "url": "https://github.com/greenplum-db/pxf/pull/412#discussion_r455955841", "bodyText": "xz also would be impacted by CODEC_LEVEL", "author": "oliverralbertini", "createdAt": "2020-07-16T17:34:22Z", "path": "docs/content/hdfs_avro.html.md.erb", "diffHunk": "@@ -150,7 +154,7 @@ The PXF `hdfs:avro` profile supports encoding- and compression-related write opt\n \n | Write Option  | Value Description |\n |-------|-------------------------------------|\n-| COMPRESSION_CODEC    | The compression codec alias. Supported compression codecs for writing Avro data include: `snappy`, `deflate`, and `uncompressed` . If this option is not provided, PXF compresses the data using `deflate` compression. |\n+| COMPRESSION_CODEC    | The compression codec alias. Supported compression codecs for writing Avro data include: `bzip2`, `xz`, `snappy`, `deflate`, and `uncompressed` . If this option is not provided, PXF compresses the data using `deflate` compression. |\n | CODEC_LEVEL    | The compression level (applicable to the `deflate` codec only). This level controls the trade-off between speed and compression. Valid values are 1 (fastest) to 9 (most compressed). The default compression level when using the `deflate` codec is 6. |", "originalCommit": "c7c46559f4140d10450a88f7b0afd8b2cf523fc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1Njc4NA==", "url": "https://github.com/greenplum-db/pxf/pull/412#discussion_r455956784", "bodyText": "see here for details: \n  \n    \n      pxf/server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/AvroFileAccessor.java\n    \n    \n         Line 162\n      in\n      e18ee9e\n    \n    \n    \n    \n\n        \n          \n           writer.setCodec(CodecFactory.xzCodec(codecCompressionLevel));", "author": "oliverralbertini", "createdAt": "2020-07-16T17:36:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NTg0MQ=="}], "type": "inlineReview"}, {"oid": "79c7c014d6abcf7dae971d58fa26cb62907398ff", "url": "https://github.com/greenplum-db/pxf/commit/79c7c014d6abcf7dae971d58fa26cb62907398ff", "message": "address comments from oliver", "committedDate": "2020-07-16T17:49:16Z", "type": "commit"}]}