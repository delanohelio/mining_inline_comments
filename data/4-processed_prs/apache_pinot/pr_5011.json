{"pr_number": 5011, "pr_title": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional pa\u2026", "pr_createdAt": "2020-01-23T22:37:41Z", "pr_url": "https://github.com/apache/pinot/pull/5011", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5NzEzMg==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r370397132", "bodyText": "variable \"thisYaml\" is not needed in this case.", "author": "xiaohui-sun", "createdAt": "2020-01-23T22:51:19Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -907,8 +907,28 @@ public Response toggleActivation(\n    */\n   @GET\n   @Path(\"/list\")\n+  @ApiOperation(\"Get the list of all detection YAML configurations as JSON enhanced with additional information, optionally filtered\")\n   @Produces(MediaType.APPLICATION_JSON)\n-  public List<Map<String, Object>> listYamls() throws ExecutionException {\n-    return this.detectionConfigDAO.findAll().parallelStream().map(this.detectionConfigFormatter::format).collect(Collectors.toList());\n+  public List<Map<String, Object>> listYamls(\n+      @ApiParam(\"Dataset the detection configurations should be filtered by\") @QueryParam(\"dataset\") String dataset) throws ExecutionException {\n+    List<Map<String, Object>> yamls;\n+    if (dataset == null) {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .collect(Collectors.toList());\n+    } else {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .filter(y -> {\n+            List<String> thisYaml = (List)y.get(\"datasetNames\");", "originalCommit": "86d6e886d728b3d252f824077a2b99f9dbd4c3e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQzNTI2Ng==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r370435266", "bodyText": "I added metric as an optional param, as well.  Would this comment still apply to the updated code?", "author": "harleyjj", "createdAt": "2020-01-24T01:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5NzEzMg=="}], "type": "inlineReview"}, {"oid": "b36f1ed220316b781fd9af1f3eacd1278147e998", "url": "https://github.com/apache/pinot/commit/b36f1ed220316b781fd9af1f3eacd1278147e998", "message": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional param for yaml/list", "committedDate": "2020-01-24T01:11:27Z", "type": "forcePushed"}, {"oid": "0c07e26901a5adaa1b9cb1b14ffe25d317a7498a", "url": "https://github.com/apache/pinot/commit/0c07e26901a5adaa1b9cb1b14ffe25d317a7498a", "message": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional param for yaml/list", "committedDate": "2020-01-24T01:25:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczOTQyNw==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r370739427", "bodyText": "It is not good practice to put complicated logic inside lambda expressions.\nSuggest to put it as a method.", "author": "xiaohui-sun", "createdAt": "2020-01-24T16:59:51Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -907,8 +907,46 @@ public Response toggleActivation(\n    */\n   @GET\n   @Path(\"/list\")\n+  @ApiOperation(\"Get the list of all detection YAML configurations as JSON enhanced with additional information, optionally filtered.\")\n   @Produces(MediaType.APPLICATION_JSON)\n-  public List<Map<String, Object>> listYamls() throws ExecutionException {\n-    return this.detectionConfigDAO.findAll().parallelStream().map(this.detectionConfigFormatter::format).collect(Collectors.toList());\n+  public List<Map<String, Object>> listYamls(\n+      @ApiParam(\"Dataset the detection configurations should be filtered by\") @QueryParam(\"dataset\") String dataset,\n+      @ApiParam(\"Metric the detection configurations should be filtered by\") @QueryParam(\"metric\") String metric) throws ExecutionException {\n+    List<Map<String, Object>> yamls;\n+    if (dataset == null && metric == null) {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .collect(Collectors.toList());\n+    } else {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .filter(y -> {\n+            List datasetList = (List) y.get(\"datasetNames\");", "originalCommit": "0c07e26901a5adaa1b9cb1b14ffe25d317a7498a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzNTk2Ng==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r371435966", "bodyText": "Method added.", "author": "harleyjj", "createdAt": "2020-01-27T19:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczOTQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc0MjAyNw==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r370742027", "bodyText": "The readability is bad. Let's rewrite this logic.", "author": "xiaohui-sun", "createdAt": "2020-01-24T17:05:29Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -907,8 +907,46 @@ public Response toggleActivation(\n    */\n   @GET\n   @Path(\"/list\")\n+  @ApiOperation(\"Get the list of all detection YAML configurations as JSON enhanced with additional information, optionally filtered.\")\n   @Produces(MediaType.APPLICATION_JSON)\n-  public List<Map<String, Object>> listYamls() throws ExecutionException {\n-    return this.detectionConfigDAO.findAll().parallelStream().map(this.detectionConfigFormatter::format).collect(Collectors.toList());\n+  public List<Map<String, Object>> listYamls(\n+      @ApiParam(\"Dataset the detection configurations should be filtered by\") @QueryParam(\"dataset\") String dataset,\n+      @ApiParam(\"Metric the detection configurations should be filtered by\") @QueryParam(\"metric\") String metric) throws ExecutionException {\n+    List<Map<String, Object>> yamls;\n+    if (dataset == null && metric == null) {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .collect(Collectors.toList());\n+    } else {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .filter(y -> {\n+            List datasetList = (List) y.get(\"datasetNames\");\n+            String metricString = (String) y.get(\"metric\");\n+            boolean metricMatch = true;\n+            boolean datasetMatch = true;\n+            if (metric != null ) {\n+              if (metricString != null) {\n+                metricMatch = metricString.equals(metric);\n+              } else {\n+                metricMatch = false;\n+              }\n+            }\n+            if (dataset != null && datasetList != null) {\n+              if (datasetList != null) {\n+                datasetMatch = datasetList.contains(dataset);\n+              } else {\n+                datasetMatch = false;\n+              }\n+            }\n+            return (metricMatch && datasetMatch);\n+          })", "originalCommit": "0c07e26901a5adaa1b9cb1b14ffe25d317a7498a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzNjEzOA==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r371436138", "bodyText": "I rewrote the logic in the method", "author": "harleyjj", "createdAt": "2020-01-27T19:27:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc0MjAyNw=="}], "type": "inlineReview"}, {"oid": "43c89fdaf8805bf0ee6dfd6cc09eb459fd45251d", "url": "https://github.com/apache/pinot/commit/43c89fdaf8805bf0ee6dfd6cc09eb459fd45251d", "message": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional param for yaml/list", "committedDate": "2020-01-27T19:25:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1OTIyMA==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r371459220", "bodyText": "return metricMatch && datasetMatch;", "author": "xiaohui-sun", "createdAt": "2020-01-27T20:14:32Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -900,15 +900,64 @@ public Response toggleActivation(\n     return Response.ok(responseMessage).build();\n   }\n \n+  /**\n+   * Implements filter for detection config.\n+   * Client can filter by dataset or metric or both.  It only filters if they are not null in params and config\n+   *\n+   * @param detectionConfig The detection configuration after being enhanced by DetectionConfigFormatter::format.\n+   * @param dataset The dataset param passed by the client in the REST API call.\n+   * @param metric The metric param passed by the client in the REST API call.\n+   * @return true if the config matches query params that are passed by client.\n+   */\n+  private boolean filterConfigsBy(Map<String, Object> detectionConfig, String dataset, String metric) {\n+    List datasetList = (List) detectionConfig.get(\"datasetNames\");\n+    String metricString = (String) detectionConfig.get(\"metric\");\n+    // defaults are true so we filter only if the params are passed\n+    boolean metricMatch = true;\n+    boolean datasetMatch = true;\n+    // check metric only if it was passed\n+    if (metric != null ) {\n+      // equals method should not be called on null\n+      metricMatch = (metricString != null) && metricString.equals(metric);\n+    }\n+    // check dataset only if it was passed\n+    if (dataset != null) {\n+      // contains method should not be called on null\n+      datasetMatch = (datasetList != null) && datasetList.contains(dataset);\n+    }\n+    // config should satisfy both filters\n+    return (metricMatch && datasetMatch);", "originalCommit": "43c89fdaf8805bf0ee6dfd6cc09eb459fd45251d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1OTMzMw==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r371459333", "bodyText": "datasetMatch = datasetList != null && datasetList.contains(dataset);", "author": "xiaohui-sun", "createdAt": "2020-01-27T20:14:48Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -900,15 +900,64 @@ public Response toggleActivation(\n     return Response.ok(responseMessage).build();\n   }\n \n+  /**\n+   * Implements filter for detection config.\n+   * Client can filter by dataset or metric or both.  It only filters if they are not null in params and config\n+   *\n+   * @param detectionConfig The detection configuration after being enhanced by DetectionConfigFormatter::format.\n+   * @param dataset The dataset param passed by the client in the REST API call.\n+   * @param metric The metric param passed by the client in the REST API call.\n+   * @return true if the config matches query params that are passed by client.\n+   */\n+  private boolean filterConfigsBy(Map<String, Object> detectionConfig, String dataset, String metric) {\n+    List datasetList = (List) detectionConfig.get(\"datasetNames\");\n+    String metricString = (String) detectionConfig.get(\"metric\");\n+    // defaults are true so we filter only if the params are passed\n+    boolean metricMatch = true;\n+    boolean datasetMatch = true;\n+    // check metric only if it was passed\n+    if (metric != null ) {\n+      // equals method should not be called on null\n+      metricMatch = (metricString != null) && metricString.equals(metric);\n+    }\n+    // check dataset only if it was passed\n+    if (dataset != null) {\n+      // contains method should not be called on null\n+      datasetMatch = (datasetList != null) && datasetList.contains(dataset);", "originalCommit": "43c89fdaf8805bf0ee6dfd6cc09eb459fd45251d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1OTQxMA==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r371459410", "bodyText": "metricMatch = metricString != null && metricString.equals(metric);", "author": "xiaohui-sun", "createdAt": "2020-01-27T20:14:58Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -900,15 +900,64 @@ public Response toggleActivation(\n     return Response.ok(responseMessage).build();\n   }\n \n+  /**\n+   * Implements filter for detection config.\n+   * Client can filter by dataset or metric or both.  It only filters if they are not null in params and config\n+   *\n+   * @param detectionConfig The detection configuration after being enhanced by DetectionConfigFormatter::format.\n+   * @param dataset The dataset param passed by the client in the REST API call.\n+   * @param metric The metric param passed by the client in the REST API call.\n+   * @return true if the config matches query params that are passed by client.\n+   */\n+  private boolean filterConfigsBy(Map<String, Object> detectionConfig, String dataset, String metric) {\n+    List datasetList = (List) detectionConfig.get(\"datasetNames\");\n+    String metricString = (String) detectionConfig.get(\"metric\");\n+    // defaults are true so we filter only if the params are passed\n+    boolean metricMatch = true;\n+    boolean datasetMatch = true;\n+    // check metric only if it was passed\n+    if (metric != null ) {\n+      // equals method should not be called on null\n+      metricMatch = (metricString != null) && metricString.equals(metric);", "originalCommit": "43c89fdaf8805bf0ee6dfd6cc09eb459fd45251d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "397c944f728611b97dff242fdcb9ff5c609332c1", "url": "https://github.com/apache/pinot/commit/397c944f728611b97dff242fdcb9ff5c609332c1", "message": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional param for yaml/list", "committedDate": "2020-01-28T01:59:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2NTMzOQ==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r371965339", "bodyText": "Although the legacy code doesn't follow the standards, I have some suggestions which we have been trying to follow for all the new apis.\n\nIf there is an exception thrown during the execution then we need to wrap it up and return a meaningful response to the caller along with the status codes.\nAlso consider adding some logging statements indicating how many configurations were returned for the params passed.\n\nRefer example: https://github.com/apache/incubator-pinot/blob/master/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/api/user/dashboard/UserDashboardResource.java#L220", "author": "akshayrai", "createdAt": "2020-01-28T18:00:53Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/yaml/YamlResource.java", "diffHunk": "@@ -904,15 +904,64 @@ public Response toggleActivation(\n     return Response.ok(responseMessage).build();\n   }\n \n+  /**\n+   * Implements filter for detection config.\n+   * Client can filter by dataset or metric or both.  It only filters if they are not null in params and config\n+   *\n+   * @param detectionConfig The detection configuration after being enhanced by DetectionConfigFormatter::format.\n+   * @param dataset The dataset param passed by the client in the REST API call.\n+   * @param metric The metric param passed by the client in the REST API call.\n+   * @return true if the config matches query params that are passed by client.\n+   */\n+  private boolean filterConfigsBy(Map<String, Object> detectionConfig, String dataset, String metric) {\n+    List datasetList = (List) detectionConfig.get(\"datasetNames\");\n+    String metricString = (String) detectionConfig.get(\"metric\");\n+    // defaults are true so we filter only if the params are passed\n+    boolean metricMatch = true;\n+    boolean datasetMatch = true;\n+    // check metric only if it was passed\n+    if (metric != null ) {\n+      // equals method should not be called on null\n+      metricMatch = metricString != null && metricString.equals(metric);\n+    }\n+    // check dataset only if it was passed\n+    if (dataset != null) {\n+      // contains method should not be called on null\n+      datasetMatch = datasetList != null && datasetList.contains(dataset);\n+    }\n+    // config should satisfy both filters\n+    return metricMatch && datasetMatch;\n+  }\n+\n \n   /**\n    * List all yaml configurations as JSON enhanced with detection config id, isActive and createBy information.\n+   * @param dataset the dataset to filter results by (optional)\n+   * @param metric the metric to filter results by (optional)\n    * @return the yaml configuration converted in to JSON, with enhanced information from detection config DTO.\n    */\n   @GET\n   @Path(\"/list\")\n+  @ApiOperation(\"Get the list of all detection YAML configurations as JSON enhanced with additional information, optionally filtered.\")\n   @Produces(MediaType.APPLICATION_JSON)\n-  public List<Map<String, Object>> listYamls() throws ExecutionException {\n-    return this.detectionConfigDAO.findAll().parallelStream().map(this.detectionConfigFormatter::format).collect(Collectors.toList());\n+  public List<Map<String, Object>> listYamls(\n+      @ApiParam(\"Dataset the detection configurations should be filtered by\") @QueryParam(\"dataset\") String dataset,\n+      @ApiParam(\"Metric the detection configurations should be filtered by\") @QueryParam(\"metric\") String metric) throws ExecutionException {\n+    List<Map<String, Object>> yamls;\n+    if (dataset == null && metric == null) {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .collect(Collectors.toList());\n+    } else {\n+      yamls = this.detectionConfigDAO\n+          .findAll()\n+          .parallelStream()\n+          .map(this.detectionConfigFormatter::format)\n+          .filter(y -> filterConfigsBy(y, dataset, metric))\n+          .collect(Collectors.toList());\n+    }\n+    return yamls;\n   }", "originalCommit": "397c944f728611b97dff242fdcb9ff5c609332c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAxMjA4Mg==", "url": "https://github.com/apache/pinot/pull/5011#discussion_r372012082", "bodyText": "I made these changes.  Please take a look.", "author": "harleyjj", "createdAt": "2020-01-28T19:33:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2NTMzOQ=="}], "type": "inlineReview"}, {"oid": "63da1b269d61a114f98bd2cd78fc35ec9c214f5c", "url": "https://github.com/apache/pinot/commit/63da1b269d61a114f98bd2cd78fc35ec9c214f5c", "message": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional param for yaml/list", "committedDate": "2020-01-28T19:31:03Z", "type": "commit"}, {"oid": "63da1b269d61a114f98bd2cd78fc35ec9c214f5c", "url": "https://github.com/apache/pinot/commit/63da1b269d61a114f98bd2cd78fc35ec9c214f5c", "message": "[TE] endpoint - harleyjj/yamlresource - add dataset as an optional param for yaml/list", "committedDate": "2020-01-28T19:31:03Z", "type": "forcePushed"}]}