{"pr_number": 4984, "pr_title": "[TE] Fix over-scheduling tasks in data availability scheduler", "pr_createdAt": "2020-01-15T01:08:46Z", "pr_url": "https://github.com/apache/pinot/pull/4984", "timeline": [{"oid": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "url": "https://github.com/apache/pinot/commit/d8eada57061c1e2cd32369dbb3800586ee16f1ae", "message": "[TE] Fix over-scheduling tasks in data availability scheduler", "committedDate": "2020-01-15T00:52:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2NzAxMw==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r366667013", "bodyText": "Using Pair<Long, Long> for <last refresh time, last refresh event time> may make the code a little hard to read without context. Would it be better to create a class for this instead?", "author": "bxji", "createdAt": "2020-01-15T02:14:01Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskScheduler.java", "diffHunk": "@@ -80,7 +85,7 @@ public DataAvailabilityTaskScheduler(long delayInSec, long fallBackTimeInSec) {\n   @Override\n   public void run() {\n     Map<DetectionConfigDTO, Set<String>> detection2DatasetMap = new HashMap<>();\n-    Map<String, Long> dataset2RefreshTimeMap = new HashMap<>();\n+    Map<String, Pair<Long, Long>> dataset2RefreshTimeMap = new HashMap<>();", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNjYxNQ==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367006615", "bodyText": "+1\nLet's use a class since it is complex enough now.", "author": "xiaohui-sun", "createdAt": "2020-01-15T17:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2NzAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNTE2Mg==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367005162", "bodyText": ".max() should work", "author": "xiaohui-sun", "createdAt": "2020-01-15T17:23:06Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskScheduler.java", "diffHunk": "@@ -214,4 +224,11 @@ private boolean needFallback(DetectionConfigDTO detectionConfig) throws Exceptio\n     long lastRunTime = taskLastCreateTimeMap.get(detectionConfigId);\n     return (System.currentTimeMillis() - lastRunTime >= notRunThreshold);\n   }\n+\n+  private boolean isWithinSchedulingWindow(Set<String> datasets, Map<String, Pair<Long, Long>> dataset2RefreshTimeMap) {\n+    long maxEventTime = datasets.stream()\n+        .map(dataset -> dataset2RefreshTimeMap.get(dataset).getRight())\n+        .reduce((v1, v2) -> (v1 > v2) ? v1 : v2).orElse(0L);", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNTI0OQ==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367005249", "bodyText": "Add some comments", "author": "xiaohui-sun", "createdAt": "2020-01-15T17:23:16Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskScheduler.java", "diffHunk": "@@ -214,4 +224,11 @@ private boolean needFallback(DetectionConfigDTO detectionConfig) throws Exceptio\n     long lastRunTime = taskLastCreateTimeMap.get(detectionConfigId);\n     return (System.currentTimeMillis() - lastRunTime >= notRunThreshold);\n   }\n+\n+  private boolean isWithinSchedulingWindow(Set<String> datasets, Map<String, Pair<Long, Long>> dataset2RefreshTimeMap) {", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNTY5NQ==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367005695", "bodyText": "More concrete comments please.\nAdd the motivation for this field.", "author": "xiaohui-sun", "createdAt": "2020-01-15T17:24:03Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/utils/DataAvailabilitySchedulingConfiguration.java", "diffHunk": "@@ -37,9 +37,11 @@\n   private List<String> dataSourceWhitelist;\n   private List<String> filterClassList;\n   // delay time after each run for the scheduler to reduce DB polling\n-  private long schedulerDelayInSec = 300; // 5 minute\n+  private long schedulerDelayInSec = 300; // 5 minutes\n   // default threshold if detection level threshold is not set\n   private long taskTriggerFallBackTimeInSec = 24 * 60 * 60; // 1 day\n+  // scheduling window for data availability scheduling", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNjE0NA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367006144", "bodyText": "Why two TEST_TIME. Normally the two times should be different.", "author": "xiaohui-sun", "createdAt": "2020-01-15T17:24:59Z", "path": "thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskSchedulerTest.java", "diffHunk": "@@ -110,8 +110,8 @@ public void testCreateMultipleTasks() {\n     long detection2 = createDetection(2, metrics1, oneDayAgo, 0);\n     List<Long> singleMetric = Collections.singletonList(metricId2);\n     long detection3 = createDetection(3, singleMetric, oneDayAgo, 0);\n-    createDataset(1, TEST_TIME);\n-    createDataset(2, TEST_TIME);\n+    createDataset(1, TEST_TIME, TEST_TIME);", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3ODA5Ng==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367078096", "bodyText": "Yes, they are always different in production. I simplify it in test case to make them the same, since we never compare those two timestamps anyway.", "author": "vincentchenjl", "createdAt": "2020-01-15T19:59:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNjE0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzOTQ3OA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367039478", "bodyText": "Maybe it's better to use TimeUnit.MINUTES.toSeconds(15) than calculating seconds by multiplication.", "author": "jihaozh", "createdAt": "2020-01-15T18:35:03Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/utils/DataAvailabilitySchedulingConfiguration.java", "diffHunk": "@@ -37,9 +37,11 @@\n   private List<String> dataSourceWhitelist;\n   private List<String> filterClassList;\n   // delay time after each run for the scheduler to reduce DB polling\n-  private long schedulerDelayInSec = 300; // 5 minute\n+  private long schedulerDelayInSec = 300; // 5 minutes\n   // default threshold if detection level threshold is not set\n   private long taskTriggerFallBackTimeInSec = 24 * 60 * 60; // 1 day\n+  // scheduling window for data availability scheduling\n+  private long schedulingWindowInSec = 15 * 60; // 15 minutes", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3NzE2MQ==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367077161", "bodyText": "Good call!", "author": "vincentchenjl", "createdAt": "2020-01-15T19:57:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzOTQ3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzOTgzNg==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367039836", "bodyText": "Same as above, how about using TimeUnit class to convert to seconds?", "author": "jihaozh", "createdAt": "2020-01-15T18:35:50Z", "path": "thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskSchedulerTest.java", "diffHunk": "@@ -79,7 +79,7 @@ public void beforeMethod() {\n     metric1.setDerived(false);\n     metric2.setAlias(\"\");\n     metricId2 = metricConfigManager.save(metric2);\n-    dataAvailabilityTaskScheduler = new DataAvailabilityTaskScheduler(60, 24 * 60 * 60);\n+    dataAvailabilityTaskScheduler = new DataAvailabilityTaskScheduler(60, 24 * 60 * 60, 15 * 60);", "originalCommit": "d8eada57061c1e2cd32369dbb3800586ee16f1ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d9f14442b1d6845c04f2c47d54ff71fdc54e4fd", "url": "https://github.com/apache/pinot/commit/5d9f14442b1d6845c04f2c47d54ff71fdc54e4fd", "message": "minor change to address comments", "committedDate": "2020-01-15T19:55:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMTE1MA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367111150", "bodyText": "Add comments.", "author": "xiaohui-sun", "createdAt": "2020-01-15T21:16:33Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskScheduler.java", "diffHunk": "@@ -58,18 +59,29 @@\n   private ScheduledExecutorService executorService;\n   private long delayInSec;\n   private long fallBackTimeInSec;\n+  private long schedulingWindowInSec;\n   private Map<Long, Long> taskLastCreateTimeMap;\n   private TaskManager taskDAO;\n   private DetectionConfigManager detectionConfigDAO;\n   private DatasetConfigManager datasetConfigDAO;\n+\n+  private class DatasetUpdateStatus {\n+    long lastDataTs;", "originalCommit": "5d9f14442b1d6845c04f2c47d54ff71fdc54e4fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NjUxOA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367176518", "bodyText": "It is removed.", "author": "vincentchenjl", "createdAt": "2020-01-16T00:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMTE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMjY5OA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367112698", "bodyText": "Should we log it? Will it creates lots of logs?", "author": "xiaohui-sun", "createdAt": "2020-01-15T21:19:52Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskScheduler.java", "diffHunk": "@@ -89,12 +101,16 @@ public void run() {\n         long detectionConfigId = detectionConfig.getId();\n         if (!runningDetection.containsKey(detectionConfigId)) {\n           if (isAllDatasetUpdated(detectionConfig, detection2DatasetMap.get(detectionConfig), dataset2RefreshTimeMap)) {\n-            //TODO: additional check is required if detection is based on aggregated value across multiple data points\n-            createDetectionTask(detectionConfig);\n-            ThirdeyeMetricsUtil.eventScheduledTaskCounter.inc();\n-            taskCount++;\n+            if (isWithinSchedulingWindow(detection2DatasetMap.get(detectionConfig), dataset2RefreshTimeMap)) {\n+              //TODO: additional check is required if detection is based on aggregated value across multiple data points\n+              createDetectionTask(detectionConfig);\n+              ThirdeyeMetricsUtil.eventScheduledTaskCounter.inc();\n+              taskCount++;\n+            } else {\n+              LOG.warn(\"Unable to schedule a task for {}, because it is out of scheduling window.\", detectionConfigId);", "originalCommit": "5d9f14442b1d6845c04f2c47d54ff71fdc54e4fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NzMzMg==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367177332", "bodyText": "It will only generate logs when the scheduler runs, namely every 5 minutes. This line will only be printed when the watermark is not moving forward, which should be minor case.", "author": "vincentchenjl", "createdAt": "2020-01-16T00:30:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMjY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU4OTQxNA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367589414", "bodyText": "That's fine. Thanks.", "author": "xiaohui-sun", "createdAt": "2020-01-16T18:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExMjY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExNjExNA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367116114", "bodyText": "I have a feeling we are creating too many customized objects. Can we just reuse the DatasetConfigDTO and get rid of DatasetUpdateStatus? The DatasetConfigDTO should contain everything you need.", "author": "xiaohui-sun", "createdAt": "2020-01-15T21:27:53Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/anomaly/detection/trigger/DataAvailabilityTaskScheduler.java", "diffHunk": "@@ -119,7 +135,8 @@ public void close() {\n   }\n \n   private void populateDetectionMapAndDataset2RefreshTimeMap(\n-      Map<DetectionConfigDTO, Set<String>> dataset2DetectionMap, Map<String, Long> dataset2RefreshTimeMap) {\n+      Map<DetectionConfigDTO, Set<String>> dataset2DetectionMap,", "originalCommit": "5d9f14442b1d6845c04f2c47d54ff71fdc54e4fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NjU2MA==", "url": "https://github.com/apache/pinot/pull/4984#discussion_r367176560", "bodyText": "Good suggestion.", "author": "vincentchenjl", "createdAt": "2020-01-16T00:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExNjExNA=="}], "type": "inlineReview"}, {"oid": "3088582ad1518e178ffb96dd33b1613a404f5a97", "url": "https://github.com/apache/pinot/commit/3088582ad1518e178ffb96dd33b1613a404f5a97", "message": "minor change", "committedDate": "2020-01-16T00:22:15Z", "type": "commit"}]}