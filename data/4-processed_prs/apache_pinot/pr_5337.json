{"pr_number": 5337, "pr_title": "Track unavailable segments in InstanceSelector", "pr_createdAt": "2020-05-05T23:49:51Z", "pr_url": "https://github.com/apache/pinot/pull/5337", "timeline": [{"oid": "e5fa5854d525b590f51199f84444fd0dd58f2119", "url": "https://github.com/apache/pinot/commit/e5fa5854d525b590f51199f84444fd0dd58f2119", "message": "Track unavailable segments in InstanceSelector\n\nUnavailable segments are the segments that has no enabled instance or all enabled instances are in ERROR state.\nWe don't count segment with enabled instance in OFFLINE state as unavailable because it is a valid state when segment is new added and has not become ONLINE/CONSUMING.\n\nIntroduced RoutingTable class to wrap the a map from ServerInstance to segments and a list of unavailable segments.\nAdded a new property 'numUnavailableSegments' into the RequestStatistics.\n\nAPI change: In PinotBrokerDebug, return RoutingTable class (including unavailable segments info) instead of map from ServerInstance to segments", "committedDate": "2020-05-06T01:42:29Z", "type": "forcePushed"}, {"oid": "584eea631d2b5aeed7df0ed2f6f31044fe795ac6", "url": "https://github.com/apache/pinot/commit/584eea631d2b5aeed7df0ed2f6f31044fe795ac6", "message": "Track unavailable segments in InstanceSelector\n\nUnavailable segments are the segments that has no enabled instance or all enabled instances are in ERROR state.\nWe don't count segment with enabled instance in OFFLINE state as unavailable because it is a valid state when segment is new added and has not become ONLINE/CONSUMING.\n\nIntroduced RoutingTable class to wrap the a map from ServerInstance to segments and a list of unavailable segments.\nAdded a new property 'numUnavailableSegments' into the RequestStatistics.\n\nAPI change: In PinotBrokerDebug, return RoutingTable class (including unavailable segments info) instead of map from ServerInstance to segments", "committedDate": "2020-05-06T03:11:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzNjAyNA==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r420936024", "bodyText": "we dont need this variable, we can use _unavailableSegments in line 110 right?", "author": "mcvsubbu", "createdAt": "2020-05-06T16:43:24Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/routing/instanceselector/BaseInstanceSelector.java", "diffHunk": "@@ -85,94 +88,147 @@ public void onInstancesChange(Set<String> enabledInstances, List<String> changed\n       return;\n     }\n \n-    // Update the map from segment to enabled instances\n+    // Update the map from segment to enabled ONLINE/CONSUMING instances and set of unavailable segments (no enabled\n+    // instance or all enabled instances are in ERROR state)\n     // NOTE: We can directly modify the map because we will only update the values without changing the map entries.\n     // Because the map is marked as volatile, the running queries (already accessed the map) might use the enabled\n     // instances either before or after the change, which is okay; the following queries (not yet accessed the map) will\n     // get the updated value.\n-    Map<String, List<String>> segmentToInstancesMap = _segmentToInstancesMap;\n+    Map<String, List<String>> segmentToOnlineInstancesMap = _segmentToOnlineInstancesMap;\n+    Map<String, List<String>> segmentToOfflineInstancesMap = _segmentToOfflineInstancesMap;\n     Map<String, List<String>> segmentToEnabledInstancesMap = _segmentToEnabledInstancesMap;\n+    Set<String> currentUnavailableSegments = _unavailableSegments;", "originalCommit": "584eea631d2b5aeed7df0ed2f6f31044fe795ac6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5OTg5MA==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r420999890", "bodyText": "It should be fine, it's just a reference.", "author": "jackjlli", "createdAt": "2020-05-06T18:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzNjAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxODc0Nw==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r421018747", "bodyText": "_unavailableSegments is volatile, so I find get its reference for performance concern", "author": "Jackie-Jiang", "createdAt": "2020-05-06T18:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzNjAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MTYxOQ==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r420981619", "bodyText": "Good to iterate this test a few times, with realtime table and with CONSUMING segments as well", "author": "mcvsubbu", "createdAt": "2020-05-06T17:53:41Z", "path": "pinot-broker/src/test/java/org/apache/pinot/broker/routing/instanceselector/InstanceSelectorTest.java", "diffHunk": "@@ -394,13 +422,66 @@ public void testInstanceSelector() {\n     expectedBalancedInstanceSelectorResult.put(segment2, instance1);\n     expectedBalancedInstanceSelectorResult.put(segment3, instance3);\n     expectedBalancedInstanceSelectorResult.put(segment4, instance0);\n-    assertEquals(balancedInstanceSelector.select(brokerRequest, segments), expectedBalancedInstanceSelectorResult);\n+    selectionResult = balancedInstanceSelector.select(brokerRequest, segments);\n+    assertEquals(selectionResult.getSegmentToInstanceMap(), expectedBalancedInstanceSelectorResult);\n+    assertTrue(selectionResult.getUnavailableSegments().isEmpty());\n     expectedReplicaGroupInstanceSelectorResult = new HashMap<>();\n     expectedReplicaGroupInstanceSelectorResult.put(segment1, instance2);\n     expectedReplicaGroupInstanceSelectorResult.put(segment2, instance3);\n     expectedReplicaGroupInstanceSelectorResult.put(segment3, instance3);\n     expectedReplicaGroupInstanceSelectorResult.put(segment4, instance2);\n-    assertEquals(replicaGroupInstanceSelector.select(brokerRequest, segments),\n-        expectedReplicaGroupInstanceSelectorResult);\n+    selectionResult = replicaGroupInstanceSelector.select(brokerRequest, segments);\n+    assertEquals(selectionResult.getSegmentToInstanceMap(), expectedReplicaGroupInstanceSelectorResult);\n+    assertTrue(selectionResult.getUnavailableSegments().isEmpty());\n+  }\n+\n+  @Test\n+  public void testUnavailableSegments() {", "originalCommit": "584eea631d2b5aeed7df0ed2f6f31044fe795ac6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAzNTI3NA==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r421035274", "bodyText": "Done", "author": "Jackie-Jiang", "createdAt": "2020-05-06T19:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MTYxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwMTA1MQ==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r421001051", "bodyText": "It might be good to put some comments on what you're gonna do in this method, as the logic becomes complex.", "author": "jackjlli", "createdAt": "2020-05-06T18:25:19Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/routing/instanceselector/BaseInstanceSelector.java", "diffHunk": "@@ -85,94 +88,147 @@ public void onInstancesChange(Set<String> enabledInstances, List<String> changed\n       return;\n     }\n \n-    // Update the map from segment to enabled instances\n+    // Update the map from segment to enabled ONLINE/CONSUMING instances and set of unavailable segments (no enabled\n+    // instance or all enabled instances are in ERROR state)\n     // NOTE: We can directly modify the map because we will only update the values without changing the map entries.\n     // Because the map is marked as volatile, the running queries (already accessed the map) might use the enabled\n     // instances either before or after the change, which is okay; the following queries (not yet accessed the map) will\n     // get the updated value.\n-    Map<String, List<String>> segmentToInstancesMap = _segmentToInstancesMap;\n+    Map<String, List<String>> segmentToOnlineInstancesMap = _segmentToOnlineInstancesMap;\n+    Map<String, List<String>> segmentToOfflineInstancesMap = _segmentToOfflineInstancesMap;\n     Map<String, List<String>> segmentToEnabledInstancesMap = _segmentToEnabledInstancesMap;\n+    Set<String> currentUnavailableSegments = _unavailableSegments;\n+    Set<String> newUnavailableSegments = new HashSet<>();\n     for (Map.Entry<String, List<String>> entry : segmentToEnabledInstancesMap.entrySet()) {\n       String segment = entry.getKey();\n       if (segmentsToUpdate.contains(segment)) {\n-        entry.setValue(\n-            calculateEnabledInstancesForSegment(segment, segmentToInstancesMap.get(segment), enabledInstances));\n+        List<String> enabledInstancesForSegment =\n+            calculateEnabledInstancesForSegment(segment, segmentToOnlineInstancesMap.get(segment),\n+                segmentToOfflineInstancesMap, enabledInstances, newUnavailableSegments);\n+        entry.setValue(enabledInstancesForSegment);\n+      } else {\n+        if (currentUnavailableSegments.contains(segment)) {\n+          newUnavailableSegments.add(segment);\n+        }\n       }\n     }\n+    _unavailableSegments = newUnavailableSegments;\n   }\n \n   @Override\n   public void onExternalViewChange(ExternalView externalView, Set<String> onlineSegments) {", "originalCommit": "584eea631d2b5aeed7df0ed2f6f31044fe795ac6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA0ODUyNg==", "url": "https://github.com/apache/pinot/pull/5337#discussion_r421048526", "bodyText": "Added", "author": "Jackie-Jiang", "createdAt": "2020-05-06T19:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwMTA1MQ=="}], "type": "inlineReview"}, {"oid": "236ce248460d464196f4086496fd42082e4c43e3", "url": "https://github.com/apache/pinot/commit/236ce248460d464196f4086496fd42082e4c43e3", "message": "Track unavailable segments in InstanceSelector\n\nUnavailable segments are the segments that has no enabled instance or all enabled instances are in ERROR state.\nWe don't count segment with enabled instance in OFFLINE state as unavailable because it is a valid state when segment is new added and has not become ONLINE/CONSUMING.\n\nIntroduced RoutingTable class to wrap the a map from ServerInstance to segments and a list of unavailable segments.\nAdded a new property 'numUnavailableSegments' into the RequestStatistics.", "committedDate": "2020-05-06T19:51:21Z", "type": "commit"}, {"oid": "236ce248460d464196f4086496fd42082e4c43e3", "url": "https://github.com/apache/pinot/commit/236ce248460d464196f4086496fd42082e4c43e3", "message": "Track unavailable segments in InstanceSelector\n\nUnavailable segments are the segments that has no enabled instance or all enabled instances are in ERROR state.\nWe don't count segment with enabled instance in OFFLINE state as unavailable because it is a valid state when segment is new added and has not become ONLINE/CONSUMING.\n\nIntroduced RoutingTable class to wrap the a map from ServerInstance to segments and a list of unavailable segments.\nAdded a new property 'numUnavailableSegments' into the RequestStatistics.", "committedDate": "2020-05-06T19:51:21Z", "type": "forcePushed"}]}