{"pr_number": 5619, "pr_title": "Fix double memory allocation during operator setup", "pr_createdAt": "2020-06-25T07:13:30Z", "pr_url": "https://github.com/apache/pinot/pull/5619", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDE5Nw==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445810197", "bodyText": "Revert this line", "author": "Jackie-Jiang", "createdAt": "2020-06-25T20:10:24Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/common/DataFetcher.java", "diffHunk": "@@ -62,7 +62,7 @@ public DataFetcher(Map<String, DataSource> dataSourceMap) {\n       DataSource dataSource = entry.getValue();\n       _dictionaryMap.put(column, dataSource.getDictionary());\n       DataSourceMetadata dataSourceMetadata = dataSource.getDataSourceMetadata();\n-      BlockValSet blockValueSet = dataSource.nextBlock().getBlockValueSet();\n+      BlockValSet blockValueSet = dataSourceMap.get(column).nextBlock().getBlockValueSet();", "originalCommit": "f5c5660ca371d704c6cc11a9a3eed0dc3d42049f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NDM0OQ==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445844349", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-06-25T21:19:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDE5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDk3NA==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445810974", "bodyText": "(nit) put this line after line 37", "author": "Jackie-Jiang", "createdAt": "2020-06-25T20:12:01Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/blocks/MultiValueBlock.java", "diffHunk": "@@ -31,12 +31,15 @@\n \n @SuppressWarnings(\"rawtypes\")\n public final class MultiValueBlock implements Block {\n-  private final BlockValSet _blockValSet;\n+  private final SingleColumnMultiValueReader _reader;\n+  private final FieldSpec.DataType _dataType;\n+  private BlockValSet _blockValSet;", "originalCommit": "f5c5660ca371d704c6cc11a9a3eed0dc3d42049f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NDI5OA==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445844298", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-06-25T21:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMDk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMTI1NA==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445811254", "bodyText": "(nit) Put this line after line 37", "author": "Jackie-Jiang", "createdAt": "2020-06-25T20:12:36Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/blocks/SingleValueBlock.java", "diffHunk": "@@ -32,13 +32,14 @@\n @SuppressWarnings(\"rawtypes\")\n public final class SingleValueBlock implements Block {\n   private final SingleColumnSingleValueReader _reader;\n-  private final BlockValSet _blockValSet;\n+  private final FieldSpec.DataType _dataType;\n+  private BlockValSet _blockValSet;", "originalCommit": "f5c5660ca371d704c6cc11a9a3eed0dc3d42049f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NDMyNw==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445844327", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-06-25T21:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxMTI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxNDU0MQ==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445814541", "bodyText": "@Jackie-Jiang , I am concerned about the invocation of this in multi-threaded scenario. From the code, it doesn't look like it will happen since each query will create it's own. Thoughts?", "author": "siddharthteotia", "createdAt": "2020-06-25T20:19:13Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/blocks/MultiValueBlock.java", "diffHunk": "@@ -47,6 +50,9 @@ public BlockDocIdSet getBlockDocIdSet() {\n \n   @Override\n   public BlockValSet getBlockValueSet() {", "originalCommit": "f5c5660ca371d704c6cc11a9a3eed0dc3d42049f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0OTI4Mw==", "url": "https://github.com/apache/pinot/pull/5619#discussion_r445849283", "bodyText": "@siddharthteotia There is no multi-threading for the blocks. All the blocks are processed by one thread", "author": "Jackie-Jiang", "createdAt": "2020-06-25T21:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgxNDU0MQ=="}], "type": "inlineReview"}, {"oid": "af538002f92007992e94203959d7166656d111c7", "url": "https://github.com/apache/pinot/commit/af538002f92007992e94203959d7166656d111c7", "message": "Fix double memory allocation during operator setup", "committedDate": "2020-06-25T20:38:12Z", "type": "forcePushed"}, {"oid": "cc2fa002f1fa78669e3c7f059c07b1fbda24065b", "url": "https://github.com/apache/pinot/commit/cc2fa002f1fa78669e3c7f059c07b1fbda24065b", "message": "Fix double memory allocation during operator setup", "committedDate": "2020-06-25T21:19:14Z", "type": "commit"}, {"oid": "cc2fa002f1fa78669e3c7f059c07b1fbda24065b", "url": "https://github.com/apache/pinot/commit/cc2fa002f1fa78669e3c7f059c07b1fbda24065b", "message": "Fix double memory allocation during operator setup", "committedDate": "2020-06-25T21:19:14Z", "type": "forcePushed"}]}