{"pr_number": 5851, "pr_title": "Support multi-value non-dictionary group by", "pr_createdAt": "2020-08-12T08:16:34Z", "pr_url": "https://github.com/apache/pinot/pull/5851", "timeline": [{"oid": "f34c811f0e2af63503c7d30e8be8a6456f724f1d", "url": "https://github.com/apache/pinot/commit/f34c811f0e2af63503c7d30e8be8a6456f724f1d", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T08:17:28Z", "type": "forcePushed"}, {"oid": "fe17daa1eef65884036fc39b04345efebdec91f5", "url": "https://github.com/apache/pinot/commit/fe17daa1eef65884036fc39b04345efebdec91f5", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T08:21:27Z", "type": "forcePushed"}, {"oid": "ba07523c40046ada977007e60651ab64b05a30e0", "url": "https://github.com/apache/pinot/commit/ba07523c40046ada977007e60651ab64b05a30e0", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T10:37:09Z", "type": "forcePushed"}, {"oid": "d3021809d6485d9cbd9ee704a2ca702b6643a92c", "url": "https://github.com/apache/pinot/commit/d3021809d6485d9cbd9ee704a2ca702b6643a92c", "message": "Adding integration test", "committedDate": "2020-08-12T10:43:06Z", "type": "forcePushed"}, {"oid": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6", "url": "https://github.com/apache/pinot/commit/b357c66f1525aa5170228e03fe515e6fcaa6d4c6", "message": "Adding integration test", "committedDate": "2020-08-12T17:34:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNjg5MQ==", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469436891", "bodyText": "(nit)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private int[] getGroupIdsForKey(int[][] keysList) {\n          \n          \n            \n              private int[] getGroupIdsForKeys(int[][] keysList) {", "author": "Jackie-Jiang", "createdAt": "2020-08-12T17:51:30Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {", "originalCommit": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzOTgwNQ==", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469439805", "bodyText": "Avoid using stream in query engine for performance concern.\nTo avoid boxing/unboxing, you may use fastutil IntArrayList and toIntArray() to get the primitive array.", "author": "Jackie-Jiang", "createdAt": "2020-08-12T17:56:24Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {\n+    List<Integer> groupIds = new ArrayList<>();\n+    getGroupIdsForKeyHelper(keysList, new int[keysList.length], 0, groupIds);\n+    return groupIds.stream().mapToInt(i->i).toArray();", "originalCommit": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MDY1NA==", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469440654", "bodyText": "(Critical) Need to make a copy of groupKeyIds, because it can be inserted into the map", "author": "Jackie-Jiang", "createdAt": "2020-08-12T17:57:49Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {\n+    List<Integer> groupIds = new ArrayList<>();\n+    getGroupIdsForKeyHelper(keysList, new int[keysList.length], 0, groupIds);\n+    return groupIds.stream().mapToInt(i->i).toArray();\n+  }\n+\n+  private void getGroupIdsForKeyHelper(int[][] keysList, int[] groupKeyIds, int level, List<Integer> groupIds) {\n+    if (level == keysList.length) {\n+      groupIds.add(getGroupIdForKey(new FixedIntArray(groupKeyIds)));", "originalCommit": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MTU1Mw==", "url": "https://github.com/apache/pinot/pull/5851#discussion_r469441553", "bodyText": "(nit) Store keysList[level].length as a local variable", "author": "Jackie-Jiang", "createdAt": "2020-08-12T17:59:27Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/groupby/NoDictionaryMultiColumnGroupKeyGenerator.java", "diffHunk": "@@ -177,6 +305,29 @@ private int getGroupIdForKey(FixedIntArray keyList) {\n     return groupId;\n   }\n \n+  /**\n+   * Helper method to get or create a list of group-id for a list of group key.\n+   *\n+   * @param keysList Group keys, that is a list of list of objects to be grouped\n+   * @return Group ids\n+   */\n+  private int[] getGroupIdsForKey(int[][] keysList) {\n+    List<Integer> groupIds = new ArrayList<>();\n+    getGroupIdsForKeyHelper(keysList, new int[keysList.length], 0, groupIds);\n+    return groupIds.stream().mapToInt(i->i).toArray();\n+  }\n+\n+  private void getGroupIdsForKeyHelper(int[][] keysList, int[] groupKeyIds, int level, List<Integer> groupIds) {\n+    if (level == keysList.length) {\n+      groupIds.add(getGroupIdForKey(new FixedIntArray(groupKeyIds)));\n+      return;\n+    }\n+    for (int i = 0; i < keysList[level].length; i++) {", "originalCommit": "b357c66f1525aa5170228e03fe515e6fcaa6d4c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "19584387b7df69a97b66505dd91fb4bc16241fa9", "url": "https://github.com/apache/pinot/commit/19584387b7df69a97b66505dd91fb4bc16241fa9", "message": "Adding integration test", "committedDate": "2020-08-12T20:06:33Z", "type": "forcePushed"}, {"oid": "0a09e9ebe49484759a42805f7c7285d67f8a90c4", "url": "https://github.com/apache/pinot/commit/0a09e9ebe49484759a42805f7c7285d67f8a90c4", "message": "Adding integration test", "committedDate": "2020-08-12T21:13:05Z", "type": "forcePushed"}, {"oid": "60e946df8a33d58d4492047e2c38d065e274a46e", "url": "https://github.com/apache/pinot/commit/60e946df8a33d58d4492047e2c38d065e274a46e", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T22:32:43Z", "type": "forcePushed"}, {"oid": "ca7e6b8bbe272c76633396dc3e33ff7b48a38b1b", "url": "https://github.com/apache/pinot/commit/ca7e6b8bbe272c76633396dc3e33ff7b48a38b1b", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T22:52:49Z", "type": "forcePushed"}, {"oid": "49d96ce1d508815bda7f7e2fc92234952e461dec", "url": "https://github.com/apache/pinot/commit/49d96ce1d508815bda7f7e2fc92234952e461dec", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T22:57:25Z", "type": "commit"}, {"oid": "49d96ce1d508815bda7f7e2fc92234952e461dec", "url": "https://github.com/apache/pinot/commit/49d96ce1d508815bda7f7e2fc92234952e461dec", "message": "Support multi-value non-dictionary group by", "committedDate": "2020-08-12T22:57:25Z", "type": "forcePushed"}]}