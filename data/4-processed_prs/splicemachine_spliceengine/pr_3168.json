{"pr_number": 3168, "pr_title": "SPLICE-2379 SparkExplain Statement", "pr_createdAt": "2020-01-29T06:28:29Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3168", "timeline": [{"oid": "ad9939797a8379a8c86053fbc138b62d9384fab7", "url": "https://github.com/splicemachine/spliceengine/commit/ad9939797a8379a8c86053fbc138b62d9384fab7", "message": "SPLICE-2379 SparkExplain Statement\n            Prefix a query with \"sparkexplain\" to display the query plan\n\t    including both native Spark operations and Splice operations.", "committedDate": "2020-01-29T06:15:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5OTMyNg==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372899326", "bodyText": "Why is this change needed?", "author": "dgomezferro", "createdAt": "2020-01-30T11:35:18Z", "path": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/compile/CompilerContext.java", "diffHunk": "@@ -656,9 +656,9 @@\n \t */\n \tboolean isReferenced(SequenceDescriptor sd);\n \n-    void setDataSetProcessorType(DataSetProcessorType type);\n+\tvoid setDataSetProcessorType(DataSetProcessorType type, boolean setDSPTypeinLCC);", "originalCommit": "ad9939797a8379a8c86053fbc138b62d9384fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODgxOA==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r373058818", "bodyText": "I think this is an old change I made to avoid using control when we're running in the Olap Server.  But I have since fixed that in CostChoosingDataSetProcessorFactory, so I will remove the above change.", "author": "msirek", "createdAt": "2020-01-30T16:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5OTMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwNDM1Mg==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r373104352", "bodyText": "I tried backing out this change, but it broke some Spark Explain tests. CostChoosingDataSetProcessorFactory.chooseProcessor() pulls the DataSetProcessorType from the lcc to determine whether to run on control or spark.  The lcc is not properly updated in all flows, so that is the intent of this change, to make sure that the DataSetProcessorType we've picked in the CompilerContext is propagated to the lcc.  Spark Explain needs to be executed on the Olap Server, so the lcc must always have the proper DataSetProcessorType setting.", "author": "msirek", "createdAt": "2020-01-30T18:00:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5OTMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDg0MA==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372900840", "bodyText": "You could return an empty dataset instead if this could be a problem, sampling might actually read the data from Splice anyway", "author": "dgomezferro", "createdAt": "2020-01-30T11:39:01Z", "path": "hbase_sql/src/main/java/com/splicemachine/derby/stream/spark/SparkScanSetBuilder.java", "diffHunk": "@@ -102,6 +101,14 @@ else if (storedAs.equals(\"O\"))\n                 // The predicates have variant qualifiers (or we are reading ORC with our own reader), we couldn't push them down to the scan, process them here\n                 return locatedRows.filter(new TableScanPredicateFunction<>(operationContext));\n             }\n+            if (dsp.isSparkExplain()) {", "originalCommit": "ad9939797a8379a8c86053fbc138b62d9384fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1NjExMA==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r373056110", "bodyText": "Thanks, I'll keep this in mind.  So far it's not an issue.  I'm not sure if this would change what's printed in the spark explain, for example, would it still indicate which parquet table is being read from for external tables, etc.", "author": "msirek", "createdAt": "2020-01-30T16:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODM1MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r373058351", "bodyText": "That's a good point, it wouldn't.", "author": "dgomezferro", "createdAt": "2020-01-30T16:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDk1MA==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372900950", "bodyText": "I'd either remove these blocks or make them return an empty dataset", "author": "dgomezferro", "createdAt": "2020-01-30T11:39:17Z", "path": "hbase_sql/src/main/java/com/splicemachine/derby/stream/spark/SparkScanSetBuilder.java", "diffHunk": "@@ -113,7 +120,19 @@ else if (storedAs.equals(\"O\"))\n         if (oneSplitPerRegion) {\n             conf.set(MRConstants.ONE_SPLIT_PER_REGION, \"true\");\n         }\n-        if (useSample) {\n+        if (dsp.isSparkExplain()) {", "originalCommit": "ad9939797a8379a8c86053fbc138b62d9384fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwNTk0Mg==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r373105942", "bodyText": "OK, I've reverted the changes.", "author": "msirek", "createdAt": "2020-01-30T18:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwNDA2Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r372904063", "bodyText": "Couldn't you use here dsp.getEmpty() ?", "author": "dgomezferro", "createdAt": "2020-01-30T11:47:14Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/execute/operations/RowCountOperation.java", "diffHunk": "@@ -199,8 +202,31 @@ public void writeExternal(ObjectOutput out) throws IOException {\n         final long fetchLimit = getFetchLimit();\n         long offset = getTotalOffset();\n         OperationContext operationContext = dsp.createOperationContext(this);\n-        DataSet<ExecRow> sourceSet = source.getDataSet(dsp).map(new CloneFunction<>(operationContext));\n-        return sourceSet.zipWithIndex(operationContext).mapPartitions(new OffsetFunction<SpliceOperation, ExecRow>(operationContext, offset, fetchLimit));\n+        dsp.incrementOpDepth();\n+        DataSet<ExecRow> sourceDS = source.getDataSet(dsp);\n+        dsp.decrementOpDepth();\n+        DataSet<ExecRow> sourceSet = sourceDS.map(new CloneFunction<>(operationContext));\n+        if (dsp.isSparkExplain()) {\n+                        DataSet<ExecRow> ds = dsp.createDataSet(Iterators.transform(Collections.emptyIterator(),", "originalCommit": "ad9939797a8379a8c86053fbc138b62d9384fab7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwNzEwMQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3168#discussion_r373107101", "bodyText": "Made the change.", "author": "msirek", "createdAt": "2020-01-30T18:06:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwNDA2Mw=="}], "type": "inlineReview"}, {"oid": "6b6e04baa2724dac95951a6b1dbabbc5c8a77661", "url": "https://github.com/splicemachine/spliceengine/commit/6b6e04baa2724dac95951a6b1dbabbc5c8a77661", "message": "SPLICE-2379 Address review comments.", "committedDate": "2020-01-30T18:09:52Z", "type": "commit"}, {"oid": "6da9b3abd05efb8d51ab7b62029a1523718cfc09", "url": "https://github.com/splicemachine/spliceengine/commit/6da9b3abd05efb8d51ab7b62029a1523718cfc09", "message": "Merge branch 'master' into SPLICE-2379", "committedDate": "2020-02-07T06:20:29Z", "type": "commit"}, {"oid": "00362df318bdf7097c45be4e2b4769b2d438d4bd", "url": "https://github.com/splicemachine/spliceengine/commit/00362df318bdf7097c45be4e2b4769b2d438d4bd", "message": "SPLICE-2379 Fix compilation failure.", "committedDate": "2020-02-07T06:32:22Z", "type": "commit"}, {"oid": "7dd075f68da5e39879e250acc466079135ab72e7", "url": "https://github.com/splicemachine/spliceengine/commit/7dd075f68da5e39879e250acc466079135ab72e7", "message": "Merge branch 'master' into SPLICE-2379", "committedDate": "2020-02-20T12:11:04Z", "type": "commit"}, {"oid": "49b509c7fdabf758ac753b094690dfc79dd36ab9", "url": "https://github.com/splicemachine/spliceengine/commit/49b509c7fdabf758ac753b094690dfc79dd36ab9", "message": "SPLICE-2379 Fix tests", "committedDate": "2020-02-20T19:04:35Z", "type": "commit"}, {"oid": "49b509c7fdabf758ac753b094690dfc79dd36ab9", "url": "https://github.com/splicemachine/spliceengine/commit/49b509c7fdabf758ac753b094690dfc79dd36ab9", "message": "SPLICE-2379 Fix tests", "committedDate": "2020-02-20T19:04:35Z", "type": "forcePushed"}]}