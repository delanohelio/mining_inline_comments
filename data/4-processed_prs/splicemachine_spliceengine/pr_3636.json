{"pr_number": 3636, "pr_title": "DB-9449 Fix spark scan issue that missed a row during flush", "pr_createdAt": "2020-06-03T13:13:00Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3636", "timeline": [{"oid": "d14d109b10a5c1d14dc8de8174abbae29140b798", "url": "https://github.com/splicemachine/spliceengine/commit/d14d109b10a5c1d14dc8de8174abbae29140b798", "message": "DB-9449 Fix spark scan issue that missed a row during flush\n\nIf a flush happened during a Spark scan, the flush token that is\nreturned by MemStoreFlushAwareScanner would be marked with timestamp 0\nand would therefore be read before any other cell.\nHowever, when the scanner fetches a row, it first reads from the mem\nstore, then from hfiles. The flush token would prevent us from reading\nfrom hfiles for that row and we would resume the scan at the next row.\n\nWe addressed the issue by making sure that the flush token will be\nsorted exactly after the last row that was being scanned, so that we can\nproperly merge data from MemStore and HFiles before addressing the flush\nand resetting scanners", "committedDate": "2020-06-03T13:07:26Z", "type": "commit"}, {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982", "url": "https://github.com/splicemachine/spliceengine/commit/d0e4a496c4902fcc22e3116b449afa2d8117c982", "message": "DB-9449 Add test", "committedDate": "2020-06-03T13:18:43Z", "type": "commit"}, {"oid": "d0e4a496c4902fcc22e3116b449afa2d8117c982", "url": "https://github.com/splicemachine/spliceengine/commit/d0e4a496c4902fcc22e3116b449afa2d8117c982", "message": "DB-9449 Add test", "committedDate": "2020-06-03T13:18:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTg2Mg==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434561862", "bodyText": "I think we can remove this check", "author": "dgomezferro", "createdAt": "2020-06-03T13:22:41Z", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "diffHunk": "@@ -176,10 +176,19 @@ public boolean internalNext(List<Cell> outResult,ScannerContext scannerContext)\n             return HBasePlatformUtils.scannerEndReached(scannerContext);\n         }\n         if (super.next(outResult,scannerContext)) {\n-            if (LOG.isTraceEnabled())\n-                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size());\n+            if (didWeFlush()) {\n+                SpliceLogUtils.warn(LOG, \"Flush happened while scanning the row that we return. We might return incomplete results: %s\", outResult);\n+            }", "originalCommit": "d0e4a496c4902fcc22e3116b449afa2d8117c982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMDA4Nw==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434630087", "bodyText": "Done", "author": "arnaud-splice", "createdAt": "2020-06-03T14:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTg2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MjAwNg==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434562006", "bodyText": "This one too.", "author": "dgomezferro", "createdAt": "2020-06-03T13:22:52Z", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemStoreFlushAwareScanner.java", "diffHunk": "@@ -176,10 +176,19 @@ public boolean internalNext(List<Cell> outResult,ScannerContext scannerContext)\n             return HBasePlatformUtils.scannerEndReached(scannerContext);\n         }\n         if (super.next(outResult,scannerContext)) {\n-            if (LOG.isTraceEnabled())\n-                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size());\n+            if (didWeFlush()) {\n+                SpliceLogUtils.warn(LOG, \"Flush happened while scanning the row that we return. We might return incomplete results: %s\", outResult);\n+            }\n+            if (LOG.isTraceEnabled()) {\n+                SpliceLogUtils.trace(LOG, \"Next: returning \" + outResult.size() +\n+                        \". mayHaveMoreCellsInARow=\" + HRegionUtil.mayHaveMoreCellsInARow(scannerContext));\n+                SpliceLogUtils.trace(LOG, \"Next: actual output: %s\" + outResult);\n+            }\n             return true;\n         }\n+        if (didWeFlush()) {\n+            SpliceLogUtils.warn(LOG, \"Flush happened after didWeFlush returned false\");\n+        }", "originalCommit": "d0e4a496c4902fcc22e3116b449afa2d8117c982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMDE1NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434630155", "bodyText": "Done", "author": "arnaud-splice", "createdAt": "2020-06-03T14:54:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MjAwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NDQ5MA==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434564490", "bodyText": "We should append a NULL byte, not the RowId of the Flush cell.", "author": "dgomezferro", "createdAt": "2020-06-03T13:26:32Z", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "diffHunk": "@@ -59,16 +63,35 @@ public boolean advance(){\n \n     public boolean nextResult() throws IOException{\n         cellScannerIndex=0;\n-        currentResult=this.resultScanner.next();\n-        if(currentResult!=null){\n-            cells=currentResult.rawCells();\n-            peakKeyValue=(KeyValue)current();\n-            rows++;\n-            return true;\n-        }else{\n+        previousResult = currentResult;\n+        currentResult = this.resultScanner.next();\n+        if(currentResult == null) {\n             // This shouldn't happen, throw exception and re-init the scanner\n             throw new DoNotRetryIOException(\"Memstore scanner shouldn't end prematurely\");\n         }\n+        if (currentResult.rawCells() != null && CellUtil.matchingFamily(currentResult.rawCells()[0], FLUSH) ) {\n+            if (LOG.isTraceEnabled())\n+                LOG.trace(\"CURRENT CELL: \" + currentResult.rawCells()[0]);\n+            assert currentResult.rawCells().length == 1;\n+            if (previousResult != null && previousResult.rawCells() != null) {\n+                assert previousResult.rawCells().length > 0;\n+                KeyValue previousCell = (KeyValue) previousResult.rawCells()[previousResult.rawCells().length - 1];\n+                if (LOG.isTraceEnabled())\n+                    LOG.trace(\"PREVIOUS CELL: \" + previousCell);\n+                if (CellUtil.matchingRows(currentResult.rawCells()[0], HConstants.EMPTY_START_ROW)) {\n+                    byte[] rowId = Bytes.add(\n+                            CellUtil.cloneRow(previousCell),\n+                            CellUtil.cloneRow(currentResult.rawCells()[0]));", "originalCommit": "d0e4a496c4902fcc22e3116b449afa2d8117c982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMTI1Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434631253", "bodyText": "Done", "author": "arnaud-splice", "createdAt": "2020-06-03T14:56:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NDQ5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NjY1Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434566653", "bodyText": "This is not correct, this appends 4 NULL bytes instead of a single NULL byte.", "author": "dgomezferro", "createdAt": "2020-06-03T13:29:37Z", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/SkeletonClientSideRegionScanner.java", "diffHunk": "@@ -155,29 +155,29 @@ public boolean nextRaw(List<Cell> result) throws IOException {\n      * created by MemStore flushes or current scanner fails due to compaction\n      */\n     public void updateScanner() throws IOException {\n-            if (LOG.isDebugEnabled()) {\n-                SpliceLogUtils.debug(LOG,\n-                        \"updateScanner with hregionInfo=%s, tableName=%s, rootDir=%s, scan=%s\",\n-                        hri, htd.getNameAsString(), rootDir, scan);\n-            }\n-            if (flushed) {\n+        if (LOG.isDebugEnabled()) {\n+            SpliceLogUtils.debug(LOG,\n+                    \"updateScanner with hregionInfo=%s, tableName=%s, rootDir=%s, scan=%s\",\n+                    hri, htd.getNameAsString(), rootDir, scan);\n+        }\n+        if (flushed) {\n+            if (LOG.isDebugEnabled())\n+                SpliceLogUtils.debug(LOG, \"Flush occurred\");\n+            if (this.topCell != null) {\n                 if (LOG.isDebugEnabled())\n-                    SpliceLogUtils.debug(LOG, \"Flush occurred\");\n-                if (this.topCell != null) {\n-                    if (LOG.isDebugEnabled())\n-                        SpliceLogUtils.debug(LOG, \"setting start row to %s\", topCell);\n-                    //noinspection deprecation\n-                    scan.setStartRow(Bytes.add(CellUtil.cloneRow(topCell), new byte[]{0}));\n-                }\n+                    SpliceLogUtils.debug(LOG, \"setting start row to %s\", topCell);\n+                //noinspection deprecation\n+                scan.setStartRow(Bytes.add(CellUtil.cloneRow(topCell), Bytes.toBytes(0)));", "originalCommit": "d0e4a496c4902fcc22e3116b449afa2d8117c982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzMTE2NA==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r434631164", "bodyText": "Done", "author": "arnaud-splice", "createdAt": "2020-06-03T14:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NjY1Mw=="}], "type": "inlineReview"}, {"oid": "d9a1af974638af17248ef541acff38f89868da08", "url": "https://github.com/splicemachine/spliceengine/commit/d9a1af974638af17248ef541acff38f89868da08", "message": "DB-9449 Address comments", "committedDate": "2020-06-03T14:57:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4OTA1Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/3636#discussion_r435389053", "bodyText": "Minor comment, I would add a short version of the PR description here to explain what's going on with the RowKey rewrite for future reference", "author": "dgomezferro", "createdAt": "2020-06-04T16:26:26Z", "path": "hbase_storage/src/main/java/com/splicemachine/access/client/MemstoreKeyValueScanner.java", "diffHunk": "@@ -59,16 +63,33 @@ public boolean advance(){\n \n     public boolean nextResult() throws IOException{\n         cellScannerIndex=0;\n-        currentResult=this.resultScanner.next();\n-        if(currentResult!=null){\n-            cells=currentResult.rawCells();\n-            peakKeyValue=(KeyValue)current();\n-            rows++;\n-            return true;\n-        }else{\n+        previousResult = currentResult;\n+        currentResult = this.resultScanner.next();\n+        if(currentResult == null) {\n             // This shouldn't happen, throw exception and re-init the scanner\n             throw new DoNotRetryIOException(\"Memstore scanner shouldn't end prematurely\");\n         }\n+        if (currentResult.rawCells() != null && CellUtil.matchingFamily(currentResult.rawCells()[0], FLUSH) ) {", "originalCommit": "d9a1af974638af17248ef541acff38f89868da08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}