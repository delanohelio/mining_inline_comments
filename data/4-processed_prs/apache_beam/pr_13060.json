{"pr_number": 13060, "pr_title": "[BEAM-7746] Fix typing in runners", "pr_createdAt": "2020-10-09T16:06:34Z", "pr_url": "https://github.com/apache/beam/pull/13060", "timeline": [{"oid": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "url": "https://github.com/apache/beam/commit/d5b67e4303908a0ce85763e082c4da3105e8c52d", "message": "[BEAM-7746] Fix typing in runners", "committedDate": "2020-10-15T17:40:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNTcwNw==", "url": "https://github.com/apache/beam/pull/13060#discussion_r505725707", "bodyText": "I changed this import because profiler was conflicting with some local variable names, and this was the simplest resolution.", "author": "chadrik", "createdAt": "2020-10-15T17:43:57Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/fn_runner.py", "diffHunk": "@@ -62,13 +64,15 @@\n from apache_beam.runners.portability.fn_api_runner.translations import only_element\n from apache_beam.runners.portability.fn_api_runner.worker_handlers import WorkerHandlerManager\n from apache_beam.transforms import environments\n-from apache_beam.utils import profiler\n from apache_beam.utils import proto_utils\n from apache_beam.utils import thread_pool_executor\n+from apache_beam.utils.profiler import Profile", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNTk1Mg==", "url": "https://github.com/apache/beam/pull/13060#discussion_r505725952", "bodyText": "Can I safely get rid of this attribute?", "author": "chadrik", "createdAt": "2020-10-15T17:44:20Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/fn_runner.py", "diffHunk": "@@ -539,6 +548,7 @@ def merge_results(last_result):\n       else:\n         data_input = deferred_inputs\n         input_timers = fired_timers\n+        # FIXME: this seems unused, and produces an attr-defined error\n         bundle_manager._registered = True", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0ODExMg==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506748112", "bodyText": "Yes, this should not be needed anymore.", "author": "robertwb", "createdAt": "2020-10-16T22:30:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3ODcxNw==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506778717", "bodyText": "Removed.", "author": "chadrik", "createdAt": "2020-10-17T01:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNTk1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNjI3MA==", "url": "https://github.com/apache/beam/pull/13060#discussion_r505726270", "bodyText": "We discussed this before and you said this was safe, but just wanted to double check.", "author": "chadrik", "createdAt": "2020-10-15T17:44:51Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -307,6 +308,9 @@ def executable_stage_transform(\n           for side in side_inputs\n       },\n                           main_input=main_input_id)\n+      # at this point we should have resolved an environment, as the key of\n+      # components.environments cannot be None.\n+      assert self.environment is not None", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0ODU0Ng==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506748546", "bodyText": "Yes, that looks safe.", "author": "robertwb", "createdAt": "2020-10-16T22:32:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyNjI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyODM0NQ==", "url": "https://github.com/apache/beam/pull/13060#discussion_r505728345", "bodyText": "I decided to change this to pass in self.profile_location because in this context, where it's called, we know that it's not None.  Let's us avoid calling assert inside self._upload_profile_data", "author": "chadrik", "createdAt": "2020-10-15T17:48:27Z", "path": "sdks/python/apache_beam/utils/profiler.py", "diffHunk": "@@ -113,7 +116,10 @@ def __exit__(self, *args):\n           h = self.hpy.heap()\n           heap_dump_data = '%s\\n%s' % (h, h.more)\n           self._upload_profile_data(\n-              'memory_profile', heap_dump_data, write_binary=False)\n+              self.profile_location,\n+              'memory_profile',\n+              heap_dump_data,\n+              write_binary=False)\n ", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzMjU3Nw==", "url": "https://github.com/apache/beam/pull/13060#discussion_r505932577", "bodyText": "note to self:  standardize on PartitionableBuffer vs execution.PartitionableBuffer", "author": "chadrik", "createdAt": "2020-10-16T00:11:42Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/fn_runner.py", "diffHunk": "@@ -355,9 +361,9 @@ def _run_bundle_multiple_times_for_testing(\n       self,\n       runner_execution_context,  # type: execution.FnApiRunnerExecutionContext\n       bundle_manager,  # type: BundleManager\n-      data_input,\n+      data_input,  # type: Dict[str, PartitionableBuffer]\n       data_output,  # type: DataOutput\n-      fired_timers,\n+      fired_timers,  # type: Mapping[Tuple[str, str], execution.PartitionableBuffer]", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3ODU5Ng==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506778596", "bodyText": "resolved", "author": "chadrik", "createdAt": "2020-10-17T01:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzMjU3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzMzEzNA==", "url": "https://github.com/apache/beam/pull/13060#discussion_r505933134", "bodyText": "It would be good to get confirmation that this assert is correct.  AFAICT this method should never return None.", "author": "chadrik", "createdAt": "2020-10-16T00:14:02Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/worker_handlers.py", "diffHunk": "@@ -1062,34 +1104,41 @@ def close(self):\n \n \n class ControlFuture(object):\n-  def __init__(self, instruction_id, response=None):\n+  def __init__(self,\n+               instruction_id,  # type: str\n+               response=None  # type: Optional[beam_fn_api_pb2.InstructionResponse]\n+              ):\n+    # type: (...) -> None\n     self.instruction_id = instruction_id\n-    if response:\n-      self._response = response\n-    else:\n-      self._response = None\n+    self._response = response\n+    if response is None:\n       self._condition = threading.Condition()\n-    self._exception = None\n+    self._exception = None  # type: Optional[Exception]\n \n   def is_done(self):\n+    # type: () -> bool\n     return self._response is not None\n \n   def set(self, response):\n+    # type: (beam_fn_api_pb2.InstructionResponse) -> None\n     with self._condition:\n       self._response = response\n       self._condition.notify_all()\n \n   def get(self, timeout=None):\n+    # type: (Optional[float]) -> beam_fn_api_pb2.InstructionResponse\n     if not self._response and not self._exception:\n       with self._condition:\n         if not self._response and not self._exception:\n           self._condition.wait(timeout)\n     if self._exception:\n       raise self._exception\n     else:\n+      assert self._response is not None", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0OTY0Ng==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506749646", "bodyText": "Correct, either an exception will be thrown, a timeout will be thrown, or the response is non-None.", "author": "robertwb", "createdAt": "2020-10-16T22:36:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzMzEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0NzQyNA==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506747424", "bodyText": "How about making them raise errors rather than be no-ops?", "author": "robertwb", "createdAt": "2020-10-16T22:27:43Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/execution.py", "diffHunk": "@@ -227,12 +251,24 @@ def __iter__(self):\n     \"\"\"\n     return itertools.chain(*self.partition(1))\n \n+  # these should never be accessed, but they allow this class to meet the", "originalCommit": "d5b67e4303908a0ce85763e082c4da3105e8c52d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3NjUzMw==", "url": "https://github.com/apache/beam/pull/13060#discussion_r506776533", "bodyText": "I prefer the current solution because it's reasonable and safe to call clear() and reset() on this class and have it do nothing:  there's simply nothing to clear or reset.   It seems wrong to meet the protocol definition, but then error if the methods are called: that's not really meeting the protocol.", "author": "chadrik", "createdAt": "2020-10-17T01:11:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0NzQyNA=="}], "type": "inlineReview"}, {"oid": "f3af4275cfef9a3bfab479abae490d0e5bbd6cc5", "url": "https://github.com/apache/beam/commit/f3af4275cfef9a3bfab479abae490d0e5bbd6cc5", "message": "[BEAM-7746] Fix typing in runners", "committedDate": "2020-10-17T01:30:43Z", "type": "forcePushed"}, {"oid": "ff2626266d299064407bf54c532743ce2c11db2b", "url": "https://github.com/apache/beam/commit/ff2626266d299064407bf54c532743ce2c11db2b", "message": "[BEAM-7746] Fix typing in runners", "committedDate": "2020-10-19T18:38:26Z", "type": "forcePushed"}, {"oid": "95e2374c659ba9e7fbe42ac217c0b367120b6ee1", "url": "https://github.com/apache/beam/commit/95e2374c659ba9e7fbe42ac217c0b367120b6ee1", "message": "[BEAM-7746] Fix typing in runners", "committedDate": "2020-10-19T19:06:33Z", "type": "commit"}, {"oid": "95e2374c659ba9e7fbe42ac217c0b367120b6ee1", "url": "https://github.com/apache/beam/commit/95e2374c659ba9e7fbe42ac217c0b367120b6ee1", "message": "[BEAM-7746] Fix typing in runners", "committedDate": "2020-10-19T19:06:33Z", "type": "forcePushed"}]}