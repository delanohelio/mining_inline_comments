{"pr_number": 11557, "pr_title": "[BEAM-9845] Stage artifacts over expansion service.", "pr_createdAt": "2020-04-28T17:11:08Z", "pr_url": "https://github.com/apache/beam/pull/11557", "timeline": [{"oid": "8fbb78a493b1baa5b4e6e1ae3e12a1f4575f8c64", "url": "https://github.com/apache/beam/commit/8fbb78a493b1baa5b4e6e1ae3e12a1f4575f8c64", "message": "[BEAM-9845] Stage artifacts over expansion service.", "committedDate": "2020-04-28T17:14:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1Nzk4Mg==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418057982", "bodyText": "Is the resolution order documented somewhere?", "author": "mxm", "createdAt": "2020-04-30T14:35:47Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/DefaultArtifactResolver.java", "diffHunk": "@@ -62,6 +63,24 @@ public void register(ResolutionFn fn) {\n     fns.add(fn);\n   }\n \n+  @Override\n+  public List<RunnerApi.ArtifactInformation> resolveArtifacts(\n+      List<RunnerApi.ArtifactInformation> artifacts) {\n+    for (ResolutionFn fn : Lists.reverse(fns)) {", "originalCommit": "4e39d055007060288d6c3abc32cd14f51d47f3a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0ODI4Ng==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418348286", "bodyText": "Yes, this is documented in the class's docstring.", "author": "robertwb", "createdAt": "2020-04-30T23:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1Nzk4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MDc0NQ==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418060745", "bodyText": "Was this necessary to transfer the artifacts?", "author": "mxm", "createdAt": "2020-04-30T14:39:20Z", "path": "sdks/python/apache_beam/utils/subprocess_server.py", "diffHunk": "@@ -98,7 +98,9 @@ def log_stdout():\n         t.daemon = True\n         t.start()\n         wait_secs = .1\n-        channel = grpc.insecure_channel(endpoint)\n+        channel_options = [(\"grpc.max_receive_message_length\", -1),\n+                           (\"grpc.max_send_message_length\", -1)]", "originalCommit": "4e39d055007060288d6c3abc32cd14f51d47f3a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0ODY5NQ==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418348695", "bodyText": "Yep, the default block size (4MB) produced messages just over the default grpc limits (4MB). I figured setting these here was safer, as the message size is chosen by the other side. We have similar settings elsewhere (e.g. on the data channel).", "author": "robertwb", "createdAt": "2020-04-30T23:40:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MDc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4MzgwOA==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418083808", "bodyText": "Please remove or replace with logging", "author": "mxm", "createdAt": "2020-04-30T15:10:31Z", "path": "sdks/python/apache_beam/transforms/external.py", "diffHunk": "@@ -317,13 +317,17 @@ def expand(self, pvalueish):\n         transform=transform_proto)\n \n     with self._service() as service:\n+      print(type(service))", "originalCommit": "4e39d055007060288d6c3abc32cd14f51d47f3a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0OTkyMQ==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418349921", "bodyText": "Oops. Removed.", "author": "robertwb", "createdAt": "2020-04-30T23:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4MzgwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4NzYyNQ==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418087625", "bodyText": "Should this be prefixed by something pipeline-specific?", "author": "mxm", "createdAt": "2020-04-30T15:16:01Z", "path": "sdks/python/apache_beam/pipeline.py", "diffHunk": "@@ -211,6 +211,8 @@ def __init__(self, runner=None, options=None, argv=None):\n         experiments.append('beam_fn_api')\n         self._options.view_as(DebugOptions).experiments = experiments\n \n+    self.local_tempdir = tempfile.mkdtemp(prefix='beam-pipeline-temp')", "originalCommit": "4e39d055007060288d6c3abc32cd14f51d47f3a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM0OTQ1Nw==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418349457", "bodyText": "Did you have something in mind? I don't think there's a good name here we can use. The system will of course ensure this directory is unique per pipeline.", "author": "robertwb", "createdAt": "2020-04-30T23:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4NzYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwOTg1NA==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418609854", "bodyText": "That's fine then, wasn't sure whether this is a unique directory.", "author": "mxm", "createdAt": "2020-05-01T16:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4NzYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3NTEwNg==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418375106", "bodyText": "This assumes that the set of classpath resources required to execute Java SDK harness and execute the cross-langauge Java step to be the same as the set of classpath resources specified when starting up the expansion service, right ?\nI'm wondering if we can always rely on this. At least we should document this so that users are aware how to stage additional resources if needed.", "author": "chamikaramj", "createdAt": "2020-05-01T01:22:16Z", "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "diffHunk": "@@ -317,6 +321,14 @@ default InputT createInput(Pipeline p, Map<String, PCollection<?>> inputs) {\n     Pipeline pipeline = Pipeline.create();\n     ExperimentalOptions.addExperiment(\n         pipeline.getOptions().as(ExperimentalOptions.class), \"beam_fn_api\");\n+    List<String> classpathResources =\n+        detectClassPathResourcesToStage(Environments.class.getClassLoader(), pipeline.getOptions());", "originalCommit": "b47361eccc0ff5b9c64e7cd30702c27a25a518e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQwMTk4Nw==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418401987", "bodyText": "Correct. This is a reasonable default (and the provider of an expansion service can always arrange that it is so), but we'll probably eventually want a way to customize this.", "author": "robertwb", "createdAt": "2020-05-01T03:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3NTEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3Njg0NQ==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418376845", "bodyText": "Can we update 'validate_runner_xlang_test.py' for Spark and Flink as well or do we need additional changes before that.\njar_packages cannot be completely removed yet since Dataflow needs it.", "author": "chamikaramj", "createdAt": "2020-05-01T01:29:55Z", "path": "sdks/python/apache_beam/transforms/sql_test.py", "diffHunk": "@@ -66,20 +66,8 @@ class SqlTransformTest(unittest.TestCase):\n         --tests apache_beam.transforms.sql_test \\\\\n         --test-pipeline-options=\"--runner=FlinkRunner\"\n   \"\"\"\n-  @staticmethod\n-  def make_test_pipeline():\n-    path_to_jar = subprocess_server.JavaJarServer.path_to_beam_jar(\n-        \":sdks:java:extensions:sql:expansion-service:shadowJar\")\n-    test_pipeline = TestPipeline()\n-    # TODO(BEAM-9238): Remove this when it's no longer needed for artifact\n-    # staging.\n-    test_pipeline.get_pipeline_options().view_as(DebugOptions).experiments = [\n-        'jar_packages=' + path_to_jar", "originalCommit": "b47361eccc0ff5b9c64e7cd30702c27a25a518e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQwNTcxNg==", "url": "https://github.com/apache/beam/pull/11557#discussion_r418405716", "bodyText": "Done.", "author": "robertwb", "createdAt": "2020-05-01T03:54:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3Njg0NQ=="}], "type": "inlineReview"}, {"oid": "93fe47337a5dbd14e3d6dba79484f51bf82d424c", "url": "https://github.com/apache/beam/commit/93fe47337a5dbd14e3d6dba79484f51bf82d424c", "message": "[BEAM-9577] Resolve dependencies in Java expansion service.", "committedDate": "2020-05-05T08:26:52Z", "type": "forcePushed"}, {"oid": "e725118fb1afb6d869b9b4e19110aae26ddd26ed", "url": "https://github.com/apache/beam/commit/e725118fb1afb6d869b9b4e19110aae26ddd26ed", "message": "Move job server to its own module.\n\nThis avoids circular dependencies with the expansion service.", "committedDate": "2020-05-06T08:46:27Z", "type": "commit"}, {"oid": "61d0029246b7af7c656d03f10b3001475a811ea9", "url": "https://github.com/apache/beam/commit/61d0029246b7af7c656d03f10b3001475a811ea9", "message": "[BEAM-9845] Stage artifacts over expansion service.", "committedDate": "2020-05-06T08:46:27Z", "type": "commit"}, {"oid": "544e56874a84deee4e597b48ce8d3b501ab117a6", "url": "https://github.com/apache/beam/commit/544e56874a84deee4e597b48ce8d3b501ab117a6", "message": "[BEAM-9577] Resolve dependencies in Java expansion service.", "committedDate": "2020-05-06T08:46:27Z", "type": "commit"}, {"oid": "de83a82c1d22a8eda9f214a6d57e9d69215979de", "url": "https://github.com/apache/beam/commit/de83a82c1d22a8eda9f214a6d57e9d69215979de", "message": "Start artifact service in expansion service driver.\n0;256;0c# Please enter the commit message for your changes. Lines starting", "committedDate": "2020-05-06T10:09:18Z", "type": "commit"}, {"oid": "de83a82c1d22a8eda9f214a6d57e9d69215979de", "url": "https://github.com/apache/beam/commit/de83a82c1d22a8eda9f214a6d57e9d69215979de", "message": "Start artifact service in expansion service driver.\n0;256;0c# Please enter the commit message for your changes. Lines starting", "committedDate": "2020-05-06T10:09:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMjUyMA==", "url": "https://github.com/apache/beam/pull/11557#discussion_r423322520", "bodyText": "This import is guarded and optional. So if the guard fails, this always fails.", "author": "kennknowles", "createdAt": "2020-05-11T21:11:57Z", "path": "sdks/python/apache_beam/transforms/external.py", "diffHunk": "@@ -443,6 +470,18 @@ def _normalize(coder_proto):\n         environment_id=self._expanded_transform.environment_id)\n \n \n+class ExpansionAndArtifactRetrievalStub(\n+    beam_expansion_api_pb2_grpc.ExpansionServiceStub):", "originalCommit": "de83a82c1d22a8eda9f214a6d57e9d69215979de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}