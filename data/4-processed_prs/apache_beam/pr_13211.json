{"pr_number": 13211, "pr_title": "[BEAM-8106] Separate Java8/11 container image build tasks", "pr_createdAt": "2020-10-28T00:48:24Z", "pr_url": "https://github.com/apache/beam/pull/13211", "timeline": [{"oid": "7438e08ecdaaa43a587b3b2ec7e9596b95ee563a", "url": "https://github.com/apache/beam/commit/7438e08ecdaaa43a587b3b2ec7e9596b95ee563a", "message": "add separate docker Gradle tasks for java8/11", "committedDate": "2020-10-30T22:39:03Z", "type": "forcePushed"}, {"oid": "3b51fc106d3f796484527a0f39bfacd243f0eb27", "url": "https://github.com/apache/beam/commit/3b51fc106d3f796484527a0f39bfacd243f0eb27", "message": "add separate gradle task for java11 container image", "committedDate": "2020-10-31T04:01:31Z", "type": "forcePushed"}, {"oid": "0971c9c7ef3ecc2d7bf61f7a1464840dab0db1c2", "url": "https://github.com/apache/beam/commit/0971c9c7ef3ecc2d7bf61f7a1464840dab0db1c2", "message": "add separate java8/11 image tasks", "committedDate": "2020-11-02T21:21:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MzA3NA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r516283074", "bodyText": "since this uses the runner buildAndPushDockerContainer task which now checks for -PcompileAndRunTestsWithJava11, we don't need this flag anymore", "author": "emilymye", "createdAt": "2020-11-02T22:07:48Z", "path": ".test-infra/jenkins/job_PreCommit_Java_Examples_Dataflow_Java11.groovy", "diffHunk": "@@ -46,7 +46,6 @@ builder.build {\n     gradle {\n       rootBuildScriptDir(properties.checkoutDir)\n       tasks 'javaExamplesDataflowPreCommit'\n-      switches '-PimageJavaVersion=11'", "originalCommit": "0971c9c7ef3ecc2d7bf61f7a1464840dab0db1c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MzQyOQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r516283429", "bodyText": "Docker tasks were split out into common.gradle", "author": "emilymye", "createdAt": "2020-11-02T22:08:30Z", "path": "sdks/java/container/build.gradle", "diffHunk": "@@ -54,17 +55,6 @@ dependencies {\n   dockerDependency library.java.kafka_clients\n }\n \n-task copyDockerfileDependencies(type: Copy) {", "originalCommit": "0971c9c7ef3ecc2d7bf61f7a1464840dab0db1c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1MjMyMw==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520852323", "bodyText": "Ack, thank you", "author": "TheNeuralBit", "createdAt": "2020-11-10T20:25:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MzQyOQ=="}], "type": "inlineReview"}, {"oid": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "url": "https://github.com/apache/beam/commit/a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "message": "change evaluationDependsOn to separate java8/11 tasks", "committedDate": "2020-11-10T18:54:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1NDA1OQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520854059", "bodyText": "(not a blocker for this PR) @kennknowles can you comment on why we need this? It would be good to have a comment explaining it. Looks like it was added in ebd65e5", "author": "TheNeuralBit", "createdAt": "2020-11-10T20:28:56Z", "path": "sdks/java/container/build.gradle", "diffHunk": "@@ -86,51 +76,21 @@ licenseReport {\n   renderers = [new JsonReportRenderer()]\n }\n \n-def imageJavaVersion = project.hasProperty('imageJavaVersion') ? project.findProperty('imageJavaVersion') : '8'\n-docker {\n-  name containerImageName(\n-          name: \"${project.docker_image_default_repo_prefix}java${imageJavaVersion}_sdk\",\n-          root: project.rootProject.hasProperty([\"docker-repository-root\"]) ?\n-                  project.rootProject[\"docker-repository-root\"] :\n-                  project.docker_image_default_repo_root,\n-          tag: project.rootProject.hasProperty([\"docker-tag\"]) ?\n-                  project.rootProject[\"docker-tag\"] : project.sdk_version)\n-  dockerfile project.file(\"./Dockerfile\")\n-  files \"./build/\"\n-  buildArgs([\n-    'pull_licenses': project.rootProject.hasProperty([\"docker-pull-licenses\"]) ||\n-                     project.rootProject.hasProperty([\"isRelease\"]),\n-    'java_version': imageJavaVersion,\n-  ])\n+task buildAll {\n+  dependsOn ':sdks:java:container:java8:docker'\n+  dependsOn ':sdks:java:container:java11:docker'\n }\n \n task pullLicenses(type: Exec) {\n+  dependsOn generateLicenseReport\n+  generateLicenseReport.outputs.cacheIf { false }", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2OTc4NQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520869785", "bodyText": "I noticed when I was fixing this file up that the dependency report was being pulled from the build cache. I guess it doesn't depend on the build.gradle so when deps change or when the config changes it doesn't update the report. I could be wrong. It may have been a temporary problem related to the particular change I was making.", "author": "kennknowles", "createdAt": "2020-11-10T20:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1NDA1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1OTU0OA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520859548", "bodyText": "Maybe we should keep the :sdks:java:container:docker task for a bit and just have it error with a message directing people to java8:docker and/or java11:docker?", "author": "TheNeuralBit", "createdAt": "2020-11-10T20:39:32Z", "path": "sdks/java/container/build.gradle", "diffHunk": "@@ -86,51 +76,21 @@ licenseReport {\n   renderers = [new JsonReportRenderer()]\n }\n \n-def imageJavaVersion = project.hasProperty('imageJavaVersion') ? project.findProperty('imageJavaVersion') : '8'\n-docker {", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMzg0NA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r521703844", "bodyText": "My current approach was just to just add a task docker { throw ... } block to replace the Docker plugin-created tasks, but but I can't figure out how to get the license report to ignore this task (and avoid throwing the error). This might just be a gradle question but a) should I be throwing the error differently and b) should the license report be the same task for both java8/11?", "author": "emilymye", "createdAt": "2020-11-11T23:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1OTU0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyODQ3NQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r524528475", "bodyText": "Hm ok, I'm not sure if we have any precedent to follow for this. I don't think it's worth going to a lot of trouble for. Instead you could just send an FYI email to dev@ once this is merged letting people know they may need to change :sdks:java:container:docker -> :sdks:java:container:java8:docker.", "author": "TheNeuralBit", "createdAt": "2020-11-16T19:45:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1OTU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2MjU4MA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520862580", "bodyText": "Are there plans to make this and the other portable tests runnable with the Java 11 container? Seems like we should drop a TODO and/or file a jira", "author": "TheNeuralBit", "createdAt": "2020-11-10T20:44:59Z", "path": "runners/portability/java/build.gradle", "diffHunk": "@@ -214,7 +214,7 @@ def createUlrValidatesRunnerTask = { name, environmentType ->\n   }\n \n   if (environmentType == \"DOCKER\") {\n-    vrTask.dependsOn \":sdks:java:container:docker\"\n+    vrTask.dependsOn \":sdks:java:container:java8:docker\"", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2ODg4NQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520868885", "bodyText": "Seems just as easy to make it a parameter. You could make the $ver a parameter as elsewhere in this PR or you could go further and pass in the name of the target to depend on.\nPro: if anyone renames the target they can search and find the fact that it is depended on.\nCon: if anyone renames the target they do have to change it in all those places so if done manually it is more work. Also the control flow reading is a little more complex.\nAll in all, I dislike mechanical assembly of target names, whether for definition or execution. So I prefer treating the whole target name as an atomic value and passing it in.", "author": "kennknowles", "createdAt": "2020-11-10T20:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2MjU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2OTIyOQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520869229", "bodyText": "Unused?", "author": "kennknowles", "createdAt": "2020-11-10T20:57:32Z", "path": "sdks/java/container/build.gradle", "diffHunk": "@@ -86,51 +76,21 @@ licenseReport {\n   renderers = [new JsonReportRenderer()]\n }\n \n-def imageJavaVersion = project.hasProperty('imageJavaVersion') ? project.findProperty('imageJavaVersion') : '8'\n-docker {\n-  name containerImageName(\n-          name: \"${project.docker_image_default_repo_prefix}java${imageJavaVersion}_sdk\",\n-          root: project.rootProject.hasProperty([\"docker-repository-root\"]) ?\n-                  project.rootProject[\"docker-repository-root\"] :\n-                  project.docker_image_default_repo_root,\n-          tag: project.rootProject.hasProperty([\"docker-tag\"]) ?\n-                  project.rootProject[\"docker-tag\"] : project.sdk_version)\n-  dockerfile project.file(\"./Dockerfile\")\n-  files \"./build/\"\n-  buildArgs([\n-    'pull_licenses': project.rootProject.hasProperty([\"docker-pull-licenses\"]) ||\n-                     project.rootProject.hasProperty([\"isRelease\"]),\n-    'java_version': imageJavaVersion,\n-  ])\n+task buildAll {", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg4OTgyNQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r521889825", "bodyText": "split a PR but didn't move this over to the followup - will do so!", "author": "emilymye", "createdAt": "2020-11-12T07:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2OTIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MTEzMg==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520871132", "bodyText": "It would be handy to have some reverse pointers from this file to where it is used, in case things move around. Since this file is essentially meant to be used as a parameterized entrypoint for the other two modules. I know it may seem obvious but someone without context coming here will take a minute to sort it out.", "author": "kennknowles", "createdAt": "2020-11-10T21:01:08Z", "path": "sdks/java/container/common.gradle", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+applyDockerNature()", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MTQwMQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520871401", "bodyText": "My dream, which may be impossible, is that this can be passed as a parameter somehow to the apply from: line so that the control and data flow are more clear.", "author": "kennknowles", "createdAt": "2020-11-10T21:01:41Z", "path": "sdks/java/container/java11/build.gradle", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+plugins {\n+    id 'base'\n+    id 'org.apache.beam.module'\n+}\n+\n+project.ext {\n+    imageJavaVersion = '11'", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg5OTI1NA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r521899254", "bodyText": "I don't think apply from supports this (I think? gradle documentation is confusing but it seems like it's not supported via https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)) but I tried to make this slightly cleaner so these files literally only holds the parameters before applying the script", "author": "emilymye", "createdAt": "2020-11-12T07:52:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MTQwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MTY1Mw==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520871653", "bodyText": "I suggest making this non-optional and failing if the file is included by a project that did not pass the parameter.", "author": "kennknowles", "createdAt": "2020-11-10T21:02:07Z", "path": "sdks/java/container/common.gradle", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+applyDockerNature()\n+\n+def imageJavaVersion = project.hasProperty('imageJavaVersion') ? project.findProperty('imageJavaVersion').replace(\"java\", \"\") : '8'", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg5OTcyNA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r521899724", "bodyText": "done", "author": "emilymye", "createdAt": "2020-11-12T07:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MjI2Nw==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520872267", "bodyText": "I would also suggest potentially passing in the whole atomic name. Also maybe no need for \"Python\" in the name.", "author": "kennknowles", "createdAt": "2020-11-10T21:03:22Z", "path": "sdks/java/container/common.gradle", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+applyDockerNature()\n+\n+def imageJavaVersion = project.hasProperty('imageJavaVersion') ? project.findProperty('imageJavaVersion').replace(\"java\", \"\") : '8'\n+\n+description = \"Apache Beam :: SDKs :: Python :: Container :: Java ${imageJavaVersion} Container\"", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg5OTcwMw==", "url": "https://github.com/apache/beam/pull/13211#discussion_r521899703", "bodyText": "I kind of like the safety that we only have to supply this description path in one place", "author": "emilymye", "createdAt": "2020-11-12T07:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MjI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MzM5Mw==", "url": "https://github.com/apache/beam/pull/13211#discussion_r520873393", "bodyText": "Same comment about trying to keep names a bit less constructed by string append. I can see that the Java version is used in a bunch of places that need to match, so I can accept that one being injected.\nHow much of this could go in e.g. applyDockerNature(...) ?\nI don't like how all of our different types of builds are defined on one monolithic file (BeamModulePlugin) with a bunch of cross-dependencies. At some point I'd love them to be factored apart into more independent plugins. But relative to the status quo, this file does seem like another kind of \"nature\". So this adds another kind of composition for folks to know about. In fairness, this composition is simpler and cleaner than the monolithic file. However, this is exactly how the monolithic file came to be: we had an apply from:... situation that grew and grew until it was impossible to deal with.", "author": "kennknowles", "createdAt": "2020-11-10T21:05:34Z", "path": "sdks/java/container/common.gradle", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+applyDockerNature()\n+\n+def imageJavaVersion = project.hasProperty('imageJavaVersion') ? project.findProperty('imageJavaVersion').replace(\"java\", \"\") : '8'\n+\n+description = \"Apache Beam :: SDKs :: Python :: Container :: Java ${imageJavaVersion} Container\"\n+\n+configurations {\n+    dockerDependency\n+    sdkHarnessLauncher\n+    pulledLicenses\n+}\n+\n+dependencies {\n+    pulledLicenses project(path: \":sdks:java:container\", configuration: \"pulledLicenses\")\n+    dockerDependency project(path: \":sdks:java:container\", configuration: \"dockerDependency\")\n+    sdkHarnessLauncher project(path: \":sdks:java:container\", configuration: \"sdkHarnessLauncher\")\n+}\n+\n+task copyDockerfileDependencies(type: Copy) {\n+    from configurations.dockerDependency\n+    rename \"slf4j-api.*\", \"slf4j-api.jar\"\n+    rename \"slf4j-jdk14.*\", \"slf4j-jdk14.jar\"\n+    rename 'beam-sdks-java-harness-.*.jar', 'beam-sdks-java-harness.jar'\n+    rename 'beam-sdks-java-io-kafka.*.jar', 'beam-sdks-java-io-kafka.jar'\n+    rename 'kafka-clients.*.jar', 'kafka-clients.jar'\n+    into \"build/target\"\n+}\n+\n+task copySdkHarnessLauncher(type: Copy) {\n+    from configurations.sdkHarnessLauncher\n+    into \"build/target\"\n+}\n+\n+task copyPulledLicenses(type: Copy) {\n+    from configurations.pulledLicenses\n+    into \"build/target\"\n+}\n+\n+task copyGolangLicenses(type: Copy) {\n+    from \"${project(':release:go-licenses:java').buildDir}/output\"\n+    into \"build/target/go-licenses\"\n+    dependsOn ':release:go-licenses:java:createLicenses'\n+}\n+\n+task skipPullLicenses(type: Exec) {\n+    executable \"sh\"\n+    args \"-c\", \"mkdir -p build/target/third_party_licenses && touch build/target/third_party_licenses/skip\"\n+}\n+\n+docker {\n+    name containerImageName(\n+            name: \"${project.docker_image_default_repo_prefix}java${imageJavaVersion}_sdk\",", "originalCommit": "a3f65fe426a473ff9f5c48457c0ec316be15dfdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg5ODQxNw==", "url": "https://github.com/apache/beam/pull/13211#discussion_r521898417", "bodyText": "If I adapted it to applyDockerNature I'd probably do it in a different PR since I'll be potentially affecting all the other containers", "author": "emilymye", "createdAt": "2020-11-12T07:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MzM5Mw=="}], "type": "inlineReview"}, {"oid": "e366f9f3c19abba3abd32d9942e59508fd4f598b", "url": "https://github.com/apache/beam/commit/e366f9f3c19abba3abd32d9942e59508fd4f598b", "message": "fixes to common java build script", "committedDate": "2020-11-12T07:59:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyOTE2OA==", "url": "https://github.com/apache/beam/pull/13211#discussion_r524529168", "bodyText": "typo nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Build script containign common build tasks for Java SDK Docker images.\n          \n          \n            \n             * Build script containing common build tasks for Java SDK Docker images.", "author": "TheNeuralBit", "createdAt": "2020-11-16T19:46:36Z", "path": "sdks/java/container/common.gradle", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * License); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an AS IS BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Build script containign common build tasks for Java SDK Docker images.", "originalCommit": "e366f9f3c19abba3abd32d9942e59508fd4f598b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "847f62d7d8a7bd6306d78978ca5c66ac9714ecc0", "url": "https://github.com/apache/beam/commit/847f62d7d8a7bd6306d78978ca5c66ac9714ecc0", "message": "add separate java8/11 image tasks", "committedDate": "2020-11-16T22:44:40Z", "type": "commit"}, {"oid": "dc0ecf8c88a39af667246e9099a4d9eb61599260", "url": "https://github.com/apache/beam/commit/dc0ecf8c88a39af667246e9099a4d9eb61599260", "message": "change evaluationDependsOn to separate java8/11 tasks", "committedDate": "2020-11-16T22:44:50Z", "type": "commit"}, {"oid": "f235085b28b05b839972a36d00428f98e51dca6d", "url": "https://github.com/apache/beam/commit/f235085b28b05b839972a36d00428f98e51dca6d", "message": "add dockerTaskArg to createUlrValidatesRunnerTask", "committedDate": "2020-11-16T22:44:52Z", "type": "commit"}, {"oid": "6ac4b867ad4b22df9b2af3cdca461a8adff9afd1", "url": "https://github.com/apache/beam/commit/6ac4b867ad4b22df9b2af3cdca461a8adff9afd1", "message": "remove buildall task", "committedDate": "2020-11-16T22:44:53Z", "type": "commit"}, {"oid": "0dfed762930123b1919d888512548c6e95fdbafb", "url": "https://github.com/apache/beam/commit/0dfed762930123b1919d888512548c6e95fdbafb", "message": "fixes to common java build script", "committedDate": "2020-11-16T22:44:54Z", "type": "commit"}, {"oid": "0dfed762930123b1919d888512548c6e95fdbafb", "url": "https://github.com/apache/beam/commit/0dfed762930123b1919d888512548c6e95fdbafb", "message": "fixes to common java build script", "committedDate": "2020-11-16T22:44:54Z", "type": "forcePushed"}, {"oid": "6a859e4a1329c94a2c428bc8b52db7c9db086fa0", "url": "https://github.com/apache/beam/commit/6a859e4a1329c94a2c428bc8b52db7c9db086fa0", "message": "fix typo", "committedDate": "2020-11-17T01:35:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mjk0NTU2MQ==", "url": "https://github.com/apache/beam/pull/13211#discussion_r562945561", "bodyText": "The finalizeBy definition here breaks the Kafka Performance Test[1] because it makes the docker image get cleaned up as soon as it is pushed.\nWe define the cleanup logic here: https://github.com/apache/beam/blame/master/runners/google-cloud-dataflow-java/build.gradle#L280-L287\n[1] https://ci-beam.apache.org/job/beam_PerformanceTests_Kafka_IO/", "author": "boyuanzz", "createdAt": "2021-01-22T22:19:21Z", "path": "runners/google-cloud-dataflow-java/build.gradle", "diffHunk": "@@ -246,9 +247,11 @@ def createRunnerV2ValidatesRunnerTest = { Map args ->\n // task directly ('dependsOn buildAndPushDockerContainer'). This ensures the correct\n // task ordering such that the registry doesn't get cleaned up prior to task completion.\n task buildAndPushDockerContainer() {\n-  dependsOn \":sdks:java:container:docker\"\n+  def javaVer = project.hasProperty('compileAndRunTestsWithJava11') ? \"java11\" : \"java8\"\n+  dependsOn \":sdks:java:container:${javaVer}:docker\"\n+  finalizedBy 'cleanUpDockerImages'", "originalCommit": "6a859e4a1329c94a2c428bc8b52db7c9db086fa0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}