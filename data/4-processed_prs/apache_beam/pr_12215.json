{"pr_number": 12215, "pr_title": "[BEAM-10310] Adding thread-safe restriction tracker wrapper.", "pr_createdAt": "2020-07-10T01:25:04Z", "pr_url": "https://github.com/apache/beam/pull/12215", "timeline": [{"oid": "053ac167107f77d098d770775bcefe356acd2973", "url": "https://github.com/apache/beam/commit/053ac167107f77d098d770775bcefe356acd2973", "message": "[BEAM-10310] Adding thread-safe restriction tracker wrapper.\n\nPretty self-explanatory. The wrapper was basic enough that I don't think it\nmakes sense to test it with unit tests. You'd basically just be unit testing\nthe mutex. Instead, I'm testing it in practice by replacing existing\nrestriction tracker usage with the thread-safe one.", "committedDate": "2020-07-10T01:22:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwMDU3OA==", "url": "https://github.com/apache/beam/pull/12215#discussion_r452600578", "bodyText": "I'm a bit concerned with these lines here where one is accessing the internal Restrictions. They're being accessed outside of the lock's critical section. Should we have a Restriction() interface{} method to get the appropriate restriction in a thread safe manner?", "author": "lostluck", "createdAt": "2020-07-10T03:17:57Z", "path": "sdks/go/pkg/beam/io/synthetic/source.go", "diffHunk": "@@ -124,8 +125,8 @@ func (fn *sourceFn) Setup() {\n // ProcessElement creates a number of random elements based on the restriction\n // tracker received. Each element is a random byte slice key and value, in the\n // form of KV<[]byte, []byte>.\n-func (fn *sourceFn) ProcessElement(rt *offsetrange.Tracker, config SourceConfig, emit func([]byte, []byte)) error {\n-\tfor i := rt.Rest.Start; rt.TryClaim(i) == true; i++ {\n+func (fn *sourceFn) ProcessElement(rt *sdf.LockRTracker, _ SourceConfig, emit func([]byte, []byte)) error {\n+\tfor i := rt.Rt.(*offsetrange.Tracker).Rest.Start; rt.TryClaim(i) == true; i++ {", "originalCommit": "053ac167107f77d098d770775bcefe356acd2973", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwOTMxMw==", "url": "https://github.com/apache/beam/pull/12215#discussion_r453109313", "bodyText": "Hmm, that's a good point. I didn't think about it much because it was fine before, but yeah this wouldn't work now. A split could theoretically be happening while that line is being called, and the tracker would be modified. I'll try adding a getter.", "author": "youngoli", "createdAt": "2020-07-10T22:45:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwMDU3OA=="}], "type": "inlineReview"}, {"oid": "04e5cd3106706b5ecc4dfd4199d245a615201998", "url": "https://github.com/apache/beam/commit/04e5cd3106706b5ecc4dfd4199d245a615201998", "message": "[BEAM-10310] Adding GetRestriction method for RTrackers.\n\nAlso makes some fields in offsetrange.Tracker private, since they don't really\nneed to be public anymore.", "committedDate": "2020-07-11T03:50:35Z", "type": "commit"}]}