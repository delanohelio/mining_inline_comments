{"pr_number": 12131, "pr_title": "[BEAM-10335] Add STS assume role to AwsModule", "pr_createdAt": "2020-06-30T05:58:00Z", "pr_url": "https://github.com/apache/beam/pull/12131", "timeline": [{"oid": "f52c7de94af8dcbbe115277c51c6c824e1b72a80", "url": "https://github.com/apache/beam/commit/f52c7de94af8dcbbe115277c51c6c824e1b72a80", "message": "BEAM-10335 add STS assume role to AwsModule", "committedDate": "2020-06-30T05:49:18Z", "type": "commit"}, {"oid": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed", "url": "https://github.com/apache/beam/commit/3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed", "message": "BEAM-10335 add STS assume role to AwsModule", "committedDate": "2020-06-30T05:56:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2MTQxNg==", "url": "https://github.com/apache/beam/pull/12131#discussion_r447761416", "bodyText": "Why do we need to use a Wrapper instead of just using STSAssumeRoleSessionCredentialsProvider?", "author": "aromanenko-dev", "createdAt": "2020-06-30T15:11:30Z", "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/sts/STSCredentialsProviderWrapper.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.aws.sts;\n+\n+import com.amazonaws.auth.AWSCredentials;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n+import com.amazonaws.regions.Regions;\n+import com.amazonaws.services.securitytoken.AWSSecurityTokenService;\n+import com.amazonaws.services.securitytoken.AWSSecurityTokenServiceClientBuilder;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+/*\n+ *\n+ * {@link AWSCredentialsProvider} that loads credentials using Assume Role\n+ *\n+ */\n+\n+public class STSCredentialsProviderWrapper implements AWSCredentialsProvider {", "originalCommit": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2NTIzMQ==", "url": "https://github.com/apache/beam/pull/12131#discussion_r447765231", "bodyText": "I'm not sure that it's needed to create a separate package for STS. Can we put STSCredentialsProviderWrapper  into options?", "author": "aromanenko-dev", "createdAt": "2020-06-30T15:16:40Z", "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/sts/package-info.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/** Defines IO connectors for Amazon Web Services SQS. */\n+@Experimental(Kind.SOURCE_SINK)\n+package org.apache.beam.sdk.io.aws.sts;", "originalCommit": "3ceac0c0a1091f7f093a39dc464cfa5d64e9c2ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dba93f9e794e6e53d3339b08b0c3b8eacf7d53ba", "url": "https://github.com/apache/beam/commit/dba93f9e794e6e53d3339b08b0c3b8eacf7d53ba", "message": "[BEAM-10335] update with unit test", "committedDate": "2020-06-30T21:57:00Z", "type": "commit"}, {"oid": "134be881d0731abb7b0a192dc1c6d8df0cce2b6a", "url": "https://github.com/apache/beam/commit/134be881d0731abb7b0a192dc1c6d8df0cce2b6a", "message": "[BEAM-10335] update with gradle build", "committedDate": "2020-07-01T10:44:34Z", "type": "commit"}, {"oid": "f78d77072b730e43bffbb28f745199a3ba7e0917", "url": "https://github.com/apache/beam/commit/f78d77072b730e43bffbb28f745199a3ba7e0917", "message": "[BEAM-10335] apply spotless", "committedDate": "2020-07-01T16:00:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3MjQ0Ng==", "url": "https://github.com/apache/beam/pull/12131#discussion_r448472446", "bodyText": "Why do we need this plugin? I don't think we have to distribute shadow jar.", "author": "aromanenko-dev", "createdAt": "2020-07-01T16:14:52Z", "path": "sdks/java/io/amazon-web-services/build.gradle", "diffHunk": "@@ -18,13 +18,21 @@ import groovy.json.JsonOutput\n  * limitations under the License.\n  */\n \n-plugins { id 'org.apache.beam.module' }\n-applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.io.aws')\n+plugins {\n+  id 'com.github.johnrengelman.shadow'", "originalCommit": "f78d77072b730e43bffbb28f745199a3ba7e0917", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3NDg5Ng==", "url": "https://github.com/apache/beam/pull/12131#discussion_r448474896", "bodyText": "I'm not sure we need to shadow here.", "author": "aromanenko-dev", "createdAt": "2020-07-01T16:18:53Z", "path": "sdks/java/io/amazon-web-services/build.gradle", "diffHunk": "@@ -18,13 +18,21 @@ import groovy.json.JsonOutput\n  * limitations under the License.\n  */\n \n-plugins { id 'org.apache.beam.module' }\n-applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.io.aws')\n+plugins {\n+  id 'com.github.johnrengelman.shadow'\n+  id 'org.apache.beam.module'\n+}\n+applyJavaNature(\n+        automaticModuleName: 'org.apache.beam.sdk.io.aws'\n+)\n \n description = \"Apache Beam :: SDKs :: Java :: IO :: Amazon Web Services\"\n ext.summary = \"IO library to read and write Amazon Web Services services from Beam.\"\n \n dependencies {\n+  shadow localGroovy()", "originalCommit": "f78d77072b730e43bffbb28f745199a3ba7e0917", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3NzcyOA==", "url": "https://github.com/apache/beam/pull/12131#discussion_r448477728", "bodyText": "Please, add Serialization/Deserialization asserts as we do for other provider tests.", "author": "aromanenko-dev", "createdAt": "2020-07-01T16:23:34Z", "path": "sdks/java/io/amazon-web-services/src/test/java/org/apache/beam/sdk/io/aws/options/AwsModuleTest.java", "diffHunk": "@@ -117,6 +119,17 @@ public void testClasspathPropertiesFileCredentialsProviderSerializationDeseriali\n     assertEquals(credentialsFilePath, deserializedCredentialsFilePath);\n   }\n \n+  @Test\n+  public void testSTSCredentialsProviderWrapperSerializationDeserialization() throws Exception {\n+    String roleArn = \"arn:aws:iam::000111222333:role/TestRole\";\n+    String roleSessionName = \"roleSessionName\";\n+    STSAssumeRoleSessionCredentialsProvider credentialsProvider =\n+        AssumeRoleSessionCredentialsProvider.getInstance(roleArn, roleSessionName)\n+            .getSessionCredentialsProvider();\n+\n+    assertNotNull(credentialsProvider);", "originalCommit": "f78d77072b730e43bffbb28f745199a3ba7e0917", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ4MjAwMg==", "url": "https://github.com/apache/beam/pull/12131#discussion_r448482002", "bodyText": "Can we just return new STSAssumeRoleSessionCredentialsProvider.Builder(asMap.get(ROLE_ARN), asMap.get(ROLE_SESSION_NAME)).build() here? Why do we need to create AssumeRoleSessionCredentialsProvider class?", "author": "aromanenko-dev", "createdAt": "2020-07-01T16:30:49Z", "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/options/AwsModule.java", "diffHunk": "@@ -132,6 +135,10 @@ public AWSCredentialsProvider deserializeWithType(\n         return new ProfileCredentialsProvider();\n       } else if (typeName.equals(EC2ContainerCredentialsProviderWrapper.class.getSimpleName())) {\n         return new EC2ContainerCredentialsProviderWrapper();\n+      } else if (typeName.equals(STSAssumeRoleSessionCredentialsProvider.class.getSimpleName())) {\n+        return AssumeRoleSessionCredentialsProvider.getInstance(", "originalCommit": "f78d77072b730e43bffbb28f745199a3ba7e0917", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bb4840dba2e75d745b96079b08c74911166e6934", "url": "https://github.com/apache/beam/commit/bb4840dba2e75d745b96079b08c74911166e6934", "message": "[BEAM-10335] update on test", "committedDate": "2020-07-01T18:59:31Z", "type": "commit"}, {"oid": "10e038585729a8973229ad6d5778fc283934f271", "url": "https://github.com/apache/beam/commit/10e038585729a8973229ad6d5778fc283934f271", "message": "[BEAM-10335] remove unused files", "committedDate": "2020-07-01T21:46:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExMjQzMg==", "url": "https://github.com/apache/beam/pull/12131#discussion_r449112432", "bodyText": "Please, remove it. It should be a user's responsibility to create or not shadow jar, not Beam.", "author": "aromanenko-dev", "createdAt": "2020-07-02T15:51:40Z", "path": "sdks/java/io/amazon-web-services/build.gradle", "diffHunk": "@@ -18,8 +18,14 @@ import groovy.json.JsonOutput\n  * limitations under the License.\n  */\n \n-plugins { id 'org.apache.beam.module' }\n-applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.io.aws')\n+plugins {\n+  id 'org.apache.beam.module'\n+}\n+\n+applyJavaNature(\n+        automaticModuleName: 'org.apache.beam.sdk.io.aws',\n+        shadowClosure: {}", "originalCommit": "10e038585729a8973229ad6d5778fc283934f271", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExNDc3Nw==", "url": "https://github.com/apache/beam/pull/12131#discussion_r449114777", "bodyText": "Use ROLE_ARN constant here.", "author": "aromanenko-dev", "createdAt": "2020-07-02T15:55:10Z", "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/options/AwsModule.java", "diffHunk": "@@ -203,7 +211,27 @@ public void serializeWithType(\n         } catch (NoSuchFieldException | IllegalAccessException e) {\n           throw new IOException(\"failed to access private field with reflection\", e);\n         }\n+      } else if (credentialsProvider\n+          .getClass()\n+          .equals(STSAssumeRoleSessionCredentialsProvider.class)) {\n+        try {\n+          STSAssumeRoleSessionCredentialsProvider specificProvider =\n+              (STSAssumeRoleSessionCredentialsProvider) credentialsProvider;\n+\n+          Field fieldRole =\n+              STSAssumeRoleSessionCredentialsProvider.class.getDeclaredField(\"roleArn\");", "originalCommit": "10e038585729a8973229ad6d5778fc283934f271", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExNTAzMA==", "url": "https://github.com/apache/beam/pull/12131#discussion_r449115030", "bodyText": "Use ROLE_SESSION_NAME constant here.", "author": "aromanenko-dev", "createdAt": "2020-07-02T15:55:33Z", "path": "sdks/java/io/amazon-web-services/src/main/java/org/apache/beam/sdk/io/aws/options/AwsModule.java", "diffHunk": "@@ -203,7 +211,27 @@ public void serializeWithType(\n         } catch (NoSuchFieldException | IllegalAccessException e) {\n           throw new IOException(\"failed to access private field with reflection\", e);\n         }\n+      } else if (credentialsProvider\n+          .getClass()\n+          .equals(STSAssumeRoleSessionCredentialsProvider.class)) {\n+        try {\n+          STSAssumeRoleSessionCredentialsProvider specificProvider =\n+              (STSAssumeRoleSessionCredentialsProvider) credentialsProvider;\n+\n+          Field fieldRole =\n+              STSAssumeRoleSessionCredentialsProvider.class.getDeclaredField(\"roleArn\");\n+          fieldRole.setAccessible(true);\n+          String roleArn = (String) fieldRole.get(specificProvider);\n+          jsonGenerator.writeStringField(ROLE_ARN, roleArn);\n \n+          Field fieldSession =\n+              STSAssumeRoleSessionCredentialsProvider.class.getDeclaredField(\"roleSessionName\");", "originalCommit": "10e038585729a8973229ad6d5778fc283934f271", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExODE0Nw==", "url": "https://github.com/apache/beam/pull/12131#discussion_r449118147", "bodyText": "nit: word Wrapper is unnecessary in the test name.", "author": "aromanenko-dev", "createdAt": "2020-07-02T16:00:10Z", "path": "sdks/java/io/amazon-web-services/src/test/java/org/apache/beam/sdk/io/aws/options/AwsModuleTest.java", "diffHunk": "@@ -117,6 +118,29 @@ public void testClasspathPropertiesFileCredentialsProviderSerializationDeseriali\n     assertEquals(credentialsFilePath, deserializedCredentialsFilePath);\n   }\n \n+  @Test\n+  public void testSTSCredentialsProviderWrapperSerializationDeserialization() throws Exception {", "originalCommit": "10e038585729a8973229ad6d5778fc283934f271", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMDczMQ==", "url": "https://github.com/apache/beam/pull/12131#discussion_r449130731", "bodyText": "Please, leave org.junit.Assert.assertThat as it was before.", "author": "aromanenko-dev", "createdAt": "2020-07-02T16:20:51Z", "path": "sdks/java/io/amazon-web-services/src/test/java/org/apache/beam/sdk/io/aws/options/AwsModuleTest.java", "diffHunk": "@@ -17,9 +17,9 @@\n  */\n package org.apache.beam.sdk.io.aws.options;\n \n+import static org.hamcrest.MatcherAssert.assertThat;", "originalCommit": "10e038585729a8973229ad6d5778fc283934f271", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c752def04fa45f45babac2c0e093e4d8332ab90", "url": "https://github.com/apache/beam/commit/0c752def04fa45f45babac2c0e093e4d8332ab90", "message": "[BEAM-10335] update as per review", "committedDate": "2020-07-02T16:30:56Z", "type": "commit"}]}