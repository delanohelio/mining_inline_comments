{"pr_number": 11652, "pr_title": "[BEAM-9945] Report data channel progress via a designated counter.", "pr_createdAt": "2020-05-09T08:27:34Z", "pr_url": "https://github.com/apache/beam/pull/11652", "timeline": [{"oid": "4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "url": "https://github.com/apache/beam/commit/4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "message": "[BEAM-9945] Report data channel progress via a designated counter.", "committedDate": "2020-05-09T10:38:32Z", "type": "commit"}, {"oid": "4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "url": "https://github.com/apache/beam/commit/4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "message": "[BEAM-9945] Report data channel progress via a designated counter.", "committedDate": "2020-05-09T10:38:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwOTgwMQ==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423209801", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // For an SDK that processe items sequentially, this is equivalently the\n          \n          \n            \n                // For an SDK that processes items sequentially, this is equivalently the", "author": "lukecwik", "createdAt": "2020-05-11T17:42:38Z", "path": "model/pipeline/src/main/proto/metrics.proto", "diffHunk": "@@ -292,6 +292,21 @@ message MonitoringInfoSpecs {\n         value: \"The remaining amount of work for each active element. Each active element represents an independent amount of work not shared with any other active element.\"\n       }]\n     }];\n+\n+    // The (0-based) index of the latest item processed from the data channel.\n+    // This gives an indication of the SDKs progress through the data channel,\n+    // and is a lower bound on where it is able to split.\n+    // For an SDK that processe items sequentially, this is equivalently the", "originalCommit": "4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMjI4Mg==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423212282", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // number of items fully processed (or -1 if reading has not yet started).\n          \n          \n            \n                // number of items fully processed (or -1 if processing has not yet started).", "author": "lukecwik", "createdAt": "2020-05-11T17:47:09Z", "path": "model/pipeline/src/main/proto/metrics.proto", "diffHunk": "@@ -292,6 +292,21 @@ message MonitoringInfoSpecs {\n         value: \"The remaining amount of work for each active element. Each active element represents an independent amount of work not shared with any other active element.\"\n       }]\n     }];\n+\n+    // The (0-based) index of the latest item processed from the data channel.\n+    // This gives an indication of the SDKs progress through the data channel,\n+    // and is a lower bound on where it is able to split.\n+    // For an SDK that processe items sequentially, this is equivalently the\n+    // number of items fully processed (or -1 if reading has not yet started).", "originalCommit": "4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTAyMg==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423215022", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    value: \"The number of items processed from a data channel.\"\n          \n          \n            \n                    value: \"The read index of the data channel.\"", "author": "lukecwik", "createdAt": "2020-05-11T17:52:05Z", "path": "model/pipeline/src/main/proto/metrics.proto", "diffHunk": "@@ -292,6 +292,21 @@ message MonitoringInfoSpecs {\n         value: \"The remaining amount of work for each active element. Each active element represents an independent amount of work not shared with any other active element.\"\n       }]\n     }];\n+\n+    // The (0-based) index of the latest item processed from the data channel.\n+    // This gives an indication of the SDKs progress through the data channel,\n+    // and is a lower bound on where it is able to split.\n+    // For an SDK that processe items sequentially, this is equivalently the\n+    // number of items fully processed (or -1 if reading has not yet started).\n+    DATA_CHANNEL_READ_INDEX = 18 [(monitoring_info_spec) = {\n+      urn: \"beam:metric:data_channel:read_index:v1\",\n+      type: \"beam:metrics:sum_int64:v1\",\n+      required_labels: [ \"PTRANSFORM\" ],\n+      annotations: [{\n+        key: \"description\",\n+        value: \"The number of items processed from a data channel.\"", "originalCommit": "4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTE4MA==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423215180", "bodyText": "spacing", "author": "lukecwik", "createdAt": "2020-05-11T17:52:22Z", "path": "sdks/go/pkg/beam/core/runtime/harness/monitoring.go", "diffHunk": "@@ -265,8 +269,9 @@ func monitoring(p *exec.Plan) ([]*pipepb.MonitoringInfo, map[string][]byte) {\n \t\tif err != nil {\n \t\t\tpanic(err)\n \t\t}\n-\t\tpayloads[getShortID(metrics.PCollectionLabels(snapshot.PID), urnElementCount)] = payload\n \n+    // TODO(BEAM-9934): This metric should account for elements in multiple windows.", "originalCommit": "4ee03bca4f36e8e40055d7651d8cb3e5461bc8eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0OTQwOA==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423249408", "bodyText": "Ah, tabs.", "author": "robertwb", "createdAt": "2020-05-11T18:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTE4MA=="}], "type": "inlineReview"}, {"oid": "2fbb79f9935f2b9488888e1a4ba193d0d3e5af93", "url": "https://github.com/apache/beam/commit/2fbb79f9935f2b9488888e1a4ba193d0d3e5af93", "message": "Apply suggestions from code review\n\nCo-authored-by: Lukasz Cwik <lcwik@google.com>", "committedDate": "2020-05-11T18:51:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjU3NQ==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423302575", "bodyText": "Looks like you are missing spec here.", "author": "ibzib", "createdAt": "2020-05-11T20:33:53Z", "path": "sdks/python/apache_beam/metrics/monitoring_infos.py", "diffHunk": "@@ -56,6 +56,8 @@\n     [USER_COUNTER_URN, USER_DISTRIBUTION_URN, USER_GAUGE_URN])\n WORK_REMAINING_URN = common_urns.monitoring_info_specs.WORK_REMAINING.spec.urn\n WORK_COMPLETED_URN = common_urns.monitoring_info_specs.WORK_COMPLETED.spec.urn\n+DATA_CHANNEL_READ_INDEX = (\n+    common_urns.monitoring_info_specs.DATA_CHANNEL_READ_INDEX.urn)", "originalCommit": "2fbb79f9935f2b9488888e1a4ba193d0d3e5af93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMjkyMw==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423312923", "bodyText": "good find", "author": "lukecwik", "createdAt": "2020-05-11T20:53:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMzMxNQ==", "url": "https://github.com/apache/beam/pull/11652#discussion_r423313315", "bodyText": "Yeah, I just found that myself... Not sure why it has a urn and a spec.urn.", "author": "robertwb", "createdAt": "2020-05-11T20:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjU3NQ=="}], "type": "inlineReview"}, {"oid": "4ba1754a409e1f6d0cee34a9667d0e8d2fc31cc9", "url": "https://github.com/apache/beam/commit/4ba1754a409e1f6d0cee34a9667d0e8d2fc31cc9", "message": "Fix tabs, spec.urn.", "committedDate": "2020-05-11T20:54:06Z", "type": "commit"}, {"oid": "d8648a9d9ec00dedbfcc50b9b2b35a663429d772", "url": "https://github.com/apache/beam/commit/d8648a9d9ec00dedbfcc50b9b2b35a663429d772", "message": "Merge branch 'master' into progress-counters", "committedDate": "2020-05-12T00:13:51Z", "type": "commit"}]}