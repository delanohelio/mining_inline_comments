{"pr_number": 11244, "pr_title": "[BEAM-3097] _ReadFromBigQuery supports valueprovider for table", "pr_createdAt": "2020-03-27T00:50:00Z", "pr_url": "https://github.com/apache/beam/pull/11244", "timeline": [{"oid": "83cd02b18ba02c79f234d7c9c361aa85b58754f3", "url": "https://github.com/apache/beam/commit/83cd02b18ba02c79f234d7c9c361aa85b58754f3", "message": "[BEAM-3097] _ReadFromBigQuery supports valueprovider for table", "committedDate": "2020-03-27T00:49:01Z", "type": "commit"}, {"oid": "774e5696676d2dd5aacde0a5f678b1560eeedc3c", "url": "https://github.com/apache/beam/commit/774e5696676d2dd5aacde0a5f678b1560eeedc3c", "message": "Fixup", "committedDate": "2020-03-27T18:02:56Z", "type": "commit"}, {"oid": "855b3e1a2594769d7c15eb89b2393d0790ed2a7e", "url": "https://github.com/apache/beam/commit/855b3e1a2594769d7c15eb89b2393d0790ed2a7e", "message": "fix formatter", "committedDate": "2020-03-27T18:48:09Z", "type": "commit"}, {"oid": "857883bd88f7d2227501e69f1204029898be42b2", "url": "https://github.com/apache/beam/commit/857883bd88f7d2227501e69f1204029898be42b2", "message": "fixup", "committedDate": "2020-04-01T17:51:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2ODA2NQ==", "url": "https://github.com/apache/beam/pull/11244#discussion_r402668065", "bodyText": "Not from this PR but shouldn't this be a dry run ?", "author": "chamikaramj", "createdAt": "2020-04-03T00:17:41Z", "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -641,12 +641,19 @@ def __init__(\n   def estimate_size(self):\n     bq = bigquery_tools.BigQueryWrapper()\n     if self.table_reference is not None:\n+      table_ref = self.table_reference\n+      if (isinstance(self.table_reference, vp.ValueProvider) and\n+          self.table_reference.is_accessible()):\n+        table_ref = bigquery_tools.parse_table_reference(\n+            self.table_reference.get(), self.dataset, self.project)\n+      elif isinstance(self.table_reference, vp.ValueProvider):\n+        # Size estimation is best effort. We return 0 as we have no\n+        # access to the table that we're querying.\n+        return 0\n       table = bq.get_table(\n-          self.table_reference.projectId,\n-          self.table_reference.datasetId,\n-          self.table_reference.tableId)\n+          table_ref.projectId, table_ref.datasetId, table_ref.tableId)\n       return int(table.numBytes)\n-    else:\n+    elif self.query is not None and self.query.is_accessible():\n       job = bq._start_query_job(", "originalCommit": "857883bd88f7d2227501e69f1204029898be42b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MDU0OQ==", "url": "https://github.com/apache/beam/pull/11244#discussion_r403350549", "bodyText": "if you look at line 663, it is a dry run : )", "author": "pabloem", "createdAt": "2020-04-03T21:42:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2ODA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2ODYwOA==", "url": "https://github.com/apache/beam/pull/11244#discussion_r402668608", "bodyText": "Shouldn't we support ValueProvider for queries as well ?", "author": "chamikaramj", "createdAt": "2020-04-03T00:19:31Z", "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -641,12 +641,19 @@ def __init__(\n   def estimate_size(self):\n     bq = bigquery_tools.BigQueryWrapper()\n     if self.table_reference is not None:\n+      table_ref = self.table_reference\n+      if (isinstance(self.table_reference, vp.ValueProvider) and\n+          self.table_reference.is_accessible()):\n+        table_ref = bigquery_tools.parse_table_reference(\n+            self.table_reference.get(), self.dataset, self.project)\n+      elif isinstance(self.table_reference, vp.ValueProvider):\n+        # Size estimation is best effort. We return 0 as we have no\n+        # access to the table that we're querying.\n+        return 0\n       table = bq.get_table(\n-          self.table_reference.projectId,\n-          self.table_reference.datasetId,\n-          self.table_reference.tableId)\n+          table_ref.projectId, table_ref.datasetId, table_ref.tableId)\n       return int(table.numBytes)\n-    else:\n+    elif self.query is not None and self.query.is_accessible():", "originalCommit": "857883bd88f7d2227501e69f1204029898be42b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MDQyOA==", "url": "https://github.com/apache/beam/pull/11244#discussion_r403350428", "bodyText": "It is supported now. In this case, the self.query parameter is wrapped by a ValueProvider already. This does not work for self.table because it may be a non-string.", "author": "pabloem", "createdAt": "2020-04-03T21:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2ODYwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTU2Nw==", "url": "https://github.com/apache/beam/pull/11244#discussion_r402669567", "bodyText": "We have to return None if size cannot be determined. See spec here: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/io/iobase.py#L157", "author": "chamikaramj", "createdAt": "2020-04-03T00:23:15Z", "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -641,12 +641,19 @@ def __init__(\n   def estimate_size(self):\n     bq = bigquery_tools.BigQueryWrapper()\n     if self.table_reference is not None:\n+      table_ref = self.table_reference\n+      if (isinstance(self.table_reference, vp.ValueProvider) and\n+          self.table_reference.is_accessible()):\n+        table_ref = bigquery_tools.parse_table_reference(\n+            self.table_reference.get(), self.dataset, self.project)\n+      elif isinstance(self.table_reference, vp.ValueProvider):\n+        # Size estimation is best effort. We return 0 as we have no\n+        # access to the table that we're querying.\n+        return 0", "originalCommit": "857883bd88f7d2227501e69f1204029898be42b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MDY4Mw==", "url": "https://github.com/apache/beam/pull/11244#discussion_r403350683", "bodyText": "Done", "author": "pabloem", "createdAt": "2020-04-03T21:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTU5Ng==", "url": "https://github.com/apache/beam/pull/11244#discussion_r402669596", "bodyText": "Ditto.", "author": "chamikaramj", "createdAt": "2020-04-03T00:23:23Z", "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -657,6 +664,10 @@ def estimate_size(self):\n           kms_key=self.kms_key)\n       size = int(job.statistics.totalBytesProcessed)\n       return size\n+    else:\n+      # Size estimation is best effort. We return 0 as we have no\n+      # access to the query that we're running.\n+      return 0", "originalCommit": "857883bd88f7d2227501e69f1204029898be42b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MDcxMw==", "url": "https://github.com/apache/beam/pull/11244#discussion_r403350713", "bodyText": "Done", "author": "pabloem", "createdAt": "2020-04-03T21:42:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTU5Ng=="}], "type": "inlineReview"}, {"oid": "158b967075afe3ca0de6ec4a1689eb4bcd15acf0", "url": "https://github.com/apache/beam/commit/158b967075afe3ca0de6ec4a1689eb4bcd15acf0", "message": "fixup", "committedDate": "2020-04-03T21:41:24Z", "type": "commit"}]}