{"pr_number": 12995, "pr_title": "[BEAM-2914] Add portable merging window support to Python.", "pr_createdAt": "2020-10-01T23:34:35Z", "pr_url": "https://github.com/apache/beam/pull/12995", "timeline": [{"oid": "8bca5d79091895cdf80ef10f23ad2818fc739b33", "url": "https://github.com/apache/beam/commit/8bca5d79091895cdf80ef10f23ad2818fc739b33", "message": "[BEAM-2914] Add portable merging window support to Python.", "committedDate": "2020-10-01T23:33:32Z", "type": "commit"}, {"oid": "23dc93d72863032d9f6e12a9299c7272f4425f4a", "url": "https://github.com/apache/beam/commit/23dc93d72863032d9f6e12a9299c7272f4425f4a", "message": "yapf", "committedDate": "2020-10-02T23:39:30Z", "type": "commit"}, {"oid": "6afead40fe3350c3bd69d80e1c71abd9dfe28f94", "url": "https://github.com/apache/beam/commit/6afead40fe3350c3bd69d80e1c71abd9dfe28f94", "message": "Skip flink, grpc fixes.", "committedDate": "2020-10-03T00:30:55Z", "type": "commit"}, {"oid": "8c95a28b2b8c89801dbe9e6cd1af83aa8c2e3c62", "url": "https://github.com/apache/beam/commit/8c95a28b2b8c89801dbe9e6cd1af83aa8c2e3c62", "message": "yapf", "committedDate": "2020-10-03T01:05:17Z", "type": "commit"}, {"oid": "745b86b77dd73470461854079de41db84b7433cb", "url": "https://github.com/apache/beam/commit/745b86b77dd73470461854079de41db84b7433cb", "message": "Merge branch 'master' into custom-window-merging", "committedDate": "2020-10-03T01:08:14Z", "type": "commit"}, {"oid": "d8a24450d8a6d01f4afee2a4eea988173151cc75", "url": "https://github.com/apache/beam/commit/d8a24450d8a6d01f4afee2a4eea988173151cc75", "message": "Merge branch 'master' into custom-window-merging", "committedDate": "2020-10-06T18:41:39Z", "type": "commit"}, {"oid": "e647cfe6d3c1bf4e289e60074f14b5ebd0dbb151", "url": "https://github.com/apache/beam/commit/e647cfe6d3c1bf4e289e60074f14b5ebd0dbb151", "message": "fix merge", "committedDate": "2020-10-06T18:44:13Z", "type": "commit"}, {"oid": "3eb748ef37e12e35722fb0e449931e9af833d006", "url": "https://github.com/apache/beam/commit/3eb748ef37e12e35722fb0e449931e9af833d006", "message": "merge fix", "committedDate": "2020-10-06T18:48:01Z", "type": "commit"}, {"oid": "8af2665ff9e7241dd49cf351b1753ecd61e5786e", "url": "https://github.com/apache/beam/commit/8af2665ff9e7241dd49cf351b1753ecd61e5786e", "message": "lint", "committedDate": "2020-10-12T16:53:48Z", "type": "commit"}, {"oid": "37986fe315fa8abc719a86eb1ba763157d3368d6", "url": "https://github.com/apache/beam/commit/37986fe315fa8abc719a86eb1ba763157d3368d6", "message": "lint", "committedDate": "2020-10-13T00:31:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk4NjU5Nw==", "url": "https://github.com/apache/beam/pull/12995#discussion_r552986597", "bodyText": "self._worker_handler -> self._worker_handle?", "author": "y1chi", "createdAt": "2021-01-06T22:08:19Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/execution.py", "diffHunk": "@@ -298,6 +301,198 @@ def from_runner_api_parameter(window_coder_id, context):\n         context.coders[window_coder_id.decode('utf-8')])\n \n \n+class GenericMergingWindowFn(window.WindowFn):\n+\n+  URN = 'internal-generic-merging'\n+\n+  TO_SDK_TRANSFORM = 'read'\n+  FROM_SDK_TRANSFORM = 'write'\n+\n+  _HANDLES = {}\n+\n+  def __init__(self, execution_context, windowing_strategy_proto):\n+    self._worker_handle = None\n+    self._handle_id = handle_id = uuid.uuid4().hex\n+    self._HANDLES[handle_id] = self\n+    # ExecutionContexts are expensive, we don't want to keep them in the\n+    # static dictionary forever.  Instead we hold a weakref and pop self\n+    # out of the dict once this context goes away.\n+    self._execution_context_ref = weakref.ref(\n+        execution_context, lambda _: self._HANDLES.pop(handle_id, None))\n+    self._windowing_strategy_proto = windowing_strategy_proto\n+    self._process_bundle_descriptor = None\n+    self._counter = 0\n+\n+  def payload(self):\n+    return self._handle_id.encode('utf-8')\n+\n+  @staticmethod\n+  @window.urns.RunnerApiFn.register_urn(URN, bytes)\n+  def from_runner_api_parameter(handle_id, unused_context):\n+    return GenericMergingWindowFn._HANDLES[handle_id.decode('utf-8')]\n+\n+  def assign(self, assign_context):\n+    raise NotImplementedError()\n+\n+  def merge(self, merge_context):\n+    worker_handler = self.worker_handle()\n+\n+    process_bundle_id = self.uid('process')\n+    to_worker = worker_handler.data_conn.output_stream(\n+        process_bundle_id, self.TO_SDK_TRANSFORM)\n+    to_worker.write(\n+        self.windowed_input_coder_impl.encode_nested(\n+            window.GlobalWindows.windowed_value((b'', merge_context.windows))))\n+    to_worker.close()\n+\n+    process_bundle_req = beam_fn_api_pb2.InstructionRequest(\n+        instruction_id=process_bundle_id,\n+        process_bundle=beam_fn_api_pb2.ProcessBundleRequest(\n+            process_bundle_descriptor_id=self._bundle_processor_id))\n+    result_future = worker_handler.control_conn.push(process_bundle_req)\n+    for output in worker_handler.data_conn.input_elements(\n+        process_bundle_id, [self.FROM_SDK_TRANSFORM],\n+        abort_callback=lambda:\n+        (result_future.is_done() and result_future.get().error)):\n+      if isinstance(output, beam_fn_api_pb2.Elements.Data):\n+        windowed_result = self.windowed_output_coder_impl.decode_nested(\n+            output.data)\n+        for merge_result, originals in windowed_result.value[1][1]:\n+          merge_context.merge(originals, merge_result)\n+      else:\n+        raise RuntimeError(\"Unexpected data: %s\" % output)\n+\n+    result = result_future.get()\n+    if result.error:\n+      raise RuntimeError(result.error)\n+    # The result was \"returned\" via the merge callbacks on merge_context above.\n+\n+  def get_window_coder(self):\n+    return self._execution_context_ref().pipeline_context.coders[\n+        self._windowing_strategy_proto.window_coder_id]\n+\n+  def worker_handle(self):\n+    if self._worker_handle is None:\n+      worker_handler_manager = self._execution_context_ref(\n+      ).worker_handler_manager\n+      self._worker_handler = worker_handler_manager.get_worker_handlers(", "originalCommit": "37986fe315fa8abc719a86eb1ba763157d3368d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjM4OTI1NQ==", "url": "https://github.com/apache/beam/pull/12995#discussion_r572389255", "bodyText": "Good catch. Fixed.", "author": "robertwb", "createdAt": "2021-02-08T21:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk4NjU5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjM0NzYxNQ==", "url": "https://github.com/apache/beam/pull/12995#discussion_r572347615", "bodyText": "we may need to add this to spark_runner_test.py as well.", "author": "y1chi", "createdAt": "2021-02-08T20:26:19Z", "path": "sdks/python/apache_beam/runners/portability/flink_runner_test.py", "diffHunk": "@@ -400,6 +400,9 @@ def test_callbacks_with_exception(self):\n   def test_register_finalizations(self):\n     raise unittest.SkipTest(\"BEAM-6868\")\n \n+  def test_custom_merging_window(self):", "originalCommit": "37986fe315fa8abc719a86eb1ba763157d3368d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjM4OTE5MA==", "url": "https://github.com/apache/beam/pull/12995#discussion_r572389190", "bodyText": "Done.", "author": "robertwb", "createdAt": "2021-02-08T21:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjM0NzYxNQ=="}], "type": "inlineReview"}, {"oid": "be5c2975382e69c540dd78ee4d646e40532cd5d4", "url": "https://github.com/apache/beam/commit/be5c2975382e69c540dd78ee4d646e40532cd5d4", "message": "Address reviewer comments.", "committedDate": "2021-02-08T21:34:54Z", "type": "commit"}, {"oid": "2d29890ef16c2d247bbde2976a16a9dc00f5252a", "url": "https://github.com/apache/beam/commit/2d29890ef16c2d247bbde2976a16a9dc00f5252a", "message": "lint", "committedDate": "2021-02-08T21:58:30Z", "type": "commit"}, {"oid": "9978c432405fbe5dfcf2d93bb7620a8f815cd6a1", "url": "https://github.com/apache/beam/commit/9978c432405fbe5dfcf2d93bb7620a8f815cd6a1", "message": "mypy", "committedDate": "2021-02-08T22:30:40Z", "type": "commit"}, {"oid": "8c107568f5e21f13c947bbbfcedbefdeed6f376b", "url": "https://github.com/apache/beam/commit/8c107568f5e21f13c947bbbfcedbefdeed6f376b", "message": "yapf", "committedDate": "2021-02-08T23:06:44Z", "type": "commit"}]}