{"pr_number": 11276, "pr_title": "[BEAM-7923] An indicator of progress in notebooks", "pr_createdAt": "2020-03-31T20:31:17Z", "pr_url": "https://github.com/apache/beam/pull/11276", "timeline": [{"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2", "url": "https://github.com/apache/beam/commit/d8ed9bc6b22093beec94613e9d63f107ac6180c2", "message": "[BEAM-7923] An indicator of progress in notebooks\n\n1. The problem: when an intended blocking call such as `show`, `collect`\n   or `head` is invoked, the user sometimes doesn't realize the code is\n   still running and blocking. Also, the `*` prompts in notebooks are\n   easily ignored and sometimes buggy. We need an obvious progress\n   indicator to tell the user that the data/pipeline is being processed\n   and potentially expose more metrics about running pipelines through\n   the mechanism.\n2. Added a ProgressIndicator class that functions as a context manager\n   to display/remove a spinner on entering/exiting a blocking code\n   execution.\n3. Added a progress_indicated decorator to make any callable adapt the\n   ProgressIndicator.\n4. When in notebooks, a spinner is displayed. When in ipython but\n   without frontends, texts will be displayed on entering/exiting.\n   Otherwise, NOOP.", "committedDate": "2020-03-31T20:39:36Z", "type": "commit"}, {"oid": "d8ed9bc6b22093beec94613e9d63f107ac6180c2", "url": "https://github.com/apache/beam/commit/d8ed9bc6b22093beec94613e9d63f107ac6180c2", "message": "[BEAM-7923] An indicator of progress in notebooks\n\n1. The problem: when an intended blocking call such as `show`, `collect`\n   or `head` is invoked, the user sometimes doesn't realize the code is\n   still running and blocking. Also, the `*` prompts in notebooks are\n   easily ignored and sometimes buggy. We need an obvious progress\n   indicator to tell the user that the data/pipeline is being processed\n   and potentially expose more metrics about running pipelines through\n   the mechanism.\n2. Added a ProgressIndicator class that functions as a context manager\n   to display/remove a spinner on entering/exiting a blocking code\n   execution.\n3. Added a progress_indicated decorator to make any callable adapt the\n   ProgressIndicator.\n4. When in notebooks, a spinner is displayed. When in ipython but\n   without frontends, texts will be displayed on entering/exiting.\n   Otherwise, NOOP.", "committedDate": "2020-03-31T20:39:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw==", "url": "https://github.com/apache/beam/pull/11276#discussion_r401248323", "bodyText": "Is it fine to link to a 3rd party domain here?", "author": "aaltay", "createdAt": "2020-03-31T22:17:41Z", "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">", "originalCommit": "d8ed9bc6b22093beec94613e9d63f107ac6180c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDQ2NA==", "url": "https://github.com/apache/beam/pull/11276#discussion_r401250464", "bodyText": "Yes, it's just some CSS file. We've been using the same CSS file in the IPythonLogHandler too. Bootstrap has been widely known and used, so it's very safe.", "author": "KevinGG", "createdAt": "2020-03-31T22:23:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDAxNw==", "url": "https://github.com/apache/beam/pull/11276#discussion_r401254017", "bodyText": "This will ping a third party server from users environment. I do not think this is great, but if we do not have a better option, that is fine.", "author": "aaltay", "createdAt": "2020-03-31T22:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4NTA2OQ==", "url": "https://github.com/apache/beam/pull/11276#discussion_r401285069", "bodyText": "Added a TODO item to change the CDN. And once we create some Jupyter Labextension, we could have HTML+JS+CSS dependencies pre-installed, then the CDN would not be necessary.", "author": "KevinGG", "createdAt": "2020-04-01T00:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODM0MQ==", "url": "https://github.com/apache/beam/pull/11276#discussion_r401248341", "bodyText": "what is obfuscate? and why obfuscate the id?", "author": "aaltay", "createdAt": "2020-03-31T22:17:43Z", "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -142,3 +142,61 @@ def obfuscate(*inputs):\n   str_inputs = [str(input) for input in inputs]\n   merged_inputs = '_'.join(str_inputs)\n   return hashlib.md5(merged_inputs.encode('utf-8')).hexdigest()\n+\n+\n+class ProgressIndicator(object):\n+  \"\"\"An indicator visualizing code execution in progress.\"\"\"\n+  spinner_template = \"\"\"\n+            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n+            <div id=\"{id}\" class=\"spinner-border text-info\" role=\"status\">\n+            </div>\"\"\"\n+  spinner_removal_template = \"\"\"\n+            $(\"#{id}\").remove();\"\"\"\n+\n+  def __init__(self, enter_text, exit_text):\n+    # type: (str, str) -> None\n+\n+    self._id = 'progress_indicator_{}'.format(obfuscate(id(self)))", "originalCommit": "d8ed9bc6b22093beec94613e9d63f107ac6180c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTc0Mw==", "url": "https://github.com/apache/beam/pull/11276#discussion_r401251743", "bodyText": "obfuscate is defined within the same module.\nIt's a way to disguise your backend logic from the frontend, basically a hash. It's common to see obfuscation in Javascripts.\nHere we obfuscates the id of a python object in kernel and use it as part of the id of a Javascript div.\nHere is some additional reading about obfuscate: https://medium.com/nodesimplified/obfuscation-what-is-obfuscation-in-javascript-why-obfuscation-is-used-f6a5f5bcf022\nWe also make this hexadigest so that the final id is always usable by jQuery and plain JavaScript as valid selectors.", "author": "KevinGG", "createdAt": "2020-03-31T22:26:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODM0MQ=="}], "type": "inlineReview"}, {"oid": "fae8e1056732bd1f847da58367eadd2b993cded5", "url": "https://github.com/apache/beam/commit/fae8e1056732bd1f847da58367eadd2b993cded5", "message": "Added a TODO item to change the CDN of bootstrap when google ajax API hosts it.", "committedDate": "2020-04-01T00:03:25Z", "type": "commit"}]}