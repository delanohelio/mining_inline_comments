{"pr_number": 10591, "pr_title": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"", "pr_createdAt": "2020-01-15T00:11:42Z", "pr_url": "https://github.com/apache/beam/pull/10591", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODY4Mg==", "url": "https://github.com/apache/beam/pull/10591#discussion_r369818682", "bodyText": "Please add a comment here as to why (mypy vs. dynamic patching).", "author": "robertwb", "createdAt": "2020-01-22T21:40:50Z", "path": "sdks/python/apache_beam/utils/urns.py", "diffHunk": "@@ -68,14 +69,14 @@ class RunnerApiFn(object):\n \n   _known_urns = {}  # type: Dict[str, Tuple[Optional[type], ConstructorFn]]\n \n-  @abc.abstractmethod\n+  # @abc.abstractmethod", "originalCommit": "9cf850e0bd24568fe088a9c226e410a5fde17c2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2MzUxMA==", "url": "https://github.com/apache/beam/pull/10591#discussion_r369863510", "bodyText": "done.", "author": "chadrik", "createdAt": "2020-01-22T23:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODY4Mg=="}], "type": "inlineReview"}, {"oid": "eabc7c08c52420f09319244d98c2555dd3bf516c", "url": "https://github.com/apache/beam/commit/eabc7c08c52420f09319244d98c2555dd3bf516c", "message": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"\n\nabc.ABCMeta has been removed from this class with a fixme (BEAM-2685), which\nmeans there' no longer any runtime checking of @abc.abstractmethod. However,\nmypy still performs abc.abtractmethod/property checks even if a class does\nnot use abc.ABCMeta (this is a feature that lets you avoid using metaclasses).\n\nThe problem arises because the beam code is doing a lot of dynamic patching of\nto_runner_api_parameter (see register_pickle_urn), which mypy cannot track, so\nit believes this method is missing.\n\nWe comment out @abc.abstractmethod, to disable the mypy checks (it's already\ndisabled at runtime by virtue of an earlier change to remove abc.ABCMeta).\nWe change the method to raise NotImplementedError to inform pylint not to trust\nits return value (None) and to get some degree of runtime checking.", "committedDate": "2020-01-22T23:32:59Z", "type": "commit"}, {"oid": "eabc7c08c52420f09319244d98c2555dd3bf516c", "url": "https://github.com/apache/beam/commit/eabc7c08c52420f09319244d98c2555dd3bf516c", "message": "[BEAM-7746] Silence a bunch of errors about \"Cannot instantiate abstract class\"\n\nabc.ABCMeta has been removed from this class with a fixme (BEAM-2685), which\nmeans there' no longer any runtime checking of @abc.abstractmethod. However,\nmypy still performs abc.abtractmethod/property checks even if a class does\nnot use abc.ABCMeta (this is a feature that lets you avoid using metaclasses).\n\nThe problem arises because the beam code is doing a lot of dynamic patching of\nto_runner_api_parameter (see register_pickle_urn), which mypy cannot track, so\nit believes this method is missing.\n\nWe comment out @abc.abstractmethod, to disable the mypy checks (it's already\ndisabled at runtime by virtue of an earlier change to remove abc.ABCMeta).\nWe change the method to raise NotImplementedError to inform pylint not to trust\nits return value (None) and to get some degree of runtime checking.", "committedDate": "2020-01-22T23:32:59Z", "type": "forcePushed"}]}