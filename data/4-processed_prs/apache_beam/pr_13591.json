{"pr_number": 13591, "pr_title": "[BEAM-10112] Add more state and timer python examples to website", "pr_createdAt": "2020-12-21T22:55:32Z", "pr_url": "https://github.com/apache/beam/pull/13591", "timeline": [{"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "url": "https://github.com/apache/beam/commit/3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "message": "[BEAM-10112] Add more state and timer python examples to website", "committedDate": "2020-12-22T18:51:32Z", "type": "commit"}, {"oid": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "url": "https://github.com/apache/beam/commit/3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "message": "[BEAM-10112] Add more state and timer python examples to website", "committedDate": "2020-12-22T18:51:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzNzg0OA==", "url": "https://github.com/apache/beam/pull/13591#discussion_r560637848", "bodyText": "Code font ValueState and ReadModifyWriteState", "author": "rosetn", "createdAt": "2021-01-20T02:46:18Z", "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4519,6 +4519,8 @@ registered, then Beam will automatically infer the coder for the state value. Ot\n specified when creating the ValueState. For example, the following ParDo creates a  single state variable that\n accumulates the number of elements seen.\n \n+Note: ValueState is called ReadModifyWriteState in Python SDK.", "originalCommit": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MDkzNQ==", "url": "https://github.com/apache/beam/pull/13591#discussion_r564050935", "bodyText": "Done.", "author": "y1chi", "createdAt": "2021-01-25T21:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzNzg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTIxMA==", "url": "https://github.com/apache/beam/pull/13591#discussion_r560639210", "bodyText": "This Python section does not show up when I have Python selected.\nhttp://apache-beam-website-pull-requests.storage.googleapis.com/13591/documentation/programming-guide/index.html#state-and-timers", "author": "rosetn", "createdAt": "2021-01-20T02:50:09Z", "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4544,6 +4546,19 @@ perUser.apply(ParDo.of(new DoFn<KV<String, ValueT>, OutputT>() {\n }));\n {{< /highlight >}}\n \n+{{< highlight python >}}", "originalCommit": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MzY1NQ==", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053655", "bodyText": "Done.", "author": "y1chi", "createdAt": "2021-01-25T21:25:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTIxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTc2OQ==", "url": "https://github.com/apache/beam/pull/13591#discussion_r560639769", "bodyText": "\"in the Java SDK.\"", "author": "rosetn", "createdAt": "2021-01-20T02:52:08Z", "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers", "originalCommit": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MzU5Ng==", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053596", "bodyText": "Done.", "author": "y1chi", "createdAt": "2021-01-25T21:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTgyOQ==", "url": "https://github.com/apache/beam/pull/13591#discussion_r560639829", "bodyText": "\"In the Python SDK\"", "author": "rosetn", "createdAt": "2021-01-20T02:52:20Z", "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "originalCommit": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1MzcxNg==", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053716", "bodyText": "Done.", "author": "y1chi", "createdAt": "2021-01-25T21:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDYzOTgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDE1NA==", "url": "https://github.com/apache/beam/pull/13591#discussion_r560640154", "bodyText": "set() and clear()\nUnless you think it's too ambiguous without the class name. If that's the case, then add these in code font.", "author": "rosetn", "createdAt": "2021-01-20T02:53:29Z", "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "originalCommit": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1Mzc5NA==", "url": "https://github.com/apache/beam/pull/13591#discussion_r564053794", "bodyText": "Done.", "author": "y1chi", "createdAt": "2021-01-25T21:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDE1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDQ0Mg==", "url": "https://github.com/apache/beam/pull/13591#discussion_r560640442", "bodyText": "I think these are two sentences? \"... or clear(). By default, the timer...\"", "author": "rosetn", "createdAt": "2021-01-20T02:54:26Z", "path": "website/www/site/content/en/documentation/programming-guide.md", "diffHunk": "@@ -4775,12 +4795,15 @@ _ = (p | 'Read per user' >> ReadPerUser()\n \n #### 11.3.3. Dynamic timer tags {#dynamic-timer-tags}\n \n-Beam also supports dynamically setting a timer tag using `TimerMap`. This allows for setting multiple different timers\n+Beam also supports dynamically setting a timer tag using `TimerMap` in Java SDK. This allows for setting multiple different timers\n in a `DoFn` and allowing for the timer tags to be dynamically chosen - e.g. based on data in the input elements. A\n timer with a specific tag can only be set to a single timestamp, so setting the timer again has the effect of\n overwriting the previous expiration time for the timer with that tag. Each `TimerMap` is identified with a timer family\n id, and timers in different timer families are independent.\n \n+In Python SDK, a dynamic timer tag can be specified while calling timer.set() or timer.clear(), by default the timer", "originalCommit": "3d1f25a3c56bc4010edb253706c15acc3ec2ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA1NDIyNw==", "url": "https://github.com/apache/beam/pull/13591#discussion_r564054227", "bodyText": "Done.", "author": "y1chi", "createdAt": "2021-01-25T21:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDY0MDQ0Mg=="}], "type": "inlineReview"}, {"oid": "89a5e3dd4ae818e986aa16b8074a08372af992ec", "url": "https://github.com/apache/beam/commit/89a5e3dd4ae818e986aa16b8074a08372af992ec", "message": "Address comments", "committedDate": "2021-01-25T21:26:41Z", "type": "commit"}, {"oid": "3a2a3514f360e97da34d0cd7b2f369e5d3fbcd75", "url": "https://github.com/apache/beam/commit/3a2a3514f360e97da34d0cd7b2f369e5d3fbcd75", "message": "Render py", "committedDate": "2021-01-25T21:37:32Z", "type": "commit"}]}