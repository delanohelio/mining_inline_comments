{"pr_number": 12812, "pr_title": "[BEAM-10873] Stronger testing of dataframe partitioning declarations.", "pr_createdAt": "2020-09-10T18:18:03Z", "pr_url": "https://github.com/apache/beam/pull/12812", "timeline": [{"oid": "304ce827cb248270e58cebd381f4bf590cb194da", "url": "https://github.com/apache/beam/commit/304ce827cb248270e58cebd381f4bf590cb194da", "message": "[BEAM-10873] Use partitioinig session for tests.\n\nAlso reject the default nsmallest and nlargest which assume keep='first'\nand introduce keep='any' option.", "committedDate": "2020-09-10T22:57:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NjExMQ==", "url": "https://github.com/apache/beam/pull/12812#discussion_r488296111", "bodyText": "any is not part of the pandas API. I assume this is an option you're adding to provide a way to get exactly n without promising to get the first or last since that's order-sensitive?\nThat makes sense - but we should probably document the places where we diverge from pandas like this (could just be a TODO here and/or a jira for now).", "author": "TheNeuralBit", "createdAt": "2020-09-14T23:38:13Z", "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -551,9 +559,13 @@ def merge(\n       return merged.reset_index(drop=True)\n \n   @frame_base.args_to_kwargs(pd.DataFrame)\n-  def nlargest(self, **kwargs):\n-    if 'keep' in kwargs and kwargs['keep'] != 'all':\n+  @frame_base.populate_defaults(pd.DataFrame)\n+  def nlargest(self, keep, **kwargs):\n+    if keep == 'any':\n+      keep = 'first'", "originalCommit": "49f2ce027d6fead8bb9b44a898bb3d86da278ffc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwMDk0NQ==", "url": "https://github.com/apache/beam/pull/12812#discussion_r488300945", "bodyText": "Also: I take it PartitioningSession revealed this problem with first/last? That's good to know, I was wondering about these options earlier but figured I was misunderstanding something.", "author": "TheNeuralBit", "createdAt": "2020-09-14T23:54:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NjExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNTA0MA==", "url": "https://github.com/apache/beam/pull/12812#discussion_r488315040", "bodyText": "Yep, exactly. Dropped a TODO. I'm thinking we may want a context (like we have for non-parallel operations) for operations like this to explicitly say that one doesn't care about ordering (e.g. nlargest would default to any so df.nlargest(10) would just work as-is.\nPartitioningSession caused the rows to get perumuted.", "author": "robertwb", "createdAt": "2020-09-15T00:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NjExMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwMDQ1Nw==", "url": "https://github.com/apache/beam/pull/12812#discussion_r488300457", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class PartitioningSession(Session):\n          \n          \n            \n              def evaluate(self, expr):\n          \n          \n            \n            class PartitioningSession(Session):\n          \n          \n            \n              \"\"\"An extension of Session that ensures input dataframes are split into at least `len(df)` separate partitions and input in a random order. For testing only.\n          \n          \n            \n              \"\"\"\n          \n          \n            \n              def evaluate(self, expr):\n          \n      \n    \n    \n  \n\nOr something like that :)", "author": "TheNeuralBit", "createdAt": "2020-09-14T23:53:00Z", "path": "sdks/python/apache_beam/dataframe/expressions.py", "diffHunk": "@@ -45,6 +45,45 @@ def lookup(self, expr):  #  type: (Expression) -> Any\n     return self._bindings[expr]\n \n \n+class PartitioningSession(Session):\n+  def evaluate(self, expr):", "originalCommit": "49f2ce027d6fead8bb9b44a898bb3d86da278ffc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a27e075200c06bca61ff7d4e71acd06ac1a848fe", "url": "https://github.com/apache/beam/commit/a27e075200c06bca61ff7d4e71acd06ac1a848fe", "message": "Use index for partitioning of elementwise operations with multiple DataFrame inputs.", "committedDate": "2020-09-15T00:48:24Z", "type": "commit"}, {"oid": "b0f95a8406dbb924e6f117176385e9a13365d16b", "url": "https://github.com/apache/beam/commit/b0f95a8406dbb924e6f117176385e9a13365d16b", "message": "[BEAM-10873] Introduce partitioning session for stronger testing.", "committedDate": "2020-09-15T00:48:43Z", "type": "commit"}, {"oid": "7433760a61963851a82773cf5ce8409875cd36f1", "url": "https://github.com/apache/beam/commit/7433760a61963851a82773cf5ce8409875cd36f1", "message": "[BEAM-10873] Use partitioinig session for tests.\n\nAlso reject the default nsmallest and nlargest which assume keep='first'\nand introduce keep='any' option.", "committedDate": "2020-09-15T00:48:43Z", "type": "commit"}, {"oid": "7433760a61963851a82773cf5ce8409875cd36f1", "url": "https://github.com/apache/beam/commit/7433760a61963851a82773cf5ce8409875cd36f1", "message": "[BEAM-10873] Use partitioinig session for tests.\n\nAlso reject the default nsmallest and nlargest which assume keep='first'\nand introduce keep='any' option.", "committedDate": "2020-09-15T00:48:43Z", "type": "forcePushed"}]}