{"pr_number": 12435, "pr_title": "[BEAM-10616] Added Python Pardo load tests for streaming on Dataflow", "pr_createdAt": "2020-07-31T15:26:58Z", "pr_url": "https://github.com/apache/beam/pull/12435", "timeline": [{"oid": "7f811d9f80dc08c27763023d9c1904a977639689", "url": "https://github.com/apache/beam/commit/7f811d9f80dc08c27763023d9c1904a977639689", "message": "[BEAM-10616] Skipped test case with 200 iteration due to timeout", "committedDate": "2020-08-05T14:21:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0NjAxMA==", "url": "https://github.com/apache/beam/pull/12435#discussion_r466646010", "bodyText": "Are you planning to investigate this now, soon, or in the future? If it isn't something you'll be looking into immediately and there is some additional context related to the timeouts that you've found while testing it would be helpful to create a Jira issue and link it here instead of a TODO for yourself.", "author": "tysonjh", "createdAt": "2020-08-06T19:44:49Z", "path": ".test-infra/jenkins/job_LoadTests_ParDo_Python.groovy", "diffHunk": "@@ -151,3 +151,35 @@ CronJobBuilder.cronJob('beam_LoadTests_Python_ParDo_Dataflow_Batch', 'H 13 * * *\n   ]\n   batchLoadTestJob(delegate, CommonTestProperties.TriggeringContext.POST_COMMIT)\n }\n+\n+def streamingLoadTestJob = { scope, triggeringContext ->\n+  scope.description('Runs Python ParDo load tests on Dataflow runner in streaming mode')\n+  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 120)\n+\n+  def datasetName = loadTestsBuilder.getBigQueryDataset('load_test', triggeringContext)\n+  for (testConfiguration in loadTestConfigurations(\"streaming\", datasetName)) {\n+    // Skipping case 2 in streaming because it timeouts. To be checked TODO: kkucharc", "originalCommit": "7f811d9f80dc08c27763023d9c1904a977639689", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczNDk2MQ==", "url": "https://github.com/apache/beam/pull/12435#discussion_r467734961", "bodyText": "It makes sense. I saw several times TODOs with username and I thought this is convention where developers takes responsibility for this TODO. I changed it to issue.", "author": "kkucharc", "createdAt": "2020-08-10T07:42:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0NjAxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODQxNg==", "url": "https://github.com/apache/beam/pull/12435#discussion_r466648416", "bodyText": "This should be a property in the testConfiguration instead of relying on title implicitly? That would also eliminate adding a 'streaming' property below as well.\nIn fact, doing this may also allow refactoring 'batchLoadTestJob' to a more generic 'loadTestJob' for reuse in both Streaming/Batch cases. It may unnecessarily complicate things, I'll leave it up to your judgement.", "author": "tysonjh", "createdAt": "2020-08-06T19:49:20Z", "path": ".test-infra/jenkins/job_LoadTests_ParDo_Python.groovy", "diffHunk": "@@ -151,3 +151,35 @@ CronJobBuilder.cronJob('beam_LoadTests_Python_ParDo_Dataflow_Batch', 'H 13 * * *\n   ]\n   batchLoadTestJob(delegate, CommonTestProperties.TriggeringContext.POST_COMMIT)\n }\n+\n+def streamingLoadTestJob = { scope, triggeringContext ->\n+  scope.description('Runs Python ParDo load tests on Dataflow runner in streaming mode')\n+  commonJobProperties.setTopLevelMainJobProperties(scope, 'master', 120)\n+\n+  def datasetName = loadTestsBuilder.getBigQueryDataset('load_test', triggeringContext)\n+  for (testConfiguration in loadTestConfigurations(\"streaming\", datasetName)) {\n+    // Skipping case 2 in streaming because it timeouts. To be checked TODO: kkucharc\n+    if(testConfiguration.title != \"ParDo Python Load test: 2GB 100 byte records 200 times\") {", "originalCommit": "7f811d9f80dc08c27763023d9c1904a977639689", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwNzc2OQ==", "url": "https://github.com/apache/beam/pull/12435#discussion_r468807769", "bodyText": "I am totally for refactoring those LoadTestJob methods into one. Thank you for suggestion.\nAs it comes to excluding the test, I am usually more for implicit pointing to the test that should be excluded than by pointing ex. index of array (maybe because that index can change in case of adding new test cases).", "author": "kkucharc", "createdAt": "2020-08-11T19:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzOTM5Ng==", "url": "https://github.com/apache/beam/pull/12435#discussion_r474839396", "bodyText": "Hm, good point. I just reviewed @kamilwu PR#12612 and was a bit uneasy that it used indices for ignoring tests but didn't make a comment. Maybe it is worth updating that PR follow this approach instead for the reasons you mention and uniformity.", "author": "tysonjh", "createdAt": "2020-08-21T17:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTU4Mg==", "url": "https://github.com/apache/beam/pull/12435#discussion_r466651582", "bodyText": "Why only for the PortableRunner now?", "author": "tysonjh", "createdAt": "2020-08-06T19:55:28Z", "path": "sdks/python/apache_beam/testing/load_tests/pardo_test.py", "diffHunk": "@@ -125,7 +125,9 @@ def process(self, element, state=state_param):\n             state.add(1)\n         yield element\n \n-    if self.get_option_or_default('streaming', False):\n+    if self.get_option_or_default(\n+        'streaming',\n+        False) and self.pipeline.get_option('runner') == \"PortableRunner\":", "originalCommit": "7f811d9f80dc08c27763023d9c1904a977639689", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2NDcwOA==", "url": "https://github.com/apache/beam/pull/12435#discussion_r468464708", "bodyText": "The PortableRunner is supposed to use StatefulLoadGenerator to enable streaming.\nTo be honest I assumed that if we are comparing core operations, we should be using the same source method -  SyntheticSources.\nOn the other hand maybe StatefulLoadGenerator should be part of SyntheticSources. WDYT @tysonjh ?", "author": "kkucharc", "createdAt": "2020-08-11T09:56:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0OTM1Ng==", "url": "https://github.com/apache/beam/pull/12435#discussion_r468749356", "bodyText": "Right, I remember you mentioned there was some issue with the SyntheticSource that Max ran into. Ideally Synthetic source would work for all standard uses but I'm not familiar with the details. How big of a change would it be to fix SyntheticSource?\nI'm OK with moving forward with this change, creating a Jira issue for tracking the SyntheticSource improvement, and noting it here as a TODO.", "author": "tysonjh", "createdAt": "2020-08-11T17:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ4NTg3MQ==", "url": "https://github.com/apache/beam/pull/12435#discussion_r476485871", "bodyText": "Actually, StatefulLoadGenerator is no longer required to enable streaming for Flink (please do note I'm using Flink instead of PortableRunner. PortableRunner can run pipelines on any engine that supports portability, Flink included). SyntheticSource executes as SDF (Splittable DoFn). Since Python SDK supports streaming SDF (https://issues.apache.org/jira/browse/BEAM-3742), SyntheticSource should work on Flink.\n@mxm We'd love to hear your opinion. Should streaming ParDo tests for Flink still use StatefulLoadGenerator?", "author": "kamilwu", "createdAt": "2020-08-25T14:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAzMDc4Mw==", "url": "https://github.com/apache/beam/pull/12435#discussion_r479030783", "bodyText": "It's definitely not ideal to have two different sources here. Ideally, we would just use SyntheticSource for all tests. If we can replicate the behavior of StatefulLoadGenerator with SyntheticSource, it would be great to remove the former.", "author": "mxm", "createdAt": "2020-08-28T09:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwNDg3Ng==", "url": "https://github.com/apache/beam/pull/12435#discussion_r479204876", "bodyText": "I did some more tests in streaming on Flink and it turned out that SyntheticSource is slower than StatefulLoadGenerator. I think it's because SyntheticSource is not able to use the benefits of multiple workers (only one task manager generates data).\nThat being said, I think we should keep two different sources for now. As for the if statement above, in my opinion, a new switch (for example, --use_stateful_load_generator) be a good idea.", "author": "kamilwu", "createdAt": "2020-08-28T12:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTU4Mg=="}], "type": "inlineReview"}, {"oid": "95293c88d7dfb8032649d26fcc90db93a11fa807", "url": "https://github.com/apache/beam/commit/95293c88d7dfb8032649d26fcc90db93a11fa807", "message": "[BEAM-10616] fixed jenkins job", "committedDate": "2020-08-21T15:59:20Z", "type": "forcePushed"}, {"oid": "84b655955925960d063c82a7b3e44fec7832a160", "url": "https://github.com/apache/beam/commit/84b655955925960d063c82a7b3e44fec7832a160", "message": "fix: add --use_stateful_load_generator switch", "committedDate": "2020-08-31T15:06:27Z", "type": "forcePushed"}, {"oid": "72ae35a7bf70deb2e17cbfef89c73fe2fd715dec", "url": "https://github.com/apache/beam/commit/72ae35a7bf70deb2e17cbfef89c73fe2fd715dec", "message": "fix: add --use_stateful_load_generator switch", "committedDate": "2020-09-08T14:48:34Z", "type": "forcePushed"}, {"oid": "a5da78c1dcc31daae613524a6372c2b59c13b2ae", "url": "https://github.com/apache/beam/commit/a5da78c1dcc31daae613524a6372c2b59c13b2ae", "message": "[BEAM-10616] Added Python Pardo load tests for streaming on Dataflow", "committedDate": "2020-09-09T15:24:07Z", "type": "commit"}, {"oid": "50926977a931249a806e21508438ce09f178654d", "url": "https://github.com/apache/beam/commit/50926977a931249a806e21508438ce09f178654d", "message": "fix: use Dataflow Runner V2", "committedDate": "2020-09-09T15:26:23Z", "type": "commit"}, {"oid": "50926977a931249a806e21508438ce09f178654d", "url": "https://github.com/apache/beam/commit/50926977a931249a806e21508438ce09f178654d", "message": "fix: use Dataflow Runner V2", "committedDate": "2020-09-09T15:26:23Z", "type": "forcePushed"}]}