{"pr_number": 11241, "pr_title": "[BEAM-5422] Document DynamicDestinations.getTable uniqueness requirement", "pr_createdAt": "2020-03-26T22:44:50Z", "pr_url": "https://github.com/apache/beam/pull/11241", "timeline": [{"oid": "c70d30bd3e6c0e5b349e975ead21315b7df5de2f", "url": "https://github.com/apache/beam/commit/c70d30bd3e6c0e5b349e975ead21315b7df5de2f", "message": "[BEAM-5422] Document DynamicDestinations.getTable uniqueness requirement\n\nLoad job IDs are keyed by table (among other things), but not the\ndestination. Thus multiple DestinationTs mapping to the same table will\nhave the same BQ job ID. The first one will succeed, and the rest will\nseem to Beam as retries (no-ops because the job has already\nstarted/completed).", "committedDate": "2020-03-26T22:44:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NDY2OQ==", "url": "https://github.com/apache/beam/pull/11241#discussion_r402664669", "bodyText": "Should we update Python SDK as well ?\ncc: @pabloem", "author": "chamikaramj", "createdAt": "2020-04-03T00:05:20Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/DynamicDestinations.java", "diffHunk": "@@ -142,7 +142,11 @@ void setSideInputAccessorFromProcessContext(DoFn<?, ?>.ProcessContext context) {\n     return null;\n   }\n \n-  /** Returns a {@link TableDestination} object for the destination. May not return null. */\n+  /**\n+   * Returns a {@link TableDestination} object for the destination. May not return null. Return\n+   * value needs to be unique to each destination: may not return the same {@link TableDestination}\n+   * for different destinations.", "originalCommit": "c70d30bd3e6c0e5b349e975ead21315b7df5de2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5ODI4Nw==", "url": "https://github.com/apache/beam/pull/11241#discussion_r405198287", "bodyText": "Hm I do not think this is necessary in Python. In Python, we expect table names to be returned as the destination, so this case may not occur...", "author": "pabloem", "createdAt": "2020-04-08T00:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NDY2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzMTU3NQ==", "url": "https://github.com/apache/beam/pull/11241#discussion_r405231575", "bodyText": "TLDR: Pablo is right.\nIn Python SDK, a user function translates an element to a TableReference.\nIn Java SDK, a user DynamicDestinations instance translates an element to a DestinationT, and then to a TableDestination.\nJava does a reshuffle on (DestinationT, element) pairs, while Python does it on (TableReference, element) pairs.\n(Not sure why Java uses an intermediate DestinationT. Convenience? Better GBK performance? Lower resource use?)", "author": "udim", "createdAt": "2020-04-08T03:04:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NDY2OQ=="}], "type": "inlineReview"}]}