{"pr_number": 13126, "pr_title": "More flexible dataframe conversions.", "pr_createdAt": "2020-10-15T18:15:11Z", "pr_url": "https://github.com/apache/beam/pull/13126", "timeline": [{"oid": "629779458454ee8f0d09a5a8dc0e9cc32812aaf1", "url": "https://github.com/apache/beam/commit/629779458454ee8f0d09a5a8dc0e9cc32812aaf1", "message": "Allow conversion of scalars to singleton dataframe.", "committedDate": "2020-10-15T18:17:42Z", "type": "forcePushed"}, {"oid": "8324f0da40ac0bc593bf4d5b87b88166fe03834c", "url": "https://github.com/apache/beam/commit/8324f0da40ac0bc593bf4d5b87b88166fe03834c", "message": "Allow conversion from PCollection of primitives to series.", "committedDate": "2020-10-15T22:06:38Z", "type": "commit"}, {"oid": "2f48cbd8a3de7a67bd84e5fd1e2ef2da9452ee59", "url": "https://github.com/apache/beam/commit/2f48cbd8a3de7a67bd84e5fd1e2ef2da9452ee59", "message": "Allow conversion of scalars to singleton dataframe.", "committedDate": "2020-10-15T22:06:38Z", "type": "commit"}, {"oid": "2f48cbd8a3de7a67bd84e5fd1e2ef2da9452ee59", "url": "https://github.com/apache/beam/commit/2f48cbd8a3de7a67bd84e5fd1e2ef2da9452ee59", "message": "Allow conversion of scalars to singleton dataframe.", "committedDate": "2020-10-15T22:06:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NDEwOA==", "url": "https://github.com/apache/beam/pull/13126#discussion_r506764108", "bodyText": "whoops, glad you noticed the typo I missed the first time around.", "author": "TheNeuralBit", "createdAt": "2020-10-16T23:41:20Z", "path": "sdks/python/apache_beam/dataframe/convert.py", "diffHunk": "@@ -112,23 +118,7 @@ def to_pcollection(\n   if label is None:\n     # Attempt to come up with a reasonable, stable label by retrieving the name\n     # of these variables in the calling context.\n-    current_frame = inspect.currentframe()\n-    if current_frame is None:\n-      label = 'ToDataframe(...)'\n-\n-    else:\n-      previous_frame = current_frame.f_back\n-\n-      def name(obj):\n-        for key, value in previous_frame.f_locals.items():\n-          if obj is value:\n-            return key\n-        for key, value in previous_frame.f_globals.items():\n-          if obj is value:\n-            return key\n-        return '...'\n-\n-      label = 'ToDataframe(%s)' % ', '.join(name(e) for e in dataframes)", "originalCommit": "2f48cbd8a3de7a67bd84e5fd1e2ef2da9452ee59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTI1Nw==", "url": "https://github.com/apache/beam/pull/13126#discussion_r506765257", "bodyText": "I think this should just generate the proxy from pcoll.element_type in expand. I don't know if there's a good way to retrieve it in to_pcollection though... it could just be re-generated, or memoized.\nThis is one reason I was thinking about a pandas typehint. If we had that this transform could annotate the output PC with a typehint containing the proxy and to_pcollection would be able to retrieve it.", "author": "TheNeuralBit", "createdAt": "2020-10-16T23:48:19Z", "path": "sdks/python/apache_beam/dataframe/schemas.py", "diffHunk": "@@ -146,15 +146,21 @@ class BatchRowsAsDataFrame(beam.PTransform):\n   Batching parameters are inherited from\n   :class:`~apache_beam.transforms.util.BatchElements`.\n   \"\"\"\n-  def __init__(self, *args, **kwargs):\n+  def __init__(self, *args, proxy, **kwargs):", "originalCommit": "2f48cbd8a3de7a67bd84e5fd1e2ef2da9452ee59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNzU5Ng==", "url": "https://github.com/apache/beam/pull/13126#discussion_r507917596", "bodyText": "I think it's preferable to compute it in one place and pass the desired shape around elsewhere. In addition, this opens the possibility that the user may want to manually specify a shape that cannot be inferred (or would be inferred differently, e.g. the user wants a Series of floats and passes a PCollection of float-convertable things). Granted we don't yet expose that to the public API, but it would make sense in the future.", "author": "robertwb", "createdAt": "2020-10-19T17:12:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkyNTk0MQ==", "url": "https://github.com/apache/beam/pull/13126#discussion_r508925941", "bodyText": "Yeah definitely preferable to generate once... what if we make this proxy=None for now, with default behavior to generate the proxy. In the future we could consider propagating that proxy to DataframeTransform through a typehint to remove the need for generating it in to_pcollection", "author": "TheNeuralBit", "createdAt": "2020-10-21T00:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEzMjkxMA==", "url": "https://github.com/apache/beam/pull/13126#discussion_r512132910", "bodyText": "Done.", "author": "robertwb", "createdAt": "2020-10-26T17:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTI1Nw=="}], "type": "inlineReview"}, {"oid": "5ccfe2a69841ba2ea8e9f31238f074ca84465271", "url": "https://github.com/apache/beam/commit/5ccfe2a69841ba2ea8e9f31238f074ca84465271", "message": "Default generation of proxy for BatchRowsAsDataFrame.", "committedDate": "2020-10-27T00:31:38Z", "type": "commit"}, {"oid": "5ccfe2a69841ba2ea8e9f31238f074ca84465271", "url": "https://github.com/apache/beam/commit/5ccfe2a69841ba2ea8e9f31238f074ca84465271", "message": "Default generation of proxy for BatchRowsAsDataFrame.", "committedDate": "2020-10-27T00:31:38Z", "type": "forcePushed"}]}