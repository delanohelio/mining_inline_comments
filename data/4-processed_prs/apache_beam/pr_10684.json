{"pr_number": 10684, "pr_title": "[BEAM-9175] Introduce an autoformatting tool to Python SDK", "pr_createdAt": "2020-01-24T14:03:23Z", "pr_url": "https://github.com/apache/beam/pull/10684", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzI3OA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370857278", "bodyText": "Not sure I like this change: and should be at the end of this line.", "author": "udim", "createdAt": "2020-01-24T21:47:59Z", "path": "sdks/python/apache_beam/typehints/opcodes.py", "diffHunk": "@@ -268,14 +266,14 @@ def load_attr(state, arg):\n   name = state.get_name(arg)\n   if isinstance(o, Const) and hasattr(o.value, name):\n     state.stack.append(Const(getattr(o.value, name)))\n-  elif (inspect.isclass(o) and\n-        isinstance(getattr(o, name, None),\n-                   (types.MethodType, types.FunctionType))):\n+  elif (inspect.isclass(o)", "originalCommit": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDIzMA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370860230", "bodyText": "I believe the knob\nSPLIT_BEFORE_LOGICAL_OPERATOR = false\nwould change this.", "author": "udim", "createdAt": "2020-01-24T21:56:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzI3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4ODk2Mg==", "url": "https://github.com/apache/beam/pull/10684#discussion_r371288962", "bodyText": "That's right, it worked", "author": "kamilwu", "createdAt": "2020-01-27T14:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzI3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzYyMQ==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370857621", "bodyText": "The , ] at the end looks odd.", "author": "udim", "createdAt": "2020-01-24T21:49:01Z", "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -68,24 +68,23 @@ def instance_to_type(o):\n     return typehints.Tuple[[instance_to_type(item) for item in o]]\n   elif t == list:\n     if len(o) > 0:\n-      return typehints.List[\n-          typehints.Union[[instance_to_type(item) for item in o]]\n-      ]\n+      return typehints.List[typehints.Union[[\n+          instance_to_type(item) for item in o\n+      ]]]\n     else:\n       return typehints.List[typehints.Any]\n   elif t == set:\n     if len(o) > 0:\n-      return typehints.Set[\n-          typehints.Union[[instance_to_type(item) for item in o]]\n-      ]\n+      return typehints.Set[typehints.Union[[\n+          instance_to_type(item) for item in o\n+      ]]]\n     else:\n       return typehints.Set[typehints.Any]\n   elif t == dict:\n     if len(o) > 0:\n       return typehints.Dict[\n           typehints.Union[[instance_to_type(k) for k, v in o.items()]],\n-          typehints.Union[[instance_to_type(v) for k, v in o.items()]],\n-      ]\n+          typehints.Union[[instance_to_type(v) for k, v in o.items()]], ]", "originalCommit": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2NzIxOA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r371867218", "bodyText": "It's OK now.", "author": "kamilwu", "createdAt": "2020-01-28T15:19:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzYyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzk3MA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370857970", "bodyText": "This change makes things less readable IMO.", "author": "udim", "createdAt": "2020-01-24T21:50:01Z", "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -303,10 +302,8 @@ def infer_return_type(c, input_types, debug=False, depth=5):\n     elif inspect.isclass(c):\n       if c in typehints.DISALLOWED_PRIMITIVE_TYPES:\n         return {\n-            list: typehints.List[Any],\n-            set: typehints.Set[Any],\n-            tuple: typehints.Tuple[Any, ...],\n-            dict: typehints.Dict[Any, Any]\n+            list: typehints.List[Any], set: typehints.Set[Any], tuple:", "originalCommit": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTA0Ng==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370861046", "bodyText": "The knob for this is each_dict_entry_on_separate_line I believe.", "author": "udim", "createdAt": "2020-01-24T21:58:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2NzMzOQ==", "url": "https://github.com/apache/beam/pull/10684#discussion_r371867339", "bodyText": "Done.", "author": "kamilwu", "createdAt": "2020-01-28T15:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Nzk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODE4NA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370858184", "bodyText": "same", "author": "udim", "createdAt": "2020-01-24T21:50:39Z", "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -356,8 +353,8 @@ def infer_return_type_func(f, input_types, debug=False, depth=0):\n   yields = set()\n   returns = set()\n   # TODO(robertwb): Default args via inspect module.\n-  local_vars = list(input_types) + [typehints.Union[()]] * (len(co.co_varnames)\n-                                                            - len(input_types))\n+  local_vars = list(input_types) + [typehints.Union[", "originalCommit": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODg1Ng==", "url": "https://github.com/apache/beam/pull/10684#discussion_r370858856", "bodyText": "ALLOW_MULTILINE_LAMBDAS = false", "author": "udim", "createdAt": "2020-01-24T21:52:39Z", "path": "sdks/python/apache_beam/typehints/trivial_inference_test_py3.py", "diffHunk": "@@ -43,8 +42,8 @@ def testBuildListUnpack(self):\n \n   def testBuildTupleUnpack(self):\n     # Lambda uses BUILD_TUPLE_UNPACK opcode in Python 3.\n-    self.assertReturnType(typehints.Tuple[int, str, str],\n-                          lambda _list1, _list2: (*_list1, *_list2, *_list2),\n+    self.assertReturnType(typehints.Tuple[int, str, str], lambda _list1, _list2:\n+                          (*_list1, *_list2, *_list2),", "originalCommit": "6baa4d4d2d8cf6e14348c55a521e38e9f84b8d21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIwODYxMQ==", "url": "https://github.com/apache/beam/pull/10684#discussion_r371208611", "bodyText": "Weird. Looks like this knob is turned off by default, but the lambda is getting split anyway", "author": "kamilwu", "createdAt": "2020-01-27T12:18:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODg1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI5MjY1MQ==", "url": "https://github.com/apache/beam/pull/10684#discussion_r371292651", "bodyText": "I've disabled formatting for this block", "author": "kamilwu", "createdAt": "2020-01-27T15:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODg1Ng=="}], "type": "inlineReview"}, {"oid": "7db61fbf2dd6eac4ffb542e684260edf0d892fea", "url": "https://github.com/apache/beam/commit/7db61fbf2dd6eac4ffb542e684260edf0d892fea", "message": "[BEAM-9175] Add pre-commit Jenkins job", "committedDate": "2020-01-28T15:16:06Z", "type": "forcePushed"}, {"oid": "18311b6b896cf3b12b390fcbcb3a257fe80e8998", "url": "https://github.com/apache/beam/commit/18311b6b896cf3b12b390fcbcb3a257fe80e8998", "message": "[BEAM-9175]: Disable bad-continuation check in pylint", "committedDate": "2020-02-03T10:16:53Z", "type": "forcePushed"}, {"oid": "1576276b08de1e6971219f333e0fb38e43f6e58f", "url": "https://github.com/apache/beam/commit/1576276b08de1e6971219f333e0fb38e43f6e58f", "message": "[BEAM-9175] Add yapf autoformatter", "committedDate": "2020-02-06T10:00:47Z", "type": "commit"}, {"oid": "d103203e24e1a7a12a388a2584e053632834242f", "url": "https://github.com/apache/beam/commit/d103203e24e1a7a12a388a2584e053632834242f", "message": "[BEAM-9175] Disable bad-continuation check in pylint", "committedDate": "2020-02-06T10:11:24Z", "type": "forcePushed"}, {"oid": "9c3941fcc6f09ce517223350f8505b2981907743", "url": "https://github.com/apache/beam/commit/9c3941fcc6f09ce517223350f8505b2981907743", "message": "[BEAM-9175] Yapf everywhere!", "committedDate": "2020-02-06T10:33:22Z", "type": "commit"}, {"oid": "d76596c0753950c024a035465413e747ec3be2a3", "url": "https://github.com/apache/beam/commit/d76596c0753950c024a035465413e747ec3be2a3", "message": "[BEAM-9175] Fix pylint issues", "committedDate": "2020-02-06T10:33:43Z", "type": "commit"}, {"oid": "f7069f8cc90ba9ddd29b7c507028ff981ad56572", "url": "https://github.com/apache/beam/commit/f7069f8cc90ba9ddd29b7c507028ff981ad56572", "message": "[BEAM-9175] Add pre-commit Jenkins job", "committedDate": "2020-02-06T10:33:43Z", "type": "commit"}, {"oid": "4fa102c871da4db661d0d2ebde98545e61d2a9d4", "url": "https://github.com/apache/beam/commit/4fa102c871da4db661d0d2ebde98545e61d2a9d4", "message": "[BEAM-9175] Disable bad-continuation check in pylint", "committedDate": "2020-02-06T10:33:43Z", "type": "commit"}, {"oid": "4fa102c871da4db661d0d2ebde98545e61d2a9d4", "url": "https://github.com/apache/beam/commit/4fa102c871da4db661d0d2ebde98545e61d2a9d4", "message": "[BEAM-9175] Disable bad-continuation check in pylint", "committedDate": "2020-02-06T10:33:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3NDQzMA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r376574430", "bodyText": "I missed this in my review. The lint precommit runs :pythonLintPreCommit, which depends on lint tasks.\nSuggestion:\nlint.dependsOn formatter", "author": "udim", "createdAt": "2020-02-07T19:46:12Z", "path": "sdks/python/test-suites/tox/py37/build.gradle", "diffHunk": "@@ -35,6 +35,9 @@ lint.dependsOn lintPy37\n toxTask \"mypyPy37\", \"py37-mypy\"\n lint.dependsOn mypyPy37\n \n+toxTask \"formatter\", \"py3-yapf-check\"\n+check.dependsOn formatter", "originalCommit": "4fa102c871da4db661d0d2ebde98545e61d2a9d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MzQ1NA==", "url": "https://github.com/apache/beam/pull/10684#discussion_r376653454", "bodyText": "Nevermind, I see there's a new job named PythonFormatter", "author": "udim", "createdAt": "2020-02-07T23:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3NDQzMA=="}], "type": "inlineReview"}]}