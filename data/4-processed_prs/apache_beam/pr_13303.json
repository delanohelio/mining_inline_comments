{"pr_number": 13303, "pr_title": "[BEAM-11196] Ensure parent of fused stages is not one of its transforms", "pr_createdAt": "2020-11-11T19:45:09Z", "pr_url": "https://github.com/apache/beam/pull/13303", "timeline": [{"oid": "e0dd0decc2ad26aef9aa4e5694b0705131dbc5d9", "url": "https://github.com/apache/beam/commit/e0dd0decc2ad26aef9aa4e5694b0705131dbc5d9", "message": "Ensure parent of fused stages is not one of the fused stages", "committedDate": "2020-11-11T19:33:31Z", "type": "commit"}, {"oid": "c4642c890c7eaeafa372d5f73b77db6adab84083", "url": "https://github.com/apache/beam/commit/c4642c890c7eaeafa372d5f73b77db6adab84083", "message": "Fix docstring", "committedDate": "2020-11-11T19:44:57Z", "type": "commit"}, {"oid": "068b2c69f9f6531dc376227192e7f134e50754db", "url": "https://github.com/apache/beam/commit/068b2c69f9f6531dc376227192e7f134e50754db", "message": "Fix typing", "committedDate": "2020-11-12T20:29:07Z", "type": "commit"}, {"oid": "2e6b03abc610d20dd4e25dad7f82639e460d3f9d", "url": "https://github.com/apache/beam/commit/2e6b03abc610d20dd4e25dad7f82639e460d3f9d", "message": "Fix whitespace", "committedDate": "2020-11-12T20:30:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NTk0Mg==", "url": "https://github.com/apache/beam/pull/13303#discussion_r522675942", "bodyText": "is it guaranteed that result in stages no longer holds after this?", "author": "tvalentyn", "createdAt": "2020-11-13T06:18:19Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -1212,6 +1213,22 @@ def get_ancestors(name):\n   return None\n \n \n+def _parent_for_fused_stages(stages, context):\n+  # type: (Iterable[str], TransformContext) -> Optional[str]\n+\n+  '''Returns the name of the new parent for the fused stages.\n+\n+  The new parent is the lowest common ancestor of the fused stages that is not\n+  contained in the set of fused stages. The provided context is used to compute\n+  ancestors of stages.\n+  '''\n+  result = functools.reduce(\n+      lambda a, b: _lowest_common_ancestor(a, b, context), stages)\n+  if result in stages:\n+    result = context.parents_map().get(result)", "originalCommit": "e0dd0decc2ad26aef9aa4e5694b0705131dbc5d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNzk5OQ==", "url": "https://github.com/apache/beam/pull/13303#discussion_r523237999", "bodyText": "Yes; if result was the lowest common ancestor for set S (where nodes are ancestors of themselves), then it is impossible for result's parent to still be in S; otherwise result would not be an ancestor of result's parent, which is in S, which contradicts result's status as lowest common ancestor of S.", "author": "yifanmai", "createdAt": "2020-11-13T21:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NTk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MDM0Mw==", "url": "https://github.com/apache/beam/pull/13303#discussion_r523250343", "bodyText": "q.e.d. Thanks :)", "author": "tvalentyn", "createdAt": "2020-11-13T21:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NTk0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NzYwMg==", "url": "https://github.com/apache/beam/pull/13303#discussion_r522677602", "bodyText": "dumb question: what's a key-with-none stage? Is it obvious why a single-sibling stage should be marked 'ineligible' or it needs a comment? Thanks.", "author": "tvalentyn", "createdAt": "2020-11-13T06:24:46Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -788,14 +789,14 @@ def get_stage_key(stage):\n   pcoll_id_remap = {}\n   remaining_stages = []\n   for sibling_stages in grouped_eligible_stages.values():\n+    if len(sibling_stages) == 1:\n+      ineligible_stages.extend(sibling_stages)", "originalCommit": "2e6b03abc610d20dd4e25dad7f82639e460d3f9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjk0NQ==", "url": "https://github.com/apache/beam/pull/13303#discussion_r523236945", "bodyText": "KeyWithNone / KeyWithVoid refers to adding None as a key in the expansion for CombineGlobally here. Basically this optimizer is finding sibling duplicate KeyWithNone stages with the same input and eliminating them.\nI'm reverting this block because it's not necessary after the other changes - it was an alternate workaround that I was trying that would also allow the newly added tests to pass.", "author": "yifanmai", "createdAt": "2020-11-13T21:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NzYwMg=="}], "type": "inlineReview"}, {"oid": "8ce79474680e38b6a0d84d17e4906821afa884ef", "url": "https://github.com/apache/beam/commit/8ce79474680e38b6a0d84d17e4906821afa884ef", "message": "Revert unnecessary change", "committedDate": "2020-11-13T21:21:11Z", "type": "commit"}, {"oid": "b91f196ec1751f7e58ca6ffc843d7d906638cb7c", "url": "https://github.com/apache/beam/commit/b91f196ec1751f7e58ca6ffc843d7d906638cb7c", "message": "Typehint", "committedDate": "2020-11-13T22:00:42Z", "type": "commit"}, {"oid": "2ee7ae383cee05c3f43df5ff2014bd82313459fb", "url": "https://github.com/apache/beam/commit/2ee7ae383cee05c3f43df5ff2014bd82313459fb", "message": "lint", "committedDate": "2020-11-13T22:55:36Z", "type": "commit"}]}