{"pr_number": 11263, "pr_title": "[BEAM-9325] Override proper write method in UnownedOutputStream", "pr_createdAt": "2020-03-30T19:39:48Z", "pr_url": "https://github.com/apache/beam/pull/11263", "timeline": [{"oid": "479148d644d5fbd0bc6366a8c9ec40e900a18e23", "url": "https://github.com/apache/beam/commit/479148d644d5fbd0bc6366a8c9ec40e900a18e23", "message": "[BEAM-9325] Added Proper Write Method in UnownedOutputStream", "committedDate": "2020-03-30T19:21:52Z", "type": "commit"}, {"oid": "0fabfedb04041746ead1bbcc3a70e35730847d93", "url": "https://github.com/apache/beam/commit/0fabfedb04041746ead1bbcc3a70e35730847d93", "message": "fix format warning", "committedDate": "2020-03-30T19:45:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NTU5Nw==", "url": "https://github.com/apache/beam/pull/11263#discussion_r400485597", "bodyText": "should not this call the method with the full signature?\nMaybe it is best to inline this method in the caller, looks simpler IMO", "author": "iemejia", "createdAt": "2020-03-30T20:50:49Z", "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/util/UnownedOutputStreamTest.java", "diffHunk": "@@ -53,4 +57,21 @@ public void testClosingThrows() throws Exception {\n     expectedException.expectMessage(\"Caller does not own the underlying\");\n     os.close();\n   }\n+\n+  @Test\n+  public void testWrite() throws IOException {\n+    ByteArrayOutputStream expected = new ByteArrayOutputStream();\n+    ByteArrayOutputStream actual = new ByteArrayOutputStream();\n+    UnownedOutputStream osActual = new UnownedOutputStream(actual);\n+\n+    writeToBoth(expected, osActual, \"Hello World!\".getBytes(StandardCharsets.UTF_8));\n+    writeToBoth(expected, osActual, \"Welcome!\".getBytes(StandardCharsets.UTF_8));\n+\n+    assertArrayEquals(expected.toByteArray(), actual.toByteArray());\n+  }\n+\n+  private static void writeToBoth(OutputStream a, OutputStream b, byte[] data) throws IOException {\n+    a.write(data);\n+    b.write(data);", "originalCommit": "0fabfedb04041746ead1bbcc3a70e35730847d93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NTc0Mw==", "url": "https://github.com/apache/beam/pull/11263#discussion_r400545743", "bodyText": "Done! Inlined with full signature!", "author": "lukemin89", "createdAt": "2020-03-30T23:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NTU5Nw=="}], "type": "inlineReview"}, {"oid": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638", "url": "https://github.com/apache/beam/commit/5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638", "message": "[BEAM-9325] reflect comment : inline testing methods", "committedDate": "2020-03-30T22:53:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDU5MA==", "url": "https://github.com/apache/beam/pull/11263#discussion_r401020590", "bodyText": "This won't actually test that the singular version of the method was called since if FilteredOutputStream wrote one byte at a time you would still get the expected result. You'll need to use a mock and validate that #write(byte[], int, int) was called the correct number of times.", "author": "lukecwik", "createdAt": "2020-03-31T15:47:07Z", "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/util/UnownedOutputStreamTest.java", "diffHunk": "@@ -53,4 +56,22 @@ public void testClosingThrows() throws Exception {\n     expectedException.expectMessage(\"Caller does not own the underlying\");\n     os.close();\n   }\n+\n+  @Test\n+  public void testWrite() throws IOException {\n+    ByteArrayOutputStream expected = new ByteArrayOutputStream();\n+    ByteArrayOutputStream actual = new ByteArrayOutputStream();\n+    UnownedOutputStream osActual = new UnownedOutputStream(actual);\n+\n+    byte[] data0 = \"Hello World!\".getBytes(StandardCharsets.UTF_8);\n+    byte[] data1 = \"Welcome!\".getBytes(StandardCharsets.UTF_8);\n+\n+    expected.write(data0, 0, data0.length);\n+    osActual.write(data0, 0, data0.length);\n+\n+    expected.write(data1, 0, data1.length);\n+    osActual.write(data1, 0, data1.length);\n+\n+    assertArrayEquals(expected.toByteArray(), actual.toByteArray());", "originalCommit": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA3NTExMg==", "url": "https://github.com/apache/beam/pull/11263#discussion_r401075112", "bodyText": "I just added CallCountOutputStream to test the proper number of call count.", "author": "lukemin89", "createdAt": "2020-03-31T17:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDU5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0OTM3Mw==", "url": "https://github.com/apache/beam/pull/11263#discussion_r401049373", "bodyText": "Wondering if we should do the bounds check here too (like in FilterOutputStream or we assume that the delegated does the check? opinions @lukecwik", "author": "iemejia", "createdAt": "2020-03-31T16:27:47Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/UnownedOutputStream.java", "diffHunk": "@@ -53,4 +53,9 @@ public int hashCode() {\n   public String toString() {\n     return MoreObjects.toStringHelper(UnownedOutputStream.class).add(\"out\", out).toString();\n   }\n+\n+  @Override\n+  public void write(byte[] b, int off, int len) throws IOException {\n+    out.write(b, off, len);", "originalCommit": "5ef7f9c5d6232d1d6a79ba495fcfdfc09c5d6638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1MjEwNA==", "url": "https://github.com/apache/beam/pull/11263#discussion_r401052104", "bodyText": "Leave the bounds checking to the part of the system that accesses the byte[] otherwise every layer will perform the same validation.", "author": "lukecwik", "createdAt": "2020-03-31T16:31:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0OTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA3MzYwMg==", "url": "https://github.com/apache/beam/pull/11263#discussion_r401073602", "bodyText": "I agree with @lukecwik", "author": "lukemin89", "createdAt": "2020-03-31T17:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0OTM3Mw=="}], "type": "inlineReview"}, {"oid": "f08bb5e4aaef1b1acb131282ba4e8068840374bf", "url": "https://github.com/apache/beam/commit/f08bb5e4aaef1b1acb131282ba4e8068840374bf", "message": "[BEAM-9325] reflect comment : Fix JAXBCoder + change test", "committedDate": "2020-03-31T17:03:06Z", "type": "commit"}]}