{"pr_number": 12172, "pr_title": "[BEAM-10185] Building python wheels for Windows (on Github Actions)", "pr_createdAt": "2020-07-03T13:51:51Z", "pr_url": "https://github.com/apache/beam/pull/12172", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2MDA0MQ==", "url": "https://github.com/apache/beam/pull/12172#discussion_r450560041", "bodyText": "cp27 is missing for windows-latests above. Why are we installing a Python 2.7 compiler?", "author": "aaltay", "createdAt": "2020-07-07T01:22:24Z", "path": ".github/workflows/build_wheels.yml", "diffHunk": "@@ -119,19 +123,24 @@ jobs:\n       uses: actions/setup-python@v2\n       with:\n         python-version: 3.7\n+    - name: Install Visual C++ for Python 2.7 on Windows", "originalCommit": "8a17e6c0d4ad2cf73c81ba24dd67b28970be1d52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2OTkyMg==", "url": "https://github.com/apache/beam/pull/12172#discussion_r452069922", "bodyText": "Good point, that should be a letftover. I've just removed it.", "author": "damgad", "createdAt": "2020-07-09T08:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2MDA0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1ODUzMw==", "url": "https://github.com/apache/beam/pull/12172#discussion_r453058533", "bodyText": "These error codes are never checked by the callers. That would seem to give incorrect results (especially if timespec is initialized with random data (e.g. on the stack) each time.\nIs there a simpler/more robust API we could call instead in this case, even if it is lower precision?", "author": "robertwb", "createdAt": "2020-07-10T20:17:35Z", "path": "sdks/python/apache_beam/runners/worker/crossplatform_time.h", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#ifndef BEAM_CROSSPLATFORM_TIME_H\n+#define BEAM_CROSSPLATFORM_TIME_H\n+\n+#include <time.h>\n+\n+#ifdef _WIN32\n+#include <windows.h>\n+\n+/**\n+ * Alternative to POSIX clock_gettime that may be run on Windows platform. The clk_id parameter is\n+ * ignored, and function always act as for CLOCK_MONOTONIC. Windows performance counter is used.\n+ */\n+int clock_gettime(int clk_id, struct timespec *tv) {\n+    static LARGE_INTEGER counterFrequency = {0};\n+    LARGE_INTEGER counterValue;\n+\n+    if (0 == counterFrequency.QuadPart) {\n+        if (0 == QueryPerformanceFrequency(&counterFrequency)) {\n+            /* System doesn't support performance counters. It's guaranteed to not happen\n+            on systems that run Windows XP or later */\n+            return -1;", "originalCommit": "d1d7aaf2d891a6edcc7b3a219aa28eab72ec1ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwNTE3OQ==", "url": "https://github.com/apache/beam/pull/12172#discussion_r453805179", "bodyText": "Nice catch! :)\nThe performance counter is the only API that is designed to measure execution time that I know. There is GetSystemTime and family with lower precision, which will act more like CLOCK_REALTIME. I see four solutions there:\n\nLeave it as it is. I'm not sure if that's a real-life issue in our case, as the function is guaranteed to succeed on WinXP+ (?)\nSwitch to the less accurate GetSystemTime\nUse GetSystemTime as a failover procedure if PerformanceCounter Failed. The downside here is that we will have different clk types (MONOTHONIClike and REALTIMElike ) depending on the platform.\nWrite some fancy logic to merge the PerformanceCounter and GetSystemTime to have precise REALTIMElike output and failover to less precise GetSystemTime.\n\nWhat do you think?", "author": "damgad", "createdAt": "2020-07-13T17:17:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1ODUzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5MTUzOA==", "url": "https://github.com/apache/beam/pull/12172#discussion_r453991538", "bodyText": "IMO, both 3 and 1 sounds fine. 3 might be slightly better. WinXP+ is practically all modern Windows versions.", "author": "aaltay", "createdAt": "2020-07-13T22:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1ODUzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyODQxNw==", "url": "https://github.com/apache/beam/pull/12172#discussion_r454928417", "bodyText": "I've just pushed the third option", "author": "damgad", "createdAt": "2020-07-15T09:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1ODUzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzODExNQ==", "url": "https://github.com/apache/beam/pull/12172#discussion_r455238115", "bodyText": "nit:\nThis part if (0 == counterFrequency.QuadPart && performanceCounterAvailable) could be simplified to if (0 == counterFrequency.QuadPart) because counterFrequency.QuadPart will be set to a non-zero value either way after the first query.", "author": "aaltay", "createdAt": "2020-07-15T17:58:51Z", "path": "sdks/python/apache_beam/runners/worker/crossplatform_time.h", "diffHunk": "@@ -26,24 +26,32 @@\n \n /**\n  * Alternative to POSIX clock_gettime that may be run on Windows platform. The clk_id parameter is\n- * ignored, and function always act as for CLOCK_MONOTONIC. Windows performance counter is used.\n+ * ignored and function act as for CLOCK_MONOTONIC. On Windows XP or later Performance Counter is used.\n+ * On older platforms, where there's no Performance Counter, SystemTime will be used as a failover.\n  */\n int clock_gettime(int clk_id, struct timespec *tv) {\n     static LARGE_INTEGER counterFrequency = {0};\n-    LARGE_INTEGER counterValue;\n+    static BOOL performanceCounterAvailable = TRUE;\n+    LARGE_INTEGER counterValue = {0};\n \n-    if (0 == counterFrequency.QuadPart) {\n+    //initialization\n+    if (0 == counterFrequency.QuadPart && performanceCounterAvailable) {", "originalCommit": "1f4edc685c53533ce967be1b3ab959aafc571cf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3afb6aff52f2f9406a7d93e89668fc50c4711534", "url": "https://github.com/apache/beam/commit/3afb6aff52f2f9406a7d93e89668fc50c4711534", "message": "Build python wheels on GItHub actions for Windows", "committedDate": "2020-07-16T09:35:47Z", "type": "commit"}, {"oid": "1b2c16be47b8e0c7986d5190e116211b07192442", "url": "https://github.com/apache/beam/commit/1b2c16be47b8e0c7986d5190e116211b07192442", "message": "Turn on cythonize for Windows", "committedDate": "2020-07-16T09:35:47Z", "type": "commit"}, {"oid": "921d0db15909736d1a16e759afaae437e4d3e403", "url": "https://github.com/apache/beam/commit/921d0db15909736d1a16e759afaae437e4d3e403", "message": "added crossplatform time.h and unistd.h headers", "committedDate": "2020-07-16T09:35:47Z", "type": "commit"}, {"oid": "ba8fee945fcb5d4525fe24a93461fb753b2f0ea4", "url": "https://github.com/apache/beam/commit/ba8fee945fcb5d4525fe24a93461fb753b2f0ea4", "message": "adding h files to sdist", "committedDate": "2020-07-16T09:35:48Z", "type": "commit"}, {"oid": "51641952730e9baa1499ae238f69537de110f077", "url": "https://github.com/apache/beam/commit/51641952730e9baa1499ae238f69537de110f077", "message": "fixed cp37 wheel for windows", "committedDate": "2020-07-16T09:35:48Z", "type": "commit"}, {"oid": "e087bb07c9f2e7d4c30e89bdae12fbebe9974582", "url": "https://github.com/apache/beam/commit/e087bb07c9f2e7d4c30e89bdae12fbebe9974582", "message": "added lincense headers", "committedDate": "2020-07-16T09:35:49Z", "type": "commit"}, {"oid": "a6ad155dd440d282070262de66840593ba6dd927", "url": "https://github.com/apache/beam/commit/a6ad155dd440d282070262de66840593ba6dd927", "message": "fixed python line length", "committedDate": "2020-07-16T09:35:49Z", "type": "commit"}, {"oid": "0cfb8c2c3faf67511d9ec1c1c929ea21b0919209", "url": "https://github.com/apache/beam/commit/0cfb8c2c3faf67511d9ec1c1c929ea21b0919209", "message": "removing vcpython27 from windows wheels dependencies", "committedDate": "2020-07-16T09:35:49Z", "type": "commit"}, {"oid": "2db00471e246d31f772aeb8fbd66a25e91ff5bbf", "url": "https://github.com/apache/beam/commit/2db00471e246d31f772aeb8fbd66a25e91ff5bbf", "message": "clock_gettime: adding failover procedure if performance counter is not available", "committedDate": "2020-07-16T09:35:50Z", "type": "commit"}, {"oid": "db208d6ac9f797ed24bf8d1a4ce9af7aac6f28f0", "url": "https://github.com/apache/beam/commit/db208d6ac9f797ed24bf8d1a4ce9af7aac6f28f0", "message": "fixing wheels 'Add checksums' step on windows", "committedDate": "2020-07-16T11:40:37Z", "type": "commit"}, {"oid": "db208d6ac9f797ed24bf8d1a4ce9af7aac6f28f0", "url": "https://github.com/apache/beam/commit/db208d6ac9f797ed24bf8d1a4ce9af7aac6f28f0", "message": "fixing wheels 'Add checksums' step on windows", "committedDate": "2020-07-16T11:40:37Z", "type": "forcePushed"}, {"oid": "2670b86aa9c701a365f585fac67cd72803b06468", "url": "https://github.com/apache/beam/commit/2670b86aa9c701a365f585fac67cd72803b06468", "message": "simplifying initialization condition for clock_gettime windows implementation", "committedDate": "2020-07-16T12:53:27Z", "type": "commit"}, {"oid": "5ffd35c1b6d57ee49e2e08236dff443111cb036b", "url": "https://github.com/apache/beam/commit/5ffd35c1b6d57ee49e2e08236dff443111cb036b", "message": "fixed os variable name in buildwheels gh actions workflow", "committedDate": "2020-07-16T15:12:43Z", "type": "forcePushed"}, {"oid": "d1f7367cea6351f2f7addfdd2d22a3c1b0289b27", "url": "https://github.com/apache/beam/commit/d1f7367cea6351f2f7addfdd2d22a3c1b0289b27", "message": "fixed os variable name in buildwheels gh actions workflow", "committedDate": "2020-07-16T19:32:24Z", "type": "commit"}, {"oid": "d1f7367cea6351f2f7addfdd2d22a3c1b0289b27", "url": "https://github.com/apache/beam/commit/d1f7367cea6351f2f7addfdd2d22a3c1b0289b27", "message": "fixed os variable name in buildwheels gh actions workflow", "committedDate": "2020-07-16T19:32:24Z", "type": "forcePushed"}]}