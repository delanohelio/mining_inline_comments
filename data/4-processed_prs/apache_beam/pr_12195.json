{"pr_number": 12195, "pr_title": "[BEAM-10422] Chicago Taxi example: set number of Dataflow workers to 5", "pr_createdAt": "2020-07-08T14:29:21Z", "pr_url": "https://github.com/apache/beam/pull/12195", "timeline": [{"oid": "ec14eab756e1bc9de90f5aebaf8b0e11e5bbc1dc", "url": "https://github.com/apache/beam/commit/ec14eab756e1bc9de90f5aebaf8b0e11e5bbc1dc", "message": "Chicago Taxi example: set number of Dataflow workers to 5", "committedDate": "2020-07-08T14:57:37Z", "type": "forcePushed"}, {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb", "url": "https://github.com/apache/beam/commit/8a6057153e761bb8808c6203b8df3cc012b559bb", "message": "[BEAM-10422] Chicago Taxi example: set number of Dataflow workers to 5; remove shuffle_mode experiment", "committedDate": "2020-07-09T14:09:58Z", "type": "commit"}, {"oid": "8a6057153e761bb8808c6203b8df3cc012b559bb", "url": "https://github.com/apache/beam/commit/8a6057153e761bb8808c6203b8df3cc012b559bb", "message": "[BEAM-10422] Chicago Taxi example: set number of Dataflow workers to 5; remove shuffle_mode experiment", "committedDate": "2020-07-09T14:09:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxMTkyNQ==", "url": "https://github.com/apache/beam/pull/12195#discussion_r456211925", "bodyText": "It's nice to include trigger command in the message (easy to rerun if needed). How about:\nChicago Taxi Example on Dataflow (\"Run Chicago Taxi on Dataflow\")", "author": "tvalentyn", "createdAt": "2020-07-17T04:30:19Z", "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')\n             switches('-PgcsRoot=gs://temp-storage-for-perf-tests/chicago-taxi')\n+            switches(\"-PpipelineOptions=\\\"${LoadTestsBuilder.parseOptions(pipelineOptions)}\\\"\")\n         }\n     }\n }\n \n+PostcommitJobBuilder.postCommitJob(\n+    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n+    'Run Chicago Taxi on Dataflow',\n+    'Google Cloud Dataflow Runner Chicago Taxi Example',", "originalCommit": "8a6057153e761bb8808c6203b8df3cc012b559bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcwNw==", "url": "https://github.com/apache/beam/pull/12195#discussion_r456214707", "bodyText": "Can we switch this to Py3?", "author": "tvalentyn", "createdAt": "2020-07-17T04:42:01Z", "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')", "originalCommit": "8a6057153e761bb8808c6203b8df3cc012b559bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MjEwMw==", "url": "https://github.com/apache/beam/pull/12195#discussion_r457552103", "bodyText": "There's a jira for this: https://issues.apache.org/jira/browse/BEAM-9154. As far as I remember there was something that prevented us from switching to Py3. Not sure if it's still relevant.", "author": "kamilwu", "createdAt": "2020-07-20T16:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY3MDM0OA==", "url": "https://github.com/apache/beam/pull/12195#discussion_r457670348", "bodyText": "We should move this suite to Py3 as we are actively discussing dropping Py2 support, and these suites will stop working.", "author": "tvalentyn", "createdAt": "2020-07-20T20:24:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcyMA==", "url": "https://github.com/apache/beam/pull/12195#discussion_r456214720", "bodyText": "With CronJobBuilder and PostcommitJobBuilder, do we run these test as frequent as specified by Cron config or more frequently (as often as new commits come in) ?", "author": "tvalentyn", "createdAt": "2020-07-17T04:42:06Z", "path": ".test-infra/jenkins/job_PostCommit_Python_Chicago_Taxi_Example_Dataflow.groovy", "diffHunk": "@@ -19,46 +19,44 @@\n import CommonJobProperties as commonJobProperties\n import PostcommitJobBuilder\n import CronJobBuilder\n+import LoadTestsBuilder\n \n-\n-// This job runs the Chicago Taxi Example script on Dataflow\n-PostcommitJobBuilder.postCommitJob(\n-    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n-    'Run Chicago Taxi on Dataflow',\n-    'Google Cloud Dataflow Runner Chicago Taxi Example',\n-    this\n-) {\n-    description('Runs the Chicago Taxi Example on the Dataflow runner.')\n+def chicagoTaxiJob = { scope ->\n+    scope.description('Runs the Chicago Taxi Example on the Dataflow runner.')\n \n     // Set common parameters.\n-    commonJobProperties.setTopLevelMainJobProperties(delegate)\n+    commonJobProperties.setTopLevelMainJobProperties(scope)\n+\n+    def pipelineOptions = [\n+        num_workers          : 5,\n+        autoscaling_algorithm: 'NONE',\n+    ]\n \n     // Gradle goals for this job.\n-    steps {\n+    scope.steps {\n         gradle {\n             rootBuildScriptDir(commonJobProperties.checkoutDir)\n+            commonJobProperties.setGradleSwitches(delegate)\n             tasks(':sdks:python:test-suites:dataflow:py2:chicagoTaxiExample')\n             switches('-PgcsRoot=gs://temp-storage-for-perf-tests/chicago-taxi')\n+            switches(\"-PpipelineOptions=\\\"${LoadTestsBuilder.parseOptions(pipelineOptions)}\\\"\")\n         }\n     }\n }\n \n+PostcommitJobBuilder.postCommitJob(\n+    'beam_PostCommit_Python_Chicago_Taxi_Dataflow',\n+    'Run Chicago Taxi on Dataflow',\n+    'Google Cloud Dataflow Runner Chicago Taxi Example',\n+    this\n+) {\n+    chicagoTaxiJob(delegate)\n+}\n+\n CronJobBuilder.cronJob(", "originalCommit": "8a6057153e761bb8808c6203b8df3cc012b559bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NzA2MQ==", "url": "https://github.com/apache/beam/pull/12195#discussion_r457547061", "bodyText": "As frequent as specified by Cron only.\n\n  \n    \n      beam/.test-infra/jenkins/CronJobBuilder.groovy\n    \n    \n         Line 47\n      in\n      0fc74c0\n    \n    \n    \n    \n\n        \n          \n           commonJobProperties.setAutoJob(delegate, cronPattern, 'builds@beam.apache.org', false, true) \n        \n    \n  \n\n\nThe fourth parameter, triggerOnCommit, is set to False here, which means that the job is not triggered when new commits come in.", "author": "kamilwu", "createdAt": "2020-07-20T16:40:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDcyMA=="}], "type": "inlineReview"}, {"oid": "1784bea047f39b512dce8719506e656865c9baf8", "url": "https://github.com/apache/beam/commit/1784bea047f39b512dce8719506e656865c9baf8", "message": "fix: include trigger command in the message", "committedDate": "2020-07-20T16:20:57Z", "type": "commit"}]}