{"pr_number": 10823, "pr_title": "[BEAM-9286] Create validation runner test for metrics (user counter). ", "pr_createdAt": "2020-02-10T20:14:50Z", "pr_url": "https://github.com/apache/beam/pull/10823", "timeline": [{"oid": "9b96766e4b56b999bf40ef05e54df02b9cf3d941", "url": "https://github.com/apache/beam/commit/9b96766e4b56b999bf40ef05e54df02b9cf3d941", "message": "Create validation runner test for metrics (limited to user counter in\nthis PR).", "committedDate": "2020-02-10T20:07:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAyMDQ5Nw==", "url": "https://github.com/apache/beam/pull/10823#discussion_r381020497", "bodyText": "= 4, no guarantee it's exactly 4.", "author": "robertwb", "createdAt": "2020-02-19T00:51:17Z", "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -127,6 +134,35 @@ def test_distribution_empty_namespace(self):\n     with self.assertRaises(ValueError):\n       Metrics.distribution(\"\", \"names\")\n \n+  @attr('ValidatesRunner')\n+  def test_user_counter_using_pardo(self):\n+    class SomeDoFn(beam.DoFn):\n+      \"\"\"A custom dummy DoFn using yield.\"\"\"\n+      def __init__(self):\n+        self.user_counter_elements = metrics.Metrics.counter(\n+          self.__class__, 'metrics_user_counter_element')\n+\n+      def process(self, element):\n+        self.user_counter_elements.inc()\n+        yield element\n+\n+    pipeline = TestPipeline()\n+    nums = pipeline | 'Input' >> beam.Create([1, 2, 3, 4])\n+    results = nums | 'ApplyPardo' >> beam.ParDo(SomeDoFn())\n+\n+    res = pipeline.run()\n+    res.wait_until_finish()\n+    metric_results = (\n+      res.metrics().query(MetricsFilter()\n+        .with_name('metrics_user_counter_element')))\n+    outputs_counter = metric_results['counters'][0]\n+    assert_that(results, equal_to([1, 2, 3, 4]))\n+\n+    self.assertEqual(outputs_counter.key.metric.name,\n+\t\t\t\t\t 'metrics_user_counter_element')\n+    self.assertEqual(outputs_counter.committed, 4)\n+    self.assertEqual(outputs_counter.attempted, 4)", "originalCommit": "9b96766e4b56b999bf40ef05e54df02b9cf3d941", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5NDcyNw==", "url": "https://github.com/apache/beam/pull/10823#discussion_r381094727", "bodyText": "removed the assert on attempted.", "author": "HuangLED", "createdAt": "2020-02-19T06:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAyMDQ5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAyMDg4MQ==", "url": "https://github.com/apache/beam/pull/10823#discussion_r381020881", "bodyText": "This must be applied before the pipeline is run.", "author": "robertwb", "createdAt": "2020-02-19T00:52:39Z", "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -127,6 +134,35 @@ def test_distribution_empty_namespace(self):\n     with self.assertRaises(ValueError):\n       Metrics.distribution(\"\", \"names\")\n \n+  @attr('ValidatesRunner')\n+  def test_user_counter_using_pardo(self):\n+    class SomeDoFn(beam.DoFn):\n+      \"\"\"A custom dummy DoFn using yield.\"\"\"\n+      def __init__(self):\n+        self.user_counter_elements = metrics.Metrics.counter(\n+          self.__class__, 'metrics_user_counter_element')\n+\n+      def process(self, element):\n+        self.user_counter_elements.inc()\n+        yield element\n+\n+    pipeline = TestPipeline()\n+    nums = pipeline | 'Input' >> beam.Create([1, 2, 3, 4])\n+    results = nums | 'ApplyPardo' >> beam.ParDo(SomeDoFn())\n+\n+    res = pipeline.run()\n+    res.wait_until_finish()\n+    metric_results = (\n+      res.metrics().query(MetricsFilter()\n+        .with_name('metrics_user_counter_element')))\n+    outputs_counter = metric_results['counters'][0]\n+    assert_that(results, equal_to([1, 2, 3, 4]))", "originalCommit": "9b96766e4b56b999bf40ef05e54df02b9cf3d941", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5NDc0Nw==", "url": "https://github.com/apache/beam/pull/10823#discussion_r381094747", "bodyText": "done.", "author": "HuangLED", "createdAt": "2020-02-19T06:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAyMDg4MQ=="}], "type": "inlineReview"}, {"oid": "830d8871023fffaecd0a250ac79a6fcc1310db5b", "url": "https://github.com/apache/beam/commit/830d8871023fffaecd0a250ac79a6fcc1310db5b", "message": "Fixups.", "committedDate": "2020-02-19T06:27:34Z", "type": "commit"}]}