{"pr_number": 11943, "pr_title": "[BEAM-10209] Add without_defaults to Mean combiner in Python", "pr_createdAt": "2020-06-06T13:20:18Z", "pr_url": "https://github.com/apache/beam/pull/11943", "timeline": [{"oid": "279089041372d1fac0ba36f95ffdc77c31f0117b", "url": "https://github.com/apache/beam/commit/279089041372d1fac0ba36f95ffdc77c31f0117b", "message": "Add without_defaults to mean combiner", "committedDate": "2020-06-06T13:07:12Z", "type": "commit"}, {"oid": "a68328513ba76a3f9f38afade3c1ab60045940ba", "url": "https://github.com/apache/beam/commit/a68328513ba76a3f9f38afade3c1ab60045940ba", "message": "Add without_defaults to mean combiner", "committedDate": "2020-06-06T16:39:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MTY0OA==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438291648", "bodyText": "Just use a timestamp of 0 or similar.", "author": "robertwb", "createdAt": "2020-06-10T17:27:33Z", "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -97,6 +100,7 @@ def test_builtin_combines(self):\n       vals = [6, 3, 1, 1, 9, 1, 5, 2, 0, 6]\n       mean = sum(vals) / float(len(vals))\n       size = len(vals)\n+      timestamp = 1591485720", "originalCommit": "a68328513ba76a3f9f38afade3c1ab60045940ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2NjQzNA==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438366434", "bodyText": "Modified! Thanks", "author": "InigoSJ", "createdAt": "2020-06-10T19:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MTY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MTc3Nw==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438291777", "bodyText": "TimestampedValue requires the timestamp and the value in the constructor.", "author": "robertwb", "createdAt": "2020-06-10T17:27:46Z", "path": "sdks/python/apache_beam/transforms/combiners_test.py", "diffHunk": "@@ -105,6 +109,16 @@ def test_builtin_combines(self):\n       assert_that(result_mean, equal_to([mean]), label='assert:mean')\n       assert_that(result_count, equal_to([size]), label='assert:size')\n \n+      # Now for global combines without default\n+      timestamped = pcoll | Map(lambda x: TimestampedValue(timestamp))", "originalCommit": "a68328513ba76a3f9f38afade3c1ab60045940ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2Njk0Ng==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438366946", "bodyText": "Thanks for spotting this, I think I missed it when moving from my test env to the PR env!", "author": "InigoSJ", "createdAt": "2020-06-10T19:44:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MTc3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MjQ5OQ==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438292499", "bodyText": "Better to return a new copy than mutate self.", "author": "robertwb", "createdAt": "2020-06-10T17:28:55Z", "path": "sdks/python/apache_beam/transforms/combiners.py", "diffHunk": "@@ -66,8 +66,21 @@ class Mean(object):\n   \"\"\"Combiners for computing arithmetic means of elements.\"\"\"\n   class Globally(ptransform.PTransform):\n     \"\"\"combiners.Mean.Globally computes the arithmetic mean of the elements.\"\"\"\n+    def __init__(self, has_defaults=True, *args, **kwargs):\n+      super(Mean.Globally, self).__init__()\n+      self.has_defaults = has_defaults\n+      self.args = args\n+      self.kwargs = kwargs\n+\n     def expand(self, pcoll):\n-      return pcoll | core.CombineGlobally(MeanCombineFn())\n+      if self.has_defaults:\n+        return pcoll | core.CombineGlobally(MeanCombineFn())\n+      else:\n+        return pcoll | core.CombineGlobally(MeanCombineFn()).without_defaults()\n+\n+    def without_defaults(self):\n+      self.has_defaults = False", "originalCommit": "a68328513ba76a3f9f38afade3c1ab60045940ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODYxOQ==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438368619", "bodyText": "I'm not sure if I understand it correctly, but I made a modification to return\nreturn self | core.CombineGlobally(MeanCombineFn()).without_defaults()\n\nI personally think it's less intuitive, but you know more :D.\nI also tried directly returning without modifying self.has_defaults, but it executes the first sequence of the Reduce fine, but the second returns  an error saying that I need the without_defaults(), since it directly goes to the expand().\nIf you have suggestions, I'm all ears.\nThanks again", "author": "InigoSJ", "createdAt": "2020-06-10T19:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MjQ5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MjAwOQ==", "url": "https://github.com/apache/beam/pull/11943#discussion_r438952009", "bodyText": "Another way could be doing Mean.Globally(without_defaults=True),  but I'd say it's against the standard use of CombineGlobally().without_defaults()", "author": "InigoSJ", "createdAt": "2020-06-11T17:30:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MjQ5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3NTcyMA==", "url": "https://github.com/apache/beam/pull/11943#discussion_r439075720", "bodyText": "what robert means in this case is that rather than mutating and returning self like so:\ndef without_defaults(self):\n  self.has_defaults = False\n  return self\n\nIt would be more useful to return a new instance with the new property. Somewhat like this:\ndef with_defaults(self, has_defaults=True):\n  return Mean.Globally(has_defaults=has_defaults, *self.args, **self.kwargs)\n\nIt's useful to do this because then instance attributes are immutable, and it's easier to manage instances with immutable attributes.", "author": "pabloem", "createdAt": "2020-06-11T21:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MjQ5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwNTgzOA==", "url": "https://github.com/apache/beam/pull/11943#discussion_r439505838", "bodyText": "Thanks for the suggestions.\nI made it look more like the original without_defaults() from CombineGlobally using both:\n\nwith_defaults: actually making the request to compute Mean\nwithout_defaults: pointing to with_defaults", "author": "InigoSJ", "createdAt": "2020-06-12T16:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5MjQ5OQ=="}], "type": "inlineReview"}, {"oid": "591f544070355091b0ac76efc8e76c9c7691d4a8", "url": "https://github.com/apache/beam/commit/591f544070355091b0ac76efc8e76c9c7691d4a8", "message": "Add without_defaults to mean combiner", "committedDate": "2020-06-10T19:40:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3Nzk4Mw==", "url": "https://github.com/apache/beam/pull/11943#discussion_r439077983", "bodyText": "Can you add Pydoc for this? And I don't think we need args and kwargs to be added. Probably take only has_defaults.", "author": "pabloem", "createdAt": "2020-06-11T21:23:33Z", "path": "sdks/python/apache_beam/transforms/combiners.py", "diffHunk": "@@ -66,8 +66,21 @@ class Mean(object):\n   \"\"\"Combiners for computing arithmetic means of elements.\"\"\"\n   class Globally(ptransform.PTransform):\n     \"\"\"combiners.Mean.Globally computes the arithmetic mean of the elements.\"\"\"\n+    def __init__(self, has_defaults=True, *args, **kwargs):", "originalCommit": "591f544070355091b0ac76efc8e76c9c7691d4a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwNzUwOA==", "url": "https://github.com/apache/beam/pull/11943#discussion_r439507508", "bodyText": "I took out the args and kwargs, but didn't add the Pydoc to keep it consistent CombineGlobally (doesn't have it either). Let me know if you want me to add them.\nThanks again", "author": "InigoSJ", "createdAt": "2020-06-12T16:03:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3Nzk4Mw=="}], "type": "inlineReview"}, {"oid": "2f4abbd62ff29bd55953b74645fd399f4c5f6135", "url": "https://github.com/apache/beam/commit/2f4abbd62ff29bd55953b74645fd399f4c5f6135", "message": "Add without_defaults to mean combiner", "committedDate": "2020-06-12T15:58:14Z", "type": "commit"}, {"oid": "73f91f55186fda96b852b09e6fcf3a5d69b2a941", "url": "https://github.com/apache/beam/commit/73f91f55186fda96b852b09e6fcf3a5d69b2a941", "message": "Add without_defaults to mean combiner", "committedDate": "2020-06-15T20:32:13Z", "type": "commit"}, {"oid": "ed1453ed0fa974c3f12842ce006d3bd424c279b0", "url": "https://github.com/apache/beam/commit/ed1453ed0fa974c3f12842ce006d3bd424c279b0", "message": "Add without_defaults to mean combiner", "committedDate": "2020-06-17T17:32:09Z", "type": "commit"}]}