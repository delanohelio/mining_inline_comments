{"pr_number": 12800, "pr_title": "[BEAM-10603] Add the ib.recordings API", "pr_createdAt": "2020-09-09T19:19:50Z", "pr_url": "https://github.com/apache/beam/pull/12800", "timeline": [{"oid": "3dc8f5931cea1de049b3d52cb5460bbece8a24c5", "url": "https://github.com/apache/beam/commit/3dc8f5931cea1de049b3d52cb5460bbece8a24c5", "message": "Add ib.recordings API\n\nChange-Id: I201d4c02abd3ada2e29576822821508fcdd214e6", "committedDate": "2020-09-15T17:35:05Z", "type": "forcePushed"}, {"oid": "f854bf935e913ad42a2bbdaec8210e6e579dc974", "url": "https://github.com/apache/beam/commit/f854bf935e913ad42a2bbdaec8210e6e579dc974", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30", "committedDate": "2020-09-21T17:23:17Z", "type": "forcePushed"}, {"oid": "8a85aeb88ed2a05cc4f2b41ff176ca4726cc98b3", "url": "https://github.com/apache/beam/commit/8a85aeb88ed2a05cc4f2b41ff176ca4726cc98b3", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30", "committedDate": "2020-09-21T18:48:56Z", "type": "forcePushed"}, {"oid": "1518506c655531eb10be97dfac50775ea0229d3c", "url": "https://github.com/apache/beam/commit/1518506c655531eb10be97dfac50775ea0229d3c", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30", "committedDate": "2020-09-21T21:01:12Z", "type": "forcePushed"}, {"oid": "a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "url": "https://github.com/apache/beam/commit/a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30", "committedDate": "2020-09-22T18:40:38Z", "type": "commit"}, {"oid": "a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "url": "https://github.com/apache/beam/commit/a3470bdde79e1f34dfba5c56e99a3711bf7b2775", "message": "Add the ib.recordings API\n\nChange-Id: I9c5ab90999acb5fc1a44113ff0e2f31fde2c4e30", "committedDate": "2020-09-22T18:40:38Z", "type": "forcePushed"}, {"oid": "51244427855d5c9436784b1e82bce97310f752f8", "url": "https://github.com/apache/beam/commit/51244427855d5c9436784b1e82bce97310f752f8", "message": "Fix macos IB recordings test\n\nChange-Id: I560904c8d0324250212a800e1419adebc53279ce", "committedDate": "2020-09-22T20:48:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2MzU0OQ==", "url": "https://github.com/apache/beam/pull/12800#discussion_r493063549", "bodyText": "it should also be removed, right? (del self._recording_managers[id] or someting like that?)", "author": "pabloem", "createdAt": "2020-09-22T22:14:09Z", "path": "sdks/python/apache_beam/runners/interactive/interactive_environment.py", "diffHunk": "@@ -348,6 +352,48 @@ def evict_cache_manager(self, pipeline=None):\n       return self._cache_managers.pop(str(id(pipeline)), None)\n     self._cache_managers.clear()\n \n+  def set_recording_manager(self, recording_manager, pipeline):\n+    \"\"\"Sets the recording manager for the given pipeline.\"\"\"\n+    if self.get_recording_manager(pipeline) is recording_manager:\n+      # NOOP if setting to the same recording_manager.\n+      return\n+    self._recording_managers[str(id(pipeline))] = recording_manager\n+\n+  def get_recording_manager(self, pipeline, create_if_absent=False):\n+    \"\"\"Gets the recording manager for the given pipeline.\"\"\"\n+    recording_manager = self._recording_managers.get(str(id(pipeline)), None)\n+    if not recording_manager and create_if_absent:\n+      recording_manager = RecordingManager(pipeline)\n+      self._recording_managers[str(id(pipeline))] = recording_manager\n+    return recording_manager\n+\n+  def evict_recording_manager(self, pipeline):\n+    \"\"\"Evicts the recording manager for the given pipeline.\n+\n+    This stops the background caching job and clears the cache.\n+    Noop if the pipeline is absent from the environment. If no\n+    pipeline is specified, evicts for all pipelines.\n+    \"\"\"\n+    if not pipeline:\n+      for rm in self._recording_managers.values():\n+        rm.cancel()\n+        rm.clear()\n+      self._recording_managers = {}\n+      return\n+\n+    recording_manager = self.get_recording_manager(pipeline)", "originalCommit": "51244427855d5c9436784b1e82bce97310f752f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3Mzk2MQ==", "url": "https://github.com/apache/beam/pull/12800#discussion_r493073961", "bodyText": "Added a del", "author": "rohdesamuel", "createdAt": "2020-09-22T22:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2MzU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NjQyOA==", "url": "https://github.com/apache/beam/pull/12800#discussion_r493066428", "bodyText": "this function looks to be somewhat inefficient. WDYT? No need to change it if you don't think it will be heavily used / not too many elements will be watched (iterated by the function), but WDYT?", "author": "pabloem", "createdAt": "2020-09-22T22:21:43Z", "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -199,6 +199,93 @@ def display_timezone(self, value):\n     self._display_timezone = value\n \n \n+class Recordings():\n+  \"\"\"An introspection interface for recordings for pipelines.\n+\n+  When a user materializes a PCollection onto disk (eg. ib.show) for a streaming\n+  pipeline, a background recording job is started. This job pulls data from all\n+  defined unbounded sources for that PCollection's pipeline. The following\n+  methods allow for introspection into that background recording job.\n+  \"\"\"\n+  def describe(self, pipeline=None):\n+    # type: (Optional[beam.Pipeline]) -> dict[str, Any]\n+\n+    \"\"\"Returns a description of all the recordings for the given pipeline.\n+\n+    If no pipeline is given then this returns a dictionary of descriptions for\n+    all pipelines.\n+    \"\"\"\n+\n+    watching = ie.current_env().watching()\n+    description = ie.current_env().describe_all_recordings()\n+\n+    # In the case that the user has multiple pipelines, this correlates the\n+    # pipeline object to the variable name.", "originalCommit": "51244427855d5c9436784b1e82bce97310f752f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3OTc5NQ==", "url": "https://github.com/apache/beam/pull/12800#discussion_r493079795", "bodyText": "This shouldn't be heavily used, but yeah it's pretty inefficient. I moved this into the InteractiveEnvironment when constructing a RecordingManager so we only pay the price once per pipeline.", "author": "rohdesamuel", "createdAt": "2020-09-22T23:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NjQyOA=="}], "type": "inlineReview"}, {"oid": "09db072c9da2471dc7a61f7a8701da4f0001838e", "url": "https://github.com/apache/beam/commit/09db072c9da2471dc7a61f7a8701da4f0001838e", "message": "Delete RM reference from environment when evicted\n\nChange-Id: Id80ae8bf42c6fb62e3e78a96bfa5fda3e90e6dd8", "committedDate": "2020-09-22T22:42:00Z", "type": "commit"}, {"oid": "f5bf0647742e6697b2c4b691cd8e55936cb37c72", "url": "https://github.com/apache/beam/commit/f5bf0647742e6697b2c4b691cd8e55936cb37c72", "message": "Move pipeline_var into RM constructor\n\nChange-Id: I9d919dbd81649f7fc4c54b315272ed6115416719", "committedDate": "2020-09-22T23:03:14Z", "type": "commit"}, {"oid": "f5bf0647742e6697b2c4b691cd8e55936cb37c72", "url": "https://github.com/apache/beam/commit/f5bf0647742e6697b2c4b691cd8e55936cb37c72", "message": "Move pipeline_var into RM constructor\n\nChange-Id: I9d919dbd81649f7fc4c54b315272ed6115416719", "committedDate": "2020-09-22T23:03:14Z", "type": "forcePushed"}]}