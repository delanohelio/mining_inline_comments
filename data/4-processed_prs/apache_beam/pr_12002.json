{"pr_number": 12002, "pr_title": "[BEAM-9872] Moved Spark validates tests to shared file", "pr_createdAt": "2020-06-12T17:49:30Z", "pr_url": "https://github.com/apache/beam/pull/12002", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzMTY1OA==", "url": "https://github.com/apache/beam/pull/12002#discussion_r439631658", "bodyText": "You'll need to change environment_type and environment_config according to the value of workerType.", "author": "ibzib", "createdAt": "2020-06-12T20:37:34Z", "path": "sdks/python/test-suites/portable/common.gradle", "diffHunk": "@@ -99,34 +101,110 @@ task flinkTriggerTranscript() {\n   }\n }\n \n+\n+task createProcessWorker {\n+  dependsOn ':sdks:python:container:build'\n+  dependsOn 'setupVirtualenv'\n+  def sdkWorkerFile = file(\"${buildDir}/sdk_worker.sh\")\n+  def osType = 'linux'\n+  if (Os.isFamily(Os.FAMILY_MAC))\n+    osType = 'darwin'\n+  def workerScript = \"${project(\":sdks:python:container:\").buildDir.absolutePath}/target/launcher/${osType}_amd64/boot\"\n+  def sdkWorkerFileCode = \"sh -c \\\"pip=`which pip` . ${envdir}/bin/activate && ${workerScript} \\$* \\\"\"\n+  outputs.file sdkWorkerFile\n+  doLast {\n+    sdkWorkerFile.write sdkWorkerFileCode\n+    exec {\n+      commandLine('sh', '-c', \". ${envdir}/bin/activate && cd ${pythonRootDir} && pip install -e .[test]\")\n+    }\n+    exec {\n+      commandLine('chmod', '+x', sdkWorkerFile)\n+    }\n+  }\n+}\n+\n+def sparkCompatibilityMatrix = {\n+  def config = it ? it as CompatibilityMatrixConfig : new CompatibilityMatrixConfig()\n+  def workerType = config.workerType.name()\n+  def streaming = config.streaming\n+  // def environment_config = config.workerType == CompatibilityMatrixConfig.SDK_WORKER_TYPE.PROCESS ? \"--environment_config='{\\\"command\\\": \\\"${buildDir.absolutePath}/sdk_worker.sh\\\"}'\" : \"\"\n+  def name = \"sparkCompatibilityMatrix${streaming ? 'Streaming' : 'Batch'}${config.preOptimize ? 'PreOptimize' : ''}${workerType}\"\n+  def extra_experiments = []\n+  if (config.preOptimize)\n+    extra_experiments.add('pre_optimize=all')\n+  tasks.create(name: name) {\n+    dependsOn 'createProcessWorker'\n+    dependsOn 'setupVirtualenv'\n+    dependsOn ':runners:spark:job-server:shadowJar'\n+    doLast {\n+      def environment_config = \"'{\\\"command\\\": \\\"${buildDir.absolutePath}/sdk_worker.sh\\\"}'\"\n+      def argMap = [\n+              \"environment_type\"    : \"PROCESS\",", "originalCommit": "a81f3daac9a6eb4371eeac8f75ea6f3c36af9cb1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyODIxMw==", "url": "https://github.com/apache/beam/pull/12002#discussion_r440328213", "bodyText": "This isn't used anywhere.", "author": "ibzib", "createdAt": "2020-06-15T17:19:02Z", "path": "sdks/python/test-suites/portable/common.gradle", "diffHunk": "@@ -99,34 +101,108 @@ task flinkTriggerTranscript() {\n   }\n }\n \n+\n+task createProcessWorker {\n+  dependsOn ':sdks:python:container:build'\n+  dependsOn 'setupVirtualenv'\n+  def sdkWorkerFile = file(\"${buildDir}/sdk_worker.sh\")\n+  def osType = 'linux'\n+  if (Os.isFamily(Os.FAMILY_MAC))\n+    osType = 'darwin'\n+  def workerScript = \"${project(\":sdks:python:container:\").buildDir.absolutePath}/target/launcher/${osType}_amd64/boot\"\n+  def sdkWorkerFileCode = \"sh -c \\\"pip=`which pip` . ${envdir}/bin/activate && ${workerScript} \\$* \\\"\"\n+  outputs.file sdkWorkerFile\n+  doLast {\n+    sdkWorkerFile.write sdkWorkerFileCode\n+    exec {\n+      commandLine('sh', '-c', \". ${envdir}/bin/activate && cd ${pythonRootDir} && pip install -e .[test]\")\n+    }\n+    exec {\n+      commandLine('chmod', '+x', sdkWorkerFile)\n+    }\n+  }\n+}\n+\n+def sparkCompatibilityMatrix = {\n+  def config = it ? it as CompatibilityMatrixConfig : new CompatibilityMatrixConfig()\n+  def workerType = config.workerType.name()\n+  def streaming = config.streaming\n+  def environment_config = config.workerType == CompatibilityMatrixConfig.SDK_WORKER_TYPE.PROCESS ? \"--environment_config='{\\\"command\\\": \\\"${buildDir.absolutePath}/sdk_worker.sh\\\"}'\" : \"\"\n+  def name = \"sparkCompatibilityMatrix${streaming ? 'Streaming' : 'Batch'}${config.preOptimize ? 'PreOptimize' : ''}${workerType}\"\n+  def extra_experiments = []", "originalCommit": "575fc087ebd9bfac9adad3af7567ea0d8f8a7182", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5978837d589d661c02af299095058db9444e3fa3", "url": "https://github.com/apache/beam/commit/5978837d589d661c02af299095058db9444e3fa3", "message": "[BEAM-9872] Moved Spark validates tests to shared file", "committedDate": "2020-06-23T20:33:12Z", "type": "commit"}, {"oid": "841b32cc82bca110593f70eff79a9267d5938e89", "url": "https://github.com/apache/beam/commit/841b32cc82bca110593f70eff79a9267d5938e89", "message": "combine python versions in wrapper task", "committedDate": "2020-06-23T20:34:22Z", "type": "commit"}, {"oid": "6447ab8f04d01f0edf60b90e279906bd4a79f213", "url": "https://github.com/apache/beam/commit/6447ab8f04d01f0edf60b90e279906bd4a79f213", "message": "spark test only python 3", "committedDate": "2020-06-23T20:35:08Z", "type": "commit"}, {"oid": "277d9666e78cba3747a65ab12c43204e7616c4bb", "url": "https://github.com/apache/beam/commit/277d9666e78cba3747a65ab12c43204e7616c4bb", "message": "changed env type", "committedDate": "2020-06-23T20:35:15Z", "type": "commit"}, {"oid": "d8d98ad47583a901f61b7788c845b06cc1aa66b8", "url": "https://github.com/apache/beam/commit/d8d98ad47583a901f61b7788c845b06cc1aa66b8", "message": "changed env config", "committedDate": "2020-06-23T20:35:15Z", "type": "commit"}, {"oid": "074615b0f764b6065f41f797ccf39ef89b308697", "url": "https://github.com/apache/beam/commit/074615b0f764b6065f41f797ccf39ef89b308697", "message": "changed environment_config", "committedDate": "2020-06-23T20:35:15Z", "type": "commit"}, {"oid": "85d2e8f1f5fc99dfabcf51b7ce7d84789ecb737e", "url": "https://github.com/apache/beam/commit/85d2e8f1f5fc99dfabcf51b7ce7d84789ecb737e", "message": "wrapper task in beam/build", "committedDate": "2020-06-23T20:35:15Z", "type": "commit"}, {"oid": "6bbb3a80477f81674fb74205ee82e31d1f785af5", "url": "https://github.com/apache/beam/commit/6bbb3a80477f81674fb74205ee82e31d1f785af5", "message": "update groovy file to run wrapper", "committedDate": "2020-06-23T20:35:15Z", "type": "commit"}, {"oid": "6bbb3a80477f81674fb74205ee82e31d1f785af5", "url": "https://github.com/apache/beam/commit/6bbb3a80477f81674fb74205ee82e31d1f785af5", "message": "update groovy file to run wrapper", "committedDate": "2020-06-23T20:35:15Z", "type": "forcePushed"}]}