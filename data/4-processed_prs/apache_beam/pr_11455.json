{"pr_number": 11455, "pr_title": "[BEAM-9703] Fix user distribution metric test by not validating namespace.", "pr_createdAt": "2020-04-17T22:06:30Z", "pr_url": "https://github.com/apache/beam/pull/11455", "timeline": [{"oid": "1e7d2ff625ac5b6c64ee8c6a93944621324dfc1c", "url": "https://github.com/apache/beam/commit/1e7d2ff625ac5b6c64ee8c6a93944621324dfc1c", "message": "Fix user distribution metric test by using less restricting value.", "committedDate": "2020-04-18T00:45:20Z", "type": "commit"}, {"oid": "1bae13b05e0f8c808c5479e872e227383d50abb9", "url": "https://github.com/apache/beam/commit/1bae13b05e0f8c808c5479e872e227383d50abb9", "message": "Apply yapf fix.", "committedDate": "2020-04-18T02:38:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU4NjA0NQ==", "url": "https://github.com/apache/beam/pull/11455#discussion_r410586045", "bodyText": "why would min value be >= 0 but the other values be exact?", "author": "lukecwik", "createdAt": "2020-04-18T03:21:46Z", "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -172,10 +172,13 @@ def process(self, element):\n     # Verify user distribution counter.\n     metric_results = res.metrics().query()\n     matcher = MetricResultMatcher(\n-        namespace='apache_beam.metrics.metric_test.SomeDoFn',\n+        step='ApplyPardo',\n+        namespace=hc.contains_string('SomeDoFn'),\n         name='element_dist',\n         committed=DistributionMatcher(\n-            sum_value=10, count_value=4, min_value=1, max_value=4))\n+            sum_value=10, count_value=4,", "originalCommit": "1e7d2ff625ac5b6c64ee8c6a93944621324dfc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMzUzMw==", "url": "https://github.com/apache/beam/pull/11455#discussion_r410733533", "bodyText": "b/c after repeating it multiple times, streaming side gives consistent outcome on these exact numbers.\nAfter another thought though, given how much uncertainties there are on streaming side, it is really not necessary to put exact number here. And if we do really want to check exact number, there is alternative way to add that separately.\nUpdated by making all other threes to be 'greater_than(0)'.  PTAL.", "author": "HuangLED", "createdAt": "2020-04-18T18:32:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU4NjA0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNTYwOA==", "url": "https://github.com/apache/beam/pull/11455#discussion_r411505608", "bodyText": "Why is min different then the others?\nI would expect that the same reason this needs to be >= 0 would be the same reason as the others.", "author": "lukecwik", "createdAt": "2020-04-20T16:10:48Z", "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -172,10 +172,14 @@ def process(self, element):\n     # Verify user distribution counter.\n     metric_results = res.metrics().query()\n     matcher = MetricResultMatcher(\n-        namespace='apache_beam.metrics.metric_test.SomeDoFn',\n+        step='ApplyPardo',\n+        namespace=hc.contains_string('SomeDoFn'),\n         name='element_dist',\n         committed=DistributionMatcher(\n-            sum_value=10, count_value=4, min_value=1, max_value=4))\n+            sum_value=hc.greater_than(0),\n+            count_value=hc.greater_than(0),\n+            min_value=hc.greater_than_or_equal_to(0),", "originalCommit": "ec22229d1d1355716aad02710d51b3f7e581e5b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNTE4NQ==", "url": "https://github.com/apache/beam/pull/11455#discussion_r411525185", "bodyText": "Fair enough.\nMy justification was that as long as there is one single update picked up, then other values should be something non-zero. (e.g. count would be at least one).\nMaybe I still underestimated how much uncertainties there is.\nUpdated.  Now they are all >=0.", "author": "HuangLED", "createdAt": "2020-04-20T16:37:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNTYwOA=="}], "type": "inlineReview"}, {"oid": "a4e317aadc729fb8be8907bb827e3eaf866e5c1a", "url": "https://github.com/apache/beam/commit/a4e317aadc729fb8be8907bb827e3eaf866e5c1a", "message": "Replace all explicit validation.", "committedDate": "2020-04-20T16:29:44Z", "type": "commit"}]}