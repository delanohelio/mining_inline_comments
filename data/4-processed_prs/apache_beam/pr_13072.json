{"pr_number": 13072, "pr_title": "[BEAM-8251] Add worker_region and worker_zone options", "pr_createdAt": "2020-10-11T08:59:03Z", "pr_url": "https://github.com/apache/beam/pull/13072", "timeline": [{"oid": "f11d000c1b0ecd70263c71c19fc760ed5539cb2f", "url": "https://github.com/apache/beam/commit/f11d000c1b0ecd70263c71c19fc760ed5539cb2f", "message": "[BEAM-8251] Add worker_region and worker_zone options", "committedDate": "2020-10-12T04:34:47Z", "type": "forcePushed"}, {"oid": "6173a9eedfc71c3cab5d2b721c08aa3cdb7e1f6b", "url": "https://github.com/apache/beam/commit/6173a9eedfc71c3cab5d2b721c08aa3cdb7e1f6b", "message": "[BEAM-8251] Add worker_region and worker_zone options", "committedDate": "2020-10-12T05:10:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDQ5MA==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503424490", "bodyText": "This PR shouldn't require any changes to dependencies.", "author": "ibzib", "createdAt": "2020-10-12T17:03:10Z", "path": "sdks/go/gogradle.lock", "diffHunk": "@@ -5,7 +5,7 @@ dependencies:\n   build:\n   - vcs: \"git\"\n     name: \"cloud.google.com/go\"\n-    commit: \"4f6c921ec566a33844f4e7879b31cd8575a6982d\"\n+    commit: \"03869a08dc16b35ad4968e92d34c5a2a2961b205\"", "originalCommit": "6173a9eedfc71c3cab5d2b721c08aa3cdb7e1f6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNTc1MQ==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503435751", "bodyText": "The existing version of google.golang.org/api dependency doesn't have fields worker_region and worker_zone. The change to google.golang.org/api version lead to other dependency changes.", "author": "milantracy", "createdAt": "2020-10-12T17:27:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDQ5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzOTUyNw==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503439527", "bodyText": "The existing version of google.golang.org/api dependency doesn't have fields worker_region and worker_zone.\n\nI see. I was not expecting that because worker_region and worker_zone were added a long time ago. The old Google API library is from Feb 7 2018.\nAnyway, we should split the dependency changes and feature implementation into separate commits.", "author": "ibzib", "createdAt": "2020-10-12T17:35:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDQ5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1MjAyNg==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503452026", "bodyText": "It's a pain in the butt to update/add new dependencies to the Go SDK, so it hasn't been kept up. This will change after we're on Go Modules for dependency versioning, which will happen after Schemas are finished implementation in the SDK. (I'm working on it). That would also allow users to use the same deps as the project uses for testing. Right now, this list is functionally for Jenkin's Use Only.\nWhile your proposal to split the changes is generally a good policy, I disagree that it's necessary to split the changes in this instance. There's not nearly as much surface area vs the Python and Java SDKs, and there are no real runners implemented in Go. If the PostCommit test passes, there's little else we do that would detect issues with GRPC or similar.\nAlso, internal testing at Google is likely using much more up to date versions of all these packages so this just brings things closer to that.", "author": "lostluck", "createdAt": "2020-10-12T18:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDQ5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4OTg3Mw==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503489873", "bodyText": "While your proposal to split the changes is generally a good policy, I disagree that it's necessary to split the changes in this instance.\n\nNot necessary, just a matter of personal preference (they can just be separate commits, it's fine if they're merged as part of the same PR).", "author": "ibzib", "createdAt": "2020-10-12T19:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDQ5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MDMyMw==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503570323", "bodyText": "thanks both for the elaboration.\ni will merge changes to the dependencies in one PR since it only impacts jenkins", "author": "milantracy", "createdAt": "2020-10-12T22:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNDQ5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNTM2MQ==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503425361", "bodyText": "Add tests for this function.", "author": "ibzib", "createdAt": "2020-10-12T17:04:59Z", "path": "sdks/go/pkg/beam/runners/dataflow/dataflowlib/job.go", "diffHunk": "@@ -262,3 +272,36 @@ func printOptions(opts *JobOptions, images []string) []*displayData {\n \t}\n \treturn ret\n }\n+\n+func validateWorkerSettings(opts *JobOptions) error {", "originalCommit": "6173a9eedfc71c3cab5d2b721c08aa3cdb7e1f6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MDQwMw==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503570403", "bodyText": "added job_test.go", "author": "milantracy", "createdAt": "2020-10-12T22:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNTM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNTY3OA==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503425678", "bodyText": "Print a warning that zone is deprecated and worker_zone should be used instead.", "author": "ibzib", "createdAt": "2020-10-12T17:05:34Z", "path": "sdks/go/pkg/beam/runners/dataflow/dataflowlib/job.go", "diffHunk": "@@ -262,3 +272,36 @@ func printOptions(opts *JobOptions, images []string) []*displayData {\n \t}\n \treturn ret\n }\n+\n+func validateWorkerSettings(opts *JobOptions) error {\n+\tif opts.Zone != \"\" && opts.WorkerRegion != \"\" {\n+\t\treturn errors.New(\"cannot use option zone with workerRegion; prefer either workerZone or workerRegion\")\n+\t}\n+\tif opts.Zone != \"\" && opts.WorkerZone != \"\" {\n+\t\treturn errors.New(\"cannot use option zone with workerZone; prefer workerZone\")\n+\t}\n+\tif opts.WorkerZone != \"\" && opts.WorkerRegion != \"\" {\n+\t\treturn errors.New(\"workerRegion and workerZone options are mutually exclusive\")\n+\t}\n+\n+\thasExperimentWorkerRegion := false\n+\tfor _, experiment := range opts.Experiments {\n+\t\tif strings.HasPrefix(experiment, \"worker_region\") {\n+\t\t\thasExperimentWorkerRegion = true\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\n+\tif hasExperimentWorkerRegion && opts.WorkerRegion != \"\" {\n+\t\treturn errors.New(\"experiment worker_region and option workerRegion are mutually exclusive\")\n+\t}\n+\tif hasExperimentWorkerRegion && opts.WorkerZone != \"\" {\n+\t\treturn errors.New(\"experiment worker_region and option workerZone are mutually exclusive\")\n+\t}\n+\n+\tif opts.Zone != \"\" {", "originalCommit": "6173a9eedfc71c3cab5d2b721c08aa3cdb7e1f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyNjM2NQ==", "url": "https://github.com/apache/beam/pull/13072#discussion_r503426365", "bodyText": "There also needs to be a check for hasExperimentWorkerRegion && opts.Zone != \"\".", "author": "ibzib", "createdAt": "2020-10-12T17:07:01Z", "path": "sdks/go/pkg/beam/runners/dataflow/dataflowlib/job.go", "diffHunk": "@@ -262,3 +272,36 @@ func printOptions(opts *JobOptions, images []string) []*displayData {\n \t}\n \treturn ret\n }\n+\n+func validateWorkerSettings(opts *JobOptions) error {\n+\tif opts.Zone != \"\" && opts.WorkerRegion != \"\" {\n+\t\treturn errors.New(\"cannot use option zone with workerRegion; prefer either workerZone or workerRegion\")\n+\t}\n+\tif opts.Zone != \"\" && opts.WorkerZone != \"\" {\n+\t\treturn errors.New(\"cannot use option zone with workerZone; prefer workerZone\")\n+\t}\n+\tif opts.WorkerZone != \"\" && opts.WorkerRegion != \"\" {\n+\t\treturn errors.New(\"workerRegion and workerZone options are mutually exclusive\")\n+\t}\n+\n+\thasExperimentWorkerRegion := false\n+\tfor _, experiment := range opts.Experiments {\n+\t\tif strings.HasPrefix(experiment, \"worker_region\") {\n+\t\t\thasExperimentWorkerRegion = true\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\n+\tif hasExperimentWorkerRegion && opts.WorkerRegion != \"\" {", "originalCommit": "6173a9eedfc71c3cab5d2b721c08aa3cdb7e1f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "07b2efbfde4b2a3189f9b206be87b3cccb92fd8a", "url": "https://github.com/apache/beam/commit/07b2efbfde4b2a3189f9b206be87b3cccb92fd8a", "message": "[BEAM-8251] Add worker_region and worker_zone options", "committedDate": "2020-10-12T22:42:57Z", "type": "forcePushed"}, {"oid": "8376eb28d36e3510c66b85ac72236e058fcdef9e", "url": "https://github.com/apache/beam/commit/8376eb28d36e3510c66b85ac72236e058fcdef9e", "message": "[BEAM-8251] Add worker_region and worker_zone options", "committedDate": "2020-10-12T22:52:02Z", "type": "commit"}, {"oid": "8376eb28d36e3510c66b85ac72236e058fcdef9e", "url": "https://github.com/apache/beam/commit/8376eb28d36e3510c66b85ac72236e058fcdef9e", "message": "[BEAM-8251] Add worker_region and worker_zone options", "committedDate": "2020-10-12T22:52:02Z", "type": "forcePushed"}]}