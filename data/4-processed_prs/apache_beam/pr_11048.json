{"pr_number": 11048, "pr_title": "[BEAM-9433] Create expansion service artifact for common Java IOs.", "pr_createdAt": "2020-03-04T23:00:21Z", "pr_url": "https://github.com/apache/beam/pull/11048", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2NTgyNA==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388065824", "bodyText": "Prob. change to a log statement if you wish to keep this.", "author": "chamikaramj", "createdAt": "2020-03-05T03:52:15Z", "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "diffHunk": "@@ -404,7 +408,11 @@ public void close() throws Exception {\n   public static void main(String[] args) throws Exception {\n     int port = Integer.parseInt(args[0]);\n     System.out.println(\"Starting expansion service at localhost:\" + port);\n-    Server server = ServerBuilder.forPort(port).addService(new ExpansionService()).build();\n+    ExpansionService service = new ExpansionService();\n+    for (Map.Entry<String, TransformProvider> entry : service.registeredTransforms.entrySet()) {\n+      System.out.println(\"\\t\" + entry.getKey() + \": \" + entry.getValue());", "originalCommit": "4b0766e6cf64499cf62a43b5b4a2c8e2115e673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODkxMg==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388758912", "bodyText": "I used stdout as this is the main entry point (similar to the statement above).", "author": "robertwb", "createdAt": "2020-03-06T08:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2NTgyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2Nzg5OA==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388067898", "bodyText": "Probably add a comment here or in  BeamJarExpansionService to clarify how this works.\nIIUC,\n(1) For Beam version 2.x.y, we'll download the released kafka Jar for version 2.x.y\n(2) For Beam HEAD at version 2.(x+1).y.dev, we'll download the Beam Kafka Java jar for version 2.(x+1).y-SNAHSHOT\n(3) We'll always cache downloaded jars (in a sub-directory of the current directory ?). Please make sure that caching work for both released and non-released Beam.", "author": "chamikaramj", "createdAt": "2020-03-05T04:02:55Z", "path": "sdks/python/apache_beam/io/external/kafka.py", "diffHunk": "@@ -57,6 +58,10 @@\n     ])\n \n \n+def default_io_expansion_service():\n+  return BeamJarExpansionService('sdks:java:io:expansion-service:shadowJar')", "originalCommit": "4b0766e6cf64499cf62a43b5b4a2c8e2115e673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODQ2NQ==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388758465", "bodyText": "This is documented in BeamJarExpansionService, though I've expanded it. We don't download SNAPSHOTs (yet)?", "author": "robertwb", "createdAt": "2020-03-06T07:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2Nzg5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4MjA4OA==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388382088", "bodyText": "Prob. we don't need this since we default to default_io_expansion_service() below ?", "author": "chamikaramj", "createdAt": "2020-03-05T15:48:59Z", "path": "sdks/python/apache_beam/io/external/kafka.py", "diffHunk": "@@ -166,6 +171,8 @@ def __init__(\n                                serialization.ByteArraySerializer'.\n     :param expansion_service: The address (host:port) of the ExpansionService.\n     \"\"\"\n+    if expansion_service is None:", "originalCommit": "4b0766e6cf64499cf62a43b5b4a2c8e2115e673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1MzY0Mw==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388753643", "bodyText": "Done.", "author": "robertwb", "createdAt": "2020-03-06T07:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4MjA4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4Mjg4NQ==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388382885", "bodyText": "Can we add some unit tests for BeamJarExpansionService and JavaJarExpansionService ?", "author": "chamikaramj", "createdAt": "2020-03-05T15:50:03Z", "path": "sdks/python/apache_beam/io/external/kafka.py", "diffHunk": "@@ -57,6 +58,10 @@\n     ])\n \n \n+def default_io_expansion_service():\n+  return BeamJarExpansionService('sdks:java:io:expansion-service:shadowJar')", "originalCommit": "4b0766e6cf64499cf62a43b5b4a2c8e2115e673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MjczNA==", "url": "https://github.com/apache/beam/pull/11048#discussion_r389052734", "bodyText": "Sure, added some unit tests. This is also tested end-to-end in the cross language tests.", "author": "robertwb", "createdAt": "2020-03-06T17:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4Mjg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NDQ4MA==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388384480", "bodyText": "Seems like this is used here ?\n\n  \n    \n      beam/sdks/python/apache_beam/utils/subprocess_server.py\n    \n    \n         Line 198\n      in\n      b91560c\n    \n    \n    \n    \n\n        \n          \n           cached_jar = os.path.join(cls.JAR_CACHE, os.path.basename(url))", "author": "chamikaramj", "createdAt": "2020-03-05T15:52:20Z", "path": "sdks/python/apache_beam/runners/portability/job_server.py", "diffHunk": "@@ -125,10 +124,6 @@ def local_temp_dir(self, **kwargs):\n \n \n class JavaJarJobServer(SubprocessJobServer):\n-\n-  MAVEN_REPOSITORY = 'https://repo.maven.apache.org/maven2/org/apache/beam'\n-  JAR_CACHE = os.path.expanduser(\"~/.apache_beam/cache\")", "originalCommit": "4b0766e6cf64499cf62a43b5b4a2c8e2115e673b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1NjE4OQ==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388756189", "bodyText": "These are vestigial. That cls is never JavaJarJobServer.", "author": "robertwb", "createdAt": "2020-03-06T07:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NDQ4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NTE4NA==", "url": "https://github.com/apache/beam/pull/11048#discussion_r388385184", "bodyText": "Please add a comment about this logging fix.", "author": "chamikaramj", "createdAt": "2020-03-05T15:53:23Z", "path": "sdks/python/apache_beam/utils/subprocess_server.py", "diffHunk": "@@ -82,9 +82,18 @@ def start(self):\n         port, = pick_port(None)\n         cmd = [arg.replace('{{PORT}}', str(port)) for arg in self._cmd]\n       endpoint = 'localhost:%s' % port\n-      _LOGGER.warning(\"Starting service with %s\", str(cmd).replace(\"',\", \"'\"))\n+      _LOGGER.info(\"Starting service with %s\", str(cmd).replace(\"',\", \"'\"))\n       try:\n-        self._process = subprocess.Popen(cmd)\n+        self._process = subprocess.Popen(\n+            cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n+\n+        def log_stdout():", "originalCommit": "4b0766e6cf64499cf62a43b5b4a2c8e2115e673b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cf3ce65ac21603f961d95d96e82ec49590f948d7", "url": "https://github.com/apache/beam/commit/cf3ce65ac21603f961d95d96e82ec49590f948d7", "message": "[BEAM-9433] Create expansion service artifact for common Java IOs.", "committedDate": "2020-03-13T18:58:18Z", "type": "commit"}, {"oid": "cf3ce65ac21603f961d95d96e82ec49590f948d7", "url": "https://github.com/apache/beam/commit/cf3ce65ac21603f961d95d96e82ec49590f948d7", "message": "[BEAM-9433] Create expansion service artifact for common Java IOs.", "committedDate": "2020-03-13T18:58:18Z", "type": "forcePushed"}, {"oid": "311b90d12d56776275b164985aa921e427e27033", "url": "https://github.com/apache/beam/commit/311b90d12d56776275b164985aa921e427e27033", "message": "Log in a daemon thread.", "committedDate": "2020-03-14T00:12:23Z", "type": "commit"}]}