{"pr_number": 11503, "pr_title": "[BEAM-9692] Make GroupByKey into a primitive", "pr_createdAt": "2020-04-22T23:12:26Z", "pr_url": "https://github.com/apache/beam/pull/11503", "timeline": [{"oid": "d09a4b7344e8b645226a7c476f2c988320040c9b", "url": "https://github.com/apache/beam/commit/d09a4b7344e8b645226a7c476f2c988320040c9b", "message": "Move apply_GroupByKey to PTransformOverride\n\nChange-Id: Ifda22590de260281d4073d1d19d2b6074bd569ca", "committedDate": "2020-04-23T22:03:09Z", "type": "forcePushed"}, {"oid": "a114b7f657cf660a54fef08c8b4966913b82f0c5", "url": "https://github.com/apache/beam/commit/a114b7f657cf660a54fef08c8b4966913b82f0c5", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821", "committedDate": "2020-05-01T21:05:06Z", "type": "forcePushed"}, {"oid": "55ddb466345e07d3a4f50f48afb0115eb164edd0", "url": "https://github.com/apache/beam/commit/55ddb466345e07d3a4f50f48afb0115eb164edd0", "message": "cleanup\n\nChange-Id: Ia4f00e24bb45fd48c8c97c4ec4f2cf8e09970821", "committedDate": "2020-05-06T18:33:37Z", "type": "forcePushed"}, {"oid": "01811d0c65d8748b5ffdb9d61853aab38d52b4e5", "url": "https://github.com/apache/beam/commit/01811d0c65d8748b5ffdb9d61853aab38d52b4e5", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-06T18:55:51Z", "type": "forcePushed"}, {"oid": "7efcd570d42873fd83127e7ea961dd8556b1633b", "url": "https://github.com/apache/beam/commit/7efcd570d42873fd83127e7ea961dd8556b1633b", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-06T18:58:47Z", "type": "forcePushed"}, {"oid": "9447ed6d9ee1e26d5830204c2437615efae3714d", "url": "https://github.com/apache/beam/commit/9447ed6d9ee1e26d5830204c2437615efae3714d", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-06T19:02:52Z", "type": "forcePushed"}, {"oid": "7c751cc09edfc53f2af3b8781b9c7c990f68ee78", "url": "https://github.com/apache/beam/commit/7c751cc09edfc53f2af3b8781b9c7c990f68ee78", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-06T19:05:56Z", "type": "forcePushed"}, {"oid": "aa10bb0ba612e130fab8e5179de78a572d4cf5a5", "url": "https://github.com/apache/beam/commit/aa10bb0ba612e130fab8e5179de78a572d4cf5a5", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-06T20:27:17Z", "type": "forcePushed"}, {"oid": "800b63991daa6afd54787dc05aeb66157ddf870f", "url": "https://github.com/apache/beam/commit/800b63991daa6afd54787dc05aeb66157ddf870f", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-06T20:28:58Z", "type": "forcePushed"}, {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074", "url": "https://github.com/apache/beam/commit/3e70f16d1abd92c27eb6f54330a7427429827074", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-11T18:47:12Z", "type": "commit"}, {"oid": "3e70f16d1abd92c27eb6f54330a7427429827074", "url": "https://github.com/apache/beam/commit/3e70f16d1abd92c27eb6f54330a7427429827074", "message": "Make GroupByKey a primitive\n\nMove old implementation to DirectRunner.\n\nChange-Id: I9aaf3c00ed7e9606f10e417f0a504a5fc63ee68b", "committedDate": "2020-05-11T18:47:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzEyOA==", "url": "https://github.com/apache/beam/pull/11503#discussion_r424083128", "bodyText": "Move ReifyWindows, _GroupByKeyOnly, _GroupAlsoByWindow, etc. here as well.", "author": "robertwb", "createdAt": "2020-05-12T23:05:23Z", "path": "sdks/python/apache_beam/runners/direct/direct_runner.py", "diffHunk": "@@ -234,7 +234,89 @@ def get_replacement_transform(self, transform):\n       from apache_beam.runners.direct.test_stream_impl import _ExpandableTestStream\n       return _ExpandableTestStream(transform)\n \n+  class GroupByKeyPTransformOverride(PTransformOverride):\n+    \"\"\"A ``PTransformOverride`` for ``GroupByKey``.\n+\n+    This replaces the Beam implementation as a primitive.\n+    \"\"\"\n+    def matches(self, applied_ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+      if (isinstance(applied_ptransform.transform, GroupByKey) and\n+          not getattr(applied_ptransform.transform, 'override', False)):\n+        self.input_type = applied_ptransform.inputs[0].element_type\n+        return True\n+      return False\n+\n+    def get_replacement_transform(self, ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+\n+      # Subclass from GroupByKey to inherit all the proper methods.\n+      class GroupByKey(GroupByKey):\n+        override = True\n+\n+        def expand(self, pcoll):\n+          # Imported here to avoid circular dependencies.\n+          # pylint: disable=wrong-import-order, wrong-import-position\n+          from apache_beam.coders import typecoders\n+          from apache_beam.typehints import trivial_inference\n+\n+          input_type = pcoll.element_type\n+          if input_type is not None:\n+            # Initialize type-hints used below to enforce type-checking and to\n+            # pass downstream to further PTransforms.\n+            key_type, value_type = trivial_inference.key_value_types(input_type)\n+            # Enforce the input to a GBK has a KV element type.\n+            pcoll.element_type = typehints.typehints.coerce_to_kv_type(\n+                pcoll.element_type)\n+            typecoders.registry.verify_deterministic(\n+                typecoders.registry.get_coder(key_type),\n+                'GroupByKey operation \"%s\"' % self.label)\n+\n+            reify_output_type = typehints.KV[\n+                key_type, typehints.WindowedValue[value_type]]  # type: ignore[misc]\n+            gbk_input_type = (\n+                typehints.\n+                KV[key_type,\n+                   typehints.Iterable[\n+                       typehints.WindowedValue[  # type: ignore[misc]\n+                           value_type]]])\n+            gbk_output_type = typehints.KV[key_type,\n+                                           typehints.Iterable[value_type]]\n+\n+            # pylint: disable=bad-continuation\n+            return (\n+                pcoll\n+                | 'ReifyWindows' >> (\n+                    ParDo(self.ReifyWindows()).with_output_types(\n+                        reify_output_type))\n+                | 'GroupByKey' >> (\n+                    _GroupByKeyOnly().with_input_types(\n+                        reify_output_type).with_output_types(gbk_input_type))\n+                | (\n+                    'GroupByWindow' >>\n+                    _GroupAlsoByWindow(pcoll.windowing).with_input_types(\n+                        gbk_input_type).with_output_types(gbk_output_type)))\n+          else:\n+            # The input_type is None, run the default\n+            return (\n+                pcoll\n+                | 'ReifyWindows' >> ParDo(self.ReifyWindows())", "originalCommit": "3e70f16d1abd92c27eb6f54330a7427429827074", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNTQyNA==", "url": "https://github.com/apache/beam/pull/11503#discussion_r424735424", "bodyText": "Done", "author": "rohdesamuel", "createdAt": "2020-05-13T21:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzM5OQ==", "url": "https://github.com/apache/beam/pull/11503#discussion_r424083399", "bodyText": "Hopefully there should be few (if any) methods that need to be inherited, which could simplify this.", "author": "robertwb", "createdAt": "2020-05-12T23:06:10Z", "path": "sdks/python/apache_beam/runners/direct/direct_runner.py", "diffHunk": "@@ -234,7 +234,89 @@ def get_replacement_transform(self, transform):\n       from apache_beam.runners.direct.test_stream_impl import _ExpandableTestStream\n       return _ExpandableTestStream(transform)\n \n+  class GroupByKeyPTransformOverride(PTransformOverride):\n+    \"\"\"A ``PTransformOverride`` for ``GroupByKey``.\n+\n+    This replaces the Beam implementation as a primitive.\n+    \"\"\"\n+    def matches(self, applied_ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+      if (isinstance(applied_ptransform.transform, GroupByKey) and\n+          not getattr(applied_ptransform.transform, 'override', False)):\n+        self.input_type = applied_ptransform.inputs[0].element_type\n+        return True\n+      return False\n+\n+    def get_replacement_transform(self, ptransform):\n+      # Imported here to avoid circular dependencies.\n+      # pylint: disable=wrong-import-order, wrong-import-position\n+      from apache_beam.transforms.core import GroupByKey\n+\n+      # Subclass from GroupByKey to inherit all the proper methods.", "originalCommit": "3e70f16d1abd92c27eb6f54330a7427429827074", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNTY0Nw==", "url": "https://github.com/apache/beam/pull/11503#discussion_r424735647", "bodyText": "Yep, I took out the subclass dependency and simplified the override", "author": "rohdesamuel", "createdAt": "2020-05-13T21:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NDIzOQ==", "url": "https://github.com/apache/beam/pull/11503#discussion_r424084239", "bodyText": "Hmm... this check seems to be vacuous if the element type is already a tuple, right?", "author": "robertwb", "createdAt": "2020-05-12T23:08:31Z", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -404,10 +396,6 @@ def test_gbk_then_flatten_input_visitor(self):\n     flat = (none_str_pc, none_int_pc) | beam.Flatten()\n     _ = flat | beam.GroupByKey()\n \n-    # This may change if type inference changes, but we assert it here\n-    # to make sure the check below is not vacuous.", "originalCommit": "3e70f16d1abd92c27eb6f54330a7427429827074", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MzAyNw==", "url": "https://github.com/apache/beam/pull/11503#discussion_r424753027", "bodyText": "I added it back in. The DataflowRunner should change the element type and we should test before and after.", "author": "rohdesamuel", "createdAt": "2020-05-13T21:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NDIzOQ=="}], "type": "inlineReview"}, {"oid": "986de56ec3178ea85fc6ac5c1bab56ec920e60a1", "url": "https://github.com/apache/beam/commit/986de56ec3178ea85fc6ac5c1bab56ec920e60a1", "message": "Move ReifyWindows etc to DirectRunner, don't subclass from GBK\n\nChange-Id: I9a54cbaadf3968dbb48167cc669088212680d336", "committedDate": "2020-05-13T21:14:36Z", "type": "commit"}, {"oid": "0aa92fe0a808e0f6669725ece6db5bd07591c3cf", "url": "https://github.com/apache/beam/commit/0aa92fe0a808e0f6669725ece6db5bd07591c3cf", "message": "remove references to _GroupByKeyOnly\n\nChange-Id: I0917d6495074204761d91579e5e5572401042a18", "committedDate": "2020-05-13T21:49:05Z", "type": "commit"}, {"oid": "cc405fdc375de0b73797c06f16522f374d511909", "url": "https://github.com/apache/beam/commit/cc405fdc375de0b73797c06f16522f374d511909", "message": "add back the ReifyWindows to the GBK, some internal tests depend on it.\n\nChange-Id: Ibce789eaa56ca93842d94cd23bd6d4aadb05e08d", "committedDate": "2020-05-13T23:25:25Z", "type": "commit"}, {"oid": "e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "url": "https://github.com/apache/beam/commit/e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "message": "Skip checking input determinism for GBKs embedded in x-lang transforms. We can assume safely assume that the expansion service constructs transforms correctly.\n\nChange-Id: I46d40e40ac33933004836681d06f91c031655f06", "committedDate": "2020-05-20T18:36:49Z", "type": "commit"}, {"oid": "e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "url": "https://github.com/apache/beam/commit/e88362ee2cc56f5c58a11fa4e36edbfabb83eb67", "message": "Skip checking input determinism for GBKs embedded in x-lang transforms. We can assume safely assume that the expansion service constructs transforms correctly.\n\nChange-Id: I46d40e40ac33933004836681d06f91c031655f06", "committedDate": "2020-05-20T18:36:49Z", "type": "forcePushed"}]}