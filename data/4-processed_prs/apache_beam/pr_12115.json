{"pr_number": 12115, "pr_title": "[BEAM-7672] dynamically setup acceptable wheel specs according to installed python version", "pr_createdAt": "2020-06-28T08:07:56Z", "pr_url": "https://github.com/apache/beam/pull/12115", "timeline": [{"oid": "177445f0169694962232434718e8ffcf52409100", "url": "https://github.com/apache/beam/commit/177445f0169694962232434718e8ffcf52409100", "message": "[BEAM-7672] dynamically setup acceptable wheel specs according to installed python version", "committedDate": "2020-06-28T07:57:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ3NQ==", "url": "https://github.com/apache/beam/pull/12115#discussion_r448642475", "bodyText": "How about we say \"Cannot get parse Python version from ...\" and append the output?", "author": "tvalentyn", "createdAt": "2020-07-01T22:11:12Z", "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get python version with expected format\")", "originalCommit": "177445f0169694962232434718e8ffcf52409100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyNjU5Ng==", "url": "https://github.com/apache/beam/pull/12115#discussion_r449126596", "bodyText": "It would be better!", "author": "lazylynx", "createdAt": "2020-07-02T16:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ4OA==", "url": "https://github.com/apache/beam/pull/12115#discussion_r448642488", "bodyText": "I think we should not fail but leave acceptableWhlSpecs as empty in this case.", "author": "tvalentyn", "createdAt": "2020-07-01T22:11:15Z", "path": "sdks/python/container/boot.go", "diffHunk": "@@ -127,6 +129,10 @@ func main() {\n \t// Guard from concurrent artifact retrieval and installation,\n \t// when called by child processes in a worker pool.\n \n+\tif err := setupAcceptableWheelSpecs(); err != nil {\n+\t\tlog.Fatalf(\"Failed to setup acceptable wheel specs: %v\", err)", "originalCommit": "177445f0169694962232434718e8ffcf52409100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyODIyNw==", "url": "https://github.com/apache/beam/pull/12115#discussion_r449128227", "bodyText": "It's true. We should only output messages even when error returned.", "author": "lazylynx", "createdAt": "2020-07-02T16:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MjQ4OA=="}], "type": "inlineReview"}, {"oid": "03296b30f337f3c6278d1cef45f3188dce77183e", "url": "https://github.com/apache/beam/commit/03296b30f337f3c6278d1cef45f3188dce77183e", "message": "fixup: update error message when parse failed", "committedDate": "2020-07-02T15:59:43Z", "type": "commit"}, {"oid": "31a265776d190db6990603bd9ddc4f2376f67b3f", "url": "https://github.com/apache/beam/commit/31a265776d190db6990603bd9ddc4f2376f67b3f", "message": "fixup: not to abort when wheel spec setup failed", "committedDate": "2020-07-02T16:00:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4ODE3Ng==", "url": "https://github.com/apache/beam/pull/12115#discussion_r451988176", "bodyText": "Sorry for a slow response. It seems that 3.8 wheels don't follow this pattern, just noticing this while prepring 2.23.0 release. 3.8 wheels look as follows:\napache_beam-2.23.0-cp38-cp38-manylinux1_x86_64.whl\nNot sure why the pattern has changed.", "author": "tvalentyn", "createdAt": "2020-07-09T06:19:45Z", "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,28 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")\n+\t} else {\n+\t\twheelName := fmt.Sprintf(\"cp%s-cp%sm-manylinux1_x86_64.whl\", pyVersion, pyVersion)", "originalCommit": "31a265776d190db6990603bd9ddc4f2376f67b3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwNDk4Mg==", "url": "https://github.com/apache/beam/pull/12115#discussion_r452004982", "bodyText": "Thank you for notification.\nI found that wheel changed naming rule at 0.33.5.\n\n0.33.5 (2019-08-17)\nDon\u2019t add the m ABI flag to wheel names on Python 3.8 (PR by rdb)\nhttps://wheel.readthedocs.io/en/stable/news.html\n\nI'll push a fix tonight, wait a bit.", "author": "lazylynx", "createdAt": "2020-07-09T07:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4ODE3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ1NjU0MQ==", "url": "https://github.com/apache/beam/pull/12115#discussion_r452456541", "bodyText": "Thanks! Also filed https://issues.apache.org/jira/browse/BEAM-10434 to fix the stager.", "author": "tvalentyn", "createdAt": "2020-07-09T19:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4ODE3Ng=="}], "type": "inlineReview"}, {"oid": "86456be0beae4ea7dcc889cf374f8623ad9ce506", "url": "https://github.com/apache/beam/commit/86456be0beae4ea7dcc889cf374f8623ad9ce506", "message": "fixup: not to use m flag at wheel name with python 3.8", "committedDate": "2020-07-09T16:10:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0ODYwMg==", "url": "https://github.com/apache/beam/pull/12115#discussion_r452448602", "bodyText": "Can we move this into the switch as well?  Thank you!", "author": "tvalentyn", "createdAt": "2020-07-09T19:42:30Z", "path": "sdks/python/container/boot.go", "diffHunk": "@@ -170,6 +176,34 @@ func main() {\n \tlog.Fatalf(\"Python exited: %v\", execx.Execute(\"python\", args...))\n }\n \n+// setup wheel specs according to installed python version\n+func setupAcceptableWheelSpecs() error {\n+\tcmd := exec.Command(\"python\", \"-V\")\n+\tstdoutStderr, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tre := regexp.MustCompile(`Python (\\d)\\.(\\d).*`)\n+\tpyVersions := re.FindStringSubmatch(string(stdoutStderr[:]))\n+\tif len(pyVersions) != 3 {\n+\t\treturn fmt.Errorf(\"cannot get parse Python version from %s\", stdoutStderr)\n+\t}\n+\tpyVersion := fmt.Sprintf(\"%s%s\", pyVersions[1], pyVersions[2])\n+\tif pyVersion == \"27\" {\n+\t\tacceptableWhlSpecs = append(acceptableWhlSpecs, \"cp27-cp27mu-manylinux1_x86_64.whl\")", "originalCommit": "86456be0beae4ea7dcc889cf374f8623ad9ce506", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg2ODk4Mw==", "url": "https://github.com/apache/beam/pull/12115#discussion_r452868983", "bodyText": "Updated, PTAL.", "author": "lazylynx", "createdAt": "2020-07-10T14:12:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0ODYwMg=="}], "type": "inlineReview"}, {"oid": "a03ebd61c6ede8b886dcd3be0d4c5da21874d151", "url": "https://github.com/apache/beam/commit/a03ebd61c6ede8b886dcd3be0d4c5da21874d151", "message": "fixup: simplified wheel name setting", "committedDate": "2020-07-10T13:33:51Z", "type": "commit"}]}